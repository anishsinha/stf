@model AssetDropViewModel

@using (Html.BeginCollectionItem("Assets"))
{
<div class="row partial-block asset-drop">
    <div class="col-sm-12 text-right">
            <label class="dd-dropstatus">@Html.DisplayFor(m => m.DropStatusName)</label>
            @*@Html.DropDownListFor(m => m.DropStatusId, new SelectList(CommonHelperMethods.GetAllDropStatus(), "Id", "Name"), new { @class = "form-control dd-dropstatus" })*@
            @Html.ValidationMessageFor(m => m.DropStatusId)
    </div>
    <div class="col-sm-2 break-word">
        @Html.HiddenFor(m => m.Id, new { @class = "assetId" })
        @Html.HiddenFor(m => m.OrderId)
        @if (Model.JobXAssetId > 0)
        {
            @Html.HiddenFor(m => m.AssetName)
        }
        @Html.HiddenFor(m => m.JobXAssetId, new { @class = "JobXAssetId" })
        @Html.HiddenFor(m => m.MeterStartReading)
        @Html.HiddenFor(m => m.MeterEndReading)
        @Html.HiddenFor(m => m.DropStatusId)
        @Html.HiddenFor(m => m.IsNewAsset)
        @Html.HiddenFor(m => m.AssetType, new { @class = "assetType" })

        @if (Model.Image != null)
        {
            @Html.HiddenFor(m => m.Image.Id)
            @Html.HiddenFor(m => m.Image.Data)
            @Html.HiddenFor(m => m.Image.IsRemoved)
        }
        <div class="form-group mb10">
            @Html.LabelFor(m => m.AssetName, new { @class = "f-normal asset-name" })
            @Html.TextBoxFor(m => m.AssetName, new { @class = "form-control assetName" }).IsReadonly(Model.JobXAssetId > 0)
            @Html.ValidationMessageFor(m => m.AssetName)
        </div>
    </div>
    <div class="col-sm-1 disable-notfilled @(Model.DropStatusId == (int)DropStatus.None? "" : "pntr-none subSectionOpacity")">
        <div class="form-group mb0">
            @*@if (Model.UoM == UoM.Barrels || Model.UoM == UoM.MetricTons)
        {
            if (Model.JobCountryId == (int)Country.USA)
            {
                <label class="f-normal">@Resource.lblGallons</label>
            }
            else if (Model.JobCountryId == (int)Country.CAN)
            {
                <label class="f-normal">@Resource.lblLitres</label>
            }
        }
        else
        {
            <label class="f-normal">@Model.UoM</label>
        }*@
            <label class="f-normal">Quantity</label>
            @Html.TextBoxFor(m => m.DropGallons, new { @class = "dropquantity form-control drop-input" })
            @Html.ValidationMessageFor(m => m.DropGallons)
        </div>
    </div>
    <div class="col-sm-8 disable-notfilled @(Model.DropStatusId == (int)DropStatus.None? "" : "pntr-none subSectionOpacity")">
        <div class="row">
            <div class="col-sm-2">
                <div class="form-group mb0">
                    @Html.LabelFor(m => m.StartTime, new { @class = "f-normal" })
                        @Html.TextBoxFor(m => m.StartTime, new { @class = "starttime form-control timepicker-withseconds aaa" })
                        @Html.ValidationMessageFor(m => m.StartTime)
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group mb0">
                    @Html.LabelFor(m => m.EndTime, new { @class = "f-normal" })
                        @Html.TextBoxFor(m => m.EndTime, new { @class = "endtime form-control timepicker-withseconds" })
                        @Html.ValidationMessageFor(m => m.EndTime)
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group mb0">
                    @Html.LabelFor(m => m.PreDip)
                        @Html.TextBoxFor(m => m.PreDip, new { @class = "predip form-control" })
                        @Html.ValidationMessageFor(m => m.PreDip)
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group mb0">
                    @Html.LabelFor(m => m.PostDip)
                        @Html.TextBoxFor(m => m.PostDip, new { @class = "postdip form-control" })
                        @Html.ValidationMessageFor(m => m.PostDip)
                </div>
            </div>
            @if (Model.JobXAssetId > 0 && Model.IsDipDataRequired)
            {
                <div class="col-sm-3">
                    <div class="form-group mb0">
                        @Html.LabelFor(m => m.TankScaleMeasurement)
                            @Html.DropDownListFor(m => m.TankScaleMeasurement, new SelectList(CommonHelperMethods.GetTankScaleMeasurementList(Model.AssetType,(int)Model.UoM,Model.TankMakeModel), "Id", "Name", Model.TankScaleMeasurement),
          string.Format(Resource.valMessageSelect, Resource.lblUomShort), new { @class = "form-control tankScale" })
                            @Html.ValidationMessageFor(m => m.TankScaleMeasurement)
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="col-sm-1 fs18 mt25 mb10">
        <a href="javascript:void(0)" class="fa fa-trash-alt color-maroon mt7" title="Remove" onclick="removePartialAndUpdate(this);"></a>
    </div>
</div>
}        