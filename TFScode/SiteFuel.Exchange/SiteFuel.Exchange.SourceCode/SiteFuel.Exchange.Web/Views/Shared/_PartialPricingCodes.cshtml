@model PricingCodeDetailViewModel
<div class="col-sm-12 pricing-codes">
    @Html.Label(Resource.lblPricingCode)<span class="required pl4">*</span>
</div>
<div class="col-sm-6">
    <div class="form-group">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Description)
        <div class="pa bg-white top0 left0 loading-wrapper pricingcode-loader hide-element mt5"><span class='spinner-dashboard pa'></span></div>
        @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @placeholder = Resource.lblPricingCode })
        @Html.ValidationMessageFor(m => m.Code)
    </div>
</div>
<div id="modal-pricing-codes" class="modal fade" role="dialog" tabindex="-1" data-backdrop="static" keyboard="false">
    <div class="modal-dialog modal-lg modal-pricingcode-details" role="document">
        <div class="modal-content">
            <div class="modal-header pb0 pl20 no-border">
               
                <h2 class="text-left mt0 mb0 fs21">@Resource.lblPricingCode   <a class="close color-grey pull-right pa actions" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></a></h2>
            </div>
            <div class="modal-body" id="pricing-code-detail">
                @Html.Partial("_PartialPricingCodesGrid")
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var pricingUrl = "@Url.Action("GetPricingCodes", "Profile", new { area = "Settings" })";
    $(document).ready(function () {
        var displayPricingCode = $("#@Html.IdFor(m => m.Description)").val();
        if (displayPricingCode != undefined ) {
            showPricingCodeDetails(displayPricingCode);
        }
        else {
            showPricingCodeDetails("");
        }

        autoCompletedataTextBox("#@Html.IdFor(m => m.Code)", pricingUrl);
        function autoCompletedataTextBox(element, url) {
            var target = $(element);
            target.focus(function () {
                target.autocomplete("search", "  ");
            });
            var pricingCodeId = 0;
            target.autocomplete({
                source: function (request, response) {
                    $(".pricingcode-loader").show();
                    var filterData = getPricingFilter();
                    filterData["Prefix"] = request.term;
                    $.ajax({
                        url: url,
                        type: "GET",
                        dataType: "json",
                        data: filterData,
                        success: function (result) {
                            response($.map(result.PricingCodes, function (item) {
                                return {
                                    label: item.Code,
                                    id: item.Id,
                                    value: { displayData: getPricingDisplayData(item), sourceId: item.PricingSourceId }
                                };
                            }));
                        },
                        complete: function (event, xhr, settings) {
                            $(".pricingcode-loader").hide();
                        }
                    })
                },
                select: function (event, ui) {
                    isSelected = true;
                    $(target).val(ui.item.label); // display the selected text
                    pricingCodeId = ui.item ? ui.item.id : 0;
                    var pricingSourceId = ui.item.value.sourceId;
                    displayData = (ui.item.label == ui.item.value.displayData) ? "" : ui.item.value.displayData;
                    if (pricingCodeId != 0) {
                        $("#@Html.IdFor(m => m.Id)").val(pricingCodeId).trigger('change');
                        $("#@Html.IdFor(m => m.Description)").val(displayData);
                        $(".ddl-pricing-source").val(pricingSourceId);
                        $(".ddl-pricing-source").trigger("change");
                        showPricingCodeDetails(displayData);
                    }
                    else {
                        showPricingCodeDetails("");
                    }
                    return false;
                },
                change: function (ev, ui) {
                    if (!ui.item) {
                        $(this).val('');
                        $("#@Html.IdFor(m => m.Id)").val(0);
                        $("#@Html.IdFor(m => m.Description)").val('');
                        showPricingCodeDetails("");
                        validationMessageFor($("#@Html.IdFor(m => m.Code)").attr('name'),
                            '@ResourceMessages.GetMessage(Resource.lblSelectPricingCode)');
                    }
                },
                messages: {
                    noResults: '',
                    results: function () { }
                },
                minLength: 2,
                maxShowItems: 10,
                scroll: true
            });
            $.ui.autocomplete.prototype._resizeMenu = function () {
                var ul = this.menu.element;
                ul.outerWidth(this.element.outerWidth());
            }
            $(".ui-autocomplete").attr("data-pricing-code", "dropdown");//for automation mapping
        }
    });

    function updatePricingCodeDetails(id, code, displayData, sourceId) {
        hidePricingPopUp();
        $("#@Html.IdFor(m => m.Id)").val(id);
        $("#@Html.IdFor(m => m.Code)").val(code);
        $("#@Html.IdFor(m => m.Description)").val(displayData);
        $(".ddl-pricing-source").val(sourceId);
        $(".ddl-pricing-source").trigger("change");
        showPricingCodeDetails(displayData);
    }

    function hidePricingPopUp() {
        $("#modal-pricing-codes button").trigger('click');
    }

    function showPricingCodeDetails(displayData) {
        if (displayData != "" && displayData != undefined) {
            var data = "Code Details: " + displayData;
            $("#pricing-code-info label").html(data);
            $("#pricing-code-info").show();
            $('#modal-pricing-codes').modal('hide');
        }
        else {
            $("#pricing-code-info").hide();
        }
    }
</script>
