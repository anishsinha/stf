@model InvoicePdfViewModel
@using System.Threading
@{
	bool IsTaxModified = false;
	Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(Model.Culture);
}
<style type="text/css">
	* {
		margin: 0 auto;
	}

	td, th {
		padding: 0;
	}

	.mh0 {
		margin-left: 0px !important;
		margin-right: 0px !important;
	}

	h2 {
		font-size: 20px;
	}

	.content {
		width: 100%;
		max-width: 100%;
	}

	.special-instuctions {
		list-style-type: none;
	}

		.special-instuctions li:before {
			content: " - ";
		}

	.content1 {
		width: 100%;
		max-width: 100%;
		margin: 0;
	}

	.img-logo {
		max-height: 100px;
	}

	.txt1 {
		font-size: 12px;
		line-height: 20px;
		text-align: left !important;
		vertical-align: top;
	}

	.txt2 {
		font-size: 12px;
		font-weight: normal;
		text-align: right !important;
		padding-right: 10px;
		vertical-align: top;
	}

	.txt3 {
		font-size: 12px;
		line-height: 20px;
		padding-left: 10px;
		text-align: left !important;
	}

	.txt_rig {
		text-align: right !important;
		padding-right: 10px;
	}

	.txt4 {
		font-size: 13px;
		line-height: 20px;
		text-align: right !important;
		padding-right: 10px;
	}

	.txt5 {
		font-size: 12px;
		line-height: 20px;
		text-align: left !important;
	}

	.border {
		background: #244397;
		border: 0px;
		height: 3px;
		margin-bottom: 0;
		width: 98%;
	}

	table tr th {
		color: #1a3a92;
		font-size: 13px;
		font-weight: bold;
	}

	.thead {
		text-align: left;
		padding-left: 10px;
	}

	.border-top-blue, .border-top-blue > td, .border-top-blue > th {
		border-top: 3px solid #244397;
	}

	.condition {
		font-size: 10px;
		line-height: 20px;
		text-align: left !important;
		padding-right: 35px;
	}

	.total {
		font-size: 13px;
		border: 2px solid #273679;
		border-right: 0px;
	}

	.full-border {
		font-size: 13px;
		border: 2px solid #273679;
	}

	.note {
		font-size: 13px;
		border: 2px solid #273679;
		padding: 10px;
	}

	.t_left {
		text-align: left !important;
	}

	.t_right {
		text-align: right !important;
		padding-right: 10px;
	}

	.t_italic {
		font-style: italic;
	}

	.content1 tr td:empty {
		display: none;
	}

	.pr-10 {
		padding-right: 10px;
	}

	.pl-10 {
		padding-left: 10px;
	}

	.pr-5 {
		padding-right: 5px;
	}

	.pl-5 {
		padding-left: 5px;
	}

	.pl-15 {
		padding-left: 15px;
	}

	.pt-5 {
		padding-top: 5px;
	}

	.pb-5 {
		padding-bottom: 5px;
	}

	.pb-10 {
		padding-bottom: 10px;
	}

	.pl-25 {
		padding-left: 25px;
	}

	.pr-0 {
		padding-right: 0px
	}

	.pl-0 {
		padding-left: 0px
	}

	.pa-5 {
		padding: 5px;
	}

	th {
		height: 30px;
	}

	.border-top-blue3 {
		border-top: 3px solid #244397;
	}

	.border-top-gray,
	.border-top-gray > td {
		border-top: 2px solid #d3d3d3;
	}

	.border-all-blue {
		border: 2px solid #244397;
	}

	.po-description {
		width: 98%;
	}

		.po-description td {
			padding-top: 3px;
			padding-bottom: 3px;
		}

	.po-innertable {
		width: 100%;
	}

	.po-logo {
		max-height: 100px;
	}

	.pt10 {
		padding-top: 10px;
	}

	.pb10 {
		padding-bottom: 10px;
	}

	.label-primary,
	.badge-primary {
		background-color: #1ab394;
		color: #FFFFFF;
		border-radius: .25em;
		padding: .2em .6em .3em;
	}

	.label-danger,
	.badge-danger {
		background-color: #ed5565;
		color: #FFFFFF;
		border-radius: .25em;
		padding: .2em .6em .3em;
	}

	.border-top-lightgray > td {
		border-top: 1px solid #e7e3e3;
	}

	.no-border tr:last-child td {
		border-bottom: 0px;
	}

	.font-extrabold {
		font-weight: 600
	}

	. {
		color: #1a3a92 !important
	}

		.txt-highlight, .txt-highlight label {
			color: #dc3c0c !important;
		}

		.tbl-additionalfee tr:first-child td {
			border-top: none;
		}

		.font-bold {
			font-weight: bold;
		}

		.fs13 {
			font-size: 13px;
		}

		.invoiceamount-section tr td {
			white-space: nowrap !important;
		}

		.bg-void, .bg-exception {
			border: 10px solid rgba(255, 0, 0, .4);
			font-size: 150px;
			color: rgba(255, 0, 0, .4);
			padding: 15px 20px;
			position: absolute;
			-ms-transform: rotate(-20deg);
			-webkit-transform: rotate(-20deg);
			transform: rotate(-20deg);
		}

		.bg-void {
			width: 400px;
			top: 20%;
			left: 50%;
			margin-left: -200px;
		}

		.bg-exception {
			min-width: 400px;
			top: 35%;
			left: 45%;
			margin-left: -200px;
			font-size: 100px;
		}
</style>

@{
	var currency = Model.FuelRequest.FuelDetails.FuelPricing.Currency;
	var uom = Model.FuelRequest.FuelDetails.FuelQuantity.UoM;
}
<div class="well">
	<table width="100%" border="0" cellpadding="0" cellspacing="0" style=" font-family: 'Open Sans',Tahoma,Calibri,verdana;font-weight: 400;color: #5a5a5a;font-size:12px;" class="mb15">
		<tr>
			<td>
				<table bgcolor="#ffffff" class="content" align="center" cellpadding="0" cellspacing="0" border="0">
					<tr>
						<td>
							<table class="content1" align="center" border="0" cellpadding="0" cellspacing="0">
								<tr>
									<td colspan="3" align="center" style="padding:10px 0 50px 0;">
										@if (Model.Invoice.WaitingForAction == (int)WaitingAction.ExceptionApproval && Model.Invoice.IsDigitalDropTicket() || Model.Invoice.IsExceptionDdt)
										{
											<div class="bg-exception">Exception</div>
										}
										else if (Model.Invoice.InvoiceVersionStatusId == (int)InvoiceVersionStatus.InActive)
										{
											<div class="bg-void">@Resource.lblVoid</div>
										}
										@if (Model.Invoice.IsDigitalDropTicket())
										{
											<h2 style="font-weight:bold;">@Resource.tabheadingDropTicket: @Model.Invoice.InvoiceNumber.Number</h2>
										}
										else if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit)
										{
											<h4 class="dib">@Resource.headingCreditMemo: @Model.Invoice.InvoiceNumber.Number</h4>
										}
										else if (!string.IsNullOrWhiteSpace(Model.CreditInvoiceDisplayNumber) && Model.Invoice.DisplayInvoiceNumber != Model.CreditInvoiceDisplayNumber)
										{
											<h4 class="dib">@Resource.headingRebilledInvoice: @Model.Invoice.InvoiceNumber.Number</h4>
										}
										else
										{
											<h2 style="font-weight:bold">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice ? Resource.headingCreditMemo : Resource.tabheadingInvoice): @Model.Invoice.InvoiceNumber.Number</h2>
										}
									</td>
								</tr>
								<tr>
									@if (Model.CompanyLogo.Data == null)
									{
										<td id="auto-supplieraddressinvoicepdf" class="txt1 pl-10" colspan="2">
											@Model.SupplierCompanyName<br />
											@Model.SupplierLocation.Address<br />
											@Model.SupplierLocation.City, @Model.SupplierLocation.StateCode @Model.SupplierLocation.ZipCode<br />
											<span class="phone">@Model.PhoneNumber</span>
										</td>
									}
									else
									{
										<td align="center" width="15%" style="padding-bottom:20px;" class="logo_w">
											<img id="image-ctrl" class="po-logo" src="@Html.ImageSrc(Model.CompanyLogo.Data)" alt="@Model.SupplierCompanyName" />
										</td>
										<td id="auto-supplieraddressinvoicepdf" class="txt1 pl-10">
											@Model.SupplierCompanyName<br />
											@Model.SupplierLocation.Address<br />
											@Model.SupplierLocation.City, @Model.SupplierLocation.StateCode @Model.SupplierLocation.ZipCode<br />
											<span class="phone">@Model.PhoneNumber</span>
										</td>
									}

									<td class="pr-10">
										<table align="right" class="mh0">
											@if (Model.PickUpLocation != null && Model.PickUpLocation.LocationType == (int)PickupLocationType.Terminal)
											{
												if (!string.IsNullOrWhiteSpace(Model.Invoice.BolDetails.BolNumber))
												{
													<tr>
														<td class="t_right txt1" style="font-weight:bold;font-size:14px;color:#1a3a92;">@Resource.lblBOL: </td>
														<td style="font-weight:bold;font-size:14px;color:#1a3a92;">@(!(string.IsNullOrWhiteSpace(Model.Invoice.BolDetails.BolNumber)) ? Model.Invoice.BolDetails.BolNumber : Resource.lblHyphen)</td>
													</tr>
}
											}
											else if (Model.IsFTL)
											{
												<tr>
													<td class="t_right txt1" style="font-weight:bold;font-size:14px;color:#1a3a92;">@Resource.lblLiftTicketNumber: </td>
													<td style="font-weight:bold;font-size:14px;color:#1a3a92;">@(!(string.IsNullOrWhiteSpace(Model.Invoice.BolDetails.LiftTicketNumber)) ? Model.Invoice.BolDetails.LiftTicketNumber : Resource.lblHyphen)</td>
												</tr>
}
											@if (!string.IsNullOrWhiteSpace(Model.Invoice.BolDetails.Carrier))
											{
												<tr>
													<td class="t_right txt1">@Resource.lblCarrier: </td>
													<td align="left" class="t_left txt1">@(!(string.IsNullOrWhiteSpace(Model.Invoice.BolDetails.Carrier)) ? Model.Invoice.BolDetails.Carrier : Resource.lblHyphen)</td>
												</tr>
											}
											@if (@Model.Invoice.Version > 1 && Model.Invoice.InvoiceTypeId != (int)InvoiceType.DigitalDropTicketManual && Model.Invoice.InvoiceTypeId != (int)InvoiceType.DigitalDropTicketMobileApp)
											{
												<tr>
													<td class="t_right txt1">
														<span>
															@Resource.gridColumnVersion: 
														</span>
													</td>
													<td align="left" class="t_left txt1">
														@string.Format("v{0}", @Model.Invoice.Version)
													</td>
												</tr>
											}
											<tr>
												<td class="t_right txt1">
													@if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.DigitalDropTicketManual || Model.Invoice.InvoiceTypeId == (int)InvoiceType.DigitalDropTicketMobileApp)
													{
														<span>
															@Resource.lblDropTicketDate: 
														</span>
													}
													else
													{
														<span>
															@((Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit) ? Resource.lblCreditMemoDate : Resource.lblInvoiceDate) :
														</span>
													}
												</td>
												<td align="left" class="t_left txt1">
													@Model.Invoice.UpdatedDate.ToString(Resource.constFormatDate)
												</td>
											</tr>
											@if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit)
											{
												<tr>
													<td class="t_right txt1">
														<span>
															@Resource.lblOriginalInvoiceNumber: 
														</span>
													</td>
													<td align="left" class="t_left txt1">
														@Model.OriginalInvoiceNumber
													</td>
												</tr>
											}
											@if (Model.Invoice.InvoiceTypeId != (int)InvoiceType.CreditInvoice && Model.Invoice.InvoiceTypeId != (int)InvoiceType.PartialCredit)
											{
												<tr>
													<td class="t_right txt1">@Resource.lblPaymentTerms: </td>
													<td align="left" class="t_left txt1">
														@Model.PaymentTermName
														@if (Model.PaymentTermId == (int)PaymentTerms.NetDays)
														{
															<span>@Model.NetDays</span>
														}
													</td>
												</tr>
											}
											@if (Model.Invoice.InvoiceTypeId != (int)InvoiceType.DigitalDropTicketManual && Model.Invoice.InvoiceTypeId != (int)InvoiceType.CreditInvoice && Model.Invoice.InvoiceTypeId != (int)InvoiceType.PartialCredit && Model.Invoice.InvoiceTypeId != (int)InvoiceType.DigitalDropTicketMobileApp && string.IsNullOrEmpty(Model.Invoice.StatementNumber))
											{
												<tr><td class="t_right txt1">@Resource.lblPaymentDueDate: </td><td align="left" class="t_left txt1"> @Model.Invoice.PaymentDueDate.ToString(Resource.constFormatDate)</td></tr>
											}
											<tr><td class="t_right txt1">@Resource.lblPoNumber: </td><td align="left" class="t_left txt1"> @Model.PoNumber</td></tr>
											<tr><td class="t_right txt1">@Resource.lblCustomerId: </td><td align="left" class="t_left txt1"> @Model.CustomerId</td></tr>
											@if (!string.IsNullOrWhiteSpace(@Model.Invoice.WBSNumber))
											{
												<tr><td class="t_right txt1">@Resource.lblWBSNumber: </td><td align="left" class="t_left txt1"> @Model.Invoice.WBSNumber</td></tr>
											}
											@if (@Model.Invoice.QbInvoiceNumber != "" && @Model.Invoice.QbInvoiceNumber != null)
											{
												<tr><td class="t_right txt1">@Resource.lblQbInvoiceNumber: </td><td align="left" class="t_left txt1"> @Model.Invoice.QbInvoiceNumber</td></tr>
											}
											@if (!string.IsNullOrEmpty(Model.Invoice.StatementNumber))
											{
												<tr><td class="t_right txt1">@Resource.gridColumnStatementNumber: </td><td align="left" class="t_left txt1"> @Model.Invoice.StatementNumber</td></tr>
											}
										</table>
									</td>
								</tr>
								<tr>
									<td colspan="3" style="padding-top:20px;"><div class="border"></div></td>
								</tr>
								<tr>
									<td colspan="3" style="padding-top:20px;">
										<table border="0" width="98%">
											<tr>
												<th align="left" style="text-decoration:underline;font-weight:bold;">@Resource.headingBillingAddress</th>
												<th align="left" style="text-decoration:underline;font-weight:bold;">@Resource.headingContactPerson</th>
												@if (Model.PickUpLocation != null)
												{
													<th align="left" style="text-decoration:underline;font-weight:bold;">@Resource.headingPickUpLocation</th>
												}
												<th align="right" style="text-align:right;text-decoration:underline;font-weight:bold;">@Resource.lblShipTo</th>
											</tr>
											<tr>
												<td class="txt1" align="left" width="16%" style="padding-right:10px">
													@Model.BuyerCompanyName<br>
													@Model.BuyerLocation.Address<br>
													@Model.BuyerLocation.City, @Model.BuyerLocation.StateCode @Model.BuyerLocation.ZipCode<br>
												</td>
												<td class="txt1" width="16%">
													@Model.PoContact.Name<br>
													@if (@Model.PoContact.PhoneNumber == "")
													{<span> - </span>            }
													<span class="phone">@Model.PoContact.PhoneNumber </span><br>
													@Model.PoContact.Email
												</td>

												@if (Model.PickUpLocation != null)
												{
                                                <td class="txt1" align="left" width="25%" style="padding-right:10px">
                                                    @if (Model.PickUpLocation.LocationType == (int)PickupLocationType.Terminal)
                                                    {
                                                        @Model.PickupTerminal<br>
                                                    }
                                                    else
                                                    {
                                                       <span>@Model.BulkPlantName:<br></span>
                                                    }
                                                    @Model.PickUpLocation.Address<br>
                                                    @Model.PickUpLocation.City, @Model.PickUpLocation.StateCode @Model.PickUpLocation.ZipCode<br>
                                                </td>
												}
												<td class="txt1" align="right" style="text-align:right !important">
													@Model.FuelRequest.Job.Name
													@if (!string.IsNullOrWhiteSpace(Model.Invoice.DisplayJobID))
													{
														<span>(@Model.Invoice.DisplayJobID)</span>
													}<br>
													@if (!string.IsNullOrWhiteSpace(Model.ShippingLocation.Address))
													{
														<div>
															@Model.ShippingLocation.Address<br>
															@Model.ShippingLocation.City, @Model.ShippingLocation.StateCode @Model.ShippingLocation.ZipCode<br>
														</div>
													}
													else
													{
														<div>
															@Model.ShippingLocation.StateCode
														</div>
													}
													@if (Model.Invoice.InvoiceTypeId != (int)InvoiceType.DryRun && Model.Invoice.InvoiceTypeId != (int)InvoiceType.Balance && Model.Invoice.InvoiceTypeId != (int)InvoiceType.TankRental && Model.Invoice.InvoiceTypeId != (int)InvoiceType.PartialCredit && Model.IsFTL && (Model.PickUpLocation != null && Model.PickUpLocation.LocationType == (int)PickupLocationType.Terminal))
                                                    {
														<br />
														<div style="border:1px solid #1a3a92;display:inline-block;padding:5px;font-weight:bold;margin-top:10px;">
															@if ((Model.PickUpLocation != null && Model.PickUpLocation.LocationType == (int)PickupLocationType.Terminal) || Model.IsFTL)
															{
																<div>
																	<span>@Resource.lblGrossQuantity : @(Model.Invoice.BolDetails.GrossQuantity.HasValue ? string.Format("{0:N4}", Model.Invoice.BolDetails.GrossQuantity) + " " + uom.ToString() : Resource.lblHyphen)</span>
																</div>
																<div>
																	<span>@Resource.lblNetQuantity : @(Model.Invoice.BolDetails.NetQuantity.HasValue ? string.Format("{0:N4}", Model.Invoice.BolDetails.NetQuantity) + " " + uom.ToString() : Resource.lblHyphen)</span>
																</div>
															}
														</div>
													}
												</td>
											</tr>
										</table>
									</td>
								</tr>
								<tr>
									<td colspan="3" style="padding-top:20px;"> <div class="border"></div></td>
								</tr>
								<tr>
									<td colspan="3">
										<table id="invoice-pricing" border="0" width="98%" cellpadding="0" cellspacing="0" class="po-description">
											<tr class="border-bottom-blue">
												<th width="33%" class="t_left">@Resource.lblFuelType/@Resource.lblDescription</th>
												@if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.TankRental)
												{
													<th width="22%" class="t_left pl-10">Rent Period</th>
}
												else
												{
													<th width="22%" class="t_left pl-10">@Resource.gridColumnDeliveryDateAndTime</th>
}
												<th class="txt_rig" width="15%">@Resource.lblQty</th>
												@if (!Model.Invoice.ShouldHidePricing())
												{
													if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.Balance || Model.Invoice.InvoiceTypeId == (int)InvoiceType.TankRental || (Model.OriginalInvoiceType == (int)InvoiceType.Balance || Model.OriginalInvoiceType == (int)InvoiceType.TankRental))
													{
														<th class="txt_rig" width="14.6%">Rate</th>
}
													else
													{
														<th class="txt_rig" width="14.6%">@(string.Format(Resource.lblRackPP, currency == Currency.USD ? "PPU" : "PPU"))</th>
}
													<th class="txt_rig" width="15%">@Resource.gridColumnAmount</th>
}
											</tr>
											@if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.DryRun)
											{
												<tr>
													<td class="txt3 t_left">@Resource.lblDryRunFee<br />@Model.TerminalName</td>
													<td class="txt3 t_left" valign="top">@Model.Invoice.DropEndDate.ToString(Resource.constFormatDate) @(Model.Invoice.DropStartDate.DateTime.ToShortTimeString()) - @(Model.Invoice.DropEndDate.DateTime.ToShortTimeString())</td>
													<td class="txt3 txt_rig" valign="top"><span>-</span></td>
													@if (!Model.Invoice.ShouldHidePricing())
													{
														<td class="txt3 txt_rig" valign="top"><span>-</span></td>
														<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.Invoice.BasicAmount.ToString("N2") @currency</td>
}
												</tr>
}
											else if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.TankRental || ((Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice|| Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit) && Model.OriginalInvoiceType == (int)InvoiceType.TankRental))
											{
												<tr><td colspan="5"><div class="border" style="width:100%;margin-bottom:-3px;"></div></td></tr>if (Model.FuelFees.FuelRequestFees.Any(t => t.FeeTypeId.Equals(((int)FeeType.TankRental).ToString())))
												{
													foreach (var item in Model.FuelFees.FuelRequestFees.Where(t => t.FeeTypeId.Equals(((int)FeeType.TankRental).ToString())))
													{
														<tr>
															<td class="txt3 t_left">Tank Rental for @item.OtherFeeDescription</td>
															@if (item.EndTime.HasValue)
															{
																<td class="txt3 t_left" valign="top">@item.StartTime.Value.ToString(Resource.constFormatDate) -  @item.EndTime.Value.ToString(Resource.constFormatDate)</td>
															}
															else if(item.StartTime.HasValue)
															{
																<td class="txt3 t_left" valign="top">@item.StartTime.Value.ToString(Resource.constFormatDate)</td>
}
															else
															{
																<td class="txt3 t_left" valign="top">--</td>
}
															<td class="txt3 txt_rig" valign="top"><span>@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? "-"+(-1*item.FeeSubQuantity).GetPreciseValue(2) : item.FeeSubQuantity.GetPreciseValue(2))</span></td>
															@if (!Model.Invoice.ShouldHidePricing())
															{
																<td class="txt3 txt_rig" valign="top"><span>@Resource.constSymbolCurrency@item.Fee.Value.ToString("N2")</span></td>
																<td class="txt3 txt_rig" valign="top">@((item.TotalFee).GetInvoiceAmountValue(2, Resource.constSymbolCurrency)) @currency</td>
}
														</tr>
}
													<tr><td colspan="5"><div class="border" style="width:100%;margin-bottom:-3px;"></div></td></tr>
}
												if (Model.FuelFees.FuelRequestFees.Any(t => !t.FeeTypeId.Equals(((int)FeeType.TankRental).ToString())))
												{
													foreach (var fee in Model.FuelFees.FuelRequestFees.Where(t => !t.FeeTypeId.Equals(((int)FeeType.TankRental).ToString()) && !t.FeeTypeId.Equals(((int)FeeType.ProcessingFee).ToString()) && t.Fee.HasValue))
													{
														var feeTypeId = Convert.ToInt32(fee.FeeTypeId);
														<tr class="border-top-lightgray">
															@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
															{
																<td class="txt3" valign="top">
																	<span class="font-extrabold">@(((FeeType)feeTypeId).GetDisplayName())</span>
																	<span class="font-italic">@Resource.lblFlatFee</span>
																</td>
																<td class="txt3 txt_rig font-italic" valign="top"> </td>
																<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice ? -1 : 1)</td>
																<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@(Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, Resource.constSymbolCurrency)) @currency</td>
}
														</tr>
}
													<tr><td colspan="5"><div class="border" style="width:100%;margin-bottom:-3px;"></div></td></tr>
}
											}
											else
											{
												if (Model.Invoice.InvoiceTypeId != (int)InvoiceType.Balance && Model.OriginalInvoiceType != (int)InvoiceType.Balance)
												{
													<tr class="border-top-blue">
														<td class="break-word" valign="top">
															@if (Model.FuelRequest.FuelDetails.FuelDisplayGroupId == (int)ProductDisplayGroups.OtherFuelType && !string.IsNullOrWhiteSpace(Model.FuelRequest.FuelDetails.NonStandardFuelDescription))
															{
																<span>@Model.FuelRequest.FuelDetails.FuelType/@Model.FuelRequest.FuelDetails.NonStandardFuelDescription</span>
}
															else
															{
																<span>
																	@Model.FuelRequest.FuelDetails.FuelType
																</span>
}
															<br />
															@if (!string.IsNullOrWhiteSpace(Model.TerminalName))
															{
																<i class="pl15" id="lblTerminalName">@Resource.lblTerminal: @Model.TerminalName</i>
}
														</td>
														<td class="txt3" valign="top">@Model.Invoice.DropEndDate.ToString(Resource.constFormatDate) @(Model.Invoice.DropStartDate.DateTime.ToString(Resource.constFormat12HourTime2)) - @(Model.Invoice.DropEndDate.DateTime.ToString(Resource.constFormat12HourTime2))</td>
														<td class="txt3 txt_rig" valign="top">
															@if (Model.Invoice.DroppedGallons > 0)
															{
																@Model.Invoice.DroppedGallons.GetCommaSeperatedValue() @(Model.IsFTL && Model.Invoice.DroppedGallons == Model.Invoice.GetBolQuantity() ? (Model.Invoice.QuantityIndicatorTypeId == (int)QuantityIndicatorTypes.Net ? Resource.lblNetIndicator : Resource.lblGrossIndicator) : string.Empty)
}
															else if (Model.Invoice.DroppedGallons != 0)
															{
																@Model.Invoice.DroppedGallons.GetCommaSeperatedValue() @(Model.IsFTL && Model.Invoice.DroppedGallons != 0 ? (Model.Invoice.QuantityIndicatorTypeId == (int)QuantityIndicatorTypes.Net ? Resource.lblNetIndicator : Resource.lblGrossIndicator) : string.Empty)
}
															else
															{
																@Resource.lblHyphen
}
														</td>
														@if (!Model.Invoice.ShouldHidePricing())
														{
															<td class="txt3 txt_rig" valign="top" id="auto-txtRackPPGAmount">
																@if (Model.FuelRequest.FuelDetails.FuelPricing.PricingTypeId == (int)PricingType.Tier)
																{
																	@Resource.lblTier @*currently not in use*@
}
																else
																{
																	if (!Model.IsBuyAndSellOrder)
																	{
																		<div>@string.Concat(@Resource.constSymbolCurrency, @Model.Invoice.PricePerGallon.ToString(ApplicationConstants.DecimalFormat4WOZero), " ", currency)</div>if (Model.FuelRequest.FuelDetails.FuelPricing.PricingTypeId == (int)PricingType.RackAverage
																		|| Model.FuelRequest.FuelDetails.FuelPricing.PricingTypeId == (int)PricingType.RackLow
																		|| Model.FuelRequest.FuelDetails.FuelPricing.PricingTypeId == (int)PricingType.RackHigh)
																		{
																			<div>(@Model.Invoice.PricePerGallonDisplay)</div>
}
																	}
																	else if (Model.IsBuyAndSellOrder && Model.BuyAndSellPricingDetail.IsBuyPriceInvoice)
																	{
																		<div>@Resource.constSymbolCurrency@Model.BuyAndSellPricingDetail.BuyPrice.ToString(ApplicationConstants.DecimalFormat4WOZero) @currency</div>
																		<div class="fs12">(@Resource.constSymbolCurrency@Model.BuyAndSellPricingDetail.BasePrice.ToString(ApplicationConstants.DecimalFormat4WOZero) + @Resource.constSymbolCurrency@Model.BuyAndSellPricingDetail.BrokerMarkUp.ToString(ApplicationConstants.DecimalFormat4WOZero)) @currency</div>
																		<div class="fs12">(@Model.BuyAndSellPricingDetail.BuyPriceDetail)</div>
}
																	else if (Model.IsBuyAndSellOrder && !Model.BuyAndSellPricingDetail.IsBuyPriceInvoice)
																	{
																		<div>@Resource.constSymbolCurrency@Model.BuyAndSellPricingDetail.SellPrice.ToString(ApplicationConstants.DecimalFormat4WOZero)</div>
																		<div class="fs12">(@Resource.constSymbolCurrency@Model.BuyAndSellPricingDetail.BuyPrice.ToString(ApplicationConstants.DecimalFormat4WOZero) + @Resource.constSymbolCurrency@Model.BuyAndSellPricingDetail.SupplierMarkUp.ToString(ApplicationConstants.DecimalFormat4WOZero)) @currency</div>
																		<div class="fs12">(@Model.BuyAndSellPricingDetail.SellPriceDetail)</div>
}
																}
															</td>

															if (Model.Invoice.StatusId == (int)InvoiceStatus.Draft || Model.Invoice.StatusId == (int)InvoiceStatus.Canceled || Model.Invoice.WaitingForAction != (int)WaitingAction.Nothing)
															{
																<td class="txt3 txt_rig" valign="top">@Resource.lblHyphen</td>
}
															else
															{
																var allowance = Model.Invoice.AdditionalDetail.TotalAllowance ?? 0;
																	<td class="txt3 txt_rig" valign="top" id="auto-txtAmount">@((Model.Invoice.BasicAmount + allowance).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
														}
													</tr>
                                                    <!--Assets information-->
													if (Model.Assets != null && Model.Assets.Count > 0)
													{
														<tr>
															<td colspan="5" class="pl-25 t_left">
																<table width="100%" class="no-border" border="0">
																	@foreach (var assets in Model.Assets)
																	{
																		var isFirstRow = true;
																		foreach (var asset in assets)
																		{
																			<tr class="t_italic @(isFirstRow ? "border-top-lightgray" : "")">
																				<td class="txt5" valign="top" width="31.7%">@(isFirstRow ? asset.AssetName + (!String.IsNullOrEmpty(asset.SubcontractorName) ? $" {Resource.lblSingleHyphen} {asset.SubcontractorName}" : "") : " ")</td>
																				<td class="txt3" valign="top" width="22%">@asset.DropDate.ToString(Resource.constFormatDate) @(asset.DropDate.DateTime.ToString(Resource.constFormat12HourTime2)) - @(asset.EndTime)</td>
																				<td class="txt3 txt_rig" valign="top" width="15.8%">@asset.DropGallons.Value.GetCommaSeperatedValue()</td>
																				@if (!Model.Invoice.ShouldHidePricing())
																				{
																					<td class="txt3 txt_rig" valign="top" width="15.1%">
																						@if (Model.FuelRequest.FuelDetails.FuelPricing.PricingTypeId == (int)PricingType.Tier)
																						{
																							@Resource.lblTier @*currently not in use*@
}
																						else
																						{
																							<div>@Resource.constSymbolCurrency@Model.Invoice.PricePerGallon.ToString(ApplicationConstants.DecimalFormat4WOZero) @currency</div>
}
																					</td>
																					<td class="txt3 txt_rig" valign="top" width="16%">
																						@if (Model.FuelRequest.FuelDetails.FuelPricing.PricingTypeId == (int)PricingType.Tier ||
										 Model.Invoice.StatusId == (int)InvoiceStatus.Draft || Model.Invoice.StatusId == (int)InvoiceStatus.Canceled ||
										 Model.Invoice.WaitingForAction != (int)WaitingAction.Nothing)
																						{
																							@Resource.lblHyphen
}
																						else
																						{
																							<div>@(((decimal)(asset.DropGallons * Model.Invoice.PricePerGallon)).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																					</td>
}
																			</tr>isFirstRow = false;
																		}
																	}
																</table>
															</td>
														</tr>
}
													if (Model.NoFuelNeededAssetCount > 0)
													{
														<tr><td colspan="5" class="txt3">@Resource.lblNoFuelNeeded: <b>@Model.NoFuelNeededAssetCount</b></td></tr>
}
													if (Model.AssetNotAvailableCount > 0)
													{
														<tr><td colspan="5" class="txt3">@Resource.lblAssetNotAvailable: <b>@Model.AssetNotAvailableCount</b></td></tr>
}
													@*<tr><td colspan="5"><div class="border" style="width:100%;margin-bottom:-3px;"></div></td></tr>*@
}
												<tr><td colspan="5"><div class="border" style="width:100%;margin-bottom:-3px;"></div></td></tr>if (!Model.Invoice.ShouldHidePricing())
												{
													foreach (var fee in Model.FuelFees.FuelRequestFees.Where(t => t.FeeSubTypeId != (int)FeeSubType.NoFee))
													{
														if (fee.FeeTypeId == ((int)FeeType.FreightFee).ToString())
														{
															<tr class="border-top-lightgray">
																@if (Model.BrokeredOrder.BrokeredOrderFee.FreightFeeSubTypeId == (int)FeeSubType.ByAssetCount)
																{
																	<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblFreight:</span> <span class="font-italic">@Resource.lblPerAsset</span></td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">&nbsp;</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.BrokeredOrder.BrokeredOrderFee.FreightFee.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.BrokeredOrder.BrokeredOrderFee.FreightFeeAmount.ToString(ApplicationConstants.DecimalFormat2) @currency</td>
}
																else if (Model.BrokeredOrder.BrokeredOrderFee.FreightFeeSubTypeId == (int)FeeSubType.PerGallon)
																{
																	<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblFreight:</span> <span class="font-italic">@Resource.lblPerGallon</span></td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.BrokeredOrder.BrokeredOrderFee.FreightFee.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.BrokeredOrder.BrokeredOrderFee.FreightFeeAmount.ToString(ApplicationConstants.DecimalFormat2) @currency</td>
}
																else if (Model.BrokeredOrder.BrokeredOrderFee.FreightFeeSubTypeId == (int)FeeSubType.PerRoute)
																{
																	<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblFreight:</span> <span class="font-italic">@Resource.lblPerRoute</span></td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">&nbsp;</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.BrokeredOrder.BrokeredOrderFee.FreightFee.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Model.BrokeredOrder.BrokeredOrderFee.FreightFeeAmount.ToString(ApplicationConstants.DecimalFormat2) @currency</td>
}
																else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon && !fee.IncludeInPPG)
																{
																	<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblFreight:</span> <span class="font-italic">@fee.FeeSubTypeName</span></td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@((fee.Fee ?? 0).ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																else if ((fee.FeeSubTypeId == (int)FeeSubType.ByAssetCount || fee.FeeSubTypeId == (int)FeeSubType.PerRoute || fee.FeeSubTypeId == (int)FeeSubType.FlatFee) && !fee.IncludeInPPG)
																{
																	<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblFreight:</span> <span class="font-italic">@fee.FeeSubTypeName</span></td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@((fee.FeeSubQuantity ?? 0).GetPreciseValue(0))</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@((fee.Fee ?? 0).ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
															</tr>
}

														if (!fee.FeeTypeId.Contains(Constants.OtherCommonFeeCode))
														{
															var feeTypeId = Convert.ToInt32(fee.FeeTypeId);

                                                            <!--Delivery fee information-->
															if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.DeliveryFee)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblDeliveryFeeSummary: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@(Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblDeliveryFeeSummary: </span>
																			<span class="font-italic">@fee.FeeSubTypeName</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@(fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblDeliveryFeeSummary: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@(fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblDeliveryFeeSummary: </span>
																			<span class="font-italic">@Resource.lblByQuantity </span>
																		</td>
																		<td colspan="4" class="txt3 txt_rig">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.WetHoseFee && (fee.Fee != null && fee.Fee.Value != 0))
															{
                                                                <!--Wet hose fee information-->
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.ByAssetCount)
																	{
																		<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblWetHoseFee:</span> <span class="font-italic">@Resource.lblPoFeeByAssetCount</span></td>
																		<td class="txt3 txt_rig font-italic" valign="top">&nbsp;</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.FeeSubQuantity ?? 0).GetPreciseValue(0)) @Resource.lblAssetsCount</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency </td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{

																		<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblWetHoseFee:</span> <span class="font-italic">@Resource.lblHourlyRate</span></td>
																		<td class="txt3 txt_rig font-italic" valign="top">&nbsp;</td>
																		<td class="txt3 txt_rig" valign="top">@fee.GetQuntityInTime()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{

																		<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblWetHoseFee:</span> <span class="font-italic">@Resource.lblFlatFee</span></td>
																		<td class="txt3 txt_rig font-italic" valign="top">&nbsp;</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.FeeSubQuantity ?? 0).GetPreciseValue(0))</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.OverWaterFee && (fee.Fee != null && fee.Fee.Value != 0))
															{
                                                                <!--Over water fee information-->
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.ByAssetCount)
																	{
																		<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblOverWaterFee:</span>  <span class="font-italic">@Resource.lblPoFeeByAssetCount</span></td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@((fee.FeeSubQuantity ?? 0).GetPreciseValue(0)) @Resource.lblAssetsCount</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblOverWaterFee:</span> <span class="font-italic">@Resource.lblHourlyRate</span></td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.GetQuntityInTime()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblOverWaterFee:</span> <span class="font-italic">@Resource.lblFlatFee</span></td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@((fee.FeeSubQuantity ?? 0).GetPreciseValue(0))</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.UnderGallonFee && fee.MinimumGallons.Value > Model.Invoice.DroppedGallons)
															{
                                                                <!--Under Gallon information-->
																<tr class="border-top-lightgray">
																	<td class="txt3" valign="top"><span class="font-extrabold">@Resource.lblMinimumGallonFee:</span>  <span class="font-italic">@Resource.lblFlatFee</span></td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.EnvironmentalFee && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblEnvironmentalFee: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblEnvironmentalFee: </span>
																			<span class="font-italic">@fee.FeeSubTypeName</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && (feeTypeId == (int)FeeType.LoadFee || feeTypeId == (int)FeeType.AdditiveFee) && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@(((FeeType)feeTypeId).GetDisplayName()): </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@(((FeeType)feeTypeId).GetDisplayName()): </span>
																			<span class="font-italic">@Resource.lblPerGallon</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.ServiceFee && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblServiceFee: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblServiceFee: </span>
																			<span class="font-italic">@Resource.lblPerGallon</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblServiceFee: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.SurchargeFee && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblSurcharge: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblSurcharge: </span>
																			<span class="font-italic">@Resource.lblPerGallon</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblSurcharge: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee
																&& (feeTypeId == (int)FeeType.StopOffFee || feeTypeId == (int)FeeType.SplitTank || feeTypeId == (int)FeeType.PumpCharge || feeTypeId == (int)FeeType.Retain)
																&& fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@fee.FeeTypeName: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@fee.FeeTypeName: </span>
																			<span class="font-italic">@Resource.lblPerGallon</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@fee.FeeTypeName: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}

															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.DemurrageFeeDestination && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">Demurrage Fee Destination: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
}
																	else
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">Demurrage Fee Destination: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">1</td>
}
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.DemurrageFeeTerminal && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">Demurrage Fee Terminal: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
}
																	else
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">Demurrage Fee Terminal: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">1</td>
}
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.DemurrageOther && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">Demurrage Other: </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
}
																	else
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">Demurrage Other: </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
}
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.SurchargeFreightFee && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.ByDistance || fee.FeeSubTypeId == (int)FeeSubType.ByQuantity || fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@Resource.lblFuelSurcharge (@Model.FuelFees.FuelSurchargeFreightFee.SurchargePricingType.ToString() price from EIA): </span>
																			<span class="font-italic">FSC Rate @Model.FuelFees.FuelSurchargeFreightFee.SurchargePercentage.ToString(ApplicationConstants.DecimalFormat2)@Resource.constSymbolPercent, Base Freight @Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4)</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@((fee.TotalFee / Model.Invoice.DroppedGallons).ToString(ApplicationConstants.DecimalFormat4)) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
															else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee && feeTypeId == (int)FeeType.OtherFee && fee.TotalFee != 0)
															{
																<tr class="border-top-lightgray">
																	@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : Resource.lblOtherFee + " - " + fee.OtherFeeDescription): </span>
																			<span class="font-italic">@Resource.lblFlatFee</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : Resource.lblOtherFee + " - " + fee.OtherFeeDescription): </span>
																			<span class="font-italic">@Resource.lblPerGallon</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : Resource.lblOtherFee + " - " + fee.OtherFeeDescription): </span>
																			<span class="font-italic">@Resource.lblHourlyRate</span>
																		</td>
																		<td class="txt3 txt_rig font-italic" valign="top"> </td>
																		<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
																		<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																		<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																	else if (fee.FeeSubTypeId == (int)FeeSubType.ByQuantity)
																	{
																		<td class="txt3" valign="top">
																			<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : fee.OtherFeeDescription): </span>
																			<span class="font-italic">@Resource.lblByQuantity </span>
																		</td>
																		<td colspan="4" class="txt3 txt_rig">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																</tr>
}
														}
														else if (!fee.IncludeInPPG && fee.FeeSubTypeId != (int)FeeSubType.NoFee)
														{
															<tr class="border-top-lightgray">
																@if (fee.FeeSubTypeId == (int)FeeSubType.FlatFee)
																{
																	<td class="txt3" valign="top">
																		<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : fee.OtherFeeDescription): </span>
																		<span class="font-italic">@Resource.lblFlatFee</span>
																	</td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? -1 : 1)</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@Math.Abs(fee.TotalFee).ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																else if (fee.FeeSubTypeId == (int)FeeSubType.PerGallon)
																{
																	<td class="txt3" valign="top">
																		<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : fee.OtherFeeDescription): </span>
																		<span class="font-italic">@Resource.lblPerGallon</span>
																	</td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@Model.Invoice.DroppedGallons.GetPreciseValue(2).GetCommaSeperatedValue()</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																else if (fee.FeeSubTypeId == (int)FeeSubType.HourlyRate)
																{
																	<td class="txt3" valign="top">
																		<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : fee.OtherFeeDescription): </span>
																		<span class="font-italic">@Resource.lblHourlyRate</span>
																	</td>
																	<td class="txt3 txt_rig font-italic" valign="top"> </td>
																	<td class="txt3 txt_rig" valign="top">@fee.TotalHours</td>
																	<td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@fee.Fee.Value.ToString(ApplicationConstants.DecimalFormat4) @currency</td>
																	<td class="txt3 txt_rig" valign="top">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
																else if (fee.FeeSubTypeId == (int)FeeSubType.ByQuantity)
																{
																	<td class="txt3" valign="top">
																		<span class="font-extrabold">@(string.IsNullOrWhiteSpace(fee.OtherFeeDescription) ? Resource.lblOtherFee : fee.OtherFeeDescription): </span>
																		<span class="font-italic">@Resource.lblByQuantity </span>
																	</td>
																	<td colspan="4" class="txt3 txt_rig">@((fee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
}
															</tr>
}
													}
												}
											}
										</table>
									</td>
								</tr>
								<tr>
									<td colspan="3" valign="top">
										<table width="98%" cellpadding="0" cellspacing="0">
											<tr>
												<td width="55%" valign="top" align="left" class="pr-10">
													@if (Model.InvoicePayments != null && Model.InvoicePayments.Any())
													{
														<div class="text-left pt10 font-bold fs13">@Resource.headingPaymentInformation</div>
														<table class="table">
															<thead>
																<tr>
																	<th>
																		@Resource.lblPaymentDate
																	</th>
																	<th>
																		@Resource.headingMethod
																	</th>
																	<th>
																		@Resource.gridColumnAmount
																	</th>
																</tr>
															</thead>
															<tbody>
																@foreach (var payment in Model.InvoicePayments)
																{
																	<tr>
																		<td>
																			@payment.PaymentDate.ToString(Resource.constFormatDate)
																		</td>
																		<td>
																			@payment.PaymentMethod
																		</td>
																		<td>
																			@payment.AmountPaid.GetInvoiceAmountValue(2, Resource.constSymbolCurrency) @currency
																		</td>
																	</tr>
}
															</tbody>
															<tfoot>
																<tr class=" font-bold">
																	<td colspan="2" class="text-right">
																		@Resource.headingTotalPaid
																	</td>
																	<td>
																		@Model.InvoicePayments.Sum(t => t.AmountPaid).GetInvoiceAmountValue(2, Resource.constSymbolCurrency) @currency
																	</td>
																</tr>
																<tr class=" font-bold">
																	<td colspan="2" class="text-right">
																		@Resource.headingBalanceDue
																	</td>
																	<td>
																		@Model.InvoicePayments.Min(t => t.BalanceRemaining).GetInvoiceAmountValue(2, Resource.constSymbolCurrency) @currency
																	</td>
																</tr>
															</tfoot>
														</table>
}
												</td>
												<td width="5%">&nbsp;</td>
												<td valign="top">
													<table border="0" cellpadding="0" cellspacing="0" width="98%">
														@if (!Model.Invoice.ShouldHidePricing())
														{
															<tr>
																<td colspan="2">&nbsp;</td>
																<td>
																	<table width="100%" class="invoiceamount-section">
																		<tr>
																			<td class="text-left pb10 pt10 font-bold fs13">@Resource.lblSubTotal: </td>
																			@if (Model.Invoice.StatusId == (int)InvoiceStatus.Draft || Model.Invoice.StatusId == (int)InvoiceStatus.Canceled || Model.Invoice.WaitingForAction != (int)WaitingAction.Nothing)
																			{
																				<td class="txt_rig font-bold fs13 pb10 pt10">
																					@Resource.lblHyphen
																				</td>
}
																			else
																			{
																				<td class="txt_rig font-bold fs13 pb10 pt10" id="subtotal-amount">
																					@if (Model.Invoice.InvoiceTypeId != (int)InvoiceType.DryRun)
																					{
																						var allowanceTotal = Model.Invoice.AdditionalDetail.TotalAllowance ?? 0;
																						var processingFeeValue = Model.FuelFees.FuelRequestFees.Where(t => t.FeeTypeId == ((int)FeeType.ProcessingFee).ToString() && t.Fee.HasValue).Select(t => t.TotalFee).FirstOrDefault();
																						<div> @((Model.Invoice.BasicAmount + Model.Invoice.TotalFees + allowanceTotal - processingFeeValue).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																					else
																					{
																						<div> @((Model.Invoice.BasicAmount).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																				</td>
}
																		</tr>
																	</table>
																</td>
															</tr>if (Model.FuelFees.DiscountLineItems.Any())
															{
																<tr>
																	<td colspan="3" class="pb-10">
																		<table width="100%">

																			@foreach (var discountLineItems in Model.FuelFees.DiscountLineItems)
																			{
																				<tr class="border-top-lightgray">
																					<td class="txt3" valign="top">
																						<span class="font-extrabold">@Resource.lblDiscountOn @discountLineItems.FeeTypeName: </span>
																						@if (@discountLineItems.FeeSubTypeId == (int)FeeSubType.Percent)
																						{
																							<span class="font-italic">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? (discountLineItems.Amount).GetInvoiceAmountValue(2, "") : (discountLineItems.Amount).GetInvoiceAmountReverseValue(2, ""))@Resource.constSymbolPercent</span>
}
																						else
																						{
																							<span class="font-italic">@discountLineItems.FeeSubTypeName</span>
																							<span class="font-italic">@(Model.Invoice.InvoiceTypeId == (int)InvoiceType.CreditInvoice || Model.Invoice.InvoiceTypeId == (int)InvoiceType.PartialCredit ? (discountLineItems.Amount).GetInvoiceAmountValue(2, Resource.constSymbolCurrency) : (discountLineItems.Amount).GetInvoiceAmountReverseValue(2, Resource.constSymbolCurrency)) @currency</span>
}
																					</td>
																					<td class="txt3 txt_rig font-italic" valign="top"> </td>
																					<td class="txt3 txt_rig" valign="top"></td>
																					<td class="txt3 txt_rig" valign="top"></td>
																					<td class="txt3 txt_rig" valign="top">@((discountLineItems.TotalFee).GetInvoiceAmountReverseValue(2, Resource.constSymbolCurrency)) @currency</td>
																				</tr>
}

																		</table>
																	</td>
																</tr>
}
															if (Model.Invoice.AdditionalDetail.TotalAllowance.HasValue && Model.Invoice.AdditionalDetail.TotalAllowance.Value != 0)
															{
																<tr>
																	<td colspan="3" class="pb-10">
																		<table width="100%">
																			<tr class="border-top-lightgray">
																				<td class="txt3" valign="top">
																					<span class="font-extrabold">@Resource.headingSupplierAllowance: </span>
																				</td>
																				<td class="txt3 txt_rig font-italic" valign="top"> </td>
																				<td class="txt3 txt_rig" valign="top"></td>
																				<td class="txt3 txt_rig" valign="top"></td>
																				<td class="txt3 txt_rig" valign="top">@((Model.Invoice.AdditionalDetail.TotalAllowance.Value).GetInvoiceAmountReverseValue(2, @Resource.constSymbolCurrency)) @currency</td>
																			</tr>
																		</table>
																	</td>
																</tr>
}
															<tr>
																<td colspan="2">&nbsp;</td>
																<td>
																	<table width="100%" class="invoiceamount-section">
																		@if (Model.Invoice.InvoiceTypeId != (int)InvoiceType.DryRun && Model.Invoice.InvoiceTypeId != (int)InvoiceType.DigitalDropTicketManual && Model.Invoice.InvoiceTypeId != (int)InvoiceType.DigitalDropTicketMobileApp)
																		{
																			if (Model.Invoice.TaxDetails != null && Model.Invoice.TaxDetails.AvaTaxDetails.Count > 0)
																			{
																				foreach (var item in Model.Invoice.TaxDetails.AvaTaxDetails)
																				{
																					IsTaxModified = item.IsModified ? true : IsTaxModified;

																					<tr class="@(item.IsModified?"txt-highlight":"")">
																						<td class="@(item.IsModified?"txt-highlight":"color-blue") text-left pb10 font-bold fs13">@item.RateDescription:</td>
																						<td class="txt_rig font-bold fs13 pb10">@((item.TradingTaxAmount).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
																					</tr>
}
																			}
																			else if (Model.FuelRequest.FuelDetails.FuelDisplayGroupId != (int)ProductDisplayGroups.OtherFuelType)
																			{
																				if (Model.Invoice.FederalTax + Model.Invoice.StateTax != 0)
																				{
																					<tr>
																						<td class="text-left pb10 font-bold fs13">@Resource.lblFederalandStateTax:</td>
																						<td class="txt_rig font-bold fs13">@Resource.constSymbolCurrency@((Model.Invoice.FederalTax + Model.Invoice.StateTax).ToString("N2")) @currency</td>
																					</tr>
}
																				if (Model.Invoice.SalesTax != 0)
																				{
																					<tr>
																						<td class="text-left pb10 font-bold fs13">@Resource.lblSalesTax:</td>
																						<td class="txt_rig font-bold fs13">@Resource.constSymbolCurrency@Model.Invoice.SalesTax.ToString("N2") @currency</td>
																					</tr>
}
																			}
																		}
																		@{	var processingFee = Model.FuelFees.FuelRequestFees.FirstOrDefault(t => t.FeeTypeId == ((int)FeeType.ProcessingFee).ToString());
																			if (processingFee != null)
																			{
																				var isPercentFee = processingFee.FeeSubTypeId == (int)FeeSubType.Percent;
																				<tr  id="processing-fee">
																					<td align="left" valign="top" class="border-top-blue pt10 pb10">
																						<span class="color-blue text-left font-bold fs13">@Resource.lblProcessingFee:</span>
																						@if (isPercentFee)
																						{
																							<i>(@processingFee.Fee.Value@Resource.constSymbolPercent)</i>
}
																					</td>
																					<td align="right" valign="top" class="txt_rig font-bold fs13 pt10 pb10 border-top-blue">@((processingFee.TotalFee).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</td>
																				</tr>
}
																		}
																	</table>
																</td>
															</tr>				}
														<tr>
															<td colspan="2">&nbsp;</td>
															@if (!Model.Invoice.ShouldHidePricing())
															{
																<td class="text-left font-bold" valign="top">
																	<table class="full-border" width="100%">
																		<tr>
																			<td class="t_left pa-5">
																				@if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.DigitalDropTicketManual || Model.Invoice.InvoiceTypeId == (int)InvoiceType.DigitalDropTicketMobileApp)
																				{
																					<span>
																						@Resource.lblDropTicketTotal: 
																					</span>
}
																				else
																				{
																					<span>
																						@Resource.lblInvoiceTotal: 
																					</span>
}
																			</td>
																			<td class="txt_rig pa-5" id="invoicetotal-amount">
																				@if (Model.Invoice.StatusId == (int)InvoiceStatus.Draft || Model.Invoice.StatusId == (int)InvoiceStatus.Canceled || Model.Invoice.WaitingForAction != (int)WaitingAction.Nothing)
																				{
																					@Resource.lblHyphen
}
																				else
																				{
																					if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.DryRun)
																					{
																						<div>@((Model.Invoice.BasicAmount).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																					else if (Model.Invoice.InvoiceTypeId == (int)InvoiceType.DigitalDropTicketManual || Model.Invoice.InvoiceTypeId == (int)InvoiceType.DigitalDropTicketMobileApp)
																					{
																						<div>@((Model.Invoice.BasicAmount + Model.Invoice.TotalFees).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																					else
																					{
																						if (Model.Invoice.TotalTaxAmount != 0)
																						{
																							<div> @((Model.Invoice.BasicAmount + Model.Invoice.TotalFees + Model.Invoice.TotalTaxAmount - Model.Invoice.TotalDiscountAmount).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																						else
																						{
																							<div> @((Model.Invoice.BasicAmount + Model.Invoice.TotalFees + Model.Invoice.SalesTax + Model.Invoice.FederalTax + Model.Invoice.StateTax - Model.Invoice.TotalDiscountAmount).GetInvoiceAmountValue(2, @Resource.constSymbolCurrency)) @currency</div>
}
																					}
																				}
																			</td>
																		</tr>
																	</table>
																</td>
}
														</tr>
													</table>
												</td>
											</tr>
										</table>
									</td>
								</tr>
								<tr>
									<td colspan="3">
                                        <table width="98%">
                                            @if (Model.Invoice.AdditionalDetail != null && !string.IsNullOrEmpty(Model.Invoice.AdditionalDetail.Notes))
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="fs12"><strong>@Resource.lblComment:</strong> @Model.Invoice.AdditionalDetail.Notes </div>
                                                    </td>
                                                </tr>
                                            }
                                            @if (!string.IsNullOrEmpty(Model.Invoice.StatementNumber))
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="fs12"><strong>@Resource.lblNote:</strong> @Resource.warningMessageInvoiceStatement @Model.Invoice.StatementNumber</div>
                                                    </td>
                                                </tr>

                                            }

                                            @if (IsTaxModified)
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="fs12 txt-highlight"><strong>@Resource.lblInvoiceValuesChanged</strong></div>
                                                    </td>
                                                </tr>
                                            }
                                            @if (Model.Invoice.IsTrueFillTax)
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="fs12 txt-highlight"><strong>@Resource.msgTrueFillTaxInvoice</strong></div>
                                                    </td>
                                                </tr>
                                            }

                                            @if (Model.Invoice.CreationMethod == CreationMethod.BulkUploaded)
                                            {
                                                <tr>
                                                    <td>
                                                        <div class="fs12 txt-highlight"><strong>@Resource.lblInvoiceCreationMethodIsBulkUpload</strong></div>
                                                    </td>
                                                </tr>
                                            }
                                        </table>
									</td>
								</tr>
								<tr>
									<td width="77%" colspan="3" class="pr-10" valign="top">
										@if (Model.SpecialInstructions.Count > 0)
										{
											<table class="full-border" width="100%">
												<tr>
													<td>
														<div class="font-extrabold pl-5 pt-5">@Resource.lblSpecialInstruction:</div>
														<ul class="pl-5 special-instuctions">
															@foreach (var specialInstruction in Model.SpecialInstructions)
															{
																<li class="txt3">
																	@specialInstruction.Instruction -
																	<span>@specialInstruction.IsInstructionFollowed.ToYesNo()</span>
																</li>
}
														</ul>
													</td>
												</tr>
											</table>
}
									</td>

								</tr>
							</table>
						</td>
					</tr>
				</table>
			</td>
		</tr>
	</table>
</div>