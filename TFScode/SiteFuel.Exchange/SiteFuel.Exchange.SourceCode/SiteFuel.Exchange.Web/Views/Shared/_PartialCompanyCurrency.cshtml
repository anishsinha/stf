@model CountryViewModel

<div class="col-md-6">
    <div class="form-group" id="ddl-currency-filter-div">
        @Html.LabelFor(m => m.Currency)
        @Html.DropDownListFor(m => m.Currency, new SelectList(CommonHelperMethods.GetCurrenyList(), "Id", "Name", (int)Model.Currency), new { @class = "form-control currency" })
        @Html.ValidationMessageFor(m => m.Currency)
    </div>
</div>

<div class="col-md-6 uom-section">
    <div class="form-group">
        @Html.LabelFor(m => m.UoM) <i class="fa fa-info-circle ml5" data-toggle="tooltip" data-placement="top" title="@Resource.lblUoM" data-original-title="@Resource.lblUoM"></i>
        @Html.DropDownListFor(m => m.UoM, new SelectList(CommonHelperMethods.GetUoMList(), "Id", "Name", (int)Model.UoM), new { @class = "form-control", @readonly = "true" })
        @Html.ValidationMessageFor(m => m.UoM)
    </div>

   
</div>

@using (Html.BeginScripts())
{
<script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            @*var container = $("#@Html.IdFor(m => m.Currency)").closest('.address-container');
            var countryId = parseInt(container.find('.country').val());
            showCurrencyByCountry(countryId);*@

            $("#@Html.IdFor(m => m.Currency)").change(function () {
                var currency = $(this).val();
                if (currency == '@((int)Currency.USD)') {
                    // for usa
                    $("#@Html.IdFor(m => m.UoM)").val('@((int)UoM.Gallons)');
                    $("#@Html.IdFor(m => m.Currency)").val('@((int)Currency.USD)');
                    $('.currency-symbol').text('@(Currency.USD.ToString())');
                    $('.uom').text('@UoM.Gallons.ToString()');
                }
                else {
                    // for canada
                    $("#@Html.IdFor(m => m.UoM)").val('@((int)UoM.Litres)');
                    $("#@Html.IdFor(m => m.Currency)").val('@((int)Currency.CAD)');
                    $('.currency-symbol').text('@(Currency.CAD.ToString())');
                    $('.uom').text('@UoM.Litres.ToString()');
                }

               $(".currency").trigger('currencyUpdated',[$("#@Html.IdFor(m => m.Currency)").val(), $("#@Html.IdFor(m => m.UoM)").val()]);
            });

            $(document).on('updated', '.country', function () {
                var container = $("#@Html.IdFor(m => m.Currency)").closest('.address-container');
                var countryId = parseInt(container.find('.country').val());
                showCurrencyByCountry(countryId);
            });

            $(".country").change(function () {
                var container = $("#@Html.IdFor(m => m.Currency)").closest('.address-container');
                var countryId = parseInt(container.find('.country').val());
                showCurrencyByCountry(countryId);
            });
        });

        function toggleCurrencyByCountry(countryId) {
            if (countryId == 4) {
                 $("#@Html.IdFor(m => m.UoM)").removeAttr('readonly');
            } else {
                 $("#@Html.IdFor(m => m.UoM)").attr('readonly',true);
            }
        }
        function showCurrencyByCountry(countryId) {
            // if country is usa
           
            if (countryId == 1) {
                $("#@Html.IdFor(m => m.Currency)").val('@((int)Currency.USD)');
                $("#MFNQuantityUoM").children('option[value="@((int)UoM.Litres)"]').hide();
                $("#MFNQuantityUoM").children('option[value="@((int)UoM.Gallons)"]').show();
                $("#MFNQuantityUoM").val("@((int)UoM.Gallons)");
                $("#@Html.IdFor(m => m.UoM)").val('@((int)UoM.Gallons)');
                $('.currency-symbol').text('@(Currency.USD.ToString())');
                $('.uom').text('@UoM.Gallons.ToString()');


            }
            else if (countryId == 2) {
                $("#@Html.IdFor(m => m.Currency)").val('@((int)Currency.CAD)');
                $("#MFNQuantityUoM").children('option[value="@((int)UoM.Litres)"]').show();
                $("#MFNQuantityUoM").children('option[value="@((int)UoM.Gallons)"]').hide();
                $("#MFNQuantityUoM").val("@((int)UoM.Litres)");
                $("#@Html.IdFor(m => m.UoM)").val('@((int)UoM.Litres)');
                $('.currency-symbol').text('@(Currency.CAD.ToString())');
                $('.uom').text('@UoM.Litres.ToString()');
            }
            toggleCurrencyByCountry(countryId);
            
           $(".currency").trigger('currencyUpdated',[$("#@Html.IdFor(m => m.Currency)").val(), $("#@Html.IdFor(m => m.UoM)").val()]);
        }
</script>
}
