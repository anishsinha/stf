@model AdditiveProductDetailsViewModel
<div class="row">
    <div class="col-sm-5">
        <div class="form-group">
            @Html.TextBoxFor(m => m.AdditiveProductName, new { @class = "form-control form-control-lg", @placeholder = "Additive Product" })
        </div>
    </div>
    <div class="col-sm-2">
        <div class="form-group">
            <button type="button" class="btn btn-primary btn-lg" onclick="SaveAdditiveProduct()">Add</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="well bg-white border shadow-none">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div id="additiveProduct-div" class="table-responsive">
                        <table id="tbl-additiveProduct-grid" data-gridname="@GridName.AdditiveProductsGrid" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th data-key="@Resource.lblAdditiveProduct">@Resource.lblAdditiveProduct</th>
                                    <th data-key="@Resource.gridColumnAction">@Resource.gridColumnAction</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var additiveProductGrid, exportColumns = { columns: [0] };
    $(document).ready(function () {
        additiveProductGrid = $('#tbl-additiveProduct-grid').DataTable({
            "ajax": {
                "url": "@Url.Action("GetAdditiveProductsGrid", "Profile", new { area = "Settings" })",
                "type": "GET",
                "data": function (data) {
                    $('#additiveProduct-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
                },
                "datatype": "json",
                "dataSrc": function (json) {
                    $("#additiveProduct-div").find('.loading-wrapper').hide();
                    return json;
                }
            },
            'lengthMenu': [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, "All"]],
            aaSorting: [[0, 'desc']],
            "serverSide": false,
            "searchDelay": 500,
            processing: true,
            "searching": true,
            "bProcessing": true,
            lengthChange: true,
            responsive: true,
            "columns": [
                {
                    "data": "AdditiveProductName",
                    "autoWidth": true,
                    "class":'edit-name'
                },
                {
                    "data": "Id",
                    "autoWidth": true,
                    render: function (data, type, row, meta) {
                        return "<button type='button' class='btn btn-link'><i class='fs21 fas fa-save color-green' prevProductName=" + row.AdditiveProductName + " id="+row.Id+" alt='Update' title='Update' data-toggle='confirmation' data-placement='top' data-html='true' data-popout='true' data-singleton='true' data-title='Are you sure ?' data-confirmation-event='postNewData'></i></button>" +
                            "<button type='button' class='btn btn-link'> <i class='fas fa-trash-alt color-maroon' id="+data+" alt='Delete' title='Delete' data-toggle='confirmation' data-placement='top' data-html='true' data-popout='true' data-singleton='true' data-title='Are you sure ?' data-confirmation-event='deleteProduct'></i></button >";
                    }
                }
            ],
            pageLength: 10,
            responsive: true,
            "order": [],
            "initComplete": function (settings, json) {
                wrapperHeight();
            },
            "fnDrawCallback": function (settings) {
                $('[data-toggle=confirmation]').confirmation({
                    rootSelector: '[data-toggle=confirmation]',
                    html: true
                });
            },
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                //{ extend: 'colvis', columns: exportColumns.columns },
                { extend: 'csv', title: '@Resource.lblGridAdditiveProducts', exportOptions: exportColumns },
                { extend: 'excel', title: '@Resource.lblGridAdditiveProducts', exportOptions: exportColumns },
                { extend: 'pdf', title: '@Resource.lblGridAdditiveProducts', exportOptions: exportColumns, orientation: 'landscape' },
                {
                    extend: 'print', exportOptions: exportColumns,
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            language: {
                sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
            }
        });
    });


    function SaveAdditiveProduct() {
        var productName = $('#@Html.IdFor(m=> m.AdditiveProductName)').val();
        if (productName != null && productName != undefined && productName !='') {
            $('#additiveProduct-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
            var product = { AdditiveProductName: productName, CompanyId: @CurrentUser.CompanyId };
            var url = " @Url.Action("SaveAdditiveProduct", "Profile", new { area = "Settings" })";
            $.post(url, { product: product }, function (data) {
                if (data.StatusCode == 0) {
                    msgsuccess(data.StatusMessage);
                    ReloadDataTable();
                     $('#@Html.IdFor(m=> m.AdditiveProductName)').val('');
                }
                else {
                    msgerror(data.StatusMessage);
                }
            }).always(function () {
                $("#additiveProduct-div").find('.loading-wrapper').hide();
            });
        }
        else {
            msgerror("Enter Additive Product name");
        }
    }

    function ReloadDataTable() {
        if (additiveProductGrid != null && additiveProductGrid != undefined) {
            additiveProductGrid.ajax.reload();
        }
    }

    $(document).on('click', '.edit-name', function () {
        var isEditable = $(this).attr('contenteditable');
        if (typeof isEditable == 'undefined' || isEditable == 'false') {
            $(this).attr('contenteditable', 'true');
            $(this).addClass('edit-td');
        }
    });

    $(document).off('postNewData');
    $(document).on('postNewData', function (e) {
        var prevProductName = $(e.target).attr('prevProductName');
        var row = $(e.target).closest('tr');
        if (row != undefined && row.length == 1) {
            var newProdName = $.trim($(e.target).closest('tr')[0].innerText); // gets newly entered product name
            var id = parseInt($(e.target).attr('id'));
            if (newProdName == null || newProdName == '' || newProdName == undefined) {
                msgerror("Product name cannot be empty");
                return;
            }
            if (prevProductName.trim().toLowerCase() != newProdName.trim().toLowerCase()) {
                $('#additiveProduct-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
                var product = { AdditiveProductName: newProdName, CompanyId: @CurrentUser.CompanyId, Id: id };
                var url = " @Url.Action("SaveAdditiveProduct", "Profile", new { area = "Settings" })";
                $.post(url, { product: product }, function (data) {
                    if (data.StatusCode == 0) {
                        msgsuccess(data.StatusMessage);
                        ReloadDataTable();
                    }
                    else {
                        msgerror(data.StatusMessage);
                    }

                }).always(function () {
                    $("#additiveProduct-div").find('.loading-wrapper').hide();
                });
            }
            else { return;  }
        }
    });

    $(document).off('deleteProduct');
    $(document).on('deleteProduct', function (e) {
        var id = parseInt($(e.target).attr('id'));
        if (id != undefined && id != null && id > 0) {
            var url = " @Url.Action("DeleteAdditiveProduct", "Profile", new { area = "Settings" })";
            $('#additiveProduct-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
            $.get(url, { Id: id }, function (data) {
                if (data.StatusCode == 0) {
                    msgsuccess(data.StatusMessage);
                    ReloadDataTable();
                }
                else {
                    msgerror(data.StatusMessage);
                }
            }).always(function () {
                $("#additiveProduct-div").find('.loading-wrapper').hide();
            });
                }
    });

</script>

