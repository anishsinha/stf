@model DispatchAddressViewModel

<div class="row">
    <div class="col-md-8 address-container">
        <div class="pa bg-white top0 left0 z-index5 loading-wrapper hide-element"><span class='spinner-dashboard pa'></span></div>
        <div class="address-controls">
            <div class="row combineDiv">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control address addressInput" })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ZipCode)
                        @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control zipcode addressInput" })
                        @Html.ValidationMessageFor(m => m.ZipCode)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.City)
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control city addressInput" })
                        @Html.ValidationMessageFor(m => m.City)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.State.Name, new { @Value = Resource.lblDummy, @class = "statename" })
                        @Html.HiddenFor(m => m.State.Code, new { @Value = Resource.lblDummy, @class = "statecode" })
                        @Html.LabelFor(m => m.State.Id)
                        @Html.DropDownListFor(m => m.State.Id, new SelectList(CommonHelperMethods.GetStatesOfAllCountries(), "StateId", "StateName", Model.State.Id), string.Format(Resource.valMessageSelect, Resource.lblState), new { @class = "form-control state addressInput" })
                        @Html.ValidationMessageFor(m => m.State.Id)
                    </div>
                </div>
            </div>
            <div class="row combineDiv">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.Country.Name, new { @Value = Resource.lblDummy, @class = "countryname" })
                        @Html.HiddenFor(m => m.Country.Code, new { @Value = Resource.lblDummy, @class = "countrycode" })
                        @Html.HiddenFor(m => m.CountyName, new { @Value = Resource.lblDummy, @class = "county" })
                        @Html.LabelFor(m => m.Country.Id)
                        @Html.DropDownListFor(m => m.Country.Id, new SelectList(CommonHelperMethods.GetCountriesEx(), "Id", "Code", Model.Country.Id), new { @class = "form-control country addressInput" })
                        @Html.ValidationMessageFor(m => m.Country.Id)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 combineDiv">
        <div class="checkbox mt0">
            <div class="form-group">
                <label>
                    @Html.CheckBoxFor(m => m.IsGeocodeUsed, new { onclick = "setReadOnlyMode(this,'geoInput','addressInput')" })
                    @Resource.lblGeoCodes
                </label>
            </div>
        </div>
        <div class="combineDiv subSectionOpacity">
            <div class="row geoCntrls">
                <div class="col-xs-6 col-sm-4 col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Latitude)
                        @Html.TextBoxFor(m => m.Latitude, new { @class = "form-control datatype-decimal mask-decimal latitude geoInput defaultDisabled", @readonly = "true" })
                        @Html.ValidationMessageFor(m => m.Latitude)
                    </div>
                </div>
                <div class="col-xs-6 col-sm-4 col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Longitude)
                        @Html.TextBoxFor(m => m.Longitude, new { @class = "form-control datatype-decimal mask-decimal longitude geoInput defaultDisabled", @readonly = "true" })
                        @Html.ValidationMessageFor(m => m.Longitude)
                    </div>
                </div>
                <div class="col-xs-6 col-sm-4 col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.TimeZoneName)
                        @Html.TextBoxFor(m => m.TimeZoneName, new { @class = "form-control timeZoneName defaultDisabled", @readonly = "true" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>