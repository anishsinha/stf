@model InvoiceFilterViewModel
<div class="row">
    <div class="col-sm-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-padding no-border">
                    <div id="bol-invoice-div" class="table-responsive">
                        <table id="bol-invoice-datatable" data-gridname="@GridName.BolSummaryGrid" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th class="exclude-export hide"></th>
                                    <th data-key="InvoiceNumber">@Resource.lblInvoiceNumber</th>
                                    <th data-key="BOL">@Resource.gridColumnBolLiftNumber</th>
                                    <th data-key="BadgeNumber">@Resource.lblBadgeNumber</th>
                                    <th data-key="Customer">@(CurrentUser.IsSupplierCompany ? Resource.gridColumnCustomer : Resource.gridColumnVendor)</th>
                                    <th data-key="LiftDate">@Resource.lblLiftDate</th>
                                    <th data-key="DeliveryDate">@Resource.gridColumnDeliveryDate</th>
                                    <th data-key="TerminalName">@Resource.gridTerminalBulkPlantName</th>
                                    <th data-key="PickUpLocation" class="no-break">@Resource.headingPickUpLocation</th>
                                    <th data-key="ShipTo" class="no-break">@Resource.gridcolumnShipTo</th>
                                    <th data-key="DropLocation" class="no-break">@Resource.lblDropLocation</th>
                                    <th data-key="GrossQuantity">@Resource.lblGrossQuantity</th>
                                    <th data-key="NetQuantity">@Resource.lblNetQuantity</th>
                                    <th data-key="ActualQty">@Resource.headingActualQty</th>
                                    <th data-key="PrePostValues">@Resource.gridColumnPrePostValues</th>
                                    <th data-key="InvoiceMethod">@Resource.lblInvoiceMethod</th>
                                    <th data-key="Status">@Resource.gridColumnStatus</th>
                                    <th data-key="DropTicketNumber">@Resource.gridColumnProofofDelivery</th>
                                    <th class="exclude-export"><input type="checkbox" id="select-all-invoices" /></th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var supplierBolInvoice, ClearFilter, exportColumns = { columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,14,15, 16,17] };
    var dataGridRq;
    $(document).ready(function () {
        initDateTimePicker();
        ExportGrid();
        $('#txtBolInvoiceFromDate').val(GetLocalStorage('txtBolInvoiceFromDate'));
        $('#txtBolInvoiceToDate').val(GetLocalStorage('txtBolInvoiceToDate'));

        ClearFilter = function () {
            $('#txtBolInvoiceFromDate').val('');
            $('#txtBolInvoiceToDate').val('');
            $('#txtBolInvoiceToDate').data("DateTimePicker").minDate($("#txtBolInvoiceFromDate").datetimepicker("minDate"));
            ReloadDataTable();
        }

        if ($('#txtBolInvoiceFromDate').length > 0 && $('#txtBolInvoiceToDate').length > 0) {
            $("#txtBolInvoiceFromDate").on('dp.change dp.show', function (e) {
                if (e.date == false)
                    $('#txtBolInvoiceToDate').data("DateTimePicker").minDate($("#txtBolInvoiceFromDate").datetimepicker("minDate"));
                else
                    $('#txtBolInvoiceToDate').data("DateTimePicker").minDate(moment($('#txtBolInvoiceFromDate').val()));
            });

            $('#txtBolInvoiceFromDate').data("DateTimePicker").date(moment().subtract(moment.duration(30, 'days')));
            $('#txtBolInvoiceToDate').data("DateTimePicker").date(moment());
        }

        var startDate = "";
        function getStartDate() {
            return $('#txtBolInvoiceFromDate').val() == 'undefined' ? "" : $('#txtBolInvoiceFromDate').val();
        }

        var endDate = "";
        function getEndDate() {
            return $('#txtBolInvoiceToDate').val() == 'undefined' ? "" : $('#txtBolInvoiceToDate').val();
        }
        var isVisibleBadgeNumber = ('@(CurrentUser.IsSupplierAdmin ||  @CurrentUser.IsSupplier ||  @CurrentUser.IsCarrierAdmin  ||  @CurrentUser.IsCarrier)' == 'True');
        supplierBolInvoice = $('#bol-invoice-datatable').DataTable({
            "ajax": {
                "url": "@Url.Action("BolInvoiceGrid", "Invoice")",
                "type": "POST",
                "datatype": "json",
                "data": function (data) {
                    data.Filter = '@Model.Filter';
                    data.StartDate = getStartDate();
                    data.EndDate = getEndDate();
                    data.GroupIds = getCompanyGroup().groupIds;
                    data.Currency = getSelectedCountryAndCurrency().currencyType;
                    data.CountryId = getSelectedCountryAndCurrency().countryId;
                    dataGridRq = data;
                    $('#bol-invoice-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
                },
                "dataSrc": function (json) {
                    $("#bol-invoice-div").find('.loading-wrapper').remove();
                    return json.data;
                }
            },
            'lengthMenu': [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, "All"]],
            aaSorting: [[0, 'desc']],
            "serverSide": true,
            "searchDelay": 500,
            processing: true,
            "searching": { "regex": true },
            "bProcessing": true,
            lengthChange: true,
            "columns": [
                { "data": "Id", "autoWidth": true, "visible": false, "searchable": false },
                {
                    "data": function (data, type, row, meta) {
                        if (isBuyerCompanyWebNotification == 'True') {
                            return '<a href="@Url.Action("Details", "Invoice")/' + data.Id + '">' + data.InvoiceNumber + '</a>';
                        }
                        else {
                            return '<a onclick="slideInvoiceDetails(' + data.Id + ')">' + data.InvoiceNumber + '</a>';
                        }
                    }, "autoWidth": true
                },
                { "data": "BolNumber", "autoWidth": true },
                { "data": "BadgeNumber", "autoWidth": true },
                { "data": "Customer", "autoWidth": true },
                { "data": "LiftDate", "autoWidth": true },
                { "data": "DropEndDate", "autoWidth": true },
                { "data": "TerminalName", "autoWidth": true },
                { "data": "PickupLocation", "autoWidth": true, className: "break-word" },
                { "data": "ShipTo", "autoWidth": true, className: "break-word" },
				{ "data": "DropLocation", "autoWidth": true, className: "break-word" },
				{ "data": function (data, type, row, meta) { if (data.GrossQuantity != null) return data.GrossQuantity; else return "--" }, "autoWidth": true },
				{ "data": function (data, type, row, meta) { if (data.NetQuantity != null) return data.NetQuantity; else return "--" } , "autoWidth": true },
                { "data": "ActualDropQuantity", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        if (data.PrePostValues != null && data.PrePostValues != "") {
                            var prePostData = data.PrePostValues.split(';');
                            if (prePostData.length === 0)
                                return data.prePostData;
                            else if (prePostData.length > 0) {
                                var returnUrl = '';
                                for (var i = 0; i < prePostData.length; i++) {
                                    returnUrl += prePostData[i] + '<br />';
                                }
                                return returnUrl;
                            }
                        } else {
                            return "--";
                        }

                    }, "autoWidth": true, className: "no-wrap"
                },
                { "data": "InvoiceCreateMethod", "autoWidth": true },
                { "data": "Status", "autoWidth": true },
                { "data": "DropTicketNumber", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return '<input type="checkbox" class="chk-invoice" invoiceNumber="' + data.InvoiceNumber + '" id="' + data.Id + '" /><br /><span class="color-green hide ico-invoice-sent"><i class="fas fa-check-circle"></i> Email Sent</span>';
                    }, "autoWidth": true, "bSortable": false
                },
            ],
            pageLength: 10,
            responsive: true,
            fixedHeader: false,
            "order": [0, 'desc'],
            "initComplete": function (settings, json) {
                wrapperHeight();
                tabGridHeader(this);
            },
            "drawCallback": function (settings, json) {
                if ($.isFunction(window.setInvoicesBackground)) {
                    setInvoicesBackground();
                }
            },
            "columnDefs": [
                { "name": "Id", "targets": 0, "className": "hide", "searchable": false },
                { "name": "InvoiceNumber", "targets": 1 },
                { "name": "BolNumber", "targets": 2 },
                { "name": "BadgeNumber", "targets": 3, "visible": isVisibleBadgeNumber, "searchable": isVisibleBadgeNumber },
                { "name": "Customer", "targets": 4 },
                { "name": "LiftDate", "targets": 5 },
                { "name": "DropEndDate", "targets": 6 },
                { "name": "TerminalName", "targets": 7 },               
                { "name": "PickupLocation", "targets": 8 },
                { "name": "ShipTo", "targets": 9 },
                { "name": "DropLocation", "targets": 10 },
                { "name": "GrossQuantity", "targets": 11 },
                { "name": "NetQuantity", "targets": 12 },
                { "name": "ActualDropQuantity", "targets": 13 },
                { "name": "PrePostValues", "targets": 14 },
                { "name": "InvoiceCreateMethod", "targets": 15 },
                { "name": "Status", "targets": 16 },
                { "name": "DropTicketNumber", "targets": 17 },
                { "targets": 17, "searchable": false }
            ],
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'colvis', columns: exportColumns.columns },
                { extend: 'csv', title: '@Resource.headingBolSummary', exportOptions: exportColumns },
                { extend: 'excel', title: '@Resource.headingBolSummary', exportOptions: exportColumns },
                @*{ extend: 'pdf', title: '@Resource.headingBolSummary', exportOptions: exportColumns, orientation: 'landscape' },*@
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            language: {
                sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>",
                search: "<button class='btn btn-primary' id='btnsearch3'> <i class='fa fa-search'></i></button>"
            },
            initComplete: function (settings, json) {
                var api = this.api();
                var textBox = $('#bol-invoice-datatable_filter .input-sm');
                textBox.unbind();
                textBox.bind('keyup input', function (e) {
                    if (e.keyCode == 8 && !textBox.val() || e.keyCode == 46 && !textBox.val()) {
                    } else if (e.keyCode == 13 || !textBox.val()) {
                        api.search(this.value).draw();
                    }
                });

                $("#btnsearch3").click(function () {
                    api.search(textBox[0].value).draw();
                });
            }
        });
    });

    function ReloadDataTable() {
        SetLocalStorage('txtBolInvoiceFromDate', $('#txtBolInvoiceFromDate').val());
        SetLocalStorage('txtBolInvoiceToDate', $('#txtBolInvoiceToDate').val());
        supplierBolInvoice.ajax.reload();
    }

     function ExportGrid() {
         ExportDataEvent('#bol-invoice-datatable',  @ApplicationConstants.ExportRestrictionCount,
            '@Url.Action("BolInvoiceGrid", "Invoice")',
            '@string.Format(Resource.messageExportRestrictionCount, ApplicationConstants.ExportRestrictionCount)'
        );
    }
</script>
