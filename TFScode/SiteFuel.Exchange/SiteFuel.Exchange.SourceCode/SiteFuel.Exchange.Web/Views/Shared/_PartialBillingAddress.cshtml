@model BillingAddressViewModel
<div class="clone-default-address-as-billing mt5 mb10 dib">
    <div class="form-check form-check-inline">
        <input id="chk-billing-as-default-address" type="checkbox" class="form-check-input" />
        <label class="form-check-label" for="chk-billing-as-default-address">@Resource.lblUseCompanyAddress</label>
        <span class="fa fa-info-circle fs14 ml10" data-toggle="tooltip" data-placement="top" title="@Resource.lblBillingAddressInfo"></span>
    </div>
</div>
<div class="company-billing-address address-container">
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.CompanyId, new { Value = CurrentUser.CompanyId })
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(m => m.Address)<span class="required pl4 mandatory-symbol" aria-required="true">*</span>
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control mandatory-input", autofocus = "autofocus" })
                @Html.ValidationMessageFor(m => m.Address)
            </div>
        </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Address2)
                    @Html.TextBoxFor(m => m.Address2, new { @class = "form-control mandatory-input", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.Address2)
                </div>
            </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address3)
                        @Html.TextBoxFor(m => m.Address3, new { @class = "form-control mandatory-input", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.Address2)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.City)
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.City)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.State.Id, new { @Value = 0, @class = "" })
                        @Html.HiddenFor(m => m.State.Code, new { @Value = Resource.lblDummy })
                        @Html.Label(Resource.lblStateProvince)
                        @Html.TextBoxFor(m => m.State.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.State.Name)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ZipCode)
                        @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ZipCode)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Phone.PhoneType)
                        @Html.DropDownListFor(m => m.Phone.PhoneType, new SelectList(CommonHelperMethods.GetPhoneTypes(), "Id", "Name", Model.Phone.PhoneType), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Phone.PhoneType)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @{
                            Model.Phone.PhoneNumber = Model.Phone.PhoneNumber.ToFormattedPhoneNumber();
                        }
                        @Html.LabelFor(m => m.Phone.PhoneNumber)
                        @Html.TextBoxFor(m => m.Phone.PhoneNumber, new { @class = "form-control input-phoneformat phone", onchange = "IsPhoneNumberValid(this.value,'billingaddress')" })
                        @Html.ValidationMessageFor(m => m.Phone.PhoneNumber)
                        <div class="color-orange fs12 pt5" id="mobile-validation-msg-billingaddress"></div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.County)
                        @Html.TextBoxFor(m => m.County, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.County)
                    </div>
                    
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.Country.Id, new { @Value = 0, @class = "" })
                        @Html.HiddenFor(m => m.Country.Code, new { @Value = Resource.lblDummy })
                        <span class="span-margin-bottom-05-rem">@Resource.lblCountryGroup</span>
                        @Html.TextBoxFor(m => m.Country.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Country.Name)
                    </div>
                </div>
            </div>
        </div>