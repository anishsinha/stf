@model OrderPoViewModel
@using System.Text;

<style type="text/css">

    /** {
        margin: 0 auto;
    }*/

    .no-wrap {
        white-space: nowrap
    }

    .mh0 {
        margin-left: 0px !important;
        margin-right: 0px !important;
    }

    .table-wrapper {
        width: 100%;
        background: #fff;
    }

    h2 {
        font-size: 20px;
    }

    .content {
        width: 100%;
        max-width: 100%;
    }

    .content1 {
        width: 100%;
        max-width: 100%;
        margin: 0;
    }

    .img-logo {
        max-height: 100px;
    }

    .txt1, .txt2 {
        font-size: 13px;
        vertical-align: top;
    }

    .txt1 {
        text-align: left !important;
        line-height: 20px;
    }

    .txt2 {
        text-align: right !important;
        padding-right: 10px;
    }

    .txt3 {
        font-size: 12px;
        line-height: 20px;
        text-align: left !important;
    }

    .txt_rig {
        text-align: right !important;
        padding-right: 10px;
    }

    .txt4 {
        font-size: 13px;
        line-height: 20px;
        text-align: right !important;
        padding-right: 10px;
    }

    .section-border {
        background: #244397;
        height: 3px;
        margin-bottom: 0;
        width: 98%;
    }

    table tr th {
        color: #1a3a92;
        font-size: 13px;
        font-weight: bold;
    }

    .thead {
        text-align: left;
    }

    .border-bottom-blue {
        border-bottom: 2px solid #273679;
    }

    .border-top-blue {
        border-top: 2px solid #273679;
    }

    .condition {
        font-size: 10px;
        line-height: 20px;
        text-align: left !important;
        padding-right: 35px;
    }

    .total {
        font-size: 13px;
        border: 2px solid #273679;
        border-right: 0px;
    }

    .full-border {
        font-size: 13px;
        border: 2px solid #273679;
    }

    .note {
        font-size: 13px;
        border: 2px solid #273679;
        padding: 10px;
    }

    .total1 {
        font-size: 13px;
        font-weight: bold;
        border-right: 2px solid #273679;
        border-top: 2px solid #273679;
        border-bottom: 2px solid #273679;
        text-align: right !important;
        padding: 10px 10px 10px 0;
    }

    .t_left {
        text-align: left !important;
    }

    .t_right {
        text-align: right !important;
        padding-right: 10px;
    }

    .content1 tr td:empty {
        display: none;
    }

    .pad-10 {
        padding-left: 10px;
    }

    .mb-10 {
        margin-bottom: 10px;
    }

    .pa-10 {
        padding: 10px;
    }

    th {
        height: 30px;
    }

    .border-bottom-blue3 {
        border-bottom: 3px solid #244397;
    }

    .border-bottom-gray,
    .border-bottom-gray td {
        border-bottom: 2px solid #d3d3d3;
    }

    .border-all-blue {
        border: 2px solid #244397;
    }

    .po-description {
        width: 98%;
    }

        .po-description td {
            padding-top: 3px;
            padding-bottom: 3px;
        }

    .po-innertable {
        width: 100%;
    }

    .po-logo {
        max-height: 100px;
    }

    .pt10 {
        padding-top: 10px;
    }

    .pb10 {
        padding-bottom: 10px;
    }

    .label-primary,
    .badge-primary {
        background-color: #1ab394;
        color: #FFFFFF;
        border-radius: .25em;
        padding: .2em .6em .3em;
    }

    .label-danger,
    .badge-danger {
        background-color: #ed5565;
        color: #FFFFFF;
        border-radius: .25em;
        padding: .2em .6em .3em;
    }

    .border-bottom-lightgray td {
        border-bottom: 1px solid #e7e3e3;
    }

    .no-border tr:last-child td {
        border-bottom: 0px;
    }

    .font-extrabold {
        font-weight: 600
    }


    .text-italic {
        font-style: italic;
    }

    .invoice-border {
        padding: 0px;
        line-height: 0px;
        margin-top: -5px;
        position: relative;
    }

    .fs11 {
        font-size: 11px;
    }

    .f-bold {
        font-weight: bold;
    }

    .pt15 {
        padding-top: 15px;
    }

    .pb5 {
        padding-bottom: 5px;
    }

    .pl5 {
        padding-left: 5px;
    }

    .invoice-number {
        width: 120px;
        display: inline-block;
    }

    .bg-void {
        border: 10px solid rgba(255, 0, 0, .4);
        font-size: 150px;
        color: rgba(255, 0, 0, .4);
        padding: 15px 20px;
        width: 400px;
        position: absolute;
        top: 20%;
        left: 50%;
        margin-left: -200px;
        -ms-transform: rotate(-20deg);
        -webkit-transform: rotate(-20deg);
        transform: rotate(-20deg);
    }

    .po-template * {
        font-family: Tahoma,Arial,Verdana;
    }
</style>

@if (!Model.IsActive)
{
    <div class="bg-void">@Resource.lblVoid</div>
}
<div class="well po-template">
    <table class="table-wrapper" border="0" cellpadding="0" cellspacing="0" style="font-size: 13px;">
        <tr>
            <td>
                <table class="content1" align="center" border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td colspan="3" style="padding-top:20px;">
                            <table border="0" style="width:98%">
                                <td class="txt1 pad-10" align="center" width="@(string.IsNullOrEmpty(Model.CompanyLogo.FilePath) ? "0" : "15%" )">
                                    @if (!string.IsNullOrEmpty(Model.CompanyLogo.FilePath))
                                    {
                                        <img id="image-ctrl" class="po-logo" src="@Model.CompanyLogo.GetAzureFilePath(BlobContainerType.CompanyProfile)" alt="@Model.SupplierCompanyName" />
                                    }
                                </td>
                                <td class="txt1 pad-10" width="@(string.IsNullOrEmpty(Model.CompanyLogo.FilePath) ? "35%" : "20%" )">
                                    @Model.SupplierCompanyName<br />
                                    @Model.SupplierLocation.Address<br />
                                    @Model.SupplierLocation.City, @Model.SupplierLocation.StateCode @Model.SupplierLocation.ZipCode<br />
                                    <span class="phone">@Model.PhoneNumber</span>
                                </td>
                                <td class="txt1 pad-10" width="30%" align="center">
                                    <h2 style="font-size: 16px;">
                                        @{  if (!String.IsNullOrEmpty(@Model.BDRNumber))
                                            {
                                                @Resource.lblBDNFullForm<span></span> @Model.BDRNumber;
                                            }
                                            else if(Model.OrderId != 0)
                                            {
                                                @Resource.lblBDNFullForm<span></span> @Model.OrderId;
                                            }
                                        }

                                    </h2>
                                </td>
                                <td width="35%">
                                    <table align="right" class="mh0">
                                        <tr class="break-word"><td class="t_right no-wrap txt2">@Resource.lblPoNumber: </td><td align="left"> @Model.PoNumber</td></tr>
                                        <tr class="break-word"><td class="t_right no-wrap txt2" style="padding-top: 10px;">@Resource.lblInvoiceDate: </td><td style="padding-top: 10px;" align="left"><span style="display:inline-block;width:150px;border-bottom:1px solid black;padding-top:5px"></span></td></tr>
                                        <tr class="break-word"><td class="t_right no-wrap txt2" style="padding-top: 10px;">@Resource.lblPaymentDueDate: </td><td style="padding-top: 10px;" align="left"><span style="display:inline-block;width:150px;border-bottom:1px solid black;padding-top:5px"></span></td></tr>

                                        @if (!string.IsNullOrWhiteSpace(@Model.DeliveryDetails.CustomAttributeViewModel.WBSNumber))
                                        {
                                            <tr class="break-word"><td class="t_right no-wrap txt2">@Resource.lblWBSNumber: </td><td align="left" class="t_left txt2"> @Model.DeliveryDetails.CustomAttributeViewModel.WBSNumber</td></tr>
                                        }
                                        <tr class="break-word"><td class="t_right no-wrap txt2"></td><td align="left" class="txt2"></td></tr>
                                    </table>
                                </td>
                                </table>
                            </td>
                    </tr>
                    <tr>
                        <td colspan="3" style="padding-top:20px;"><div class="section-border"></div></td>
                    </tr>
                    <tr>
                        <td colspan="3" style="padding-top:20px;">
                            <table border="0" style="width:98%">
                                <tr>
                                    <th align="left">@Resource.headingBillingAddress:</th>
                                    <th align="left">@Resource.headingContactPerson:</th>
                                    <th style="text-align:right" align="right">@Resource.lblShippedTo:</th>
                                </tr>
                                <tr>
                                    @if (Model.IsBillToEnabled)
                                    {
                                        StringBuilder jobSpecificAddress = new StringBuilder();
                                        var jobSpecificFullAddress = "";
                                        if (!string.IsNullOrWhiteSpace(Model.BillToCity))
                                        {
                                            jobSpecificAddress.Append(", " + Model.BillToCity);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BillToStateName))
                                        {
                                            jobSpecificAddress.Append(", " + Model.BillToStateName);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BillToZipCode))
                                        {
                                            jobSpecificAddress.Append(", " + Model.BillToZipCode);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BillToCounty))
                                        {
                                            jobSpecificAddress.Append(", " + Model.BillToCounty);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BillToCountryName))
                                        {
                                            jobSpecificAddress.Append(", " + Model.BillToCountryName);
                                        }
                                        if (jobSpecificAddress.ToString() != "")
                                        {
                                            jobSpecificFullAddress = jobSpecificAddress.ToString().TrimStart(',', ' ');
                                        }

                                        <td class="txt1" align="left" width="16%" style="padding-right:10px">
                                            @Model.BillToName<br />
                                            @Model.BillToAddress
                                            @if (!string.IsNullOrWhiteSpace(Model.BillToAddressLine2))
                                            {
                                                @(string.IsNullOrWhiteSpace(Model.BillToAddress) ? "" : ", ")
                                                @Model.BillToAddressLine2                                                
                                            }
                                            @if (!string.IsNullOrWhiteSpace(Model.BillToAddressLine3))
                                            {
                                                @(string.IsNullOrWhiteSpace(Model.BillToAddressLine2) ? "" : ", ")
                                                @Model.BillToAddressLine3 <br />
                                            }
                                            else
                                            {
                                                <br />
                                            }
                                            @jobSpecificFullAddress<br />
                                        </td>
                                    }
                                    else
                                    {
                                        StringBuilder address = new StringBuilder();
                                        var fullAddress = "";
                                        if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.City))
                                        {
                                            address.Append(", " + Model.BuyerLocation.City);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.StateName))
                                        {
                                            address.Append(", " + Model.BuyerLocation.StateName);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.ZipCode))
                                        {
                                            address.Append(", " + Model.BuyerLocation.ZipCode);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.CountyName))
                                        {
                                            address.Append(", " + Model.BuyerLocation.CountyName);
                                        }
                                        if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.CountryName))
                                        {
                                            address.Append(", " + Model.BuyerLocation.CountryName);
                                        }
                                        if (address.ToString() != "")
                                        {
                                            fullAddress = address.ToString().TrimStart(',', ' ');
                                        }

                                        <td class="txt1" align="left" width="16%" style="padding-right:10px">
                                            @Model.BuyerCompanyName<br />
                                            @Model.BuyerLocation.Address
                                            @if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.AddressLine2))
                                            {
                                                @(string.IsNullOrWhiteSpace(Model.BuyerLocation.Address) ? "" : ", ")
                                                @Model.BuyerLocation.AddressLine2
                                            }
                                            @if (!string.IsNullOrWhiteSpace(Model.BuyerLocation.AddressLine3))
                                            {
                                                @(string.IsNullOrWhiteSpace(Model.BuyerLocation.AddressLine2) ? "" : ", ")
                                                @Model.BuyerLocation.AddressLine3 <br />
                                            }
                                            else
                                            {
                                                <br />
                                            }
                                            @fullAddress<br />
                                        </td>
                                    }
                                    <td class="txt1" width="16%">
                                        <div id="poContactName">@Model.PoContact.Name</div>
                                        <div id="poContactPhoneNumber" class="phone">@Model.PoContact.PhoneNumber</div>
                                        <div id="poContactEmail">@Model.PoContact.Email</div>
                                    </td>
                                    @if (Model.ShippingLocation.City != null && !Model.ShippingLocation.City.Equals(Resource.lblVarious))
                                    {
                                        <td class="txt1" align="right" style="text-align:right !important">
                                            @Model.JobName
                                            @if (!string.IsNullOrWhiteSpace(Model.DisplayJobID))
                                            {<span>(@Model.DisplayJobID)</span>}<br />
                                            @Model.ShippingLocation.Address<br />
                                            @Model.ShippingLocation.City, @Model.ShippingLocation.StateCode @Model.ShippingLocation.ZipCode
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="txt1" align="right" style="text-align:right !important">
                                            @Model.JobName
                                            @if (!string.IsNullOrWhiteSpace(Model.DisplayJobID))
                                            {<span>(@Model.DisplayJobID)</span>}<br />
                                            @Model.ShippingLocation.StateCode
                                        </td>
                                    }
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" style="padding:10px 0;">
                            It is agreed that all bills are due when rendered and if not paid, reasonable attorney's fees together with Court cost and interest, at the rate of 18% per annum will be paid by the named customer/vessel and its owner should suit be bought or not.
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" style="padding-top:20px;">
                            <div class="section-border"></div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <table border="0" cellpadding="0" cellspacing="0" class="po-description">
                                <tr class="border-bottom-blue3">
                                    <th class="thead" width="33%">@Resource.lblFuelType/@Resource.lblDescription</th>
                                    <th class="thead txt_rig" width="22%">@Resource.gridColumnDeliveryDateAndTime</th>
                                    <th class="thead txt_rig" width="15%">@Resource.lblQuantity</th>
                                    <th class="thead txt_rig" width="15%">@Resource.lblGridHeaderUOM</th>
                                    @*<th class="thead txt_rig" width="15%">@Resource.gridColumnAmount</th>*@
                                </tr>
                                <tr class="border-bottom-gray">
                                    <td class="break-word">
                                        @if (Model.TypeOfFuel == (int)ProductDisplayGroups.OtherFuelType && !string.IsNullOrWhiteSpace(Model.PrductDescription))
                                        {
                                            <span class="break-word">@Model.FuelName/@Model.PrductDescription</span>
                                        }
                                        else
                                        {
                                            <span class="break-word">@Model.FuelName</span>
                                        }
                                    </td>
                                    <td class="txt3 txt_rig" valign="top">
                                        @Model.DeliveryDetails.StartDate.ToString(Resource.constFormatDate)
                                        @if (Model.DeliveryDetails.EndDate != null)
                                        {
                                            <text> - </text> @Model.DeliveryDetails.EndDate.Value.ToString(Resource.constFormatDate)
                                        }
                                        @Model.DeliveryDetails.StartTime - @Model.DeliveryDetails.EndTime
                                    </td>
                                    @if (Model.QuantityTypeId == (int)QuantityType.NotSpecified)
                                    {
                                        <td class="txt_rig" valign="top">@Resource.lblNotSpecified</td>
                                    }
                                    else
                                    {
                                        <td class="txt_rig" valign="top">@Model.GallonsOrdered.GetPreciseValue(2).GetCommaSeperatedValue()</td>
                                    }
                                    <td class="txt_rig" valign="top">@Model.UoM.GetDisplayName()</td>
                                    @*<td class="txt3 txt_rig" valign="top">@(Model.OrderTotalAmount == Resource.lblHyphen ? Resource.lblHyphen : Resource.constSymbolCurrency + Model.OrderTotalAmount + " " + Model.Currency)</td>*@
                                </tr>
                                @*Different fuel price information*@
                                @if (Model.DifferentFuelPrices.Count() > 0)
                                {
                                    <tr class="border-bottom-gray">
                                        <td class="txt3" valign="top">@Resource.lblTier</td>
                                        <td colspan="4">
                                            <table cellpadding="0" cellspacing="0" class="po-innertable">
                                                <tr>
                                                    <td class="txt3 txt_rig">@Resource.lblFrom</td>
                                                    <td class="txt3 txt_rig">@Resource.lblUpto</td>
                                                    <td class="txt3 txt_rig">@Resource.lblPriceType</td>
                                                    <td class="txt3 txt_rig">@Resource.lblPricePerGallon</td>
                                                </tr>
                                                @foreach (var item in Model.DifferentFuelPrices)
                                                {
                                                    <tr>
                                                        <td class="txt3 txt_rig text-italic" valign="top" style="width:30.7%">@item.MinQuantity.GetCommaSeperatedValue()</td>
                                                        <td class="txt3 txt_rig" valign="top" style="width:23.2%">@(item.MaxQuantity.HasValue ? item.MaxQuantity.Value.GetCommaSeperatedValue() : Resource.lblHyphen)</td>
                                                        @if (item.PricingTypeId == (int)PricingType.PricePerGallon)
                                                        {
                                                            <td class="txt3 txt_rig" valign="top" style="width:23%">@Resource.lblPricePerGallon</td>
                                                            <td class="txt3 txt_rig" valign="top">@Resource.constSymbolCurrency@item.PricePerGallon @Model.Currency</td>
                                                        }
                                                        else
                                                        {
                                                            <td class="txt3 txt_rig" valign="top" style="width:23%">
                                                                @if (item.RackAvgTypeId == (int)RackPricingType.PlusPercent)
                                                                {
                                                                    @Resource.lblRackPlus <text> </text> @item.PricePerGallon @Resource.constSymbolPercent
                                                                }
                                                                else if (item.RackAvgTypeId == (int)RackPricingType.MinusPercent)
                                                                {
                                                                    @Resource.lblRackMinus <text> </text> @item.PricePerGallon @Resource.constSymbolPercent
                                                                }
                                                                else if (item.RackAvgTypeId == (int)RackPricingType.PlusDollar)
                                                                {
                                                                    @Resource.lblRackPlus <text> </text>@Resource.constSymbolCurrency@item.PricePerGallon @Model.Currency
                                                                }
                                                                else if (item.RackAvgTypeId == (int)RackPricingType.MinusDollar)
                                                                {
                                                                    @Resource.lblRackMinus <text> </text>@Resource.constSymbolCurrency@item.PricePerGallon @Model.Currency
                                                                }
                                                            </td>
                                                            <td class="txt3  txt_rig" valign="top"> - </td>
                                                        }
                                                    </tr>
                                                }
                                            </table>
                                        </td>
                                    </tr>
                                }

                                @if (Model.SpecialInstructions.Count > 0)
                                {
                                    <tr>
                                        <td class="txt3 f-bold" valign="top">@Resource.lblSpecialInstruction</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <ol class="pl25">
                                                @foreach (var specialInstruction in Model.SpecialInstructions)
                                                {
                                                    <li class="txt3">
                                                        @specialInstruction.Instruction
                                                    </li>
                                                }
                                            </ol>
                                        </td>
                                    </tr>
                                }

                            </table>
                        </td>
                    </tr>
                    @if (Model.IsShowProductDescriptionOnInvoice)
                    {
                        <tr>
                            <td valign="top" colspan="3">
                                @Html.Raw(Model.SuperAdminProductDescription)
                            </td>
                        </tr>
                    }
                    <tr>
                        <td valign="top" colspan="3">
                            <table border="0" cellpadding="0" cellspacing="0" style="width:98%">
                                <tr><td colspan="2" height="5">&nbsp;</td></tr>
                                <tr>
                                    <td colspan="2" valign="top">
                                        <table width="100%">
                                            <tr>
                                                <td style="padding-bottom:10px;">Vessel: @(string.IsNullOrWhiteSpace(Model.Vessel) ? "__________" : Model.Vessel)</td>
                                                <td style="padding-bottom:10px;">IMO#: @(string.IsNullOrWhiteSpace(Model.IMONumber) ? "__________" : Model.IMONumber)</td>
                                                <td style="padding-bottom:10px;">Berth: @(string.IsNullOrWhiteSpace(Model.Berth) ? "__________" : Model.Berth)</td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr><td colspan="2" height="5">&nbsp;</td></tr>
                                <tr>
                                    <td colspan="2" valign="top">
                                        <table width="100%">
                                            <tr><td style="padding-bottom:10px;">MARPOL sample number(s): <span style="display:inline-block;width:300px;border-bottom:1px solid black"></span></td></tr>
                                            <tr><td height="5">&nbsp;</td></tr>
                                            <tr><td>MV MARPOL sample number(s): <span style="display:inline-block;width:300px;border-bottom:1px solid black"></span></td></tr>
                                        </table>
                                    </td>
                                    <td width="30%">
                                        <table align="right">
                                            <tr>
                                                <td align="right">Net Gallons:</td>
                                                <td valign="bottom"><span style="display:inline-block;width:80px;border-bottom:1px solid black"></span></td>
                                            </tr>
                                            <tr>
                                                <td colspan="2" height="5">&nbsp;</td>
                                            </tr>
                                            <tr>
                                                <td align="right">MT: </td>
                                                <td valign="bottom"><span style="display:inline-block;width:80px;border-bottom:1px solid black"></span></td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        <table width="100%" id="auto-BdrValue">
                                            <tr>
                                                <td colspan="3" height="5">&nbsp;</td>
                                            </tr>
                                            <tr>
                                                <td>Temp: <span style="display:inline-block;width:80px;border-bottom:1px solid black"></span></td>
                                                <td>API Gravity: <span style="display:inline-block;width:60px;border-bottom:1px solid black"></span></td>
                                                <td id="auto-density">Density at 15 deg C: <span style="display:inline-block;width:80px;border-bottom:1px solid black"></span></td>
                                            </tr>
                                            <tr>
                                                <td colspan="3" height="10">&nbsp;</td>
                                            </tr>
                                            <tr>
                                                <td id="auto-sulfurContent">Sulfur Content: <span style="display:inline-block;width:60px;border-bottom:1px solid black"></span></td>
                                                <td id="auto-viscosity">Viscosity: <span style="display:inline-block;width:80px;border-bottom:1px solid black"></span></td>
                                                <td id="auto-flashPoint">Flash point: <span style="display:inline-block;width:80px;border-bottom:1px solid black"></span></td>
                                            </tr>
                                        </table>
                                        <p style="margin-top:10px">
                                            The above quality is delivered in good order and condition for use as bunkers with a representative sample in relation to the International Convention for the Prevention of Pollution from Ships 1973/78 Consolidated Edition 1997 and conforms with regulation 18.3 of MARPOL Annex VI Regulation.
                                        </p>
                                        <p>
                                            <table width="100%" cellpadding="0" cellspacing="0">
                                                <tr>
                                                    <td colspan="2" style="padding-bottom:5px;">The Sulfur Content of the fuel supplied does not exceed:</td>
                                                </tr>
                                                <tr>
                                                    <td valign="top"><input type="checkbox" readonly /></td>
                                                    <td style="padding-left:5px;line-height: 15px;"><label>MARPOL Annex VI Regulation 14.1</label></td>
                                                </tr>
                                                <tr>
                                                    <td valign="top"><input type="checkbox" readonly /></td>
                                                    <td style="padding-left:5px;line-height: 15px;"><label>MARPOL Annex VI Regulation 14.4</label></td>
                                                </tr>
                                                <tr>
                                                    <td valign="top"><input type="checkbox" readonly /></td>
                                                    <td valign="top" style="padding-left:5px;line-height: 17px;"><label>The purchasers specified limit value of _____% (m/m), as completed by the fuel oil supplier’s representative and on the basis of the purchasers notification that the fuel oil is intended to be used:</label></td>
                                                </tr>
                                            </table>
                                            <ol>
                                                <li>
                                                    In combination with an equivalent means of compliance in accordance with relation 4 of this Annex
                                                </li>
                                                <li>
                                                    Is subject to relevant exemptions for a ship to conduct trials for Sulfur oxides emission and control technology research in accordance with regulation 3.2 of this annex
                                                </li>
                                            </ol>
                                        </p>
                                        <p>
                                            All Bunker Deliveries are subject to our General Terms and Conditions of Contract (current version)
                                        </p>
                                    </td>
                                    <td style="text-align:center" valign="top">
                                        <div style="text-align:center;width:80%;float:right;margin-top:50px;">
                                            <div style="border:2px solid black;border-radius:10px;height:200px;margin-bottom:10px;"></div>
                                            <strong style="display:block">Stamp</strong>
                                            <span style="border-bottom:1px solid black;width:200px;display:inline-block;margin-top:100px;"></span>
                                            <div>Vessel Representative Signature</div>
                                        </div>
                                        <div style="text-align:center;width:80%;float:right;margin-top:50px;margin-bottom:5px">
                                            <span style="border-bottom:1px solid black;width:200px;display:inline-block;margin-top:50px;"></span>
                                            <div style="text-align:center;">Representative Signature<br />@Model.SupplierCompanyName</div>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    @if (Model.PdfFooter != null)
                    {
                        <tr>
                            <td valign="top" colspan="3">
                                <table border="0" cellpadding="0" cellspacing="0" style="width:98%">
                                    <tr>
                                        <td>
                                            <table width="100%" border="0" cellspacing='0' cellpadding='5'>
                                                <tr>
                                                    <td colspan="2"> @Html.Raw(Model.PdfFooter.Description)</td>
                                                </tr>
                                                <tr>
                                                    <td valign="top"> @Html.Raw(Model.PdfFooter.BankingInstructions)</td>
                                                    <td valign="top">@Html.Raw(Model.PdfFooter.AdditionalDetails)</td>
                                                </tr>
                                            </table>
                                        </td>
                                        <td width="27%">
                                            <img src="@Model.PdfFooter.QRCodePath" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
    </table>
