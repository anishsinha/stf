@model FeesViewModel
@{
    var prefix = ViewData.TemplateInfo.HtmlFieldPrefix;
    var randomNum099 = (new Random()).Next(0, 99);
}
@Html.HiddenFor(m => m.Currency)
@Html.HiddenFor(t => t.TruckLoadType)
@Html.HiddenFor(t => t.TruckLoadCategoryId)
<div class="fee-type-row col-sm-12">
    <div class="fee-types row">
        <div class="hidden-value-common-fee">
            @Html.HiddenFor(t => t.CommonFee)
        </div>
        @if (Model.FeeConstraintTypeId.HasValue)
        {
            <div class="col-sm-2">
                <div class="form-group mb0">
                    @Html.DropDownListFor(m => m.FeeConstraintTypeId, new SelectList(CommonHelperMethods.GetAllFeeConstraintTypes(), "Id", "Name"), new { @class = "form-control special-date-feetype-ddl", @onchange = "showHideSpecialDate(this); SetSpecialMinDate(this);" })
                    @Html.ValidationMessageFor(m => m.FeeConstraintTypeId)
                </div>
            </div>
            <div class="col-sm-2 special-date-div @(Model.FeeConstraintTypeId.Value == (int)FeeConstraintType.Weekend ? "hide-element" : "")">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.SpecialDate, new { @class = "form-control datepicker special-date", placeholder = "Special Date" })
                    @Html.ValidationMessageFor(m => m.SpecialDate)
                </div>
            </div>
        }
        @if (Model.CommonFee)
        {
            <div class="col-sm-2 fee-type-ddl">
                <div class="form-group">
                    @Html.DropDownListFor(m => m.FeeTypeId, new SelectList(CommonHelperMethods.GetAllFeeTypes(CurrentUser.CompanyId, Model.Currency, Model.TruckLoadType), "Code", "Name"), "Select Fee", Model.FeeConstraintTypeId.HasValue ? new { @class = "form-control special-feetype-ddl feetype-ddl", @onchange = "showHideQuantity(this);", @onclick = "showHideQuantity(this);" } as object : new { @class = "form-control feetype-ddl", @onchange = "showHideQuantity(this);", @onclick = "showHideQuantity(this);" } as object)
                    @Html.ValidationMessageFor(m => m.FeeTypeId)
                </div>
            </div>
        }
        else
        {
            <div class="col-sm-2 fee-type-name">
                <div class="form-group">
                    @Html.HiddenFor(m => m.FeeTypeId)
                    @Html.TextBoxFor(m => m.OtherFeeDescription, new { @class = "form-control otherFeeDesc", placeholder = "Fee Name" })
                    @Html.ValidationMessageFor(m => m.OtherFeeDescription)
                </div>
            </div>
        }
        <div class="col-sm-2 fee-sub-type-ddl">
            <div class="pa bg-white top0 left0 z-index5 loading-wrapper mtm10 hide-element"><span class="spinner-dashboard pa"></span></div>
            <div class="form-group">
                @Html.DropDownListFor(m => m.FeeSubTypeId, new SelectList(CommonHelperMethods.GetAllFeeSubTypes(Model.FeeTypeId, Model.Currency), "Id", "Name"), "Select Fee Type", new { @class = "form-control feesubtype-ddl", @onchange = "showHideQuantity(this);" })
                @Html.ValidationMessageFor(m => m.FeeSubTypeId)
            </div>
        </div>
        <div class="col-sm-2 under-gallon-fee hide-element">
            <div class="form-group">
                <div class="mb5 undergallonfee defaultDisabled">
                    @Html.TextBoxFor(m => m.MinimumGallons, new { @class = "form-control datatype-decimal", placeholder = Model.Currency == Currency.CAD ? Resource.lblMinLitres : Resource.lblMinGallons, data_toggle = "tooltip", data_placement = "top", title = Model.Currency == Currency.CAD ? Resource.lblMinLitres : Resource.lblMinGallons })
                </div>
                @Html.ValidationMessageFor(m => m.MinimumGallons)
            </div>
        </div>
        <div class="regular-fee col-sm-5">
            <div class="row">
                <div id="common-delivery-fee-section-@randomNum099-@Model.FeeTypeId-@Model.FeeConstraintTypeId" class="partial-section col-sm-12 quantity-range byquantity-fee @(Model.FeeSubTypeId == (int)FeeSubType.ByQuantity ? "" : "hide-element")">
                    <div class="partial-block-collection-section">
                        @if (Model.DeliveryFeeByQuantity != null && Model.DeliveryFeeByQuantity.Count() > 0)
                        {
                            foreach (var deliveryFeeByQuantity in Model.DeliveryFeeByQuantity)
                            {
                                deliveryFeeByQuantity.CollectionHtmlPrefix = prefix;
                                Html.RenderPartial("~/Views/Shared/_PartialDeliveryFeeByQuantity.cshtml", deliveryFeeByQuantity);
                            }
                        }
                    </div>
                    @Html.ValidationMessageFor(m => m.DeliveryFeeByQuantity)
                    <div class="form-group mt7">
                        <a href="javascript:void(0)" onclick="AjaxStart(this)" class="add-partial-block mb10" data-url="@Url.Action("DeliveryFeeByQuantity", new { prefix = prefix, currency = Model.Currency, uoM = Model.UoM})"><span class="fa fa-plus-circle"></span> @Resource.btnLabelAddDeliveryFee</a>
                    </div>
                </div>
                <div class="col-sm-5 mb10 fee">
                    <div class="form-group">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text fs11">@Model.Currency</span>
                            </div>
                            @Html.TextBoxFor(m => m.Fee, new { @class = "form-control datatype-decimal" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Fee)
                    </div>
                </div>
                <div class="col-sm-7 mb10 waiver @(Model.TruckLoadCategoryId == (int)TruckLoadFeeCategories.FTLWaiver || Model.FeeTypeId == ((int)FeeType.DemurrageFeeTerminal).ToString()
                || Model.FeeTypeId == ((int)FeeType.DemurrageFeeDestination).ToString() || Model.FeeTypeId == ((int)FeeType.DemurrageOther).ToString() ? "" : "hide-element")">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text waiver-time fs11">@Resource.lblEmbeddedTime</span>
                            </div>
                            @Html.TextBoxFor(m => m.WaiveOffTime, new { @class = "form-control" })
                            <div class="input-group-append">
                                <span class="input-group-text waiver-time fs11">@Resource.lblMin</span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(m => m.WaiveOffTime)
                    </div>
                </div>
                <div class="col-sm-4 clearboth mb10 hide-element time-min show-in-invoice">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.TimeInMinutes, new { @class = "form-control", placeholder = "Time (Mins)" })
                        @Html.ValidationMessageFor(m => m.TimeInMinutes)
                    </div>
                </div>
            </div>
            </div>
        <div class="col-sm-2 mb10 defaultDisabled hide-element show-in-tpo section-include-in-ppg">
            <div class="checkbox mt10">
                <label>
                    @Html.CheckBoxFor(m => m.IncludeInPPG)
                    <span class="chk-include-ppg">@(Model.Currency == Currency.CAD ? Resource.lblIncludeInPPL : Resource.lblIncludeInPPG)</span>
                </label>
            </div>
        </div>
        <div class="fs18 col-1">
            <a href="javascript:void(0)" name="remove-partial-fee" class="fa fa-trash-alt mt10 color-maroon remove-fee" title="@Resource.btnLabelRemove" onclick="refreshFeeTypeDdl(this);removePartial(this);"></a>
        </div>
        <div class="fee-type-addtocommon col-sm-12 ">
            <div class="checkbox mb10 mtm10">
                <label>
                    @Html.CheckBoxFor(m => m.AddToCommonFees)
                    @Resource.lblAddToCommonFees
                </label>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $.each($(document).find('.fee-types'), function (idx, elem) {
            var commonFee = $(elem).find('.hidden-value-common-fee').find('input[type=hidden]').val();
            if (commonFee == 'True') {
                showHideControlsByElement(elem, 'fee-type-ddl,fee', 'fee-type-name,fee-type-addtocommon'); showHideQuantity(elem);
            }
            else {
                showHideControlsByElement(elem, 'fee-type-name,fee-type-addtocommon,fee', 'fee-type-ddl,under-gallon-fee,byquantity-fee');
            }
        });

        var isMarineLocation = $('.IsMarineLocation').val();
        if (isMarineLocation == 'True') {
            $('.feetype-ddl option').each(function () {
                if ($(this).text().toLowerCase().indexOf('gallon') != -1) {
                    $(this).remove();
                }
                else if ($(this).text().toLowerCase().indexOf('litre') != -1){
                    $(this).remove();
                }
            });

            $('.feesubtype-ddl option').each(function () {
                if ($(this).text().toLowerCase().indexOf('gallon') != -1) {
                    $(this).remove();
                }
                else if ($(this).text().toLowerCase().indexOf('litre') != -1) {
                    $(this).remove();
                }
            });
        }
    });
</script>