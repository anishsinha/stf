@model TPOBrokeredOrderFeeViewModel
@Html.HiddenFor(m => m.Currency)
@Html.HiddenFor(m => m.UoM)
    <div class="col-sm-12">
        <h4>@Resource.headingFees <i class="fa fa-info-circle ml5 fs14" data-toggle="tooltip" data-placement="top" title="@Resource.infoMsgTPOBrokerFee"></i>
    </h4>
    <div class="col-sm-12">
        <div class="row border-b">
            <div class="col-sm-2 mt7 pl0">
                @Html.LabelFor(m => m.FreightFeeSubTypeId)
            </div>
            <div class="col-xs-5 col-sm-2">
                <div class="radio mt7">
                    <label>
                        @Html.RadioButtonFor(m => m.FreightFeeSubTypeId, (int)FeeSubType.NoFee, new { onclick = "radioChange(this,null,'freightfee')" })
                        @Resource.lblNoFee
                    </label>
                </div>
            </div>
            <div class="col-xs-5 col-sm-2 col-md-2">
                <div class="radio mt7">
                    <label>
                        @Html.RadioButtonFor(m => m.FreightFeeSubTypeId, (int)FeeSubType.PerRoute, new { onclick = "radioChange(this,'freightfee',null);", onchange = "focusOnFirst(this, 'freightfee');" })
                        @Resource.lblPerRoute
                    </label>
                </div>
            </div>
            <div class="col-xs-5 col-sm-2 col-md-2">
                <div class="radio mt7">
                    <label>
                        @Html.RadioButtonFor(m => m.FreightFeeSubTypeId, (int)FeeSubType.ByAssetCount, new { onclick = "radioChange(this,'freightfee',null);", onchange = "focusOnFirst(this, 'freightfee');" })
                        @Resource.lblPerAsset
                    </label>
                </div>
            </div>
            <div class="col-xs-5 col-sm-2 col-md-2">
                <div class="radio mt7">
                    <label>
                        @Html.RadioButtonFor(m => m.FreightFeeSubTypeId, (int)FeeSubType.PerGallon, new { onclick = "radioChange(this,'freightfee',null);", onchange = "focusOnFirst(this, 'freightfee');" })
                        @Resource.lblPerGallon
                    </label>
                </div>
            </div>
            <div class="col-xs-5 col-sm-2">
                <div class="input-group mb5 freightfee defaultDisabled">
                    <span class="input-group-addon">@Resource.constSymbolCurrency</span>
                    @Html.TextBoxFor(m => m.FreightFee, new { @class = "form-control datatype-decimal" })
                </div>
                @Html.ValidationMessageFor(m => m.FreightFee)
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2 mt7 pl0">
                @Resource.lblOther
            </div>
            <div class="col-sm-10">
                <div id="brokered-fee-section" class="partial-section">
                    <div class="partial-block-collection-section">
                        @if (Model.AdditionalFees != null && Model.AdditionalFees.Count() > 0)
                        {
                            foreach (var additionalfee in Model.AdditionalFees)
                            {
                                Html.RenderPartial("_PartialBrokeredAdditionalFee", additionalfee);
                            }
                        }
                    </div>
                    <div class="row">
                        <div class="radio mt7 col-sm-12">
                            <a id="addFreightFee" href="javascript:void(0)" class="add-partial-block" data-url="@Url.Action("AdditionalFee", "Order", new { area = "Supplier" })"><i class="fas fa-plus-circle"></i> @Resource.btnLabelAddFee</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
