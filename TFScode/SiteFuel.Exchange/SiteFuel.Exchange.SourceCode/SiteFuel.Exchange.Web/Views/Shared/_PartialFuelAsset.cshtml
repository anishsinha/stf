@using SiteFuel.Exchange.Web.Common
@model CompanyViewModel

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <div class="modal" id="fleetModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Create Trailer</h4>
                            <button class="close mt-0 pt-2" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <div id="fleetForm">
                                <div class="row">
                                    <div class="form-group col-sm-4">
                                        <label>Trailer Type</label>
                                        @Html.DropDownListFor(m => m.FuelAssets.FuelTrailerServiceTypeFTL,
                                                                from FuelTrailerAssetType AssetType in Enum.GetValues(typeof(FuelTrailerAssetType)).Cast<FuelTrailerAssetType>().ToList()
                                                                select new SelectListItem() { Text = AssetType.ToString(), Value = ((int)AssetType).ToString() }, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(m => m.FuelAssets.FuelTrailerServiceTypeFTL)
                                    </div>
                                    <div class="form-group col-sm-4">
                                        <label>Capacity per asset(G)</label>
                                        @Html.TextBoxFor(m => m.FuelAssets.Capacity, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.FuelAssets.Capacity)
                                    </div>
                                    <div class="form-group col-sm-4">
                                        <label>Count</label>
                                        @Html.TextBoxFor(m => m.FuelAssets.Count, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.FuelAssets.Count)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-sm-4">
                                        <label class="d-block">Is Your Trailer Metered?</label>
                                        <div class="radio-controls">
                                            <div class="form-check form-check-inline">
                                                @Html.RadioButtonFor(m => m.FuelAssets.IsTrailerMetered, true, new { @id = "FRadioYes", @class = "form-check-input" })
                                                <label class="form-check-label" for="FRadioYes">Yes</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                @Html.RadioButtonFor(m => m.FuelAssets.IsTrailerMetered, false, new { @id = "FRadioNo", @class = "form-check-input" })
                                                <label class="form-check-label" for="FRadioNo">No</label>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.FuelAssets.IsTrailerMetered)
                                        </div>
                                    </div>
                                    <div class="form-group col-sm-4">
                                        <label class="d-block">Does Your Trailer have Pump?</label>
                                        <div class="radio-controls">
                                            <div class="form-check form-check-inline">
                                                @Html.RadioButtonFor(m => m.FuelAssets.TrailerHasPump, true, new { @id = "TRadioYes", @class = "form-check-input" })
                                                <label class="form-check-label" for="TRadioYes">Yes</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                @Html.RadioButtonFor(m => m.FuelAssets.TrailerHasPump, false, new { @id = "TRadioNo", @class = "form-check-input" })
                                                <label class="form-check-label" for="TRadioNo">No</label>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.FuelAssets.TrailerHasPump)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="btn-group">
                                <input class="btn" type="button" value="@Resource.btnLabelCancel" onclick="window.location.reload(true);" />
                                <input class="btn btn-lg btn-primary" type="button" value="@Resource.btnLabelSubmit" id="btnFuelSubmit" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
 </div>
<script>
        $(document).ready(function () {
            $("#btnFuelSubmit").click(function () {
                var FuelTrailerServiceTypeFTL = $('#@Html.IdFor(m => m.FuelAssets.FuelTrailerServiceTypeFTL)').val();
                var Capacity = $('#@Html.IdFor(m => m.FuelAssets.Capacity)').val();
                var TrailerHasPump = $('input[name="@Html.NameFor(m => m.FuelAssets.TrailerHasPump)"]:checked').val();
                var IsTrailerMetered = $('input[name="@Html.NameFor(m => m.FuelAssets.IsTrailerMetered)"]:checked').val();
                var Count = $('#@Html.IdFor(m => m.FuelAssets.Count)').val();

                var model = {
                    FuelTrailerServiceTypeFTL: FuelTrailerServiceTypeFTL,
                    Capacity: Capacity,
                    TrailerHasPump: TrailerHasPump,
                    IsTrailerMetered: IsTrailerMetered,
                    Count: Count
                }
                var url = '@Url.Action("AddFuelAssetInformation", "Profile", new { area= "Settings" })';
                var data = model;
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        if (response.StatusCode == 0) {
                            msgsuccess(response.StatusMessage);
                            window.location.reload(true);
                        }
                        else {
                            msgerror(response.StatusMessage);
                            window.location.reload(true);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR, textStatus, errorThrown);
                    }
                })
            })
        })
</script>
