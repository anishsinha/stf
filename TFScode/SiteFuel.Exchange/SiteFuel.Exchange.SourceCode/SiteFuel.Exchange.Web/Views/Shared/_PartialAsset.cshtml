@using SiteFuel.Exchange.Web.Common

@model AssetViewModel
<!-- asset details starts -->
<div class="col-sm-12">
    <div class="row well bg-white shadow-a radius10 mb15">
        <div class="col-sm-12">
            <h4 class="pb10">@Resource.headingAsset</h4>
            <div class="privateSelect">
                    <div class="row">
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.Id)
                                @Html.HiddenFor(m => m.Type)
                                @Html.HiddenFor(m => m.JobId)
                                @Html.HiddenFor(m => m.IsJobDetails)
                                @Html.HiddenFor(m => m.CompanyId)
                                @Html.HiddenFor(m => m.CreatedDate)
                                @Html.HiddenFor(m => m.AssetAdditionalDetail.AssetId)
                                @Html.HiddenFor(m => m.AssetAdditionalDetail.Type)
                                @Html.HiddenFor(m => m.AssetAdditionalDetail.MinFill, new { Value = 30 })
                                @Html.HiddenFor(m => m.AssetAdditionalDetail.MaxFill, new { Value = 95 })
                                @Html.LabelFor(m => m.Name)<span class="pl4 color-red">*</span>
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Name)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Class)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.Class, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Class)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.SubContractorId)
                                @Html.DropDownListFor(m => m.AssetAdditionalDetail.SubContractorId, new SelectList(CommonHelperMethods.GetSubContractors(Model.JobId, CurrentUser.CompanyId), "Id", "Name", Model.AssetAdditionalDetail.SubContractorId), string.Format(Resource.valMessageSelect, Resource.lblCompany), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.SubContractorId)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3 inline-chk-custom">
                            <div class="form-group form-check mt25">
                                @Html.CheckBoxFor(m => m.IsMarine, new { onchange = "toggleFuelTypeAndIsMarineFlag(this,'isMarine')", @class = "form-check-input" })
                                @Html.LabelFor(m => m.IsMarine, new { @class = "form-check-label" })
                                @Html.ValidationMessageFor(m => m.IsMarine)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.FuelType)
                                @Html.DropDownListFor(m => m.FuelType.Id, new SelectList(CommonHelperMethods.GetAssetFuelTypes(), "Id", "Name", Model.FuelType == null ? 0 : Model.FuelType.Id), string.Format(Resource.valMessageSelect, Resource.lblFuelType), new { onchange = "toggleFuelTypeAndIsMarineFlag(this,'fuelType')", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.FuelType.Id)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.FuelCapacity)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.FuelCapacity, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.FuelCapacity)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Make)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.Make, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Make)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Model)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.Model, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Model)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Year)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.Year, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Year)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Color)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.Color, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Color)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.LicensePlateStateId)
                                @Html.DropDownListFor(m => m.AssetAdditionalDetail.LicensePlateStateId, new SelectList(CommonHelperMethods.GetStatesEx(), "Id", "Code", Model.AssetAdditionalDetail.LicensePlateStateId.HasValue ? Model.AssetAdditionalDetail.LicensePlateStateId.Value : 0), string.Format(Resource.valMessageSelect, Resource.lblState), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.LicensePlateStateId)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.LicensePlate)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.LicensePlate, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.LicensePlate)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.VehicleId)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.VehicleId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.VehicleId)
                            </div>
                        </div>
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.TelematicsProvider)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.TelematicsProvider, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.TelematicsProvider)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 col-sm-3">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Vendor)
                                @Html.TextBoxFor(m => m.AssetAdditionalDetail.Vendor, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Vendor)
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.AssetAdditionalDetail.Description)
                                @Html.TextAreaFor(m => m.AssetAdditionalDetail.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AssetAdditionalDetail.Description)
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
</div>
<!-- asset details ends -->
<!-- asset image starts -->
<div class="col-sm-12">
    <div class="row well bg-white shadow-a radius10 mb15">
        <div class="col-sm-12">
            <h4 class="pb10">@Resource.headingImage</h4>
            <div class="row">
                <div class="col-sm-3">
                    <div class="row">
                        <div id="image-block" class="text-center col-sm-12">
                            @if (@Model.DisplayMode == PageDisplayMode.Edit)
                            {
                                @Html.HiddenFor(m => m.Id)
                                @Html.HiddenFor(m => m.Image.Id)
                                @Html.HiddenFor(m => m.Image.Data)
                                @Html.HiddenFor(m => m.Image.IsRemoved, new { @class = "image-remove-status" })
                            }
                            @if (Model.Image == null || Model.Image.Id == 0)
                            {
                                <img id="image-ctrl" class="company-logo-dim img-circle" src="~/Content/images/no-image.png" />
                            }
                            else
                            {
                                <img id="image-ctrl" class="company-logo-dim img-circle" src="@Model.Image.FilePath" />
                            }
                            <input type="file" class="hidden" id="btn-logo" name="imageFile">
                        </div>
                    </div>
                    <div class="row mt5">
                        <div class="col-6 text-right">
                            <input type="button" class="btn btn-primary btn-sm" id="choose-file" value="@Resource.btnLabelSelect">
                        </div>
                        <div class="col-6 text-left">
                            <input type="button" class="btn btn-danger btn-sm" id="remove-file" value="@Resource.btnLabelRemove">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 fs10 col-centered">
                            <div class="text-center text-danger mt10" id="img-message"></div>
                            <div class="alert alert-warning fs10 mt10">@Resource.lblCompanyLogoWarning</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<!-- asset image ends -->

@*@using (Html.BeginScripts())
    {*@
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/Content/js/image")

<script type="text/javascript" charset="utf-8">
        var isValidStorageTypeId = true;
        function getDefaultImage() {
            return '@Url.Content("~/Content/images/no-image.png", true)';
        };

        function getImageFileError() {
            return '@Resource.errMessageImageFileError';
        };

        function getImageFileWarning() {
            return '@Resource.errMessageImageFileWarning';
        };

        $('#btn-logo').change(function (e) {
            if (e.target.files && e.target.files[0]) {
                $("#btn-save").removeAttr("disabled");
            }
        });

        $("#remove-file").click(function () {
            var image = $('#btn-logo');
            var imageId = parseInt($('#@Html.IdFor(m=>m.Image.Id)').val());
            if ((image.files && image.files[0]) || imageId > 0) {
                $("#btn-save").removeAttr("disabled");
            }
            else {
                $("#btn-save").attr("disabled", "disabled");
            }
        });

    function ValidateStorageTypeIdAndStorageId() {
        return isValidStorageTypeId;
    }
    function toggleFuelTypeAndIsMarineFlag(ele, changeType) {
        var marineSelectText = 'Marine';
            if (changeType === 'isMarine') {
                var isMarineaAsset = $(ele).prop("checked");
                if (isMarineaAsset) {                    
                    @*// $("#@Html.IdFor(m=>m.FuelType.Id)").find('option[value="17"]').prop('selected', true);
                    $("#@Html.IdFor(m=>m.FuelType.Id)").find("option[text=" + SelectedText + "]").prop("selected", true);*@

                    $("#@Html.IdFor(m=>m.FuelType.Id) option").filter(function () {
                        return this.text == marineSelectText;
                    }).prop('selected', true);
                }
                else {
                   @*// $("#@Html.IdFor(m=>m.FuelType.Id)").find('option[value="17"]').prop('selected', false);
                    $("#@Html.IdFor(m=>m.FuelType.Id)").find("option[text=" + SelectedText + "]").prop("selected", falses);*@
                    $("#@Html.IdFor(m=>m.FuelType.Id) option").filter(function () {
                        return this.text == marineSelectText;
                    }).prop('selected', false);
                }
            }
        if (changeType === 'fuelType') {
            var selectedFuelType = $("#@Html.IdFor(m => m.FuelType.Id) option:selected").text();              
            if (selectedFuelType === marineSelectText) {
                    $("#@Html.IdFor(m=>m.IsMarine)").prop("checked", true);
                } else {
                    $("#@Html.IdFor(m=>m.IsMarine)").prop("checked", false);
                }
            }

        }
</script>
@*}*@
<!-- partial view ends -->
