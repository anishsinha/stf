@model DropAddressViewModel
<!-- address starts -->
        <div class="row">
            <div class="col-md-12 address-container">
                <div class="pa bg-white top0 left0 z-index5 loading-wrapper hide-element"><span class='spinner-dashboard pa'></span></div>
                <div class="address-controls">
                    <div class="checkbox mt0">
                        <label>
                            @Html.CheckBoxFor(m => m.IsAddressAvailable, new { onclick = "showHideonCheckbox(this,'various-required-fields')" })
                            @Html.DisplayNameFor(m => m.IsAddressAvailable)
                        </label>
                    </div>
                    <div class="row combineDiv">
                        <div class="various-required-fields">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address)
                                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control address addressInput" })
                                    @Html.ValidationMessageFor(m => m.Address)
                                </div>
                            </div>
                            <div class="col-xs-2">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ZipCode)
                                    @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control zipcode addressInput" })
                                    @Html.ValidationMessageFor(m => m.ZipCode)
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.City)
                                    @Html.TextBoxFor(m => m.City, new { @class = "form-control city addressInput" })
                                    @Html.ValidationMessageFor(m => m.City)
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.State.Name, new { @Value = Resource.lblDummy, @class = "statename" })
                                @Html.HiddenFor(m => m.State.Code, new { @Value = Model.State.Code ?? Resource.lblDummy, @class = "statecode" })
                                @Html.LabelFor(m => m.State.Id)
                                @Html.DropDownListFor(m => m.State.Id, new SelectList(CommonHelperMethods.GetStatesOfAllCountries(), "StateId", "StateName", Model.State.Id), string.Format(Resource.valMessageSelect, Resource.lblState), new { @class = "form-control state addressInput" })
                                @Html.ValidationMessageFor(m => m.State.Id)
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.Country.Name, new { @Value = Resource.lblDummy, @class = "countryname" })
                                @Html.HiddenFor(m => m.Country.Code, new { @Value = Model.Country.Code ?? Resource.lblDummy, @class = "countrycode" })
                                @Html.HiddenFor(m => m.CountyName, new { @Value = Resource.lblDummy, @class = "county" })
                                @Html.LabelFor(m => m.Country.Id)
                                @Html.DropDownListFor(m => m.Country.Id, new SelectList(CommonHelperMethods.GetCountriesEx(), "Id", "Code", Model.Country.Id), new { @class = "form-control country addressInput" })
                                @Html.ValidationMessageFor(m => m.Country.Id)
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.IsGeocodeUsed)
                    @Html.HiddenFor(m => m.Latitude)
                    @Html.HiddenFor(m => m.Longitude)
                </div>
            </div>
        </div>
<!-- address ends -->