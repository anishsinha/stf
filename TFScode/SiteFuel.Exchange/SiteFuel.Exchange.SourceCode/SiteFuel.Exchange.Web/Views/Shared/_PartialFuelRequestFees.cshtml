@model FuelRequestFeeViewModel

<div class="row">
    <div class="col-md-12">
        <div class="col-xs-12 border-b ">
            <div class="row">
                <div class="col-sm-2 mt7 pl0">
                    @Html.LabelFor(m => m.WetHoseFeeSubTypeId)
                </div>
                <div class="col-xs-5 col-sm-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.WetHoseFeeSubTypeId, (int)FeeSubType.NoFee, new { onclick = "radioChange(this,null,'wethosefee')", @class = "revalidate" })
                            @Resource.lblNoFee
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2 col-md-2">
                    <div class="radio mt7 asset-tracking">
                        <label>
                            @Html.RadioButtonFor(m => m.WetHoseFeeSubTypeId, (int)FeeSubType.ByAssetCount, new { onclick = "radioChange(this,'wethosefee',null);", onchange = "focusOnFirst(this, 'wethosefee');", @class = "revalidate" })
                            @Resource.lblPerAsset
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2 col-md-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.WetHoseFeeSubTypeId, (int)FeeSubType.HourlyRate, new { onclick = "radioChange(this,'wethosefee',null);", onchange = "focusOnFirst(this, 'wethosefee');", @class = "revalidate" })
                            @Resource.lblHourlyRate
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2">
                    <div class="input-group mb5 wethosefee defaultDisabled">
                        <span class="input-group-addon">@Resource.constSymbolCurrency</span>
                        @Html.TextBoxFor(m => m.WetHoseFee, new { @class = "form-control datatype-decimal" })
                    </div>
                    @Html.ValidationMessageFor(m => m.WetHoseFee)
                </div>
                <div class="col-sm-2 mb5 wethosefee defaultDisabled hide-element show-in-tpo">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.WetHoseFeeIncludeInPPG)
                            @Resource.lblIncludeInPPG
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-xs-12 border-b ">
            <div class="row">
                <div class="col-sm-2 mt7 pl0">
                    @Html.LabelFor(m => m.OverWaterFeeSubTypeId)
                </div>
                <div class="col-xs-5 col-sm-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.OverWaterFeeSubTypeId, (int)FeeSubType.NoFee, new { onclick = "radioChange(this,null,'overwaterfee')", @class = "revalidate" })
                            @Resource.lblNoFee
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2 col-md-2">
                    <div class="radio mt7 asset-tracking">
                        <label>
                            @Html.RadioButtonFor(m => m.OverWaterFeeSubTypeId, (int)FeeSubType.ByAssetCount, new { onclick = "radioChange(this,'overwaterfee',null);", onchange = "focusOnFirst(this, 'overwaterfee');", @class = "revalidate" })
                            @Resource.lblPerAsset
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2 col-md-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.OverWaterFeeSubTypeId, (int)FeeSubType.HourlyRate, new { onclick = "radioChange(this,'overwaterfee',null);", onchange = "focusOnFirst(this, 'overwaterfee');", @class = "revalidate" })
                            @Resource.lblHourlyRate
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2">
                    <div class="input-group mt5 mb5 overwaterfee defaultDisabled">
                        <span class="input-group-addon">@Resource.constSymbolCurrency</span>
                        @Html.TextBoxFor(m => m.OverWaterFee, new { @class = "form-control datatype-decimal" })
                    </div>
                    @Html.ValidationMessageFor(m => m.OverWaterFee)
                </div>
                <div class="col-sm-2 mb5 overwaterfee defaultDisabled hide-element show-in-tpo">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.OverWaterFeeIncludeInPPG)
                            @Resource.lblIncludeInPPG
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-xs-12 border-b ">
            <div class="row">
                <div class="col-sm-2 mt7 pl0">
                    @Html.LabelFor(m => m.DryRunFeeSubTypeId)
                </div>
                <div class="col-xs-5 col-sm-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.DryRunFeeSubTypeId, (int)FeeSubType.NoFee, new { onclick = "radioChange(this,null,'dryrunfee');", @class = "revalidate" })
                            @Resource.lblNoFee
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.DryRunFeeSubTypeId, (int)FeeSubType.FlatFee, new { onclick = "radioChange(this,'dryrunfee',null);", onchange = "focusOnFirst(this, 'dryrunfee');", @class = "revalidate" })
                            @Resource.lblFlatFee
                        </label>
                    </div>
                </div>
                <div class="col-xs-5 col-sm-2"></div>
                <div class="col-xs-5 col-sm-2">
                    <div class="input-group mt5 mb5 dryrunfee defaultDisabled">
                        <span class="input-group-addon">@Resource.constSymbolCurrency</span>
                        @Html.TextBoxFor(m => m.DryRunFee, new { @class = "form-control datatype-decimal" })
                    </div>
                    @Html.ValidationMessageFor(m => m.DryRunFee)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-xs-12 border-b ">
            <div class="row">
                <div class="col-sm-2 mt7 pl0">
                    @Html.LabelFor(m => m.UnderGallonFeeSubTypeId)
                </div>
                <div class="col-sm-2 col-xs-5">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.UnderGallonFeeSubTypeId, (int)FeeSubType.NoFee, new { onclick = "radioChange(this,null,'undergallonfee');", @class = "revalidate" })
                            @Resource.lblNoFee
                        </label>
                    </div>
                </div>
                <div class="col-sm-2 col-xs-5">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.UnderGallonFeeSubTypeId, (int)FeeSubType.FlatFee, new { onclick = "radioChange(this,'undergallonfee',null);", onchange = "focusOnFirst(this, 'undergallonfee');", @class = "revalidate" })
                            @Resource.lblFlatFee
                        </label>
                    </div>
                </div>
                <div class="col-sm-2 col-xs-5"></div>
                <div class="col-sm-2 col-xs-5">
                    <div class="row">
                        <div class="col-sm-6 pr5">
                            <div class="mt5 mb5 undergallonfee defaultDisabled">
                                @Html.TextBoxFor(m => m.MinimumGallons, new { @class = "form-control datatype-decimal", placeholder = Resource.lblMinGallons, data_toggle="tooltip", data_placement="top", title=@Resource.lblMinGallons })
                            </div>
                            @Html.ValidationMessageFor(m => m.MinimumGallons)
                        </div>
                        <div class="col-sm-6 pl5">
                            <div class="input-group mt5 mb5 undergallonfee defaultDisabled">
                                <span class="input-group-addon">@Resource.constSymbolCurrency</span>
                                @Html.TextBoxFor(m => m.UnderGallonFee, new { @class = "form-control datatype-decimal", placeholder = Resource.lblFee, data_toggle = "tooltip", data_placement = "top", title = @Resource.lblFee })
                            </div>
                            @Html.ValidationMessageFor(m => m.UnderGallonFee)
                        </div>
                    </div>
                </div>
                <div class="col-sm-2 mb5 undergallonfee defaultDisabled hide-element show-in-tpo">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.UnderGallonFeeIncludeInPPG)
                            @Resource.lblIncludeInPPG
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-xs-12 border-b">
            <div class="row">
                <div class="col-sm-2 mt7 pl0">
                    @Html.LabelFor(m => m.DeliveryFeeSubTypeId)
                </div>
                <div class="col-xs-4 col-sm-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.DeliveryFeeSubTypeId, (int)FeeSubType.NoFee, new { onclick = "radioChange(this,null,'delivery-fee,fee-flatfee,include-in-ppg')", @class = "revalidate" })
                            @Resource.lblNoFee
                        </label>
                    </div>
                </div>
                <div class="col-xs-4 col-sm-2 col-md-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.DeliveryFeeSubTypeId, (int)FeeSubType.FlatFee, new { onclick = "inputBoxShowHide('fee-flatfee','delivery-fee'),radioChange(this,'fee-flatfee,flatfee-input,include-in-ppg','delivery-fee,flatFeeNoUse');", onchange = "focusOnFirst(this, 'flatfee-input');", @class = "revalidate" })
                            @Resource.lblFlatFee
                        </label>
                    </div>
                </div>
                <div class="col-xs-4 col-sm-2 col-md-2">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.DeliveryFeeSubTypeId, (int)FeeSubType.PerGallon, new { onclick = "inputBoxShowHide('fee-flatfee','delivery-fee'),radioChange(this,'fee-flatfee,flatfee-input,include-in-ppg','delivery-fee,flatFeeNoUse');", onchange = "focusOnFirst(this, 'flatfee-input');", @class = "revalidate" })
                            @Resource.lblPerGallon
                        </label>
                    </div>
                </div>
                <div class="col-xs-4 col-sm-2 col-md-2 pr0">
                    <div class="radio mt7">
                        <label>
                            @Html.RadioButtonFor(m => m.DeliveryFeeSubTypeId, (int)FeeSubType.ByQuantity, new { onclick = "inputBoxShowHide('delivery-fee','fee-flatfee'),radioChange(this,'delivery-fee,include-in-ppg','fee-flatfee');", onchange = "focusOnFirst(this, 'delivery-fee');", @class = "revalidate" })
                            @Resource.lblByQuantity
                        </label>
                        @Html.ValidationMessageFor(m => m.DeliveryFeeSubTypeId)
                    </div>
                </div>
                <div class="col-sm-12 col-md-4 col-md-push-8 mt5 mb5">
                    <div id="deliveryfee-byquantity-section" class="partial-section quantity-range delivery-fee @(Model.DeliveryFeeSubTypeId == (int)FeeSubType.ByQuantity ? "show-element" : "hide-element")">
                        <div class="partial-block-collection-section fee-byquantity">
                            @if (Model.DeliveryFeeByQuantity != null && Model.DeliveryFeeByQuantity.Count() > 0)
                            {
                                foreach (var deliveryfeebyquantity in Model.DeliveryFeeByQuantity)
                                {
                                    Html.RenderPartial("~/Views/Shared/_PartialDeliveryFeeByQuantity.cshtml", deliveryfeebyquantity);
                                }
                            }
                        </div>
                        <span data-valmsg-for="DeliveryFeeByQuantity" data-valmsg-replace="true"></span>
                        <div class="form-group mt7">
                            <a href="javascript:void(0)" onclick="AjaxStart(this)" class="add-partial-block" data-url="@Url.Action("DeliveryFeeByQuantity")"><span class="fa fa-plus-circle"></span> @Resource.btnLabelAddDeliveryFee</a>
                        </div>
                    </div>
                    <div class="row fee-flatfee defaultDisabled @(Model.DeliveryFeeSubTypeId != (int)FeeSubType.ByQuantity ? "show-element" : "hide-element")">
                        <div class="col-xs-6 col-sm-3 pr5 flatFeeNoUse subSectionOpacity">
                            <div class="form-group mb5">
                                <input type="text" placeholder="From" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="col-xs-6 col-sm-3 pl0 pr5 flatFeeNoUse subSectionOpacity">
                            <div class="form-group mb5">
                                <input type="text" placeholder="Upto" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="col-xs-6 col-sm-3 pl0 pr5">
                            <div class="input-group flatfee-input" style="display:inline-table">
                                <span class="input-group-addon">@Resource.constSymbolCurrency</span>
                                @Html.TextBoxFor(m => m.DeliveryFee, new { @class = "form-control always datatype-decimal", placeholder = @Html.DisplayNameFor(m => m.DeliveryFee) })
                            </div>
                            @Html.ValidationMessageFor(m => m.DeliveryFee)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 mb5 include-in-ppg defaultDisabled hide-element show-in-tpo">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(m => m.DeliveryFeeIncludeInPPG)
                                    @Resource.lblIncludeInPPG
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row mt5">
    <div class="col-md-12 mb15">
        <div class="row">
            <div class="col-md-2 mt7">
                @Html.Label(Resource.lblAdditionalFee)
            </div>
            <div class="col-sm-12 col-md-10">
                <div id="additional-fee-section" class="partial-section">
                    <div class="partial-block-collection-section">
                        @if (Model.AdditionalFee != null && Model.AdditionalFee.Count() > 0)
                        {
                            foreach (var additionalfee in Model.AdditionalFee)
                            {
                                Html.RenderPartial("_PartialAdditionalFee", additionalfee);
                            }
                        }
                    </div>
                    <div class="form-group col-md-12 pl0 mt7">
                        <a href="javascript:void(0)" class="add-partial-block" data-url="@Url.Action("AdditionalFee", "FuelRequest")"><span class="fa fa-plus-circle"></span> @Resource.btnLabelAddAdditionalFee</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>