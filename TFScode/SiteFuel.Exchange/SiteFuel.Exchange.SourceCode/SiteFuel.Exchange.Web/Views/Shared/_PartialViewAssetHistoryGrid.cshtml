@model OrderDetailsViewModel

<div class="row">
    <div class="col-sm-12">
        <h4 class="mt0 f-light pb5 fs21 mb5 pull-left">@Resource.headingAssetHistory</h4>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div class="table-responsive">
                        <table id="viewasset-history-datatable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>@Resource.gridColumnCustomer</th>
                                    <th>@Resource.gridColumnPoNumber</th>
                                    <th>@Resource.gridColumnInvoiceDDTNumber</th>
                                    <th>@Resource.gridColumnAssetTankName</th>
                                    <th>@Resource.gridColumnAssetId</th>
                                    <th>@Resource.gridColumnAssetContractNumber</th>
                                    <th>@Resource.gridColumnDropDate</th>
                                    <th>@Resource.lblDropStartTime</th>
                                    <th>@Resource.lblDropEndTime</th>
                                    <th>@Resource.gridColumnGallonsDelivered</th>
                                    <th>@Resource.gridColumnPricingFormat</th>
                                    <th>@Resource.gridColumnUnitCost</th>
                                    <th>@Resource.gridColumnTotalCost</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginScripts())
{
    <script type="text/javascript">

        var assetDataTable;
		var exportColumns = { columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] };

        $(document).ready(function () {

            assetDataTable = $('#viewasset-history-datatable').dataTable({
                "ajax": {
                    "url": "@Url.Action("ViewAssetHistory", "Order", new { area ="Supplier" })",
                    "type": "GET",
                    "datatype": "json",
                    "data": function (data) {
                        data.oId = @Model.Id
					},
                    "dataSrc": ""
                },
                "columns": [
                    { "data": "CustomerName", "autoWidth": true },
                    { "data": "PONumber", "autoWidth": true },
                    {
                        "data": function (data, type, row, meta) {
                            return '<a href="@Url.Action("Details", "Invoice", new { area = "Supplier" })?id=' + data.InvoiceId + '">' + data.InvoiceNumber + '</a>';
                        }, "autoWidth": true
                    },
                    { "data": "AssetName", "autoWidth": true },
                    { "data": "AssetId", "autoWidth": true },
                    { "data": "AssetContractNumber", "autoWidth": true },
                    { "data": "DropDate", "autoWidth": true },
                    { "data": "DropStartTime", "autoWidth": true },
                    { "data": "DropEndTime", "autoWidth": true },
                    { "data": "GallonsDelivered", "autoWidth": true },
                    { "data": "PricingFormat", "autoWidth": true },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.UnitCost == 0)
                                return '@Resource.lblHyphen';
                            else
                                return '@Resource.constSymbolCurrency'  + data.UnitCost;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.TotalCostForAsset == 0)
                                return '@Resource.lblHyphen';
                            else
                                return '@Resource.constSymbolCurrency' + data.TotalCostForAsset;
                        }, "autoWidth": true
                    }
                ],
                pageLength: 10,
                responsive: true,
                "order": [],
                "initComplete": function (settings, json) {
                    allPages = assetDataTable.fnGetNodes();
                    wrapperHeight();
                    tabGridHeader(this);
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'csv', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    { extend: 'excel', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    { extend: 'pdf', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    {
                        extend: 'print', exportOptions: exportColumns,
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                language: {
                    sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
                }
            });
        });
    </script>
}