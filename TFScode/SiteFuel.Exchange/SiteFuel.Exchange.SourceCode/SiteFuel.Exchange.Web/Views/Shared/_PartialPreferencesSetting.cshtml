@model OnboardingPreferenceViewModel
<div class="col-sm-6 equal-column">
    <div class="well">
        <h4 class="mt0 mb0 pt0">Default Setting</h4>
        <div class="row">
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingCustomerInvitation</h4>
                            <label class="mb0">@Resource.lblDefaultCustomerInvitation</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt5 mrm10 float-right">
                                @Html.HiddenFor(m => m.Id)
                                @Html.CheckBoxFor(m => m.IsCustomerInvitationEnabled, new { @class = "custom-control-input", @id = "CheckboxCustomerInvitation" })
                                <label class="custom-control-label" for="CheckboxCustomerInvitation">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.lblThirdPartyNetwork</h4>
                            <label class="mb0">@Resource.lblAllowToThirdPartyNetwork</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt5 mrm10 float-right">
                                @Html.HiddenFor(m => m.Id)
                                @Html.CheckBoxFor(m => m.IsThirdPartyInvitationEnabled, new { @class = "custom-control-input", @id = "CheckboxThirdPartyInvitation" })
                                <label class="custom-control-label" for="CheckboxThirdPartyInvitation">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingThirdPartyHardware</h4>
                            <label class="mb0">@Resource.lblThirdPartyHardwareUsed</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.HiddenFor(m => m.Id)
                                @Html.CheckBoxFor(m => m.IsThirdPartyHardwareUsed, new { @class = "custom-control-input", @id = "CheckboxThirdPartyHardwareUsed" })
                                <label class="custom-control-label" for="CheckboxThirdPartyHardwareUsed">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingBuySell</h4>
                            <label class="mb0">@Resource.lblBuyAndSellText</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsBuySellEnabled, new { @class = "custom-control-input", @id = "CheckboxBuyAndSellText" })
                                <label class="custom-control-label" for="CheckboxBuyAndSellText">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingDropTicketImage</h4>
                            <label class="mb0">@Resource.lblMakeDropTicketImageMandatory</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsDropTicketImageRequired, new { @class = "custom-control-input", @id = "CheckboxMakeDropTicketImageMandatory" })
                                <label class="custom-control-label" for="CheckboxMakeDropTicketImageMandatory">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <h4 class="fs14 f-bold pt0 mb0">@Resource.lblInventoryDataCaptureMethod</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group mb0">
                                @Html.EnumDropDownListFor(m => m.DipTestMethod, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <h4 class="fs14 f-bold pt0 mb0">@Resource.lblDefaultPricingMethod</h4>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group mb0">
                                @Html.EnumDropDownListFor(m => m.PreferencePricingMethod, new { @class = "form-control default-pricing-method" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <h4 class="fs14 f-bold pt0 mb0">@Resource.lblDefaultDeliveryType</h4>
                    <div class="row mb0">
                        <div class="col-12">
                            <div class="radio">
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(m => m.IsFtl, false, new { @class = "subSectionOpacity form-check-input", @id = "RadioLTL", @onchange = "setFOB(false);" })
                                    <label class="form-check-label" for="RadioLTL"> @Resource.lblLTL</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(m => m.IsFtl, true, new { @onchange = "setFOB(true);", @id = "RadioCustom", @class = "form-check-input" })
                                    <label class="form-check-label" for="RadioCustom"> @Resource.lblFTL</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group mb0">
                                <label>@Resource.lblFreightOnBoard</label><br />
                                @Html.EnumDropDownListFor(m => m.FreightOnBoardType, new { @class = "form-control fob-type" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingBadgeUpdation</h4>
                            <label class="mb0">@Resource.lblIsBadgeNumberMandatory</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsBadgeMandatory, new { @class = "custom-control-input", @id = "CheckboxBadgeNumberMandatory" })
                                <label class="custom-control-label" for="CheckboxBadgeNumberMandatory">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingThirdPartyWorkflow</h4>
                            @Html.LabelFor(m => m.IsEbolWorkflowEnabled, new { @class = "mb0" })
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsEbolWorkflowEnabled, new { @class = "custom-control-input", @id = "IsEbolWorkflowEnabled" })
                                <label class="custom-control-label" for="IsEbolWorkflowEnabled">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingProdSequencing</h4>
                            <label class="mb0">@Resource.lblEnableProdSequecing</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsProductSequencingEnabled, new { @class = "custom-control-input", @id = "CheckboxEnableProdSequecing" })
                                @Html.HiddenFor(m => m.ProductSequencingJson)
                                <label class="custom-control-label" for="CheckboxEnableProdSequecing">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                    <div id="divProductSequence">
                        @Html.PartialFor("~/Views/Shared/_PartialProductSequence.cshtml", m => m.ProductSequencing)
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-10">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingFreightPricingMethod</h4>
                            <label class="mb0">@Resource.msgFreightPricingMethod</label>
                        </div>
                        <div class="col-12">
                            <div class="radio">
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(m => m.FreightPricingMethod, FreightPricingMethod.Manual, new { @class = "form-check-input" })
                                    <label class="form-check-label" for="RadioManual"> @Resource.lblManual</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(m => m.FreightPricingMethod, FreightPricingMethod.Auto, new { @class = "form-check-input" })
                                    <label class="form-check-label" for="RadioAuto"> @Resource.lblAuto</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingIsLoadOptimization</h4>
                            <label class="mb0">@Resource.headingIsLoadOptimizationNote</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsLoadOptimization, new { onclick = "showHideonCheckbox(this,'section-add-distributed-users')", @class = "custom-control-input", @id = "IsLoadOptimization" })
                                <label class="custom-control-label" for="IsLoadOptimization">&nbsp;</label>
                            </div>
                        </div>
                    </div>

                    <div class="pt10 pb10 hide-element section-add-distributed-users">
                        <div class="mr10">
                            <div class="form-group">
                                <div class="mlm5">@Html.ListBoxFor(m => m.LoadOptimizationUsers, new SelectList(CommonHelperMethods.GetLoadOptimizationUsers(CurrentUser.CompanyId), "Id", "Name"), new { @class = "form-control multi-select job", @placeholder = "Select" })</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@
        </div>
    </div>
</div>
<div class="col-sm-6 equal-column">
    <div class="well">
        <h4 class="mt0 mb0 pt0">@Resource.headingAccountLevelSetting</h4>
        <div class="row">
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-9">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingFreightBrokeredOrder</h4>
                            <label class="mb0">@Resource.lblCreateFreightOnlyOrdersAutomatically</label>
                        </div>
                        <div class="col-sm-3">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsFreightOnlyOrderEnabled, new { @class = "custom-control-input", @id = "CheckboxOnlyOrdersAutomatically" })
                                <label class="custom-control-label" for="CheckboxOnlyOrdersAutomatically">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingChatWithDriver</h4>
                            <label class="mb0">@Resource.lblAllowChatWithDrivers</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.AllowChatWithDrivers, new { @class = "custom-control-input", @id = "CheckboxAllowChatWithDrivers" })
                                <label class="custom-control-label" for="CheckboxAllowChatWithDrivers">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingSupressPricing</h4>
                            <label class="mb0">@Resource.lblSupressOrderLevelPricing</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsSupressOrderPricing, new { @onchange = "setPricingMethodForSupressOrder(this);", @class = "custom-control-input", @id = "CheckboxOrderLevelPricing" })
                                <label class="custom-control-label" for="CheckboxOrderLevelPricing">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingDisplayProducts</h4>
                            <label class="mb0">@Resource.lblDisplayDriverAssignedProduct</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsDriverProdutDisplayEnable, new { @class = "custom-control-input", @id = "CheckboxDriverAssignedProduct" })
                                <label class="custom-control-label" for="CheckboxDriverAssignedProduct">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingInventoryExport</h4>
                            <label class="mb0">@Resource.lblDisplayInventoryExportInfo</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsSendInventoryExportEmail, new { @class = "custom-control-input", @id = "CheckboxSendInventoryExportEmail" })
                                <label class="custom-control-label" for="CheckboxSendInventoryExportEmail">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingProductDescriptionOnInvoice</h4>
                            <label class="mb0">@Resource.lblProductDescriptionOnInvoiceInfo</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsShowProductDescriptionOnInvoice, new { @class = "custom-control-input", @id = "CheckboxShowProductDescriptionOnInvoice" })
                                <label class="custom-control-label" for="CheckboxShowProductDescriptionOnInvoice">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-10">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.lblPaymentDueDateBasis</h4>
                        </div>
                        <div class="col-12">
                            <div class="radio">
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(m => m.PaymentDueDateType, PaymentDueDateType.InvoiceCreationDate, new { @class = "form-check-input" })
                                    <label class="form-check-label" for="RadioManual"> @Resource.lblInvoiceCreationDate</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(m => m.PaymentDueDateType, PaymentDueDateType.DeliveryDate, new { @class = "form-check-input" })
                                    <label class="form-check-label" for="RadioAuto"> @Resource.lblDeliveryDate</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <h4 class="fs14 f-bold pt0 mb0">@Resource.lblNotificationPeriod</h4>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.NotificationPeriod, new { @class = "form-control", placeholder = "Notification Period in Hrs" })
                                <div class="input-group-append">
                                    <span class="input-group-text fs11">Hrs</span>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(m => m.NotificationPeriod)
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                @*<label>@Resource.lblHowLocationIsManaged</label>*@
                <div class="form-group mb0" id="location-managed">
                    <div class="radio mb5">
                        <label>
                            @Html.RadioButtonFor(m => m.LocationManagedType, LocationManagedType.NotSpecified, new { @checked = "checked" })
                            @LocationManagedType.NotSpecified.GetDisplayName()
                        </label>
                    </div>
                    <div class="radio mb5">
                        <label>
                            @Html.RadioButtonFor(m => m.LocationManagedType, LocationManagedType.SupplierManaged)
                            @LocationManagedType.SupplierManaged.GetDisplayName()
                        </label>
                    </div>
                    <div class="radio mb5">
                        <label>
                            @Html.RadioButtonFor(m => m.LocationManagedType, LocationManagedType.PartialCarrierManaged)
                            @LocationManagedType.PartialCarrierManaged.GetDisplayName()
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            @Html.RadioButtonFor(m => m.LocationManagedType, LocationManagedType.FullyCarrierManaged)
                            @LocationManagedType.FullyCarrierManaged.GetDisplayName()
                        </label>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-9">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingUnscheduledDelivery</h4>
                            <label class="mb0">Allow Driver to perform unscheduled delivery</label>
                        </div>
                        <div class="col-sm-3">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsUnscheduledDeliveryAllowed, new { @onclick = "unscheduledDeliveryClicked(this)", @id = "CheckboxUnshedule", @class = "custom-control-input" })
                                <label class="custom-control-label" for="CheckboxUnshedule">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12" id="nightShift">
                            <div class="form-group mb0 mt5">
                                <div class="radio">
                                    <label class="radio-inline mr10">
                                        @Html.RadioButtonFor(m => m.IsCustomUnScheduleDelivery, false, new { @onclick = "setTimeDiv(false)" })
                                        Always
                                    </label>
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(m => m.IsCustomUnScheduleDelivery, true, new { @onclick = "setTimeDiv(true)" })
                                        Custom
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-12" id="DeliveryDaysDiv">
                            @Html.DropDownListFor(m => m.DeliveryDays, new MultiSelectList(CommonHelperMethods.GetWeekDays(), "Id", "Name", Model.DeliveryDaysInString.Split(',').ToList()), new { @class = "form-control", multiple = "multiple" })
                            <span class="field-validation-error" data-valmsg-for="DeliveryDays" data-valmsg-replace="true" id="DeliveryDaysrequired" style="display:none;"><span id="DeliveryDays-error" class="">@Resource.errMessageDayCantEmpty</span></span>
                        </div>
                        <div class="col-8 form-group mt5 mb0" id="timeDiv">
                            <div class="row">
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.ShiftStartTime, new { @class = "form-control timepicker dropstarttime" })
                                    <span class="field-validation-error" data-valmsg-for="ShiftStartTime" data-valmsg-replace="true" id="ShiftStartTimerequired" style="display:none;"><span id="ShiftStartTime-error" class="">@Resource.errMessageShiftCantEmpty</span></span>
                                </div>
                                <div class="col-1 mt5">
                                    <label>To</label>
                                </div>
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.ShiftEndTime, new { @class = "form-control timepicker dropstarttime" })
                                    <span class="field-validation-error" data-valmsg-for="ShiftEndTime" data-valmsg-replace="true" id="ShiftEndTimerequired" style="display:none;"><span id="ShiftEndTime-error" class="">@Resource.errMessageShiftCantEmpty</span></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (CurrentUser.CompanyTypeId == CompanyType.BuyerAndSupplier || CurrentUser.CompanyTypeId == CompanyType.Supplier || CurrentUser.CompanyTypeId == CompanyType.BuyerSupplierAndCarrier || CurrentUser.CompanyTypeId == CompanyType.SupplierAndCarrier)
            {
                if (CurrentUser.IsSupplierAdmin || CurrentUser.IsBuyerAdmin)
                {
                    <div class="col-sm-12">
                        <div class="pt10 pb10 border-b">
                            <div class="row">
                                <div class="col-sm-9">
                                    <h4 class="fs14 f-bold pt0 mb0">@Resource.lblBrandMyWebsite</h4>
                                    <label class="mb0">Custom url, color and logo</label>
                                </div>
                                <div class="col-sm-3">
                                    <div class="custom-control custom-switch mt8 mrm10 float-right">
                                        @Html.CheckBoxFor(m => m.IsBrandMyWebsite, new { onchange = "hideshowWebsitePreferance(this)", @id = "IsBrandMyWebsite", @class = "custom-control-input" })
                                        @Html.HiddenFor(m => m.ImageFilePath)
                                        @Html.HiddenFor(m => m.hdnImageFilePath)
                                        @Html.HiddenFor(m => m.BackgroundImageFilePath)
                                        @Html.HiddenFor(m => m.hdnBackgroundImageFilePath)
                                        @Html.HiddenFor(m => m.FaviconFilePath)
                                        @Html.HiddenFor(m => m.hdnfaviconFilePath)
                                        @Html.HiddenFor(m => m.CarrierOnboardingImageFilePath)
                                        @Html.HiddenFor(m => m.hdnCarrierOnboardingImageFilePath)
                                        <label class="custom-control-label" for="IsBrandMyWebsite">&nbsp;</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            }
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingEnableBlending</h4>
                            <label class="mb0">@Resource.lblEnableBlendingInfo</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsAdditiveBlendingEnabled, new { onclick = "showHideonCheckbox(this,'section-add-blending-product')", @id = "CheckBoxForIsAdditiveBlendingEnabled", @class = "custom-control-input" })
                                <label class="custom-control-label" for="CheckBoxForIsAdditiveBlendingEnabled">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2 hide-element section-add-blending-product">
                        <div class="col-sm-12">
                            <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#add-additiveproduct-modal" onclick="getAdditiveProductListGrid()"><i class="fa fa-eye"></i> View/Edit Additive</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-9">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.lblEnableLFV</h4>
                            <label class="mb0">Lift file configuration</label>

                        </div>
                        <div class="col-sm-3">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsLiftFileValidationEnabled, new { onchange = "hideshowLFVInputParameters(this);", onclick = "showHideonCheckbox(this,'liftoptions')", @id = "IsLiftFileValidationEnabled", @class = "custom-control-input" })
                                <label class="custom-control-label" for="IsLiftFileValidationEnabled">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                    <div class="row liftoptions mt5 ml5 border-light2 border-circle mr5 pb10 pt10">
                        <div class="row col-sm-10 align-items-center">
                            <div class="col-sm-6">
                                <label>@Resource.lblMatchProcessingWindow</label>
                            </div>
                            <div class="col-sm-6">
                                <div class="input-group mb10">
                                    @Html.TextBoxFor(m => m.LfvInputParameter.DaysToContinueMatchProcess, new { @class = "form-control datatype-decimal" })
                                    <div class="input-group-append">
                                        <div class="input-group-text fs11">Days</div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.LfvInputParameter.DaysToContinueMatchProcess)
                                </div>
                            </div>
                        </div>
                        @if (Model.LfvInputParameter != null)
                        {
                            <!-- Self haul po section starts-->
                            <div class="col-sm-12">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsIgnoreSelfHauling, new { onclick = "showHideonCheckbox(this,'self-po-upload-section')", @id = "IsIgnoreSelfHauling", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsIgnoreSelfHauling"> @Resource.lblIncludeSelfHaulRecords</label>
                                </div>
                            </div>
                            <div class="col-sm-12 mt10 mb10 hide-element self-po-upload-section">
                                <div class="col-sm-12">
                                    @Resource.errMsgSelfHaulPOUpload
                                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#upload-selfhaulpo-csv">Upload</button>
                                    <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#poNumbersgrid-modal" onclick="GetPoNumberGrid()">View List <i class="fa fa-eye"></i> </button>
                                </div>
                                <div class="col-sm-12">
                                    <div class="col-sm-4">
                                        <span id="pocsvFileName"></span>
                                    </div>
                                </div>
                            </div>
                            <!-- Self haul po section end -->
                            <!-- wholesalebadge section starts -->
                            @*<div class="col-sm-12">
                                    <div class="form-check form-check-inline">
                                        @Html.CheckBoxFor(m => m.LfvInputParameter.IsIgnoreWholesaleBadge, new { onclick = "showHideonCheckbox(this,'Wholesale-badge-upload-section')", @id = "IsIgnoreWholesaleBadge", @class = "form-check-input" })
                                        <label class="form-check-label" for="IsIgnoreWholesaleBadge"> @Resource.lblIgnoreWholesaleBadge</label>
                                    </div>
                                </div>
                                <div class="col-sm-12 mt10 mb10 hide-element Wholesale-badge-upload-section">
                                    <div class="col-sm-12">
                                        @Resource.msgUploadWholsesalebadge
                                        <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#upload-wholesalebadge-csv">Upload</button>
                                        <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#badgeNumbersgrid-modal" onclick="getBadgeNumbersGrid()">View List <i class="fa fa-eye"></i> </button>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="col-sm-4">
                                            <span id="wholesalebadgecsvFileName"></span>
                                        </div>
                                    </div>
                                </div>*@
                            <!-- wholesalebadge section ends -->
                            <!--Ignore carrier section starts-->
                            <div class="col-sm-12">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsIgnoreNonRegisteredCarriers, new { onclick = "showHideonCheckbox(this,'Ignore-carrier-upload-section')", @id = "IsIgnoreNonRegisteredCarriers", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsIgnoreNonRegisteredCarriers"> @Resource.lblIgnoreCarriersNames</label>
                                </div>
                            </div>
                            <div class="col-sm-12 mt10 mb10 hide-element Ignore-carrier-upload-section">
                                <div class="col-sm-12">
                                    @Resource.msgUploadNonRegisteredCarriers
                                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#upload-carrierlist-csv">Upload</button>
                                    <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#carrierListgrid-modal" onclick="getCarrierListGrid()">View List <i class="fa fa-eye"></i> </button>
                                </div>
                                <div class="col-sm-12">
                                    <div class="col-sm-4">
                                        <span id="carrierListcsvFileName"></span>
                                    </div>
                                </div>
                            </div>
                            <!--Ignore carrier section ends-->
                            <!--Ignore Quebec billing badges section starts-->
                            <div class="col-sm-12">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsIgnoreQuebecBillingBadges, new { onclick = "showHideonCheckbox(this,'Ignore-quebec-billing-badge-upload-section')", @id = "IsIgnoreQuebecBillingBadges", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsIgnoreQuebecBillingBadges"> @Resource.lblIgnoreQuebecBillingBadges</label>
                                </div>
                            </div>
                            <div class="col-sm-12 mt10 mb10 hide-element Ignore-quebec-billing-badge-upload-section">
                                <div class="col-sm-12">
                                    @Resource.msgUploadQuebecBillingBadges
                                    <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#upload-quebecbadge-csv">Upload</button>
                                    <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#quebecBadgeListgrid-modal" onclick="getQuebecBillingBadgesListGrid()">View List <i class="fa fa-eye"></i> </button>
                                </div>
                                <div class="col-sm-12">
                                    <div class="col-sm-4">
                                        <span id="quebecBadgeListcsvFileName"></span>
                                    </div>
                                </div>
                            </div>
                            <!--Ignore Quebec billing badges section ends-->
                            <div class="col-sm-12 mb5">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsReplacePoWithAccoutingId, new { @id = "IsReplacePoWithAccoutingId", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsReplacePoWithAccoutingId"> @Resource.lblReplacePowithAccountingId</label>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsNeedToTruncateLeadingZeros, new { @id = "IsNeedToTruncateLeadingZeros", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsNeedToTruncateLeadingZeros"> @Resource.lblTruncateLeadingZerosForBOL</label>
                                </div>
                            </div>
                        }

                        <div class="col-sm-12 mt10">
                            <h5 class="fs13 f-bold pt0 mb5">@Resource.lblConfigureDataparameter</h5>
                        </div>
                        @if (Model.LfvInputParameter != null)
                        {
                            <div class="col-sm-7">
                                <div class="form-check form-check-inline">
                                    @*this should be always checked and non editable*@
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsTerminalCodeReq, new { @id = "IsTerminalCodeReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsTerminalCodeReq"> @Resource.lblTerminalCode</label>
                                </div>
                            </div>
                            <div class="col-sm-5">
                                <div class="form-check form-check-inline">
                                    @*this should be always checked and non editable*@
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsBolReq, new { @id = "IsBolReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsBolReq"> @Resource.lblBOL</label>
                                </div>
                            </div>
                            <div class="col-sm-7">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsCorrectedQtyRes, new { @id = "IsCorrectedQtyRes", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsCorrectedQtyRes"> @Resource.lblCorrectedQty</label>
                                </div>
                            </div>
                            <div class="col-sm-5">
                                <div class="form-check form-check-inline ">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsCarrierNameReq, new { @id = "IsCarrierNameReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsCarrierNameReq"> @Resource.lblCarrierName</label>
                                </div>
                            </div>
                            <div class="col-sm-7">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsCINReq, new { @id = "IsCarrierIdReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsCarrierIdReq"> @Resource.lblCIN</label>
                                </div>
                            </div>
                            <div class="col-sm-5">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsTermItemCodeReq, new { @id = "IsTermItemCodeReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsTermItemCodeReq"> @Resource.lblTerminalItemCode</label>
                                </div>
                            </div>
                            <div class="col-sm-7">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsGrossReq, new { @id = "IsGrossReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsGrossReq"> @Resource.lblGross</label>
                                </div>
                            </div>
                            <div class="col-sm-5">
                                <div class="form-check form-check-inline">
                                    @Html.CheckBoxFor(m => m.LfvInputParameter.IsLoadDateReq, new { @id = "IsLoadDateReq", @class = "form-check-input" })
                                    <label class="form-check-label" for="IsLoadDateReq"> @Resource.lblLoadDate</label>
                                </div>
                            </div>

                        }
                        <div class="col-sm-12 mt10">
                            <h5 class="fs13 f-bold pt0 mb5">@Resource.headingConfigureReasonCodes</h5>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-check form-check-inline">
                                @Html.CheckBoxFor(m => m.IsReasonCodesEnabled, new { onclick = "showHideonCheckbox(this,'section-add-reason-codes')", @id = "CheckBoxForIsReasonCodesEnabled", @class = "form-check-input" })
                                <label class="form-check-label" for="IsNeedToTruncateLeadingZeros"> @Resource.headingEnableReasonCodes</label>
                            </div>
                        </div>
                        <div class="row mt-2 @(Model.IsReasonCodesEnabled ? "" : "hide-element") section-add-reason-codes">
                            <div class="col-sm-12">
                                <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#add-category-reason-code-modal" onclick="showCategoryReasonCodePopup()"><i class="fa fa-eye"></i>@Resource.lableViewAddEditReasonCodes</button>
                            </div>
                        </div>
                        @*<div class="col-sm-12">
                                <div class="pt10 pb10 border-b">
                                    <div class="row">
                                        <div class="col-sm-8">
                                            <h4 class="fs14 pt0 mb0">@Resource.headingConfigureReasonCodes</h4>
                                            <label class="mb0">@Resource.headingEnableReasonCodes</label>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                                @Html.CheckBoxFor(m => m.IsReasonCodesEnabled, new { onclick = "showHideonCheckbox(this,'section-add-reason-codes')", @id = "CheckBoxForIsReasonCodesEnabled", @class = "custom-control-input" })
                                                <label class="custom-control-label" for="CheckBoxForIsReasonCodesEnabled">&nbsp;</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-2 @(Model.IsReasonCodesEnabled ? "" : "hide-element") section-add-reason-codes">
                                        <div class="col-sm-12">
                                            <button type="button" class="btn btn-primary btn btn-sm" data-toggle="modal" data-target="#add-category-reason-code-modal" onclick="showCategoryReasonCodePopup()"><i class="fa fa-eye"></i>@Resource.lableViewAddEditReasonCodes</button>
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label> @Resource.lblLoadQueueAttributes</label>
                                <div class="mlm5">@Html.ListBoxFor(m => m.LoadQueueAttributes, new SelectList(CommonHelperMethods.GetLoadQueueAttributes(), "Id", "Name"), new { @class = "form-control multi-select job", @placeholder = "Select" })</div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label> @Resource.lblDRQueueAttributes</label>
                                <div class="mlm5">@Html.ListBoxFor(m => m.DRQueueAttributes, new SelectList(CommonHelperMethods.GetDRQueueAttributes(), "Id", "Name"), new { @class = "form-control multi-select job", @placeholder = "Select" })</div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-12">
                            <h4 class="fs14 f-bold pt0 mb0">Retain threshold</h4>
                        </div>
                        <div class="col-sm-7">
                            <table>
                                <tr class="col-sm-6">
                                    <td>
                                        @Html.TextBoxFor(m => m.RetainThreshold, new { @class = "form-control" })

                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => m.UOM,
                                                                   from RetainThresholdUoM uom in Enum.GetValues(typeof(RetainThresholdUoM)).Cast<RetainThresholdUoM>
                                                                       ().ToList().Where(t => (int)t != (int)UoM.None)
                                                                       select new SelectListItem() { Text = uom.ToString(), Value = ((int)uom).ToString() }, new { @class = "form-control ddlUOM" }
                                                                       )

                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label id="lblThresholdConvertValue" class="pull-right">@Model.RetainThresholdValueConvertion</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-8">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingDSBDriverSchedule</h4>
                            <label class="mb0">@Resource.headingDSBDriverScheduleNote</label>
                        </div>
                        <div class="col-sm-4">
                            <div class="custom-control custom-switch mt5 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsDSBDriverSchedule, new { @class = "custom-control-input", @id = "CheckboxDSBDriverSchedule" })
                                <label class="custom-control-label" for="CheckboxDSBDriverSchedule">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingCarrierDelivery</h4>
                            <label class="mb0">@Resource.headingCarrierDeliveryNote</label>
                        </div>
                        <div class="col-sm-4">
                            @Html.ListBoxFor(m => m.CarrierUsers, new SelectList(CommonHelperMethods.GetCompanySupplierAdminUsers(CurrentUser.CompanyId), "Id", "Name"), new { @class = "form-control multi-select Carrierdeliveries" })
                        </div>
                        <div class="col-sm-2">
                            <div class="custom-control custom-switch mt5 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsCarrierTileEmailNotification, new { @class = "custom-control-input", @id = "CheckboxCarrierTileEmailNotification" })
                                <label class="custom-control-label" for="CheckboxCarrierTileEmailNotification">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingAuthenticationType</h4>
                            <label class="mb0">@Resource.headingAuthenticationTypeNote</label>
                        </div>
                        <div class="col-sm-4">
                            @Html.DropDownListFor(m => m.SelectedIdentityProvider, new SelectList(CommonHelperMethods.GetExternalIdentityProviders(CurrentUser.CompanyId), "Id", "Name"), new { @class = "form-control" })
                        </div>
                        <div class="col-sm-2">
                            <div class="custom-control custom-switch mt5 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsSelectedIdentityProvider, new { @class = "custom-control-input", @id = "CheckboxSelectedIdentityProvider" })
                                <label class="custom-control-label" for="CheckboxSelectedIdentityProvider">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="pt10 pb10 border-b">
                    <div class="row">
                        <div class="col-sm-9">
                            <h4 class="fs14 f-bold pt0 mb0">@Resource.headingCreditCheck</h4>
                            <label class="mb0">@Resource.headingCreditCheckNote</label>
                        </div>
                        <div class="col-sm-3">
                            <div class="custom-control custom-switch mt8 mrm10 float-right">
                                @Html.CheckBoxFor(m => m.IsCreditCheckEnabled, new { onclick = "showHideonCheckbox(this,'creditoptions')", @id = "CheckboxCreditCheck", @class = "custom-control-input" })
                                <label class="custom-control-label" for="CheckboxCreditCheck">&nbsp;</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="creditoptions col-4" id="">
                            <label>Credit check service provider</label>
                            @Html.EnumDropDownListFor(m => m.CreditCheckType, new { @class = "form-control creditcheck-type" })
                        </div>
                    </div>
                    <div class="row">
                        <span class="field-validation-error col-12 ml-3" id="CreditCheckrequired" style="display:none;"><span id="CreditCheck-error" class="">Please select the credit check service provider</span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-sm-12">
    <div class="well">
        <div class="col-sm-8 pl0">
            <div class="row">
                @Html.PartialFor("~/Views/Shared/Forcasting/_PartialIMSForecasting.cshtml", m => m.ForcastingPreference)
            </div>
        </div>
    </div>
</div>

<div class="col-sm-12" style="display:none;" id="dvwebsiteConfigure">
    <div class="well">
        <div class="row">
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-2">
                        <div class="img-circle bg-blue color-white stepbox fs21 f-bold">1</div>
                    </div>
                    <div class="col-10 pl0">
                        <h2 class="mt0 mb5 f-normal">Custom URL</h2>
                        <p class="opacity8">You can create custom url and share with your customer</p>
                        <div class="row">
                            <div class="col-sm-12">
                                @*@Html.LabelFor(m => m.URLName)*@
                                <a onclick="copyToClipBorad();">Copy URL</a>
                                <input type="text" value="" id="tempHTML" style="display:none;" />
                                <div class="input-group">
                                    <div class="input-group-addon bg-midgray fs12" id="divURL">@ViewBag.SiteFuelExchangeUrl</div>
                                    @Html.TextBoxFor(m => m.URLName, new { @class = "form-control", @id = "URLName" })
                                </div>
                                <span class="field-validation-error" data-valmsg-for="URLName" data-valmsg-replace="true" id="spurlnamerequired" style="display:none;"><span id="URLName-error" class="">URLName is required</span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-2">
                        <div class="img-circle bg-blue color-white stepbox fs21 f-bold">2</div>
                    </div>
                    <div class="col-10 pl0">
                        <h2 class="mt0 mb5 f-normal">@Resource.lblUploadLogo</h2>
                        <p class="opacity8">Logo will be shown everywhere in the application</p>
                        <div class="row">
                            <div class="col-sm-2">
                                @*@Html.LabelFor(m => m.ImageFilePath, new { @class = ""})*@
                                <div class="loading-content text-center pt10 brand-logo-loading hide-element">
                                    <div class="spinner-ajax mt20"></div>
                                    <div class="fs12">@Resource.lblUploading</div>
                                </div>
                                <div id="brand-image-block">
                                    <div class="row">
                                        <div class="logo-wrapper text-center ml15">
                                            @if (!string.IsNullOrEmpty(Model.ImageFilePath))
                                            {
                                                <input type="hidden" id="imageUploadStatus" value="1" />
                                                <img id="brand-image-ctrl" class="company-logo-dim" src="@Model.ImageFilePath" />
                                            }
                                            else
                                            {
                                                <input type="hidden" id="imageUploadStatus" value="0" />
                                                <img id="brand-image-ctrl" class="company-logo-dim img-circle" src="~/Content/images/no-image.png" />
                                            }
                                        </div>
                                    </div>
                                    <div class="row mt5">
                                        <div class="col-12 text-left">
                                            <input type="button" class="btn btn-default" id="choose-Webfile" value="@Resource.btnChooseLogo">
                                            <input type="file" class="hidden" id="btn-weblogo" name="brandWebsiteimageFile">
                                        </div>
                                        @*<div class="col-6 text-left">
                                                <input type="button" class="btn btn-danger btn-xs mb10" id="remove-file" value="@Resource.btnLabelRemove">
                                            </div>*@
                                    </div>
                                    <div class="row">
                                        <div class="text-danger col-12 fs12 mt5" id="brand-img-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div id="custom-message" class="alert alert-success alert-dismissible hide-element fs12 pt5 pb5 pl10 pr10" style="display:none;">
                                <div class="container overflow-h">
                                    <div class="brand-msgText" id="msgInfo">
                                        <p>URL Copied Successfully.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt75">
            <div class="col-1">
                <div class="img-circle bg-blue color-white stepbox fs21 f-bold">3</div>
            </div>
            <div class="col-10 pl0">
                <h2 class="mt0 mb5 f-normal">Configure Color Theme</h2>
                <p class="opacity8">Change page, navigation and button colors</p>
                <div class="row">
                    <div class="col-sm-3">
                        <div class="well mt10">
                            <h3 class="mt0 mb5">Entire Web</h3>
                            <div class="form-item">
                                <label for="color1">Background color</label>
                                @Html.TextBoxFor(m => m.BackgroundColor, new { @class = "form-control colorwell", @id = "BackgroundColor" })
                            </div>
                            <div class="form-item mt10">
                                <label for="color2">Foreground color</label>
                                @Html.TextBoxFor(m => m.ForegroundColor, new { @class = "form-control colorwell", @id = "ForegroundColor" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="well mt10">
                            <h3 class="mt0 mb5">Header</h3>
                            <div class="form-item">
                                <label for="color3">Background color</label>
                                @Html.TextBoxFor(m => m.HeaderColor, new { @class = "form-control colorwell", @id = "HeaderColor" })
                            </div>

                            <div class="form-item mt10">
                                <label for="color3">Icons color</label>
                                @Html.TextBoxFor(m => m.IconColor, new { @class = "form-control colorwell", @id = "IconColor" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="well mt10">
                            <h3 class="mt0 mb5">All Button</h3>
                            <div class="form-item ">
                                <label for="color3">Button color</label>
                                @Html.TextBoxFor(m => m.ButtonColor, new { @class = "form-control colorwell", @id = "ButtonColor" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div id="color-picker" class="pull-right"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <button type="button" class="btn btn-primary" onclick="updatePreview();slidePanel('#preview','80%')"><i class="fas fa-eye"></i> Preview Theme</button>
                        <button type="button" class="btn btn-default" onclick="resetColorScheme()">Reset to default</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt75">
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-2">
                        <div class="img-circle bg-blue color-white stepbox fs21 f-bold">4</div>
                    </div>
                    <div class="col-10">
                        <h2 class="mt0 mb5 f-normal">@Resource.lblUploadBackgroundImage</h2>
                        <p class="opacity8">@Resource.lblUploadBackgroundImageText</p>
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="loading-content text-center pt10 brand-logo-loading hide-element">
                                    <div class="spinner-ajax mt20"></div>
                                    <div class="fs12">@Resource.lblUploading</div>
                                </div>
                                <div id="brand-backgroundimage-block">
                                    <div class="row">
                                        <div class="logo-wrapper">
                                            @if (!string.IsNullOrEmpty(Model.BackgroundImageFilePath))
                                            {
                                                <input type="hidden" id="backgroundImageUploadStatus" value="1" />
                                                <img id="brand-backgroundimage-ctrl" class="img-thumbnail" style="margin-left: 15px;" src="@Model.BackgroundImageFilePath" />
                                            }
                                            else
                                            {
                                                <input type="hidden" id="backgroundImageUploadStatus" value="0" />
                                                <img id="brand-backgroundimage-ctrl" class="img-thumbnail" style="margin-left: 15px;" src="~/Content/images/no-image.png" />
                                            }
                                        </div>
                                    </div>
                                    <div class="row mt15">
                                        <div class="col-12">
                                            <input type="button" class="btn btn-default" id="choose-backgroundfile" value="@Resource.btnChooseWallpaper">
                                            <input type="file" class="hidden" id="btn-backgroundImg" name="brandBackgroundImageFile">
                                            <button type="button" class="btn btn-primary panel-previewlogin" onclick="updatePreviewLogin();slidePanel('#previewlogin','80%')"><i class="fas fa-eye"></i> @Resource.lblPreviewLoginPage</button>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="text-danger col-12 fs12 mt5" id="brand-backgroundimg-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="row">
                    <div class="col-2">
                        <div class="img-circle bg-blue color-white stepbox fs21 f-bold">5</div>
                    </div>
                    <div class="col-10 pl0">
                        <h2 class="mt0 mb5 f-normal">@Resource.lblUploadFavicon</h2>
                        <p class="opacity8">Favicon will be shown in the application <i class="fa fa-info-circle ml5" data-toggle="tooltip" data-placement="top" title="@Resource.errMessagePixelLessThan256"></i></p>
                        <div class="row">
                            <div class="col-sm-2">
                                @*@Html.LabelFor(m => m.ImageFilePath, new { @class = ""})*@
                                <div class="loading-content text-center pt10 favicon-loading hide-element">
                                    <div class="spinner-ajax mt20"></div>
                                    <div class="fs12">@Resource.lblUploading</div>
                                </div>
                                <div id="brand-favicon-block">
                                    <div class="row">
                                        <div class="logo-wrapper text-center ml15">
                                            @if (!string.IsNullOrEmpty(Model.FaviconFilePath))
                                            {
                                                <input type="hidden" id="faviconUploadStatus" value="1" />
                                                <img id="brand-favicon-ctrl" class="company-favicon-dim" src="@Model.FaviconFilePath" />
                                            }
                                            else
                                            {
                                                <input type="hidden" id="faviconUploadStatus" value="0" />
                                                <img id="brand-favicon-ctrl" class="company-favicon-dim img-circle" src="~/Content/images/no-image.png" />
                                            }
                                        </div>
                                    </div>
                                    <div class="row mt5">
                                        <div class="col-12 text-left">
                                            <input type="button" class="btn btn-default" id="choose-Faviconfile" value="@Resource.btnChooseLogo">
                                            <input type="file" class="hidden" id="btn-webfavicon" name="BrandWebsitefaviconFile">
                                        </div>
                                        @*<div class="col-6 text-left">
                                                <input type="button" class="btn btn-danger btn-xs mb10" id="remove-file" value="@Resource.btnLabelRemove">
                                            </div>*@
                                    </div>
                                    <div class="row">
                                        <div class="text-danger col-12 fs12 mt5" id="brand-favicon-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="row mt75">
                    <div class="col-2">
                        <div class="img-circle bg-blue color-white stepbox fs21 f-bold">6</div>
                    </div>
                    <div class="col-10">
                        <h2 class="mt0 mb5 f-normal">@Resource.lblUploadCarrierOnboardingImage</h2>
                        <p class="opacity8">@Resource.lblUploadCarrierOnboardingImageText</p>
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="loading-content text-center pt10 carrier-onboarding-logo-loading hide-element">
                                    <div class="spinner-ajax mt20"></div>
                                    <div class="fs12">@Resource.lblUploading</div>
                                </div>
                                <div id="carrier-onboardingimage-block">
                                    <div class="row">
                                        <div class="logo-wrapper">
                                            @if (!string.IsNullOrEmpty(Model.CarrierOnboardingImageFilePath))
                                            {
                                                <input type="hidden" id="carrieronboardingImageUploadStatus" value="1" />
                                                <img id="carrier-onboarding-image-ctrl" class="img-thumbnail" style="margin-left: 15px;" src="@Model.CarrierOnboardingImageFilePath" />
                                            }
                                            else
                                            {
                                                <input type="hidden" id="carrieronboardingImageUploadStatus" value="0" />
                                                <img id="carrier-onboarding-image-ctrl" class="img-thumbnail" style="margin-left: 15px;" src="~/Content/images/no-image.png" />
                                            }
                                        </div>
                                    </div>
                                    <div class="row mt15">
                                        <div class="col-12">
                                            <input type="button" class="btn btn-default" id="choose-carrier-onboarding-file" value="@Resource.btnChooseWallpaper">
                                            <input type="file" class="hidden" id="btn-carrier-onboardingImg" name="brandWebsiteCarrierOnboardingImageFile">
                                            @*<button type="button" class="btn btn-primary panel-previewlogin" onclick="updatePreviewLogin();slidePanel('#previewlogin','80%')"><i class="fas fa-eye"></i> @Resource.lblPreviewLoginPage</button>*@
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="text-danger col-12 fs12 mt5" id="brand-carrier-onboardingdimg-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    <div class="side-panel-preview pr15 pl15" id="previewlogin" style="background:url(../../Content/images/authbg-02.jpg) no-repeat;background-size:cover;">
        <div class="row">
            <div class="col-sm-12">
                <div class="dtable full-width">
                    <div class="controls-auth dtable-cell float-none v-middle mt30">
                        <div class="col-centered control-box">
                            <div class="app-features pa">
                                <ul class="list-unstyled color-white">
                                    <li class="clearfix">
                                        <div class="pull-left text-center"><i class="ico-tracking dib"></i></div>
                                        <span class="dib pull-left ml10 fs15 mt10">Realtime Order Tracking</span>
                                    </li>
                                    <li class="clearfix pt25">
                                        <div class="pull-left text-center"><i class="ico-invoicing dib"></i></div>
                                        <span class="dib pull-left ml10 fs15 mt6">Zero Touch Invoicing</span>
                                    </li>
                                    <li class="clearfix pt25">
                                        <div class="pull-left text-center"><i class="ico-dispatch dib"></i></div>
                                        <span class="dib pull-left ml10 fs15 mt4">Automated Dispatch</span>
                                    </li>
                                    <li class="clearfix pt25">
                                        <div class="pull-left text-center"><i class="ico-taxes dib"></i></div>
                                        <span class="dib pull-left ml10 fs15 mt5">Taxes Always Right</span>
                                    </li>
                                </ul>
                            </div>
                            <div class="pull-right">
                                <div class="text-center">
                                    <img src="/Content/images/truefill-logo-white.png" height="38" class="mb5" id="loginpreviewLogo">
                                    <span id="supplierBrandText" class="color-white fs10 db mb5" style="display:none;">Powered By TrueFill</span>
                                </div>
                                <div class="credential-box login-box col-centered pr">
                                    <div class="col-sm-12">
                                        <div class="tabs-login overflow-h mb25">
                                            <div class="text-center active pb10">Login</div>
                                            <div class="text-center pb10"><a href="javascript:void(0)">Register</a></div>
                                        </div>
                                        <div class="form-group">
                                            <input class="form-control" placeholder="Email" type="text" readonly>
                                        </div>
                                        <div class="form-group">
                                            <input class="form-control" placeholder="Password" type="password" readonly>
                                        </div>
                                        <div class="row">
                                            <div class="col-6"><div class="checkbox mt0"><label><input name="RememberMe" type="checkbox"><input name="RememberMe" type="hidden" value="false">Stay Signed In</label></div></div>
                                            <div class="col-6 text-right"><a class="fs12 f-semibold " href="javascript:void(0)">Forgot Password?</a></div>
                                        </div>
                                        <div class="form-group mb0 text-center">
                                            <button type="button" id="btn-login" class="btn">Login</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="footer-wrapper clearfix fs12 mt25">
                                    <span class="pull-left mt1 color-white" id="dynamic-footer-text">© 2022 TrueFill, Inc. </span>
                                    <span class="pull-right dib mt10"><img src="/Content/images/comodo-secure-logo.png" border="0"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt15 text-center">
            <div class="col-sm-12"><a href="javascript:void(0)" class="color-white" onclick="closeSlidePanel();"><i class="fas color-red fa-times-circle fs21"></i><br /> Close Preview</a></div>
        </div>
    </div>
    @*<div class="row mt75">
            <div class="col-1">
                <div class="img-circle bg-blue color-white stepbox fs21 f-bold">5</div>
            </div>
            <div class="mt15">
                <button type="button" class="btn btn-primary" onclick="updatePreview();slidePanel('#preview','80%')"><i class="fas fa-eye"></i> Preview</button>
            </div>
        </div>*@
</div>
</div>
<div class="side-panel pr15 pl15" id="preview">
    <div class="side-panel-wrapper" id="sd-pnl-wraper">
        <div class="row" id="previewHeader">
            <div class="col-8 pr0 col-sm-7">
                <div class="mt1">
                    <div id="mobile-menu-toggle" class="pull-left color-white mt8 pr">
                        <span class="db pa full-width bg-darkgray"></span>
                        <span class="db pa full-width bg-darkgray"></span>
                        <span class="db pa full-width bg-darkgray"></span>
                    </div>
                </div>
                <div class="pull-left mt2 ml10 hidden-sm hidden-xs">
                    <a href="javascript:void(0)"><img src="/Content/images/truefill-logo.png" height="34" role="button" class="mt8" id="previewLogo"></a>
                </div>
                <div class="mt3 ml10 pull-left">
                    <div class="btn-group mt4">
                        <button data-toggle="dropdown" class="btn btn-primary dropdown-toggle radius-capsule" aria-expanded="false" id="previewButton">
                            <span class="pull-left fs13">Create</span>
                            <i class="fa fa-angle-down pull-left ml5 fs14 mt4"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-4 pl0 col-sm-5 text-right pull-right">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="pull-right">
                            <ul class="list-inline pull-right" id="previewIcons">
                                <li class="pull-left hidden-xs pr">
                                    <a href="javascript:void(0);" data-toggle="dropdown" data-placement="bottom" title="Dispatch" class="nav-icons dib mr4"><i class="fas fa-truck fs18 mt7"></i></a>
                                    <span class="notification-count fs10 bg-danger pa dib hide-element"></span>
                                </li>
                                <li class="pull-left hidden-xs">
                                    <a href="javascript:void(0)" data-toggle="tooltip" data-placement="bottom" title="" class="nav-icons dib mr4" data-original-title="Counter Offer"><i class="fas fa-exchange-alt fs18 mt6"></i></a>
                                </li>
                                <li class="pull-left hidden-xs">
                                    <a href="javascript:void(0)" data-toggle="tooltip" data-placement="bottom" title="" class="nav-icons dib mr4" data-original-title="Offers"><i class="fas fa-hand-holding-usd fs18 mt5"></i></a>
                                </li>
                                <li class="pull-left hidden-xs">
                                    <a href="javascript:void(0)" data-toggle="tooltip" data-placement="bottom" title="" class="nav-icons dib mr4" data-original-title="Invoices"><i class="fa fa-dollar fs18 mt6"></i></a>
                                </li>
                                <li class="text-right pull-right pr0">
                                    <div class="dropdown mt7 pr0">
                                        <a href="javascript:void(0)" class="fs15 dib user-profile text-center text-uppercase mr4" title="Demo Supplier">
                                            <span class="dib mt5">DS</span>
                                        </a>

                                    </div>
                                </li>
                                <li>
                                    <div class="dropdown pr0">
                                        <a href="javascript:void(0)" class="dib text-center mt5">
                                            <i class="fas fa-ellipsis-h dib fs25 color-lightgrey"></i>
                                            <span class="db fs11 clearboth color-lightgrey mtm10">Company</span>
                                        </a>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt20" id="previewWell">
            <div class="col-sm-12">
                <div class="well mr25 ml25">
                    <h4>Panel Header</h4>
                    <div class="row">
                        <div class="col-sm-3">
                            <label>Sample textbox</label>
                            <input type="text" class="form-control" />
                        </div>
                        <div class="col-sm-3">
                            <label>Sample textbox</label>
                            <input type="text" class="form-control" />
                        </div>
                        <div class="col-sm-3">
                            <label>Sample textbox</label>
                            <input type="text" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="well mr25 ml25" style="height: 150px;">
                    <h4>Panel Header</h4>
                    <p>Panel data</p>
                </div>
            </div>
        </div>
        <div class="row mt15 text-center">
            <div class="col-sm-12"><a href="javascript:void(0)" onclick="closeSlidePanel();"><i class="fas fa-times-circle color-red fs21"></i><br /> Close Preview</a></div>
        </div>
    </div>

</div>

<div id="poNumbersgrid-modal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@Resource.lblGridColumnPoNumbers</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p style="word-wrap: break-word;">
                    <div class="pa bg-white z-index5 loading-wrapper grid-loader"><span class='spinner-dashboard pa'></span></div>
                    <div id="poNumbersgrid-form" class="pr"></div>
                </p>
            </div>
        </div>
    </div>
</div>

<div id="badgeNumbersgrid-modal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@Resource.lblGridBadgeNumbers</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p style="word-wrap: break-word;">
                    <div class="pa bg-white z-index5 loading-wrapper badge-no-grid-loader"><span class='spinner-dashboard pa'></span></div>
                    <div id="badgeNumbersgrid-form" class="pr"></div>
                </p>
            </div>
        </div>
    </div>
</div>

<div id="carrierListgrid-modal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@Resource.lblGridCarrierList</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p style="word-wrap: break-word;">
                    <div class="pa bg-white z-index5 loading-wrapper carrier-List-grid-loader"><span class='spinner-dashboard pa'></span></div>
                    <div id="carrierListgrid-form" class="pr"></div>
                </p>
            </div>
        </div>
    </div>
</div>

<div id="quebecBadgeListgrid-modal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@Resource.lblGridQuebecBadgeList</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p style="word-wrap: break-word;">
                    <div class="pa bg-white z-index5 loading-wrapper quebecBadge-List-grid-loader"><span class='spinner-dashboard pa'></span></div>
                    <div id="quebecListGrid-form" class="pr"></div>
                </p>
            </div>
        </div>
    </div>
</div>

<div id="add-additiveproduct-modal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title pb-0">@Resource.lblAddEditAdditiveProduct</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p style="word-wrap: break-word;">
                    <div class="pa bg-white z-index5 loading-wrapper additiveProduct-List-grid-loader"><span class='spinner-dashboard pa'></span></div>
                    <div id="additiveproductGrid-form" class="pr"></div>
                </p>
            </div>
        </div>
    </div>
</div>
<div id="add-category-reason-code-modal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@Resource.lblAddEditReasonCategoryAndCodes</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pt-0">
                <p style="word-wrap: break-word;">
                    <div class="pa bg-white z-index5 loading-wrapper reason-category-code-grid-loader" id="reason-category-code-loader"><span class='spinner-dashboard pa'></span></div>
                    <div id="reason-category-and-codes-form" class="pr"></div>
                </p>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/js/color-picker-farbtastic.js"></script>
<link href="~/Content/css/color-picker-farbtastic.css" rel="stylesheet" />

<script type="text/javascript">
    function resetColorScheme() {
        //header colors
        $("#HeaderColor").val("#ffffff");
        $("#HeaderColor").focus();
        $("#HeaderColor").val("");
        //bg color
        $("#BackgroundColor").val("#ffffff");
        $("#BackgroundColor").focus();
        $("#BackgroundColor").val("");
        //icon color
        $("#IconColor").val("#ffffff");
        $("#IconColor").focus();
        $("#IconColor").val("");
        //fore-ground color
        $("#ForegroundColor").val("#ffffff");
        $("#ForegroundColor").focus();
        $("#ForegroundColor").val("");
        //button color
        $("#ButtonColor").val("#ffffff");
        $("#ButtonColor").focus();
        $("#ButtonColor").val("");
    }
    function driverUnscheduleDeliveries(ele) {
        var isDriverUnscheduleDeliveries = $(ele).prop('checked');

        var isAlways = $("#@Html.IdFor(m => m.IsCustomUnScheduleDelivery)");
        var startTime = $("#@Html.IdFor(m => m.ShiftStartTime)");
        var endTime = $("#@Html.IdFor(m => m.ShiftEndTime)");

        $(startTime).val('');
        $(endTime).val('');

        if (isDriverUnscheduleDeliveries) {
            $('#lblIsNightShift').click();
            $("#isAlwaysDiv").show();
            $(isAlways).attr('checked', true);
            $(startTime).val('');
            $(endTime).val('');

            if (isAlways.val() == "False") {
                $("#timeDiv").hide();
                   $("#DeliveryDaysDiv").hide();
            }
            else {
                $("#timeDiv").show();
                   $("#DeliveryDaysDiv").show();
            }
        }
        else {
            $("#isAlwaysDiv").hide();
            $("#timeDiv").hide();
               $("#DeliveryDaysDiv").hide();
        }
    }
    function setTimeDiv(isAlways) {
        if (isAlways) {
            $("#timeDiv").show();
            $("#DeliveryDaysDiv").show();
        }
        else {
            $("#timeDiv").hide();
            $("#DeliveryDaysDiv").hide();
        }
    }
    function setUnscheduledDelivery(value) {
        if (value) {
            $("#nightShift").show();

            var isNightShift = $("#@Html.IdFor(m => m.IsCustomUnScheduleDelivery)");
            var hhh = isNightShift.prop('checked');
            if (hhh) {
                $("#timeDiv").hide();
                $("#DeliveryDaysDiv").hide();
            }
            else {
                $("#timeDiv").show();
                   $("#DeliveryDaysDiv").show();
            }
        }
        else {
            $("#nightShift").hide();
            $("#timeDiv").hide();
            $("#DeliveryDaysDiv").hide();
        }
    }
    function unscheduledDeliveryClicked(ele) {
        var flag = $(ele).prop('checked');
        setUnscheduledDelivery(flag);
    }

    $(document).ready(function () {
        if ($("#CheckboxCreditCheck").is(":checked")) {
            $(".creditoptions").show();
        } else {
            $(".creditoptions").hide();
            $("#CreditCheckType").val(0);
        }
        let OneLitterEqualsToOneGallon = 0.264;
        let OneGallonEqualsToOneLitter = 3.785;
        $("#@Html.IdFor(m => m.UOM)").change(function () {
             if ($("#@Html.IdFor(m => m.UOM)").val() == "1") {
                UOMConverter("L", OneGallonEqualsToOneLitter);
            } else {
                UOMConverter("G", OneLitterEqualsToOneGallon);
            }
        });

        $("#@Html.IdFor(m => m.RetainThreshold)").change(function () {
            if ($("#@Html.IdFor(m => m.UOM)").val() == "1") {
                UOMConverter("L", OneGallonEqualsToOneLitter);
            } else {
                UOMConverter("G", OneLitterEqualsToOneGallon);
            }
        });

        $('#LoadQueueAttributes,#DRQueueAttributes, #LoadOptimizationUsers').multiselect({
            nonSelectedText: '@Resource.btnLabelSelect'
        });

        $('#DeliveryDays').select2({ multiple: true });

        $('.timepicker').datetimepicker({
            format: 'LT',
            widgetPositioning: {
                horizontal: 'right',
                vertical: 'top'
            }
        });
        if ('@Model.IsBrandMyWebsite'.toLowerCase()=='true' && '@CurrentUser.IsSupplierAdmin'.toLowerCase()=='true')
        {
          $("#dvwebsiteConfigure").show();
        }
        websitebrandimageDocumentReady();
        websiteBackgroundimageDocumentReady();
        websiteCarrierOnboardingimageDocumentReady();
        websitebrandfaviconDocumentReady();
        var isFtl = '@Model.IsFtl';
        if (isFtl == 'True') {
            setFOB(true);
        }
        else {
            setFOB(false);
        }
        //////////
        var IsCustomUnScheduleDelivery = '@Model.IsCustomUnScheduleDelivery';
        if (IsCustomUnScheduleDelivery == 'True') {
            setTimeDiv(true);
        }
        else {
            setTimeDiv(false);
        }
        /////////
        //color picker start
        //$('#demo').hide();
        var f = $.farbtastic('#color-picker');
        var p = $('#color-picker').css('opacity', 0);
        var selected;
        $('.colorwell')
            .each(function () { f.linkTo(this); $(this).css('opacity', 0.75); })
            .focus(function () {
                if (selected) {
                    $(selected).css('opacity', 0.75).removeClass('colorwell-selected');
                }
                f.linkTo(this);
                p.css('opacity', 1);
                $(selected = this).css('opacity', 1).addClass('colorwell-selected');
            });
        //color picker end

        var isUnscheduledDelivery = '@Model.IsUnscheduledDeliveryAllowed';
        if (isUnscheduledDelivery == 'True') {
            setUnscheduledDelivery(true);
        }
        else {
            setUnscheduledDelivery(false);
        }
        urlRegularExpression();

        $("#location-managed").hide();

        if ($("#CheckboxEnableProdSequecing").is(":checked")) {
            $("#divProductSequence").show();
        } else {
            $("#divProductSequence").hide();
        }

        $('.Carrierdeliveries').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            width: '100%',
        });
    });
    function urlRegularExpression() {
        $('#URLName').keyup(function (e) {
            if (this.value.match(/[^a-zA-Z0-9]/g)) {
                this.value = this.value.replace(/[^a-zA-Z0-9]/g, '');
            }
        });
    }

    function UOMConverter(mesurment, constvalue) {
        $('#lblThresholdConvertValue').text(($("#@Html.IdFor(m => m.RetainThreshold)").val() * constvalue).toFixed(3) + " " + mesurment);
    }

    function setFOB(isFobVisible) {
        if (isFobVisible) {
            $('.fob-type').removeClass('pntr-none subSectionOpacity')
        }
        else {
            $('.fob-type').addClass('pntr-none subSectionOpacity')
        }
    }

    function setPricingMethodForSupressOrder(ele) {
        var isSupressPricing = $(ele).prop('checked');
        var pricingMethod = $("#@Html.IdFor(m => m.PreferencePricingMethod)");
        if (isSupressPricing) {
            $(pricingMethod).val('@((int)OnboardingPreferencePricingMethod.Fixed)');
            $(pricingMethod).addClass('pntr-none subSectionOpacity');
        }
        else {
            $(pricingMethod).val('@((int)OnboardingPreferencePricingMethod.Multiple)');
            $(pricingMethod).removeClass('pntr-none subSectionOpacity');
        }
    }
    function hideshowWebsitePreferance(currentElement) {
        if ($(currentElement).prop("checked") === true) {
            $("#dvwebsiteConfigure").show();
        }
        else {
            $("#dvwebsiteConfigure").hide();
        }
    }

    function getDefaultImage() {
            return '@Url.Content("~/Content/images/no-image.png", true)';
        };

        function getImageFileError() {
            return '@Resource.errWebsiteImageFileError';
        };

        function getImageFileWarning() {
            return '@Resource.errorMessageFileSizeWarning5MB';
    };
      function getImagePixelWarning() {
            return '@Resource.errMessagePixelLessThan256';
    };

    function websitebrandimageDocumentReady() {
        $("#choose-Webfile").click(function () {
            $("#btn-weblogo").trigger("click");
        });
        $('#btn-weblogo').change(function (e) {
            $(".company-website-loading").show();
            $("#brand-image-block").addClass("pntr-none subSectionOpacity");
            if (e.target.files && e.target.files[0]) {
                $('#brand-img-message').text("");
                var goUpload = true;
                var uploadFile = e.target.files[0];
                //const uploadFileSize = Math.round((uploadFile.size / 1024));
                if (!(/\.(jpg|jpeg|png)$/i).test(uploadFile.name)) {
                    $("#imageUploadStatus").val(0);
                    $('#brand-img-message').text(getImageFileError());
                    $(".brand-logo-loading").hide();
                    $('#brand-image-ctrl').hide();
                    $("#brand-image-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (uploadFile.size > @ApplicationConstants.TFXImageAndPdfAllowedFileUploadSizeInBytes ) { // 5mb
                    $("#imageUploadStatus").val(0);
                    $('#brand-img-message').text(getImageFileWarning());
                    $(".brand-logo-loading").hide();
                    $('#brand-image-ctrl').hide();
                    $("#brand-image-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (goUpload) {
                    var reader = new FileReader();
                    reader.onload = function (event) {
                        $("#imageUploadStatus").val(1);
                        $('#brand-image-ctrl').show();
                        $('#brand-image-ctrl').attr('src', event.target.result);
                        $(".brand-logo-loading").hide();
                        $("#brand-image-block").removeClass("pntr-none subSectionOpacity");
                        goUpload = true; return true;
                    };
                    reader.readAsDataURL(e.target.files[0]);
                }
            } else {
                  $("#brand-image-block").removeClass("pntr-none subSectionOpacity");
            }
        });
    }

    function websitebrandfaviconDocumentReady() {
        $("#choose-Faviconfile").click(function () {
            $("#btn-webfavicon").trigger("click");
        });
        $('#btn-webfavicon').change(function (e) {
            $(".company-website-loading").show();
            $("#brand-favicon-block").addClass("pntr-none subSectionOpacity");
            if (e.target.files && e.target.files[0]) {
                $('#brand-favicon-message').text("");
                var goUpload = true;
                var uploadFile = e.target.files[0];
               // const uploadFileSize = Math.round((uploadFile.size / 1024));
                if (!(/\.(jpg|jpeg|png)$/i).test(uploadFile.name)) {
                    $("#faviconUploadStatus").val(0);
                    $('#brand-favicon-message').text(getImageFileError());
                    $(".favicon-loading").hide();
                    $('#brand-favicon-ctrl').hide();
                    $("#brand-favicon-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (uploadFile.size >= @ApplicationConstants.TFXImageAndPdfAllowedFileUploadSizeInBytes) { // 5mb
                    $("#faviconUploadStatus").val(0);
                    $('#brand-favicon-message').text(getImageFileWarning());
                    $(".favicon-loading").hide();
                    $('#brand-favicon-ctrl').hide();
                    $("#brand-favicon-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                var _URL = window.URL || window.webkitURL;
                var file, img;
                if ((file = uploadFile)) {
                    img = new Image();
                    var objectUrl = _URL.createObjectURL(file);
                    img.onload = function () {
                        if (this.width > 256 || this.height > 256) {
                            $("#faviconUploadStatus").val(0);
                            $('#brand-favicon-message').text(getImagePixelWarning());
                            $(".favicon-loading").hide();
                            $('#brand-favicon-ctrl').hide();
                            $("#brand-favicon-block").removeClass("pntr-none subSectionOpacity");
                            e.target.value = '';
                            goUpload = false; return false;
                        }
                        else {
                            if (goUpload) {
                                var reader = new FileReader();
                                reader.onload = function (event) {
                                    $("#faviconUploadStatus").val(1);
                                    $('#brand-favicon-ctrl').show();
                                    $('#brand-favicon-ctrl').attr('src', event.target.result);
                                    $(".brand-favicon-loading").hide();
                                    $("#brand-favicon-block").removeClass("pntr-none subSectionOpacity");
                                    goUpload = true; return true;
                                };
                                reader.readAsDataURL(e.target.files[0]);
                            }
                        }
                    };
                    img.src = objectUrl;
                }
            } else {
                $("#brand-favicon-block").removeClass("pntr-none subSectionOpacity");
            }
        });
    }

    function copyToClipBorad() {
        $("#tempHTML").val('');
        var url = $("#divURL").html();
        var urlName = $("#URLName").val();
        var finalURL = url + urlName;
        $("#tempHTML").val(finalURL);
        var copyTextId = document.getElementById('tempHTML');
        copyTextId.style.display = 'block';
        copyTextId.focus();
        copyTextId.select();
        /* Copy the text inside the text field */
        document.execCommand('copy');
        copyTextId.style.display = 'none';
        var toastMessageType = 'success';
        var messageBody = $('.brand-msgText').html();
        eval("msg" + toastMessageType.toLowerCase() + '(messageBody)');

    }
    function IsGreaterThanZero(value) {
        if (value > 0)
            return false;
        else
            return true;
    }
    function IsGreaterThanZeroPercantage(value) {
        if (value > 0 && value<=100)
            return false;
        else
            return true;
    }
    function IsGreaterThanZeroBuffer(value) {
        if (value >= 0)
            return false;
        else
            return true;
    }
    function validateForm() {

        var validateform = true;
        $("#spurlnamerequired").hide();
        var isBrandWebsite = @Model.IsBrandMyWebsite;
        var imagePath = '@Model.ImageFilePath';

        //IMS FORCASTING
        if ($("#idAccountLevelForcastingEnabled").prop("checked")) {

            var _AverageLoadQty = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.AverageLoad)").val();
            var _EndBuffer = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.EndBuffer)").val();
            var _LeadTime = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.LeadTime)").val();
            var _MinimumLoadQty = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.MinimumLoad)").val();
            var _RetainCouldGo = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.Retain)").val();
            var _RetainTimeBuffer = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.RetainTimeBuffer)").val();
            var _RunoutLevelMustGo = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.RunoutLevel)").val();
            var _SafetyStockShouldGo = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.SafetyStock)").val();
            var _StartBuffer = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.StartBuffer)").val();
            var _StartTiming = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.StartTime)").val();
            var _SupplierLead = $("#@Html.IdFor(m => m.ForcastingPreference.ForcastingServiceSetting.SupplierLead)").val();
            if (_StartTiming == null || _StartTiming == "") {
                validateform = false;
                msgerror("Invalid start timing.");
            }
            else if (IsGreaterThanZeroPercantage(_MinimumLoadQty)) {
                validateform = false;
                msgerror("Invalid minimum load quantity percantage.");
            }
            else if (IsGreaterThanZeroPercantage(_AverageLoadQty)) {
                validateform = false;
                msgerror("Invalid average load quantity percantage.");
            }
            else if (IsGreaterThanZero(_RetainCouldGo)) {
                validateform = false;
                msgerror("Invalid retain (CouldGo) quantity.");
            }
            else if (IsGreaterThanZero(_SafetyStockShouldGo)) {
                validateform = false;
                msgerror("Invalid safety stock (ShouldGo) quantity.");
            }
            else if (IsGreaterThanZero(_RunoutLevelMustGo)) {
                validateform = false;
                msgerror("Invalid runout level (MustGo) quantity.");
            }
            else if (IsGreaterThanZeroBuffer(_StartBuffer)) {
                validateform = false;
                msgerror("Invalid start buffer.");
            }
            else if (IsGreaterThanZeroBuffer(_EndBuffer)) {
                msgerror("Invalid end buffer.");
                validateform = false;
            }
            else if (IsGreaterThanZeroBuffer(_LeadTime)) {
                validateform = false;
                msgerror("Invalid lead time.");
            }
            else if (IsGreaterThanZeroBuffer(_RetainTimeBuffer)) {
                validateform = false;
                msgerror("Invalid retain time buffer.");
            }
            else if (IsGreaterThanZeroBuffer(_SupplierLead)) {
                validateform = false;
                msgerror("Invalid supplier time buffer.");
            }

        }
        if ($("#CheckboxCreditCheck").is(":checked")) {
            if ($("#CreditCheckType").val() == 0) {
                $("#CreditCheckrequired").show();
                validateform = false;
            }
            else {
                $("#CreditCheckrequired").hide();
            }
        }


        var IsCustomUnScheduleDelivery = $("input[name='IsCustomUnScheduleDelivery']:checked").val();
        if (IsCustomUnScheduleDelivery == 'True') {
            if ($("#DeliveryDays").val() == '') {
                $("#DeliveryDaysrequired").show();
                validateform = false;
            }
            else {
                $("#DeliveryDaysrequired").hide();
            }


            if ($("#ShiftStartTime").val() == '') {
                $("#ShiftStartTimerequired").show();
                validateform = false;
            }
            else {
                $("#ShiftStartTimesrequired").hide();
            }

            if ($("#ShiftEndTime").val() == '') {
                $("#ShiftEndTimerequired").show();
                validateform = false;
            }
            else {
                $("#ShiftEndTimerequired").hide();
            }

        }

        var backgroundImagePath = '@Model.BackgroundImageFilePath';
        if (isBrandWebsite === true) {
            if ($("#URLName").val() == '') {
                $("#spurlnamerequired").show();
                validateform = false;
            }
            if ($("#imageUploadStatus").val() == 0) {
                $('#brand-img-message').text('@Resource.lblSelectImage');
                validateform = false;
            }

            if ($("#backgroundImageUploadStatus").val() == 0) {
                $('#brand-backgroundimg-message').text('@Resource.lblSelectImage');
                validateform = false;
            }

        }
        else {
            if ($("#IsBrandMyWebsite").prop("checked") == true) {
                if ($("#URLName").val() == '') {
                    $("#spurlnamerequired").show();
                    validateform = false;
                }
                if (imagePath == '') {
                    if ($("#imageUploadStatus").val() == 0) {
                        $('#brand-img-message').text('@Resource.lblSelectImage');
                        validateform = false;
                    }
                }
                if (backgroundImagePath == '') {
                    if ($("#backgroundImageUploadStatus").val() == 0) {
                        $('#brand-backgroundimg-message').text('@Resource.lblSelectImage');
                        validateform = false;
                    }
                }
            }

        }

        var defaultNotificationPeriod = parseInt($("#@Html.IdFor(m => m.NotificationPeriod)").val());
        if (isNaN(defaultNotificationPeriod) || defaultNotificationPeriod <= 0) {
            validateform = false;
            validationMessageFor($("#@Html.IdFor(m => m.NotificationPeriod)").attr('name'), '@Resource.errorMessageInvalidFrequency');
        }
         else {
            validationMessageFor($("#@Html.IdFor(m => m.NotificationPeriod)").attr('name'), '');
        }

        var isLfvChecked = $('#@Html.IdFor(m => m.IsLiftFileValidationEnabled)').is(':checked');
        var noMatchRecordCount = parseInt($("#@Html.IdFor(m => m.LfvInputParameter.DaysToContinueMatchProcess)").val());
        if ((isNaN(noMatchRecordCount) || noMatchRecordCount <= 0) && isLfvChecked) {
            validateform = false;
            validationMessageFor($("#@Html.IdFor(m => m.LfvInputParameter.DaysToContinueMatchProcess)").attr('name'), '@Resource.valiationMessageNoMatchRecordInvalid');
        }
        else {
            validationMessageFor($("#@Html.IdFor(m => m.LfvInputParameter.DaysToContinueMatchProcess)").attr('name'), '');
        }
        if (validateform) {
            SetProductSequence();
        }
        return validateform;
    }
    function SetProductSequence() {
        var enableProductSequencing = $("input[name='@Html.NameFor(m => m.IsProductSequencingEnabled)']:checked").val();
        var productSequenceDetails = new Array();
        if (enableProductSequencing) {
            $("#prod-seq-sortable li").each(function (index) {
                var productSequenceItem = new Object();
                productSequenceItem.ProductTypeId = $(this).attr("id");
                productSequenceItem.Sequence = index + 1;
                productSequenceItem.DisplayName = $(this).text().trim();
                productSequenceDetails.push(productSequenceItem);
            });
            if (productSequenceDetails.length == 0) {
                $("#CheckboxEnableProdSequecing").val(false);
            }
        }
        $("#@Html.IdFor(m => m.ProductSequencingJson)").val(JSON.stringify(productSequenceDetails));
    }
        function updatePreview() {

        var HeaderColor = $("#HeaderColor").val();
        var BackgroundColor = $("#BackgroundColor").val();
        var IconColor = $("#IconColor").val();
        var ForegroundColor = $("#ForegroundColor").val();
        var ButtonColor = $("#ButtonColor").val();

        HeaderColor ? $("#previewHeader").css("background", HeaderColor) : $("#previewHeader").css("background", "#fff");
        BackgroundColor ? $("#sd-pnl-wraper").css("background", BackgroundColor) : $("#sd-pnl-wraper").css("background", "#f2f2f2");
        ForegroundColor ? $('#previewWell div .well').css("background", ForegroundColor) : $('#previewWell div .well').css("background", "white");
        IconColor ? $('#previewIcons li i').css("color", IconColor + " !important") : $('#previewIcons li i').css("color", "#616161!important");
        IconColor ? $('#previewIcons li i').css("border", "1px solid " + IconColor + " !important") : $('#previewIcons li i').css("border", "1px solid " + "#616161!important");

        if (ButtonColor) {
            $("#previewButton").removeClass("btn-primary").removeClass("btn1-primary").css("background", ButtonColor).css("border-radius", "50px").css("color", "white");
        }
        else {
            $("#previewButton").css("background", "").addClass("btn-primary");
        }

        if ($("#IsBrandMyWebsite").prop("checked") == true) {
            var images = $('#brand-image-ctrl').attr('src');
            $('#previewLogo').attr("src", images);
        }
        else {
            var tempLogo = '/Content/images/truefill-logo.png';
            $('#previewLogo').attr("src", tempLogo);
        }
    }

    function websiteBackgroundimageDocumentReady() {
        $("#choose-backgroundfile").click(function () {
            $("#btn-backgroundImg").trigger("click");
        });
        $('#btn-backgroundImg').change(function (e) {
            $(".company-website-loading").show();
            $("#brand-backgroundimage-block").addClass("pntr-none subSectionOpacity");
            if (e.target.files && e.target.files[0]) {
                $('#brand-backgroundimg-message').text("");
                var goUpload = true;
                var uploadFile = e.target.files[0];
                //const uploadFileSize = Math.round((uploadFile.size / 1024));
                if (!(/\.(jpg|jpeg|png)$/i).test(uploadFile.name)) {
                    $("#backgroundImageUploadStatus").val(0);
                    $('#brand-backgroundimg-message').text(getImageFileError());
                    $(".brand-logo-loading").hide();
                    $('#brand-backgroundimage-ctrl').hide();
                    $("#brand-backgroundimage-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (uploadFile.size >= @ApplicationConstants.TFXImageAndPdfAllowedFileUploadSizeInBytes) { // 5mb
                    $("#backgroundImageUploadStatus").val(0);
                    $('#brand-backgroundimg-message').text(getImageFileWarning());
                    $(".brand-logo-loading").hide();
                    $('#brand-backgroundimage-ctrl').hide();
                    $("#brand-backgroundimage-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (goUpload) {
                    var reader = new FileReader();
                    reader.onload = function (event) {
                        $("#backgroundImageUploadStatus").val(1);
                        $('#brand-backgroundimage-ctrl').show();
                        $('#brand-backgroundimage-ctrl').attr('src', event.target.result);
                        $(".brand-logo-loading").hide();
                        $("#brand-backgroundimage-block").removeClass("pntr-none subSectionOpacity");
                        goUpload = true; return true;
                    };
                    reader.readAsDataURL(e.target.files[0]);
                }
            }
        });
    }

    function websiteCarrierOnboardingimageDocumentReady() {
        $("#choose-carrier-onboarding-file").click(function () {
            $("#btn-carrier-onboardingImg").trigger("click");
        });
        $('#btn-carrier-onboardingImg').change(function (e) {
            $(".company-website-loading").show();
            $("#carrier-onboardingimage-block").addClass("pntr-none subSectionOpacity");
            if (e.target.files && e.target.files[0]) {
                $('#brand-carrier-onboardingdimg-message').text("");
                var goUpload = true;
                var uploadFile = e.target.files[0];
                //const uploadFileSize = Math.round((uploadFile.size / 1024));
                if (!(/\.(jpg|jpeg|png)$/i).test(uploadFile.name)) {
                    $("#carrieronboardingImageUploadStatus").val(0);
                    $('#brand-carrier-onboardingdimg-message').text(getImageFileError());
                    $(".carrier-onboarding-logo-loading").hide();
                    $('#carrier-onboarding-image-ctrl').hide();
                    $("#carrier-onboardingimage-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (uploadFile.size >= @ApplicationConstants.TFXImageAndPdfAllowedFileUploadSizeInBytes) { // 5mb
                    $("#carrieronboardingImageUploadStatus").val(0);
                    $('#brand-carrier-onboardingdimg-message').text(getImageFileWarning());
                    $(".carrier-onboarding-logo-loading").hide();
                    $('#carrier-onboarding-image-ctrl').hide();
                    $("#carrier-onboardingimage-block").removeClass("pntr-none subSectionOpacity");
                    e.target.value = '';
                    goUpload = false; return false;
                }
                if (goUpload) {
                    var reader = new FileReader();
                    reader.onload = function (event) {
                        $("#carrieronboardingImageUploadStatus").val(1);
                        $('#carrier-onboarding-image-ctrl').show();
                        $('#carrier-onboarding-image-ctrl').attr('src', event.target.result);
                        $(".carrier-onboarding-logo-loading").hide();
                        $("#carrier-onboardingimage-block").removeClass("pntr-none subSectionOpacity");
                        goUpload = true; return true;
                    };
                    reader.readAsDataURL(e.target.files[0]);
                }
            }
        });
    }

    function updatePreviewLogin() {
        if ($("#IsBrandMyWebsite").prop("checked") == true) {
            var images = $('#brand-image-ctrl').attr('src');
            $('#loginpreviewLogo').attr("src", images);
            //$("#supplierBrandText").show();
            var backgroundimages = $('#brand-backgroundimage-ctrl').attr('src');
            if (backgroundimages != '/Content/images/no-image.png')
            {
                $('#previewlogin').css("background", "#fff url(" + backgroundimages + ") no-repeat").css("background-size", "cover");
            }
        }
        else {
            var tempLogo = '/Content/images/truefill-logo.png';
            $('#loginpreviewLogo').attr("src", tempLogo);
            $("#supplierBrandText").hide();
        }
    }

    function hideshowLFVInputParameters(currentElement) {

    }

    function GetPoNumberGrid() {
        var url = '@Url.Action("GetPoNumberGridView", "LiftData", new { area = "Settings" })';
        $(".grid-loader").show();
        $.get(url, function (response) {
            if (response) {
                $("#poNumbersgrid-form").html(response);
                parseForm();
            }
        }).always(
            function () {
                $(".grid-loader").hide();
            }
        );
    }

    function getBadgeNumbersGrid() {
        var url = '@Url.Action("GetBadgeNumberGridView", "LiftData", new { area = "Settings" })';
        $(".badge-no-grid-loader").show();
        $.get(url, function (response) {
            if (response) {
                $("#badgeNumbersgrid-form").html(response);
                parseForm();
            }
        }).always(
            function () {
                $(".badge-no-grid-loader").hide();
            }
        );
    }
    function getCarrierListGrid() {
        var url = '@Url.Action("GetCarrierListGridView", "LiftData", new { area = "Settings" })';
        $(".carrier-List-grid-loader").show();
        $.get(url, function (response) {
            if (response) {
                $("#carrierListgrid-form").html(response);
                parseForm();
            }
        }).always(
            function () {
                $(".carrier-List-grid-loader").hide();
            }
        );
    }

    function getQuebecBillingBadgesListGrid() {
       var url = '@Url.Action("GetQuebecBadgeListGridView", "LiftData", new { area = "Settings" })';
        $(".quebecBadge-List-grid-loader").show();
        $.get(url, function (response) {
            if (response) {
                $("#quebecListGrid-form").html(response);
               parseForm();
            }
        }).always(
            function () {
                $(".quebecBadge-List-grid-loader").hide();
           }
        );
    }



    function getAdditiveProductListGrid() {
       var url = '@Url.Action("GetAdditiveProductListGridView", "Profile", new { area = "Settings" })';
        $(".additiveProduct-List-grid-loader").show();
        $.get(url, function (response) {
            if (response) {
                $("#additiveproductGrid-form").html(response);
               parseForm();
            }
        }).always(
            function () {
                $(".additiveProduct-List-grid-loader").hide();
           }
        );
    }

    function showCategoryReasonCodePopup() {
        var url = '@Url.Action("GetReasonCategoryAndCodesView", "Profile", new { area = "Settings" })';
        $("#reason-category-code-loader").show();
        $.get(url, function (response) {
            if (response) {
                $("#reason-category-and-codes-form").html(response);
                parseForm();
            }
        }).always(
            function () {
                $("#reason-category-code-loader").hide();
            }
        );
    }

    $(document).ready(function () {
        if ($('#@Html.IdFor(m => m.IsLiftFileValidationEnabled)').is(':checked')) {
            $(".liftoptions").show();
        } else {
             $(".liftoptions").hide();
        }
        if ($('#IsIgnoreSelfHauling').is(':checked')) {
            $(".self-po-upload-section").show();
        }
        if ($('#IsIgnoreWholesaleBadge').is(':checked')) {
            $(".Wholesale-badge-upload-section").show();
        }
        if ($('#IsIgnoreNonRegisteredCarriers').is(':checked')) {
            $(".Ignore-carrier-upload-section").show();
        }
        if ($('#IsIgnoreQuebecBillingBadges').is(':checked')) {
            $(".Ignore-quebec-billing-badge-upload-section").show();
        }
        if ($('#CheckBoxForIsAdditiveBlendingEnabled').is(':checked')) {
            $(".section-add-blending-product").show();
        }
        else {
            $(".section-add-blending-product").hide();
        }
        if ($('#IsLoadOptimization').is(':checked')) {
            $(".section-add-distributed-users").show();
        }
        else {
            $(".section-add-distributed-users").hide();
        }

       // $('#lblThresholdConvertValue').

        //$('.ddlUOM').each(function (i, item) {
        //    var itemValue = $(item).va();
        //    if (itemValue == '3' || itemValue == '4')
        //        item.disabled = true;
        //});
    });



    //Code Added to Display Uploaded poCsv filename below upload button from modal
    $('#selfpoCsvFile').on('change', function (event) {
        //get the file name
        if (event != undefined && event != null) {
            if (event.target.files[0] != undefined) {
                var fileName =event.target.files[0].name;
                $('#pocsvFileName').text(fileName);
            }
            else {
                $('#pocsvFileName').text('');
            }
        }
    })
    //Code Added to Display Uploaded wholesalebadgecsv filename below upload button from modal
    $('#wholesalebadgeCsvFile').on('change', function (event) {
        //get the file name
        if (event != undefined && event != null) {
            if (event.target.files[0] != undefined) {
                var fileName = event.target.files[0].name;
                $('#wholesalebadgecsvFileName').text(fileName);
            }
            else {
                $('#wholesalebadgecsvFileName').text('');
            }
        }
    })
    //Code Added to Display Uploaded carrierlistcsv filename below upload button from modal
    $('#carrierListCsvFile').on('change', function (event) {
        //get the file name
        if (event != undefined && event != null) {
            if (event.target.files[0] != undefined) {
                var fileName = event.target.files[0].name;
                $('#carrierListcsvFileName').text(fileName);
            }
            else {
                $('#carrierListcsvFileName').text('');
            }
        }
    })
    //Code Added to Display Uploaded quebecBillingBadge filename below upload button from modal
    $('#quebecBadgeListCsvFile').on('change', function (event) {
        //get the file name
        if (event != undefined && event != null) {
            if (event.target.files[0] != undefined) {
                var fileName = event.target.files[0].name;
                $('#quebecBadgeListcsvFileName').text(fileName);
            }
            else {
                $('#quebecBadgeListcsvFileName').text('');
            }
        }
    })

    $("#CheckboxEnableProdSequecing").click(function () {
        if ($(this).is(":checked")) {
            $("#divProductSequence").show();
        } else {
            $("#divProductSequence").hide();
        }
    });

       $("#CheckboxCreditCheck").click(function () {
        if ($(this).is(":checked")) {
            $(".creditoptions").show();
        } else {
            $(".creditoptions").hide();
            $("#CreditCheckType").val(0);
        }
    });
</script>

