@model ThirdPartyOrderViewModel

<div class="row mt10">
    <div class="col-sm-3">
        @{
            var selectList = Enum.GetValues(typeof(TableTypes))
                                 .Cast<TableTypes>()
                                .Where(e => e != TableTypes.CarrierSpecific)
                                 .Select(e => new SelectListItem
                                 {
                                     Value = ((int)e).ToString(),
                                     Text = e.GetDisplayName()
                                 });
        }
        <label>Table Types</label>
        @Html.DropDownListFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableType, selectList, Resource.btnLabelSelect, new { @class = "form-control enum-ddl-spt", onchange = "GetFuelSurcharge();" })
        @Html.ValidationMessageFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableType)
    </div>

    <div class="mb15 col-sm-3">
        <label class="ml-1">Surcharge Table Name</label>
        @Html.DropDownListFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableId, new SelectList(new List<DropdownDisplayItem>(), "Id", "Name"), Resource.btnLabelSelect, new { @class = "form-control", onchange = "onFuelSurchargeTableId();" })
        @Html.ValidationMessageFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableId)
        <a  class="mt-2"onclick="viewFuelSurchargeTable();" id="lnkviewFreightSurchargeTable" class="pntr-none subSectionOpacity">View Fuel Surcharge Table</a>
    </div>
</div>

@using (Html.BeginScripts())
{
<script type="text/javascript">

    function SetFuelSurchargeTableId(key, val) {
        if (typeof Storage !== "undefined") {
            localStorage.setItem(key, val);
        }
    }

    function RemoveFuelSurchargeTableId(key) {
        if (typeof Storage !== "undefined") {
            localStorage.removeItem(key);
        }
    }

    function GetFuelSurcharge() {
        var selectedTableType = $("#@Html.IdFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableType)").val();
        if (selectedTableType == "") {
            var selectedTableType = 0;
        }
        var selectedCustomerId = $("#@Html.IdFor(m => m.CustomerDetails.CompanyId)").val();
        var selectedTerminalId = $("#@Html.IdFor(m => m.SourceRegion.ApprovedTerminalId)").val();
        var selectedBulkPlantId = $("#@Html.IdFor(m => m.SourceRegion.ApprovedBulkPlantId)").val();
        var selectedFuelTypeId = $("#@Html.IdFor(m => m.FuelDetails.FuelTypeId)").val();
        var selectedTerminals = $('#@Html.IdFor(m => m.SourceRegion.SelectedTerminals) option:selected').toArray().map(item => parseInt(item.value));
        var selectedBulkPlants = $('#@Html.IdFor(m => m.SourceRegion.SelectedBulkPlants) option:selected').toArray().map(item => parseInt(item.value));

        $('#lnkviewFreightSurchargeTable').addClass('pntr-none subSectionOpacity');
        var target = $("#@Html.IdFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableId)");
        var sourceRegionIds = $('#@Html.IdFor(m => m.SourceRegion.SelectedSourceRegions) option:selected').toArray().map(item => parseInt(item.value));

        //target.empty();
        var url = "@Url.Action("GetFuelSurchargeTables", "Order")";
        var filter = {
            'TableType': selectedTableType,
            'CustomerId': selectedCustomerId,
            'TerminalId': selectedTerminalId,
            'BulkPlantId': selectedBulkPlantId,
            'FuelTypeId': selectedFuelTypeId,
            'SourceRegionIds': sourceRegionIds,
            'SelectedTerminals': selectedTerminals,
            'SelectedBulkPlants': selectedBulkPlants
        }

        $.post(url, filter,
            function (response) {
                target.empty(), $.each(response, function (i, element) {
                    target.append($('<option></option>').val(element.Id).html(element.Name));
                });

                $(target).prepend("<option value selected='selected'>@Resource.btnLabelSelect</option>");
            });
    }

    function onFuelSurchargeTableId() {
        var FuelSurchargeTableId = $("#@Html.IdFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableId)").val();
        if (FuelSurchargeTableId == null || FuelSurchargeTableId == undefined || FuelSurchargeTableId == -1 || FuelSurchargeTableId == "") {
            $('#lnkviewFreightSurchargeTable').addClass('pntr-none subSectionOpacity');
        }
        else {
            $('#lnkviewFreightSurchargeTable').removeClass('pntr-none subSectionOpacity');
        }
    }

    function viewFuelSurchargeTable() {
         var FuelSurchargeTableId = $("#@Html.IdFor(m => m.OrderAdditionalDetailsViewModel.FuelSurchargeTableId)").val();
        RemoveFuelSurchargeTableId("FuelSurchargeTabId");
        SetFuelSurchargeTableId("FuelSurchargeTabId", FuelSurchargeTableId);
        var fuelSurchargeLink = "@Url.Action("CreateNew", "FuelSurcharge", new { area = "Supplier" })";
        window.open(fuelSurchargeLink, '_blank');
    }
</script>
}

