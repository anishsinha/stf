{"version":3,"sources":["./src/app/carrier-companies/service/assigncarrier.service.ts","./src/app/carrier/service/deliveryrequest.service.ts","./src/app/fuelsurcharge/services/fuelsurcharge.service.ts","./src/app/invitation/invitation.service.ts","./src/app/lfv-dashboard/LiftFileModels.ts","./src/app/location/services/location.service.ts","./src/app/my.localstorage.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AssigncarrierService extends HandleError {\r\n\r\n\tprivate carrierUrl = '/Settings/Profile/GetCarriers';\r\n\tprivate carrierUsersUrl = '/Settings/Profile/GetAssignedCarriers';\r\n\tprivate jobsUrl = '/Settings/Profile/GetJobsForSupplierToCarrier';\r\n\tprivate assignedCarriersUrl = '/Settings/Profile/GetAssignedCarriersForSupplier';\r\n\tprivate createUrl = '/Settings/Profile/AssignCarriers';\r\n\tprivate updateUrl = '/Settings/Profile/UpdateAssignedCarrier';\r\n\tprivate deleteUrl = '/Settings/Profile/DeleteAssignedCarrier';\r\n    private createFreightOrderUrl = '/Carrier/Order/createFreightOrdersForAssignedCarrier';\r\n    private editFreightOnlyOrderUrl = '/Carrier/Order/EditFreightOnlyOrders';\r\n    private closeFreightOnlyOrderUrl = '/Carrier/Order/closeAssignedOrdersforCarrier';\r\n    private GetCarrierUserEmailsUrl = '/Supplier/Order/GetCarrierUserEmails';\r\n    private BulkUploadCarrierUrl = '/Settings/Profile/BulkUploadCarrier';\r\n\tconstructor(private httpClient: HttpClient) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tGetCarrierUserEmails(assignedCarrierCompanyId: number): Observable<DropdownItem[]> {\r\n\t\treturn this.httpClient.get<DropdownItem[]>(this.GetCarrierUserEmailsUrl +'?assignedCarrierCompanyId='+assignedCarrierCompanyId)\r\n\t\t\t.pipe(catchError(this.handleError<DropdownItem[]>('GetCarrierUserEmails', [])));\r\n\t}\r\n\r\n\tgetCarriers(): Observable<DropdownItem[]> {\r\n\t\treturn this.httpClient.get<DropdownItem[]>(this.carrierUrl)\r\n\t\t\t.pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n\t}\r\n\tgetAssignedCarrierUsers(): Observable<CarrierJobDetails[]> {\r\n\t\treturn this.httpClient.get<CarrierJobDetails[]>(this.carrierUsersUrl)\r\n\t\t\t.pipe(catchError(this.handleError<CarrierJobDetails[]>('getAssignedCarrierUsers', [])));\r\n\t}\r\n\tgetJobs(): Observable<CarrierJob[]> {\r\n\t\treturn this.httpClient.get<CarrierJob[]>(this.jobsUrl)\r\n\t\t\t.pipe(catchError(this.handleError<CarrierJob[]>('getJobs', [])));\r\n\t}\r\n\r\n\tgetAssignedCarriers(): Observable<Carrier[]> {\r\n\t\treturn this.httpClient.get<Carrier[]>(this.assignedCarriersUrl)\r\n\t\t\t.pipe(catchError(this.handleError<Carrier[]>('getAssignedCarriers', [])));\r\n\t}\r\n\r\n\tassignCarriers(carriers: Carrier[]): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.createUrl, carriers, httpOptions)\r\n\t\t\t.pipe(catchError(this.handleError<any>('assignCarriers', carriers)));\r\n\t}\r\n\r\n\tupdateAssignedCarrier(carrier: Carrier): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.updateUrl, carrier, httpOptions)\r\n\t\t\t.pipe(catchError(this.handleError<any>('updateAssignedCarrier', carrier)));\r\n\t}\r\n\r\n\tdeleteAssignedCarrier(carrier: Carrier): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.deleteUrl, carrier, httpOptions)\r\n\t\t\t.pipe(catchError(this.handleError<any>('deleteAssignedCarrier', carrier)));\r\n    }\r\n    createFreightOrder(carriers: Carrier[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.createFreightOrderUrl, carriers)\r\n            .pipe(catchError(this.handleError<any>('createFreightOrder', carriers)))\r\n    }\r\n    editFreightOnlyOrders(JobIdsToEdit: EditFreightOnlyOrder): Observable<any> {\r\n        return this.httpClient.post<any>(this.editFreightOnlyOrderUrl, JobIdsToEdit)\r\n            .pipe(catchError(this.handleError<any>('editFreightOnlyOrders', JobIdsToEdit)))\r\n    }\r\n    closeAssignedOrdersforCarrier(EditFreightOnlyOrder: EditFreightOnlyOrder): Observable<any>{\r\n        return this.httpClient.post<any>(this.closeFreightOnlyOrderUrl, EditFreightOnlyOrder)\r\n            .pipe(catchError(this.handleError<any>('closeAssignedOrdersforCarrier', EditFreightOnlyOrder)))\r\n    }\r\n    upload(file, IsCreateFreightOrder): Observable<any> {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file, file.name);\r\n        formData.append(\"IsCreateFreightOrder\", IsCreateFreightOrder);\r\n        return this.httpClient.post(this.BulkUploadCarrierUrl, formData)\r\n    } \r\n}\r\n\r\nexport class DropdownItem {\r\n\tId: number;\r\n\tName: string;\r\n\tCode: string;\r\n\tIsSelected: boolean;\r\n}\r\nexport class JobWithEmails {\r\n\tId: number;\r\n\tName: string;\r\n\tCode: string;\r\n\tEmails: DropdownItem[];\r\n    IsSelected: boolean;\r\n    IsEmailEdit: boolean;\r\n}\r\nexport class DriverModel {\r\n    TfxId: number;\r\n    TfxName: string;\r\n}\r\nexport class Carrier {\r\n\tpublic Id: string;\r\n\tpublic Carrier: DropdownItem;\r\n    public Jobs: CarrierJob[];\r\n    public assignedLocations: string;\r\n}\r\n\r\nexport class CarrierJob {\r\n\tpublic Job: JobWithEmails;\r\n\tpublic BuyerCompanyId: number;\r\n\tpublic BuyerCompanyName: string;\r\n}\r\n\r\nexport class EditFreightOnlyOrder {\r\n    public removedJobsIds: number[];\r\n    public newJobsIds: number[];\r\n    public IsCreateOrder: boolean;\r\n    public CarrierCompanyId: number;\r\n}\r\n\r\nexport class CarrierJobDetails{\r\n\tpublic CarrierCompanyName: string;\r\n\tpublic CarrierCompanyId: number;\r\n\tpublic LocationCount: number;\r\n\tpublic AssignedLocations: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DelRequestsByJobModel, DeliveryRequestViewModel, DelRequestByTimeModel } from '../models/DispatchSchedulerModels';\r\nimport { sortBy, sortByDesc } from 'src/app/my.functions';\r\nimport { DeliveryReqPriority, DeliveryRequestTypes } from 'src/app/app.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeliveryrequestService {\r\n\r\n    constructor() { }\r\n\r\n    public groupDrsByJob(drs: DeliveryRequestViewModel[], drType: DeliveryRequestTypes = DeliveryRequestTypes.None) {\r\n        var response = [] as DelRequestsByJobModel[];\r\n        for (var i = 0; i < drs.length; i++) {\r\n            var jobIndex = -1;\r\n            if (drs[i].IsTBD == false) {\r\n                jobIndex = response.findIndex(t => t.JobId == drs[i].JobId);\r\n            }\r\n            else {\r\n                jobIndex = response.findIndex(t => t.TBDGroupId == drs[i].TBDGroupId);\r\n            }\r\n            if (jobIndex == -1) {\r\n                var job = new DelRequestsByJobModel();\r\n                job.JobId = drs[i].JobId;\r\n                job.JobName = drs[i].JobName;\r\n                job.DeliveryRequestType = drType;\r\n                job.JobCity = drs[i].JobCity;\r\n                if (drs[i].IsTBD == false) {\r\n                    job.CarrierStatus = this.getCarrierStatus(drs.filter(t => t.JobId == job.JobId));\r\n                    job.Priority = this.getPriority(drs.filter(t => t.JobId == job.JobId));\r\n                } else {\r\n                    job.CarrierStatus = this.getCarrierStatus(drs.filter(t => t.TBDGroupId == job.TBDGroupId));\r\n                    job.Priority = this.getPriority(drs.filter(t => t.TBDGroupId == job.TBDGroupId));\r\n                    job.ProductType = drs[i].ProductType;\r\n                }\r\n                job.CustomerCompany = drs[i].CustomerCompany;\r\n                job.JobAddress = drs[i].JobAddress;\r\n                job.CustomerBrandId = drs[i].CustomerBrandId;\r\n                job.TBDGroupId = drs[i].TBDGroupId;\r\n                if (drs[i].TrailerTypes.length != 5) {\r\n                    job.TrailerCompatibility = drs[i].TrailerTypes.map(t => t.Name).join(',');\r\n                }\r\n                job.IsOnlyNightDelivery = drs[i].IsAcceptNightDeliveries;\r\n                job.HoursToCoverDistance = drs[i].HoursToCoverDistance;\r\n                job._HoursToCoverDistance = drs[i].HoursToCoverDistance ? Number(drs[i].HoursToCoverDistance.replace(/:/g, '')) : 0;\r\n                job.DRQueueAttributes = drs[i].DRQueueAttributes;\r\n                job.LoadQueueAttributes = drs[i].LoadQueueAttributes;\r\n                job.DeliveryRequests.push(drs[i]);\r\n                job.IsTBD = drs[i].IsTBD;\r\n                job.TBDGroupId = drs[i].TBDGroupId;\r\n                job.ProductType = drs[i].ProductType;\r\n                job.ProductTypeId = drs[i].ProductTypeId;\r\n                job.UoM = drs[i].UoM;\r\n                job.RequiredQuantity = drs[i].RequiredQuantity;\r\n                job.ScheduleQuantityTypeText = drs[i].ScheduleQuantityTypeText;\r\n                response.push(job);\r\n            }\r\n            else {\r\n                response[jobIndex].DeliveryRequests.push(drs[i]);\r\n            }\r\n        }\r\n        response = sortByDesc(response, '_HoursToCoverDistance');\r\n        return response;\r\n    }\r\n    private getHourFromTime(time :string) {\r\n        let hour: number = 0;\r\n        hour = Number(time.split(\":\")[0]);\r\n        if (time.indexOf(\"PM\") > -1 && hour < 12) {\r\n            hour += 12;\r\n        }\r\n        if (time.indexOf(\"AM\") > -1 && hour == 12) {\r\n            hour = 0;\r\n        }\r\n        return hour;\r\n    }\r\n    public groupDrsBySelectedTime(drs: DeliveryRequestViewModel[], drType: DeliveryRequestTypes = DeliveryRequestTypes.None) {\r\n        var response = [] as DelRequestByTimeModel[];\r\n        for (var i = 0; i < drs.length; i++) {\r\n            var timeIndex = -1;\r\n            const startHour: number = this.getHourFromTime(drs[i].ScheduleStartTime.toString());\r\n            const endHour: number = this.getHourFromTime(drs[i].ScheduleEndTime.toString());\r\n            if (drs[i].ScheduleStartTime && drs[i].ScheduleEndTime) { \r\n                timeIndex = response.findIndex(t => t.StartTime == startHour && t.EndTime == endHour);\r\n            }\r\n            if (timeIndex == -1) {\r\n                var timeDrs = new DelRequestByTimeModel();\r\n                timeDrs.StartTime = startHour;\r\n                timeDrs.EndTime = endHour;\r\n                timeDrs.DeliveryRequests.push(drs[i]);\r\n                response.push(timeDrs);\r\n            }\r\n            else {\r\n                response[timeIndex].DeliveryRequests.push(drs[i]);\r\n            }\r\n        }\r\n        response = sortBy(response, 'StartTime');\r\n        return response;\r\n    }\r\n\r\n    public getCarrierStatus(drs: DeliveryRequestViewModel[]) {\r\n        if (drs.every(t => t.CarrierStatus == 2)) {\r\n            return 2;\r\n        }\r\n        else if (drs.every(t => t.CarrierStatus == 3)) {\r\n            return 3;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public getMustGoRequests(drs: DelRequestsByJobModel[]) {\r\n        var mustGoRequests = drs.filter(t => t.DeliveryRequests.findIndex(t1 => t1.Priority == 1) != -1);\r\n        mustGoRequests.forEach(t => { t.DeliveryRequestType = DeliveryRequestTypes.MustGo; t.Priority = DeliveryReqPriority.MustGo; });\r\n        return mustGoRequests;\r\n    }\r\n\r\n    public getShouldGoRequests(drs: DelRequestsByJobModel[]) {\r\n        var shouldGoRequests = drs.filter(t => t.DeliveryRequests.findIndex(t1 => t1.Priority == 2) != -1\r\n            && t.DeliveryRequests.findIndex(t1 => t1.Priority == 1) == -1);\r\n        shouldGoRequests.forEach(t => { t.DeliveryRequestType = DeliveryRequestTypes.ShouldGo; t.Priority = DeliveryReqPriority.ShouldGo; });\r\n        return shouldGoRequests;\r\n    }\r\n\r\n    public getCouldGoRequests(drs: DelRequestsByJobModel[]) {\r\n        var couldGoRequests = drs.filter(t => t.DeliveryRequests.findIndex(t1 => t1.Priority == 3) != -1\r\n            && t.DeliveryRequests.findIndex(t1 => t1.Priority == 1) == -1\r\n            && t.DeliveryRequests.findIndex(t1 => t1.Priority == 2) == -1);\r\n        couldGoRequests.forEach(t => { t.DeliveryRequestType = DeliveryRequestTypes.CouldGo; t.Priority = DeliveryReqPriority.CouldGo; });\r\n        return couldGoRequests;\r\n    }\r\n\r\n    public getPriority(drs: DeliveryRequestViewModel[]) {\r\n        if (drs.some(t => t.Priority == 1)) {\r\n            return DeliveryReqPriority.MustGo;\r\n        }\r\n        else if (drs.some(t => t.Priority == 2) && !drs.some(t => t.Priority == 1)) {\r\n            return DeliveryReqPriority.ShouldGo;\r\n        }\r\n        else if (drs.some(t => t.Priority == 3) && !drs.some(t => t.Priority == 1) && !drs.some(t => t.Priority == 2)) {\r\n            return DeliveryReqPriority.CouldGo;\r\n        }\r\n        return DeliveryReqPriority.None;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { FuelSurchargeIndexViewModel, FuelSurchargeGridModel } from 'src/app/fuelsurcharge/models/CreateFuelSurcharge';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuelSurchargeService extends HandleError {\r\n    public onSelectedTabChanged: BehaviorSubject<any>;\r\n    public onSelectedFuelSurchargeId: BehaviorSubject<any>;\r\n\r\n    public getTableTypesUrl = \"/FuelSurcharge/GetTableTypes\";\r\n    public getSupplierCustomersUrl = \"/FuelSurcharge/GetSupplierCustomers\";   \r\n    public getSourceRegionsUrl = \"/FuelSurcharge/GetSourceRegionsAsync\";  \r\n    public getTerminalsAndBulkPlantsUrl = \"/FuelSurcharge/GetTerminalsAndBulkPlantsAsync?regionIds=\";\r\n    public getFuelSurchargeProductsUrl = '/FuelSurcharge/GetFuelSurchargeProductAsync?countryId=';\r\n    public getFuelSurchargePeriodUrl = '/FuelSurcharge/GetFuelSurchargePeriodAsync?countryId=';\r\n    public getFuelSurchargeAreaUrl = '/FuelSurcharge/GetFuelSurchargeAreaAsync?countryId=';\r\n    public getEIAIndexPriceUrl = '/FuelSurcharge/GetEIAIndexPrice?periodId=';\r\n    public getNRCIndexPriceUrl = '/FuelSurcharge/GetNRCIndexPrice?periodId=';\r\n    public getGenerateSurchargeTableUrl = '/FuelSurcharge/GetGenerateSurchargeTable?pRSV=';\r\n    public getViewFuelSurchargeSummaryUrl = '/FuelSurcharge/GetViewFuelSurchargeSummary';\r\n    public getSurchargeTableNewUrl = '/FuelSurcharge/GetSurchargeTableNew?fuelSurchargeIndexId=';\r\n    public createFuelSurchargeUrl = '/FuelSurcharge/CreateFuelSurchargeAsync';\r\n    public archiveFuelSurchargeTableUrl = '/FuelSurcharge/ArchiveFuelSurchargeTable';\r\n    public getHistoricalPriceUrl = '/FuelSurcharge/GetHistoricalPrice?fuelSurchargeIndexId=';\r\n    \r\n    public getFuelSurchargeTableUrl = '/FuelSurcharge/GetFuelSurchargeTableAsync?fuelSurchargeTableId=';\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onSelectedTabChanged = new BehaviorSubject(1);\r\n        this.onSelectedFuelSurchargeId = new BehaviorSubject(null);\r\n    }\r\n\r\n\r\n    getTableTypes(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<any>(this.getTableTypesUrl)\r\n            .pipe(catchError(this.handleError<any>('GetTableTypes', null)));\r\n    }\r\n\r\n    getSupplierCustomers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<any>(this.getSupplierCustomersUrl)\r\n            .pipe(catchError(this.handleError<any>('GetSupplierCustomers', null)));\r\n    }\r\n\r\n    getSourceRegions(input: SourceRegionInputModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.getSourceRegionsUrl, input)\r\n            .pipe(catchError(this.handleError<any>('getSourceRegions', null)));\r\n    }\r\n\r\n    getTerminalsAndBulkPlants(regionIds: string): Observable<DropdownItemExt[]> {       \r\n        return this.httpClient.get<any>(this.getTerminalsAndBulkPlantsUrl + regionIds)\r\n            .pipe(catchError(this.handleError<any>('GetTerminalsAndBulkPlants', null)));\r\n    }\r\n\r\n    getFuelSurchargeProducts(countryId: number): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<any>(this.getFuelSurchargeProductsUrl + countryId)\r\n            .pipe(catchError(this.handleError<any>('GetFuelSurchargeProduct', null)));\r\n    }\r\n\r\n    getFuelSurchargePeriod(countryId: number): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<any>(this.getFuelSurchargePeriodUrl + countryId)\r\n            .pipe(catchError(this.handleError<any>('getFuelSurchargePeriod', null)));\r\n    }\r\n\r\n    getFuelSurchargeArea(countryId: number): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<any>(this.getFuelSurchargeAreaUrl + countryId)\r\n            .pipe(catchError(this.handleError<any>('getFuelSurchargeArea', null)));\r\n    }\r\n\r\n    getEIAIndexPrice(periodId: number, productType: number, fetchDate: string, areaId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getEIAIndexPriceUrl + periodId + \"&productType=\" + productType + \"&fetchDate=\" + fetchDate + \"&areaId=\" + areaId)\r\n            .pipe(catchError(this.handleError<any>('getEIAIndexPrice', null)));\r\n    }\r\n\r\n    getNRCIndexPrice(periodId: number, productType: number, fetchDate: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getNRCIndexPriceUrl + periodId + \"&productType=\" + productType + \"&fetchDate=\" + fetchDate)\r\n            .pipe(catchError(this.handleError<any>('getNRCIndexPrice', null)));\r\n    }\r\n\r\n    createFuelSurcharge(fsm: FuelSurchargeIndexViewModel): Observable<FuelSurchargeIndexViewModel> {\r\n        return this.httpClient.post<FuelSurchargeIndexViewModel>(this.createFuelSurchargeUrl, fsm, httpOptions)\r\n            .pipe(catchError(this.handleError<FuelSurchargeIndexViewModel>('createFuelSurcharge', fsm)));\r\n    }\r\n\r\n    getGenerateSurchargeTable(pRSV: string, pREV: string, pRI: string, sI: string, fSSP: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getGenerateSurchargeTableUrl + pRSV + \"&pREV=\" + pREV + \"&pRI=\" + pRI + \"&sI=\" + sI + \"&fSSP=\" + fSSP)\r\n            .pipe(catchError(this.handleError<any>('getGenerateSurchargeTable', null)));\r\n    }\r\n\r\n    getFuelSurchargeGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.getViewFuelSurchargeSummaryUrl, filter)\r\n            .pipe(catchError(this.handleError<any>('getFuelSurchargeGridDetails', null)));\r\n    }\r\n\r\n    getSurchargeTableNew(fuelSurchargeIndexId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSurchargeTableNewUrl + fuelSurchargeIndexId)\r\n            .pipe(catchError(this.handleError<any>('getSurchargeTableNew', null)));\r\n    }\r\n\r\n    getHistoricalPrice(fuelSurchargeIndexId: number, forPeriod: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getHistoricalPriceUrl + fuelSurchargeIndexId + \"&forPeriod=\" + forPeriod)\r\n            .pipe(catchError(this.handleError<any>('getHistoricalPrice', null)));\r\n    }\r\n\r\n    archiveFuelSurchargeTable(fuelSurchargeIndexId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.archiveFuelSurchargeTableUrl, { fuelSurchargeIndexId: fuelSurchargeIndexId } )\r\n            .pipe(catchError(this.handleError<any>('archiveFuelSurchargeTable', null)));\r\n    }\r\n\r\n    getFuelSurchargeTable(fuelSurchargeTableId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelSurchargeTableUrl + fuelSurchargeTableId)\r\n            .pipe(catchError(this.handleError<any>('getFuelSurchargeTable', null)));\r\n    }\r\n\r\n    \r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { HandleError } from '../../app/errors/HandleError';\nimport { DropdownItem } from '../statelist.service';\nimport { ServiceArea, StateListViewModel } from './third-party-invitation.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvitationService extends HandleError {\n    private isCompanyNameExistUrl = \"Validation/IsCompanyNameExist\";\n    private getCountrylistUrl = \"Invitation/GetCountryList\";\n    private getStatesOfAllCountrieslistUrl = \"Invitation/GetStateList\";\n    private postInvitationRequestUrl = \"Invitation/Save\";\n    private getThirdPartyCompanyTypesUrl = \"Invitation/GetThirdPartyCompanyTypes\";\n    private getAllTrailerAssetTypesUrl = \"Invitation/GetAllTrailerAssetTypes\";\n    private getCitiesFromStatesUrl = \"Invitation/GetCityAndZipsByState\";\n    private getaddressByZipUrl = \"Validation/GetAddressByZip\";\n    private getCarrierOnboardingForBrandingUrl = \"Invitation/getCarrierOnboardingForBranding\";\n    \n    private GetPhoneTypesUrl = \"Invitation/GetPhoneTypes\";\n    private IsPhoneNumberValidUrl = \"/Validation/IsPhoneNumberValid\";\n    //private GetaddressbyLatLongUrl = \"https://maps.googleapis.com/maps/api/geocode/json\";\n    private isEmailExistUrl = \"Invitation/IsEmailExist\";\n    private GetCompaniesUrl = \"/Invitation/GetCompanies\";\n\n    constructor(private httpClient: HttpClient) { super(); }\n\n    public IsCompanyNameExist(IsNewCompany:any,CompanyName:any): Observable<any>{\n        return this.httpClient.get<any>(`${this.isCompanyNameExistUrl}?IsNewCompany=${IsNewCompany}&CompanyName=${CompanyName}`)\n            .pipe(catchError(this.handleError<any>('IsCompanyNameExist', null))); \n    }\n    public GetCountryList(): Observable<DropdownItem[]> {\n        return this.httpClient.get<any>(this.getCountrylistUrl)\n            .pipe(catchError(this.handleError<any>('GetCountryList', null)));\n    }\n    public GetStatesOfAllCountries(): Observable<StateListViewModel[]> {\n        return this.httpClient.get<any>(this.getStatesOfAllCountrieslistUrl)\n            .pipe(catchError(this.handleError<any>('GetStatesOfAllCountries', null)));\n    }\n    SaveInvitedRequest(sourcingRequestModel: any): Observable<any> {\n        return this.httpClient.post<any>(this.postInvitationRequestUrl, sourcingRequestModel)\n            .pipe(catchError(this.handleError<any>('SaveInvitedRequest', null)));\n    }\n    public GetThirdPartyCompanyTypes(): Observable<any> {\n        return this.httpClient.get<any>(this.getThirdPartyCompanyTypesUrl)\n            .pipe(catchError(this.handleError<any>('GetThirdPartyCompanyTypes', null)));\n    }\n    public GetAllTrailerAssetTypes(): Observable<any> {\n        return this.httpClient.get<any>(this.getAllTrailerAssetTypesUrl)\n            .pipe(catchError(this.handleError<any>('GetAllTrailerAssetTypes', null)));\n    }\n    public GetCitiesFromStates(stateIds: string): Observable<ServiceArea[]> {\n        return this.httpClient.get<any>(`${this.getCitiesFromStatesUrl}?stateIds=${stateIds}`)\n            .pipe(catchError(this.handleError<any>('GetCitiesFromStates', null)));\n    }\n    public GetAddressByZip(zipCode: string) {\n        return this.httpClient.get<any>(`${this.getaddressByZipUrl}?zipCode=${zipCode}`)\n            .pipe(catchError(this.handleError<any>('GetAddressByZip', null)));\n    }\n    public GetCarrierOnboardingForBranding(token: string) {\n        return this.httpClient.get<any>(`${this.getCarrierOnboardingForBrandingUrl}?token=${token}`)\n            .pipe(catchError(this.handleError<any>('GetCarrierOnboardingForBranding', null)));\n    }\n    public GetPhoneTypes(): Observable<any> {\n        return this.httpClient.get<any>(this.GetPhoneTypesUrl)\n            .pipe(catchError(this.handleError<any>('GetPhoneTypes', null)));\n    }\n    public IsPhoneNumberValid(phoneNumber: string): Observable<boolean> {\n        return this.httpClient.get<any>(`${this.IsPhoneNumberValidUrl}?phoneNumber='${phoneNumber}`)\n            .pipe(catchError(this.handleError<any>('IsPhoneNumberValid', null)));\n    }\n    public IsEmailExist(email: string): Observable<any> {\n        return this.httpClient.get<any>(`${this.isEmailExistUrl}?email=${email}`)\n            .pipe(catchError(this.handleError<any>('IsEmailExist', null)));\n    }\n    public GetCompanies(): Observable<DropdownItem[]> {\n        return this.httpClient.get<any>(this.GetCompaniesUrl)\n            .pipe(catchError(this.handleError<any>('GetCompanies', null)));\n    }\n}\n","import { PickupLocationType } from 'src/app/app.enum';\r\n\r\nexport class LFRecordGridModel {\r\n    public LiftFileRecordId: number;//refers Id of LiftFileValidationRecords table\r\n    public bol: string;\r\n    public TerminalName: string; // Represents terminal code as received in Parkland API Json\r\n    public Terminals: string;\r\n    public correctedQuantity: number;\r\n    public RecordDate: string;\r\n    public statusChangeDate: string = \"\";\r\n    public Status: string;\r\n    public TerminalItemCode: string;\r\n    public ProductType: string;\r\n    public LoadDate: string;\r\n    public InvFtlDetailId: number;\r\n    public InvId: number;\r\n    public LiftTicketNumber: string;\r\n    public Reason: string;\r\n    public CarrierID: string;\r\n    public FileName: string;\r\n    public CallId: string;\r\n    public Terminal: string //== mapped terminal/Bulk plant as per terminal mapping.\r\n    public CarrierName: string;\r\n    public recordStatus: string; // string denoting current status of records like \"No Match\" ,\"Active Exception\"\"\r\n    public IsFromScratchReport: boolean;\r\n    public ProductTypeId: number;\r\n    public CIN: string;\r\n    public GrossQuantity: number;\r\n    public ModifiedDate: string;\r\n    public Username: string;\r\n    public ReasonCode: string;\r\n    public ReasonCategory: string;\r\n    public TimeToBol: string;\r\n}\r\n\r\nexport class LFBolEditModel {\r\n    constructor() {\r\n        this.LiftRecord = new LFRecordGridModel();\r\n    }\r\n    public LiftRecord: LFRecordGridModel;\r\n    public LiftDate: string;\r\n    public GrossQuantity: number;\r\n    public NetQuantity: number;\r\n    public BadgeNumber: string;\r\n    public FuelTypeId: number;\r\n    public TerminalId: number;\r\n    public Notes: string;\r\n    public BolNumber: string;\r\n    public InvoiceFtlDetailId: number;\r\n    //public int InvoiceFtlDetailIdFromList { get; set; }\r\n    public InvoiceFtlDetailsList: DropDownItem[];\r\n    public OrderId: number;\r\n    public DisplayTerminalName: string;\r\n    public PricingSourceId: number;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsBulkPlantLift: boolean;\r\n    public DisplayLiftDate: string;\r\n    public SelectedTerminal: DropDownItem;\r\n    public TerminalList: DropDownItem[];\r\n    public SelectedFuelType: DropDownItem;\r\n    public FuelTypeList: DropDownItem[];\r\n    public SelectedInvoiceFtlDetailId: DropDownItem;\r\n}\r\n\r\nexport class DropDownItem {\r\n    Id: number;\r\n    Name: string;\r\n    Code:string;\r\n    DisplayName:string;\r\n}\r\n\r\nexport class LFValidationGridViewModel {\r\n    CallId?: number; // Refers LF DETAILS table Id\r\n    TotalRecordCount?: number;\r\n    MatchedRecordCount?: number;\r\n    ActiveExceptionRecordCount: number;\r\n    NoMatchRecordCount?: number;\r\n    RecordDate?: string; //REFERES AddedDate column in LF DETAILS TABLE\r\n    IgnoredMatchRecordCount?: number;\r\n    UnmatchedRecordCount?: number;\r\n    UpdatedOn?: string;\r\n    PendingMatchCount?: number;\r\n    DuplicateRecordCount?: number;\r\n    PartialMatchRecordCount?: number;\r\n    CarrierName?: string;\r\n    CarrierID?: string;\r\n    ForcedIgnoredMatchRecordCount?: number;\r\n}\r\n\r\nexport interface LFRecordsGridViewModel {\r\n    LiftFileRecordId: number; //refers Id of LiftFileValidationRecords column\r\n    bol: string;\r\n    TerminalName: string; // Represents terminal code as received in Parkland API Json\r\n    correctedQuantity: number;\r\n    // validatedQuantity: number;\r\n    RecordDate: string;\r\n    statusChangeDate: string;\r\n    Status: number;\r\n    TerminalItemCode: string;\r\n    ProductType: string;\r\n    LoadDate: string;\r\n    InvFtlDetailId: number | null;\r\n    // DisplayTerminalName: string;\r\n    InvId: number | null;\r\n    LiftTicketNumber: string;\r\n    Reason: string;\r\n    CarrierID: string;\r\n    FileName: string;\r\n    CallId: number;\r\n    recordStatus: string; // used in searchby bol filename grid\r\n    Terminal: string; //== mapped terminal/Bulk plant as per terminal mapping.\r\n    CarrierName: string;\r\n    IsInvoiceFtlDetailListRequired: boolean;\r\n    IsRecordPushedToExternalApi: boolean;\r\n    NetQuantity: number;\r\n    GrossQuantity: number;\r\n    BadgeNumber: string;\r\n    IsFromScratchReport: boolean;\r\n    LfvValidationParameters: LFVValidationParameters;\r\n    IsAdminUser: boolean;\r\n    CIN: string;\r\n    Username: string;\r\n    ModifiedDate: string;\r\n    ReasonCode: string;\r\n    ReasonCategory: string;\r\n    TimeToBol: string;\r\n}\r\n\r\n//LiftFileRecordsWithMissingTFXDeliveryDetails\r\nexport class SupplierBOLReport {\r\n    public CallId: number;\r\n    public BOL: string;\r\n    public TerminalCode: string; //Represents terminal code as received in Parkland API Json\r\n    public CorrectedQuanity: number;\r\n    public TerminalItemCode: string;\r\n    public LoadDate: string;\r\n    public RecordStatus: string;\r\n    public Reason: string;\r\n    public CarrierID: string;\r\n    public RecordDate: string;\r\n    public CarrierName: string;\r\n    public Terminal: string;\r\n    public FileName: string;\r\n    public Status: number;\r\n    public ProductType: string;\r\n    public ReasonCode: string;\r\n    public ReasonCategory: string;\r\n}\r\n\r\n//TFXDeliveryDetailsWithMissingLiftFileRecords\r\nexport class CarrierBOLReport {\r\n    public BOL: string;\r\n    public TerminalName: string;\r\n    public LoadDate: string;\r\n    public NetQuantity: number;\r\n    public GrossQuantity: number;\r\n    public BadgeNumber: string;\r\n    public CarrierName: string;\r\n    public CarrierID: string;\r\n    public FuelTypeName: string;\r\n}\r\n\r\nexport class LFRecordsGridExport {  \r\n    bol: string;\r\n    TerminalName: string;\r\n    Terminals: string;\r\n    correctedQuantity: number;\r\n     RecordDate: string;\r\n    TerminalItemCode: string;\r\n    ProductType: string;\r\n    LoadDate: string;\r\n    Reason: string;\r\n    CarrierID: string;\r\n    CarrierName: string;\r\n    Username: string;\r\n    ModifiedDate: string;\r\n    ReasonCode: string;\r\n    ReasonCategory: string;\r\n    LFVResolutionTime: string;\r\n    TimeToBol: string;\r\n}\r\n\r\nexport class LFVValidationParameters {\r\n    public IsTerminalCodeReq: boolean = true;\r\n    public IsBolReq: boolean = true;\r\n    public IsCINReq: boolean;\r\n    public IsCarrierNameReq: boolean;\r\n    public IsLoadDateReq: boolean;\r\n    public IsTermItemCodeReq: boolean;\r\n    public IsCorrectedQtyRes: boolean;\r\n    public IsGrossReq: boolean;\r\n    public IsCorrectedQtyOrGrossReq: boolean;\r\n}","import { HandleError } from 'src/app/errors/HandleError';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService extends HandleError{\n    private GetTerminalsUrl = '/Location/GetTerminals';\n    private GetBulkPlantsUrl = '/Location/GetBulkPlants?countryId=';\n    private PostBulkPlantLocationUrl = '/Location/SaveBulkPlantLocation';\n\n    constructor(private httpClient: HttpClient) { super(); }\n\n    getTerminals(requestModel: any): Observable<any> {\n        return this.httpClient.post<any>(this.GetTerminalsUrl, requestModel)\n            .pipe(catchError(this.handleError<any>('getTerminals', null)));\n    }\n\n    GetBulkPlants(countryId: number): Observable<any> {\n        return this.httpClient.get<any>(this.GetBulkPlantsUrl + countryId)\n            .pipe(catchError(this.handleError<any>('GetBulkPlants', null)));\n    }\n\n    PostBulkPlantLocation(data: any): Observable<any> {\n        return this.httpClient.post<any>(this.PostBulkPlantLocationUrl, data)\n            .pipe(catchError(this.handleError<any>('PostBulkPlantLocation', null)));\n    }\n}\n","\r\nexport class MyLocalStorage {\r\n\r\n    // Schedule Builder filter Keys---------------------------------\r\n    public static DSB_DATE_KEY = \"date\";\r\n    public static DSB_REGION_KEY = \"regionId\";\r\n    public static DSB_OBJECTFILTER_KEY = \"objectFilter\";\r\n    public static DSB_DATEFILTER_KEY = \"dateFilter\";\r\n    public static DSB_WINDOWMODE_KEY = \"windowMode\";\r\n    public static DSB_TOGGLEREQUESTMODE_KEY = \"toggleRequestMode\";\r\n    public static DSB_READONLY_KEY = \"readOnlyMode\";\r\n    public static DSB_FILTER_KEY = \"dsbviewFilter\";\r\n    // Wally Boards Filter Keys-------------------------------------\r\n    public static WBF_REGION_KEY = \"wbf_regionId\";\r\n    public static WBF_CUSTOMER_KEY = \"wbf_customerId\";\r\n    public static WBF_SEARCHEDKEYWORD_KEY = \"wbf_searchedKeyword\";\r\n    public static WBF_SELECTEDSTATES_KEY = \"wbf_selectedStates\";\r\n    public static WBF_LOCATION_KEY = \"wbf_selectedLocations\";\r\n    public static WBF_SELECTEDPRIORY_KEY = \"wbf_selectedPriority\";\r\n    public static WBF_SELECTEDSUPPLIER_KEY = \"wbf_selectedSupplier\";\r\n    public static WBF_SELECTEDCARRIER_KEY = \"wbf_selectedCarrier\";\r\n    public static WBF_SELECTEDDISPACHER_KEY = \"wbf_selectedDispacher\";\r\n    public static WBF_FROMDATE_KEY = \"wbf_fromDate\";\r\n    public static WBF_TODATE_KEY = \"wbf_toDate\";\r\n    \r\n    public static setData(key: string, value: any): void {\r\n        if (!value) {\r\n            localStorage.removeItem(key);\r\n        } else {\r\n            localStorage.setItem(key, JSON.stringify(value));\r\n        }\r\n    }\r\n\r\n    public static getData(key: string): any {\r\n        let value = localStorage.getItem(key);\r\n        if (value) {\r\n            value = JSON.parse(value);\r\n        }\r\n        if (value == 'null') {\r\n            value = null;\r\n        }\r\n        return value || '';\r\n    }\r\n}"],"sourceRoot":"webpack:///"}