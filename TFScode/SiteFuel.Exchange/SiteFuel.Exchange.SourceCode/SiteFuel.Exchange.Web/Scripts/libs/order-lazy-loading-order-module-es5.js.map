{"version":3,"sources":["webpack:///src/app/order/create-blend-group/create-blend-group.component.ts","webpack:///src/app/order/create-blend-group/create-blend-group.component.html","webpack:///src/app/order/create-same-dest-group/create-same-dest-group.component.ts","webpack:///src/app/order/create-same-dest-group/create-same-dest-group.component.html","webpack:///src/app/order/filter-group/filter-group.component.ts","webpack:///src/app/order/filter-group/filter-group.component.html","webpack:///src/app/order/lazy-loading/order-routing.module.ts","webpack:///src/app/order/lazy-loading/order.module.ts","webpack:///src/app/order/models/OrderDetail.ts","webpack:///src/app/order/models/ViewOrderGroupDdlModel.ts","webpack:///src/app/order/services/order.service.ts","webpack:///src/app/order/services/shared.service.ts","webpack:///src/app/order/services/viewordergroup.service.ts","webpack:///src/app/order/term-pricing-contract.component.ts","webpack:///src/app/order/term-pricing-contract.component.html","webpack:///src/app/order/view-order-group/view-order-group.component.ts","webpack:///src/app/order/view-order-group/view-order-group.component.html"],"names":["value","CreateBlendGroupComponent","fb","orderService","viewGroupService","FuelTypeList","SelectedFuelTypes","CustomerList","JobList","IsLoading","configSettings","FuelDdlSettings","SingleDdlSettings","orderList","finalSubmitData","groupId","isEdit","onSubmitGroupData","isDropAllowed","dragData","BlendGroupForm","group","OrderBlendedGroups","array","CustomerPoNumber","control","displayKey","search","singleSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","closeDropDownOnSelection","IsSupplierCompany","getCustomerList","subscribe","data","getSupplierList","currentGroup","id","clearBlendGroupForm","GetGroupDetails","get","SelectedJob","SelectedCustomer","map","x","Id","model","GroupId","OrderId","TfxPoNumber","FuelType","Quantity","DisplayPrice","BlendPercentage","required","pattern","order","setSelectedOrders","SetDefaultBlendPercentage","push","buildProduct","filter","item","loadOrders","Customer","Job","selectedFuelTypeList","RemoveOrder","Name","RemoveGroups","i","removeAt","selectedFuelTypes","controls","fuelTypeIds","t","indexOf","loadedFuelType","fuelTypeName","obj","_customerId","_jobId","_fuelTypeIds","getFilteredOrdersList","existingOrderList","ele","getFuelTypesList","_FuelType","setValue","totalFuelTypes","length","equalPercent","toFixed","forEach","customer","clear","getCommonJobList","job","loadFuelType","blendValue","parseFloat","sum","msgerror","undefined","setErrors","OrderList","GroupPoNumber","BuyerCompanyId","currentUserCompanyId","SupplierCompanyId","JobId","GroupType","Blend","valid","postEditGroup","StatusCode","msgsuccess","StatusMessage","closeSlidePanel","emit","postCreateGroup","getBlendGroupDetails","Jobs","FuelTypes","FilteredOrders","GroupDetails","getCustomerFromSupplier","_fuelTypes","Order","orderDetail","orderToMove","e","OnCustomerDeSelect","OnCustomerSelect","OnJobSelect","OnJobDeSelect","onFuelSelect","onFuelDeSelect","onItemDrop","selector","templateUrl","styleUrls","CreateSameDestGroupComponent","orderListSelected","SameDestGroupForm","clearDestGroupForm","orderData","find","o","IsOrderSelected","items","RemoveOrders","MultiProducts","onAllFuelDeSelect","FilterGroupComponent","viewOrderGroupService","SelectedCompany","SelectedGroupType","SelectedFuelGroup","SelectedState","IsMultiProduct","IsTier","IsBlend","GroupTypeList","CompanyList","FuelGroupList","StateList","GroupTypeDdlSettings","CompanyDdlSettings","JobDdlSettings","FuelGroupDdlSettings","StateDdlSettings","onViewOrderGroupResponse","GroupTypeId","filterGroupForm","ProductCategory","State","CompanyId","FuelGroupId","StateId","SearchText","fillDDLByGroup","GroupTypes","Companies","ProductCategories","States","showHideControlsByGroupType","onOrderGroupFilterSubmit","groupTypeId","groupType","resetForm","target","getOrderGroupDetails","searchText","text","company","fuelGroup","ProductCategoryId","state","OnGroupTypeSelect","OnCompanySelect","OnCompanyDeSelect","onSearch","routeOrder","path","component","OrderRoutingModule","forChild","imports","exports","OrderModule","forRoot","declarations","OrderDetailModel","CurrentUser","OrderGroupViewModel","ViewOrderGroupDdlModel","OrderService","httpClient","getCustomerListUrl","getJobListUrl","getCommonJobListUrl","postCreateGroupUrl","postEditGroupUrl","getFilteredOrders","getFuelTypes","getCurrentUserUrl","getSupplierListUrl","getGroupDetailsUrl","getBlendedGroupDetailstUrl","pipe","handleError","customerId","jobId","tfxFuelTypeIds","post","supplierId","fuelGroupType","getJobListByFuelGroupUrl","buyerCompanyId","supplierCompanyId","getOrderListUrl","a","b","c","d","groupModel","providedIn","SharedService","selectedGroupId","asObservable","next","ViewOrderGroupService","getOrderGroupAllDdlUrl","viewOrderGroupDetailsUrl","getDeleteOrderGroupUrl","viewOrderGroupFilterModel","TermPricingContractComponent","SupplierList","SelectedSupplier","DdlSettings","MinStartDate","Date","MaxStartDate","DefaultTier","MinVolume","MaxVolume","IsBuyerCompany","emptyOrder","DisplayDate","format","NextRenewalDate","add","startOf","setFullYear","getFullYear","TermPricingForm","ProductType","StartDate","RenewalFrequency","RenewalPeriod","RenewalCount","Integer","currentUserCompanyName","patchValue","GetCustomerList","GetSupplierList","addNewTier","getDefaultGroupDetail","_groupId","getGroupDetails","response","OrderGroupModel","initFormData","Orders","OnSupplierSelect","productType","selectedsupplier","formOrderList","getJobListByFuelGroupType","supplier","selectedcustomer","getOrderList","validateTierControls","window","location","href","markAllAsTouched","invalidControls","findInvalidControlsRecursive","formToInvestigate","recursiveFunc","form","Object","keys","field","invalid","lastMaxValue","parseInt","tierForm","buildTier","prodArray","tier","index","deletedOrder","_tiers","splice","event","tierList","existingOrderinTier","indexOfSameOrderinAnotherTier","findIndex","element","drop","name","dirty","touched","errors","min","date","controlName","minVolume","maxVolume","notEquivalent","maxVolumeCtrl","minVolumeCtrl","OnFuelGroupSelect","OnFuelGroupDeSelect","onSubmit","onItemDropOrder","$event","getNextRenewalDate","ViewOrderGroupComponent","sharedService","SelectedButton","ModalText","ModalTextData","ModalEditTextData","ShowCount","TotalGroupCount","SelectedOrderGroupIdToDelete","viewOrderGroupForm","OrderGroupDetails","_SelectedButton","BlendComponent","SameDestComponent","setGroupId","groups","orderGroupId","deleteOrderGroup","OrderGroupId","ButtonPressed","SetOrderGroupIdToDelete"],"mappings":"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","file":"order-lazy-loading-order-module-es5.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { OrderGroupDetails } from '../models/models';\r\nimport { OrderService } from '../services/order.service';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { OrderGroupType } from 'src/app/app.enum';\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var IsSupplierCompany: boolean;\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n\tselector: 'app-create-blend-group',\r\n\ttemplateUrl: './create-blend-group.component.html',\r\n\tstyleUrls: ['./create-blend-group.component.css']\r\n})\r\n\r\nexport class CreateBlendGroupComponent implements OnInit {\r\n\r\n\tpublic BlendGroupForm: FormGroup;\r\n\r\n\tpublic FuelTypeList = [];\r\n\tpublic SelectedFuelTypes = [];\r\n\tpublic CustomerList = [];\r\n\tpublic SelectedCustomer: any;\r\n\tpublic JobList = [];\r\n\tpublic SelectedJob: any;\r\n\tpublic IsLoading: boolean = false;\r\n\tpublic configSettings = {};\r\n\tpublic FuelDdlSettings = {};\r\n\tpublic SingleDdlSettings = {};\r\n\tpublic orderList: OrderGroupDetails[] = [];\r\n\tpublic finalSubmitData: any = {};\r\n\tpublic groupId: number = 0;\r\n\tpublic isEdit: boolean = false;\r\n\r\n\r\n\t@Output() onSubmitGroupData: EventEmitter<any> = new EventEmitter<any>();\r\n\tconstructor(private fb: FormBuilder, private orderService: OrderService, private viewGroupService: SharedService) {\r\n\t\tthis.BlendGroupForm = this.fb.group({\r\n\t\t\tOrderBlendedGroups: this.fb.array([]),\r\n\t\t\tCustomerPoNumber: this.fb.control('')\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.configSettings = {\r\n\t\t\tdisplayKey: 'Name',\r\n\t\t\tsearch: true,\r\n\t\t}\r\n\t\tthis.FuelDdlSettings = {\r\n\t\t\tsingleSelection: false,\r\n\t\t\tidField: 'Id',\r\n\t\t\ttextField: 'Name',\r\n\t\t\tenableCheckAll: false,\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\titemsShowLimit: 1,\r\n\t\t\tallowSearchFilter: true,\r\n\t\t\tcloseDropDownOnSelection: true\r\n\t\t};\r\n\t\tthis.SingleDdlSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\tidField: 'Id',\r\n\t\t\ttextField: 'Name',\r\n\t\t\tenableCheckAll: false,\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\titemsShowLimit: 1,\r\n\t\t\tallowSearchFilter: true\r\n\t\t};\r\n\t\tif (IsSupplierCompany) {\r\n\t\t\tthis.orderService.getCustomerList().subscribe(data => this.CustomerList = data);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.orderService.getSupplierList().subscribe(data => this.CustomerList = data);\r\n\t\t}\r\n\r\n\t\tthis.viewGroupService.currentGroup.subscribe(id => {\r\n\t\t\tthis.groupId = id;\r\n\t\t\tif (id > 0) {\r\n\t\t\t\tthis.clearBlendGroupForm();\r\n\t\t\t\tthis.GetGroupDetails();\r\n\t\t\t\tthis.isEdit = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t}\r\n\tget OrderBlendedGroups(): FormArray {\r\n\t\treturn this.BlendGroupForm.get(\"OrderBlendedGroups\") as FormArray\r\n\t}\r\n\tget CustomerPoNumber(): FormControl {\r\n\t\treturn this.BlendGroupForm.get(\"CustomerPoNumber\") as FormControl\r\n\t}\r\n\tget Job(): DropdownItem {\r\n\t\treturn this.SelectedJob[0];\r\n\t}\r\n\tget Customer(): DropdownItem {\r\n\t\treturn this.SelectedCustomer[0];\r\n\t}\r\n\tget selectedFuelTypeList(): number[] {\r\n\t\treturn this.SelectedFuelTypes.map(x => x.Id);\r\n\t}\r\n\tisDropAllowed = (dragData: any) => {\r\n\t\treturn dragData > 500;\r\n\t}\r\n\r\n\tbuildProduct(model: OrderGroupDetails) {\r\n\t\treturn this.fb.group({\r\n\t\t\tGroupId: this.fb.control(model.GroupId),\r\n\t\t\tOrderId: this.fb.control(model.OrderId),\r\n\t\t\tTfxPoNumber: this.fb.control(model.TfxPoNumber),\r\n\t\t\tFuelType: this.fb.control(model.FuelType),\r\n\t\t\tQuantity: this.fb.control(model.Quantity),\r\n\t\t\tDisplayPrice: this.fb.control(model.DisplayPrice),\r\n\t\t\tBlendPercentage: this.fb.control(model.BlendPercentage, [Validators.required, Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),\r\n\t\t});\r\n\t}\r\n\tonItemDrop(order: any) {\r\n\t\t//this.usedOrderGroupDetails.push(order.dragData);\r\n\t\t//this.OrderBlendedGroups.patchValue(this.usedOrderGroupDetails);\r\n\t\tthis.setSelectedOrders(order.dragData);\r\n\t\tthis.SetDefaultBlendPercentage();\r\n\t}\r\n\r\n\tsetSelectedOrders(order: any) {\r\n\t\tthis.OrderBlendedGroups.push(this.buildProduct(order));\r\n\t\tthis.orderList = this.orderList.filter(x => x.FuelType !== order.FuelType);\r\n\t}\r\n\tpublic onFuelSelect(item: any): void {\r\n\t\tthis.loadOrders(this.Customer.Id, this.Job.Id, this.selectedFuelTypeList);\r\n\t}\r\n\r\n\tpublic onFuelDeSelect(item: any): void {\r\n\t\tthis.RemoveOrder(item.Name);\r\n\t\tthis.RemoveGroups(item.Name);\r\n\t}\r\n\r\n\tremoveBlend(i: number) {\r\n\t\tthis.OrderBlendedGroups.removeAt(i);\r\n\r\n\t\tvar selectedFuelTypes = this.OrderBlendedGroups.controls.map(x => { return x.get('FuelType').value });\r\n\t\tvar fuelTypeIds = this.FuelTypeList.map(t => {\r\n\t\t\tif (selectedFuelTypes.indexOf(t.Name) > -1)\r\n\t\t\t\treturn t.Id;\r\n\t\t});\r\n\t\tvar loadedFuelType = this.selectedFuelTypeList.filter(x => fuelTypeIds.indexOf(x) == -1);\r\n\t\tthis.SetDefaultBlendPercentage();\r\n\t\tthis.loadOrders(this.Customer.Id, this.Job.Id, loadedFuelType);\r\n\t}\r\n\r\n\tRemoveOrder(fuelTypeName: string) {\r\n\t\tthis.orderList = this.orderList.filter(obj => obj.FuelType !== fuelTypeName);\r\n\t}\r\n\r\n\tloadOrders(_customerId: number, _jobId: number, _fuelTypeIds: number[]): void {\r\n\t\tthis.orderService.getFilteredOrdersList(_customerId, _jobId, _fuelTypeIds, this.groupId).subscribe((data: OrderGroupDetails[]) => {\r\n\t\t\tvar existingOrderList = this.OrderBlendedGroups.controls.map(x => { return x.get('OrderId').value });\r\n\t\t\tthis.orderList = data.filter(ele => existingOrderList.indexOf(ele.OrderId) == -1);\r\n\t\t});\r\n\t}\r\n\r\n\tloadFuelType(_customerId: number, _jobId: number): void {\r\n\t\tthis.orderService.getFuelTypesList(_customerId, _jobId).subscribe((data: DropdownItem[]) => {\r\n\t\t\tthis.FuelTypeList = data;\r\n\t\t});\r\n\t}\r\n\r\n\tRemoveGroups(_FuelType: string): void {\r\n\t\t//this.usedOrderGroupDetails = this.usedOrderGroupDetails.filter(x => x.FuelType !== _FuelType);\r\n\t\tthis.OrderBlendedGroups.setValue(this.OrderBlendedGroups.controls.filter(group => group.get('FuelType').value !== _FuelType));\r\n\t\tthis.SetDefaultBlendPercentage();\r\n\t}\r\n\r\n\tSetDefaultBlendPercentage(): void {\r\n\t\tvar totalFuelTypes = this.OrderBlendedGroups.length;\r\n\t\tvar equalPercent = (100 / totalFuelTypes).toFixed(2);\r\n\t\tthis.OrderBlendedGroups.controls.forEach((x: FormGroup) => { x.get('BlendPercentage').setValue(equalPercent) });\r\n\t}\r\n\tpublic OnCustomerSelect(customer: any) {\r\n\t\tthis.SelectedJob = '';\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t\tthis.orderService.getCommonJobList(customer.Id).subscribe(data => this.JobList = data);\r\n\t}\r\n\r\n\tpublic OnCustomerDeSelect(customer: any) {\r\n\t\tthis.SelectedCustomer = '';\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = '';\r\n\t\tthis.FuelTypeList = [];\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.orderList = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t}\r\n\r\n\tpublic OnJobSelect(job: any) {\r\n\t\tthis.orderList = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.loadFuelType(this.Customer.Id, job.Id);\r\n\t}\r\n\r\n\tpublic OnJobDeSelect(job: any) {\r\n\t\tthis.FuelTypeList = [];\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.orderList = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t}\r\n\r\n\tpublic OnSubmit(): void {\r\n\t\tvar blendValue: number[] = this.OrderBlendedGroups.controls.map(x => { return parseFloat(x.get('BlendPercentage').value) });\r\n\t\tvar sum = 0;\r\n\t\tblendValue.forEach(x => sum += x);\r\n\t\tif (sum != 100) {\r\n\t\t\tDeclarations.msgerror('Total percentage sum should be 100', undefined, undefined);\r\n\t\t\tthis.BlendGroupForm.setErrors({ 'invalid': true });\r\n\t\t}\r\n\t\tthis.finalSubmitData = {\r\n\t\t\tId: this.isEdit ? this.groupId : 0,\r\n\t\t\tOrderList: this.OrderBlendedGroups.value,\r\n\t\t\tGroupPoNumber: this.CustomerPoNumber.value,\r\n\t\t\tBuyerCompanyId: IsSupplierCompany ? this.Customer.Id : currentUserCompanyId,\r\n\t\t\tSupplierCompanyId: IsSupplierCompany ? currentUserCompanyId : this.Customer.Id,\r\n\t\t\tJobId: this.Job.Id,\r\n\t\t\tGroupType: OrderGroupType.Blend\r\n\t\t};\r\n\r\n\t\tif (this.BlendGroupForm.valid) {\r\n\t\t\tthis.IsLoading = true;\r\n\t\t\tif (this.isEdit) {\r\n\t\t\t\tthis.orderService.postEditGroup(this.finalSubmitData).subscribe(data => {\r\n\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\tif (data.StatusCode == 0) {\r\n\t\t\t\t\t\tDeclarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t\tthis.clearBlendGroupForm();\r\n\t\t\t\t\t\tcloseSlidePanel();\r\n\t\t\t\t\t\tthis.onSubmitGroupData.emit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tDeclarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.orderService.postCreateGroup(this.finalSubmitData).subscribe(data => {\r\n\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\tif (data.StatusCode == 0) {\r\n\t\t\t\t\t\tDeclarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t\tcloseSlidePanel();\r\n\t\t\t\t\t\tthis.onSubmitGroupData.emit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tDeclarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tGetGroupDetails(): void {\r\n\t\tthis.orderService.getBlendGroupDetails(this.groupId).subscribe(group => {\r\n\t\t\tthis.JobList = group.Jobs;\r\n\t\t\tthis.FuelTypeList = group.FuelTypes;\r\n\t\t\tthis.orderList = group.FilteredOrders;\r\n\t\t\tthis.CustomerPoNumber.setValue(group.GroupDetails.GroupPoNumber);\r\n\t\t\tthis.SelectedCustomer = IsSupplierCompany ? this.getCustomerFromSupplier(group.GroupDetails.BuyerCompanyId) : this.getCustomerFromSupplier(group.GroupDetails.SupplierCompanyId);\r\n\t\t\tthis.SelectedJob = this.JobList.filter(ele => ele.Id == group.GroupDetails.JobId);\r\n\t\t\tvar _fuelTypes = group.GroupDetails.OrderList.map(x => x.Order.FuelType);\r\n\t\t\tthis.SelectedFuelTypes = this.FuelTypeList.filter(ele => _fuelTypes.indexOf(ele.Name) > -1);\r\n\t\t\tfor (var i = 0; i < group.GroupDetails.OrderList.length; i++) {\r\n\t\t\t\tvar orderDetail: OrderGroupDetails = group.GroupDetails.OrderList[i];\r\n\t\t\t\tvar orderToMove: OrderGroupDetails[] = this.orderList.filter(t => t.OrderId == orderDetail.OrderId);\r\n\t\t\t\tthis.setSelectedOrders(orderToMove[0]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetCustomerFromSupplier(id: number) {\r\n\t\treturn this.CustomerList.filter(e => e.Id == id);\r\n\t}\r\n\r\n\tpublic clearBlendGroupForm(): void {\r\n\t\tif (this.SelectedCustomer != null) {\r\n\t\t\tthis.OnCustomerDeSelect(this.SelectedCustomer);\r\n\t\t}\r\n\t\tthis.CustomerPoNumber.setValue(\"\");\r\n\t\tthis.isEdit = false;\r\n\t}\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"form-group col-sm-3\">\r\n        <!--<ngx-select-dropdown (change)=\"OnCustomerSelect($event)\" [multiple]=\"false\" [config]=\"configSettings\" [options]=\"CustomerList\"></ngx-select-dropdown>-->\r\n        <label>Customer</label>\r\n        <ng-multiselect-dropdown [data]=\"CustomerList\" [(ngModel)]=\"SelectedCustomer\" [settings]=\"SingleDdlSettings\" (onSelect)=\"OnCustomerSelect($event)\" (onDeSelect)=\"OnCustomerDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-4\">\r\n        <label>Job</label>\r\n        <ng-multiselect-dropdown [data]=\"JobList\" [(ngModel)]=\"SelectedJob\" [settings]=\"SingleDdlSettings\" (onSelect)=\"OnJobSelect($event)\" (onDeSelect)=\"OnJobDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-3\">\r\n        <label>Fuel Type</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelTypes\" [settings]=\"FuelDdlSettings\" [data]=\"FuelTypeList\" \r\n                                 (onSelect)=\"onFuelSelect($event)\" (onDeSelect)=\"onFuelDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n</div>\r\n<div [formGroup]=\"BlendGroupForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\">\r\n            <div class=\"group-height\">\r\n                <div class=\"clearboth border-dash-dark radius-5\" droppable (onDrop)=\"onItemDrop($event)\">\r\n                    <div class=\"pa10 ma15 text-center\" *ngIf=\"BlendGroupForm.get('OrderBlendedGroups')['controls'].length == 0\">\r\n                        <i class=\"far fa-hand-rock fs25\"></i>\r\n                        <h3 class=\"fs16 ma5 pa0 color-orange\">Please drag order here to blend fuel types</h3>\r\n                    </div>\r\n                    <div formArrayName=\"OrderBlendedGroups\">\r\n                        <div class=\"radius-5 pl10 pr10 ma15\" *ngFor=\"let group of BlendGroupForm.get('OrderBlendedGroups')['controls']; let i = index;\">\r\n                            <div class=\"row\" [formGroupName]=\"i\">\r\n                                <div class=\"well mb0 col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <h3 class=\"mt0 mb0\">{{group.get('TfxPoNumber').value}}<input type=\"hidden\" formControlName=\"OrderId\" value=\"{{group.get('OrderId').value}}\" /></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row mt10\">\r\n                                        <div class=\"col-sm-4 pt10\">\r\n                                            <span>{{group.get('FuelType').value}}</span>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"BlendPercentage\" value=\"{{group.get('BlendPercentage').value}}\">\r\n                                                <span class=\"input-group-addon\">%</span>\r\n                                            </div>\r\n                                            <div class=\"help-block color-maroon\" *ngIf=\"group.get('BlendPercentage').errors && (group.get('BlendPercentage').touched || group.get('BlendPercentage').dirty)\">\r\n                                                <span *ngIf=\"group.get('BlendPercentage').errors.required\">\r\n                                                    Required.\r\n                                                </span>\r\n                                                <span *ngIf=\"group.get('BlendPercentage').errors.pattern\">\r\n                                                    Invalid.\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-2 pt10\">\r\n                                            <a class=\"color-maroon pull-right\" (click)=\"removeBlend(i)\"><i class=\"fa fa-trash-alt\"></i></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"i + 1 < BlendGroupForm.get('OrderBlendedGroups')['controls'].length\" class=\"text-center col-sm-12\"><i class=\"fas fa-plus fs21 mt15\"></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <div class=\"group-height\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\" *ngFor=\"let order of orderList\" draggable [dragData]=\"order\">\r\n                        <div class=\"well\">\r\n                            <h3 class=\"mt0 mb0\">{{order.TfxPoNumber}}</h3>\r\n                            <span>{{order.FuelType}}</span><br>\r\n                            <span>{{order.DisplayPrice}}</span><br>\r\n                            <span>{{order.Quantity}}</span><br>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n                <label for=\"CustomerPoNumber\">Customer Po#</label>\r\n                <input class=\"form-control\" type=\"text\" formControlName=\"CustomerPoNumber\" />\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn btn-lg\" (click)=\"clearBlendGroupForm()\" onclick=\"closeSlidePanel()\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"!isEdit\" class=\"btn btn-primary btn-lg\" value=\"Create\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"isEdit\" class=\"btn btn-primary btn-lg\" value=\"Submit\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Submitting Group...</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { OrderGroupDetails } from '../models/models';\r\nimport { OrderService } from '../services/order.service';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { OrderGroupType } from 'src/app/app.enum';\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var IsSupplierCompany: boolean;\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n    selector: 'app-create-same-dest-group',\r\n    templateUrl: './create-same-dest-group.component.html',\r\n    styleUrls: ['./create-same-dest-group.component.css']\r\n})\r\nexport class CreateSameDestGroupComponent implements OnInit {\r\n\r\n    public SameDestGroupForm: FormGroup;\r\n\r\n    public FuelTypeList = [];\r\n    public SelectedFuelTypes = [];\r\n    public CustomerList = [];\r\n    public SelectedCustomer: any;\r\n    public JobList = [];\r\n    public SelectedJob: any;\r\n    public IsLoading: boolean = false;\r\n    public configSettings = {};\r\n    public FuelDdlSettings = {};\r\n    public SingleDdlSettings = {};\r\n    public orderList: OrderGroupDetails[] = [];\r\n    public orderListSelected: OrderGroupDetails[] = [];\r\n    public finalSubmitData: any = {};\r\n    public groupId: number = 0;\r\n    public isEdit: boolean = false;\r\n\r\n    @Output() onSubmitGroupData: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor(private fb: FormBuilder, private orderService: OrderService, private viewGroupService: SharedService) {\r\n        this.SameDestGroupForm = this.fb.group({\r\n            CustomerPoNumber: this.fb.control('')\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.configSettings = {\r\n            displayKey: 'Name',\r\n            search: true,\r\n\r\n        }\r\n        this.FuelDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: true,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'Unselect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            closeDropDownOnSelection: true\r\n        };\r\n        this.SingleDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'Unselect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        if (IsSupplierCompany) {\r\n            this.orderService.getCustomerList().subscribe(data => this.CustomerList = data);\r\n        }\r\n        else {\r\n            this.orderService.getSupplierList().subscribe(data => this.CustomerList = data);\r\n        }\r\n\r\n        this.viewGroupService.currentGroup.subscribe(id => {\r\n            this.groupId = id;\r\n            if (id > 0) {\r\n                this.clearDestGroupForm();\r\n                this.GetGroupDetails();\r\n                this.isEdit = true;\r\n            }\r\n        });\r\n    }\r\n    OrderClicked(orderData: OrderGroupDetails) {\r\n        let obj = this.orderList.find(o => o.OrderId == orderData.OrderId);\r\n        obj.IsOrderSelected = !obj.IsOrderSelected;\r\n        this.orderListSelected = this.orderList.filter(t => t.IsOrderSelected == true);\r\n    }\r\n    get CustomerPoNumber(): FormControl {\r\n        return this.SameDestGroupForm.get(\"CustomerPoNumber\") as FormControl\r\n    }\r\n    get Job(): DropdownItem {\r\n        return this.SelectedJob[0];\r\n    }\r\n    get Customer(): DropdownItem {\r\n        return this.SelectedCustomer[0];\r\n    }\r\n    get selectedFuelTypeList(): number[] {\r\n        return this.SelectedFuelTypes.map(x => x.Id);\r\n    }\r\n\r\n\r\n    buildProduct(model: OrderGroupDetails) {\r\n        return this.fb.group({\r\n            GroupId: this.fb.control(model.GroupId),\r\n            OrderId: this.fb.control(model.OrderId),\r\n            TfxPoNumber: this.fb.control(model.TfxPoNumber),\r\n            FuelType: this.fb.control(model.FuelType),\r\n            Quantity: this.fb.control(model.Quantity),\r\n            DisplayPrice: this.fb.control(model.DisplayPrice),\r\n            BlendPercentage: this.fb.control(model.BlendPercentage, [Validators.required, Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),\r\n        });\r\n    }\r\n\r\n    public onFuelSelect(item: any): void {\r\n        this.loadOrders(this.Customer.Id, this.Job.Id, this.selectedFuelTypeList);\r\n    }\r\n\r\n    public onAllFuelDeSelect(items: any): void {\r\n        this.orderList = [];\r\n    }\r\n\r\n    public onFuelDeSelect(item: any): void {\r\n        this.RemoveOrders(item.Name);\r\n    }\r\n\r\n    loadOrders(_customerId: number, _jobId: number, _fuelTypeIds: number[]): void {\r\n        this.orderService.getFilteredOrdersList(_customerId, _jobId, _fuelTypeIds, this.groupId).subscribe((data: OrderGroupDetails[]) => {\r\n            this.orderList = data;\r\n            for (var i = 0; i < this.orderListSelected.length; i++) {\r\n                this.orderList.filter(x => x.OrderId == this.orderListSelected[i].OrderId).forEach(t => t.IsOrderSelected = this.orderListSelected[i].IsOrderSelected);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadFuelType(_customerId: number, _jobId: number): void {\r\n        this.orderService.getFuelTypesList(_customerId, _jobId).subscribe((data: DropdownItem[]) => {\r\n            this.FuelTypeList = data;\r\n        });\r\n    }\r\n\r\n    RemoveOrders(_FuelType: string): void {\r\n        this.orderList = this.orderList.filter(t => t.FuelType != _FuelType);\r\n        this.orderListSelected = this.orderListSelected.filter(t => t.FuelType != _FuelType);\r\n    }\r\n    public OnCustomerSelect(customer: any) {\r\n        this.SelectedJob = '';\r\n        this.SelectedFuelTypes = [];\r\n        this.orderService.getCommonJobList(customer.Id).subscribe(data => this.JobList = data);\r\n    }\r\n\r\n    public OnCustomerDeSelect(customer: any) {\r\n        this.SelectedCustomer = '';\r\n        this.JobList = [];\r\n        this.SelectedJob = '';\r\n        this.FuelTypeList = [];\r\n        this.SelectedFuelTypes = [];\r\n        this.orderList = [];\r\n        this.orderListSelected = [];\r\n    }\r\n\r\n    public OnJobSelect(job: any) {\r\n        this.orderList = [];\r\n        this.SelectedFuelTypes = [];\r\n        this.orderListSelected = [];\r\n        this.loadFuelType(this.Customer.Id, job.Id);\r\n    }\r\n\r\n    public OnJobDeSelect(job: any) {\r\n        this.FuelTypeList = [];\r\n        this.SelectedFuelTypes = [];\r\n        this.orderList = [];\r\n        this.orderListSelected = [];\r\n    }\r\n\r\n    public OnSubmit(): void {\r\n\r\n        if (this.orderListSelected.length < 2) {\r\n            Declarations.msgerror('Group must contain at least 2 orders', undefined, undefined);\r\n            this.SameDestGroupForm.setErrors({ 'invalid': true });\r\n        }\r\n\r\n        this.finalSubmitData = {\r\n            Id: this.isEdit ? this.groupId : 0,\r\n            OrderList: this.orderListSelected,\r\n            GroupPoNumber: this.CustomerPoNumber.value,\r\n            BuyerCompanyId: IsSupplierCompany ? this.Customer.Id : currentUserCompanyId,\r\n            SupplierCompanyId: IsSupplierCompany ? currentUserCompanyId : this.Customer.Id,\r\n            JobId: this.Job.Id,\r\n            GroupType: OrderGroupType.MultiProducts\r\n        };\r\n        \r\n        if (this.SameDestGroupForm.valid) {\r\n            this.IsLoading = true;\r\n            if (this.isEdit)\r\n            {\r\n                this.orderService.postEditGroup(this.finalSubmitData).subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    if (data.StatusCode == 0) {\r\n                        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                        this.clearDestGroupForm();\r\n                        closeSlidePanel();\r\n                        this.onSubmitGroupData.emit();\r\n                    }\r\n                    else {\r\n                        Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                this.orderService.postCreateGroup(this.finalSubmitData).subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    if (data.StatusCode == 0) {\r\n                        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                        closeSlidePanel();\r\n                        this.onSubmitGroupData.emit();\r\n                    }\r\n                    else {\r\n                        Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    GetGroupDetails(): void {\r\n        this.orderService.getBlendGroupDetails(this.groupId).subscribe(group => {\r\n            this.JobList = group.Jobs;\r\n            this.FuelTypeList = group.FuelTypes;\r\n            this.orderList = group.FilteredOrders;\r\n            this.CustomerPoNumber.setValue(group.GroupDetails.GroupPoNumber);\r\n            this.SelectedCustomer = IsSupplierCompany ? this.getCustomerFromSupplier(group.GroupDetails.BuyerCompanyId) : this.getCustomerFromSupplier(group.GroupDetails.SupplierCompanyId);\r\n            this.SelectedJob = this.JobList.filter(ele => ele.Id == group.GroupDetails.JobId);\r\n            var _fuelTypes: string[] = group.GroupDetails.OrderList.map(x => x.Order.FuelType);\r\n            this.SelectedFuelTypes = this.FuelTypeList.filter(ele => _fuelTypes.indexOf(ele.Name) > -1);\r\n            this.orderList.filter(ele => _fuelTypes.indexOf(ele.FuelType) > -1).forEach(t => t.IsOrderSelected = true);\r\n            this.orderListSelected = this.orderList.filter(x => x.IsOrderSelected == true);\r\n            //for (var i = 0; i < group.GroupDetails.OrderList.length; i++) {\r\n            //    var orderDetail: OrderGroupDetails = group.GroupDetails.OrderList[i];\r\n            //    var orderToMove: OrderGroupDetails[] = this.orderList.filter(t => t.OrderId == orderDetail.OrderId);\r\n            //    this.setSelectedOrders(orderToMove[0]);\r\n            //}\r\n        });\r\n    }\r\n\r\n    getCustomerFromSupplier(id: number) {\r\n        return this.CustomerList.filter(e => e.Id == id);\r\n    }\r\n\r\n    public clearDestGroupForm(): void {\r\n        if (this.SelectedCustomer != null) {\r\n            this.OnCustomerDeSelect(this.SelectedCustomer);\r\n        }\r\n        this.CustomerPoNumber.setValue(\"\");\r\n        this.isEdit = false;\r\n    }\r\n\r\n    //setSelectedOrders(order: OrderGroupDetails) {\r\n    //    order.IsOrderSelected = true;\r\n    //    this.orderListSelected.push(order);\r\n    //    this.orderList.filter(x => x.FuelType == order.FuelType).forEach(x1 => x1.IsOrderSelected = true);\r\n    //}\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"form-group col-sm-3\">\r\n        <!--<ngx-select-dropdown (change)=\"OnCustomerSelect($event)\" [multiple]=\"false\" [config]=\"configSettings\" [options]=\"CustomerList\"></ngx-select-dropdown>-->\r\n        <label>Customer</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomer\" [settings]=\"SingleDdlSettings\" [data]=\"CustomerList\" (onSelect)=\"OnCustomerSelect($event)\" (onDeSelect)=\"OnCustomerDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-4\">\r\n        <label>Job</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" [settings]=\"SingleDdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\" (onDeSelect)=\"OnJobDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-3\">\r\n        <label>Fuel Type</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelTypes\" [settings]=\"FuelDdlSettings\" [data]=\"FuelTypeList\"\r\n                                 (onSelect)=\"onFuelSelect($event)\" (onDeSelect)=\"onFuelDeSelect($event)\" (onSelectAll)=\"onFuelSelect($event)\" (onDeSelectAll)=\"onAllFuelDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n</div>\r\n<div [formGroup]=\"SameDestGroupForm\">\r\n    <div class=\"group-height\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3\" *ngFor=\"let order of orderList\">\r\n                        <div class=\"well\" [ngClass]=\"{'order-selected': order.IsOrderSelected==true}\" (click)=\"OrderClicked(order)\" style=\"cursor:pointer\">\r\n                            <h3 class=\"mt0 mb0\">{{order.TfxPoNumber}}</h3>\r\n                            <span>{{order.FuelType}}</span><br>\r\n                            <span>{{order.DisplayPrice}}</span><br>\r\n                            <span>{{order.Quantity}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-3\">\r\n                <label for=\"CustomerPoNumber\">Customer PO#</label>\r\n                <input class=\"form-control\" type=\"text\" formControlName=\"CustomerPoNumber\" />\r\n                <span class=\"help-block color-maroon\" *ngIf=\"SameDestGroupForm.get('CustomerPoNumber').errors && (SameDestGroupForm.get('CustomerPoNumber').touched ||\r\n                                  SameDestGroupForm.get('CustomerPoNumber').dirty)\">\r\n                    <span *ngIf=\"SameDestGroupForm.get('CustomerPoNumber').errors.required\">\r\n                        Required.\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn btn-lg\" (click)=\"clearDestGroupForm()\" onclick=\"closeSlidePanel()\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"!isEdit\" class=\"btn btn-primary btn-lg\" value=\"Create\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"isEdit\" class=\"btn btn-primary btn-lg\" value=\"Submit\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Submitting Group...</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ViewOrderGroupService } from '../services/viewordergroup.service';\r\nimport { ViewOrderGroupDdlModel } from '../models/ViewOrderGroupDdlModel'\r\nimport { OrderService } from '../services/order.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-group',\r\n    templateUrl: './filter-group.component.html',\r\n    styleUrls: ['./filter-group.component.css']\r\n})\r\nexport class FilterGroupComponent implements OnInit {\r\n    public filterGroupForm: FormGroup;\r\n    public model: ViewOrderGroupDdlModel;\r\n\r\n    public SelectedCompany = [];\r\n    public SelectedGroupType = [];\r\n    public SelectedJob = [];\r\n    public SelectedFuelGroup = [];\r\n    public SelectedState = [];\r\n\r\n    public IsSupplierCompany: boolean;\r\n    public IsMultiProduct: boolean = true;\r\n    public IsTier: boolean = false;\r\n    public IsBlend: boolean = false;\r\n    public IsLoading: boolean = true;   \r\n\r\n    public GroupTypeList = [];\r\n    public CompanyList = [];\r\n    public JobList = [];\r\n    public FuelGroupList = [];\r\n    public StateList = [];\r\n\r\n    public GroupTypeDdlSettings = {};\r\n    public CompanyDdlSettings = {};\r\n    public JobDdlSettings = {};\r\n    public FuelGroupDdlSettings = {};\r\n    public StateDdlSettings = {};\r\n    \r\n    @Output() onViewOrderGroupResponse: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private viewOrderGroupService: ViewOrderGroupService, private orderService: OrderService) {\r\n        this.model = new ViewOrderGroupDdlModel();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.IsLoading = true;\r\n        this.model.GroupTypeId = 0;\r\n        this.filterGroupForm = this.fb.group({\r\n            GroupType: this.fb.control(null),\r\n            Customer: this.fb.control(null),\r\n            Job: this.fb.control(null),\r\n            ProductCategory: this.fb.control(null),\r\n            State: this.fb.control(null),\r\n            GroupTypeId: this.fb.control(0),\r\n            CompanyId: this.fb.control(null),\r\n            JobId: this.fb.control(null),\r\n            FuelGroupId: this.fb.control(null),\r\n            StateId: this.fb.control(null),\r\n            SearchText: this.fb.control(null),\r\n        });\r\n\r\n        this.GroupTypeDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.CompanyDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.JobDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.FuelGroupDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.StateDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.GroupTypeList = data.GroupTypes;\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n\r\n                this.IsSupplierCompany = data.IsSupplierCompany;\r\n            });\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.onOrderGroupFilterSubmit();\r\n    }\r\n\r\n    public showHideControlsByGroupType(groupTypeId) {\r\n        if (groupTypeId == 2) {\r\n            this.IsTier = true\r\n            this.IsMultiProduct = false;\r\n            this.IsBlend = false;\r\n        }\r\n        else if (groupTypeId == 3) {\r\n            this.IsBlend = true;\r\n            this.IsTier = false;\r\n            this.IsMultiProduct = false;\r\n        }\r\n        else {\r\n            this.IsMultiProduct = true;\r\n            this.IsTier = false;\r\n            this.IsBlend = false;\r\n        }\r\n    }\r\n\r\n    public OnGroupTypeSelect(groupType: any) {\r\n        this.IsLoading = true;\r\n        this.resetForm();\r\n        this.model.GroupTypeId = groupType.target.value;\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n                this.IsLoading = false;\r\n            });\r\n\r\n        this.onOrderGroupFilterSubmit();\r\n    }\r\n\r\n    public onOrderGroupFilterSubmit() {\r\n        this.IsLoading = true;\r\n        this.model.SearchText = this.filterGroupForm.get('SearchText').value;\r\n        this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n            .subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.onViewOrderGroupResponse.emit(data);\r\n            });\r\n    }\r\n\r\n    public resetForm() {\r\n        this.SelectedCompany = [];\r\n        this.SelectedGroupType = [];\r\n        this.SelectedJob = [];\r\n        this.SelectedFuelGroup = [];\r\n        this.SelectedState = [];\r\n        this.onViewOrderGroupResponse.emit([]);\r\n    }\r\n\r\n    public onSearch(searchText: any) {\r\n        var text = searchText.target.value;\r\n        if (text != null && text != '' && text.length >= 3) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = text;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n        else if (text.length == 0) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = null;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    public OnCompanySelect(company: any) {\r\n        this.model.CompanyId = company.Id;\r\n        this.JobList = [];\r\n        this.orderService.getCommonJobList(company.Id).subscribe(data => this.JobList = data);\r\n    }\r\n\r\n    public OnCompanyDeSelect(groupType: any) {\r\n        this.JobList = [];\r\n        this.model.CompanyId = null;\r\n    }\r\n\r\n    public OnJobSelect(job: any) {\r\n        this.model.JobId = job.Id;\r\n    }\r\n\r\n    public OnJobDeSelect(groupType: any) {\r\n        this.model.JobId = null;\r\n    }\r\n\r\n    public OnFuelGroupSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = fuelGroup.Id;\r\n    }\r\n\r\n    public OnFuelGroupDeSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = null;\r\n    }\r\n\r\n    public OnStateSelect(state: any) {\r\n        this.model.StateId = state.Id;\r\n    }\r\n\r\n    public OnStateDeSelect(state: any) {\r\n        this.model.StateId = null;\r\n    }\r\n\r\n    //onGroupSelect(type: any) {\r\n    //    this.onGroupTypeSelect.emit(type);\r\n    //}\r\n}\r\n","<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2\">\r\n            <div class=\"form-group\">\r\n                <label>Select Grouping Purpose</label>\r\n                <select class=\"form-control\" (change)=\"OnGroupTypeSelect($event)\">\r\n                    <option value=\"0\">All</option>\r\n                    <option *ngFor=\"let grpType of GroupTypeList || []\" [ngValue]=\"SelectedGroupType\" [value]=\"grpType.Id\">{{grpType.Name}}</option>\r\n                </select>\r\n                <!--<ng-multiselect-dropdown [data]=\"GroupTypeList\" [settings]=\"GroupTypeDdlSettings\" (onSelect)=\"OnGroupTypeSelect($event)\"\r\n                            (onDeSelect)=\"OnGroupTypeDeSelect($event)\">\r\n                </ng-multiselect-dropdown>-->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <div class=\"form-group\">\r\n                <label *ngIf=\"IsSupplierCompany\">Select Customer</label>\r\n                <label *ngIf=\"!IsSupplierCompany\">Select Supplier</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedCompany\" [settings]=\"CompanyDdlSettings\" [data]=\"CompanyList\" (onSelect)=\"OnCompanySelect($event)\"\r\n                                         (onDeSelect)=\"OnCompanyDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\" *ngIf=\"IsMultiProduct || IsTier\">\r\n            <div class=\"form-group\">\r\n                <label>Select Job/Site Name</label> \r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" [settings]=\"JobDdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\"\r\n                                         (onDeSelect)=\"OnJobDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\" *ngIf=\"IsTier\">\r\n            <div class=\"form-group\">\r\n                <label>Select Fuel Group</label> \r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelGroup\" [settings]=\"FuelGroupDdlSettings\" [data]=\"FuelGroupList\" (onSelect)=\"OnFuelGroupSelect($event)\"\r\n                                         (onDeSelect)=\"OnFuelGroupDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\" *ngIf=\"!IsSupplierCompany && IsTier\">\r\n            <div class=\"form-group\">\r\n                <label>Select State</label> \r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedState\" [settings]=\"StateDdlSettings\" [data]=\"StateList\" (onSelect)=\"OnStateSelect($event)\"\r\n                                         (onDeSelect)=\"OnStateDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div [formGroup]=\"filterGroupForm\">\r\n            <div class=\"col-sm-2\">\r\n                <input class=\"btn btn-primary btn-submit btn-lg no-disable\" type=\"submit\" value=\"Apply\" (click)=\"onOrderGroupFilterSubmit()\" />\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <div class=\"form-group\">\r\n                    <label>Search</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"SearchText\" (keypress)=\"onSearch($event)\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>   \r\n</div>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ViewOrderGroupComponent } from '../view-order-group/view-order-group.component';\r\n\r\nconst routeOrder: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewOrderGroupComponent\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeOrder)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class OrderRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewOrderGroupComponent } from '../view-order-group/view-order-group.component';\r\nimport { OrderRoutingModule } from './order-routing.module';\r\nimport { CreateBlendGroupComponent } from '../create-blend-group/create-blend-group.component';\r\nimport { CreateSameDestGroupComponent } from '../create-same-dest-group/create-same-dest-group.component';\r\nimport { FilterGroupComponent } from '../filter-group/filter-group.component';\r\nimport { TermPricingContractComponent } from '../term-pricing-contract.component';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        ViewOrderGroupComponent,\r\n        CreateBlendGroupComponent,\r\n        CreateSameDestGroupComponent,\r\n        FilterGroupComponent,\r\n        TermPricingContractComponent, \r\n\r\n    ],\r\n    imports: [\r\n        OrderRoutingModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        NgDragDropModule.forRoot(),\r\n    ]\r\n})\r\nexport class OrderModule { }\r\n","export class OrderDetailModel {\r\n\tpublic OrderId: number;\r\n\tpublic TfxPoNumber: string;\r\n\tpublic FuelType: string;\r\n\tpublic Quantity: string;\r\n\tpublic DisplayPrice: string;\r\n}\r\n\r\nexport class OrderList {\r\n\tconstructor() {\r\n\t\tthis.Order = new OrderDetailModel();\r\n\t}\r\n\tMinVolume: number;\r\n\tMaxVolume: number;\r\n\tOrderId: number;\r\n\tOrder: OrderDetailModel;\r\n}\r\n\r\nexport class CurrentUser {\r\n\tIsBuyerCompany: boolean;\r\n\tIsSupplierCompany: boolean;\r\n}\r\n\r\nexport class OrderGroupViewModel {\r\n\tId: number;\r\n\tBuyerCompanyId: number;\r\n\tJobId: number;\r\n\tSupplierCompanyId: number;\r\n\tProductType: number;\r\n\tStartDate: string;\r\n\tRenewalFrequency: number;\r\n\tRenewalCount: number;\r\n\tGroupType: number;\r\n\tGroupPoNumber: string;\r\n\r\n\tOrderList: OrderList[];\r\n}","import { DropdownItemExt, DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class ViewOrderGroupDdlModel {\r\n    public SearchText: string;\r\n    public GroupTypeId: number;\r\n    public CompanyId: number;\r\n    public JobId: number;\r\n    public ProductCategoryId: number;\r\n    public StateId: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class OrderService extends HandleError {\r\n\tprivate getCustomerListUrl = '/Supplier/OrderGroup/GetCustomersForSupplier';\r\n\tprivate getJobListUrl = '/Supplier/OrderGroup/GetJobsForCustomer?buyerCompanyId=';\r\n\r\n\tprivate getCommonJobListUrl = '/OrderBase/GetJobsForCustomers?companyId=';\r\n\tprivate postCreateGroupUrl: string = '/OrderBase/CreateOrderGroup';\r\n\tprivate postEditGroupUrl: string = '/OrderBase/EditOrderGroup';\r\n\tprivate getFilteredOrders = '/OrderBase/GetFilteredOrders';\r\n\tprivate getFuelTypes = '/OrderBase/GetFuelTypes?';\r\n\tprivate getCurrentUserUrl = '/OrderBase/GetUserContext';\r\n\tprivate getSupplierListUrl = '/Buyer/OrderGroup/GetSuppliersForCustomer';\r\n\tprivate getGroupDetailsUrl = '/OrderBase/GetOrderGroupDetails?groupId=';\r\n\tprivate getBlendedGroupDetailstUrl = '/OrderBase/GetBlendedGroupDetails?groupId=';\r\n\r\n\tconstructor(private httpClient: HttpClient) { super(); }\r\n\r\n\tgetCustomerList(): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getCustomerListUrl).pipe(catchError(this.handleError<any>('getCustomerList', null)));\r\n\t}\r\n\r\n\tgetBlendGroupDetails(groupId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getBlendedGroupDetailstUrl + groupId).pipe(catchError(this.handleError<any>('getBlendGroupDetails', null)));\r\n\t}\r\n\r\n\tgetSupplierList(): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getSupplierListUrl).pipe(catchError(this.handleError<any>('getSupplierList', null)));\r\n\t}\r\n\r\n\tgetJobList(customerId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getJobListUrl + customerId).pipe(catchError(this.handleError<any>('getJobList', null)));\r\n\t}\r\n\r\n\tgetCommonJobList(customerId: number): Observable<any> {\r\n        return this.httpClient.get(this.getCommonJobListUrl + customerId).pipe(catchError(this.handleError<any>('getCommonJobList', null)));\r\n\t}\r\n\tgetFilteredOrdersList(customerId: number, jobId: number, tfxFuelTypeIds: number[], groupId: number): Observable<any> {\r\n\t\treturn this.httpClient.post(this.getFilteredOrders, { customerId: customerId, jobId: jobId, tfxFuelTypeIds: tfxFuelTypeIds, groupId: groupId }).pipe(catchError(this.handleError<any>('getFilteredOrdersList', null)));\r\n\t}\r\n\r\n\tgetJobListByFuelGroupType(customerId: number, supplierId: number, fuelGroupType: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getJobListByFuelGroupUrl(customerId, supplierId, fuelGroupType)).pipe(catchError(this.handleError<any>('getJobListByFuelGroupType', null)));\r\n\t}\r\n\r\n\tgetOrderList(buyerCompanyId: number, supplierCompanyId: number, fuelGroupType: number, jobId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getOrderListUrl(buyerCompanyId, supplierCompanyId, fuelGroupType, jobId)).pipe(catchError(this.handleError<any>('getOrderList', null)));\r\n\t}\r\n\r\n\tgetCurrentUser(): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getCurrentUserUrl).pipe(catchError(this.handleError<any>('getCurrentUser', null)));\r\n\t}\r\n\r\n\tgetGroupDetails(groupId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getGroupDetailsUrl + groupId).pipe(catchError(this.handleError<any>('getGroupDetails', null)));\r\n\t}\r\n\r\n\tgetOrderListUrl(a: number, b: number, c: number, d: number) {\r\n\t\treturn `/OrderBase/GetOrdersForTierGroup?buyerCompanyId=${a}&supplierCompanyId=${b}&fuelGroupType=${c}&jobId=${d}`;\r\n\t}\r\n\r\n\tgetFuelTypesList(customerId: number, jobId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getFuelTypes + \"customerId=\" + customerId + \"&jobId=\" + jobId).pipe(catchError(this.handleError<any>('getFuelTypesList', null)));\r\n\t}\r\n\r\n\tgetJobListByFuelGroupUrl(a: number, b: number, c: number) {\r\n\t\treturn `/OrderBase/GetJobsByFuelGroup?buyerCompanyId=${a}&supplierCompanyId=${b}&fuelGroupType=${c}`;\r\n\t}\r\n\r\n\tpostCreateGroup(groupModel: any): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.postCreateGroupUrl, groupModel)\r\n\t\t\t.pipe(catchError(this.handleError<any>('postCreateGroup', null)));\r\n\t}\r\n\r\n\tpostEditGroup(groupModel: any): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.postEditGroupUrl, groupModel)\r\n\t\t\t.pipe(catchError(this.handleError<any>('postEditGroup', null)));\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\tprivate selectedGroupId = new BehaviorSubject(0);\n\tcurrentGroup = this.selectedGroupId.asObservable();\n\tconstructor() { }\n\n\tsetGroupId(groupId: number) {\n\t\tthis.selectedGroupId.next(groupId);\n\t}\n}\n","import { Injectable } from '@angular/core'\r\nimport { HandleError } from '../../errors/HandleError';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ViewOrderGroupDdlModel } from '../models/ViewOrderGroupDdlModel';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ViewOrderGroupService extends HandleError {\r\n    private getOrderGroupAllDdlUrl: string = '/OrderBase/FillOrderGroupDdl?groupTypeId=';\r\n    private viewOrderGroupDetailsUrl: string = '/OrderBase/ViewOrderGroupDetails';    \r\n    private getCommonJobListUrl = '/OrderBase/GetJobsForCustomers?companyId=';\r\n    private getDeleteOrderGroupUrl = '/OrderBase/DeleteOrderGroup?groupId=';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n\t}\r\n\r\n    fillDDLByGroup(groupTypeId): Observable<any> {\r\n        return this.httpClient.get(this.getOrderGroupAllDdlUrl + groupTypeId)\r\n            .pipe(catchError(this.handleError<any>('fillViewOrderGroupAllDDL', null)));\r\n    }\r\n\r\n    getOrderGroupDetails(viewOrderGroupFilterModel: ViewOrderGroupDdlModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.viewOrderGroupDetailsUrl, viewOrderGroupFilterModel)\r\n            .pipe(catchError(this.handleError<any>('getOrderGroupDetails', null)));\r\n    }\r\n\r\n    getCommonJobList(customerId: number): Observable<any> {\r\n        return this.httpClient.get(this.getCommonJobListUrl + customerId).pipe(catchError(this.handleError<any>('getCommonJobList', null)));\r\n    }\r\n\r\n    deleteOrderGroup(groupId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.getDeleteOrderGroupUrl + groupId, groupId).pipe(catchError(this.handleError<any>('deleteOrderGroup', null)));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { OrderService } from './services/order.service';\r\nimport { OrderDetailModel, OrderList, CurrentUser, OrderGroupViewModel } from '../order/models/OrderDetail';\r\nimport { Declarations } from '../declarations.module';\r\nimport { SharedService } from './services/shared.service';\r\nimport * as moment from 'moment';\r\nimport { RegExConstants } from '../app.constants';\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var IsSupplierCompany: boolean;\r\ndeclare var currentUserCompanyName: string;\r\n\r\n@Component({\r\n\tselector: 'app-term-pricing-contract',\r\n\ttemplateUrl: './term-pricing-contract.component.html',\r\n\tstyleUrls: ['./term-pricing-contract.component.css']\r\n})\r\nexport class TermPricingContractComponent implements OnInit {\r\n\tpublic TermPricingForm: FormGroup;\r\n\tpublic OrderGroupModel: OrderGroupViewModel;\r\n\tpublic CustomerList = [];\r\n\tpublic SupplierList = [];\r\n\tpublic FuelGroupList = [{ Id: 1, Name: \"Gasoline\" }, { Id: 2, Name: \"Diesel\" }];\r\n\tpublic JobList = [];\r\n\tpublic SelectedFuelGroup = [{ Id: 1, Name: \"Gasoline\" }];\r\n\tpublic SelectedCustomer = [];\r\n\tpublic SelectedSupplier = [];\r\n\tpublic groupId: number;\r\n\tpublic SelectedJob = [];\r\n\tpublic DdlSettings = {};\r\n\tpublic Orders: OrderDetailModel[];\r\n\tpublic MinStartDate = new Date();\r\n\tpublic MaxStartDate = new Date();\r\n\tpublic NextRenewalDate: string;\r\n\tpublic IsLoading: boolean = true;\r\n\tOrderList: OrderList[] = [];\r\n\tpublic DefaultTier: OrderList = { Order: new OrderDetailModel(), OrderId: null, MinVolume: null, MaxVolume: null };\r\n\tpublic CurrentUser: CurrentUser = { IsBuyerCompany: !IsSupplierCompany, IsSupplierCompany: IsSupplierCompany };\r\n\tpublic DisplayDate: string;\r\n\tpublic emptyOrder: OrderDetailModel = {\r\n\t\tOrderId: null,\r\n\t\tTfxPoNumber: null,\r\n\t\tFuelType: null,\r\n\t\tQuantity: null,\r\n\t\tDisplayPrice: null\r\n\t};\r\n\r\n\tconstructor(private fb: FormBuilder, private orderService: OrderService, private viewGroupService: SharedService) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.DisplayDate = moment(new Date()).format('MM/DD/YYYY');\r\n\t\tthis.NextRenewalDate = moment(new Date()).add(1, 'months').startOf('month').format('MM/DD/YYYY');\r\n\t\tthis.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 10);\r\n\t\tthis.TermPricingForm = this.fb.group({\r\n\t\t\tGroupType: this.fb.control('2', [Validators.required]),\r\n\t\t\tBuyerCompanyId: this.fb.control('', [Validators.required]),\r\n\t\t\tSupplierCompanyId: this.fb.control('', [Validators.required]),\r\n\t\t\tProductType: this.fb.control(1, [Validators.required]),\r\n\t\t\tJobId: this.fb.control('', [Validators.required]),\r\n\t\t\tStartDate: this.fb.control(this.DisplayDate, [Validators.required]),\r\n\t\t\tRenewalFrequency: this.fb.control('1', [Validators.required]),\r\n\t\t\tRenewalPeriod: this.fb.control('Monthly'),\r\n\t\t\tRenewalCount: this.fb.control('', [Validators.required, Validators.pattern(RegExConstants.Integer)]),\r\n\t\t\tGroupPoNumber: this.fb.control(''),\r\n\t\t\tOrderList: this.fb.array([]),\r\n\t\t});\r\n\t\tthis.DdlSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\tidField: 'Id',\r\n\t\t\ttextField: 'Name',\r\n\t\t\tcloseDropDownOnSelection: true,\r\n\t\t\tenableCheckAll: false,\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\titemsShowLimit: 1,\r\n\t\t\tallowSearchFilter: true\r\n\t\t};\r\n\t\tthis.viewGroupService.currentGroup.subscribe(id => this.groupId = id);\r\n\r\n\t\tif (IsSupplierCompany) {\r\n\t\t\tthis.SupplierList = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.SelectedSupplier = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(currentUserCompanyId);\r\n\t\t\tthis.GetCustomerList();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.CustomerList = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.SelectedCustomer = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(currentUserCompanyId);\r\n\t\t\tthis.GetSupplierList();\r\n\t\t}\r\n\r\n\t\tif (this.groupId == 0) {\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t}\r\n\t\tthis.IsLoading = false;\r\n\t}\r\n\r\n\r\n\tngAfterViewInit() {\r\n\t\tif (this.groupId != null && this.groupId != undefined && this.groupId > 0) {\r\n\t\t\tthis.getDefaultGroupDetail(this.groupId);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getDefaultGroupDetail(_groupId: number) {\r\n\t\tthis.orderService.getGroupDetails(_groupId)\r\n\t\t\t.subscribe(response => {\r\n\t\t\t\tthis.OrderGroupModel = response;\r\n\t\t\t\tthis.initFormData(response);\r\n\t\t\t});\r\n\t}\r\n\r\n\tinitFormData(model: OrderGroupViewModel): void {\r\n\t\tif (model != null && model != undefined && model.Id > 0) {\r\n\t\t\tthis.TermPricingForm.patchValue({\r\n\t\t\t\tGroupType: model.GroupType,\r\n\t\t\t\tBuyerCompanyId: model.BuyerCompanyId,\r\n\t\t\t\tSupplierCompanyId: model.SupplierCompanyId,\r\n\t\t\t\tProductType: model.ProductType,\r\n\t\t\t\tJobId: model.JobId,\r\n\t\t\t\tStartDate: model.StartDate,\r\n\t\t\t\tRenewalFrequency: model.RenewalFrequency,\r\n\t\t\t\tRenewalPeriod: 'Monthly',\r\n\t\t\t\tRenewalCount: model.RenewalCount,\r\n\t\t\t\tGroupPoNumber: model.GroupPoNumber,\r\n\t\t\t\tOrderList: model.OrderList\r\n\t\t\t});\r\n\t\t\tthis.SelectedCustomer = this.CustomerList.filter(function (item) { return item.Id == model.BuyerCompanyId });\r\n\t\t\tthis.SelectedSupplier = this.SupplierList.filter(function (item) { return item.Id == model.SupplierCompanyId });\r\n\t\t\tthis.SelectedJob = this.JobList.filter(function (item) { return item.Id == model.JobId });\r\n\t\t\tthis.SelectedFuelGroup = this.FuelGroupList.filter(function (item) { return item.Id == model.ProductType });\r\n\t\t\t//this.Tiers = model.OrderList;\r\n\t\t\tthis.Orders = this.Orders.filter(function (item) {\r\n\t\t\t\treturn model.OrderList.filter(function (t) { return t.OrderId == item.OrderId }).length == 0;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tpublic GetCustomerList() {\r\n\t\tthis.orderService.getCustomerList().subscribe(data => {\r\n\t\t\tthis.CustomerList = data;\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tthis.SelectedCustomer = [data[0]];\r\n\t\t\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(data[0].Id);\r\n\t\t\t\tthis.OnCustomerSelect(data[0]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic GetSupplierList() {\r\n\t\tthis.orderService.getSupplierList().subscribe(data => {\r\n\t\t\tthis.SupplierList = data;\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tthis.SelectedSupplier = [data[0]];\r\n\t\t\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(data[0].Id);\r\n\t\t\t\tthis.OnSupplierSelect(data[0]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic OnCustomerSelect(customer: any) {\r\n\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(customer.Id);\r\n\t\tvar productType = this.TermPricingForm.get('ProductType').value;\r\n\t\tvar selectedsupplier = this.TermPricingForm.get('SupplierCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tif (customer != null && customer != undefined && customer.Id > 0 && productType > 0 && selectedsupplier > 0) {\r\n\t\t\tthis.orderService.getJobListByFuelGroupType(customer.Id, selectedsupplier, productType).subscribe(data => {\r\n\t\t\t\tthis.JobList = data;\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis.SelectedJob = [data[0]];\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(data[0].Id);\r\n\t\t\t\t\tthis.OnJobSelect(data[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.SelectedJob = [];\r\n\t\t\t\t\tformOrderList.clear();\r\n\t\t\t\t\tthis.OrderList = [];\r\n\t\t\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\t\t\tthis.Orders = [];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.JobList = [];\r\n\t\t\tthis.SelectedJob = [];\r\n\t\t\tformOrderList.clear();\r\n\t\t\tthis.OrderList = [];\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\tthis.Orders = [];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnCustomerDeSelect(customer: any) {\r\n\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(null);\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = [];\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t}\r\n\r\n\tpublic OnSupplierSelect(supplier: any) {\r\n\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(supplier.Id);\r\n\t\tvar productType = this.TermPricingForm.get('ProductType').value;\r\n\t\tvar customer = this.TermPricingForm.get('BuyerCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tif (supplier != null && supplier != undefined && supplier.Id > 0 && productType > 0 && customer > 0) {\r\n\t\t\tthis.orderService.getJobListByFuelGroupType(customer, supplier.Id, productType).subscribe(data => {\r\n\t\t\t\tthis.JobList = data;\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis.SelectedJob = [data[0]];\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(data[0].Id);\r\n\t\t\t\t\tthis.OnJobSelect(data[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.SelectedJob = [];\r\n\t\t\t\t\tthis.Orders = [];\r\n\t\t\t\t\tformOrderList.clear();\r\n\t\t\t\t\tthis.OrderList = [];\r\n\t\t\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.JobList = [];\r\n\t\t\tthis.SelectedJob = [];\r\n\t\t\tthis.Orders = [];\r\n\t\t\tformOrderList.clear();\r\n\t\t\tthis.OrderList = [];\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnSupplierDeSelect(supplier: any) {\r\n\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(null);\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = [];\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t}\r\n\r\n\r\n\tpublic OnFuelGroupSelect(fuelGroup: any) {\r\n\t\tthis.TermPricingForm.get('ProductType').patchValue(fuelGroup.Id);\r\n\t\tvar customer = this.TermPricingForm.get('BuyerCompanyId').value;\r\n\t\tvar selectedsupplier = this.TermPricingForm.get('SupplierCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\r\n\t\tif (customer != null && customer != undefined && customer > 0 && fuelGroup.Id > 0 && selectedsupplier > 0) {\r\n\t\t\tthis.orderService.getJobListByFuelGroupType(customer, selectedsupplier, fuelGroup.Id).subscribe(data => {\r\n\t\t\t\tthis.JobList = data;\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis.SelectedJob = [data[0]];\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(data[0].Id);\r\n\t\t\t\t\tthis.OnJobSelect(data[0]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.SelectedJob = [];\r\n\t\t\t\t\tthis.Orders = [];\r\n\t\t\t\t\tformOrderList.clear();\r\n\t\t\t\t\tthis.OrderList = [];\r\n\t\t\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.JobList = [];\r\n\t\t\tthis.SelectedJob = [];\r\n\t\t\tthis.Orders = [];\r\n\t\t\tformOrderList.clear();\r\n\t\t\tthis.OrderList = [];\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnFuelGroupDeSelect(fuelGroup: any) {\r\n\t\tthis.TermPricingForm.get('ProductType').patchValue(null);\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = [];\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\r\n\t}\r\n\r\n\r\n\tpublic OnJobSelect(job: any) {\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(job.Id);\r\n\t\tvar productType = this.TermPricingForm.get('ProductType').value;\r\n\t\tvar selectedcustomer = this.TermPricingForm.get('BuyerCompanyId').value;\r\n\t\tvar selectedsupplier = this.TermPricingForm.get('SupplierCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.orderService.getOrderList(selectedcustomer, selectedsupplier, productType, job.Id).subscribe(data => { this.Orders = data; });\r\n\t}\r\n\r\n\tpublic OnJobDeSelect(job: any) {\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t}\r\n\r\n\tpublic onSubmit(): void {\r\n\t\tif (this.TermPricingForm.valid && this.validateTierControls()) {\r\n\t\t\tthis.orderService.postCreateGroup(this.TermPricingForm.value)\r\n\t\t\t\t.subscribe((data: any) => {\r\n\t\t\t\t\tif (data != null && data.StatusCode == 0) {\r\n\t\t\t\t\t\tDeclarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\t\twindow.location.href = this.CurrentUser.IsBuyerCompany ? \"/Buyer/OrderGroup/View\" : \"/Supplier/OrderGroup/View\";\r\n\t\t\t\t\t\t//this.TermPricingForm.reset();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\t\tDeclarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.IsLoading = false;\r\n\t\t\tthis.TermPricingForm.markAllAsTouched();\r\n\t\t\tlet invalidControls: string[] = this.findInvalidControlsRecursive(this.TermPricingForm);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic findInvalidControlsRecursive(formToInvestigate: FormGroup | FormArray): string[] {\r\n\t\tvar invalidControls: string[] = [];\r\n\t\tlet recursiveFunc = (form: FormGroup | FormArray) => {\r\n\t\t\tObject.keys(form.controls).forEach(field => {\r\n\t\t\t\tconst control = form.get(field);\r\n\t\t\t\tif (control.invalid) invalidControls.push(field);\r\n\t\t\t\tif (control instanceof FormGroup) {\r\n\t\t\t\t\trecursiveFunc(control);\r\n\t\t\t\t} else if (control instanceof FormArray) {\r\n\t\t\t\t\trecursiveFunc(control);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecursiveFunc(formToInvestigate);\r\n\t\treturn invalidControls;\r\n\t}\r\n\r\n\taddNewTier(model: OrderList) {\r\n\t\tif (model == null || model == undefined) {\r\n\t\t\tmodel = new OrderList();\r\n\t\t}\r\n\t\tif (model.OrderId == null || model.OrderId == undefined) {\r\n\t\t\tif (this.OrderList.length == 0) {\r\n\t\t\t\tmodel.MinVolume = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\t\t\tvar lastMaxValue = formOrderList.controls[formOrderList.length - 1].get('MaxVolume').value;\r\n\t\t\t\tif (lastMaxValue != null && lastMaxValue != undefined && parseInt(lastMaxValue) > 0) {\r\n\t\t\t\t\tmodel.MinVolume = parseInt(lastMaxValue) + 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tierForm = this.buildTier(model);\r\n\t\tthis.OrderList.push({ Order: model.Order, OrderId: model.OrderId, MinVolume: model.MinVolume, MaxVolume: model.MaxVolume });\r\n\t\tvar prodArray = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tif (prodArray != undefined && prodArray != null) {\r\n\t\t\tprodArray.push(tierForm);\r\n\t\t}\r\n\t}\r\n\r\n\tbuildTier(model: OrderList): FormGroup {\r\n\t\treturn this.fb.group({\r\n\t\t\tOrder: this.fb.group({\r\n\t\t\t\tOrderId: this.fb.control(model.Order.OrderId, [Validators.required]),\r\n\t\t\t\tTfxPoNumber: this.fb.control(model.Order.TfxPoNumber),\r\n\t\t\t\tFuelType: this.fb.control(model.Order.FuelType),\r\n\t\t\t\tQuantity: this.fb.control(model.Order.Quantity),\r\n\t\t\t\tDisplayPrice: this.fb.control(model.Order.DisplayPrice)\r\n\t\t\t}),\r\n\t\t\tOrderId: this.fb.control(model.Order.OrderId),\r\n\t\t\tMinVolume: this.fb.control(model.MinVolume, [Validators.required, Validators.pattern(RegExConstants.Integer)]),\r\n\t\t\tMaxVolume: this.fb.control(model.MaxVolume, [Validators.required, Validators.pattern(RegExConstants.Integer)])\r\n\t\t});\r\n\t}\r\n\r\n\tremoveTier(tier: OrderList, index: number): void {\r\n\t\tvar deletedOrder = this.OrderList[index].Order;\r\n\t\tif (deletedOrder != null && deletedOrder != undefined && this.OrderList[index].OrderId > 0) {\r\n\t\t\tthis.Orders.push(this.OrderList[index].Order);\r\n\t\t}\r\n\t\tvar _tiers = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\t_tiers.removeAt(index);\r\n\t\tthis.OrderList.splice(index, 1);\r\n\t}\r\n\r\n\tonItemDropTier(index: number, event: any) {\r\n\t\tvar tierList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tvar existingOrderinTier = this.OrderList[index].Order;\r\n\t\tvar indexOfSameOrderinAnotherTier = this.OrderList.findIndex(t => t.OrderId == event.dragData.OrderId);\r\n\t\tif (indexOfSameOrderinAnotherTier >= 0) {\r\n\t\t\tthis.OrderList[indexOfSameOrderinAnotherTier].Order = new OrderDetailModel();\r\n\t\t\tthis.OrderList[indexOfSameOrderinAnotherTier].OrderId = null;\r\n\t\t\ttierList.controls[indexOfSameOrderinAnotherTier].get('Order').patchValue(this.emptyOrder);\r\n\t\t\ttierList.controls[indexOfSameOrderinAnotherTier].get('OrderId').patchValue(null);\r\n\t\t}\r\n\t\tthis.OrderList[index].Order = event.dragData;\r\n\t\tthis.OrderList[index].OrderId = event.dragData.OrderId;\r\n\t\ttierList.controls[index].get('Order').patchValue(event.dragData);\r\n\t\ttierList.controls[index].get('OrderId').patchValue(event.dragData.OrderId);\r\n\t\tthis.Orders = this.Orders.filter(function (element) { return element.OrderId != event.dragData.OrderId });\r\n\t\tif (existingOrderinTier != null && existingOrderinTier != undefined && existingOrderinTier.OrderId > 0) {\r\n\t\t\tthis.Orders.push(existingOrderinTier);\r\n\t\t}\r\n\t}\r\n\r\n\tonItemDropOrder(event: any) {\r\n\t\tif (this.Orders.findIndex(t => t.OrderId == event.dragData.OrderId) < 0) {\r\n\t\t\tthis.Orders.push(event.dragData);\r\n\t\t}\r\n\t\tvar index = this.OrderList.findIndex(t => t.OrderId == event.dragData.OrderId);\r\n\t\tif (index >= 0) {\r\n\t\t\tthis.OrderList[index].Order = new OrderDetailModel();\r\n\t\t\tthis.OrderList[index].OrderId = null;\r\n\t\t\tvar tierList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\t\ttierList.controls[index].get('Order').patchValue(this.emptyOrder);\r\n\t\t\ttierList.controls[index].get('OrderId').patchValue(null);\r\n\t\t}\r\n\t}\r\n\r\n\tisInvalid(drop: FormGroup, name: string): boolean {\r\n\t\treturn drop.get(name).invalid &&\r\n\t\t\t(drop.get(name).dirty || drop.get(name).touched);\r\n\t}\r\n\r\n\tisRequired(drop: FormGroup, name: string): boolean {\r\n\t\treturn drop.get(name).errors.required &&\r\n\t\t\t(drop.get(name).dirty || drop.get(name).touched);\r\n\t}\r\n\r\n\tisMin(drop: FormGroup, name: string): boolean {\r\n\t\treturn drop.get(name).errors.min;\r\n\t}\r\n\r\n\tisDropAllowed = (dragData: any) => {\r\n\t\treturn dragData > 500;\r\n\t}\r\n\r\n\tgetNextRenewalDate(date: Date) {\r\n\t\tthis.NextRenewalDate = moment(date).add(1, 'months').startOf('month').format('MM/DD/YYYY');\r\n\t}\r\n\r\n\tcomparisonValidator(group: any, index: any, controlName:string){\r\n\t\tconst minVolume = group.get('MinVolume');\r\n\t\tconst maxVolume = group.get('MaxVolume');\r\n\t\tif (minVolume.value !== null && maxVolume.value !== null && parseInt(minVolume.value) >= parseInt(maxVolume.value)) {\r\n\t\t\tgroup.get(controlName).setErrors({ notEquivalent: true });\r\n\t\t} \r\n\t}\r\n\r\n\tvalidateTierControls() {\r\n\t\tvar tierList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tvar maxVolumeCtrl, minVolumeCtrl;\r\n\t\tvar minVolume, maxVolume;\r\n\t\tfor (var i = 0; i < tierList.length; i++) {\r\n\t\t\tmaxVolumeCtrl = tierList.controls[i].get('MaxVolume');\r\n\t\t\tminVolumeCtrl = tierList.controls[i].get('MinVolume');\r\n\t\t\tif (minVolume != undefined && minVolume != null) {\r\n\t\t\t\tif (parseInt(maxVolume) + 1 != parseInt(minVolumeCtrl.value)) {\r\n\t\t\t\t\tminVolumeCtrl.setErrors({ notEquivalent: true });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmaxVolume = maxVolumeCtrl.value;\r\n\t\t\tminVolume = minVolumeCtrl.value;\r\n\t\t}\r\n\t\treturn this.TermPricingForm.valid;\r\n\t}\r\n}\r\n","<div class=\"row\">\r\n\t<div class=\"col-sm-3\" *ngIf=\"CurrentUser.IsSupplierCompany\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Customer</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomer\" [data]=\"CustomerList\" [settings]=\"DdlSettings\" (onSelect)=\"OnCustomerSelect($event)\" (onDeSelect)=\"OnCustomerDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-3\" *ngIf=\"CurrentUser.IsBuyerCompany\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Supplier</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedSupplier\"  [settings]=\"DdlSettings\" [data]=\"SupplierList\" (onSelect)=\"OnSupplierSelect($event)\" (onDeSelect)=\"OnSupplierDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-2\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Fuel Group Type</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelGroup\" [settings]=\"DdlSettings\" [data]=\"FuelGroupList\" (onSelect)=\"OnFuelGroupSelect($event)\" (onDeSelect)=\"OnFuelGroupDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-4\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Job</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" [settings]=\"DdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\" (onDeSelect)=\"OnJobDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<form [formGroup]=\"TermPricingForm\" (ngSubmit)=\"onSubmit()\">\r\n\t<div class=\"pa bg-white z-index5 loading-wrapper left0 top0\" *ngIf=\"IsLoading\">\r\n\t\t<span class='spinner-dashboard pa'></span>\r\n\t</div>\r\n\t<input type=\"hidden\" formControlName=\"GroupType\" value=\"2\" />\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-sm-3\">\r\n\t\t\t<div class=\"clearboth\" formArrayName=\"OrderList\">\r\n\t\t\t\t<div class=\"group-maxheight\">\r\n\t\t\t\t\t<ng-container *ngFor=\"let tier of TermPricingForm.get('OrderList')['controls']; let i = index;\">\r\n\t\t\t\t\t\t<div [formGroupName]=\"i\" [ngClass]=\"['bg'+i]\" class=\"pa10 radius-5 mb10 border-dash-dark\">\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t<h3 class=\"mt0 mb0 pull-left\">Tier {{i+1}}</h3>\r\n\t\t\t\t\t\t\t\t\t<a (click)=\"removeTier(tier, i)\" class=\"color-maroon ml10 mt2 pull-left\"><i class=\"fa fa-trash-alt pull-right\"></i></a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group mb5\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" formControlName=\"MinVolume\" placeholder=\"Min\" (change)=\"comparisonValidator(tier, i,'MinVolume')\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"help-block color-maroon\" *ngIf=\"tier.get('MinVolume').errors && (tier.get('MinVolume').touched ||\r\n                                  tier.get('MinVolume').dirty)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MinVolume').errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MinVolume').errors.pattern\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!tier.get('MinVolume').errors.required && !tier.get('MinVolume').errors.pattern && tier.get('MinVolume').errors\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group mb5\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" formControlName=\"MaxVolume\" placeholder=\"Max\" (change)=\"comparisonValidator(tier, i, 'MaxVolume')\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"help-block color-maroon\" *ngIf=\"tier.get('MaxVolume').errors && (tier.get('MaxVolume').touched || tier.get('MaxVolume').dirty)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MaxVolume').errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MaxVolume').errors.pattern\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"row\" [formGroup]=\"tier.get('Order')\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"well\" draggable droppable (onDrop)=\"onItemDropTier(i,$event)\" [dragData]=\"tier.get('Order').value\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-center\" *ngIf=\"tier.get('Order').get('FuelType').value==null\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-hand-rock fs25\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"fs16 mb0 pa0 color-orange\" *ngIf=\"tier.get('Order').get('FuelType').value==null\">Please drag order here</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"tier.get('Order').get('FuelType').value!=null\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"mt0 mb0\">{{tier.get('Order').get('FuelType').value}}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{tier.get('Order').get('TfxPoNumber').value}}</span><br>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{tier.get('Order').get('Quantity').value}}</span><br>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{tier.get('Order').get('DisplayPrice').value}}</span><br>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"help-block color-maroon\" *ngIf=\"tier.get('Order').get('OrderId').errors && (tier.get('Order').get('OrderId').touched || tier.get('Order').get('OrderId').dirty)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('Order').get('OrderId').errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<a (click)=\"addNewTier(null);\" class=\"mt20\"><i class=\"fa fa-plus\"></i> Add Tier</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-sm-6\">\r\n\t\t\t<div class=\"group-height\" droppable (onDrop)=\"onItemDropOrder($event)\">\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-sm-6\" *ngFor=\"let order of Orders;index as i\">\r\n\t\t\t\t\t\t<div draggable class=\"well\" [dragData]=\"order\">\r\n\t\t\t\t\t\t\t<h3 class=\"mt0 mb0\">{{order.FuelType}}</h3>\r\n\t\t\t\t\t\t\t<span>{{order.TfxPoNumber}}</span><br>\r\n\t\t\t\t\t\t\t<span>{{order.Quantity}}</span><br>\r\n\t\t\t\t\t\t\t<span>{{order.DisplayPrice}}</span><br>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-sm-3\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<label>Renewal Period</label>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Renewal Frequency\" formControlName=\"RenewalPeriod\" class=\"form-control\" value=\"Monthly\" readonly />\r\n\t\t\t\t\t\t<input type=\"hidden\" formControlName=\"RenewalFrequency\" value=\"1\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<label>Maximum Renewal Count</label>\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"Maximum Renewal Count\" formControlName=\"RenewalCount\" class=\"form-control\">\r\n\t\t\t\t\t<span *ngIf=\"isInvalid(TermPricingForm, 'RenewalCount')\" class=\"color-maroon\">\r\n\t\t\t\t\t\t<span *ngIf=\"isRequired(TermPricingForm, 'RenewalCount')\">\r\n\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span *ngIf=\"!isRequired(TermPricingForm, 'RenewalCount') && isInvalid(TermPricingForm, 'RenewalCount')\">\r\n\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<label>Start Date</label>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control datepicker\" formControlName=\"StartDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" (onDateChange)=\"TermPricingForm.get('StartDate').setValue($event);getNextRenewalDate($event);\" />\r\n\t\t\t\t\t\t<span>Next Renewal Date: {{NextRenewalDate}}</span>\r\n\t\t\t\t\t\t<span *ngIf=\"isInvalid(TermPricingForm, 'StartDate')\" class=\"color-maroon\">\r\n\t\t\t\t\t\t\t<span *ngIf=\"isRequired(TermPricingForm, 'StartDate')\">\r\n\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<label>Customer PO#</label>\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"Customer PO#\" formControlName=\"GroupPoNumber\" class=\"form-control\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-sm-12 text-right\">\r\n\t\t\t<input type=\"button\" value=\"Cancel\" class=\"btn btn-lg\" onclick=\"closeSlidePanel()\">\r\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-lg\" value=\"Create\">\r\n\t\t</div>\r\n\t</div>\r\n</form>","import { Component, ElementRef, OnInit, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ViewOrderGroupService } from '../services/viewordergroup.service';\r\nimport { OrderGroupDetailModel } from '../models/ViewOrderGroupModel'\r\nimport { SharedService } from '../services/shared.service';\r\nimport { CreateBlendGroupComponent } from '../create-blend-group/create-blend-group.component';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ViewOrderGroupDdlModel } from '../models/ViewOrderGroupDdlModel';\r\nimport { OrderService } from '../services/order.service';\r\nimport { CreateSameDestGroupComponent } from '../create-same-dest-group/create-same-dest-group.component';\r\nimport { OrderGroupType } from 'src/app/app.enum';\r\n\r\n@Component({\r\n\tselector: 'app-view-order-group',\r\n\ttemplateUrl: './view-order-group.component.html',\r\n\tstyleUrls: ['./view-order-group.component.css']\r\n})\r\nexport class ViewOrderGroupComponent implements OnInit {\r\n\r\n\tpublic viewOrderGroupForm: FormGroup;\r\n\tpublic groups: OrderGroupDetailModel[];\r\n\tSelectedButton: string = \"\";\r\n\tModalText: string = \"\";\r\n\tModalTextData: string[] = ['', 'Create Same Destination Group', 'Term Pricing Contract', 'Create Blend Group'];\r\n\tModalEditTextData: string[] = ['', 'Edit Same Destination Group', 'Edit Pricing Contract', 'Edit Blend Group'];\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n    public ShowCount: number = 0;\r\n    public TotalGroupCount: number = 0;\r\n\r\n    //child \r\n    public model: ViewOrderGroupDdlModel = new ViewOrderGroupDdlModel();\r\n\r\n    public SelectedCompany = [];\r\n    public SelectedGroupType = [];\r\n    public SelectedJob = [];\r\n    public SelectedFuelGroup = [];\r\n    public SelectedState = [];\r\n\r\n    public IsSupplierCompany: boolean;\r\n    public IsMultiProduct: boolean = true;\r\n    public IsTier: boolean = false;\r\n    public IsBlend: boolean = false;\r\n\r\n   // public SearchText: string;\r\n    public GroupTypeList = [];\r\n    public CompanyList = [];\r\n    public JobList = [];\r\n    public FuelGroupList = [];\r\n    public StateList = [];\r\n\r\n    public GroupTypeDdlSettings = {}; \r\n    public CompanyDdlSettings = {};\r\n    public JobDdlSettings = {};\r\n    public FuelGroupDdlSettings = {};\r\n    public StateDdlSettings = {};\r\n    SelectedOrderGroupIdToDelete: number = 0;\r\n    @ViewChild(CreateBlendGroupComponent) BlendComponent: CreateBlendGroupComponent;\r\n    @ViewChild(CreateSameDestGroupComponent) SameDestComponent: CreateSameDestGroupComponent;\r\n\r\n    constructor(private fb: FormBuilder, private viewOrderGroupService: ViewOrderGroupService, private sharedService: SharedService, private orderService: OrderService) {\r\n\t}\r\n\r\n    ngOnInit() {\r\n\r\n        this.model.GroupTypeId = 0;\r\n        this.viewOrderGroupForm = this.fb.group({\r\n            OrderGroupDetails: this.fb.control(''),\r\n            GroupType: this.fb.control(null),\r\n            Customer: this.fb.control(null),\r\n            Job: this.fb.control(null),\r\n            ProductCategory: this.fb.control(null),\r\n            State: this.fb.control(null),\r\n            GroupTypeId: this.fb.control(0),\r\n            CompanyId: this.fb.control(null),\r\n            JobId: this.fb.control(null),\r\n            FuelGroupId: this.fb.control(null),\r\n            StateId: this.fb.control(null),\r\n            SearchText: this.fb.control(null),\r\n        });\r\n\r\n        this.GroupTypeDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.CompanyDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.JobDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.FuelGroupDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.StateDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.fillDDLByGroup();\r\n    }\r\n\r\n\r\n    fillDDLByGroup() {\r\n        this.IsLoading = true;\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.GroupTypeList = data.GroupTypes;\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n                this.IsSupplierCompany = data.IsSupplierCompany;\r\n\r\n                this.onOrderGroupFilterSubmit();\r\n            });\r\n    }\r\n\r\n    //onViewOrderGroupChildResponse(response: ViewOrderGroupModel) {\r\n\t//\t//this.model = response;\r\n\t//\tthis.groups = response.OrderGroupDetails as OrderGroupDetailModel[];\r\n\t//\tconsole.log(response);\r\n\t//}\r\n\r\n    ButtonPressed(_SelectedButton: string) {\r\n        if (this.BlendComponent != undefined) {\r\n            this.BlendComponent.clearBlendGroupForm();\r\n        }\r\n        if (this.SameDestComponent != undefined) {\r\n            this.SameDestComponent.clearDestGroupForm();\r\n        }\r\n\t\tthis.SelectedButton = OrderGroupType[_SelectedButton];\r\n\t\tthis.ModalText = this.ModalTextData[_SelectedButton];\r\n\t\tthis.sharedService.setGroupId(0);\r\n    }\r\n    \r\n    public showHideControlsByGroupType(groupTypeId) {\r\n        if (groupTypeId == 2) {\r\n            this.IsTier = true\r\n            this.IsMultiProduct = false;\r\n            this.IsBlend = false;\r\n        }\r\n        else if (groupTypeId == 3) {\r\n            this.IsBlend = true;\r\n            this.IsTier = false;\r\n            this.IsMultiProduct = false;\r\n        }\r\n        else {\r\n            this.IsMultiProduct = true;\r\n            this.IsTier = false;\r\n            this.IsBlend = false;\r\n        }\r\n    }\r\n\r\n    public OnGroupTypeSelect(groupType: any) {\r\n        this.IsLoading = true;\r\n        this.resetForm();\r\n        this.model.GroupTypeId = groupType.target.value;\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n\r\n                this.onOrderGroupFilterSubmit();\r\n            });\r\n    }\r\n\r\n    public onOrderGroupFilterSubmit() {\r\n        this.IsLoading = true;\r\n        this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n            .subscribe(data => {\r\n                this.groups = data.OrderGroupDetails as OrderGroupDetailModel[];\r\n                this.TotalGroupCount = data.TotalGroupCount;\r\n                this.ShowCount = data.ShowCount;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    public resetForm() {\r\n        this.SelectedCompany = [];\r\n        this.SelectedGroupType = [];\r\n        this.SelectedJob = [];\r\n        this.SelectedFuelGroup = [];\r\n        this.SelectedState = [];\r\n        //this.onViewOrderGroupResponse.emit([]);\r\n        this.groups = [];\r\n    }\r\n\r\n    public onSearch(text: string) {\r\n        if (text != null && text != '' && text.length >= 3) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = text;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.groups = data.OrderGroupDetails as OrderGroupDetailModel[];\r\n                    this.TotalGroupCount = data.TotalGroupCount;\r\n                    this.ShowCount = data.ShowCount;\r\n                    //this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n        else if (text.length == 0) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = null;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.groups = data.OrderGroupDetails as OrderGroupDetailModel[];\r\n                    this.TotalGroupCount = data.TotalGroupCount;\r\n                    this.ShowCount = data.ShowCount;\r\n                   // this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n    }\r\n    public OnCompanySelect(company: any) {\r\n        this.model.CompanyId = company.Id;\r\n        this.JobList = [];\r\n        this.orderService.getCommonJobList(company.Id).subscribe(data => this.JobList = data);\r\n    }\r\n\r\n    public OnCompanyDeSelect(company: any) {\r\n        this.JobList = [];\r\n        this.model.CompanyId = null;\r\n    }\r\n\r\n    public OnJobSelect(job: any) {\r\n        this.model.JobId = job.Id;\r\n    }\r\n\r\n    public OnJobDeSelect(groupType: any) {\r\n        this.model.JobId = null;\r\n    }\r\n\r\n    public OnFuelGroupSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = fuelGroup.Id;\r\n    }\r\n\r\n    public OnFuelGroupDeSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = null;\r\n    }\r\n\r\n    public OnStateSelect(state: any) {\r\n        this.model.StateId = state.Id;\r\n    }\r\n\r\n    public OnStateDeSelect(state: any) {\r\n        this.model.StateId = null;\r\n    }\r\n\r\n    SetOrderGroupIdToDelete(orderGroupId: number) {\r\n        this.SelectedOrderGroupIdToDelete = orderGroupId;\r\n    }\r\n\r\n    deleteOrderGroup() {\r\n        if (this.SelectedOrderGroupIdToDelete == 0) { return; }\r\n\r\n        this.IsLoading = true;\r\n        this.viewOrderGroupService.deleteOrderGroup(this.SelectedOrderGroupIdToDelete)\r\n            .subscribe(data => {                \r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.onOrderGroupFilterSubmit();\r\n                    this.IsLoading = false;\r\n                } else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        this.SelectedOrderGroupIdToDelete = 0;\r\n    }\r\n\r\n\tOpenEditSlider(OrderGroupId: number, _SelectedButton: string) {\r\n\t\tif (this.BlendComponent != undefined) {\r\n\t\t\tthis.BlendComponent.isEdit = true;\r\n\t\t}\r\n\t\tthis.SelectedButton = OrderGroupType[_SelectedButton];\r\n\t\tthis.ModalText = this.ModalEditTextData[_SelectedButton];\r\n\t\tthis.sharedService.setGroupId(OrderGroupId);\r\n\t}\r\n}\r\n","<div>\r\n    <button type=\"button\" class=\"btn btn-default mr25\" (click)=\"ButtonPressed('3')\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\"><i class=\"fas fa-plus mr5\"></i>Create Blend Group</button>\r\n    <button type=\"button\" class=\"btn btn-default mr25\" (click)=\"ButtonPressed('1')\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\"><i class=\"fas fa-plus mr5\"></i>Create Same Destination Group</button>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"ButtonPressed('2')\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\"><i class=\"fas fa-plus mr5\"></i>Term Pricing Contract</button>\r\n</div>\r\n<div id=\"create-group\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15 pb0\">\r\n            <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h2 class=\"dib mt0 mb0 fs21 ml15\">{{ModalText}}</h2>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div *ngIf=\"SelectedButton=='Blend'\">\r\n                <app-create-blend-group (onSubmitGroupData)=\"onOrderGroupFilterSubmit();\"></app-create-blend-group>\r\n            </div>\r\n            <div *ngIf=\"SelectedButton=='MultiProducts'\">\r\n                <app-create-same-dest-group (onSubmitGroupData)=\"onOrderGroupFilterSubmit();\"></app-create-same-dest-group>\r\n            </div>\r\n            <div *ngIf=\"SelectedButton=='Tier'\">\r\n                <app-term-pricing-contract></app-term-pricing-contract>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div>\r\n        <form #viewOrderGroupForm>\r\n            <div class=\"container-fluid mt15\">\r\n                <!--(onGroupTypeSelect)=\"onGroupSelected($event)\"-->\r\n                <!--[GroupList]=\"model?.GroupTypes || []\"-->\r\n                <!--<app-filter-group (onViewOrderGroupResponse)=\"onViewOrderGroupChildResponse($event)\"></app-filter-group>-->\r\n                <div class=\"row well\">\r\n                    <div class=\"col-sm-9\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Grouping Purpose</label>\r\n                                    <select class=\"form-control\" (change)=\"OnGroupTypeSelect($event)\">\r\n                                        <option value=\"0\">All</option>\r\n                                        <option *ngFor=\"let grpType of GroupTypeList || []\" [ngValue]=\"SelectedGroupType\" [value]=\"grpType.Id\">{{grpType.Name}}</option>\r\n                                    </select>\r\n                                    <!--<ng-multiselect-dropdown [data]=\"GroupTypeList\" [settings]=\"GroupTypeDdlSettings\" (onSelect)=\"OnGroupTypeSelect($event)\"\r\n                                                (onDeSelect)=\"OnGroupTypeDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label *ngIf=\"IsSupplierCompany\">Customer</label>\r\n                                    <label *ngIf=\"!IsSupplierCompany\">Supplier</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedCompany\" [data]=\"CompanyList\" name=\"SelectedCompany\" [settings]=\"CompanyDdlSettings\" (onSelect)=\"OnCompanySelect($event)\"\r\n                                                             (onDeSelect)=\"OnCompanyDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngIf=\"IsMultiProduct || IsTier\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Location/Site Name</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" name=\"SelectedJob\" [settings]=\"JobDdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\"\r\n                                                             (onDeSelect)=\"OnJobDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\" *ngIf=\"IsTier\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Fuel Group</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelGroup\" name=\"SelectedFuelGroup\" [settings]=\"FuelGroupDdlSettings\" [data]=\"FuelGroupList\" (onSelect)=\"OnFuelGroupSelect($event)\"\r\n                                                             (onDeSelect)=\"OnFuelGroupDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\" *ngIf=\"!IsSupplierCompany && IsTier\">\r\n                                <div class=\"form-group\">\r\n                                    <label>State</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedState\" name=\"SelectedState\" [settings]=\"StateDdlSettings\" [data]=\"StateList\" (onSelect)=\"OnStateSelect($event)\"\r\n                                                             (onDeSelect)=\"OnStateDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <input class=\"btn btn-primary btn-submit btn-lg no-disable btn-lg mt-4\" type=\"submit\" value=\"Search\" (click)=\"onOrderGroupFilterSubmit()\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"row mt-4\">\r\n                            <div class=\"col-sm-2\">\r\n                                <button class=\"btn btn-primary\" (click)=\"onSearch(searchTxt.value)\" ><i class=\"fas fa-search\"></i></button>\r\n                            </div>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control input-lg\" placeholder=\"Search Group\" #searchTxt>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"pb15 f-bold\">\r\n                Showing {{ShowCount}} of {{TotalGroupCount}}\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3\" *ngFor=\"let grp of groups; let i = index;\">\r\n                    <div class=\"well animated fadeInUp\">\r\n                        <div class=\"row mb10\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"pa10 mb0 jumbotron group-cust radius-5\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-8\">\r\n                                            <div class=\"fs12 f-bold\">Customer PO#</div>\r\n                                            <h2 class=\"pt0 mt0 f-normal fs16\">{{grp.CustomerPoNumber}}</h2>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 text-right\">\r\n                                            <a *ngIf=\"grp.IsEditOrDeleteAllowed && grp.CanCurrentUserEditOrDeleteGroup\" (click)=\"OpenEditSlider(grp.OrderGroupId, grp.GroupType);\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\" class=\"mr5 fs16\"><i class=\"fa fa-edit\"></i></a>\r\n                                            <a *ngIf=\"grp.IsEditOrDeleteAllowed && grp.CanCurrentUserEditOrDeleteGroup\" (click)=\"SetOrderGroupIdToDelete(grp.OrderGroupId);\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-trash-alt color-maroon\"></i></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\" *ngIf=\"grp.GroupType == 1\">\r\n                                        <!-- 1=Multi Products || 2=Tier || 3=Blend -->\r\n                                        <div class=\"col-sm-12\" *ngIf=\"grp.JobAddress != null\">\r\n                                            <span class=\"fs12\">{{grp.JobName}}</span><br>\r\n                                            <span class=\"fs11\">{{grp.JobAddress}}</span><br>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"grp.GroupType == 2\">\r\n                                        <!-- 2=Tier -->\r\n                                        <span class=\"fs14\">{{grp.DisplayProductType}}</span><br>\r\n                                        <span class=\"fs14\" *ngIf=\"grp.RenewalFrequency != '' || grp.RenewalFrequency != null\">Renewal - {{grp.RenewalFrequency}}</span><br>\r\n                                    </div>\r\n                                    <!-- 3=Blend -->\r\n                                    <div *ngIf=\"grp.GroupType == 3\">\r\n                                        <!--<span class=\"fs14\">Group Weighted Avg PPG - {{grp.BlendedGroupWeightedPPG}}</span><br>-->\r\n                                        <span class=\"fs13\">{{grp.DisplayBlendedGroupWeightedPPG}}</span><br>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"order-list pa10\">\r\n                            <div *ngFor=\"let drop of grp.OrderDrops; let j = index;\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"row col-sm-12\" *ngIf=\"grp.GroupType == 1\">\r\n                                        <div class=\"col-sm-9\">\r\n                                            <!-- 1=MultiProducts -->\r\n                                            <span class=\"fs14\">{{drop.FuelType}}</span><br>\r\n                                            <!--QuantityType 1=SpecificAmount || 2=Range || 3=NotSpecified -->\r\n                                            <div *ngIf=\"drop.QuantityType == 1\"><span class=\"fs12 color-lightgrey\">{{drop.DroppedGallons}} {{drop.UoM}}</span><br></div>\r\n                                            <div *ngIf=\"drop.QuantityType == 2\">\r\n                                                <span class=\"fs12 color-lightgrey\">Tier {{j+1}} - {{drop.MinVolume}} to {{drop.MaxVolume}} {{drop.UoM}}</span><br>\r\n                                            </div>\r\n                                            <div *ngIf=\"drop.QuantityType == 3\"><span class=\"fs12 color-lightgrey\">Not Specified</span><br></div>\r\n                                            <!--<span class=\"fs11 color-lightgrey\"><a href=\"\">{{drop.TfxPoNumber}}</a></span>-->\r\n                                            <span class=\"fs11 color-lightgrey\">{{drop.TfxPoNumber}}</span>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 text-right\">\r\n                                            <span class=\"badge\" *ngIf=\"drop.QuantityType != 3 && drop.DropPercentage != '--'\">{{drop.DropPercentage}}%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row col-sm-12\" *ngIf=\"grp.GroupType == 2\">\r\n                                        <div class=\"col-sm-9\">\r\n                                            <!-- 2=Tier -->\r\n                                            <!--QuantityType 1=SpecificAmount || 2=Range || 3=NotSpecified -->\r\n                                            <div *ngIf=\"drop.QuantityType == 1\">\r\n                                                <span class=\"fs12 color-lightgrey\">{{drop.TfxPoNumber}} - {{drop.DroppedGallons}} {{drop.UoM}}</span><br>\r\n                                            </div>\r\n                                            <div *ngIf=\"drop.QuantityType == 3\">\r\n                                                <span class=\"fs12 color-lightgrey\">{{drop.TfxPoNumber}} - Not Specified</span><br>\r\n                                            </div>\r\n                                            <span class=\"fs12 color-lightgrey\">Tier {{j+1}} - {{drop.MinVolume}} to {{drop.MaxVolume}} {{drop.UoM}}</span><br>\r\n                                            <span class=\"fs12 color-lightgrey\">{{drop.DisplayPPG}}</span><br>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 text-right\">\r\n                                            <span class=\"badge\" *ngIf=\"drop.QuantityType != 3 && drop.DropPercentage != '--'\">{{drop.DropPercentage}}%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row col-sm-12\" *ngIf=\"grp.GroupType == 3\">\r\n                                        <div class=\"col-sm-9\">\r\n                                            <span class=\"fs14\">{{drop.FuelType}}</span><br>\r\n                                            <div *ngIf=\"drop.QuantityType == 1\">\r\n                                                <span class=\"fs12 color-lightgrey\">{{drop.DroppedGallons}} {{drop.UoM}}</span><br>\r\n                                            </div>\r\n                                            <div *ngIf=\"drop.QuantityType == 3\">\r\n                                                <span class=\"fs12 color-lightgrey\">Not Specified</span><br>\r\n                                            </div>\r\n                                            <span class=\"fs11 color-lightgrey\">{{drop.TfxPoNumber}}</span><br />\r\n                                            <span class=\"fs11 color-lightgrey\">Blended Ratio - {{drop.BlendRatioPercentage}}%</span>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 text-right\">\r\n                                            <span class=\"badge\" *ngIf=\"drop.QuantityType != 3 && drop.DropPercentage != '--'\">{{drop.DropPercentage}}%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"border-b clearboth mt10 mb10\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n    <!--modal-->\r\n    <div class=\"modal fade\" id=\"myModal\" role=\"dialog\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n        <div class=\"modal-dialog\" style=\"width:200px\">\r\n\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    Are you sure to delete?\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-danger\" (click)=\"deleteOrderGroup();\">Yes</button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-success\" (click)=\"SetOrderGroupIdToDelete(0);\">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n"]}