{"version":3,"sources":["./src/app/company-addresses/region/service/region.service.ts","./src/app/freightRates/Create/create-freight-rate-rules-component.ts","./src/app/freightRates/Create/create-freight-rate-rules-component.html","./src/app/freightRates/Master/master.component.ts","./src/app/freightRates/Master/master.component.html","./src/app/freightRates/Models/createFreightRateRules.ts","./src/app/freightRates/Models/viewFreightRateRules.ts","./src/app/freightRates/Services/freight-rate-rules.service.ts","./src/app/freightRates/View/view-freight-rate-rules.component.ts","./src/app/freightRates/View/view-freight-rate-rules.component.html","./src/app/freightRates/freight.rate.module.ts","./src/app/shared-components/Freight/freight.component.ts","./src/app/shared-components/Freight/freight.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEoB;AACT;AAGf;AAGkB;;;AAEzD,MAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACnE,CAAC;AAKK,MAAM,aAAc,SAAQ,sEAAW;IAkC1C,YAAoB,UAAsB;QACtC,KAAK,EAAE,CAAC;QADQ,eAAU,GAAV,UAAU,CAAY;QAhClC,cAAS,GAAG,gBAAgB,CAAC;QAC7B,cAAS,GAAG,gBAAgB,CAAC;QAC7B,cAAS,GAAG,oBAAoB,CAAC;QACjC,kBAAa,GAAG,oBAAoB,CAAC;QACrC,wBAAmB,GAAG,0BAA0B,CAAC;QACjD,0BAAqB,GAAG,4BAA4B,CAAC;QACrD,0BAAqB,GAAG,4BAA4B,CAAC;QACrD,0BAAqB,GAAG,gCAAgC,CAAC;QACzD,eAAU,GAAG,iBAAiB,CAAC;QAC/B,kBAAa,GAAG,oBAAoB,CAAC;QACrC,sBAAiB,GAAG,wBAAwB,CAAC;QAC7C,mBAAc,GAAG,qBAAqB,CAAC;QACvC,aAAQ,GAAG,0CAA0C,CAAC;QACtD,qBAAgB,GAAG,wCAAwC,CAAC;QAC5D,mCAA8B,GAAG,2CAA2C,CAAC;QAC7E,sBAAiB,GAAG,gDAAgD,CAAC;QACrE,wBAAmB,GAAG,0BAA0B,CAAC;QACjD,wBAAmB,GAAG,oCAAoC,CAAC;QAC3D,yBAAoB,GAAG,2BAA2B,CAAC;QACnD,yBAAoB,GAAG,2BAA2B,CAAC;QACnD,4BAAuB,GAAG,8BAA8B,CAAC;QACzD,4BAAuB,GAAG,+BAA+B,CAAC;QAC3D,mBAAc,GAAG,qBAAqB,CAAC;QACtC,0BAAqB,GAAG,kDAAkD,CAAC;QAC3E,yBAAoB,GAAG,oCAAoC,CAAC;QAC5D,mCAA8B,GAAG,gEAAgE,CAAC;QAClG,+BAA0B,GAAG,uCAAuC,CAAC;QACrE,sBAAiB,GAAG,qCAAqC,CAAC;QAC1D,sBAAiB,GAAG,4BAA4B,CAAC;QACjD,qBAAgB,GAAG,mCAAmC,CAAC;QAK3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,UAAU,CAAC;aACtD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,aAAa,CAAC;aACzD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IACD,gBAAgB,CAAC,SAAS;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;aAC3E,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IACD,gBAAgB;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,mBAAmB,CAAC;aAC/D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IACD,iBAAiB,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA0B,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;aACjF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAA0B,qBAAqB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,iBAAiB,CAAC;aAC7D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,cAAc,CAAC;aAC1D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,aAAa,CAAC;aACtD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAc,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,YAAY,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC;aACnE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,YAAY,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC;aACnE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoB,IAAI,CAAC,mBAAmB,CAAC;aAClE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAoB,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,kBAAkB,CAAC,MAAoB;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAe,IAAI,CAAC,qBAAqB,EAAE,MAAM,EAAE,WAAW,CAAC;aACrF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAe,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,uBAAuB,CAAC,IAAY,EAAE,EAAU;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,0BAA0B,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;aAChF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAoB,yBAAyB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,kBAAkB,CAAC,MAAoB;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAe,IAAI,CAAC,qBAAqB,EAAE,MAAM,EAAE,WAAW,CAAC;aACrF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAe,oBAAoB,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,YAAY,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,EAAE,CAAC;aACpD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,kBAAkB,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,qBAAqB,GAAG,EAAE,EAAE,EAAE,CAAC;aAChE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,oBAAoB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,SAAS,CAAC,SAAiB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;aAChE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,cAAc;IACd,iBAAiB,CAAC,SAAc,EAAE,YAAiB;QAC/C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,gBAAgB,GAAG,SAAS,GAAG,gBAAgB,GAAG,YAAY,CAAC;aAC/F,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,oBAAoB,CAAC,QAAa,EAAE,YAAiB;QACjD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,8BAA8B,GAAG,QAAQ,GAAG,gBAAgB,GAAG,YAAY,CAAC;aAC5G,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,sBAAsB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,OAAe;QAC/C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA4B,IAAI,CAAC,qBAAqB,GAAG,QAAQ,GAAG,WAAW,GAAG,OAAO,CAAC;aAC/G,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,iBAAiB,CAAC,KAAU;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,WAAW,CAAC;aAC1E,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,iBAAiB,CAAC,KAAU;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,WAAW,CAAC;aAC1E,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,oBAAoB,CAAC,IAAS,EAAE,IAAS;QACrC,IAAI,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,uBAAuB,EAAE,SAAS,EAAE,WAAW,CAAC;aACjF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,mBAAmB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,oBAAoB,CAAC,IAAS,EAAE,IAAS;QACrC,IAAI,SAAS,GAAG,EAAE,+BAA+B,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC;QAC7E,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,uBAAuB,EAAE,SAAS,EAAE,WAAW,CAAC;aACjF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,sBAAsB,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,IAAI,CAAC,cAAc,CAAC;aAC1D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IACD,iBAAiB;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,oBAAoB,CAAC;aACrD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,2BAA2B,CAAC,QAAgB;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,8BAA8B,GAAG,QAAQ,CAAC;aAC1E,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,6BAA6B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,cAAc;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,iBAAiB,CAAC;aAClD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,gBAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IACD,eAAe;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,iBAAiB,CAAC;aAClD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,iBAAiB,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,aAAa,CAAC,UAAe,EAAE,WAAmB;QAC9C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,gBAAgB,GAAG,UAAU,GAAG,eAAe,GAAG,WAAW,CAAC;aAC9F,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;;0EAzLQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFV,MAAM;6FAET,aAAa;cAHzB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AAC/B;AAEoI;AAC5I;AACD;AAC6F;AAGjF;AAC1B;AAEoD;AAEyB;;;;;;;;;;;ICXtG,sEACI;IAAA,6EAAiE;IAAtB,0TAAqB;IAAC,mEAAiC;IAAA,qEAAU;IAAA,4DAAS;IACzH,4DAAM;;;IA0C0B,qEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,yFACJ;;;IAegC,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,0KACI;IAEJ,0KACI;IAER,4DAAM;;;IANG,0DAAsD;IAAtD,oHAAsD;IAGtD,0DAAqD;IAArD,mHAAqD;;;IAR1E,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,uEACA;IAAA,qKACI;IAOR,4DAAK;IAET,qEAAe;IACnB,qEAAe;;;;IAdG,0DAAmB;IAAnB,gFAAmB;IAGpB,0DAAwF;IAAxF,0JAAwF;;;IARzH,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,4EACI;IAAA,wKACI;IAeR,qEAAe;IACnB,4DAAK;IACT,qEAAe;IACnB,qEAAe;;;;IAtBG,0DAAmB;IAAnB,gFAAmB;IAGP,0DAAuE;IAAvE,sGAAuE;;;IApBzH,0EACI;IAAA,0EAEG;IACC,yEAAiB;IAAA,uEAAY;IAAA,4DAAK;IAClC,4EACI;IAAA,wEACI;IAAA,qEACI;IAAA,oIACI;IAER,4DAAK;IACT,4DAAQ;IAER,wEACI;IAAA,4EACI;IAAA,0JACI;IAuBR,qEAAe;IAEnB,4DAAQ;IACZ,4DAAQ;IAEZ,4DAAM;IACV,4DAAM;;;IAtCkB,0DAAoE;IAApE,2HAAoE;IAQ1D,0DAA0E;IAA1E,mHAA0E;;;IAsC5F,qEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,yFACJ;;;IAaoB,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,2EACJ;IAAA,4DAAM;;;IATV,0EACI;IAAA,0JACI;IAEJ,0JACI;IAEJ,0JACI;IAER,4DAAM;;;IATG,0DAAiD;IAAjD,+GAAiD;IAGjD,0DAAgD;IAAhD,8GAAgD;IAGhD,0DAAqD;IAArD,mHAAqD;;;IAU1D,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,2EACJ;IAAA,4DAAM;;;IATV,0EACI;IAAA,+JACI;IAEJ,+JACI;IAEJ,+JACI;IAER,4DAAM;;;IATG,0DAA+C;IAA/C,6GAA+C;IAG/C,0DAA8C;IAA9C,4GAA8C;IAG9C,0DAAmD;IAAnD,iHAAmD;;;;IAVhE,qEACI;IAAA,4EAEA;IAFsE,kcAAkC;IAAxG,4DAEA;IAAA,0JACI;IAUR,4DAAK;;;IAXI,0DAA0E;IAA1E,4IAA0E;;;IAYnF,qEACI;IAAA,kEACA;IACJ,4DAAK;;;IAQe,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAEN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IAPV,0EACI;IAAA,0KACI;IAGJ,0KACI;IAER,4DAAM;;;IAPG,0DAAoD;IAApD,kHAAoD;IAIpD,0DAAmD;IAAnD,iHAAmD;;;IATxE,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,uEACA;IAAA,qKACI;IAQR,4DAAK;IAET,qEAAe;IACnB,qEAAe;;;;IAfG,0DAAmB;IAAnB,gFAAmB;IAGpB,0DAAoF;IAApF,sJAAoF;;;;IAgBrG,wEACI;IAAA,wEAII;IADD,6bAAsB;IACzB,4DAAI;IACJ,wEAII;IADD,gcAAyB;IAC5B,4DAAI;IACR,qEAAe;;;;IAvE/B,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEACI;IAAA,4EAEA;IAFwE,mZAA2C;IAAnH,4DAEA;IAAA,qJACI;IAUR,4DAAK;IACL,qEAAI;IAAA,6DAAE;IAAA,4DAAK;IACX,kJACI;IAcJ,kJACI;IAIJ,6EACI;IAAA,yKACI;IAgBR,qEAAe;IAEf,sEACI;IAAA,wKACI;IAWR,4DAAK;IAET,4DAAK;IACT,qEAAe;IACnB,qEAAe;;;;;IA3EG,0DAAmB;IAAnB,gFAAmB;IAKhB,0DAA8E;IAA9E,gJAA8E;IAanF,0DAAiC;IAAjC,+FAAiC;IAejC,0DAAgC;IAAhC,8FAAgC;IAMlB,0DAAuE;IAAvE,sGAAuE;IAoBvE,0DAAyD;IAAzD,iIAAyD;;;IA1EvG,0EACI;IACA,4EACI;IAAA,wEACI;IAAA,qEACI;IAAA,yEAA+B;IAAA,6EAAkB;IAAA,4DAAK;IACtD,oIACI;IAER,4DAAK;IACT,4DAAQ;IAER,wEACI;IAAA,4EACI;IAAA,yJACI;IA4ER,qEAAe;IAEnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;;;IAzFc,0DAAoE;IAApE,2HAAoE;IAQ1D,0DAAsE;IAAtE,+GAAsE;;;IA/DxG,sEACI;IAAA,iIACI;IA+CJ,iIACI;IA+FR,4DAAM;;;IAhJe,0DAAqC;IAArC,sGAAqC;IAgDrC,0DAAqC;IAArC,sGAAqC;;;IAyGlC,qEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,yFACJ;;;IACA,qEACI;IAAA,uEACJ;IAAA,4DAAK;;;IACL,qEACI;IAAA,2GACJ;IAAA,4DAAK;;;IAe2B,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,0KACI;IAEJ,0KACI;IAER,4DAAM;;;IANG,0DAAsD;IAAtD,oHAAsD;IAGtD,0DAAqD;IAArD,mHAAqD;;;IAR1E,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,uEACA;IAAA,qKACI;IAOR,4DAAK;IAET,qEAAe;IACnB,qEAAe;;;;IAdG,0DAAmB;IAAnB,gFAAmB;IAGpB,0DAAwF;IAAxF,0JAAwF;;;IAkBrG,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,gKACI;IAEJ,gKACI;IAER,4DAAM;;;IANG,0DAAmD;IAAnD,iHAAmD;IAGnD,0DAAkD;IAAlD,gHAAkD;;;IAP/D,qEAEI;IAAA,uEACA;IAAA,2JACI;IAQR,4DAAK;;;IATI,0DAAkF;IAAlF,oJAAkF;;;IAkCvE,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,uKACI;IAER,4DAAM;;;IAHG,0DAA8C;IAA9C,4GAA8C;;;IAT/D,0EACI;IAAA,0EACI;IAAA,yFAK0B;IAC1B,kKACI;IAIR,4DAAM;IACV,4DAAM;;;;IAT2B,0DAA8C;IAA9C,uGAA8C;IAGlE,0DAAwE;IAAxE,0IAAwE;;;IAtB7F,qEACI;IAAA,sEACI;IAAA,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,uEACA;IAAA,4EAA8C;IAAA,mEAAQ;IAAA,4DAAQ;IAClE,4DAAM;IACN,yEACI;IAAA,uEACA;IAAA,6EAAiD;IAAA,sEAAU;IAAA,4DAAQ;IACvE,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,6JACI;IAcR,4DAAM;IACV,4DAAK;;;IAzByH,0DAAwC;IAAxC,iGAAwC;IAAa,+HAAgE;IAIlH,0DAAwC;IAAxC,iGAAwC;IAAa,+HAAgE;IAK7N,0DAAiG;IAAjG,uKAAiG;;;IAlDtI,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,4EACI;IAAA,wKACI;IAeR,qEAAe;IAEf,mJAEI;IAYJ,oJACI;IA8BR,4DAAK;IACT,qEAAe;IACnB,qEAAe;;;;;IApEG,0DAAmB;IAAnB,gFAAmB;IAGP,0DAAuE;IAAvE,sGAAuE;IAkBrF,0DAAgE;IAAhE,oIAAgE;IAchE,0DAAgE;IAAhE,oIAAgE;;;IAxDpG,0EACI;IAAA,0EACI;IAAA,yEAAiB;IAAA,uEAAY;IAAA,4DAAK;IAClC,4EACI;IAAA,wEACI;IAAA,qEACI;IAAA,oIACI;IAEJ,mIACI;IAEJ,mIACI;IAER,4DAAK;IACT,4DAAQ;IAER,yEACI;IAAA,6EACI;IAAA,0JACI;IAqER,qEAAe;IACnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACV,4DAAM;;;IAxFkB,0DAAoE;IAApE,4HAAoE;IAGpE,0DAAgE;IAAhE,oIAAgE;IAGhE,0DAAgE;IAAhE,oIAAgE;IAQtD,0DAA0E;IAA1E,oHAA0E;;;IA8FxE,wEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAK;IACT,qEAAe;;;IAFP,0DACJ;IADI,yFACJ;;;IAaY,wEACI;IAAA,wEAAQ;IAAA,uDAA8C;IAAA,4DAAQ;IAClE,qEAAe;;;IADH,0DAA8C;IAA9C,yHAA8C;;;IAoBtD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,sJACI;IAEJ,sJACI;IAER,4DAAM;;;IANG,0DAA0C;IAA1C,wGAA0C;IAG1C,0DAAyC;IAAzC,uGAAyC;;;IAS9C,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,sJACI;IAEJ,sJACI;IAER,4DAAM;;;IANG,0DAAgD;IAAhD,8GAAgD;IAGhD,0DAA+C;IAA/C,6GAA+C;;;IAWxC,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAEN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IAPV,0EACI;IAAA,qKACI;IAGJ,qKACI;IAER,4DAAM;;;IAPG,0DAAoD;IAApD,mHAAoD;IAIpD,0DAAmD;IAAnD,kHAAmD;;;IATxE,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,uEACA;IAAA,gKACI;IAQR,4DAAK;IAET,qEAAe;IACnB,qEAAe;;;;IAfG,0DAAmB;IAAnB,iFAAmB;IAGpB,0DAAoF;IAApF,wJAAoF;;;IAlDrH,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEACI;IAAA,iKACI;IAER,4DAAK;IACL,qEACI;IAAA,wEACI;IAAA,wEAAQ;IAAA,uDAAkC;IAAA,4DAAQ;IACtD,qEAAe;IACnB,4DAAK;IAEL,yEACI;IAAA,yEACI;IAAA,yEAAQ;IAAA,wDAAqC;IAAA,4DAAQ;IACzD,qEAAe;IACnB,4DAAK;IAEL,sEACI;IAAA,yEACI;IAAA,yEAAQ;IAAA,wDAA4B;IAAA,4DAAQ;IAChD,qEAAe;IACf,kJACI;IAOR,4DAAK;IAEL,sEACI;IAAA,wEACA;IAAA,kJACI;IAOR,4DAAK;IACL,6EACI;IAAA,oKACI;IAgBR,qEAAe;IAEf,0EACI;IAAA,wEACJ;IAAA,4DAAK;IAET,4DAAK;IACT,qEAAe;IACnB,qEAAe;;;;IAtEG,0DAAmB;IAAnB,gFAAmB;IAGP,0DAAsC;IAAtC,sGAAsC;IAMxC,0DAAkC;IAAlC,6GAAkC;IAMlC,0DAAqC;IAArC,gHAAqC;IAMrC,0DAA4B;IAA5B,uGAA4B;IAEnC,0DAAgE;IAAhE,kIAAgE;IAYhE,0DAA4E;IAA5E,8IAA4E;IAUnE,0DAAuE;IAAvE,sGAAuE;IAoBJ,0DAAW;IAAX,oEAAW;;;;IAjMpJ,sEACI;IAAA,iIACI;IA+FJ,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,4EACI;IAAA,wEACI;IAAA,sEACI;IAAA,0EACI;IAAA,mFACJ;IAAA,4DAAK;IACL,0EACI;IAAA,2EACJ;IAAA,4DAAK;IACL,0EAAmB;IAAA,4EAAgB;IAAA,4DAAK;IACxC,0EAAmB;IAAA,kEAAM;IAAA,4DAAK;IAC9B,0EAAmB;IAAA,yEAAa;IAAA,4DAAK;IACrC,oJACI;IAIJ,0EAAmB;IAAA,2EAAe;IAAA,4DAAK;IAC3C,4DAAK;IACT,4DAAQ;IAER,yEAEI;IAAA,6EACI;IAAA,qJACI;IAuER,qEAAe;IAEnB,4DAAQ;IAGZ,4DAAQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAlNe,0DAAqC;IAArC,sGAAqC;IAgGrC,0DAA0D;IAA1D,+KAA0D;IAML,0DAAuB;IAAvB,uFAAuB;IAY3C,2DAAoE;IAApE,2HAAoE;IAYpE,0DAAsE;IAAtE,+GAAsE;;;IA8FpG,qEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,0FACJ;;;IACA,qEACI;IAAA,uEACJ;IAAA,4DAAK;;;IACL,qEACI;IAAA,2GACJ;IAAA,4DAAK;;;IAe2B,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,0KACI;IAEJ,0KACI;IAER,4DAAM;;;IANG,0DAAsD;IAAtD,qHAAsD;IAGtD,0DAAqD;IAArD,oHAAqD;;;IAR1E,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,uEACA;IAAA,qKACI;IAOR,4DAAK;IAET,qEAAe;IACnB,qEAAe;;;;IAdG,0DAAmB;IAAnB,iFAAmB;IAGpB,0DAAwF;IAAxF,4JAAwF;;;IAiBrG,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,gKACI;IAEJ,gKACI;IAER,4DAAM;;;IANG,0DAAmD;IAAnD,kHAAmD;IAGnD,0DAAkD;IAAlD,iHAAkD;;;IAN/D,qEACI;IAAA,uEACA;IAAA,2JACI;IAQR,4DAAK;;;IATI,0DAAkF;IAAlF,sJAAkF;;;IAkCvE,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,uKACI;IAER,4DAAM;;;IAHG,0DAA8C;IAA9C,6GAA8C;;;IAT/D,0EACI;IAAA,0EACI;IAAA,yFAK0B;IAC1B,kKACI;IAIR,4DAAM;IACV,4DAAM;;;;IAT2B,0DAAmC;IAAnC,4FAAmC;IAGvD,0DAAwE;IAAxE,4IAAwE;;;IAtB7F,qEACI;IAAA,sEACI;IAAA,0EACI;IAAA,0EACI;IAAA,yEACI;IAAA,uEACA;IAAA,4EAA8C;IAAA,mEAAQ;IAAA,4DAAQ;IAClE,4DAAM;IACN,yEACI;IAAA,uEACA;IAAA,6EAAiD;IAAA,sEAAU;IAAA,4DAAQ;IACvE,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,6JACI;IAcR,4DAAM;IACV,4DAAK;;;IAzByH,0DAAwC;IAAxC,iGAAwC;IAAa,gIAAgE;IAIlH,0DAAwC;IAAxC,iGAAwC;IAAa,gIAAgE;IAK7N,0DAAiG;IAAjG,yKAAiG;;;IAjDtI,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,4EACI;IAAA,wKACI;IAeR,qEAAe;IAEf,mJACI;IAYJ,oJACI;IA8BR,4DAAK;IACT,qEAAe;IACnB,qEAAe;;;;;IAnEG,0DAAmB;IAAnB,iFAAmB;IAGP,0DAAuE;IAAvE,uGAAuE;IAkBrF,0DAAgE;IAAhE,qIAAgE;IAahE,0DAAgE;IAAhE,qIAAgE;;;IAvDpG,0EACI;IAAA,0EACI;IAAA,yEAAiB;IAAA,uEAAY;IAAA,4DAAK;IAClC,4EACI;IAAA,wEACI;IAAA,qEACI;IAAA,oIACI;IAEJ,mIACI;IAEJ,mIACI;IAER,4DAAK;IACT,4DAAQ;IAER,yEACI;IAAA,6EACI;IAAA,0JACI;IAoER,qEAAe;IAEnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACV,4DAAM;;;IAxFkB,0DAAoE;IAApE,6HAAoE;IAGpE,0DAAgE;IAAhE,qIAAgE;IAGhE,0DAAgE;IAAhE,qIAAgE;IAQtD,0DAA0E;IAA1E,qHAA0E;;;IAqFxF,qEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,0FACJ;;;IAoBoB,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IACN,uEACI;IAAA,uEACJ;IAAA,4DAAO;;;IATX,0EACI;IAAA,2JACI;IAEJ,2JACI;IAEJ,6JACI;IAER,4DAAM;;;IATG,0DAAgD;IAAhD,+GAAgD;IAGhD,0DAA+C;IAA/C,8GAA+C;IAG9C,0DAAsD;IAAtD,qHAAsD;;;IAWhD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAEN,sEACI;IAAA,qEACJ;IAAA,4DAAM;;;IAPV,0EACI;IAAA,0KACI;IAGJ,0KACI;IAER,4DAAM;;;IAPG,0DAAoD;IAApD,mHAAoD;IAIpD,0DAAmD;IAAnD,kHAAmD;;;IATxE,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,uEACA;IAAA,qKACI;IAQR,4DAAK;IAET,qEAAe;IACnB,qEAAe;;;;IAfG,0DAAmB;IAAnB,iFAAmB;IAGpB,0DAAoF;IAApF,wJAAoF;;;;IAtBrH,wEACI;IAAA,4EACI;IAAA,qEACI;IAAA,qEACI;IAAA,uEACA;IAAA,sJACI;IAUR,4DAAK;IACL,4EACI;IAAA,wKACI;IAgBR,qEAAe;IAOf,qEACI;IAAA,wEACI;IAAA,yEAII;IADD,0XAAsB;IACzB,4DAAI;IACJ,yEAII;IADD,6XAAyB;IAC5B,4DAAI;IACR,qEAAe;IACnB,4DAAK;IAET,4DAAK;IACT,qEAAe;IACnB,qEAAe;;;;IA1DG,0DAAmB;IAAnB,iFAAmB;IAIhB,0DAA4E;IAA5E,gJAA4E;IAanE,0DAAuE;IAAvE,uGAAuE;;;IA3CzH,0EACI;IAAA,0EACI;IAAA,yEAAiB;IAAA,6EAAkB;IAAA,4DAAK;IACxC,4EACI;IAAA,wEACI;IAAA,qEACI;IAAA,qEACI;IAAA,iEACJ;IAAA,4DAAK;IACL,oIACI;IAKJ,sEACI;IAAA,oEACJ;IAAA,4DAAK;IAET,4DAAK;IACT,4DAAQ;IAER,yEAEI;IAAA,6EACI;IAAA,2JACI;IA2DR,qEAAe;IACnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACV,4DAAM;;;IAhFkB,0DAAoE;IAApE,6HAAoE;IAgB1D,0DAAsE;IAAtE,iHAAsE;;;IA3H5G,sEAEI;IAAA,iIACI;IA+FJ,iIACI;IAyFR,4DAAM;;;IA1Le,0DAAqC;IAArC,sGAAqC;IAgGrC,0DAAqC;IAArC,sGAAqC;;;IA7c9D,0EAGI;IAAA,yHACI;IAkJJ,0HACI;IAoNJ,yHAEI;IA2LR,4DAAM;;;IAriBG,0DAAiM;IAAjM,wSAAiM;IAmJjM,0DAAiM;IAAjM,wSAAiM;IAqNjM,0DAAiM;IAAjM,wSAAiM;;;IAwMtN,0EACI;IAAA,0EACI;IAAA,qEAA2B;IAC3B,0EAAuB;IAAA,kEAAO;IAAA,4DAAM;IACxC,4DAAM;IACV,4DAAM;;;ADrkBC,MAAM,sBAAsB;IA2B/B,YACY,uBAAgD,EAChD,IAAgB,EAChB,GAAsB,EACtB,GAAgB;QAHhB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,SAAI,GAAJ,IAAI,CAAY;QAChB,QAAG,GAAH,GAAG,CAAmB;QACtB,QAAG,GAAH,GAAG,CAAa;QA5BrB,eAAU,GAAY,IAAI,CAAC;QAK3B,cAAS,GAAQ,EAAE,CAAC;QACpB,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QACxC,cAAS,GAAY,KAAK,CAAC;QAC3B,8BAAyB,GAAG,KAAK,CAAC;QAClC,6BAAwB,GAAG,EAAE,CAAC;QAG9B,aAAQ,GAAG,CAAC,CAAC;QAEb,aAAQ,GAAS,QAAQ,CAAC;QAC1B,wBAAmB,GAAW,oEAAmB,CAAC,KAAK,CAAC;QAExD,yBAAoB,GAAG,+CAA+C,CAAC;QACvE,2BAAsB,GAAG,eAAe,CAAC;QAEzC,uBAAkB,GAAiB,EAAE,CAAC,CAAC,wBAAwB;QAE/D,yBAAoB,GAAY,KAAK,CAAC;IAMb,CAAC;IAEjC,QAAQ;QACJ,IAAI,oBAAoB,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG;YACb,GAAG,EAAE,0BAA0B;YAC/B,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE;gBACL,EAAE,MAAM,EAAE,QAAQ,EAAE;gBACpB,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,oBAAoB,EAAE;gBACvD,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE,aAAa,EAAE,oBAAoB,EAAE;gBACjF,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,oBAAoB,EAAE;gBAC3G,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,oBAAoB,EAAE;aAC3D;YACD,UAAU,EAAE,oBAAoB;YAChC,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SAChE,CAAC;QAEF,IAAI,CAAC,wBAAwB,GAAG;YAC5B,eAAe,EAAE,IAAI;YACrB,wBAAwB,EAAE,IAAI;YAC9B,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG;YAC3B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACnE,IAAI,CAAC,EAAE;gBACH,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;gBAC/B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;gBAC/B,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC,mBAAmB,CAAC;aAC5D;QACL,CAAC,CAAC;QAEF,8BAA8B;QAC9B,IAAI,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACnD,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,YAAY,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IAED,eAAe;QACX,IAAI,IAAI,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS;YAAE,OAAO;QAE5D,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAClF,0DAAG,CAAC,EAAE,CAAC,EAAE;YACL,MAAM,OAAO,GAAG,EAA0B,CAAC;YAC3C,OAAO,OAAO,CAAC;QACnB,CAAC,CAAC,EACF,+DAAQ,CAAC,OAAO,CAAC,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,UAAU,GAAa,EAAE,CAAC;YAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7D;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5D;YACD,IAAI,uBAAuB,GAAG,qCAAqC,CAAC;YACpE,IAAI,gBAAgB,GAAG,8BAA8B,CAAC;YACtD,IAAI,cAAc,GAAG,qBAAqB,CAAC;YAC3C,IAAI,gBAAgB,GAAG,yCAAyC,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;YACrI,IAAI,mBAAmB,GAAG,sCAAsC,CAAC;YACjE,IAAI,4BAA4B,GAAG,0DAA0D,CAAC;YAC9F,IAAI,kBAAkB,GAAG,0CAA0C,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzG,IAAI,iBAAiB,GAAG,IAAI,uEAAsB,EAAE,CAAC;YACrD,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAChE,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACxD,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YAEtD,MAAM,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4BAA4B,GAAG,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5G,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACzD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACnD,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;YAC5E,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAEpD,IAAI,aAAa,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,oBAAoB,CAAC,CAAC;YAEtG,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,GAAG,EAAE;gBAC7D,aAAa,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,oBAAoB,EAAE,SAAS,CAAC,CAAC;aAChH;YACD,OAAO,qDAAQ,CAAC,aAAa,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAmB,CAAC;YAClE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;gBACvE,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAmB,CAAC;YAErE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;gBAC7D,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAmB,CAAC;YAErE,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;gBACrE,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAmB,CAAC;YAEpE,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,MAAM,CAAC,CAAC,CAAmB,CAAC;YACnE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAmB,CAAC;YAErE,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC;gBAC7F,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,GAAG,MAAM,CAAC,CAAC,CAAsB,CAAC;YAGrF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE;YAC7D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAA0B,EAAE,EAAE;gBACjE,UAAU,CAAC,OAAO,EAAE,CAAC;gBACrB,wBAAwB;YAC5B,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE;YAC7D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAA0B,EAAE,EAAE;gBACjE,uBAAuB;gBACvB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IACO,IAAI,CAAC,GAAyB;QAClC,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;gBACzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC1C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACjE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;iBAAM;gBACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAE7D,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE9E,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAEhI,IAAI,GAAG,CAAC,SAAS,IAAI,0DAAS,CAAC,MAAM;gBAAE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAEtF,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,IAAI,SAAS,IAAI,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvF,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAChD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;oBAC3E,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aAE7I;YAGD,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAExE,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;oBACtE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAExI;YAED,IAAI,GAAG,CAAC,UAAU,IAAI,IAAI,IAAI,GAAG,CAAC,UAAU,IAAI,SAAS,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpF,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;oBAC5C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAE1I;YAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,IAAI,SAAS,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,IAAI,GAAG,CAAC,eAAe,IAAI,SAAS,IAAI,GAAG,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5M,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC;oBACnF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;aACzJ;YAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,IAAI,SAAS,IAAI,GAAG,CAAC,sBAAsB,IAAI,IAAI,IAAI,GAAG,CAAC,sBAAsB,IAAI,SAAS,IAAI,GAAG,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnP,IAAI,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;oBAC9K,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,GAAG,IAAI,CAAC;iBACvD;aACJ;YAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,mCAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAEnG,IAAI,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,SAAS,EAAE;gBACjD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,mCAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAClG;YAED,IAAI,GAAG,CAAC,YAAY,IAAI,IAAI,EAAE;gBAE1B,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAC1I,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;iBACpG;aAEJ;YAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClE,IAAI,GAAG,CAAC,qBAAqB,IAAI,IAAI,IAAI,GAAG,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAE/D,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,KAAK,EAAE,CAAC;gBAC1C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC;aAEpF;YAED,IAAI,GAAG,CAAC,sBAAsB,IAAI,IAAI,IAAI,GAAG,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAE7E,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE;gBACtD,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,MAAM,MAAM,GAAG,GAAG,CAAC,sBAAsB,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACnD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC3F,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC5D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;aACzC;iBACI,IAAI,GAAG,CAAC,sBAAsB,IAAI,IAAI,IAAI,GAAG,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClF,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;aACvD;iBACI,IAAI,GAAG,CAAC,qBAAqB,IAAI,IAAI,IAAI,GAAG,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;aACpD;YAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAE3B;QAED,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;YACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,IAAI,CAAC;SACrD;IAEL,CAAC;IAEO,OAAO,CAAC,IAAI,EAAE,SAAS;QAC3B,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAClB,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,EAAE;gBACb,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;aACxB;iBAAM;gBACH,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACf,CAAC;IAEO,2BAA2B,CAAC,KAAK,EAAE,CAAC;QACxC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;YACrB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK;YAC1C,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC;IACN,CAAC;IAEO,gBAAgB,CAAC,MAA8B,EAAE,EAAW;QAChE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAElD,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAErC,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE;YACtD,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,MAAM,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,UAAU,IAAI;gBAChE,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACpH,CAAC,CAAC,CAAC;YACH,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACL,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,wBAAwB,EAAC,KAAI,EAAC,MAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;gBACrJ,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC;YAC/C,CAAC,CAAC,CAAC;SAEN;QACD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAGnD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC1C,CAAC;IAGO,kBAAkB,CAAC,MAAwC,EAAC,EAAU;QAC1E,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAErC,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE;YACtD,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,MAAM,MAAM,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAClD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC/D;QAED,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC1C,CAAC;IAEO,YAAY,CAAC,MAAe,EAAE,EAA0B,EAAE,EAAU;QACxE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;YACxB,wBAAwB,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC;YAC1E,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAC9C,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAChD,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAClD,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;YACxD,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACpC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACtC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACxH,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;YACtD,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IACO,cAAc,CAAC,MAAe,EAAE,EAAoC,EAAE,EAAU;QACpF,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC1H,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IAEO,mBAAmB,CAAC,EAA0B;QAClD,IAAI,EAAE,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACX,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACnB,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC3C,aAAa,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,aAAa,CAAC;gBAC/C,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAChH,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IAEO,qBAAqB,CAAC,EAAoC;QAC9D,IAAI,EAAE,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACX,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACnB,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC3C,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAChH,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IAEO,cAAc,CAAC,MAAe,EAAE,EAAoC,EAAE,EAAU;QACpF,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;YACxB,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC5H,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACtH,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IAEO,qBAAqB,CAAC,EAAoC;QAC9D,IAAI,EAAE,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACX,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACnB,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC3C,SAAS,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAChH,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IAGO,kBAAkB,CAAC,GAAyB;QAChD,IAAI,GAAG,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACtD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC;aAC7C,CAAC,CAAC;SACN;aACI,IAAI,GAAG,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,KAAK,IAAI,GAAG,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACjH,IAAI,iBAAiB,GAAmB,EAAE,CAAC;YAC3C,IAAI,GAAG,CAAC,8BAA8B,IAAI,IAAI,EAAE;gBAC5C,iBAAiB,GAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,8BAA8B,CAAC,CAAC;aACtH;YACD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC;gBAC1C,6BAA6B,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC,6BAA6B,CAAC;gBACjF,UAAU,EAAE,IAAI,0DAAW,CAAC,iBAAiB,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACrE,eAAe,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAC9H,CAAC,CAAC;SACN;IACL,CAAC;IAEO,yBAAyB,CAAC,GAAyB;QACvD,IAAI,EAAE,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC3B,GAAG,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAClC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACnB,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC3C,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aACpH,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IAKO,UAAU,CAAC,QAAgB;QAC/B,IAAI,QAAQ,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;gBAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,QAAQ,CAAC;gBACnC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9B,CAAC;gBACF,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC1B,CAAC;aAEL,CAAC,CAAC;SACN;aACI,IAAI,QAAQ,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAE5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;gBAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,QAAQ,CAAC;gBACnC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9B,CAAC;gBACF,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC1B,CAAC;aACL,CAAC,CAAC;SACN;aAEI,IAAI,QAAQ,IAAI,oEAAmB,CAAC,GAAG,EAAE;YAE1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;gBAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,QAAQ,CAAC;gBACnC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC9B,CAAC;gBACF,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAC1B,CAAC;aACL,CAAC,CAAC;SACN;IAEL,CAAC;IAEM,cAAc,CAAC,KAAK;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IACM,kBAAkB,CAAC,QAAgB;QACtC,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IACO,SAAS,CAAC,QAAgB;QAC9B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,0DAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QAEnI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,GAAG,EAAE,CAAC;QAErD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,mCAAM,CAAC,mCAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACjH,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE9D,IAAI,QAAQ,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACvC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;YACzF,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;SAC1F;aAAM;YACH,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAC,IAAI,CAAE,CAAC;YACzF,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAC,IAAI,CAAC,CAAC;YACtF,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAC,IAAI,CAAC,CAAC;SACzF;QAED,IAAI,QAAQ,IAAI,oEAAmB,CAAC,GAAG,EAAE;YAErC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,0DAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YACnI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,0DAAS,CAAC,MAAM,EAAE,CAAC,CAAC;YAClE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SAEzB;aAAM;YACH,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,0DAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,0DAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,kBAAkB;IACtB,CAAC;IAEO,iBAAiB,CAAC,SAAoB;QACpC,MAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAEvD,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oBAAoB,CAAC,SAAoB;QACvC,MAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAEvD,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oBAAoB,CAAC,gBAAmC,EAAE,mBAAsC;QACpG,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,IAAI,SAAS,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAE1F,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;QACD,IAAI,mBAAmB,IAAI,IAAI,IAAI,mBAAmB,IAAI,SAAS,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAEnG,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;IAEL,CAAC;IAEO,mBAAmB,CAAC,SAAoB;QACtC,MAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvD,OAAO,CAAC,eAAe,EAAE,CAAC;YAC1B,OAAO,CAAC,sBAAsB,EAAE,CAAC;YACjC,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;aACrC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACM,QAAQ,CAAC,kBAA0B;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,kBAAkB,IAAI,mEAAkB,CAAC,KAAK,EAAE;YAChD,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE;gBACtC,wEAAY,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,mBAAmB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBACzI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,OAAO;aACV;YACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,uBAAuB;YAC7D,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,+BAA+B;YACnH,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK;gBAAE,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO;SACP;QACJ,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE;YACjF,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;SAC7C;QACD,+DAA+D;QAC/D,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACvD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACvF,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,eAAe,EAAE,CAAC;YAClE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,sBAAsB,EAAE,CAAC;YACzE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;SACnE;aACI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAC5F,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAC1B,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAEjK,IAAI,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;YAChG,IAAI,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAE;gBAChC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAC1B,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAc,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC5J;YACD,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;aACI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,oEAAmB,CAAC,GAAG,EAAE;YAC1F,IAAI,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;YAChG,IAAI,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAE;gBAChC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAC1B,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAc,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC5J;SACJ;QAED,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YACjB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,CAAC;YAChI,CAAC,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBAC1F,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,IAAE,CAAC,CAAC,EAAE;YAEtF,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAC1B,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SAChF;QAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;QAErC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;YAC9F,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACjC;IAGL,CAAC;IACO,YAAY,CAAC,KAAa;QAC9B,IAAI,OAAO,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAE,CAAC;QACjD,IAAI,YAAY,GAAG,OAAO,CAAC,KAAc,CAAC;QAC1C,OAAO,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,CAAC;IAEO,uBAAuB;QAC3B,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,UAAU,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QAC3D,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE;YACf,IAAI,EAAE,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;gBAE1B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;oBACvE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iBAEpE;qBAAM;oBACH,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;oBACzE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,EAAE,CAAC;oBACrD,IAAI,GAAG,IAAI,CAAC;iBACf;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACO,0BAA0B;;QAC9B,IAAI,UAAU,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QAC3D,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE;YACf,IAAI,EAAE,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC1B,gBAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,0CAAE,MAAM,0CAAE,cAAc,EAAE;oBAC9D,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,aAAa,EAAE,CAAC;iBACxD;aACJ;SACJ;IACL,CAAC;IAEO,IAAI,CAAC,kBAAsC;QAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,SAAS,GAAG,IAAI,mFAAoB,EAAE,CAAC;QAC3C,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAC9C,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACrE,SAAS,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACtC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAClF,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAEjE,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAE1E,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI,SAAS,EAAE;YAC7H,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;SACzE;QAED,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAGjF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACvG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAErG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/G,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK,CAAC;QACpG,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC9C,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE;YACf,IAAI,KAAK,GAAe,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACvG,IAAI,GAAG,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,MAAM,GAAG,CAAC;YAClE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC7B,IAAI,KAAK,GAAG,IAAI,4FAA6B,EAAE,CAAC;oBAChD,KAAK,CAAC,WAAW,GAAe,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;oBACnI,KAAK,CAAC,WAAW,GAAe,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;oBACnI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,GAAG,EAAE;wBAChI,SAAS,CAAC,eAAe,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;wBAE7G,SAAS,CAAC,6BAA6B,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,KAAK,CAAC;wBACzI,IAAI,iBAAiB,GAA+B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;wBACpH,SAAS,CAAC,8BAA8B,GAAG,iBAAiB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;qBAG7G;oBACD,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC/C;aACJ;SACJ;QACD,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,OAAO,IAAE,CAAC,CAAC,EAAE;YACb,KAAK,GAAe,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YAC/F,IAAI,EAAE,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9D,IAAI,UAAU,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;YAC3D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;gBAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;wBAE7B,IAAI,KAAK,GAAG,IAAI,6FAA8B,EAAE,CAAC;wBACjD,KAAK,CAAC,WAAW,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;wBAChG,KAAK,CAAC,aAAa,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;wBAClE,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;4BAC9C,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;yBACjE;6BAAM;4BACH,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;yBAC5B;wBACD,KAAK,CAAC,SAAS,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;wBAC5F,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAChD;iBACJ;aACJ;iBACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;gBAErE,IAAI,IAAI,CAAC,uBAAuB,EAAE,EAAE;oBAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,OAAO;iBACV;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC7B,IAAI,KAAK,GAAG,IAAI,6FAA8B,EAAE,CAAC;wBACjD,KAAK,CAAC,WAAW,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;wBAChG,KAAK,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;wBAChE,KAAK,CAAC,SAAS,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;wBAC5F,SAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAChD;iBACJ;aACJ;iBACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,GAAG,EAAE;gBAEnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC7B,IAAI,KAAK,GAAG,IAAI,mFAAoB,EAAE,CAAC;wBACvC,KAAK,CAAC,WAAW,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;wBAChG,KAAK,CAAC,aAAa,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;wBACpG,KAAK,CAAC,SAAS,GAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;wBAE5F,KAAK,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;wBAChE,KAAK,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;wBACpE,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;wBACpD,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;wBACtE,KAAK,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;wBAChE,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;wBAClD,KAAK,CAAC,wBAAwB,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,KAAK,CAAC;wBACxF,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;wBAC9D,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;wBAC5D,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC/C;iBACJ;aAEJ;SACJ;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE;YACtC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,SAAS,CAAC;iBACpD,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAChC,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBAC9C,IAAI,OAAO,GAAG,SAAS,CAAC;oBACxB,IAAI,SAAS,CAAC,MAAM,IAAI,mEAAkB,CAAC,KAAK,EAAE;wBAC9C,OAAO,GAAG,cAAc;qBAC3B;oBACD,wEAAY,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,OAAO,GAAG,gBAAgB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBAC3F,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;qBACI;oBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,wEAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iBACvI;YACL,CAAC,CAAC,CAAC;SACV;aAAM;YACH,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,SAAS,CAAC;iBACpD,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAChC,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBAC9C,IAAI,OAAO,GAAG,EAAE,CAAC;oBACjB,IAAI,SAAS,CAAC,MAAM,IAAI,mEAAkB,CAAC,SAAS,EAAE;wBAClD,OAAO,GAAG,UAAU;qBACvB;yBACI,IAAI,SAAS,CAAC,MAAM,IAAI,mEAAkB,CAAC,KAAK,EAAE;wBACnD,OAAO,GAAG,cAAc;qBAC3B;oBACD,wEAAY,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,OAAO,GAAG,gBAAgB,EAAG,SAAS,EAAE,SAAS,CAAC,CAAC;oBAC5F,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;qBACI;oBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,wEAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iBACvI;YACL,CAAC,CAAC,CAAC;SACV;IACL,CAAC;IAEM,eAAe;QAClB,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,SAAS,CAAC,oEAAmB,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;YACzB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,GAAG,KAAK,CAAC;YACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;aACI;YACD,IAAI,CAAC,SAAS,CAAC,oEAAmB,CAAC,KAAK,CAAC,CAAC;SAC7C;IAEL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAEO,YAAY,CAAC,UAAU;QAC3B,OAAO,UAAU,OAAO;YACpB,OAAO,UAAU,CAAC,MAAM,CAAC,UAAU,KAAK;gBACpC,0CAA0C;gBAC1C,OAAO,KAAK,IAAI,OAAO,CAAC,EAAE;YAC9B,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IACD,aAAa,CAAC,UAAU;QACpB,OAAO,UAAU,OAAO;YACpB,OAAO,UAAU,CAAC,MAAM,CAAC,UAAU,KAAK;gBACpC,OAAO,KAAK,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE;YACjC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IAGM,eAAe,CAAC,SAAoB;QACvC,IAAI,QAAQ,GAAa,EAAE,CAAC;QACtB,MAAO,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;YAC3D,MAAM,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC3C,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,eAAe,YAAY,wDAAS,EAAE;gBACtC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,wBAAwB,CAAC,KAAa;QAEzC,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACvD,IAAI,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAChE,IAAI,mBAAmB,CAAC;QACxB,IAAI,KAAK,GAAG,CAAC,EAAE;YACX,mBAAmB,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YACpE,IAAI,kBAAkB,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YACnE,IAAI,CAAC,aAAa,IAAI,CAAC,mBAAmB,EAAE;gBACxC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;gBACxE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;aACzD;iBACI,IAAI,CAAC,aAAa,IAAI,kBAAkB,EAC7C;gBACI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;gBACxE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;aACzD;iBACI;gBACD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACtD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;aACzD;SACJ;aAAM;YACH,mBAAmB,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAChE,IAAI,mBAAmB,EAAE;gBACrB,IAAI,CAAC,aAAa,IAAI,CAAC,mBAAmB,EAAE;oBACxC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;oBACxE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;iBACzD;qBACI;oBACD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACtD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,CAAC;iBACzD;aACJ;SACJ;IAEL,CAAC;IAGM,sBAAsB,CAAC,KAAa;QACvC,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACvD,IAAI,aAAa,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAChE,IAAI,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,EAAE;YAChD,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,EAAE;gBAChC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;gBACtE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;aACvD;iBAAM;gBACH,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACpD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;aACvD;SACJ;QACD,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACM,uBAAuB,CAAC,KAAS,EAAC,KAAa;QAClD,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YAClC,IAAI,KAAK,GAAe,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACvG,IAAI,GAAG,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;YACnE,IAAI,aAAa,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YAEnG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;oBACjB,CAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC;iBACvI;aACJ;SACJ;IAEL,CAAC;IAEM,qBAAqB,CAAC,KAAY;QACrC,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACvD,IAAI,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,EAAE;YACtB,IAAI,CAAC,WAAW,EAAE;gBACd,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;aAC5E;SACJ;IACL,CAAC;IAEM,QAAQ,CAAC,OAAe;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,MAAM,IAAI,CAAC,EAC7D;YACI,OAAO;SACV;QAAA,CAAC;QACF,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACvD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACrF,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC7D,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YACpE,IAAI,WAAW,IAAI,EAAE;gBAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;YACxG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/E;aACI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAC1F,IAAI,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;YAChE,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5F,qFAAqF;YACrF,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC/D;QACD,4BAA4B;aACvB;YAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;gBAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/E;iBACI,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;gBACtE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;gBACrC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;uBACvD,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;uBAC1D,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE;oBAAE,OAAM;iBAAE;gBAE3E,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;gBACtE,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;gBACnE,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;gBACnE,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnG,CAAC,CAAC,CAAC;aACN;iBACI,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,GAAG,EAAE;gBAEpE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK;uBAC9D,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE;oBAAE,OAAM;iBAAE;gBAEvE,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAA0B,CAAC;gBAClG,SAAS,6BAA6B,CAAC,CAAC,EAAE,CAAC;oBACvC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;wBACjB,OAAO,CAAC,CAAC,CAAC;qBACb;oBACD,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;wBACjB,OAAO,CAAC,CAAC;qBACZ;oBACD,OAAO,CAAC,CAAC;gBACb,CAAC;gBACD,KAAK,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;gBAC1C,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;gBACvF,IAAI,MAAM,GAAa,EAAE,CAAC;gBAC1B,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC9E,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBACvF,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;4BACtC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9F,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;yBACjI;6BACI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;4BAC5C,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;yBAClI;wBAED,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBAC1E,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBAC7E,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBAEjE,IAAI,CAAC,IAAI,CAAC,EAAE;4BACR,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;yBAC/D;qBACJ;iBAGJ;gBACD,wBAAwB;gBACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAE3B;SACJ;IAEL,CAAC;IAEO,aAAa,CAAC,KAAY,EAAE,GAAU,EAAE,OAAc,CAAC;QAC3D,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;YAC5B,GAAG,GAAG,KAAK,CAAC;YACZ,KAAK,GAAG,CAAC,CAAC;SACb;QACD,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACM,mBAAmB,CAAC,SAAe,EAAE,KAAc;QACtD,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAEjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;SAC7G;aACI;YACW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SAC/F;IAEL,CAAC;IACO,gBAAgB,CAAC,MAAe,EAAE,QAAgB,EAAE,IAAc;QACtE,IAAI,QAAQ,IAAG,oEAAmB,CAAC,KAAK,EAAE;YACtC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBACxH,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACvG,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE;aACrC,CAAC,CAAC;SACN;aACI,IAAI,QAAQ,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBAC5G,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE;aACrC,CAAC,CAAC;SACN;aAEI,IAAI,QAAQ,IAAI,oEAAmB,CAAC,GAAG,EAAE;YAC1C,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,wBAAwB,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC7C,UAAU,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC/B,WAAW,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChC,YAAY,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACjC,eAAe,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACpC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC1B,MAAM,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC3B,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxG,cAAc,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;gBACrC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE;aACrC,CAAC,CAAC;SACN;IACL,CAAC;IAEM,oBAAoB;QACvB,IAAI,EAAE,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC7D,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACnB,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,EAAE,CAAC;gBAClC,aAAa,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aACvG,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,cAAc;QACjB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;IAC1C,CAAC;IAEM,SAAS,CAAC,MAAM;QACP,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,KAAK,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACM,iBAAiB,CAAC,MAAM;QACf,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,KAAK,EAAE,CAAC;QAEtD,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAClE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YACnE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACpE;QAED,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;IAEzD,CAAC;IAEM,YAAY,CAAC,QAAe;QACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5F,CAAC;IAEO,oBAAoB,CAAC,QAAgB;QACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;QACjG,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC7B;aACI,IAAI,QAAQ,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE;aAClC,CAAC,CAAC;SACN;aACI,IAAI,QAAQ,IAAI,oEAAmB,CAAC,KAAK,IAAI,QAAQ,IAAI,oEAAmB,CAAC,GAAG,EAAE;YAC/E,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE;gBAC/B,6BAA6B,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;gBACjD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;gBACtD,eAAe,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aAC5G,CAAC,CAAC;SACV;IAGL,CAAC;IAEM,iBAAiB;QACpB,IAAI,EAAE,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC7D,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACnB,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,EAAE,CAAC;gBAClC,aAAa,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtC,WAAW,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;aACxG,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IAIM,SAAS,CAAC,OAAe;QAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAEM,YAAY,CAAC,OAAe;QAC/B,IAAI,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAChE,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACnC,sCAAsC;gBACtC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;oBAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACtF;SACJ;aACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,oEAAmB,CAAC,KAAK,EAAE;YAErE,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACzB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;oBAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACtF;SACJ;IACL,CAAC;IAEM,QAAQ,CAAC,CAAC;QACb,OAAO,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAGM,aAAa,CAAC,MAAM;QAGvB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7B,iBAAiB;QACjB,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW;QACzC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAE,WAAW;QAE3C,IAAI,IAAI,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACvD,IAAI,GAAG,GAAqC,EAAE,CAAC;YAC/C,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,cAAc,EAAE;gBACtF,wEAAY,CAAC,QAAQ,CAAC,kDAAkD,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAChG,OAAO;aACV;YAED,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjD,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACnD,wEAAY,CAAC,QAAQ,CAAC,wDAAwD,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBACtG,OAAO;iBACV;aACJ;YAGD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9B,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;oBAAE,MAAM;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;wBACrB,wEAAY,CAAC,QAAQ,CAAC,iBAAiB,GAAG,GAAG,GAAG,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;wBAC3E,OAAO;qBACV;iBACJ;aACJ;YAED,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9B,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;oBAAE,MAAM;gBAC/B,gDAAgD;gBAChD,IAAI,KAAK,GAAG,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC;gBAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;oBACxC,IAAI,CAAC,IAAI,CAAC,EAAE;wBACR,KAAK,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC;qBAC7B;yBAAM;wBACH,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBACrF,KAAK,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC;wBACvB,GAAG,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,KAAK,CAAC,YAAY,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;qBAC9G;iBACJ;aACJ;YAED,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;SAChC;aACI,IAAI,IAAI,CAAC,mBAAmB,IAAI,oEAAmB,CAAC,GAAG,EAAE;YAE1D,uCAAuC;YACvC,IAAI,KAAK,GAA2B,EAAE,CAAC;YACvC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9B,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;oBAAE,MAAM;gBAE/B,qHAAqH;gBACrH,qEAAqE;gBACrE,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAChC,IAAI,YAAY,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,wBAAwB,EAAC,EAAE,EAAE,CAAC;gBACnE,IAAI,aAAa,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,wBAAwB,EAAE,EAAE,EAAC,CAAC;gBACrE,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;oBACrC,YAAY,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,wBAAwB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;iBACzF;qBACI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;oBAC3C,aAAa,GAAG,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,wBAAwB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;iBAC3F;gBACA,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,YAAY,GAAG;oBACf,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;iBACjF,CAAC;gBACF,2GAA2G;gBAC3G,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC/B,IAAI,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBACrC,IAAI,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAEtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrD,IAAI,IAAI,GAAG,IAAI,mFAAoB,EAAE,CAAC;oBACtC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChG,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrG,IAAI,CAAC,wBAAwB,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,wBAAwB,EAAC,CAAC,YAAY,CAAC,wBAAwB,CAAC;oBAC9I,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;oBAC9C,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;oBACpD,IAAI,CAAC,KAAK,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC;oBACjC,IAAI,CAAC,MAAM,GAAE,MAAM,CAAC;oBACpB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,cAAc,GAAG,CAAC,cAAc,IAAE,GAAG,CAAC,EAAC,MAAK,EAAC,KAAI,CAAC;oBACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBACjD,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBACtC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpB;aACJ;YAED,qCAAqC;YAErC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAChC;QAGD,wEAAY,CAAC,UAAU,CAAC,oBAAoB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAExE,CAAC;;4FAx0CQ,sBAAsB;sGAAtB,sBAAsB;kEACpB,6FAAgB;kEAChB,qEAAkB;;;;;;QCvBjC,0EACI;QADsB,kJAAY,aAAS,CAAC,CAAC,IAAC;QAC9C,sEACI;QAAA,kHACI;QAEJ,8EACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,2EAEA;QADO,+IAAU,uBAAmB,CAAC,CAAC,IAAC;QADvC,4DAEA;QAAA,2EAA4C;QAAA,iEAAK;QAAA,4DAAQ;QAC7D,4DAAM;QACN,0EACI;QAAA,4EAEA;QADO,gJAAU,uBAAmB,CAAC,CAAC,IAAC;QADvC,4DAEA;QAAA,6EAA0C;QAAA,+DAAG;QAAA,4DAAQ;QACzD,4DAAM;QACN,0EACI;QAAA,6EAEA;QADO,gJAAU,uBAAmB,CAAC,CAAC,IAAC;QADvC,4DAEA;QAAA,6EAA4C;QAAA,iEAAK;QAAA,4DAAQ;QAC7D,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,mFAKc;QAHD,8KAAmB,qBAAiB,IAAC,8HACd,6BAAyB,IADX,kHAEpB,yBAAqB,IAFD;QAGlD,4DAAc;QACd,qHAGI;QAuiBR,4DAAW;QACX,2EACI;QAAA,6EACA;QADiE,8IAAS,cAAU,IAAC;QAArF,4DACA;QAAA,8EAAmI;QAAtE,+IAAS,aAAS,CAAC,CAAC,IAAC;QAAiD,sEAAU;QAAA,4DAAS;QACtJ,8EAAqG;QAAA,kEAAM;QAAA,4DAAS;QACxH,4DAAM;QACV,4DAAM;QAEV,4DAAO;QACP,qHACI;;QAtlBE,gFAAmB;QAEZ,0DAA0B;QAA1B,0FAA0B;QAGrB,0DAA+C;QAA/C,qKAA+C;QAK8C,0DAAmB;QAAnB,4EAAmB;QAKrB,0DAAmB;QAAnB,4EAAmB;QAKjB,0DAAmB;QAAnB,4EAAmB;QAQzG,0DAA+C;QAA/C,4GAA+C;QAMjC,0DAA+J;QAA/J,iPAA+J;QA6iBvG,0DAA+C;QAA/C,4GAA+C;QAC7E,0DAA+C;QAA/C,4GAA+C;QAK5F,0DAAiB;QAAjB,+EAAiB;;6FDhkBxB,sBAAsB;cALlC,uDAAS;eAAC;gBACP,QAAQ,EAAE,+BAA+B;gBACzC,WAAW,EAAE,4CAA4C;gBACzD,SAAS,EAAE,CAAC,2CAA2C,CAAC;aAC3D;;kBAEI,uDAAS;mBAAC,6FAAgB;;kBAC1B,uDAAS;mBAAC,qEAAkB;;;;;;;;;;;;;;AExBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICgBlC,2FAAmF;;;IAEnF,yFAA+E;;ADTxF,MAAM,eAAe;IAExB,YAAoB,MAAc,EAAU,uBAAgD;QAAxE,WAAM,GAAN,MAAM,CAAQ;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QAD5F,aAAQ,GAAG,CAAC;IACoF,CAAC;IAIjG,QAAQ;QACJ,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC5D,IAAI,CAAC,IAAI,CAAC,EAAE;gBACR,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;aAErB;iBACI;gBACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;aACrB;QACL,CAAC,CAAC;IAEN,CAAC;IAEM,cAAc,CAAC,KAAK;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpE,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE9D,sBAAsB;QACtB,8DAA8D;IAClE,CAAC;;8EA1BQ,eAAe;+FAAf,eAAe;QCT5B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEACA;QAAA,2EAAwD;QAA5B,sIAAS,mBAAe,CAAC,CAAC,IAAC;QAAC,8EAAmB;QAAA,4DAAQ;QACnF,sEACA;QAAA,4EAA+C;QAA5B,uIAAS,mBAAe,CAAC,CAAC,IAAC;QAAC,6EAAiB;QAAA,4DAAQ;QAC5E,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,iKAAmD;QAEnD,6JAAiD;QACrD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAhB2D,0DAAe;QAAf,wEAAe;QAEf,0DAAe;QAAf,wEAAe;QAQjC,0DAAmB;QAAnB,mFAAmB;QAErB,0DAAmB;QAAnB,mFAAmB;;6FDTnD,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoI;AAE7H,MAAM,6BAA6B;CAGzC;AAEM,MAAM,8BAA8B;CAK1C;AACM,MAAM,oBAAoB;CAchC;AACM,MAAM,8BAA8B;CAI1C;AAMM,MAAM,oBAAoB;IAAjC;QAaI,gBAAW,GAAa,EAAE,CAAC;QAC3B,eAAU,GAAa,EAAE,CAAC;QAC1B,WAAM,GAAa,EAAE,CAAC;QACtB,iBAAY,GAAa,EAAE,CAAC;QAC5B,oBAAe,GAAa,EAAE,CAAC;QAC/B,2BAAsB,GAAsB,EAAE,CAAC;QAC/C,0BAAqB,GAAoC,EAAE,CAAC;QAC5D,2BAAsB,GAAqC,EAAE,CAAC;QAC9D,2BAAsB,GAAqC,EAAE,CAAC;QAC9D,0BAAqB,GAA2B,EAAE,CAAC;IACvD,CAAC;CAAA;AAGM,MAAM,4BAA4B;IAAzC;QAEI,eAAU,GAAmB,EAAE,CAAC;QAChC,cAAS,GAAmB,EAAE,CAAC;QAC/B,cAAS,GAAmB,EAAE,CAAC;QAC/B,aAAQ,GAAmB,EAAE,CAAC;QAC9B,eAAU,GAAmB,EAAE,CAAC;QAChC,kBAAa,GAAmB,EAAE,CAAC;QACnC,2BAAsB,GAAsB,EAAE,CAAC;QAG/C,kBAAa,GAAkB,8DAAa,CAAC,QAAQ,CAAC;QAItD,aAAQ,GAAW,CAAC,CAAC;IACzB,CAAC;CAAA;;;;;;;;;;;;;AC9ED;AAAA;AAAA;AAAA;AAAO,MAAM,gBAAgB;IAA7B;QAEI,yBAAoB,GAAmB,EAAE,CAAC;QAC1C,eAAU,GAAmB,EAAE,CAAC;QAChC,cAAS,GAAmB,EAAE,CAAC;QAC/B,aAAQ,GAAmB,EAAE,CAAC;QAC9B,kBAAa,GAAmB,EAAE,CAAC;QACnC,2BAAsB,GAAsB,EAAE,CAAC;IACnD,CAAC;CAAA;AAEM,MAAM,qBAAqB;CAWjC;AAEM,MAAM,oBAAoB;CAkBhC;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACc;AACF;AACQ;AACT;;;AAKtD,MAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACnE,CAAC;AAKK,MAAM,uBAAwB,SAAQ,sEAAW;IAcpD,YAAoB,UAAsB;QACtC,KAAK,EAAE,CAAC;QADQ,eAAU,GAAV,UAAU,CAAY;QAZnC,yBAAoB,GAAG,gCAAgC,CAAC;QACxD,yBAAoB,GAAG,gCAAgC,CAAC;QACxD,4BAAuB,GAAG,mDAAmD,CAAC;QAC9E,0BAAqB,GAAG,iCAAiC,CAAC;QAC1D,6BAAwB,GAAG,oCAAoC,CAAC;QAChE,kCAA6B,GAAG,wDAAwD,CAAC;QACzF,+BAA0B,GAAG,sCAAsC,CAAC;QACpE,uBAAkB,GAAG,0CAA0C,CAAC;QAOnE,IAAI,CAAC,oBAAoB,GAAG,IAAI,oDAAe,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,2BAA2B,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,iBAAiB,CAAC,GAAyB;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAuB,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,WAAW,CAAC;aACzF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAuB,mBAAmB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,iBAAiB,CAAC,GAAyB;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAuB,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,WAAW,CAAC;aACzF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAuB,mBAAmB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,uBAAuB;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,0BAA0B,CAAC;aAC3D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,yBAAyB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,eAAe,CAAC,UAAkB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;aAChE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,qBAAqB,CAAC,aAAqB;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,uBAAuB,GAAG,aAAa,CAAC;aACxE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,yBAAyB,CAAC,MAAW;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,wBAAwB,EAAE,MAAM,CAAC;aAClE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,2BAA2B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,kBAAkB,CAAC,aAAqB;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,IAAI,CAAC,qBAAqB,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC;aACzF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,0BAA0B,CAAC,aAAqB;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,IAAI,CAAC,6BAA6B,GAAG,aAAa,CAAC;aAC9E,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,4BAA4B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;;8FA1DQ,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFpB,MAAM;6FAET,uBAAuB;cAHnC,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfgH;AACzD;AAER;AAC4F;AAIjF;AAEoD;AAErD;AACF;;;;;;;;;;;;;;;ICiCR,0EAAgG;IAAA,uDAAkC;;IAAA,4DAAM;;;IAApH,+JAAyC;IAAmC,0DAAkC;IAAlC,qKAAkC;;;;IAFtI,qEACI;IAAA,0EAA6D;IAAA,uDAAiB;IAAA,4DAAM;IACpF,6HAAgG;IAChG,wEAAgD;IAA7C,2VAA4C;IAAC,yEAAc;IAAA,4DAAI;IACtE,4DAAK;;;IAHmB,0DAAwC;IAAxC,8JAAwC;IAAC,0DAAiB;IAAjB,iFAAiB;IAChB,0DAAiC;IAAjC,8FAAiC;;;IAGnG,qEAAqC;IAAA,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,iFAAiB;;;;IAKlD,wEAE2E;IAAxE,+TAA0B,IAAI,IAAC;IAAyC,mEAAqF;IAAA,4DAAI;;;IADjK,6FAA6B;;;;IAGhC,wEACqH;IAAlH,ucAAmE,MAAM,KAAG;IAAsC,mEAA2B;IAAA,4DAAI;;;;IAMpJ,wEACqH;IAAlH,ucAAmE,MAAM,KAAG;IAAsC,mEAA2B;IAAA,4DAAI;;;;IAhC5J,yEACI;IAAA,yEAAyB;IAAA,uDAAW;IAAA,4DAAK;IACzC,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IACzB,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,uHACI;IAIJ,uHAAqC;IAErC,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEACI;IAAA,qHAE2E;IAE3E,qHACqH;IAErH,yEACI;IAD8B,yYAAmE,MAAM,KAAG;IAC1G,oEAAkC;IACtC,4DAAI;IAEJ,qHACqH;IACzH,4DAAK;IACT,4DAAK;;;IAjCwB,0DAAW;IAAX,2EAAW;IAChC,0DAAkB;IAAlB,kFAAkB;IAClB,0DAA4B;IAA5B,4FAA4B;IAC5B,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAqB;IAArB,qFAAqB;IACrB,0DAA+B;IAA/B,8FAA+B;IAK/B,0DAAgC;IAAhC,+FAAgC;IAEhC,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAkB;IAAlB,kFAAkB;IAEf,0DAAwB;IAAxB,qFAAwB;IAIxB,0DAAwB;IAAxB,qFAAwB;IAOxB,0DAAwB;IAAxB,qFAAwB;;;IAuBvE,0EACI;IAAA,0EACI;IAAA,qEAA2B;IAC3B,0EAAuB;IAAA,qEAAU;IAAA,4DAAM;IAC3C,4DAAM;IACV,4DAAM;;;IAckB,sEACI;IAAA,8FACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,sIACI;IAER,4DAAM;;;IAHG,0DAAuE;IAAvE,yIAAuE;;;IAgB5E,sEACI;IAAA,oFACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,uIACI;IAER,4DAAM;;;IAHG,0DAA6D;IAA7D,+HAA6D;;;;;IA3BtF,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,4EAAkC;IAAA,+EAAoB;IAAA,4DAAQ;IAC9D,yFAI0B;IAC1B,gIACI;IAIR,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,6EAAwB;IAAA,sEAAU;IAAA,4DAAQ;IAC1C,+FAK0B;IADD,gXAAsC;IAC/D,4DAA0B;IAC1B,kIACI;IAIR,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,6EAAuB;IAAA,uEAAW;IAAA,4DAAQ;IAC1C,+FAO0B;IAJD,gXAAsC;IAI/D,4DAA0B;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,6EAAsB;IAAA,sEAAU;IAAA,4DAAQ;IACxC,+FAQ0B;IAHD,+WAAqC;IAG9D,4DAA0B;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAA2B;IAAA,4EAAgB;IAAA,4DAAQ;IACnD,+FAQ0B;IAHD,oXAA0C;IAGnE,4DAA0B;IAE9B,4DAAM;IACV,4DAAM;IAEN,2EACI;IAAA,2EACI;IAAA,6EAAoC;IAAA,oFAAwB;IAAA,4DAAQ;IACpE,uFAIuB;IAC3B,4DAAM;IACV,4DAAM;IAEN,2EACI;IAAA,2EACI;IAAA,yEAAO;IAAA,gEAAI;IAAA,4DAAQ;IACnB,6EAGJ;IAFW,gWAAqC;IAD5C,4DAGJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,yEAAO;IAAA,8DAAE;IAAA,4DAAQ;IACjB,6EAGJ;IAF+B,8VAAmC;IAD9D,4DAGJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,0EACI;IAAA,2EACI;IAAA,2EACI;IAAA,wEACA;IAAA,6EACI;IAAA,2EACJ;IAAA,4DAAQ;IACZ,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,8EAAsF;IAAxB,uUAAuB;IAAC,wEAAY;IAAA,4DAAS;IAC3G,8EAAqL;IAAjC,8YAAsB,WAAS,IAAC;IAAC,iEAAK;IAAA,4DAAS;IACvM,4DAAM;IACV,4DAAM;IAEV,4DAAM;;;IArHmC,0DAAwC;IAAxC,iGAAwC;IAG5D,0DAA0H;IAA1H,kMAA0H;IAYtG,0DAAwC;IAAxC,iGAAwC;IAI5D,0DAAsG;IAAtG,8KAAsG;IAStG,0DAA6D;IAA7D,oKAA6D;IAIrC,0DAAkC;IAAlC,2FAAkC;IAW1D,0DAA6D;IAA7D,oKAA6D;IAIrC,0DAAoC;IAApC,oGAAoC;IAexC,0DAAoC;IAApC,oGAAoC;IAevC,0DAAkC;IAAlC,kGAAkC;IAYjD,0DAAuB;IAAvB,gFAAuB;IAMwC,0DAAmB;IAAnB,mFAAmB;IAkBA,2DAAsD;IAAtD,6JAAsD;;ADpMhK,MAAM,oBAAoB;IA0B7B,YAAoB,EAAe,EAAU,uBAAgD,EACjF,aAA4B,EAAU,oBAA0C,EAAU,GAAsB;QADxG,OAAE,GAAF,EAAE,CAAa;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QACjF,kBAAa,GAAb,aAAa,CAAe;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAxBrH,cAAS,GAAY,KAAK,CAAC;QAElC,cAAS,GAAQ,EAAE,CAAC;QACpB,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QACjC,6BAAwB,GAAG,EAAE,CAAC;QAE9B,+BAA0B,GAAG,EAAE,CAAC;QAQhC,8BAAyB,GAAsB,EAAE,CAAC;QAElD,uBAAkB,GAAG,KAAK,CAAC;QAC3B,qBAAgB,GAAG,KAAK,CAAC;QACzB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,2BAAsB,GAAG,KAAK,CAAC;QAE/B,oBAAe,GAA2B,EAAE,CAAC;QAKpD,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACd,iBAAY,GAAW,sBAAsB,CAAC;QAC9C,mBAAc,GAAW,yBAAyB,CAAC;QACnD,kBAAa,GAAY,KAAK,CAAC;QAC/B,mBAAc,GAAY,KAAK,CAAC;IAPyF,CAAC;IASjI,QAAQ;QACJ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,sEAAc,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACjE,IAAI,CAAC,wBAAwB,GAAG;YAC5B,eAAe,EAAE,IAAI;YACrB,wBAAwB,EAAE,IAAI;YAC9B,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG;YAC3B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QAEF,IAAI,CAAC,0BAA0B,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,QAAQ;YACd,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,qBAAqB,EAAE,QAAQ;YAC/B,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,MAAM;YAChB,kBAAkB,EAAE,IAAI;YACxB,cAAc,EAAE,CAAC;YACjB,OAAO,EAAE,MAAM;SAClB,CAAC;QAEF,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC7C,IAAI,CAAC,kCAAkC,EAAE,CAAC;IAC9C,CAAC;IACD,WAAW;QACP,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACtC,CAAC;IACD,eAAe;QACX,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACrC,CAAC;IAIM,mBAAmB,CAAC,MAAc,EAAE,mBAA2B,EAAE,IAAY;QAChF,IAAI,SAAS,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QACzF,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IAEO,UAAU;QACd,IAAI,IAAI,CAAC,OAAO,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,6EAAgB,EAAE,CAAC;SACzC;QAED,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjB,oBAAoB,EAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChG,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3E,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAChD,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAC1D,sBAAsB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;YAC5E,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,UAAU,EAAE,KAAK;SACpB,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB,CAAC,aAAqB;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,aAAa,CAAC;aACzD,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gBAC1B,wEAAY,CAAC,UAAU,CAAC,6CAA6C,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAC7F,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,iBAAiB,CAAC,IAAS;QAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACzD,QAAQ,IAAI,CAAC,EAAE,EAAE;YACb,KAAK,CAAC,EAAE,QAAQ;gBACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,MAAM;YACV,KAAK,CAAC,EAAE,WAAW;gBACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;YACV,KAAK,CAAC,EAAE,SAAS;gBACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;SACb;QACD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAEM,gBAAgB,CAAC,IAAS;QAC7B,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACvC,CAAC;IAEM,kBAAkB,CAAC,IAAS;QAC/B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACvC,CAAC;IAEM,iBAAiB,CAAC,IAAS;QAC9B,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACvC,CAAC;IAEM,mBAAmB,CAAC,IAAS;QAChC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACvC,CAAC;IAEM,2BAA2B;QAC9B,IAAI,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;QAC3F,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9D,CAAC;IAEO,aAAa;QACjB,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YAChE,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC;QACpC,CAAC,EAAC,CAAC;IACP,CAAC;IAEO,uBAAuB;QAC3B,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YAC7E,IAAI,CAAC,uBAAuB,GAAG,MAAM,IAAI,CAAC;QAC9C,CAAC,EAAC,CAAC;IACP,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAO,QAAwB,EAAE,EAAE,CAAC;YACvE,IAAI,CAAC,WAAW,GAAG,MAAM,QAAQ,CAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,EAAC,CAAC;IACX,CAAC;IAEO,oBAAoB;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YACvE,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,EAAC,CAAC;IACP,CAAC;IAEO,gBAAgB,CAAC,SAAiB;QAEtC,IAAI,WAAW,GAAa,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAa,EAAE,CAAC;QAE9B,IAAI,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;QAC1F,IAAI,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,IAAI,SAAS,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7F,WAAW,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAClD;QAED,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAuB,CAAC;QACxF,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,IAAI,SAAS,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1F,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAChD;QAED,IAAI,iBAAiB,GAAG,IAAI,uEAAsB,EAAE,CAAC;QACrD,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;QACxC,iBAAiB,CAAC,UAAU,GAAG,WAAW,CAAC;QAC3C,iBAAiB,CAAC,SAAS,GAAG,UAAU,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qBAAqB;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAuB,CAAC;QAClG,IAAI,qBAAqB,IAAI,SAAS,IAAI,qBAAqB,IAAI,IAAI,EAAE;YACrE,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;gBAC1H,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAC3B,CAAC,EAAC,CAAC;SACN;IACL,CAAC;IAEM,uBAAuB,CAAC,IAAS;QACpC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IACxE,CAAC;IAEM,0BAA0B,CAAC,IAAS;QACvC,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;IACxC,CAAC;IAEM,qBAAqB,CAAC,IAAS;QAClC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IACxE,CAAC;IAED,UAAU;QACN,CAAC,CAAC,8BAA8B,CAAC,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;QAChE,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACrC,CAAC;IAED,WAAW;QACP,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,SAAS;QACL,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACjC,CAAC,CAAC,8BAA8B,CAAC,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;IACpE,CAAC;IAED,yBAAyB;QACrB,IAAI,KAAK,GAAG,IAAI,kFAAqB,EAAE,CAAC;QAExC,IAAI,4BAA4B,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,KAAuB,CAAC;QAChH,IAAI,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;QAC5F,IAAI,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;QAC1F,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAuB,CAAC;QACxF,IAAI,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAuB,CAAC;QAClG,IAAI,6BAA6B,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAA0B,CAAC;QAEtH,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/D,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC;QAEtE,IAAI,4BAA4B,IAAI,IAAI,IAAI,4BAA4B,IAAI,SAAS,IAAI,4BAA4B,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9H,IAAI,sBAAsB,GAAG,4BAA4B,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACzE,KAAK,CAAC,sBAAsB,GAAG,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnE;QAED,IAAI,kBAAkB,IAAI,IAAI,IAAI,kBAAkB,IAAI,SAAS,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YAChG,IAAI,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrD,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC/C;QAED,IAAI,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,IAAI,SAAS,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7F,IAAI,WAAW,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACnD,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC7C;QAED,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,IAAI,SAAS,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1F,IAAI,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjD,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC3C;QAED,IAAI,qBAAqB,IAAI,IAAI,IAAI,qBAAqB,IAAI,SAAS,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;YACzG,IAAI,eAAe,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC3D,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrD;QAED,IAAI,6BAA6B,IAAI,IAAI,IAAI,6BAA6B,IAAI,SAAS,IAAI,6BAA6B,CAAC,MAAM,GAAG,CAAC,EAAE;YACjI,IAAI,mBAAmB,GAAG,6BAA6B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC;YAC3F,IAAI,WAAW,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrD,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE1C,IAAI,kBAAkB,GAAG,6BAA6B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC;YAC3F,IAAI,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrD,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC/C;QAGD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3E,IAAI,CAAC,SAAS,GAAG,KAAK;YACtB,IAAG,IAAI,IAAI,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC;gBACrB,IAAI,CAAC,eAAe,GAAG,IAA8B,CAAC;aACzD;YAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAE1B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0BAA0B;QAC9B,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAA0B,EAAE,EAAE;gBACjE,UAAU,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IACD,WAAW,CAAC,MAAM;QACd,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChE,CAAC;IAED,SAAS,CAAC,MAAM;QACZ,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IAED,kCAAkC;QAC9B,IAAI,aAAa,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG;YACb,GAAG,EAAE,0BAA0B;YAC/B,OAAO,EAAE;gBACL,EAAE,MAAM,EAAE,QAAQ,EAAE;gBACpB,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE;gBAChD,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE;gBACtE,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE;gBAChG,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE;aACpD;YACD,UAAU,EAAE,oBAAoB;YAChC,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SAChE,CAAC;IAEN,CAAC;;wFA3WQ,oBAAoB;oGAApB,oBAAoB;kEAElB,qEAAkB;;;;;;QCtBjC,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACgC;QADiI,oRAAS,UAAQ,IAAC;QACnJ,kEAAyC;QAAA,kEAAO;QAAA,4DAAI;QACxF,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EAAuC;QAAA,8DAAE;QAAA,4DAAK;QAC9C,0EAAyB;QAAA,sEAAU;QAAA,4DAAK;QACxC,0EAAmC;QAAA,gFAAoB;QAAA,4DAAK;QAC5D,0EAAyB;QAAA,sEAAU;QAAA,4DAAK;QACxC,0EAAyB;QAAA,sEAAU;QAAA,4DAAK;QACxC,0EAA0B;QAAA,kEAAM;QAAA,4DAAK;QACrC,0EAAwB;QAAA,uEAAW;QAAA,4DAAK;QACxC,0EAAuB;QAAA,sEAAU;QAAA,4DAAK;QACtC,0EAA4B;QAAA,4EAAgB;QAAA,4DAAK;QACjD,0EAAwB;QAAA,uEAAW;QAAA,4DAAK;QACxC,0EAAyB;QAAA,yEAAa;QAAA,4DAAK;QAC3C,0EAAyB;QAAA,yEAAa;QAAA,4DAAK;QAC3C,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,mHACI;QAkCR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAWN,mHACI;QAMJ,iNACI;QA+HR,4DAAO;;;QA/ND,8FAAiC;QAGc,0DAAyB;QAAzB,2EAAyB;QAYuB,2DAAuB;QAAvB,oFAAuB;QAmBhF,2DAAkD;QAAlD,wFAAkD;QAsDtE,0DAAiB;QAAjB,+EAAiB;;6FDpE5B,oBAAoB;cALhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,6BAA6B;gBACvC,WAAW,EAAE,0CAA0C;gBACvD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACzD;;kBAGI,uDAAS;mBAAC,qEAAkB;;;;;;;;;;;;;;AEtBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACS;AACX;AACU;AACK;AAC0B;AACN;AAC1B;AACQ;AACoB;AACT;;;AAEzE,MAAM,KAAK,GAAW;IAClB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAe,EAAE;IACxC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,wEAAe,EAAE;CACpE;AAmBM,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAVtB;YACL,4DAAY;YACZ,mEAAY;YACZ,0DAAW;YACX,mEAAgB;YAChB,yEAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC5B,uFAAwB;SAC3B;mIAEQ,sBAAsB,mBAf3B,wEAAe;QACf,kGAAsB;QACtB,4FAAoB;QACpB,8FAAgB,aAGhB,4DAAY;QACZ,mEAAY;QACZ,0DAAW;QACX,mEAAgB;QAChB,yEAAe,gEAEf,uFAAwB;6FAGnB,sBAAsB;cAjBlC,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,wEAAe;oBACf,kGAAsB;oBACtB,4FAAoB;oBACpB,8FAAgB;iBACnB;gBACD,OAAO,EAAE;oBACL,4DAAY;oBACZ,mEAAY;oBACZ,0DAAW;oBACX,mEAAgB;oBAChB,yEAAe;oBACf,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC5B,uFAAwB;iBAC3B;aACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnC2K;AAC3E;AAEzC;AAES;AAC2E;AAIjF;AAC1B;AACoB;AAEwE;;;;;;;;;;;;;ICV7G,0EACI;IAAA,sEAA0C;IAC9C,4DAAM;;;IAKE,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAA+C;IAA/C,gHAA+C;;;IAiBhD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAAgD;IAAhD,iHAAgD;;;IAyBjD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAA+C;IAA/C,gHAA+C;;;IAepD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAA+C;IAA/C,gHAA+C;;;IAepD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAA8C;IAA9C,+GAA8C;;;IAevD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAAmD;IAAnD,oHAAmD;;;IA8BhD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAA+C;IAA/C,gHAA+C;;;IA6ChE,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHACI;IAER,4DAAM;;;IAHG,0DAAgD;IAAhD,iHAAgD;;;IAyBrC,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,2HACI;IAEJ,2HACI;IAER,4DAAM;;;IANG,0DAAqD;IAArD,uHAAqD;IAGrD,0DAAoD;IAApD,sHAAoD;;;IAQzD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,2HACI;IAEJ,2HACI;IAER,4DAAM;;;IANG,0DAAmD;IAAnD,qHAAmD;IAGnD,0DAAkD;IAAlD,oHAAkD;;;IAQvD,sEACI;IAAA,sEACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IANV,0EACI;IAAA,2HACI;IAEJ,2HACI;IAER,4DAAM;;;IANG,0DAAmD;IAAnD,qHAAmD;IAGnD,0DAAkD;IAAlD,oHAAkD;;;IAK3D,0EACI;IAAA,2EACJ;IAAA,4DAAM;;;IAlD9B,yEACI;IAAA,0EACI;IAAA,4EACI;IAAA,wEACI;IAAA,qEACI;IAAA,yEAAgB;IAAA,sEAAW;IAAA,4DAAK;IACpC,4DAAK;IACL,qEACI;IAAA,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,sEAAI;IAAA,oEAAQ;IAAA,4DAAK;IACrB,4DAAK;IACT,4DAAQ;IACR,yEACI;IAAA,sEACI;IAAA,sEACI;IAAA,wEACA;IAAA,qHACI;IAOR,4DAAK;IACL,sEACI;IAAA,wEACA;IAAA,qHACI;IAOR,4DAAK;IACL,sEACI;IAAA,wEACA;IAAA,qHACI;IAQJ,qHACI;IAER,4DAAK;IACT,4DAAK;IACT,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACV,4DAAM;;;IAvCuB,2DAAsF;IAAtF,8JAAsF;IAWtF,0DAAkF;IAAlF,0JAAkF;IAWlF,0DAAkF;IAAlF,0JAAkF;IASlF,0DAA+J;IAA/J,yPAA+J;;;IAcpL,0EACI;IAAA,4FACJ;IAAA,4DAAM;;;IAQF,uEAAiC;IAAA,8DAAG;IAAA,4DAAO;;;IAC3C,uEAAiC;IAAA,gEAAK;IAAA,4DAAO;;;;IANrD,0EACI;IAAA,6EAGI;IADI,0TAAuB;IAC3B,mEACA;IAAA,sHAAiC;IACjC,sHAAiC;IACjC,kEACJ;IAAA,4DAAS;IACb,4DAAM;;;IAPM,0DAA8B;IAA9B,+FAA8B;IAG5B,0DAA0B;IAA1B,8FAA0B;IAC1B,0DAA0B;IAA1B,8FAA0B;;;IA6BxC,0EACI;IAAA,sEAA0C;IAC9C,4DAAM;;;;IAtBtB,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,yEAAwB;IAAA,6EAAkB;IAAA,4DAAK;IAC/C,iFAEI;IADuB,yTAAsB;IAC7C,mEAAqC;IACzC,4DAAS;IACb,4DAAM;IACN,0EACI;IAAA,2EACI;IAAA,uEAA8C;IAC9C,yEAA0E;IAAzD,8TAA+B;IAA0B,qFAAyB;IAAA,4DAAI;IACvG,iEACA;IAAA,wEAAM;IAAA,+HAAmE;IAAA,4DAAO;IACpF,4DAAM;IACN,2EACI;IAAA,6EACJ;IAD2C,qVAA2C;IAAlF,4DACJ;IAAA,4DAAM;IACN,qHACI;;IAER,4DAAM;IACN,2EACI;IAAA,8EAEI;IADI,oUAAgC;IACpC,oEACJ;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAZe,2DAAkC;IAAlC,4JAAkC;;;;;ADhQhD,MAAM,gBAAgB;IAsDzB,YAAoB,EAAe,EAAU,oBAA0C,EAAU,uBAAgD,EACrI,aAA4B,EAAU,uBAAgD;QAD9E,OAAE,GAAF,EAAE,CAAa;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QACrI,kBAAa,GAAb,aAAa,CAAe;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QApDxF,oBAAe,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC1C,wBAAmB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC9C,kBAAa,GAAG,IAAI,0DAAY,EAAO,CAAC;QAK3C,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAExC,6BAAwB,GAAG,EAAE,CAAC;QAE9B,+BAA0B,GAAG,EAAE,CAAC;QAIhC,aAAQ,GAAY,IAAI,CAAC;QAWzB,8BAAyB,GAAsB,EAAE,CAAC;QAClD,mCAA8B,GAAsB,EAAE,CAAC;QAEvD,uBAAkB,GAAG,KAAK,CAAC;QAC3B,qBAAgB,GAAG,KAAK,CAAC;QACzB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,2BAAsB,GAAG,KAAK,CAAC;QAE/B,kBAAa,GAAW,EAAE,CAAC;QAC3B,0BAAqB,GAAY,KAAK,CAAC;QACvC,sBAAiB,GAAW,OAAO,CAAC,CAAC,MAAM;QAC3C,sBAAiB,GAAW,KAAK,CAAC;QAClC,qBAAgB,GAAW,IAAI,CAAC;QAChC,yBAAoB,GAAY,KAAK,CAAC;QAEtC,gBAAW,GAAG,KAAK,CAAC;QAEpB,yBAAoB,GAAG,+CAA+C,CAAC;QACvE,2BAAsB,GAAG,eAAe,CAAC;QAEzC,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,cAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;IAGsE,CAAC;IAEvG,QAAQ;QACJ,IAAI,CAAC,gBAAgB,GAAG,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,sEAAc,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACjE,IAAI,CAAC,wBAAwB,GAAG;YAC5B,eAAe,EAAE,IAAI;YACrB,wBAAwB,EAAE,IAAI;YAC9B,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG;YAC3B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QAEF,IAAI,CAAC,0BAA0B,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,iCAAiC;YACvC,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,qBAAqB,EAAE,QAAQ;YAC/B,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,MAAM;YAChB,kBAAkB,EAAE,IAAI;YACxB,cAAc,EAAE,CAAC;YACjB,OAAO,EAAE,MAAM;SAClB,CAAC;QAEF,IAAI,EAAE,GAAG,mCAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,8DAAa,CAAC,QAAQ,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,8DAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC/C,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,0DAAS,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,uBAAsB;YAChH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,0DAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,CAAC,CAAC;YACvG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,gCAAgC;SACnC;QACD,IAAI,CAAC,gBAAgB,CAAC,0DAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEnD,kDAAK,CACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,YAAY,CAC5C;aACI,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,+DAAQ,EAAE,CAAC;aACjC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAa,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC;QAGP,kDAAK,CACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,YAAY,CAC5C;aACI,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,+DAAQ,EAAE,CAAC;aACjC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAa,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC;QAEP,kDAAK,CACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,YAAY,CAC3C;aACI,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,+DAAQ,EAAE,CAAC;aACjC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAa,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;QAEP,kDAAK,CACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,YAAY,CAChD;aACI,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,+DAAQ,EAAE,CAAC;aACjC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAa,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC3G,CAAC,CAAC,CAAC;QAEP,kDAAK,CACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,YAAY,CACzD;aACI,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,+DAAQ,EAAE,CAAC;aACjC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAa,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC;QAGP,kDAAK,CACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,YAAY,CAC7C;aACI,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,EAAE,+DAAQ,EAAE,CAAC;aACjC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAa,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzG,CAAC,CAAC,CAAC;QAGP,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,mCAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAE3E,CAAC;IAGD,WAAW,CAAC,MAAqB;QAC7B,IAAI,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,eAAe,CAAC,YAAY,EAAE;YAC/D,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC;YAC3D,IAAI,MAAM,CAAC,eAAe,CAAC,aAAa,IAAI,MAAM,CAAC,eAAe,CAAC,YAAY,IAAI,MAAM,CAAC,eAAe,CAAC,aAAa,EAAE;aAExH;SACJ;QAED,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE;YACrD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC;YACjD,IAAI,MAAM,CAAC,UAAU,CAAC,aAAa,IAAI,MAAM,CAAC,UAAU,CAAC,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE;gBACtG,uBAAuB;aAC1B;SACJ;IAEL,CAAC;IAEO,UAAU;QACd,IAAI,IAAI,CAAC,OAAO,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,+GAA4B,EAAE,CAAC;SACrD;QAED,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjB,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAC1D,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACtD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvE,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3E,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAChD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3E,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjF,sBAAsB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,8BAA8B,CAAC;YAC5E,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAChD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzE,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAC9C,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC5G,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC1G,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;SAE7G,CAAC,CAAC;IACP,CAAC;IAEM,YAAY,CAAC,KAAU;QAC1B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE;YAC3I,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,mCAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;SAClF;IACL,CAAC;IAEM,UAAU,CAAC,KAAU;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAGM,mBAAmB,CAAC,GAAW;QAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,2BAA2B;QAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,iBAAiB,GAAmB,EAAE,CAAC;QAC3C,IAAI,gBAAgB,GAAmB,EAAE,CAAC;QAE1C,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;QACzE,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAuB,CAAC;QAEvE,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC9H,IAAI,CAAC,aAAa,CAAC,8DAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAClD;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAClJ;QAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAEtC,CAAC;IACM,iBAAiB,CAAC,IAAS;QAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAElD,QAAQ,IAAI,CAAC,EAAE,EAAE;YACb,KAAK,CAAC,EAAE,QAAQ;gBACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,gCAAgC;gBAChC,qBAAqB;gBACrB,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB;gBAC/I,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,8DAAa,CAAC,QAAQ,CAAC,CAAC;gBAElE,MAAM;YACV,KAAK,CAAC,EAAE,WAAW;gBACf,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAExH,MAAM;YACV,KAAK,CAAC,EAAE,SAAS;gBACb,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAExH,MAAM;SACb;QAED,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAEpE,CAAC;IAEM,cAAc,CAAC,IAAS,EAAE,IAAS;QACtC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAClD,iDAAiD;IACrD,CAAC;IACM,cAAc,CAAC,IAAS,EAAE,IAAS;QACtC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAClD,iDAAiD;QACjD,2BAA2B;QAE3B,IAAI,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;QAC7E,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAuB,CAAC;QAE3E,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,0DAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;SACxD;QACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,gBAAgB,CAAC,0DAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;SACvD;QAED,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC9H,IAAI,CAAC,aAAa,CAAC,8DAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAClD;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACtL;QAED,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACjD,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;oBAC5F,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;oBACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtC,CAAC,EAAC,CAAC;aACN;YACD,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SACnE;aAAM;YACH,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACnE;IAEL,CAAC;IAEM,aAAa,CAAC,IAAS,EAAE,IAAS;QACrC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAGM,gBAAgB,CAAC,IAAS,EAAE,IAAS;QACxC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACM,4BAA4B,CAAC,IAAS,EAAE,IAAS;QACpD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC7C,iDAAiD;IACrD,CAAC;IAEM,kBAAkB,CAAC,IAAS,EAAE,IAAS;QAC1C,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC3D,2BAA2B;QAC3B,IAAI,CAAC,sBAAsB,GAAG,KAAK;QACnC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAuB,CAAC;QACrF,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;gBACzF,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBACrF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC,EAAC,CAAC;SACN;IAEL,CAAC;IAEM,gBAAgB,CAAC,kBAA0B;QAC9C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,mBAAmB;QACnB,IAAI,CAAC,kCAAkC,CAAC,kBAAkB,CAAC,CAAC;QAC5D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACpB,mFAAmF;YACnF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAEM,qBAAqB;QACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,mBAAmB;QACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,uBAAuB;QAC9D,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,kCAAkC;QAErG,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACnD,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,CAAC;YACxE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAC,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;SACzE;QAED,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;QAEnE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/E,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACjD,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,sBAAsB,EAAE,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,sBAAsB,EAAE,CAAC;QAC1D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAIO,oBAAoB,CAAC,gBAAmC,EAAE,mBAAsC;QACpG,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,IAAI,SAAS,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAE1F,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;QACD,IAAI,mBAAmB,IAAI,IAAI,IAAI,mBAAmB,IAAI,SAAS,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAEnG,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;IAEL,CAAC;IAEO,kCAAkC,CAAC,QAAgB;QAEvD,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,kCAAkC;QAErG,IAAI,QAAQ,IAAI,mEAAkB,CAAC,KAAK,EAAE;YACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,uBAAuB;YAC9D,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,gCAAgC;SACtG;aACI,IAAI,QAAQ,IAAI,mEAAkB,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;YACnE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;YAC/E,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;YACxE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YACtE,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;gBACjD,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;gBAClE,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;aACrE;YAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,sBAAsB,EAAE,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,aAAa,EAAE,CAAC;SAEhD;IACL,CAAC;IAEO,mBAAmB,CAAC,SAAoB;QACtC,MAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvD,OAAO,CAAC,eAAe,EAAE,CAAC;YAC1B,OAAO,CAAC,sBAAsB,EAAE,CAAC;YACjC,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;aACrC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oBAAoB,CAAC,SAAoB;QACvC,MAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAEvD,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;aACtC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAGM,WAAW;QACd,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAGO,WAAW;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;aAC3B,SAAS,CAAC,CAAO,QAAwB,EAAE,EAAE,CAAC;YAC3C,IAAI,CAAC,WAAW,GAAG,MAAM,QAAQ,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,EAAC,CAAC;IACX,CAAC;IAEO,aAAa;QACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YAChE,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;gBAClD,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,oEAAmB,CAAC,GAAG,CAAC;aAC9E;iBAAM;gBACH,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,EAAC,CAAC;IACP,CAAC;IAEO,oBAAoB;QACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YACvE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,EAAC,CAAC;IACP,CAAC;IAEO,aAAa,CAAC,aAAoB,EAAE,UAAkB;QAC1D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACzD,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,aAAa,EAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YAC3F,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,EAAC,CAAC;IACP,CAAC;IAED,+JAA+J;IACvJ,gBAAgB,CAAC,SAAiB;QACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,WAAW,GAAa,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAa,EAAE,CAAC;QAE9B,IAAI,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;QAC7E,IAAI,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,IAAI,SAAS,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7F,WAAW,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAClD;QAED,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAuB,CAAC;QAC3E,IAAI,gBAAgB,IAAI,IAAI,IAAI,gBAAgB,IAAI,SAAS,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1F,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAChD;QAED,IAAI,iBAAiB,GAAG,IAAI,uEAAsB,EAAE,CAAC;QACrD,iBAAiB,CAAC,SAAS,GAAG,SAAS,CAAC;QACxC,iBAAiB,CAAC,UAAU,GAAG,WAAW,CAAC;QAC3C,iBAAiB,CAAC,SAAS,GAAG,UAAU,CAAC;QACzC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAO,IAAI,EAAE,EAAE,CAAC;YACpF,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,EAAC,CAAC;IACP,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IAC7D,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;IACvC,CAAC;IAED,IAAI,gBAAgB;QAChB,IAAI,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;QAE/E,OAAO,kBAAkB,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IAEjQ,CAAC;IAEM,WAAW,CAAC,KAAa;QAC5B,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;YACvD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IACnC,CAAC;IAEO,aAAa,CAAC,KAAa,EAAE,GAAW,EAAE,OAAe,CAAC;QAC9D,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;YAC5B,GAAG,GAAG,KAAK,CAAC;YACZ,KAAK,GAAG,CAAC,CAAC;SACb;QACD,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACM,mBAAmB;QACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,QAAgB,CAAC;QACrB,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACnD,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;aACI,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACtD,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACxC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACjC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACpC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1B,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACpC;QACD,IAAI,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAuB,CAAC;QAC/E,IAAI,GAAG,GAAG,GAAG,CAAC;QACd,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACjD,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;YACrD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAA0B,CAAC;YACjF,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAuB,CAAC;YACtE,IAAI,MAAM,GAAa,EAAE,CAAC;YAC1B,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE,GAAG,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,GAAC,CAAC,CAAC,GAAG,GAAG,GAAI,IAAI,CAAC;iBAC5O;aAEJ;SACJ;QAED,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACnD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YACrD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YAClD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YAClD,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACnD,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;YACvE,CAAC,CAAC,CAAC;SACN;QAGD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC1C,MAAM,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC;QACnB,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,KAAK,EAAE;YACnD,CAAC,CAAC,QAAQ,GAAG,sCAAsC,CAAC;SACvD;aACI,IAAI,IAAI,CAAC,eAAe,IAAI,oEAAmB,CAAC,GAAG,EAAE;YACtD,CAAC,CAAC,QAAQ,GAAG,oCAAoC,CAAC;SACrD;QACD,CAAC,CAAC,KAAK,EAAE,CAAC;QACV,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAIO,YAAY,CAAC,QAAQ;QACzB,uCAAuC;QACvC,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QAE7C,qCAAqC;QACrC,IAAI,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAO,2BAA2B;QAEtE,IAAI,QAAQ,KAAK,EAAE,IAAI,GAAG,GAAG,CAAC,EAAa,+BAA+B;YACtE,OAAO,EAAE,CAAC,CAA6B,yCAAyC;QAEpF,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAY,iCAAiC;IAChF,CAAC;IAGM,oBAAoB;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAClB,OAAO;QAEX,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;gBACzB,OAAO;aACV;YACD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjC,IAAI,MAAM,GAAe,IAAI,UAAU,EAAE,CAAC;QAC1C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;YAClB,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAgB,CAAC,CAAC;YACjD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC;IAEL,CAAC;IAEM,WAAW,CAAC,IAAU;QACzB,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,IAAI,EAAE,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,KAAK,EAAE;YACpG,wEAAY,CAAC,QAAQ,CAAC,0CAA0C,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YACxF,OAAO,GAAG,KAAK,CAAC;YAChB,OAAO,OAAO,CAAC;SAClB;QAED,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE;YACpC,wEAAY,CAAC,QAAQ,CAAC,8DAA8D,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAC5G,OAAO,GAAG,KAAK,CAAC;YAChB,OAAO,OAAO,CAAC;SAClB;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,YAAY,CAAC,UAAU;QAC3B,OAAO,UAAU,OAAO;YACpB,OAAO,UAAU,CAAC,MAAM,CAAC,UAAU,KAAK;gBACpC,0CAA0C;gBAC1C,OAAO,KAAK,IAAI,OAAO,CAAC,EAAE;YAC9B,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;;gFArtBQ,gBAAgB;gGAAhB,gBAAgB;;;;;;QC1B7B,0EACI;QAAA,8EACI;QAAA,yEACI;QAAA,yEACI;QAAA,4GACI;;QAEJ,yEACI;QAAA,wEAAO;QAAA,qEAAU;QAAA,4DAAQ;QACzB,sEACA;QAAA,8GACI;QAIR,4DAAM;QACN,0EACQ;QAAA,4EAAwB;QAAA,sEAAU;QAAA,4DAAQ;QAC1C,8FAQ0B;QADD,sKAAY,6BAAyB,IAAC;QAC/D,4DAA0B;QAC1B,8GACI;QAIZ,4DAAM;QACE,2EACI;QAAA,6EAAuB;QAAA,8EAAkB;QAAA,4DAAQ;QACjD,0FAK0B;QAC9B,4DAAM;QACN,2EACI;QAAA,6EAAsB;QAAA,2EAAe;QAAA,4DAAQ;QAC7C,0FAM0B;QAE1B,8GACI;QAIR,4DAAM;QACN,2EACI;QAAA,6EAAuB;QAAA,8EAAkB;QAAA,4DAAQ;QACjD,0FAK0B;QAE1B,8GACI;QAIR,4DAAM;QACd,0EACQ;QAAA,2EACI;QAAA,6EAAsB;QAAA,6EAAiB;QAAA,4DAAQ;QAC/C,0FAK0B;QAC1B,8GACI;QAIR,4DAAM;QACd,4DAAM;QACN,0EACQ;QAAA,6EAA2B;QAAA,mFAAuB;QAAA,4DAAQ;QAC1D,0FAK0B;QAC1B,8GACI;QAIZ,4DAAM;QAEN,0EAEQ;QAAA,2EACI;QAAA,6EAAoC;QAAA,2FAA+B;QAAA,4DAAQ;QAC3E,uFAIuB;QAC3B,4DAAM;QACd,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,6EAIA;QAFO,4JAAgB,wBAAoB,IAAE;QAF7C,4DAIA;QAAA,8GACI;QAIR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,yEAAO;QAAA,gFAAoB;QAAA,4DAAQ;QAEnC,6EAGJ;QADW,4JAAgB,sBAAkB,IAAE;QAF3C,4DAGJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EAEA;QADO,0IAAU,wBAAoB,CAAC,CAAC,IAAC;QADxC,4DAEA;QAAA,6EAAyD;QAAA,oEAAQ;QAAA,4DAAQ;QAC7E,4DAAM;QACN,2EACI;QAAA,6EAGA;QAFO,0IAAU,wBAAoB,CAAC,CAAC,IAAC;QADxC,4DAGA;QAAA,6EAAuD;QAAA,kEAAM;QAAA,4DAAQ;QACzE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,6EAAuD;QAAA,uEAAW;QAAA,4DAAQ;QAC1E,0FAK0B;QAC1B,8GACI;QAIR,4DAAM;QACV,4DAAM;QAEN,gHACI;QAyDJ,0EACI;QAAA,0EACI;QAAA,6EAEA;QADO,wIAAS,mBAAe,IAAC;QADhC,4DAEA;QAAA,8GACI;QAER,4DAAM;QAEN,+GACI;QASR,4DAAM;QACV,4DAAM;QACV,4DAAW;QACf,4DAAO;QAEP,gHACI;;QAvQE,iFAAoB;QACZ,0DAA+C;QAA/C,qKAA+C;QAGxC,0DAAkC;QAAlC,wJAAkC;QAKhB,0DAAkC;QAAlC,mGAAkC;QAChD,0DAA0E;QAA1E,4IAA0E;QASlD,0DAA+B;QAA/B,8FAA+B;QAQnD,0DAA4E;QAA5E,8IAA4E;QAM3D,0DAA+F;QAA/F,2LAA+F;QAIxF,0DAAqB;QAArB,kFAAqB;QAKjB,0DAA+F;QAA/F,2LAA+F;QAKnG,0DAAqB;QAArB,kFAAqB;QAKzC,0DAAgG;QAAhG,sKAAgG;QAMxE,0DAA+F;QAA/F,2LAA+F;QAInG,0DAAqB;QAArB,kFAAqB;QAKzC,0DAAgG;QAAhG,sKAAgG;QAOpG,0DAA6D;QAA7D,iKAA6D;QAIrC,0DAAiC;QAAjC,0FAAiC;QAIrD,0DAA6F;QAA7F,mKAA6F;QAW7E,0DAAuC;QAAvC,gGAAuC;QAI3D,0DAAkF;QAAlF,oJAAkF;QASlF,0DAAoE;QAApE,wKAAoE;QAG/C,0DAAkC;QAAlC,+FAAkC;QAeb,0DAAuB;QAAvB,gFAAuB;QAGzD,0DAA0E;QAA1E,4IAA0E;QAYxC,0DAAuB;QAAvB,gFAAuB;QAWmC,0DAAwB;QAAxB,iFAAwB;QAK1B,0DAAwB;QAAxB,iFAAwB;QAEpH,uSAAqN;QAW3M,0DAAmC;QAAnC,4FAAmC;QAIvD,0DAA4E;QAA5E,8IAA4E;QAQxE,0DAA0B;QAA1B,0FAA0B;QA8D9B,0DAAmB;QAAnB,iFAAmB;QAKN,0DAA0B;QAA1B,0FAA0B;QAeM,0DAAiD;QAAjD,mHAAiD;;6FD5O1G,gBAAgB;cAR5B,uDAAS;eAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,eAAe,EAAE,qEAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACxC;;kBAGI,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;kBACN,uDAAS;mBAAC,yBAAyB","file":"freightRates-freight-rate-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { FreightRateRulesService } from '../Services/freight-rate-rules.service'\r\nimport { FreightRateViewModel, FreightRateFuelGroupViewModel, FreightRateRouteTableViewModel, FreightRateRangeTableViewModel, FreightRatePtoPTable } from '../Models/createFreightRateRules'\r\nimport { Subject, forkJoin, merge } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport * as moment from 'moment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FreightComponent } from '../../shared-components/Freight/freight.component';\r\nimport { BOOL_TYPE } from '@angular/compiler/src/output/output_ast';\r\nimport { FreightRateRuleType, FreightTableStatus, SourceRegionInputModel, TableType } from 'src/app/app.enum';\r\n\r\n\r\n@Component({\r\n    selector: 'app-create-freight-rate-rules',\r\n    templateUrl: './create-freight-rate-rules-component.html',\r\n    styleUrls: ['./create-freight-rate-rules-component.css']\r\n})\r\nexport class CreateFreightRateRules implements OnInit {\r\n    @ViewChild(FreightComponent) public freightComponent: FreightComponent;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    public IsEditable: boolean = true;\r\n    public rForm: FormGroup;\r\n    public fgTemp: FormGroup;\r\n    public fgTempG: FormGroup;\r\n    public rcFormRange: FormGroup;\r\n    public dtOptions: any = {};\r\n    public DtTrigger: Subject<any> = new Subject();\r\n    public IsLoading: boolean = false;\r\n    public IsGeneratedSurchargeTable = false;\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public ServiceResponse: any;\r\n    public viewType = 1;\r\n    public RuleId?: number;\r\n    public RuleMode: string=\"CREATE\";\r\n    public freightRateRuleType: number = FreightRateRuleType.Range;\r\n    public FrModel: FreightRateViewModel;\r\n    public decimalSupportedRegx = /^(?:(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?|\\.[0-9]+)$/;\r\n    public intGreaterThanZeroRegx = /^[1-9][0-9]*$/;\r\n\r\n    public SelectedFuelGroups: DropdownItem[]=[]; // for mixed fuel group.\r\n   \r\n    public disableInputControls: boolean = false;\r\n\r\n    constructor(\r\n        private freightRateRulesService: FreightRateRulesService,\r\n        private http: HttpClient, \r\n        private cdr: ChangeDetectorRef,\r\n        private _fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            aaSorting: [],\r\n            orderable: false,\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Freight Rate P2P', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Freight Rate P2P', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.freightRateRulesService.onSelectedFreightRateRuleId.subscribe(s => {\r\n            if (s) {\r\n                let stringify = JSON.parse(s);\r\n                this.RuleId = stringify.RuleId;\r\n                this.RuleMode = stringify.Mode;\r\n                this.freightRateRuleType = stringify.FreightRateRuleType;\r\n            }\r\n        })\r\n\r\n        // with order page integration\r\n        let id = localStorage.getItem(\"FreightRateRuleId\");\r\n        if (id && +id > 0) {\r\n            this.RuleId = Number(id);\r\n            this.RuleMode = \"VIEW\";\r\n            localStorage.removeItem(\"FreightRateRuleId\");\r\n        }\r\n\r\n        this.createForm(this.freightRateRuleType);       \r\n    }\r\n\r\n    ngAfterViewInit() {        \r\n        if (this.freightRateRuleType == FreightRateRuleType.P2P) {\r\n            this.DtTrigger.next();\r\n        }\r\n        if (this.RuleId == null || this.RuleId == undefined) return;\r\n\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n        this.freightComponent.IsLoaded = false;\r\n        this.IsLoading = true;\r\n        this.cdr.detectChanges();\r\n        this.http.get(this.freightRateRulesService.getFreightRateDetailUrl + this.RuleId).pipe(\r\n            map(fr => {\r\n                const frModel = fr as FreightRateViewModel;\r\n                return frModel;\r\n            }),\r\n            mergeMap(frModel => {                \r\n                this.FrModel = frModel;\r\n                let companyIds: number[] = [];\r\n                if (this.FrModel.CustomerIds.length > 0) {\r\n                    this.FrModel.CustomerIds.forEach(s => companyIds.push(s));\r\n                }\r\n                if (this.FrModel.CarrierIds.length > 0) {\r\n                    this.FrModel.CarrierIds.forEach(s => companyIds.push(s));\r\n                }\r\n                var getSupplierCustomersUrl = \"/FuelSurcharge/GetSupplierCustomers\";\r\n                var getTableTypesUrl = \"/FuelSurcharge/GetTableTypes\";\r\n                var getCarriersUrl = '/Region/GetCarriers';\r\n                var getFuelGroupsUrl = \"/FuelGroup/GetFuelGroups?fuelGroupType=\" + this.FrModel.FuelGroupType + \"&companyIds=\" + companyIds.join(',')\r\n                var getSourceRegionsUrl = \"/FuelSurcharge/GetSourceRegionsAsync\";\r\n                var getTerminalsAndBulkPlantsUrl = \"/FuelSurcharge/GetTerminalsAndBulkPlantsAsync?regionIds=\";\r\n                var getCustomerJobsUrl = \"/FreightRate/GetCustomerJobs?customerId=\" + this.FrModel.CustomerIds.join(',');\r\n\r\n                var sourceRegionInput = new SourceRegionInputModel();\r\n                sourceRegionInput.TableType = this.FrModel.TableType.toString();\r\n                sourceRegionInput.CustomerId = this.FrModel.CustomerIds;\r\n                sourceRegionInput.CarrierId = this.FrModel.CarrierIds;\r\n                \r\n                const TerminalAndBulkPlans = this.http.get(getTerminalsAndBulkPlantsUrl + frModel.SourceRegionIds.join(','))\r\n                const Customers = this.http.get(getSupplierCustomersUrl);\r\n                const Tabletypes = this.http.get(getTableTypesUrl);\r\n                const Carriers = this.http.get(getCarriersUrl);\r\n                const FuelGroups = this.http.get(getFuelGroupsUrl);\r\n                const SourceRegion = this.http.post(getSourceRegionsUrl, sourceRegionInput);\r\n                const Locations = this.http.get(getCustomerJobsUrl);\r\n\r\n                let requiredCalls = [Tabletypes, Customers, Carriers, FuelGroups, SourceRegion, TerminalAndBulkPlans];\r\n\r\n                if (this.FrModel.FreightRateRuleType == FreightRateRuleType.P2P) {\r\n                    requiredCalls = [Tabletypes, Customers, Carriers, FuelGroups, SourceRegion, TerminalAndBulkPlans, Locations];\r\n                }                \r\n                return forkJoin(requiredCalls);\r\n            })).subscribe(result => {\r\n                this.IsLoading = false;\r\n                this.freightComponent.TableTypeList = result[0] as DropdownItem[];\r\n                if (this.FrModel.CustomerIds != null && this.FrModel.CustomerIds.length > 0)\r\n                    this.freightComponent.CustomerList = result[1] as DropdownItem[];\r\n\r\n                if (this.FrModel.JobIds != null && this.FrModel.JobIds.length > 0)\r\n                    this.freightComponent.LocationList = result[6] as DropdownItem[];\r\n\r\n                if (this.FrModel.CarrierIds != null && this.FrModel.CarrierIds.length > 0)\r\n                    this.freightComponent.CarrierList = result[2] as DropdownItem[];\r\n\r\n                this.freightComponent.FuelGroupsList = result[3] as DropdownItem[];\r\n                this.freightComponent.SourceRegionList = result[4] as DropdownItem[];\r\n\r\n                if (this.FrModel.TerminalsAndBulkPlants != null && this.FrModel.TerminalsAndBulkPlants.length > 0)\r\n                    this.freightComponent.TerminalsAndBulkPlantList = result[5] as DropdownItemExt[];\r\n\r\n                \r\n                this.Edit(this.FrModel);\r\n\r\n            });\r\n    }\r\n\r\n    rerender_destroy(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                //this.DtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    rerender_trigger(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                //dtInstance.destroy();\r\n                this.DtTrigger.next();\r\n            });\r\n        }\r\n    }   \r\n    private Edit(_fr: FreightRateViewModel) {\r\n        if (this.rForm) {\r\n            if (this.RuleMode != \"COPY\") {\r\n                this.rForm.get('RuleId').setValue(_fr.Id);\r\n                this.freightComponent.rcForm.get('TableName').setValue(_fr.Name);\r\n                this.IsEditable = false;\r\n            } else {\r\n                this.RuleId = null;\r\n            }\r\n            this.rForm.get('RuleType').setValue(_fr.FreightRateRuleType);\r\n            \r\n            this.freightComponent.rcForm.get('FuelGroupType').setValue(_fr.FuelGroupType);\r\n\r\n            this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == _fr.TableType));\r\n\r\n            if (_fr.TableType != TableType.Master) this.freightComponent.IsMasterSelected = false;\r\n\r\n            if (_fr.CustomerIds != null && _fr.CustomerIds != undefined && _fr.CustomerIds.length > 0) {\r\n                this.freightComponent.IsCustomerSelected = true;\r\n                this.freightComponent.IsMasterSelected = false;\r\n                if (this.freightComponent.CustomerList.length > 0 && _fr.CustomerIds.length > 0)\r\n                    this.freightComponent.rcForm.get('Customers').setValue(this.freightComponent.CustomerList.filter(this.IdInComparer(_fr.CustomerIds)));\r\n\r\n            }\r\n\r\n\r\n            if (_fr.JobIds != null && _fr.JobIds != undefined && _fr.JobIds.length > 0) {\r\n               \r\n                if (this.freightComponent.LocationList.length > 0 && _fr.JobIds.length > 0)\r\n                    this.freightComponent.rcForm.get('Locations').setValue(this.freightComponent.LocationList.filter(this.IdInComparer(_fr.JobIds)));\r\n\r\n            }\r\n\r\n            if (_fr.CarrierIds != null && _fr.CarrierIds != undefined && _fr.CarrierIds.length > 0) {\r\n                this.freightComponent.IsCarrierSelected = true;\r\n                this.freightComponent.IsMasterSelected = false;\r\n                if (this.freightComponent.CarrierList.length > 0)\r\n                    this.freightComponent.rcForm.get('Carriers').setValue(this.freightComponent.CarrierList.filter(this.IdInComparer(_fr.CarrierIds)));\r\n\r\n            }\r\n\r\n            if (this.freightComponent.SourceRegionList != null && this.freightComponent.SourceRegionList != undefined && _fr.SourceRegionIds != null && _fr.SourceRegionIds != undefined && _fr.SourceRegionIds.length > 0) {\r\n                if (this.freightComponent.SourceRegionList.length > 0 && _fr.SourceRegionIds.length > 0)\r\n                    this.freightComponent.rcForm.get('SourceRegions').setValue(this.freightComponent.SourceRegionList.filter(this.IdInComparer(_fr.SourceRegionIds)));\r\n            }\r\n\r\n            if (this.freightComponent.TerminalsAndBulkPlantList != null && this.freightComponent.TerminalsAndBulkPlantList != undefined && _fr.TerminalsAndBulkPlants != null && _fr.TerminalsAndBulkPlants != undefined && _fr.TerminalsAndBulkPlants.length > 0) {\r\n                if (this.freightComponent.TerminalsAndBulkPlantList.length > 0 && _fr.TerminalsAndBulkPlants.length > 0) {\r\n                    this.freightComponent.rcForm.controls.TerminalsAndBulkPlants.setValue(this.freightComponent.TerminalsAndBulkPlantList.filter(this.IdInComparers(_fr.TerminalsAndBulkPlants)));\r\n                    this.freightComponent.IsSourceRegionSelected = true;\r\n                }\r\n            }\r\n\r\n            this.freightComponent.rcForm.get('StartDate').setValue(moment(_fr.StartDate).format('MM/DD/YYYY'));\r\n\r\n            if (_fr.EndDate != null && _fr.EndDate != undefined) {\r\n                this.freightComponent.rcForm.get('EndDate').setValue(moment(_fr.EndDate).format('MM/DD/YYYY'));\r\n            } \r\n\r\n            if (_fr.FuelGroupIds != null) {\r\n\r\n                if (this.freightComponent.FuelGroupsList.length > 0 && _fr.FuelGroupIds.length > 0) {\r\n                    this.freightComponent.rcForm.get('FuelGroups').setValue(this.freightComponent.FuelGroupsList.filter(this.IdInComparer(_fr.FuelGroupIds)));\r\n                    this.SelectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n                }\r\n\r\n            }\r\n\r\n            this.rerender_destroy();\r\n\r\n            this.freightComponent.rcForm.get('StatusId').setValue(_fr.Status);\r\n            if (_fr.FreightRateFuelGroups != null && _fr.FreightRateFuelGroups.length > 0) {\r\n\r\n                (<FormArray>this.rForm.get('FuelGroupTable')).clear();\r\n                (<FormArray>this.rForm.get('FuelGroupTable')).push(this.LoadFuelGroupTable(_fr));\r\n\r\n            }\r\n\r\n            if (_fr.FreightRateRouteTables != null && _fr.FreightRateRouteTables.length > 0) {\r\n\r\n                let rTable = (<FormArray>this.rForm.get('RangeTable'))\r\n                rTable.clear();\r\n                const ftable = _fr.FreightRateRouteTables;\r\n                this.groupBy(ftable, ftable => ftable.StartQuantity).forEach(res => {\r\n                    (<FormArray>this.rForm.get('RangeTable')).push(this.LoadRouteTable(false, res, _fr.Id))\r\n                });\r\n                rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n                this.freightComponent.IsLoaded = true;\r\n            }\r\n            else if (_fr.FreightRateRangeTables != null && _fr.FreightRateRangeTables.length > 0) {\r\n                this.generateRangeTable(_fr.FreightRateRangeTables);\r\n            }\r\n            else if (_fr.FreightRatePtoPTables != null && _fr.FreightRatePtoPTables.length > 0) {\r\n                this.generateP2PTable(_fr.FreightRatePtoPTables);\r\n            }\r\n\r\n            this.rerender_trigger();\r\n\r\n        }\r\n\r\n        if (this.RuleMode == \"VIEW\") {\r\n            this.disableInputControls = true;\r\n            this.freightComponent.disableInputControls = true;\r\n        }\r\n        \r\n    }\r\n\r\n    private groupBy(list, keyGetter) {\r\n        const map = new Map();\r\n        list.forEach((item) => {\r\n            const key = keyGetter(item);\r\n            const collection = map.get(key);\r\n            if (!collection) {\r\n                map.set(key, [item]);\r\n            } else {\r\n                collection.push(item);\r\n            }\r\n        });\r\n        return map;\r\n    }\r\n\r\n    private groupByWithMultipleProperty(array, f) {\r\n        let groups = {};\r\n        array.forEach(function (o) {\r\n            var group = JSON.stringify(f(o));\r\n            groups[group] = groups[group] || [];\r\n            groups[group].push(o);\r\n        });\r\n        return Object.keys(groups).map(function (group) {\r\n            return groups[group];\r\n        })\r\n    }\r\n\r\n    private generateP2PTable(fRange: FreightRatePtoPTable[], Id?: number) {\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n\r\n        if (fRange != null && fRange.length > 0) {\r\n\r\n            let rTable = (<FormArray>this.rForm.get('RangeTable'))\r\n            rTable.clear();\r\n            let ftable = this.groupByWithMultipleProperty(fRange, function (item) {\r\n                return [item.TerminalAndBulkPlantName, item.LocationName, item.LocationAddress, item.LaneID, item.AssumedMiles];\r\n            });\r\n            let sameName = \"\";\r\n            ftable.forEach(res => {                \r\n                (<FormArray>this.rForm.get('RangeTable')).push(this.LoadP2PTable(sameName == \"\" || sameName != res[0].TerminalAndBulkPlantName?true:false, res, Id));\r\n                sameName = res[0].TerminalAndBulkPlantName;\r\n            });\r\n            \r\n        }\r\n        this.freightComponent.ShowMessage = false;\r\n        this.freightComponent.isLoadingSubject.next(false);\r\n        \r\n        \r\n        this.freightComponent.IsLoaded = true;\r\n    }\r\n\r\n\r\n    private generateRangeTable(fRange: FreightRateRangeTableViewModel[],Id?:number) {\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n        if (fRange != null && fRange.length > 0) {\r\n\r\n            let rTable = (<FormArray>this.rForm.get('RangeTable'))\r\n            rTable.clear();\r\n            const ftable = fRange;\r\n            this.groupBy(ftable, ftable => ftable.UptoQuantity).forEach(res => {\r\n                (<FormArray>this.rForm.get('RangeTable')).push(this.LoadRangeTable(false, res, Id))\r\n            });\r\n            rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n        }\r\n\r\n        this.freightComponent.ShowMessage = false;\r\n        this.freightComponent.isLoadingSubject.next(false);\r\n        this.freightComponent.IsLoaded = true;\r\n    }\r\n\r\n    private LoadP2PTable(IsLast: boolean, rt: FreightRatePtoPTable[], Id: number): FormGroup {\r\n        return this._fb.group({\r\n            Id: this._fb.control(Id),\r\n            TerminalAndBulkPlantName: this._fb.control(rt[0].TerminalAndBulkPlantName),\r\n            TerminalId: this._fb.control(rt[0].TerminalId),\r\n            BulkPlantId: this._fb.control(rt[0].BulkPlantId),\r\n            LocationName: this._fb.control(rt[0].LocationName),\r\n            LocationAddress: this._fb.control(rt[0].LocationAddress),\r\n            JobId: this._fb.control(rt[0].JobId),\r\n            LaneID: this._fb.control(rt[0].LaneID),\r\n            AssumedMiles: this._fb.control(rt[0].AssumedMiles, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n            IsLaneRequired: this._fb.control(rt[0].IsLaneRequired),\r\n            IsLast: this._fb.control(IsLast),\r\n            group: this.LoadGroupInP2PTable(rt)\r\n        });\r\n    }\r\n    private LoadRangeTable(IsLast: boolean, rt: FreightRateRangeTableViewModel[], Id: number): FormGroup {\r\n        return this._fb.group({\r\n            Id: this._fb.control(Id),\r\n            UptoQuantity: this._fb.control(rt[0].UptoQuantity, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            IsLast: this._fb.control(IsLast),\r\n            group: this.LoadGroupInRangeTable(rt)\r\n        });\r\n    }\r\n\r\n    private LoadGroupInP2PTable(rt: FreightRatePtoPTable[]): FormArray {\r\n        let fg = new FormArray([]);\r\n        rt.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                FuelGroupName: new FormControl(x.FuelGroupName),\r\n                RateValue: new FormControl(x.RateValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    private LoadGroupInRangeTable(rt: FreightRateRangeTableViewModel[]): FormArray {\r\n        let fg = new FormArray([]);\r\n        rt.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                RateValue: new FormControl(x.RateValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    private LoadRouteTable(IsLast: boolean, rt: FreightRateRouteTableViewModel[], Id: number): FormGroup {\r\n        return this._fb.group({\r\n            Id: this._fb.control(Id),\r\n            StartQuantity: this._fb.control(rt[0].StartQuantity, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            EndQuantity: this._fb.control(rt[0].EndQuantity, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n            IsLast: this._fb.control(IsLast),\r\n            group: this.LoadGroupInRouteTable(rt)\r\n        });\r\n    }\r\n\r\n    private LoadGroupInRouteTable(rt: FreightRateRouteTableViewModel[]): FormArray {\r\n        let fg = new FormArray([]);\r\n        rt.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                RateValue: new FormControl(x.RateValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n\r\n    private LoadFuelGroupTable(_fr: FreightRateViewModel): FormGroup {\r\n        if (_fr.FreightRateRuleType == FreightRateRuleType.Route) {\r\n            return this._fb.group({\r\n                group: this.LoadGroupInFuelGroupTable(_fr)\r\n            });\r\n        }\r\n        else if (_fr.FreightRateRuleType == FreightRateRuleType.Range || _fr.FreightRateRuleType == FreightRateRuleType.P2P) {\r\n            let selectedFuelGroup: DropdownItem[] = [];\r\n            if (_fr.FreightRateCalcPrefFuelGroupId != null) {                \r\n                selectedFuelGroup=this.freightComponent.FuelGroupsList.filter(res => res.Id == _fr.FreightRateCalcPrefFuelGroupId);\r\n            }\r\n            return this._fb.group({\r\n                group: this.LoadGroupInFuelGroupTable(_fr),\r\n                FreightRateCalcPreferenceType: new FormControl(_fr.FreightRateCalcPreferenceType),\r\n                FuelGroups: new FormControl(selectedFuelGroup, [Validators.required]),\r\n                MixLoadMinValue: new FormControl(_fr.MixLoadMinValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            });\r\n        }\r\n    }\r\n\r\n    private LoadGroupInFuelGroupTable(_fr: FreightRateViewModel): FormArray {\r\n        let fg = new FormArray([]);\r\n        _fr.FreightRateFuelGroups.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                MinQuantity: new FormControl(x.MinQuantity, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n\r\n\r\n\r\n    private createForm(ruleType: number) {\r\n        if (ruleType == FreightRateRuleType.Route) {\r\n            this.rForm = this._fb.group({\r\n                RuleId: new FormControl(''),\r\n                RuleType: new FormControl(ruleType),\r\n                FuelGroupTable: this._fb.array([\r\n                ]),\r\n                RangeTable: this._fb.array([\r\n                ])\r\n\r\n            });\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Range) {\r\n\r\n            this.rForm = this._fb.group({\r\n                RuleId: new FormControl(''),\r\n                RuleType: new FormControl(ruleType),\r\n                FuelGroupTable: this._fb.array([\r\n                ]),\r\n                RangeTable: this._fb.array([\r\n                ])\r\n            });\r\n        }\r\n\r\n        else if (ruleType == FreightRateRuleType.P2P) {\r\n\r\n            this.rForm = this._fb.group({\r\n                RuleId: new FormControl(''),\r\n                RuleType: new FormControl(ruleType),\r\n                FuelGroupTable: this._fb.array([\r\n                ]),\r\n                RangeTable: this._fb.array([\r\n                ])\r\n            });           \r\n        }\r\n\r\n    }\r\n\r\n    public changeViewType(value) {\r\n        this.viewType = value;\r\n    }\r\n    public RuleTypeTypeChange(ruleType: number): void {\r\n        this.freightRateRuleType = ruleType;\r\n        this.refreshUI(ruleType);\r\n    }\r\n    private refreshUI(ruleType: number) {\r\n        this.freightComponent.IsLoaded = false;\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n        this.RuleId = null;\r\n        this.IsEditable = true;\r\n        this.createForm(ruleType);\r\n        this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == TableType.Master));\r\n\r\n        this.freightComponent.SourceRegionList = [];\r\n        this.freightComponent.TerminalsAndBulkPlantList = [];\r\n        \r\n        this.freightComponent.rcForm.get('TableName').patchValue('');\r\n        this.freightComponent.rcForm.get('StartDate').setValue(moment(moment(new Date()).toDate()).format('MM/DD/YYYY'));\r\n        this.freightComponent.FuelGroupsList = [];\r\n        this.freightComponent.rcForm.get('FuelGroups').patchValue([]);\r\n\r\n        if (ruleType != FreightRateRuleType.Range) {\r\n            this.AddRemoveValidations(null, [this.freightComponent.rcForm.controls.RangeStartValue]);\r\n            this.AddRemoveValidations(null, [this.freightComponent.rcForm.controls.RangeEndValue]);\r\n            this.AddRemoveValidations(null, [this.freightComponent.rcForm.controls.RangeInterval]);\r\n        } else {\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.RangeStartValue],null );\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.RangeEndValue],null);\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.RangeInterval],null);\r\n        }\r\n\r\n        if (ruleType != FreightRateRuleType.P2P) {\r\n\r\n            this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == TableType.Master));\r\n            this.freightComponent.onTableTypeSelect({ Id: TableType.Master });           \r\n            this.DtTrigger.next();\r\n           \r\n        } else {\r\n            this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == TableType.Customer));\r\n            this.freightComponent.onTableTypeSelect({ Id: TableType.Customer });\r\n        }\r\n        this.freightComponent.IsLoaded = true;\r\n        this.freightComponent.isLoadingSubject.next(false);\r\n        //this.rerender();\r\n    }\r\n\r\n    private disableAllControl(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.disable();\r\n            if (control.controls) {\r\n                this.disableAllControl(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private markFormGroupTouched(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.markFormGroupTouched(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private clearAllValidations(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n            control.clearValidators();            \r\n            control.updateValueAndValidity();\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.clearAllValidations(control);\r\n            }\r\n        });\r\n    }\r\n    public onSubmit(freightTableStatus: number): void {\r\n        this.IsLoading = true;\r\n        if (freightTableStatus == FreightTableStatus.Draft) {\r\n            if (this.rForm.get('RuleId').value != \"\") {\r\n                Declarations.msgerror(\"Not allowed. \" + this.freightComponent.rcForm.get('TableName').value + \" is in edit mode.\", undefined, undefined);\r\n                this.IsLoading = false;\r\n                return;\r\n            }\r\n            this.clearAllValidations(this.rForm); // clear all validation\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.TableName], null); // minimum validation for draft\r\n            if (this.freightComponent.rcForm.valid) this.Save(freightTableStatus);\r\n            this.IsLoading = false;\r\n            return;\r\n           }\r\n        this.freightComponent.ValidateOnSubmit(freightTableStatus);\r\n\r\n        if (this.RuleMode == \"COPY\" && !this.freightComponent.rcForm.get('TableName').valid) {\r\n            this.freightComponent.ShowMessage = false;\r\n        }\r\n        // clear validation of last row and second column of RangeTable\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        if (rTable.length > 0 && (+this.rForm.get('RuleType').value) == FreightRateRuleType.Route) {\r\n            rTable.at(rTable.length - 1).get('EndQuantity').clearValidators();\r\n            rTable.at(rTable.length - 1).get('EndQuantity').updateValueAndValidity();\r\n            rTable.at(rTable.length - 1).get('EndQuantity').markAsTouched();\r\n        }\r\n        else if (rTable.length > 0 && (+this.rForm.get('RuleType').value) == FreightRateRuleType.Range) {\r\n            this.AddRemoveValidations(null,\r\n                [this.freightComponent.rcForm.get('RangeStartValue'), this.freightComponent.rcForm.get('RangeEndValue'), this.freightComponent.rcForm.get('RangeInterval')]);\r\n\r\n            let selectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n            if (selectedFuelGroups.length == 1) {\r\n                this.AddRemoveValidations(null,\r\n                    [(<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('MixLoadMinValue'), (<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FuelGroups')]);\r\n            }\r\n            this.ClearDuplicateUpToQuantity();\r\n        }\r\n        else if (rTable.length > 0 && (+this.rForm.get('RuleType').value) == FreightRateRuleType.P2P) {\r\n            let selectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n            if (selectedFuelGroups.length == 1) {\r\n                this.AddRemoveValidations(null,\r\n                    [(<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('MixLoadMinValue'), (<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FuelGroups')]);\r\n            }\r\n        }\r\n\r\n        if (rTable.length > 0 &&\r\n            (+this.rForm.get('RuleType').value == FreightRateRuleType.P2P || +this.rForm.get('RuleType').value == FreightRateRuleType.Range) &&\r\n            (((<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FreightRateCalcPreferenceType').value != 1) ||\r\n            (<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('MixLoadMinValue').value==0)) {\r\n\r\n            this.AddRemoveValidations(null,\r\n                [(<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FuelGroups')]);\r\n        }\r\n        \r\n        this.markFormGroupTouched(this.rForm)\r\n\r\n        this.IsLoading = false;\r\n        if (this.rForm.valid && this.freightComponent.rcForm.valid && !this.freightComponent.ShowMessage) {\r\n            this.Save(freightTableStatus);\r\n        }\r\n\r\n\r\n    }\r\n    private IsGroupExist(table: string): number {\r\n        let fgTable = (<FormArray>this.rForm.get(table));\r\n        let fgtableArray = fgTable.value as any[];\r\n        return fgtableArray.findIndex((s) => s['group']);\r\n    }\r\n\r\n    private IsDuplicateUpToQuantity():boolean {\r\n        let UptoQuantity = [];\r\n        let rangeTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let isExist = this.IsGroupExist(\"RangeTable\");\r\n        let flag = false;\r\n        if (isExist != -1) {\r\n            var rT = (<FormArray>this.rForm.get('RangeTable')).length - 1;\r\n            for (let i = 0; i <= rT; i++) {\r\n\r\n                if (!UptoQuantity.includes(+(rangeTable.at(i).get('UptoQuantity').value))) {\r\n                    UptoQuantity.push(+(rangeTable.at(i).get('UptoQuantity').value));\r\n\r\n                } else {\r\n                    rangeTable.at(i).get('UptoQuantity').setErrors({ DuplicateEntry: true });\r\n                    rangeTable.at(i).get('UptoQuantity').markAsTouched();\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n    private ClearDuplicateUpToQuantity() {\r\n        let rangeTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let isExist = this.IsGroupExist(\"RangeTable\");\r\n        if (isExist != -1) {\r\n            var rT = (<FormArray>this.rForm.get('RangeTable')).length - 1;\r\n            for (let i = 0; i <= rT; i++) {\r\n                if (rangeTable.at(i).get('UptoQuantity')?.errors?.DuplicateEntry) {\r\n                    rangeTable.at(i).get('UptoQuantity').markAsTouched();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private Save(freightTableStatus: FreightTableStatus): void {\r\n        this.IsLoading = true;\r\n        \r\n        var saveModel = new FreightRateViewModel();\r\n        saveModel.Id = this.rForm.get('RuleId').value;\r\n        saveModel.Name = this.freightComponent.rcForm.get('TableName').value;\r\n        saveModel.Status = freightTableStatus;\r\n        saveModel.FuelGroupType = this.freightComponent.rcForm.get('FuelGroupType').value;\r\n        saveModel.FreightRateRuleType = this.rForm.get('RuleType').value;\r\n\r\n        saveModel.StartDate = this.freightComponent.rcForm.get('StartDate').value;\r\n\r\n        if (this.freightComponent.rcForm.get('EndDate').value != null && this.freightComponent.rcForm.get('EndDate').value != undefined) {\r\n            saveModel.EndDate = this.freightComponent.rcForm.get('EndDate').value;\r\n        }\r\n\r\n        saveModel.TableType = this.freightComponent.rcForm.get('TableTypes').value[0].Id;\r\n\r\n        \r\n        this.freightComponent.rcForm.get('Customers').value.forEach(res => saveModel.CustomerIds.push(res.Id));        \r\n        this.freightComponent.rcForm.get('Carriers').value.forEach(res => saveModel.CarrierIds.push(res.Id));\r\n\r\n        this.freightComponent.rcForm.get('SourceRegions').value.forEach(res => saveModel.SourceRegionIds.push(res.Id));\r\n\r\n        saveModel.TerminalsAndBulkPlants = this.freightComponent.rcForm.get('TerminalsAndBulkPlants').value;\r\n        let isExist = 0;\r\n        isExist = this.IsGroupExist(\"FuelGroupTable\");\r\n        if (isExist != -1) {\r\n            var gList = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('group'))).length - 1;\r\n            var fgT = (<FormArray>this.rForm.get('FuelGroupTable')).length - 1\r\n            for (let i = 0; i <= fgT; i++) {\r\n                for (let j = 0; j <= gList; j++) {\r\n                    let group = new FreightRateFuelGroupViewModel();\r\n                    group.FuelGroupId = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                    group.MinQuantity = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('group'))).at(j).get('MinQuantity').value;\r\n                    if (+this.rForm.get('RuleType').value == FreightRateRuleType.Range || +this.rForm.get('RuleType').value == FreightRateRuleType.P2P) {\r\n                        saveModel.MixLoadMinValue = (<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('MixLoadMinValue').value;\r\n\r\n                        saveModel.FreightRateCalcPreferenceType = (<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('FreightRateCalcPreferenceType').value;\r\n                        let selectedFuelGroup: DropdownItem[] = (<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('FuelGroups').value;\r\n                        saveModel.FreightRateCalcPrefFuelGroupId = selectedFuelGroup.length == 1 ? selectedFuelGroup[0].Id : null;\r\n\r\n\r\n                    }\r\n                    saveModel.FreightRateFuelGroups.push(group);\r\n                }\r\n            }\r\n        }\r\n        isExist = this.IsGroupExist(\"RangeTable\");\r\n        if (isExist!=-1) {\r\n            gList = (<FormArray>((<FormArray>this.rForm.get('RangeTable')).at(0).get('group'))).length - 1;\r\n            var rT = (<FormArray>this.rForm.get('RangeTable')).length - 1;\r\n            let rangeTable = (<FormArray>this.rForm.get('RangeTable'));\r\n            if (+this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n                for (let i = 0; i <= rT; i++) {\r\n                    for (let j = 0; j <= gList; j++) {\r\n\r\n                        let group = new FreightRateRouteTableViewModel();\r\n                        group.FuelGroupId = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                        group.StartQuantity = rangeTable.at(i).get('StartQuantity').value;\r\n                        if (rangeTable.at(i).get('IsLast').value != true) {\r\n                            group.EndQuantity = rangeTable.at(i).get('EndQuantity').value;\r\n                        } else {\r\n                            group.EndQuantity = null;\r\n                        }\r\n                        group.RateValue = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('RateValue').value;\r\n                        saveModel.FreightRateRouteTables.push(group);\r\n                    }\r\n                }\r\n            }\r\n            else if (+this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n\r\n                if (this.IsDuplicateUpToQuantity()) {\r\n                    this.IsLoading = false;\r\n                    return;\r\n                }\r\n                for (var i = 0; i <= rT; i++) {\r\n                    for (var j = 0; j <= gList; j++) {\r\n                        let group = new FreightRateRangeTableViewModel();\r\n                        group.FuelGroupId = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                        group.UptoQuantity = rangeTable.at(i).get('UptoQuantity').value;                        \r\n                        group.RateValue = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('RateValue').value;\r\n                        saveModel.FreightRateRangeTables.push(group);\r\n                    }\r\n                }\r\n            }\r\n            else if (+this.rForm.get('RuleType').value == FreightRateRuleType.P2P) {\r\n\r\n                for (let i = 0; i <= rT; i++) {\r\n                    for (let j = 0; j <= gList; j++) {\r\n                        let group = new FreightRatePtoPTable();\r\n                        group.FuelGroupId = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                        group.FuelGroupName = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupName').value;\r\n                        group.RateValue = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('RateValue').value;\r\n\r\n                        group.AssumedMiles = rangeTable.at(i).get('AssumedMiles').value;\r\n                        group.IsLaneRequired = rangeTable.at(i).get('IsLaneRequired').value;\r\n                        group.LaneID = rangeTable.at(i).get('LaneID').value;\r\n                        group.LocationAddress = rangeTable.at(i).get('LocationAddress').value;\r\n                        group.LocationName = rangeTable.at(i).get('LocationName').value;\r\n                        group.JobId = rangeTable.at(i).get('JobId').value;\r\n                        group.TerminalAndBulkPlantName = rangeTable.at(i).get('TerminalAndBulkPlantName').value;\r\n                        group.BulkPlantId = rangeTable.at(i).get('BulkPlantId').value;\r\n                        group.TerminalId = rangeTable.at(i).get('TerminalId').value;\r\n                        saveModel.FreightRatePtoPTables.push(group);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        if (this.rForm.get('RuleId').value != \"\") {\r\n            this.freightRateRulesService.updateFreightRate(saveModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \" edited\";\r\n                        if (saveModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(saveModel.Name + message + \" successfully.\", undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeToViewTab();\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        } else {\r\n            this.freightRateRulesService.createFreightRate(saveModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \"\";\r\n                        if (saveModel.Status == FreightTableStatus.Published) {\r\n                            message = \" created\"\r\n                        }\r\n                        else if (saveModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(saveModel.Name + message + \" successfully.\" , undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeToViewTab();\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    public changeToViewTab() {\r\n        this.freightRateRulesService.onSelectedTabChanged.next(2);\r\n    }\r\n\r\n    public clearForm() {\r\n        this.refreshUI(FreightRateRuleType.Range);\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.RuleMode == \"VIEW\") {\r\n            this.disableInputControls = false;\r\n            this.freightComponent.disableInputControls = false;\r\n            this.RuleId = null;\r\n        }\r\n        if (this.RuleId != null) {\r\n            this.changeToViewTab();\r\n        }\r\n        else {\r\n            this.refreshUI(FreightRateRuleType.Range);\r\n        }\r\n        \r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.DtTrigger.unsubscribe();\r\n    }\r\n\r\n    private IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                //console.log(other + \" : \" + current.Id);\r\n                return other == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n    IdInComparers(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n\r\n\r\n    public GetControlNames(formGroup: FormGroup): string[] {\r\n        var ctrlName: string[] = [];\r\n        (<any>Object).keys(formGroup.controls).forEach((key: string) => {\r\n            const abstractControl = formGroup.get(key);\r\n            ctrlName.push(key);\r\n            if (abstractControl instanceof FormGroup) {\r\n                this.GetControlNames(abstractControl);\r\n            }\r\n        });\r\n        return ctrlName;\r\n    }\r\n   \r\n    public onStartQuantityLostFocus(index: number): void {\r\n\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let StartQuantity = rTable.at(index).get('StartQuantity').value;\r\n        let UpperRowEndQuantity;\r\n        if (index > 0) {           \r\n            UpperRowEndQuantity = rTable.at(index - 1).get('EndQuantity').value;\r\n            let SameRowEndQuantity = rTable.at(index).get('EndQuantity').value;\r\n            if (+StartQuantity <= +UpperRowEndQuantity) {\r\n                rTable.at(index).get('StartQuantity').setErrors({ InvalidRange: true });\r\n                rTable.at(index).get('StartQuantity').markAsTouched();\r\n            }\r\n            else if (+StartQuantity >= SameRowEndQuantity)\r\n            {\r\n                rTable.at(index).get('StartQuantity').setErrors({ InvalidRange: true });\r\n                rTable.at(index).get('StartQuantity').markAsTouched();\r\n            }\r\n            else {\r\n                rTable.at(index).get('StartQuantity').setErrors(null);\r\n                rTable.at(index).get('StartQuantity').markAsTouched();\r\n            }\r\n        } else {\r\n            UpperRowEndQuantity = rTable.at(index).get('EndQuantity').value;\r\n            if (UpperRowEndQuantity) {\r\n                if (+StartQuantity >= +UpperRowEndQuantity) {\r\n                    rTable.at(index).get('StartQuantity').setErrors({ InvalidRange: true });\r\n                    rTable.at(index).get('StartQuantity').markAsTouched();\r\n                }\r\n                else {\r\n                    rTable.at(index).get('StartQuantity').setErrors(null);\r\n                    rTable.at(index).get('StartQuantity').markAsTouched();\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n        \r\n\r\n    public onEndQuantityLostFocus(index: number): void {\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let StartQuantity = rTable.at(index).get('StartQuantity').value;\r\n        let EndQuantity = rTable.at(index).get('EndQuantity').value;\r\n        if (!isNaN(+EndQuantity) && !isNaN(+StartQuantity)) {\r\n            if (+StartQuantity >= +EndQuantity) {\r\n                rTable.at(index).get('EndQuantity').setErrors({ InvalidRange: true });\r\n                rTable.at(index).get('EndQuantity').markAsTouched();\r\n            } else {\r\n                rTable.at(index).get('EndQuantity').setErrors(null);\r\n                rTable.at(index).get('EndQuantity').markAsTouched();\r\n            }\r\n        }\r\n        this.onStartQuantityLostFocus(index);\r\n    }\r\n    public onStartQuantityKeyPress(event:any,index: number): void {\r\n        if (index == 0 && !isNaN(event.data)) {\r\n            var gList = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('group'))).length - 1;\r\n            var fgT = (<FormArray>this.rForm.get('FuelGroupTable')).length - 1;\r\n            let StartQuantity = (<FormArray>this.rForm.get('RangeTable')).at(index).get('StartQuantity').value;\r\n            \r\n            for (let i = 0; i <= fgT; i++) {\r\n                for (let j = 0; j <= gList; j++) {\r\n                    (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('group'))).at(j).get('MinQuantity').patchValue(+StartQuantity);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    public onEndQuantityKeyPress(index:number): void {\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let EndQuantity = rTable.at(index).get('EndQuantity').value;        \r\n        if (!isNaN(+EndQuantity)) {            \r\n            if (+EndQuantity) {\r\n                rTable.at(index + 1).get('StartQuantity').patchValue((+EndQuantity + 1));\r\n            }\r\n        }\r\n    }\r\n\r\n    public AddRange(srNmber: number) {\r\n        this.rerender_destroy();\r\n        if ((<FormArray>this.rForm.get('FuelGroupTable')).length == 0)\r\n        {\r\n            return;\r\n        };\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let EndQuantity = \"\";\r\n        if (rTable.length > 0 && +this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n            rTable.at(rTable.length - 1).get('IsLast').patchValue(false);\r\n            EndQuantity = rTable.at(rTable.length - 2).get('EndQuantity').value;\r\n            if (EndQuantity != \"\") rTable.at(rTable.length - 1).get('StartQuantity').patchValue((+EndQuantity + 1));\r\n            rTable.push(this.CreateRangeTable(true, +this.rForm.get('RuleType').value));\r\n        }\r\n        else if (rTable.length > 0 && +this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n            let UptoQuantity = rTable.at(srNmber).get('UptoQuantity').value;\r\n            rTable.insert(srNmber + 1, this.CreateRangeTable(false, +this.rForm.get('RuleType').value));\r\n            /*if (UptoQuantity != \"\") rTable.at(srNmber + 1).get('UptoQuantity').patchValue(0);*/\r\n            rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n        }\r\n        // no manaul row add for P2P\r\n        else {\r\n           \r\n            if (+this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n                rTable.push(this.CreateRangeTable(false, + this.rForm.get('RuleType').value));\r\n                rTable.push(this.CreateRangeTable(true, +this.rForm.get('RuleType').value));\r\n            }\r\n            else if (+ this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n                this.markFormGroupTouched(this.rForm)\r\n                if (!this.freightComponent.rcForm.get('RangeStartValue').valid\r\n                    || !this.freightComponent.rcForm.get('RangeStartValue').valid\r\n                    || !this.freightComponent.rcForm.get('RangeInterval').valid) { return }\r\n\r\n                let start = this.freightComponent.rcForm.get('RangeStartValue').value;\r\n                let stop = this.freightComponent.rcForm.get('RangeEndValue').value;\r\n                let step = this.freightComponent.rcForm.get('RangeInterval').value;\r\n                this.GenerateRange(+start, +stop, +step).forEach(res => {\r\n                    rTable.push(this.CreateRangeTable(false, + this.rForm.get('RuleType').value, Math.round(res)));\r\n                });\r\n            }\r\n            else if (+ this.rForm.get('RuleType').value == FreightRateRuleType.P2P) {\r\n\r\n                if (!this.freightComponent.rcForm.get('TerminalsAndBulkPlants').valid\r\n                    || !this.freightComponent.rcForm.get('Locations').valid) { return }\r\n                \r\n                let trbls = this.freightComponent.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n                function sortForTerminalsAndBulkPlants(a, b) {\r\n                    if (a.Name < b.Name) {\r\n                        return -1;\r\n                    }\r\n                    if (a.Name > b.Name) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }\r\n                trbls.sort(sortForTerminalsAndBulkPlants);\r\n                let sLocations = this.freightComponent.rcForm.get('Locations').value as DropdownItem[];\r\n                let JobIds: number[] = [];\r\n                sLocations.forEach(s => JobIds.push(s.Id));\r\n                let locs = this.freightComponent.LocationList.filter(this.IdInComparer(JobIds));\r\n                for (var i = 0; i < trbls.length; i++) {\r\n\r\n                    for (var j = 0; j < locs.length; j++) {\r\n                        rTable.push(this.CreateRangeTable(false, + this.rForm.get('RuleType').value));                        \r\n                        rTable.at(rTable.length - 1).get(\"TerminalAndBulkPlantName\").patchValue(trbls[i].Name);\r\n                        if (trbls[i].Id.startsWith('Terminals_')) {\r\n                            rTable.at(rTable.length - 1).get(\"TerminalId\").patchValue(trbls[i].Id.split(\"Terminals_\")[1]);\r\n                            rTable.at(rTable.length - 1).get(\"LaneID\").patchValue(trbls[i].Id.split(\"Terminals_\")[1].concat(\" \" + locs[j].Id.toString()));\r\n                        }\r\n                        else if (trbls[i].Id.startsWith('BulkPlants_')) {                            \r\n                            rTable.at(rTable.length - 1).get(\"BulkPlantId\").patchValue(trbls[i].Id.split(\"BulkPlants_\")[1]);\r\n                            rTable.at(rTable.length - 1).get(\"LaneID\").patchValue(trbls[i].Id.split(\"BulkPlants_\")[1].concat(\" \" + locs[j].Id.toString()));\r\n                        }                       \r\n\r\n                        rTable.at(rTable.length - 1).get(\"LocationName\").patchValue(locs[j].Name);\r\n                        rTable.at(rTable.length - 1).get(\"LocationAddress\").patchValue(locs[j].Code);\r\n                        rTable.at(rTable.length - 1).get(\"JobId\").patchValue(locs[j].Id);\r\n                        \r\n                        if (j == 0) {\r\n                            rTable.at(rTable.length - 1).get(\"IsLast\").patchValue(true);\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n                //this.DtTrigger.next();\r\n                this.rerender_trigger();\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private GenerateRange(start:number, end:number, step:number = 0) {\r\n        let output = [];\r\n        if (typeof end === 'undefined') {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        for (let i = start; i <= end; i += step) {\r\n            output.push(i);\r\n        }\r\n        return output;\r\n    }\r\n    public onEndQuantityChange(textInput : any, index : number) {        \r\n        if (this.intGreaterThanZeroRegx.test(textInput)) {\r\n           \r\n            (<FormArray>this.rForm.get('RangeTable')).at(index + 1).get('StartQuantity').patchValue((+textInput + 1));\r\n        }\r\n        else {\r\n            (<FormArray>this.rForm.get('RangeTable')).at(index + 1).get('StartQuantity').patchValue('');\r\n        }\r\n        \r\n    }\r\n    private CreateRangeTable(IsLast: boolean, ruleType: number, upTo? : number): FormGroup {\r\n        if (ruleType ==FreightRateRuleType.Route) {\r\n            return this._fb.group({\r\n                Id: this._fb.control(''),\r\n                StartQuantity: this._fb.control(IsLast ? '' : 1, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n                EndQuantity: this._fb.control('', [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                IsLast: this._fb.control(IsLast),\r\n                group: this.addGroupInRangeTable()\r\n            });\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Range) {\r\n            return this._fb.group({\r\n                Id: this._fb.control(''),\r\n                UptoQuantity: this._fb.control(upTo, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n                IsLast: this._fb.control(IsLast),\r\n                group: this.addGroupInRangeTable()\r\n            });\r\n        }\r\n\r\n        else if (ruleType == FreightRateRuleType.P2P) {\r\n            return this._fb.group({\r\n                Id: this._fb.control(''),\r\n                TerminalAndBulkPlantName:this._fb.control(''),\r\n                TerminalId:this._fb.control(''),\r\n                BulkPlantId:this._fb.control(''),\r\n                LocationName:this._fb.control(''),\r\n                LocationAddress:this._fb.control(''),\r\n                JobId:this._fb.control(''),\r\n                LaneID:this._fb.control(''),\r\n                AssumedMiles: this._fb.control('', [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                IsLaneRequired:this._fb.control(true),\r\n                IsLast: this._fb.control(IsLast),\r\n                group: this.addGroupInRangeTable()\r\n            });\r\n        }\r\n    }\r\n   \r\n    public addGroupInRangeTable(): FormArray {\r\n        let fg = new FormArray([]);\r\n        this.freightComponent.rcForm.get('FuelGroups').value.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.Id),\r\n                FuelGroupName: new FormControl(x.Name),\r\n                RateValue: new FormControl('', [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    public generateOutput() {\r\n        this.freightComponent.generateTable();        \r\n    }\r\n\r\n    public getOutput($event) { //event which is coming from freight component\r\n        (<FormArray>this.rForm.get('RangeTable')).clear();\r\n        this.AddRange(0);\r\n    }\r\n    public onFuelGroupChange($event) { //event which is coming from freight component\r\n        (<FormArray>this.rForm.get('FuelGroupTable')).clear();\r\n\r\n        if ((+this.rForm.get('RuleType').value) == FreightRateRuleType.Range) {\r\n            this.freightComponent.rcForm.get('RangeStartValue').patchValue('');\r\n            this.freightComponent.rcForm.get('RangeEndValue').patchValue('');\r\n            this.freightComponent.rcForm.get('RangeInterval').patchValue('');\r\n        }\r\n\r\n        this.AddFuelGroup(+this.rForm.get('RuleType').value);\r\n      \r\n    }\r\n\r\n    public AddFuelGroup(ruleType:number) {\r\n        (<FormArray>this.rForm.get('FuelGroupTable')).push(this.CreateFuelGroupTable(ruleType));\r\n    }\r\n    \r\n    private CreateFuelGroupTable(ruleType: number): FormGroup {\r\n        this.SelectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n        if (this.SelectedFuelGroups.length == 0) {\r\n            return this._fb.group({});\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Route) {\r\n            return this._fb.group({\r\n                group: this.addFuelGroupTable()\r\n            });\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Range || ruleType == FreightRateRuleType.P2P) {\r\n                return this._fb.group({\r\n                    group: this.addFuelGroupTable(),\r\n                    FreightRateCalcPreferenceType: new FormControl(1),\r\n                    FuelGroups: new FormControl('', [Validators.required]),\r\n                    MixLoadMinValue: new FormControl(0, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n                });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    public addFuelGroupTable(): FormArray {\r\n        let fg = new FormArray([]);\r\n        this.freightComponent.rcForm.get('FuelGroups').value.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.Id),\r\n                FuelGroupName: new FormControl(x.Name),\r\n                MinQuantity: new FormControl(1, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    \r\n\r\n    public AddRanges(srNmber: number) {\r\n        this.AddRange(srNmber);\r\n    }\r\n\r\n    public RemoveRanges(srNmber: number) {\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        if (+this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n            if (rTable.length > 2) {\r\n                rTable.removeAt(rTable.length - 1);\r\n                // rTable.removeAt(rTable.length - 1);\r\n                if (rTable.length > 0) rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n            }\r\n        }\r\n        else if (+this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n\r\n            if (rTable.length > 1) {\r\n                rTable.removeAt(srNmber);\r\n                if (rTable.length > 0) rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    public isNumber(n) {\r\n        return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\r\n    }\r\n\r\n\r\n    public onImportClick($event) {\r\n        \r\n        \r\n        let rows = [];\r\n        let columns = [];\r\n        let firstRow = [];\r\n        rows = $event.split(/\\r?\\n/);\r\n        //sainity check 1\r\n        columns = rows[0].split(\",\"); //first row\r\n        firstRow = rows[0].split(\",\");  //first row\r\n\r\n        if (this.freightRateRuleType == FreightRateRuleType.Range) {\r\n            let frs: FreightRateRangeTableViewModel[] = [];\r\n            if (columns.length - 1 != this.SelectedFuelGroups.length || columns[0] != \"UptoQuantity\") {\r\n                Declarations.msgerror(\"Template mistmach with selected fuel group name.\", undefined, undefined);\r\n                return;\r\n            }\r\n\r\n            let i = 0;\r\n            for (i = 0; i < this.SelectedFuelGroups.length; i++) {\r\n                if (this.SelectedFuelGroups[i].Name != columns[i + 1]) {\r\n                    Declarations.msgerror(\"Template mistmach with selected fuel group name order.\", undefined, undefined);\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            for (i = 1; i < rows.length; i++) {\r\n                columns = rows[i].split(\",\");\r\n                if (columns.length == 1) break;\r\n                for (let j = 0; j < columns.length; j++) {\r\n                    let str = columns[j].replace(/\\s/g, \"\");\r\n                    if (!this.isNumber(str)) {\r\n                        Declarations.msgerror(\"Invalid number \" + str + \".\", undefined, undefined);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rows = $event.split(/\\r?\\n/);\r\n            for (i = 1; i < rows.length; i++) {\r\n                columns = rows[i].split(\",\");\r\n                if (columns.length == 1) break;\r\n                //let fr = new FreightRateRangeTableViewModel();\r\n                let frtVM = { UptoQuantity: 0, FuelGroupId: 0, RateValue: 0 };\r\n                for (let j = 0; j < columns.length; j++) {\r\n                    let str = columns[j].replace(/\\s/g, \"\");\r\n                    if (j == 0) {\r\n                        frtVM.UptoQuantity = +str;\r\n                    } else {\r\n                        frtVM.FuelGroupId = this.SelectedFuelGroups.filter(r => r.Name == firstRow[j])[0].Id;\r\n                        frtVM.RateValue = +str;\r\n                        frs.push({ UptoQuantity: frtVM.UptoQuantity, FuelGroupId: frtVM.FuelGroupId, RateValue: frtVM.RateValue });\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.generateRangeTable(frs);\r\n        }\r\n        else if (this.freightRateRuleType == FreightRateRuleType.P2P) {\r\n\r\n            //TODO : validation is not yet converd.\r\n            let frP2P: FreightRatePtoPTable[] = [];\r\n            rows = $event.split(/\\r?\\n/);\r\n            let i = 0;\r\n            for (i = 1; i < rows.length; i++) {\r\n                columns = rows[i].split(\",\");\r\n                if (columns.length == 1) break;\r\n                \r\n                //Terminal/Bulk Plants,Location Name,Location Address,LaneId,Assumed Miles,FuelGroupStd1,FuelGroupStd2,IsLaneRequired\r\n                //Terminals_811|Buckeye - Roseton,14038|loc 1 sep,57 wall street,,,,,\r\n                let row = columns[0].split(\"|\");\r\n                let terminalInfo = { TerminalId: \"\", TerminalAndBulkPlantName:\"\" };\r\n                let bulkPlantInfo = { BulkPlantId: \"\", TerminalAndBulkPlantName: \"\"};\r\n                if (columns[0].startsWith('Terminals_')) {\r\n                    terminalInfo = { TerminalId: row[0].trim(), TerminalAndBulkPlantName: row[1].trim() };\r\n                }\r\n                else if (columns[0].startsWith('BulkPlants_')) {\r\n                    bulkPlantInfo = { BulkPlantId: row[0].trim(), TerminalAndBulkPlantName: row[1].trim() };\r\n                }             \r\n                 row = columns[1].split(\"|\");\r\n                let locationInfo = {\r\n                    JobId: row[0].trim(), LocationName: row[1], LocationAddress: columns[2].trim()\r\n                };\r\n                //let lastPipline = row[2].split(\",\"); //loc 1 sep,57 wall street,laneId,assumedMile,fg1,fg2,islaneRequired\r\n                let LaneId = columns[3].trim();\r\n                let AssumedMiles = columns[4].trim();\r\n                let IsLaneRequired = columns[columns.length-1].trim();\r\n                \r\n                for (let j = 0; j < this.SelectedFuelGroups.length; j++) {\r\n                    let fp2p = new FreightRatePtoPTable();\r\n                    fp2p.TerminalId = terminalInfo.TerminalId == \"\" ? null : +terminalInfo.TerminalId.split('_')[1];\r\n                    fp2p.BulkPlantId = bulkPlantInfo.BulkPlantId == \"\" ? null : +bulkPlantInfo.BulkPlantId.split('_')[1];\r\n                    fp2p.TerminalAndBulkPlantName = terminalInfo.TerminalId == \"\" ? bulkPlantInfo.TerminalAndBulkPlantName: terminalInfo.TerminalAndBulkPlantName;\r\n                    fp2p.LocationName = locationInfo.LocationName;\r\n                    fp2p.LocationAddress = locationInfo.LocationAddress;\r\n                    fp2p.JobId = +locationInfo.JobId;\r\n                    fp2p.LaneID =LaneId;\r\n                    fp2p.AssumedMiles = AssumedMiles;\r\n                    fp2p.IsLaneRequired = (IsLaneRequired==\"0\")?false:true;\r\n                    fp2p.FuelGroupId = this.SelectedFuelGroups[0].Id;\r\n                    fp2p.RateValue = +columns[4+j].trim();\r\n                    frP2P.push(fp2p);\r\n                }\r\n            }\r\n\r\n            //this.freightComponent.closePopup();\r\n\r\n            this.generateP2PTable(frP2P);\r\n        }\r\n\r\n\r\n        Declarations.msgsuccess(\"Import successful.\", undefined, undefined);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","\r\n<form [formGroup]=\"rForm\" (ngSubmit)=\"onSubmit(2)\">\r\n    <div>\r\n        <div *ngIf=\"RuleMode!='CREATE'\">\r\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm()\"><i class=\"fa fa-plus-circle\"></i>Create New</button>\r\n        </div>\r\n        <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n            <div class=\"row mt-2\">\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"RuleType\" id=\"Range\" [name]=\"'RuleType'\" [value]=\"2\"\r\n                                   (change)=\"RuleTypeTypeChange(2)\">\r\n                            <label class=\"form-check-label\" for=\"Range\">Range</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"RuleType\" id=\"P2P\" [name]=\"'RuleType'\" [value]=\"1\"\r\n                                   (change)=\"RuleTypeTypeChange(1)\">\r\n                            <label class=\"form-check-label\" for=\"P2P\">P2P</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"RuleType\" id=\"Route\" [name]=\"'RuleType'\" [value]=\"3\"\r\n                                   (change)=\"RuleTypeTypeChange(3)\">\r\n                            <label class=\"form-check-label\" for=\"Route\">Route</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <app-freight [PricingRuleType]=\"rForm.get('RuleType').value\"\r\n                         [IsEditable]=\"IsEditable\"\r\n                         (onGenerateTable)=\"getOutput($event)\"\r\n                         (onGenerateFuelGroup)=\"onFuelGroupChange($event)\"\r\n                         (onImportClick)=\"onImportClick($event)\">\r\n            </app-freight>\r\n            <div class=\"well bg-white\" *ngIf=\"freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n\r\n\r\n                <div *ngIf=\"rForm.get('RuleType').value==3 && freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n\r\n                           <!--{{rcForm.get('FuelGroupTable').value|json}}-->\r\n                            <h3 class=\"mb-1\">Min Quantity</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"FuelGroupTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('FuelGroupTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('MinQuantity').invalid && groupDetail.get('MinQuantity').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <!--{{rcForm.get('RangeTable').value|json}}-->\r\n                        <table class=\"table table-bordered table-hover mt-3\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colspan=\"3\" align=\"center\">Quantity (Gallons)</th>\r\n                                    <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                        {{item.Name}}\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                <ng-container formArrayName=\"RangeTable\">\r\n                                    <ng-container *ngFor=\"let item of rForm.get('RangeTable')['controls'];let o =index;\">\r\n                                        <ng-container [formGroupName]=\"o\">\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <input type=\"text\" formControlName=\"StartQuantity\" class=\"form-control\" (input)=\"onStartQuantityKeyPress($event,o)\"\r\n                                                           (change)=\"onStartQuantityLostFocus(o)\" />\r\n                                                    <div *ngIf=\"item.get('StartQuantity').invalid && item.get('StartQuantity').touched\" class=\"color-maroon\">\r\n                                                        <div *ngIf=\"item.get('StartQuantity').errors.required\">\r\n                                                            Required.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('StartQuantity').errors.pattern\">\r\n                                                            Invalid, must be greater than zero.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('StartQuantity').errors.InvalidRange\">\r\n                                                            Invalid range.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>To</td>\r\n                                                <td *ngIf=\"!item.get('IsLast').value\">\r\n                                                    <input type=\"text\" formControlName=\"EndQuantity\" class=\"form-control\" (input)=\"onEndQuantityKeyPress(o)\"\r\n                                                           (change)=\"onEndQuantityLostFocus(o)\" />\r\n                                                    <div *ngIf=\"item.get('EndQuantity').invalid && item.get('EndQuantity').touched\" class=\"color-maroon\">\r\n                                                        <div *ngIf=\"item.get('EndQuantity').errors.required\">\r\n                                                            Required.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('EndQuantity').errors.pattern\">\r\n                                                            Invalid, must be greater than zero.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('EndQuantity').errors.InvalidRange\">\r\n                                                            Invalid range.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td *ngIf=\"item.get('IsLast').value\">\r\n                                                    Above\r\n                                                    <!--<input type=\"hidden\" formControlName=\"EndQuantity\" value=\"99999999\" />-->\r\n                                                </td>\r\n\r\n                                                <ng-container formArrayName=\"group\">\r\n                                                    <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                        <ng-container [formGroupName]=\"p\">\r\n                                                            <td>\r\n                                                                <input type=\"text\" formControlName=\"RateValue\" class=\"form-control\" />\r\n                                                                <div *ngIf=\"groupDetail.get('RateValue').invalid && groupDetail.get('RateValue').touched\" class=\"color-maroon\">\r\n                                                                    <div *ngIf=\"groupDetail.get('RateValue').errors.required\">\r\n                                                                        Required.\r\n                                                                    </div>\r\n\r\n                                                                    <div *ngIf=\"groupDetail.get('RateValue').errors.pattern\">\r\n                                                                        Invalid.\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n\r\n                                                <td>\r\n                                                    <ng-container *ngIf=\"o==(rForm.get('RangeTable')['controls'].length-1)\">\r\n                                                        <a type=\"button\"\r\n                                                           class=\"fa fa-plus-circle mt4 mr5 mr10\"\r\n                                                           title=\"Add\"\r\n                                                           (click)=\"AddRanges(o)\">\r\n                                                        </a>\r\n                                                        <a type=\"button\"\r\n                                                           class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\"\r\n                                                           title=\"Remove\"\r\n                                                           (click)=\"RemoveRanges(o)\">\r\n                                                        </a>\r\n                                                    </ng-container>\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"rForm.get('RuleType').value==1 && freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h3 class=\"mb-1\">Min Quantity</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Mixed Load\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Calculation of Mixed fuel group load based on:\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"FuelGroupTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('FuelGroupTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('MinQuantity').invalid && groupDetail.get('MinQuantity').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n\r\n                                                        <input type=\"text\" formControlName=\"MixLoadMinValue\" class=\"form-control\" />\r\n                                                        <div *ngIf=\"item.get('MixLoadMinValue').invalid && item.get('MixLoadMinValue').touched\" class=\"color-maroon\">\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.required\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.pattern\">\r\n                                                                Invalid.\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                                        <div>\r\n                                                            <div class=\"row mb-2\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"RoundUp\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"1\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"RoundUp\">Round Up</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"Proportion\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"2\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"Proportion\">Proportion</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"row\" *ngIf=\"item.get('FreightRateCalcPreferenceType').value==1 && item.get('MixLoadMinValue').value>0\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <ng-multiselect-dropdown formControlName=\"FuelGroups\"\r\n                                                                                             class=\"single-select\"\r\n                                                                                             id=\"fuelGroup\"\r\n                                                                                             [placeholder]=\"'Select fuel group (Required)'\"\r\n                                                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SelectedFuelGroups\">\r\n                                                                    </ng-multiselect-dropdown>\r\n                                                                    <div *ngIf=\"item.get('FuelGroups').invalid && item.get('FuelGroups').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"item.get('FuelGroups').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" [ngClass]=\"{'hide-element':freightComponent.ShowMessage }\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"well bg-white shadow-b\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div id=\"div-p2p-rate-table\" class=\"table-responsive\">\r\n                                            <table class=\"table table-bordered\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"DtTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"ptbp\">\r\n                                                            Terminals/Bulk Plants\r\n                                                        </th>\r\n                                                        <th data-key=\"pln\">\r\n                                                            Location Name\r\n                                                        </th>\r\n                                                        <th data-key=\"pla\">Location Address</th>\r\n                                                        <th data-key=\"pli\">LaneId</th>\r\n                                                        <th data-key=\"pam\">Assumed Miles</th>\r\n                                                        <ng-container *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                                            <th data-key=\"item.Name\">\r\n                                                                {{item.Name}}\r\n                                                            </th>\r\n                                                        </ng-container>\r\n                                                        <th data-key=\"plr\">IsLane Required</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n\r\n                                                    <ng-container formArrayName=\"RangeTable\">\r\n                                                        <ng-container *ngFor=\"let item of rForm.get('RangeTable')['controls'];let o =index;\">\r\n                                                            <ng-container [formGroupName]=\"o\">\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <ng-container *ngIf=\"item.get('IsLast').value==true\">\r\n                                                                            <label> {{item.get('TerminalAndBulkPlantName').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <ng-container>\r\n                                                                            <label> {{item.get('LocationName').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                    </td>\r\n\r\n                                                                    <td class=\"break-word\">\r\n                                                                        <ng-container>\r\n                                                                            <label> {{item.get('LocationAddress').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                    </td>\r\n\r\n                                                                    <td>\r\n                                                                        <ng-container>\r\n                                                                            <label> {{item.get('LaneID').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                        <div *ngIf=\"item.get('LaneID').invalid && item.get('LaneID').touched\" class=\"color-maroon\">\r\n                                                                            <div *ngIf=\"item.get('LaneID').errors.required\">\r\n                                                                                Required.\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"item.get('LaneID').errors.pattern\">\r\n                                                                                Invalid.\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </td>\r\n\r\n                                                                    <td>\r\n                                                                        <input type=\"text\" formControlName=\"AssumedMiles\" class=\"form-control\" />\r\n                                                                        <div *ngIf=\"item.get('AssumedMiles').invalid && item.get('AssumedMiles').touched\" class=\"color-maroon\">\r\n                                                                            <div *ngIf=\"item.get('AssumedMiles').errors.required\">\r\n                                                                                Required.\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"item.get('AssumedMiles').errors.pattern\">\r\n                                                                                Invalid.\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </td>\r\n                                                                    <ng-container formArrayName=\"group\">\r\n                                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                                <td>\r\n                                                                                    <input type=\"text\" formControlName=\"RateValue\" class=\"form-control\" />\r\n                                                                                    <div *ngIf=\"groupDetail.get('RateValue').invalid && groupDetail.get('RateValue').touched\" class=\"color-maroon\">\r\n                                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.required\">\r\n                                                                                            Required.\r\n                                                                                        </div>\r\n\r\n                                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.pattern\">\r\n                                                                                            Invalid.\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </td>\r\n\r\n                                                                            </ng-container>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n\r\n                                                                    <td class=\"text-center\">\r\n                                                                        <input type=\"checkbox\" formControlName=\"IsLaneRequired\" class=\"form-check-input\" [value]=\"1\" />\r\n                                                                    </td>\r\n\r\n                                                                </tr>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n\r\n                                                </tbody>\r\n\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"rForm.get('RuleType').value==2 && freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h3 class=\"mb-1\">Min Quantity</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Mixed Load\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Calculation of Mixed fuel group load based on:\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"FuelGroupTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('FuelGroupTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('MinQuantity').invalid && groupDetail.get('MinQuantity').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                                        <input type=\"text\" formControlName=\"MixLoadMinValue\" class=\"form-control\" />\r\n                                                        <div *ngIf=\"item.get('MixLoadMinValue').invalid && item.get('MixLoadMinValue').touched\" class=\"color-maroon\">\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.required\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.pattern\">\r\n                                                                Invalid.\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                                        <div>\r\n                                                            <div class=\"row mb-2\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"RoundUp\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"1\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"RoundUp\">Round Up</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"Proportion\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"2\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"Proportion\">Proportion</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"row\" *ngIf=\"item.get('FreightRateCalcPreferenceType').value==1 && item.get('MixLoadMinValue').value>0\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <ng-multiselect-dropdown formControlName=\"FuelGroups\"\r\n                                                                                             class=\"single-select\"\r\n                                                                                             id=\"fuelGroup\"\r\n                                                                                             [placeholder]=\"'Select fuel group'\"\r\n                                                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SelectedFuelGroups\">\r\n                                                                    </ng-multiselect-dropdown>\r\n                                                                    <div *ngIf=\"item.get('FuelGroups').invalid && item.get('FuelGroups').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"item.get('FuelGroups').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h3 class=\"mb-1\">Miles Ranges Table</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            Upto\r\n                                        </th>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                        <!--<th>\r\n                                        Status\r\n                                    </th>-->\r\n                                        <th>\r\n                                            Action\r\n                                        </th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    <ng-container formArrayName=\"RangeTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('RangeTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <input type=\"text\" formControlName=\"UptoQuantity\" class=\"form-control\" />\r\n                                                        <div *ngIf=\"item.get('UptoQuantity').invalid && item.get('UptoQuantity').touched\" class=\"color-maroon\">\r\n                                                            <div *ngIf=\"item.get('UptoQuantity').errors.required\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                            <div *ngIf=\"item.get('UptoQuantity').errors.pattern\">\r\n                                                                Invalid, must be greater than zero.\r\n                                                            </div>\r\n                                                            <span *ngIf=\"item.get('UptoQuantity').errors.DuplicateEntry\">\r\n                                                                Duplicate.\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"RateValue\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('RateValue').invalid && groupDetail.get('RateValue').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n\r\n                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                    <!--<td>\r\n                                                    <a type=\"button\"\r\n                                                       class=\"fa fa-exclamation-triangle mt4 mr5 mr10\"\r\n                                                       title=\"Status\">\r\n                                                    </a>\r\n                                                </td>-->\r\n                                                    <td>\r\n                                                        <ng-container>\r\n                                                            <a type=\"button\"\r\n                                                               class=\"fa fa-plus-circle mt4 mr5 mr10\"\r\n                                                               title=\"Add\"\r\n                                                               (click)=\"AddRanges(o)\">\r\n                                                            </a>\r\n                                                            <a type=\"button\"\r\n                                                               class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\"\r\n                                                               title=\"Remove\"\r\n                                                               (click)=\"RemoveRanges(o)\">\r\n                                                            </a>\r\n                                                        </ng-container>\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </fieldset>\r\n        <div class=\"text-right\">\r\n            <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n            <button class=\"btn btn-lg btn-outline-primary\" type=\"button\" (click)=\"onSubmit(1)\" [disabled]=\"disableInputControls ? true : null\">Save Draft</button>\r\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"disableInputControls ? true : null\">Submit</button>\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FreightRateRulesService } from '../Services/freight-rate-rules.service';\r\n\n@Component({\n    selector: 'app-master',\n    templateUrl: './master.component.html',\n    styleUrls: ['./master.component.css']\n})\nexport class MasterComponent implements OnInit {\n    viewType = 0\n    constructor(private router: Router, private freightRateRulesService: FreightRateRulesService) { }\n\n\n\n    ngOnInit() {\n        this.freightRateRulesService.onSelectedTabChanged.subscribe(s => {\r\n            if (s == 2) {\n                this.viewType = 2;\r\n\r\n            }\n            else {\n                this.viewType = 1;\r\n            }\r\n        })\n\n    }\n\n    public changeViewType(value) {\n        this.viewType = value;\n        this.freightRateRulesService.onSelectedFreightRateRuleId.next(null);\n        this.freightRateRulesService.onSelectedTabChanged.next(value);\n\n        //if(this.viewType==1)\n        //this.router.navigate(['/Supplier/FuelSurcharge/CreateNew']);\n    }\n\n\n}\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block border bg-white p-1 radius-capsule shadow-b mb-2\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Create Freight Rate</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">View Freight Rate</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-create-freight-rate-rules *ngIf=\"viewType==1\"></app-create-freight-rate-rules>\r\n\r\n                <app-view-freight-rate-rules *ngIf=\"viewType==2\"></app-view-freight-rate-rules>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FreightRateCalcPreferenceType, FreightRateRuleType, FreightTableStatus, FuelGroupType, TableType } from 'src/app/app.enum';\r\n\r\nexport class FreightRateFuelGroupViewModel {\r\n    MinQuantity: number;\r\n    FuelGroupId: number;\r\n}\r\n\r\nexport class FreightRateRouteTableViewModel {\r\n    StartQuantity: number;\r\n    EndQuantity?: number;\r\n    RateValue: number;\r\n    FuelGroupId: number;\r\n}\r\nexport class FreightRatePtoPTable {\r\n    TerminalAndBulkPlantName : string;\r\n    LocationName : string;\r\n    LocationAddress  : string;\r\n    LaneID: string;\r\n    AssumedMiles: number;\r\n    IsLaneRequired: boolean;\r\n    RateValue: number;\r\n    FuelGroupName: string;\r\n    FuelGroupId : number;\r\n    JobId: number;\r\n    TerminalId?: number;\r\n    BulkPlantId?: number;\r\n\r\n}\r\nexport class FreightRateRangeTableViewModel {\r\n    UptoQuantity: number;\r\n    RateValue: number;\r\n    FuelGroupId: number;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class FreightRateViewModel {\r\n\r\n    Id?: number;\r\n    Name: string;\r\n    Status: FreightTableStatus;\r\n    FreightRateRuleType: FreightRateRuleType;\r\n    FuelGroupType: FuelGroupType;\r\n    MixLoadMinValue: number;\r\n    FreightRateCalcPreferenceType: FreightRateCalcPreferenceType;\r\n    FreightRateCalcPrefFuelGroupId?: number;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    TableType: TableType;\r\n    CustomerIds: number[] = [];\r\n    CarrierIds: number[] = [];\r\n    JobIds: number[] = [];\r\n    FuelGroupIds: number[] = [];\r\n    SourceRegionIds: number[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    FreightRateFuelGroups: FreightRateFuelGroupViewModel[] = [];\r\n    FreightRateRouteTables: FreightRateRouteTableViewModel[] = [];\r\n    FreightRateRangeTables: FreightRateRangeTableViewModel[] = [];\r\n    FreightRatePtoPTables: FreightRatePtoPTable[] = [];\r\n}\r\n\r\n\r\nexport class FreightPricingRulesViewModel {\r\n    \r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];\r\n    Locations: DropdownItem[] = [];\r\n    Carriers: DropdownItem[] = [];\r\n    FuelGroups: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    TableTypeId: number;\r\n    FuelGroupType: FuelGroupType = FuelGroupType.Standard;\r\n    public StartDate: Date;\r\n    public EndDate: Date;\r\n    TableName: string;\r\n    StatusId: number = 2;\r\n}\r\n\r\n\r\n\r\n","import { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport * as moment from 'moment';\r\n\r\nexport class FreightRateModel {\r\n    FreightRateId?: number;\r\n    FreightRateRuleTypes: DropdownItem[] = [];\r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];\r\n    Carriers: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n}\r\n\r\nexport class FreightRateInputModel {\r\n    public FreightRateRuleTypeIds: string;\r\n    public TableTypeIds: string;\r\n    public CustomerIds: string;\r\n    public CarrierIds: string;\r\n    public SourceRegionIds: string;\r\n    public TerminalIds: string;\r\n    public BulkPlantIds: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public IsArchived: boolean;\r\n}\r\n\r\nexport class FreightRateGridModel {\r\n    public Id: number;\r\n    public DateRange: string;\r\n    public FreightRateRuleType: string;\r\n    public TableType: string;\r\n    public TableName: number;\r\n    public Customer: string;\r\n    public Carrier: string;\r\n    public SourceRegion: string;\r\n    public Terminal: string;\r\n    public BulkPlant: string;\r\n    public FuelGroup: string;\r\n    public StatusName: string;\r\n    public IsArchived: boolean;\r\n    public FreightRateRuleTypeValue: number;\r\n    // For UI Dropdown\r\n    public IsShowMore : boolean;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { FreightRateViewModel } from 'src/app/freightRates/Models/createFreightRateRules';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\n\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FreightRateRulesService extends HandleError {\r\n\r\n    public createFreightRateUrl = '/FreightRate/CreateFreightRate';\r\n    public updateFreightRateUrl = '/FreightRate/UpdateFreightRate';\r\n    public getFreightRateDetailUrl = '/FreightRate/GetFreightRateDetails?freightRateId=';\r\n    public archiveFreightRateUrl = '/FreightRate/ArchiveFreightRate';\r\n    public getFreightRateSummaryUrl = '/FreightRate/GetFreightRateSummary';\r\n    public getFreightRateTableForViewUrl = '/FreightRate/GetFreightRateTableForView?freightRateId=';\r\n    public getFreightRateRuleTypesUrl = \"/FreightRate/GetFreightRateRuleTypes\";\r\n    public getCustomerJobsUrl = \"/FreightRate/GetCustomerJobs?customerId=\";\r\n    public onSelectedTabChanged: BehaviorSubject<any>;\r\n    public onSelectedFreightRateRuleId: BehaviorSubject<any>;\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onSelectedTabChanged = new BehaviorSubject(1);\r\n        this.onSelectedFreightRateRuleId = new BehaviorSubject(null);\r\n    }\r\n\r\n    createFreightRate(fsm: FreightRateViewModel): Observable<FreightRateViewModel> {\r\n        return this.httpClient.post<FreightRateViewModel>(this.createFreightRateUrl, fsm, httpOptions)\r\n            .pipe(catchError(this.handleError<FreightRateViewModel>('createFreightRate', fsm)));\r\n    }\r\n\r\n    updateFreightRate(fsm: FreightRateViewModel): Observable<FreightRateViewModel> {\r\n        return this.httpClient.post<FreightRateViewModel>(this.updateFreightRateUrl, fsm, httpOptions)\r\n            .pipe(catchError(this.handleError<FreightRateViewModel>('updateFreightRate', fsm)));\r\n    }\r\n\r\n    getFreightRateRuleTypes(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<any>(this.getFreightRateRuleTypesUrl)\r\n            .pipe(catchError(this.handleError<any>('getFreightRateRuleTypes', null)));\r\n    }\r\n\r\n    getCustomerJobs(customerId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<any>(this.getCustomerJobsUrl + customerId)\r\n            .pipe(catchError(this.handleError<any>('getCustomerJobs', null)));\r\n    }\r\n\r\n    getFreightRateDetails(freightRateId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFreightRateDetailUrl + freightRateId)\r\n            .pipe(catchError(this.handleError<any>('getFuelSurchargeTable', null)));\r\n    }\r\n\r\n    getFreightRateGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.getFreightRateSummaryUrl, filter)\r\n            .pipe(catchError(this.handleError<any>('getFreightRateGridDetails', null)));\r\n    }\r\n\r\n    archiveFreightRate(freightRateId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.archiveFreightRateUrl, { freightRateId: freightRateId })\r\n            .pipe(catchError(this.handleError<any>('archiveFreightRate', null)));\r\n    }\r\n\r\n    getFreightRateTableForView(freightRateId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFreightRateTableForViewUrl + freightRateId)\r\n            .pipe(catchError(this.handleError<any>('getFreightRateTableForView', null)));\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, AfterViewInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage'\r\nimport { FreightRateRulesService } from 'src/app/freightRates/Services/freight-rate-rules.service'\r\nimport { Subject, forkJoin, merge } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FreightRateGridModel, FreightRateInputModel, FreightRateModel } from '../Models/viewFreightRateRules';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n    selector: 'app-view-freight-rate-rules',\r\n    templateUrl: './view-freight-rate-rules.component.html',\r\n    styleUrls: ['./view-freight-rate-rules.component.css']\r\n})\r\nexport class ViewFreightRateRules implements OnInit{\r\n\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    public IsLoading: boolean = false;\r\n    public viewFreightRateForm: FormGroup;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public SinlgeselectSettingsById = {};\r\n    public MultiselectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n    public CounrtyId: any;\r\n    \r\n    public FreightRateRuleTypeList: DropdownItem[];\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    public Frmodel: FreightRateModel;\r\n    public FreightRateList: FreightRateGridModel[] = [];\r\n    public FreightRateInput: FreightRateInputModel;\r\n    constructor(private fb: FormBuilder, private freightRateRulesService: FreightRateRulesService,\r\n        private regionService: RegionService, private fuelsurchargeService: FuelSurchargeService, private cdr: ChangeDetectorRef) { }\r\n\r\n    minDate = new Date();\r\n    maxDate = new Date();\r\n    public popoverTitle: string = 'Archive Confirmation';\r\n    public popoverMessage: string = 'Do you want to archive?';\r\n    public cancelClicked: boolean = false;\r\n    public confirmClicked: boolean = false;\r\n        \r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.minDate.setFullYear(this.minDate.getFullYear() - 20);\r\n        this.CounrtyId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SinlgeselectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.getTableTypes();\r\n        this.getFreightRateRuleTypes();\r\n        this.viewFreightRateForm = this.createForm();\r\n        this.initializeFreightRateDatatableGrid();\r\n    }\r\n    ngOnDestroy() {\r\n        this.datatableInventoryRerender();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.getFreightRateGridDetails();\r\n    }\r\n\r\n\r\n\r\n    public viewFreightRateRule(ruleId: number, freightRateRuleType: number, mode: string) {\r\n        let operation = { RuleId: ruleId, FreightRateRuleType: freightRateRuleType, Mode: mode };\r\n        this.freightRateRulesService.onSelectedFreightRateRuleId.next(JSON.stringify(operation));\r\n        this.freightRateRulesService.onSelectedTabChanged.next(1);\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Frmodel == undefined || this.Frmodel == null) {\r\n            this.Frmodel = new FreightRateModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            FreightRateRuleTypes : new FormControl(this.Frmodel.FreightRateRuleTypes, [Validators.required]),\r\n            TableTypes: new FormControl(this.Frmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Frmodel.Customers),\r\n            Carriers: new FormControl(this.Frmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Frmodel.SourceRegions),\r\n            TerminalsAndBulkPlants: new FormControl(this.Frmodel.TerminalsAndBulkPlants),\r\n            fromDate: [''],\r\n            toDate: [''],\r\n            isArchived: false\r\n        });\r\n    }\r\n\r\n    archiveFreightRate(freightRateId: number) {\r\n        this.IsLoading = true;\r\n        this.freightRateRulesService.archiveFreightRate(freightRateId)\r\n            .subscribe((response: any) => {\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Selected Freight Rate archived successfully', undefined, undefined);\r\n                    this.filterGrid();\r\n                } \r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.viewFreightRateForm.get('Carriers').patchValue([]);\r\n        this.viewFreightRateForm.get('Customers').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                break;\r\n            case 2: // customer\r\n                this.IsCustomerSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n            case 3: //carrier\r\n                this.IsCarrierSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n        }\r\n        this.viewFreightRateForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.viewFreightRateForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.viewFreightRateForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.viewFreightRateForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getFreightRateRuleTypes(): void {\r\n        this.freightRateRulesService.getFreightRateRuleTypes().subscribe(async (data) => {\r\n            this.FreightRateRuleTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers().subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.SourceRegionList = null;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {\r\n        \r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.viewFreightRateForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.viewFreightRateForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(data => {\r\n            this.SourceRegionList = data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.viewFreightRateForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        this.IsSourceRegionSelected = this.Frmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    public onSourceRegionsSelect(item: any): void {\r\n        this.getTerminalsBulkPlant();\r\n        this.IsSourceRegionSelected = this.Frmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#freight-rate-grid-datatable\").DataTable().clear().destroy();\r\n        this.getFreightRateGridDetails();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getFreightRateGridDetails();\r\n        this.CustomerList = [];\r\n        this.CarrierList = [];\r\n        this.SourceRegionList = [];\r\n    }\r\n\r\n    clearForm() {\r\n        this.viewFreightRateForm.reset();\r\n        $(\"#freight-rate-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    getFreightRateGridDetails() {\r\n        var input = new FreightRateInputModel();\r\n\r\n        var selectedFreightRateRuleTypes = this.viewFreightRateForm.get('FreightRateRuleTypes').value as DropdownItem[];\r\n        var selectedTableTypes = this.viewFreightRateForm.get('TableTypes').value as DropdownItem[];\r\n        var selectedCustomers = this.viewFreightRateForm.get('Customers').value as DropdownItem[];\r\n        var selectedCarriers = this.viewFreightRateForm.get('Carriers').value as DropdownItem[];\r\n        var selectedSourceRegions = this.viewFreightRateForm.get('SourceRegions').value as DropdownItem[];\r\n        var selectedTerminalAndBulkPlants = this.viewFreightRateForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n\r\n        input.StartDate = this.viewFreightRateForm.controls.fromDate.value;\r\n        input.EndDate = this.viewFreightRateForm.controls.toDate.value;\r\n        input.IsArchived = this.viewFreightRateForm.controls.isArchived.value;\r\n\r\n        if (selectedFreightRateRuleTypes != null && selectedFreightRateRuleTypes != undefined && selectedFreightRateRuleTypes.length > 0) {\r\n            var freightRateRuleTypeIds = selectedFreightRateRuleTypes.map(s => s.Id);\r\n            input.FreightRateRuleTypeIds = freightRateRuleTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedTableTypes != null && selectedTableTypes != undefined && selectedTableTypes.length > 0) {\r\n            var tableTypeIds = selectedTableTypes.map(s => s.Id);\r\n            input.TableTypeIds = tableTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            var customerIds = selectedCustomers.map(s => s.Id);\r\n            input.CustomerIds = customerIds.join(',');\r\n        }\r\n\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            var carrierIds = selectedCarriers.map(s => s.Id);\r\n            input.CarrierIds = carrierIds.join(',');\r\n        }\r\n\r\n        if (selectedSourceRegions != null && selectedSourceRegions != undefined && selectedSourceRegions.length > 0) {\r\n            var sourceRegionIds = selectedSourceRegions.map(s => s.Id);\r\n            input.SourceRegionIds = sourceRegionIds.join(',');\r\n        }\r\n\r\n        if (selectedTerminalAndBulkPlants != null && selectedTerminalAndBulkPlants != undefined && selectedTerminalAndBulkPlants.length > 0) {\r\n            var selectedTerminalIds = selectedTerminalAndBulkPlants.filter(c => c.Code == \"Terminals\");\r\n            var terminalIds = selectedTerminalIds.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n\r\n            var selectedBulkPlants = selectedTerminalAndBulkPlants.filter(c => c.Code == \"BulkPlants\");\r\n            var bulkPlantIds = selectedBulkPlants.map(s => s.Id);\r\n            input.BulkPlantIds = bulkPlantIds.join(',');\r\n        }\r\n\r\n\r\n        this.IsLoading = true;\r\n        this.cdr.detectChanges();\r\n        this.freightRateRulesService.getFreightRateGridDetails(input).subscribe(data => {\r\n            this.IsLoading = false\r\n            if(data && data.length>0){\r\n                this.FreightRateList = data as FreightRateGridModel[];\r\n            }\r\n\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n\r\n    private datatableInventoryRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n            });\r\n        }\r\n    }\r\n    setfromDate($event) {\r\n        this.viewFreightRateForm.controls.fromDate.setValue($event);\r\n    }\r\n\r\n    settoDate($event) {\r\n        this.viewFreightRateForm.controls.toDate.setValue($event);\r\n    }\r\n\r\n    initializeFreightRateDatatableGrid() {\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Freight Rate', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Freight Rate', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n       \r\n    }\r\n}\r\n\r\n\r\n","<form [formGroup]=\"viewFreightRateForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-left\">\r\n            <a class=\"fs16 mr10 filter-link pa mt-2\" [ngbPopover]=\"popContent\" placement=\"bottom\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-freight-rate-grid\" class=\"table-responsive\">\r\n                                <table id=\"freight-rate-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th class=\"hide-element\" data-key=\"Id\">Id</th>\r\n                                            <th data-key=\"DateRange\">Date Range</th>\r\n                                            <th data-key=\"FreightRateRuleType\">Freight Pricing Rule</th>\r\n                                            <th data-key=\"TableType\">Table Type</th>\r\n                                            <th data-key=\"TableName\">Table Name</th>\r\n                                            <th data-key=\"StatusName\">Status</th>\r\n                                            <th data-key=\"Customer\">Customer(s)</th>\r\n                                            <th data-key=\"Carrier\">Carrier(s)</th>\r\n                                            <th data-key=\"SourceRegion\">Source Region(s)</th>\r\n                                            <th data-key=\"Terminal\">Terminal(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Bulk Plant(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Fuel Group(s)</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let item of FreightRateList,let i = index\" class=\"accordion\" id=\"accordionExample\">\r\n                                            <td class=\"hide-element\">{{item.Id}}</td>\r\n                                            <td>{{item.DateRange}}</td>\r\n                                            <td>{{item.FreightRateRuleType}}</td>\r\n                                            <td>{{item.TableType}}</td>\r\n                                            <td>{{item.TableName}}</td>\r\n                                            <td>{{item.StatusName}}</td>\r\n                                            <td>{{item.Customer}}</td>\r\n                                            <td>{{item.Carrier}}</td>\r\n                                            <td>{{item.SourceRegion}}</td>  \r\n                                            <td *ngIf=\"item.Terminal.length>40\">\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': item.IsShowMore}\">{{item.Terminal}}</div>\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': !item.IsShowMore}\" *ngIf=\"(item.Terminal.length>40)\">{{item.Terminal | slice :0:40}}...</div>\r\n                                                <a (click)=\"item.IsShowMore = !item.IsShowMore\">View More/Less</a>\r\n                                            </td>\r\n                                            <td *ngIf=\"item.Terminal.length<=40\">{{item.Terminal}}</td>\r\n\r\n                                            <td>{{item.BulkPlant}}</td>\r\n                                            <td>{{item.FuelGroup}}</td>\r\n                                            <td>\r\n                                                <a *ngIf=\"!item.IsArchived\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                                   [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                                   (cancel)=\"cancelClicked = true\" (confirm)=\"archiveFreightRate(item.Id)\"><i class=\"fa fa-trash-alt color-maroon \" placement=\"bottom\" ngbTooltip=\"Archive\"></i></a>\r\n\r\n                                                <a *ngIf=\"!item.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFreightRateRule(item.Id,item.FreightRateRuleTypeValue,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\"><i class=\"fas fa-edit\"></i></a>\r\n\r\n                                                <a class=\"btn btn-link fs16 ml-0\" (click)=\"viewFreightRateRule(item.Id,item.FreightRateRuleTypeValue,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">\r\n                                                    <i class=\"fas fa-street-view\"></i>\r\n                                                </a>\r\n\r\n                                                <a *ngIf=\"!item.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFreightRateRule(item.Id,item.FreightRateRuleTypeValue,'COPY');\" placement=\"bottom\" ngbTooltip=\"Copy\"><i class=\"fas fa-copy\"></i></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--<div id=\"freightRate-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Freight Rate Table Details</h3>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #popContent>\r\n        <div class=\"popover-details\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"FreightRateRuleTypes\">Freight Pricing Rule</label>\r\n                        <ng-multiselect-dropdown formControlName=\"FreightRateRuleTypes\"\r\n                                                 id=\"FreightRateRuleTypes\"\r\n                                                 [placeholder]=\"'Select Type (Required)'\"\r\n                                                 [settings]=\"SinlgeselectSettingsById\" [data]=\"FreightRateRuleTypeList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"viewFreightRateForm.get('FreightRateRuleTypes').invalid && viewFreightRateForm.get('FreightRateRuleTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"viewFreightRateForm.get('FreightRateRuleTypes').errors.required\">\r\n                                Freight Pricing Rule is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TableTypes\">Table Type</label>\r\n                        <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                 id=\"TableTypes\"\r\n                                                 [placeholder]=\"'Select Type (Required)'\"\r\n                                                 [settings]=\"SinlgeselectSettingsById\" [data]=\"TableTypeList\"\r\n                                                 (onSelect)=\"onTableTypeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"viewFreightRateForm.get('TableTypes').invalid && viewFreightRateForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"viewFreightRateForm.get('TableTypes').errors.required\">\r\n                                Table Type is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customers\">Customer(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     id=\"Customers\"\r\n                                                     [placeholder]=\"'Select Customers'\"\r\n                                                     (onSelect)=\"onCustomersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCustomersDeSelect($event)\"\r\n                                                     [settings]=\"MultiselectSettingsById\"  [data]=\"CustomerList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Carriers\">Carrier(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                     id=\"Carriers\"\r\n                                                     [settings]=\"MultiselectSettingsById\"\r\n                                                     [data]=\"CarrierList\"\r\n                                                     [placeholder]=\"'Select Carriers'\"\r\n                                                     (onSelect)=\"onCarriersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCarriersDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"SourceRegions\">Source Region(s)</label>\r\n                        <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                 id=\"SourceRegions\"\r\n                                                 [settings]=\"MultiselectSettingsById\" \r\n                                                 [data]=\"SourceRegionList\"\r\n                                                 [placeholder]=\"'Select Source Regions'\"\r\n                                                 (onSelect)=\"onSourceRegionsSelect($event)\"\r\n                                                 (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                 (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\">\r\n                        </ng-multiselect-dropdown>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                        <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                              [data]=\"TerminalsAndBulkPlantList\"\r\n                                              formControlName=\"TerminalsAndBulkPlants\"\r\n                                              [settings]=\"MultiSelectSettingsByGroup\">\r\n                        </angular2-multiselect>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>From</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"fromDate\"\r\n                               (onDateChange)=\"setfromDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>To</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"toDate\" [minDate]=\"minDate\"\r\n                               [maxDate]=\"maxDate\" (onDateChange)=\"settoDate($event);\" class=\"form-control datepicker\"\r\n                               myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-6 form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" formControlName=\"isArchived\" type=\"checkbox\" value=\"\" id=\"ckb-isArchived\">\r\n                        <label class=\"form-check-label\" for=\"ckb-isArchived\">\r\n                            Show Archived\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6 text-right form-buttons mt20\">\r\n                    <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                    <button id=\"filter-freight-rate-grid\" type=\"button\" class=\"btn btn-lg btn-primary mt3 valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid();p.close()\">Apply</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </ng-template>\r\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MasterComponent } from './Master/master.component';\nimport { CreateFreightRateRules } from './Create/create-freight-rate-rules-component';\nimport { ViewFreightRateRules } from './View/view-freight-rate-rules.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { FreightComponent } from '../shared-components/Freight/freight.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nconst route: Routes = [\n    { path: '', component: MasterComponent },\n    { path: 'Create', component: MasterComponent },\n    { path: 'Create/:freightrateruleId', component: MasterComponent }\n]\n\n@NgModule({\n    declarations: [\n        MasterComponent,\n        CreateFreightRateRules,\n        ViewFreightRateRules,\n        FreightComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        FormsModule,\n        DataTablesModule,\n        DirectiveModule,\n        RouterModule.forChild(route),\n        AngularMultiSelectModule\n    ]\n})\nexport class FreightRateRulesModule { }\n","import { Component, OnInit, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, EventEmitter, OnChanges, SimpleChanges, ElementRef, ViewChild } from '@angular/core';\r\nimport { FreightPricingRulesViewModel } from 'src/app/freightRates/Models/createFreightRateRules'\r\nimport { ExternalMappingsService } from 'src/app/self-service-alias/service/externalmappings.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage'\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service'\r\nimport { Subject, forkJoin, merge, BehaviorSubject } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport * as moment from 'moment';\r\nimport { pairwise, startWith } from 'rxjs/operators';\r\nimport { FreightRateRulesService } from '../../freightRates/Services/freight-rate-rules.service';\r\nimport { FreightRateRuleType, FreightTableStatus, FuelGroupType, SourceRegionInputModel, TableType } from 'src/app/app.enum';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-freight',\r\n    templateUrl: './freight.component.html',\r\n    styleUrls: ['./freight.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FreightComponent implements OnInit, OnChanges {\r\n    @Input() PricingRuleType: number;\r\n    @Input() IsEditable: boolean;\r\n    @Output() onGenerateTable = new EventEmitter<any>();\r\n    @Output() onGenerateFuelGroup = new EventEmitter<any>();\r\n    @Output() onImportClick = new EventEmitter<any>();\r\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\r\n\r\n    public rcForm: FormGroup;\r\n\r\n    public DtTrigger: Subject<any> = new Subject();\r\n\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n\r\n    public isLoadingSubject: BehaviorSubject<any>;\r\n\r\n    public IsLoaded: boolean = true;\r\n\r\n    public Fsmodel: FreightPricingRulesViewModel;\r\n    public CountryId: any;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public FuelGroupsList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public LocationList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n\r\n    public SelectedFiles: File[] = [];\r\n    public IsShowBulkUploadPopup: boolean = false;\r\n    public MaxFileUploadSize: number = 1048576; // 1MB\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    public disableInputControls: boolean = false;\r\n\r\n    public ShowMessage = false;\r\n\r\n    public decimalSupportedRegx = /^(?:(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?|\\.[0-9]+)$/;\r\n    public intGreaterThanZeroRegx = /^[1-9][0-9]*$/;\r\n\r\n    public MinStartDate = new Date();\r\n    public MaxStartDate = new Date();\r\n    public MinToDate = new Date();\r\n    public MinFromDate = new Date();\r\n\r\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService, private freightRateRulesService: FreightRateRulesService,\r\n        private regionService: RegionService, private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.isLoadingSubject = new BehaviorSubject(false);\r\n        this.CountryId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select Terminals or Bulk Plants\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        var dt = moment(new Date()).toDate();\r\n        this.rcForm = this.createForm();\r\n        this.getTableTypes();\r\n        this.rcForm.get('FuelGroupType').setValue(FuelGroupType.Standard);\r\n        this.getFuelGroups(FuelGroupType.Standard, \"\");\r\n        if (this.PricingRuleType != FreightRateRuleType.P2P) {\r\n            this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Master, Name: \"Master\" }]);// default will master\r\n            this.IsMasterSelected = true;\r\n        } else {\r\n            this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Customer, Name: \"Customer Specific\" }]);\r\n            this.IsCustomerSelected = true;\r\n            //this.IsMasterSelected = false;\r\n        }\r\n        this.getSourceRegions(TableType.Master.toString());\r\n\r\n        merge(\r\n            this.rcForm.get('Customers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.CustomerChange(prev, next);\r\n            });\r\n\r\n\r\n        merge(\r\n            this.rcForm.get('Locations').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.LocationChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('Carriers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.CarrierChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.SourceRegionChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('TerminalsAndBulkPlants').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.TerminalsAndBulkPlantsChange(prev, next);\r\n            });\r\n\r\n\r\n        merge(\r\n            this.rcForm.get('FuelGroups').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.FuelGroupsChange(prev, next);\r\n            });\r\n\r\n        \r\n        this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 20);\r\n        this.MinStartDate.setFullYear(this.MinStartDate.getFullYear() - 20);\r\n        this.rcForm.get('StartDate').setValue(moment(dt).format('MM/DD/YYYY'));\r\n\r\n    }\r\n\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.PricingRuleType && change.PricingRuleType.currentValue) {\r\n            this.PricingRuleType = change.PricingRuleType.currentValue;\r\n            if (change.PricingRuleType.previousValue && change.PricingRuleType.currentValue != change.PricingRuleType.previousValue) {\r\n               \r\n            }\r\n        }\r\n\r\n        if (change.IsEditable && change.IsEditable.currentValue) {\r\n            this.IsEditable = change.IsEditable.currentValue;\r\n            if (change.IsEditable.previousValue && change.IsEditable.currentValue != change.IsEditable.previousValue) {\r\n                // todo : will progress\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Fsmodel == undefined || this.Fsmodel == null) {\r\n            this.Fsmodel = new FreightPricingRulesViewModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            FuelGroupType: new FormControl(this.Fsmodel.FuelGroupType),\r\n            TableTypeId: new FormControl(this.Fsmodel.TableTypeId),\r\n            TableName: new FormControl(this.Fsmodel.TableName, Validators.required),\r\n            TableTypes: new FormControl(this.Fsmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Fsmodel.Customers),\r\n            Locations: new FormControl(this.Fsmodel.Locations),\r\n            Carriers: new FormControl(this.Fsmodel.Carriers),\r\n            FuelGroups: new FormControl(this.Fsmodel.FuelGroups, [Validators.required]),\r\n            SourceRegions: new FormControl(this.Fsmodel.SourceRegions, [Validators.required]),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            StatusId: new FormControl(this.Fsmodel.StatusId),\r\n            StartDate: new FormControl(this.Fsmodel.StartDate, [Validators.required]),\r\n            EndDate: new FormControl(this.Fsmodel.EndDate),\r\n            RangeStartValue: new FormControl('', [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            RangeEndValue: new FormControl('', [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            RangeInterval: new FormControl('', [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)])\r\n\r\n        });\r\n    }\r\n\r\n    public setStartDate(event: any): void {\r\n        this.rcForm.get('StartDate').setValue(event);\r\n        if (this.rcForm.get('StartDate').value != null && this.rcForm.get('StartDate').value != undefined && this.rcForm.get('StartDate').value != \"\") {\r\n            this.MinToDate = new Date(moment(this.rcForm.get('StartDate').value).format());\r\n        }\r\n    }\r\n\r\n    public setEndDate(event: any): void {\r\n        this.rcForm.get('EndDate').setValue(event);\r\n    }\r\n   \r\n\r\n    public FuelGroupTypeChange(fgt: number): void {\r\n        this.isLoadingSubject.next(true);\r\n        //this.ViewOrEdit = \"VIEW\";\r\n        this.rcForm.get('FuelGroups').patchValue([]);\r\n        let selectedCustomers: DropdownItem[] = [];\r\n        let selectedCarriers: DropdownItem[] = [];\r\n        \r\n        selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];        \r\n        selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n\r\n        if (selectedCustomers.length > 1 || selectedCarriers.length > 1 || (selectedCustomers.length > 0 && selectedCarriers.length > 0)) {\r\n            this.getFuelGroups(FuelGroupType.Standard, \"\");\r\n        } else {\r\n            this.getFuelGroups(fgt, selectedCustomers.length > 0 ? selectedCustomers.map(s => s.Id).join(',') : selectedCarriers.map(s => s.Id).join(','));\r\n        }\r\n\r\n        this.isLoadingSubject.next(false);\r\n\r\n    }\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.rcForm.get('Carriers').patchValue([]);\r\n        this.rcForm.get('Customers').patchValue([]);\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.rcForm.controls.SourceRegions.patchValue([]);\r\n\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                //this.IsCarrierSelected = true;\r\n                //this.getCarriers();\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]); //\"Carriers,Customers\"\r\n                this.getSourceRegions(item.Id);\r\n                this.rcForm.get('FuelGroupType').setValue(FuelGroupType.Standard);\r\n                \r\n                break;\r\n            case 2: // customer\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                this.IsCustomerSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Customers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Carriers')]);\r\n                \r\n                break;\r\n            case 3: //carrier\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                this.IsCarrierSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Customers')]);\r\n                \r\n                break;\r\n        }\r\n       \r\n        this.getFuelGroups(+this.rcForm.get('FuelGroupType').value, \"\");\r\n       \r\n    }\r\n\r\n    public LocationChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.ShowMessage = true;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.rcForm.controls.SourceRegions.patchValue([]);\r\n        //this.rcForm.controls.FuelGroups.patchValue([]);\r\n    }\r\n    public CustomerChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.rcForm.controls.Locations.patchValue([]);\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.rcForm.controls.SourceRegions.patchValue([]);\r\n        //this.rcForm.controls.FuelGroups.patchValue([]);\r\n        //this.FuelGroupsList = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n\r\n        if (this.IsCustomerSelected) {\r\n            this.getSourceRegions(TableType.Customer.toString()); \r\n        }\r\n        if (this.IsCarrierSelected) {\r\n            this.getSourceRegions(TableType.Carrier.toString());\r\n        }        \r\n\r\n        if (selectedCustomers.length > 1 || selectedCarriers.length > 1 || (selectedCustomers.length > 0 && selectedCarriers.length > 0)) {\r\n            this.getFuelGroups(FuelGroupType.Standard, \"\");\r\n        } else {\r\n            this.getFuelGroups(+this.rcForm.get('FuelGroupType').value, selectedCustomers.length > 0 ? selectedCustomers.map(s => s.Id).join(',') : selectedCarriers.map(s => s.Id).join(','));\r\n        }\r\n\r\n        if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            if (selectedCustomers.length > 0) {\r\n                this.freightRateRulesService.getCustomerJobs(selectedCustomers[0].Id).subscribe(async (data) => {\r\n                    this.LocationList = await (data);\r\n                    this.DtTrigger.next();\r\n                    this.isLoadingSubject.next(false);\r\n                });\r\n            }\r\n            this.AddRemoveValidations([this.rcForm.get('Locations')], null);\r\n        } else {\r\n            this.AddRemoveValidations(null, [this.rcForm.get('Locations')]);\r\n        }\r\n\r\n    }\r\n\r\n    public CarrierChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.ShowMessage = true;\r\n        this.CustomerChange(prev, next);\r\n    }\r\n\r\n\r\n    public FuelGroupsChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.ShowMessage = true;\r\n        this.onGenerateFuelGroup.emit(true);\r\n    }\r\n    public TerminalsAndBulkPlantsChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        //this.rcForm.controls.FuelGroups.patchValue([]);\r\n    }\r\n\r\n    public SourceRegionChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        //this.FuelGroupsList = [];\r\n        this.IsSourceRegionSelected = false\r\n        var ids = [];\r\n        this.ShowMessage = true;\r\n\r\n        let selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions.length > 0) {\r\n            this.isLoadingSubject.next(true);\r\n            selectedSourceRegions.forEach(s => ids.push(s.Id));\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(ids.join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList);\r\n                this.IsSourceRegionSelected = true;\r\n                this.DtTrigger.next();\r\n                this.isLoadingSubject.next(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public ValidateOnSubmit(freightTableStatus: number): boolean {\r\n        this.isLoadingSubject.next(true);\r\n        this.ShowMessage = false;\r\n        // publish or draft\r\n        this.modeChangePublishORdraftValidators(freightTableStatus);\r\n        this.markFormGroupTouched(this.rcForm)\r\n        this.isLoadingSubject.next(false);\r\n\r\n        if (!this.rcForm.valid) {\r\n            //let selectedSourceRegion = this.rcForm.get('FuelGroups').value as DropdownItem[];\r\n            this.ShowMessage = true;\r\n        }\r\n\r\n        return this.ShowMessage;\r\n    }\r\n\r\n    public ValidateOnGenearteRow(): boolean {\r\n        this.isLoadingSubject.next(true);\r\n        this.ShowMessage = false;\r\n        // publish or draft\r\n        this.clearAllValidations(this.rcForm); // clear all validation\r\n        this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for all mode\r\n\r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            this.AddRemoveValidations([this.rcForm.controls.RangeStartValue], null);\r\n            this.AddRemoveValidations([this.rcForm.controls.RangeEndValue],null);\r\n            this.AddRemoveValidations([this.rcForm.controls.RangeInterval], null);\r\n        }\r\n\r\n        this.AddRemoveValidations([this.rcForm.controls.FuelGroups], null);\r\n\r\n        this.AddRemoveValidations([this.rcForm.controls.TerminalsAndBulkPlants], null);\r\n        if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            this.AddRemoveValidations([this.rcForm.controls.Locations], null);\r\n            this.AddRemoveValidations([this.rcForm.controls.Customers], null);\r\n        }\r\n\r\n        this.rcForm.get('StartDate').setValidators([Validators.required]);\r\n        this.rcForm.get('StartDate').updateValueAndValidity();\r\n        this.rcForm.get('StartDate').markAsTouched();\r\n        this.markFormGroupTouched(this.rcForm)\r\n        this.isLoadingSubject.next(false);\r\n\r\n        if (!this.rcForm.valid) {\r\n            this.ShowMessage = true;\r\n        }\r\n        \r\n        return this.ShowMessage;\r\n    }\r\n\r\n    public generateTable(): void {\r\n        this.ValidateOnGenearteRow();\r\n        this.rcForm.get('SourceRegions').setValidators([Validators.required]);\r\n        this.rcForm.get('SourceRegions').updateValueAndValidity();\r\n        this.onGenerateTable.emit(true);\r\n    }\r\n\r\n\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private modeChangePublishORdraftValidators(statusId: number) {\r\n\r\n        this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for all mode\r\n\r\n        if (statusId == FreightTableStatus.Draft) {\r\n            this.clearAllValidations(this.rcForm); // clear all validation\r\n            this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for draft \r\n        }\r\n        else if (statusId == FreightTableStatus.Published) {            \r\n            this.AddRemoveValidations([this.rcForm.controls.FuelGroups], null);\r\n            this.AddRemoveValidations([this.rcForm.controls.TerminalsAndBulkPlants], null);\r\n            this.AddRemoveValidations(null, [this.rcForm.controls.RangeStartValue]);\r\n            this.AddRemoveValidations(null, [this.rcForm.controls.RangeEndValue]);\r\n            this.AddRemoveValidations(null, [this.rcForm.controls.RangeInterval]);\r\n            if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n                this.AddRemoveValidations([this.rcForm.controls.Locations], null);\r\n                this.AddRemoveValidations([this.rcForm.controls.Customers], null);\r\n            }\r\n\r\n            this.rcForm.get('StartDate').setValidators([Validators.required]);\r\n            this.rcForm.get('StartDate').updateValueAndValidity();\r\n            this.rcForm.get('StartDate').markAsTouched();\r\n\r\n        }\r\n    }\r\n\r\n    private clearAllValidations(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n            control.clearValidators();\r\n            control.updateValueAndValidity();\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.clearAllValidations(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private markFormGroupTouched(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.markFormGroupTouched(control);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public ngOnDestroy(): void {\r\n        this.DtTrigger.unsubscribe();\r\n    }\r\n\r\n\r\n    private getCarriers(): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.DtTrigger.next();\r\n                this.isLoadingSubject.next(false);\r\n            });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n               let tableType = await (data);\r\n                this.TableTypeList = tableType.filter(s => s.Id == FreightRateRuleType.P2P)\r\n            } else {\r\n                this.TableTypeList = await (data);\r\n            }\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await (data);\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n   \r\n    private getFuelGroups(fuelGroupType:number, companyIds: string): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.rcForm.get('FuelGroupType').setValue(fuelGroupType);\r\n        this.externalMappingsService.getFuelGroups(fuelGroupType,companyIds).subscribe(async (data) => {\r\n            this.FuelGroupsList = await (data);\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n\r\n    //companyIds : Based on tableType we will be call API , if tableType master or customer or carrier, full source region,customers,carriers loads will populated.\r\n    private getSourceRegions(tableType: string): void {\r\n        this.isLoadingSubject.next(true);\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(async (data) => {\r\n            this.SourceRegionList = await (data);\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n\r\n    public importClick() {\r\n        this.generateTable();\r\n        if (!this.ShowMessage) this.IsShowBulkUploadPopup = true;\r\n    }\r\n\r\n    public closePopup() {\r\n        this.IsShowBulkUploadPopup = false;\r\n    }\r\n\r\n    get IsRangePopupOpen(){\r\n        let selectedFuelGroups = this.rcForm.get('FuelGroups').value as DropdownItem[];\r\n       \r\n        return selectedFuelGroups.length > 0 && !this.ShowMessage && (this.PricingRuleType == FreightRateRuleType.P2P || (this.rcForm.get('RangeStartValue').value > 0 && this.rcForm.get('RangeEndValue').value > 0 && this.rcForm.get('RangeInterval').value > 0));\r\n        \r\n    }\r\n\r\n    public selectFiles(files: File[]) {\r\n        if (files != null && files != undefined && files.length > 0)\r\n            this.SelectedFiles = files;\r\n    }\r\n\r\n    private GenerateRange(start: number, end: number, step: number = 0) {\r\n        let output = [];\r\n        if (typeof end === 'undefined') {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        for (let i = start; i <= end; i += step) {\r\n            output.push(i);\r\n        }\r\n        return output;\r\n    }\r\n    public downloadCsvTemplate() {\r\n        this.isLoadingSubject.next(true);\r\n        const a = document.createElement('a');\r\n        var columnName = [];\r\n        var template: string;\r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            columnName.push(\"Upto\");\r\n        }\r\n        else if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            columnName.push(\"Terminal/Bulk Plants\");\r\n            columnName.push(\"Location Name\");\r\n            columnName.push(\"Location Address\");\r\n            columnName.push(\"LaneId\");            \r\n            columnName.push(\"Assumed Miles\");\r\n        }\r\n        let selectedFuelGroups = this.rcForm.get('FuelGroups').value as DropdownItem[];\r\n        let rep = \",\";\r\n        selectedFuelGroups.forEach(s => columnName.push(s.Name));\r\n        template = columnName.join(',');\r\n        if (this.PricingRuleType == FreightRateRuleType.P2P) {            \r\n            template = template.concat(\",IsLaneRequired\") + \"\\n\";\r\n            var cols = [];\r\n            let trbls = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n            let sLocations = this.rcForm.get('Locations').value as DropdownItem[];\r\n            let JobIds: number[] = [];\r\n            sLocations.forEach(s => JobIds.push(s.Id));\r\n            let locs = this.LocationList.filter(this.IdInComparer(JobIds));\r\n            for (var i = 0; i < trbls.length; i++) {\r\n                for (var j = 0; j < locs.length; j++) {                  \r\n                    template = template.concat(trbls[i].Id + \"|\" + trbls[i].Name + \",\" + locs[j].Id + \"|\" + locs[j].Name + \",\" + locs[j].Code + ',' + trbls[i].Id.split(\"_\")[1] + \" \" + locs[j].Id ) + rep.repeat(selectedFuelGroups.length+2) + \"1\"  + \"\\n\";\r\n                }\r\n               \r\n            }\r\n        }\r\n        \r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            let start = this.rcForm.get('RangeStartValue').value;\r\n            let stop = this.rcForm.get('RangeEndValue').value;\r\n            let step = this.rcForm.get('RangeInterval').value;\r\n            template = template + \"\\n\";\r\n            this.GenerateRange(+start, +stop, +step).forEach(res => {\r\n                template = template + \",\".repeat(selectedFuelGroups.length) + \"\\n\";\r\n            });\r\n        }\r\n\r\n\r\n        var blob = new Blob([\"\\ufeff\", template]);\r\n        const objectUrl = URL.createObjectURL(blob);\r\n        a.href = objectUrl;\r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            a.download = 'FreightRate_Range_Table_Template.csv';\r\n        }\r\n        else if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            a.download = 'FreightRate_P2P_Table_Template.csv';\r\n        }\r\n        a.click();\r\n        URL.revokeObjectURL(objectUrl);\r\n        this.isLoadingSubject.next(false);\r\n    }\r\n\r\n\r\n\r\n    private getExtension(fileName) {\r\n        // extract file name from full path ...\r\n        var basename = fileName.split(/[\\\\/]/).pop();\r\n\r\n        // (supports `\\\\` and `/` separators)\r\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\r\n\r\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\r\n            return \"\";                             //  `.` not found (-1) or comes first (0)\r\n\r\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\r\n    }\r\n\r\n\r\n    public uploadRangeTableFile() {\r\n        var files = this.SelectedFiles;\r\n        if (files.length === 0)\r\n            return;\r\n\r\n        const formData = new FormData();\r\n        for (var file of files) {\r\n            if (!this.isValidFile(file)) {\r\n                return;\r\n            }\r\n            formData.append(file.name, file);\r\n        }\r\n\r\n        this.isLoadingSubject.next(true);\r\n\r\n        let reader: FileReader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e) => {\r\n            this.CloseBulkUploadPopup.nativeElement.click();\r\n            this.onImportClick.emit(reader.result as string);\r\n            this.SelectedFiles = [];\r\n            this.isLoadingSubject.next(false);\r\n        }\r\n        \r\n    }\r\n\r\n    public isValidFile(file: File) {\r\n        var isValid = true;\r\n        var extension = this.getExtension(file.name);\r\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\r\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        if (file.size > this.MaxFileUploadSize) {\r\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    private IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                //console.log(other + \" : \" + current.Id);\r\n                return other == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","<form [formGroup]=\"rcForm\">\r\n    <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n        <div class=\"well bg-white\">\r\n            <div class=\"row\">\r\n                <div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                    <label>Table Name</label>\r\n                    <input type=\"text\" [readonly]=\"!IsEditable?true:null\" formControlName=\"TableName\" class=\"form-control\" />\r\n                    <div *ngIf=\"rcForm.get('TableName').invalid && rcForm.get('TableName').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.get('TableName').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                        <label for=\"TableTypes\">Table Type</label>\r\n                        <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                 [disabled]=\"PricingRuleType==1\"\r\n                                                 class=\"single-select\"\r\n                                                 id=\"TableTypes\"\r\n                                                 [placeholder]=\"'Select Type'\"\r\n                                                 [settings]=\"SingleSelectSettingsById\"\r\n                                                 [data]=\"TableTypeList\"\r\n                                                 (onSelect)=\"onTableTypeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"rcForm.get('TableTypes').invalid && rcForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('TableTypes').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                        <div class=\"col-sm-3\" [ngClass]=\"{'hide-element':PricingRuleType==1,'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customers\">Select Customer(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     id=\"Customers\"\r\n                                                     [data]=\"CustomerList\"\r\n                                                     [placeholder]=\"'Select Customers'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-3 form-group\" [ngClass]=\"{'hide-element':PricingRuleType!=1,'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customer\">Select Customer</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     class=\"single-select\"\r\n                                                     id=\"Customer\"\r\n                                                     [data]=\"CustomerList\"\r\n                                                     [placeholder]=\"'Select Customer'\"\r\n                                                     [settings]=\"SingleSelectSettingsById\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                            <div *ngIf=\"IsCustomerSelected && rcForm.get('Customers').invalid && rcForm.get('Customers').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('Customers').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 form-group\" [ngClass]=\"{'hide-element':PricingRuleType!=1,'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Locations\">Select Location(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Locations\"\r\n                                                     id=\"Locations\"\r\n                                                     [data]=\"LocationList\"\r\n                                                     [placeholder]=\"'Select Locations'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                            <div *ngIf=\"IsCustomerSelected && rcForm.get('Locations').invalid && rcForm.get('Locations').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('Locations').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Carriers\">Select Carrier(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                     id=\"Carriers\"\r\n                                                     [placeholder]=\"'Select Carriers'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\"\r\n                                                     [data]=\"CarrierList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"IsCarrierSelected && rcForm.get('Carriers').invalid && rcForm.get('Carriers').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('Carriers').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                        <label for=\"SourceRegions\">Select Source Region(s)</label>\r\n                        <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                 id=\"SourceRegions\"\r\n                                                 [placeholder]=\"'Select Source Regions'\"\r\n                                                 [settings]=\"MultiSelectSettingsById\"\r\n                                                 [data]=\"SourceRegionList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"rcForm.get('SourceRegions').invalid && rcForm.get('SourceRegions').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('SourceRegions').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3 form-group\">\r\n\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsSourceRegionSelected}\">\r\n                            <label for=\"TerminalsAndBulkPlants\">Select Terminal(s)/BulkPlant(s)</label>\r\n                            <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                  [data]=\"TerminalsAndBulkPlantList\"\r\n                                                  formControlName=\"TerminalsAndBulkPlants\"\r\n                                                  [settings]=\"MultiSelectSettingsByGroup\">\r\n                            </angular2-multiselect>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <div class=\"form-group\">\r\n                                <label>Effective From</label>\r\n                                <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\"\r\n                                       placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                       (onDateChange)=\"setStartDate($event);\" [minDate]=\"MinStartDate\"\r\n                                       [maxDate]=\"MaxStartDate\" />\r\n                                <div *ngIf=\"rcForm.get('StartDate').invalid && rcForm.get('StartDate').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('StartDate').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <div class=\"form-group\">\r\n                                <label>End Date (Optional) </label>\r\n                                <!--<input type=\"text\" class=\"form-control\" formControlName=\"EndDate\" />-->\r\n                                <input type=\"text\" formControlName=\"EndDate\" class=\"form-control datepicker\"\r\n                                       placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                       (onDateChange)=\"setEndDate($event);\" [minDate]=\"MinToDate\" [maxDate]=\"MaxStartDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-standard\" [name]=\"'FuelGroupType'\" [value]=\"1\"\r\n                                   (change)=\"FuelGroupTypeChange(1)\">\r\n                            <label class=\"form-check-label\" for=\"occurance-standard\">Standard</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-custom\" [name]=\"'FuelGroupType'\" [value]=\"2\"\r\n                                   (change)=\"FuelGroupTypeChange(2)\"\r\n                                   [attr.disabled]=\"IsMasterSelected || rcForm.get('Customers').value.length>1 || rcForm.get('Carriers').value.length>1 || (rcForm.get('Customers').value.length>0 && rcForm.get('Carriers').value.length>0) ?true:null\">\r\n                            <label class=\"form-check-label\" for=\"occurance-custom\">Custom</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3 form-group\">\r\n                    <label class=\"form-check-label\" for=\"selectfuelGroups\">Fuel Groups</label>\r\n                    <ng-multiselect-dropdown formControlName=\"FuelGroups\"\r\n                                             id=\"selectfuelGroups\"\r\n                                             [placeholder]=\"'Select Fuel Group'\"\r\n                                             [settings]=\"MultiSelectSettingsById\"\r\n                                             [data]=\"FuelGroupsList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"rcForm.get('FuelGroups').invalid && rcForm.get('FuelGroups').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.get('FuelGroups').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\" *ngIf=\"PricingRuleType==2\">\r\n                <div class=\"col-sm-4\">\r\n                    <table class=\"table table-bordered table-hover mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan=\"4\">Range Value</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Start Value</th>\r\n                                <th>End Value</th>\r\n                                <th>Interval</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <input type=\"text\" formControlName=\"RangeStartValue\" class=\"form-control\" />\r\n                                    <div *ngIf=\"rcForm.get('RangeStartValue').invalid && rcForm.get('RangeStartValue').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('RangeStartValue').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.get('RangeStartValue').errors.pattern\">\r\n                                            Invalid, must be greater than zero.\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" formControlName=\"RangeEndValue\" class=\"form-control\" />\r\n                                    <div *ngIf=\"rcForm.get('RangeEndValue').invalid && rcForm.get('RangeEndValue').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('RangeEndValue').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.get('RangeEndValue').errors.pattern\">\r\n                                            Invalid, must be greater than zero.\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" formControlName=\"RangeInterval\" class=\"form-control\" />\r\n                                    <div *ngIf=\"rcForm.get('RangeInterval').invalid && rcForm.get('RangeInterval').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('RangeInterval').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.get('RangeInterval').errors.pattern\">\r\n                                            Invalid, must be greater than zero.\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"rcForm.get('RangeStartValue').valid && rcForm.get('RangeEndValue').valid && +(rcForm.get('RangeStartValue').value)>+(rcForm.get('RangeEndValue').value)\" class=\"color-maroon\">\r\n                                        Invalid range.\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3 form-group\">\r\n                    <input type=\"button\" class=\"btn btn-primary ml-0\"\r\n                           (click)=\"generateTable()\" value=\"Generate Table\" />\r\n                    <div *ngIf=\"ShowMessage\" class=\"color-maroon\">\r\n                        Please click to generate table.\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3\" *ngIf=\"PricingRuleType!=3\">\r\n                    <button type=\"button\" class=\"btn btn-primary float-right mb5 valid\"\r\n                            [disabled]=\"!IsRangePopupOpen\"\r\n                            (click)=\"importClick()\" data-toggle=\"modal\" data-target=\"#RangeFreightRateModalPopup\">\r\n                        Import\r\n                        <span *ngIf=\"PricingRuleType==1\">P2P</span>\r\n                        <span *ngIf=\"PricingRuleType==2\">Range</span>\r\n                        Table\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>\r\n\r\n<div id=\"RangeFreightRateModalPopup\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowBulkUploadPopup && IsRangePopupOpen\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header pt0 pb5\">\r\n                <h4 class=\"modal-title\">Upload Range Table</h4>\r\n                <button type=\"button\" #btnCloseBulkUploadPopup class=\"close color-grey\" data-dismiss=\"modal\"\r\n                        aria-label=\"Close\" (click)=\"closePopup()\">\r\n                    <i class=\"fa fa-close fs21 mt15\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"mb10\">\r\n                    <span class=\"fa fa-download mr10 mt10\"></span>\r\n                    <a role=\"button\" (click)=\"downloadCsvTemplate()\" class=\"mb5 btn-download\">Download Dynamic Template</a>\r\n                    <br />\r\n                    <span>Note: Generate Dynamic template based on selected fule group order.</span>\r\n                </div>\r\n                <div class=\"mb5 mt5\">\r\n                    <input type=\"file\" id=\"bulkUploadFile\" (change)=\"selectFiles($event.target.files)\" accept=\".csv\">\r\n                </div>\r\n                <div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\"\r\n                        (click)=\"uploadRangeTableFile()\">\r\n                    Upload\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}