{"version":3,"sources":["./src/app/company-addresses/region/service/region.service.ts","./src/app/create-fuel-group/create-fuel-group.component.ts","./src/app/create-fuel-group/create-fuel-group.component.html","./src/app/create-fuel-group/create-fuel-group.module.ts","./src/app/create-fuel-group/fuel-group-mapping/fuel-group-mapping.component.ts","./src/app/create-fuel-group/fuel-group-mapping/fuel-group-mapping.component.html","./src/app/self-service-alias/models/FuelGroupGridViewModel.ts"],"names":[],"mappings":"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","file":"create-fuel-group-create-fuel-group-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropdownCustomItem, DropdownItem } from 'src/app/statelist.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service'\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { ExternalMappingsService } from '../self-service-alias/service/externalmappings.service';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { pairwise, startWith } from 'rxjs/operators';\nimport { FreightTableStatus, FuelGroupType, TableType } from 'src/app/app.enum';\nimport { FuelGroupViewModel } from '../self-service-alias/models/FuelGroupGridViewModel';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n    selector: 'app-create-fuel-group',\n    templateUrl: './create-fuel-group.component.html',\n    styleUrls: ['./create-fuel-group.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CreateFuelGroupComponent implements OnInit {\n    @Output() result = new EventEmitter();\n    public isLoadingSubject: BehaviorSubject<any>;\n    public nativeServiceCall: boolean = true;\n\n    ProductTypeList: DropdownItem[] = [];\n    FuelTypeList: DropdownCustomItem[] = [];\n\n    TableTypeList: DropdownItem[] = [];\n    CustomerList: DropdownItem[] = [];\n    CarrierList: DropdownItem[] = [];\n\n    public IsCustomSelected = false;\n    public IsCustomerSelected = false;\n    public IsCarrierSelected = false;\n    public ViewOrEdit: any;\n\n    public fuelGroupMapping: FuelGroupViewModel;\n    public IsEditable: boolean = true;\n    public IsProductTypeSelected: boolean = false;\n    \n    public rcForm: FormGroup;\n   \n   \n    public createFuelGroupUrl = '/FuelGroup/CreateFuelGroup';\n    public updateFuelGroupUrl = '/FuelGroup/UpdateFuelGroup';\n    \n\n    public SingleSelectSettingsById = {};\n    public MultiSelectSettingsById: IDropdownSettings;\n\n    constructor(private httpService: HttpClient, private _fb: FormBuilder,\n        private fuelSurchargeService: FuelSurchargeService,\n        private RegionService: RegionService,\n        private externalMappingsService: ExternalMappingsService    ) { }\n  \n    ngOnInit() {\n        this.isLoadingSubject = new BehaviorSubject(false);\n        this.SingleSelectSettingsById = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            enableCheckAll: false,\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n        this.MultiSelectSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 5,\n            allowSearchFilter: true\n        };\n\n        \n        this.init();\n\n        merge(\n            this.rcForm.controls['GroupTypeCustom'].get('TableTypes').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onTableTypeSelect(prev, next);\n            })\n\n        merge(\n            this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onProductTypeChange(prev, next);\n            });\n\n        merge(\n            this.rcForm.controls['GroupTypeCustom'].get('Customers').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onCustomerSelect(prev, next);\n            })\n\n\n        merge(\n            this.rcForm.controls['GroupTypeCustom'].get('Carriers').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onCarrierSelect(prev, next);\n            })\n\n\n\n\n        this.getProductTypeList();\n        this.getTableTypeList();\n        this.getCustomerList();\n        this.getCarrierList();\n    }\n\n    init() {\n        this.rcForm = this._fb.group({\n            Id: new FormControl(''),\n            GroupName: new FormControl('', [Validators.required]),\n            FuelGroupType: new FormControl(1),\n            GroupTypeStandard: new FormGroup({\n                ProductTypes: new FormControl(''), //select top 1 * from MstProductTypes --product type\n                FuelTypes: new FormControl('')  //select top 1 * from MstTfxProducts --  fuel type\n            }),\n            GroupTypeCustom: new FormGroup({\n                TableTypes: new FormControl(''), // customer or carrier selection controls\n                Customers: new FormControl(''),\n                Carriers: new FormControl('')\n            }),\n            FreightTableStatus: ['']\n        });\n    }\n\n    public onCustomerSelect(prev: any, item: any) {\n        \n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        this.isLoadingSubject.next(false);\n    }\n\n    public onCarrierSelect(prev: any, item: any) {\n       \n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        this.isLoadingSubject.next(false);\n    }\n\n    private onTableTypeSelect(prev: any, item: any) {\n       \n        this.IsCarrierSelected = false;\n        this.IsCustomerSelected = false;\n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeCustom'].get('Customers').patchValue([]);\n        this.CustomerList = [];\n        this.rcForm.controls['GroupTypeCustom'].get('Carriers').patchValue([]);\n        this.CarrierList = [];\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        if (item != null && item != \"\" && item != undefined && item.length==1) {\n            if (item[0].Id == TableType.Customer) {\n                this.IsCustomerSelected = true;\n                this.getCustomerList();\n            }\n            else if (item[0].Id == TableType.Carrier) {\n                this.IsCarrierSelected = true;\n                this.getCarrierList();\n            }\n        }\n        this.isLoadingSubject.next(false);\n    }\n\n    public FuelGroupTypeChange(): void {\n        this.isLoadingSubject.next(true);\n        this.IsProductTypeSelected = false;\n        this.rcForm.controls['GroupTypeCustom'].get('TableTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeCustom'].get('Customers').patchValue([]);\n        this.CustomerList = [];\n        this.rcForm.controls['GroupTypeCustom'].get('Carriers').patchValue([]);\n        this.CarrierList = [];\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        //this.ProductTypeList = [];\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        this.FuelTypeList = [];\n        this.rcForm.controls['GroupName'].patchValue(null);\n        this.rcForm.controls['Id'].patchValue(null);\n        this.ViewOrEdit = \"Create\";\n        this.isLoadingSubject.next(false);\n    }\n\n    public onProductTypeChange(prev: any, next: any) {\n        if (!this.nativeServiceCall) {\n            this.IsProductTypeSelected = true;\n            return;\n        }\n        this.isLoadingSubject.next(true);\n\n        let selProductTypes = this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').value as DropdownItem[];\n        if (selProductTypes != null && selProductTypes != undefined && selProductTypes.length > 0) {\n            this.IsProductTypeSelected = true;\n            this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n            let editingcompanyId = -1;\n            let cus = this.rcForm.controls.GroupTypeCustom.get('Customers').value;\n            let car = this.rcForm.controls.GroupTypeCustom.get('Carriers').value;\n            if (cus != null && cus.length > 0) {\n                editingcompanyId = cus[0].Id;\n            } else if (car != null && car.length > 0) {\n                editingcompanyId = car[0].Id;\n            }\n\n            this.externalMappingsService.getFuelTypeList(selProductTypes.map(s => s.Id).join(','), this.rcForm.controls.FuelGroupType.value, +this.rcForm.controls.Id.value, editingcompanyId).subscribe(async (data) => {\n                this.FuelTypeList = await (data);\n                this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').setValue(this.FuelTypeList.filter(r => !r.isDisabled))\n                this.isLoadingSubject.next(false);\n            });\n        } else {\n            this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n            this.FuelTypeList = [];\n            this.IsProductTypeSelected = false;\n        }\n        this.isLoadingSubject.next(false);\n    }\n\n    getProductTypeList() {\n        this.isLoadingSubject.next(true);\n        this.externalMappingsService.getProductTypeList().subscribe(async (data) => {\n        this.ProductTypeList = await (data);\n            this.isLoadingSubject.next(false);\n    });\n    }\n\n    getFuelTypeList(productTypeIds: string, fuelGroupType:string) {\n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        let editingcompanyId = -1;\n        let cus = this.rcForm.controls.GroupTypeCustom.get('Customers').value;\n        let car = this.rcForm.controls.GroupTypeCustom.get('Carriers').value;\n        if (cus != null && cus.length > 0) {\n            editingcompanyId = cus[0].Id;\n        } else if (car != null && car.length > 0) {\n            editingcompanyId = car[0].Id;\n        }\n        this.externalMappingsService.getFuelTypeList(productTypeIds, fuelGroupType, +this.rcForm.controls.Id.value, editingcompanyId).subscribe(async (data) => {\n            this.FuelTypeList = await (data);\n            this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').setValue(this.FuelTypeList.filter(r => !r.isDisabled))\n            this.isLoadingSubject.next(false);\n        });\n    }\n\n   \n    getTableTypeList() {\n        if (!this.nativeServiceCall) {return;}\n        this.isLoadingSubject.next(true);\n        this.fuelSurchargeService.getTableTypes().subscribe(async (data) => {\n            let tblTypeList: DropdownItem[];\n            tblTypeList = await (data);\n            this.TableTypeList = tblTypeList.filter(x => x.Id != 1); // no master included.\n            this.TableTypeList.forEach(res => res.Name = res.Name.replace(\"Specific\", \"\"));\n            //this.rcForm.controls.GroupTypeCustom.get('TableTypes').setValue(this.TableTypeList.slice(0, 1));\n            this.isLoadingSubject.next(false);\n        });\n\n    }\n\n    getCustomerList() {\n        if (!this.nativeServiceCall) { return; }\n        this.isLoadingSubject.next(true);\n        this.fuelSurchargeService.getSupplierCustomers().subscribe(async (data) => {\n            this.CustomerList = await (data);\n            this.isLoadingSubject.next(false);\n        });\n    }\n\n    getCarrierList() {\n        if (!this.nativeServiceCall) { return; }\n        this.isLoadingSubject.next(true);\n        this.RegionService.getCarriers().subscribe(async (data) => {\n            this.CarrierList = await (data);\n            this.isLoadingSubject.next(false);\n        });\n    }\n\n\n    private markFormGroupTouched(formGroup: FormGroup) {\n        (<any>Object).values(formGroup.controls).forEach(control => {\n\n            control.markAsTouched();\n            if (control.controls) {\n                this.markFormGroupTouched(control);\n            }\n        });\n    }\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\n\n            requiredControls.forEach(ctrl => {\n                ctrl.setValidators([Validators.required]);\n                ctrl.updateValueAndValidity();\n            });\n        }\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\n\n            notRequiredControls.forEach(ctrl => {\n                ctrl.clearValidators();\n                ctrl.updateValueAndValidity();\n            });\n        }\n\n    }\n\n    private modeChangeCustomOrStandardValidators(fuelGroupType: number) {\n\n        this.AddRemoveValidations([this.rcForm.controls['GroupTypeStandard'].get('ProductTypes'),\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes')],null);\n        if (fuelGroupType == FuelGroupType.Standard) {\n            this.AddRemoveValidations(null,\n                [this.rcForm.controls['GroupTypeCustom'].get('Customers'),\n                this.rcForm.controls['GroupTypeCustom'].get('Carriers'),\n                this.rcForm.controls['GroupTypeCustom'].get('TableTypes')]);\n        }\n        if (fuelGroupType == FuelGroupType.Custom) {\n            this.AddRemoveValidations([this.rcForm.controls['GroupTypeCustom'].get('TableTypes')], null);\n            if (this.rcForm.controls['GroupTypeCustom'].get('TableTypes').value == null || this.rcForm.controls['GroupTypeCustom'].get('TableTypes').value == undefined) return;\n\n            if (this.rcForm.controls['GroupTypeCustom'].get('TableTypes').value[0].Id == TableType.Customer) {\n                this.AddRemoveValidations([this.rcForm.controls['GroupTypeCustom'].get('Customers')], [this.rcForm.controls['GroupTypeCustom'].get('Carriers')]);\n            }\n            else {\n                this.AddRemoveValidations([this.rcForm.controls['GroupTypeCustom'].get('Carriers')], [this.rcForm.controls['GroupTypeCustom'].get('Customers')]);\n            }\n        }\n\n    }\n\n   public onSubmit() {\n       this.modeChangeCustomOrStandardValidators(this.rcForm.controls.FuelGroupType.value);\n       this.markFormGroupTouched(this.rcForm);\n        if (this.rcForm.valid)\n        this.Save();\n    }\n\n   public onCancel() {\n       this.result.emit(true);\n    }\n\n    private Save() {\n       \n        this.isLoadingSubject.next(true);\n        this.fuelGroupMapping= new FuelGroupViewModel();\n        this.fuelGroupMapping.Id = this.rcForm.controls.Id.value;\n        this.fuelGroupMapping.GroupName = this.rcForm.controls.GroupName.value.trim();\n        this.fuelGroupMapping.FuelGroupType = this.rcForm.controls.FuelGroupType.value;\n        \n        if (this.fuelGroupMapping.FuelGroupType == FuelGroupType.Custom) {\n            this.fuelGroupMapping.TableType = this.rcForm.controls.GroupTypeCustom.get('TableTypes').value[0].Id;\n            if (this.fuelGroupMapping.TableType==TableType.Customer) {\n                this.fuelGroupMapping.AssignedCompanyId = this.rcForm.controls.GroupTypeCustom.get('Customers').value[0].Id;\n            }else if (this.fuelGroupMapping.TableType == TableType.Carrier) {\n                this.fuelGroupMapping.AssignedCompanyId = this.rcForm.controls.GroupTypeCustom.get('Carriers').value[0].Id;\n            }\n        }\n\n        var pIds = [];\n        this.rcForm.controls.GroupTypeStandard.get('ProductTypes').value.forEach(res => { pIds.push(res.Id) });\n        this.fuelGroupMapping.ProductTypeIds = pIds;\n\n        var fIds = [];\n        this.rcForm.controls.GroupTypeStandard.get('FuelTypes').value.forEach(res => { fIds.push(res.Id) });\n        this.fuelGroupMapping.FuelTypeIds = fIds;\n\n        this.fuelGroupMapping.FreightTableStatus = FreightTableStatus.Published;\n\n        this.httpService.post(this.rcForm.controls.Id.value != null ? this.updateFuelGroupUrl:this.createFuelGroupUrl, this.fuelGroupMapping, httpOptions).pipe().subscribe((res:any) => {\n            if (res.StatusCode == 0) {\n                this.result.emit(true);\n                let message = \"\";\n                if (this.fuelGroupMapping.Id != null) {\n                    message = \"updated\";\n                }\n                else if (this.fuelGroupMapping.FreightTableStatus == FreightTableStatus.Published) {\n                    message = \"created\"\n                } \n                Declarations.msgsuccess(this.fuelGroupMapping.GroupName + \" fuel group \" + message + \" successfully.\", undefined, undefined);\n\n            } else\n                Declarations.msgerror(res == null || res.StatusMessage == null ? 'Failed' : res.StatusMessage, undefined, undefined);\n            this.isLoadingSubject.next(false);\n        })\n    }\n\n   \n \n\n}\n\n","<div>\r\n    <form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-standard\" [name]=\"'FuelGroupType'\" [value]=\"1\"\r\n                               (change)=\"FuelGroupTypeChange()\" [attr.disabled]=\"!IsEditable || ViewOrEdit=='EDIT'?false:null\">\r\n                        <label class=\"form-check-label\" for=\"occurance-standard\">Standard</label>\r\n                    </div>\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-custom\" [name]=\"'FuelGroupType'\" [value]=\"2\"\r\n                               (change)=\"FuelGroupTypeChange()\" [attr.disabled]=\"!IsEditable || ViewOrEdit=='EDIT'?false:null\">\r\n                        <label class=\"form-check-label\" for=\"occurance-custom\">Custom</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <label for=\"groupName\">Group Name</label>\r\n                <span class=\"color-maroon\">*</span>\r\n                <input id=\"groupName\" type=\"text\" [readonly]=\"ViewOrEdit=='EDIT' || ViewOrEdit=='VIEW'?true:null\" formControlName=\"GroupName\" class=\"form-control\" />\r\n                <div *ngIf=\"rcForm.get('GroupName').invalid && rcForm.get('GroupName').touched\" class=\"color-maroon\">\r\n                    <div *ngIf=\"rcForm.get('GroupName').errors.required\">\r\n                        Required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" formGroupName=\"GroupTypeCustom\" *ngIf=\"rcForm.get('FuelGroupType').value==2\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <label for=\"TableTypes\">Custom Fuel Group for</label>\r\n                <span class=\"color-maroon\">*</span>\r\n                <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                         [disabled]=\"!IsEditable\"\r\n                                         class=\"single-select\"\r\n                                         id=\"TableTypes\"\r\n                                         [placeholder]=\"'Select group for'\"\r\n                                         [settings]=\"SingleSelectSettingsById\" [data]=\"TableTypeList\"></ng-multiselect-dropdown>\r\n                <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('TableTypes').invalid && rcForm.controls.GroupTypeCustom.get('TableTypes').touched\" class=\"color-maroon\">\r\n                    <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('TableTypes').errors.required\">\r\n                        Required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsCustomerSelected}\">\r\n                    <label for=\"Customer\">Customer</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             class=\"single-select\"\r\n                                             id=\"Customer\"\r\n                                             [placeholder]=\"'Select Customer'\"\r\n                                             [settings]=\"SingleSelectSettingsById\" [data]=\"CustomerList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"IsCustomerSelected && rcForm.controls.GroupTypeCustom.get('Customers').invalid && rcForm.controls.GroupTypeCustom.get('Customers').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('Customers').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsCarrierSelected}\">\r\n                    <label for=\"Carrier\">Carrier</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             class=\"single-select\"\r\n                                             id=\"Carrier\"\r\n                                             [placeholder]=\"'Select Carrier'\"\r\n                                             [settings]=\"SingleSelectSettingsById\" [data]=\"CarrierList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"IsCarrierSelected && rcForm.controls.GroupTypeCustom.get('Carriers').invalid && rcForm.controls.GroupTypeCustom.get('Carriers').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('Carriers').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" formGroupName=\"GroupTypeStandard\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div class=\"\">\r\n                    <label for=\"ProductTypes\">Product Types</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"ProductTypes\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             id=\"ProductTypes\"\r\n                                             [placeholder]=\"'Select Product Types(s)'\"\r\n                                             [settings]=\"MultiSelectSettingsById\" [data]=\"ProductTypeList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('ProductTypes').invalid && rcForm.controls.GroupTypeStandard.get('ProductTypes').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('ProductTypes').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsProductTypeSelected}\">\r\n                    <label for=\"FuelTypes\">Fuel Types</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"FuelTypes\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             id=\"FuelTypes\"\r\n                                             [placeholder]=\"'Select Fuel Type(s)'\"\r\n                                             [settings]=\"MultiSelectSettingsById\" [data]=\"FuelTypeList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('FuelTypes').invalid && rcForm.controls.GroupTypeStandard.get('FuelTypes').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('FuelTypes').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-sm-12 text-right\">\r\n                <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n                <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"!IsEditable\">Submit</button>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateFuelGroupComponent } from './create-fuel-group.component';\nimport { FuelGroupMappingComponent } from './fuel-group-mapping/fuel-group-mapping.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { SharedModule } from '../modules/shared.module';\n\n\nconst routes: Routes = [\n  {\n      path: \"\",\n      component: FuelGroupMappingComponent\n  },\n];\n@NgModule({\n  declarations: [\n    CreateFuelGroupComponent,\n    FuelGroupMappingComponent   \n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgMultiSelectDropDownModule,\n    SharedModule,\n    DirectiveModule,\n    DataTablesModule,\n    RouterModule.forChild(routes),\n    \n  ]\n})\nexport class CreateFuelGroupModule { }\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject, from, forkJoin } from 'rxjs';\nimport { first, map, mergeMap } from 'rxjs/operators';\nimport { Declarations } from 'src/app/declarations.module';\nimport { HttpClient } from '@angular/common/http';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { DropdownCustomItem, DropdownItem } from '../../statelist.service';\nimport { FuelSurchargeService } from '../../fuelsurcharge/services/fuelsurcharge.service';\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { FuelGroupType, TableType } from 'src/app/app.enum';\nimport { ExternalMappingsService } from 'src/app/self-service-alias/service/externalmappings.service';\nimport { CreateFuelGroupComponent } from '../create-fuel-group.component';\nimport { FuelGroupGridViewModel, FuelGroupViewModel } from 'src/app/self-service-alias/models/FuelGroupGridViewModel';\n\n@Component({\n    selector: 'app-fuel-group-mapping',\n    templateUrl: './fuel-group-mapping.component.html',\n    styleUrls: ['./fuel-group-mapping.component.css']\n})\nexport class FuelGroupMappingComponent implements OnInit, AfterViewInit {\n    \n    title = 'Create';\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @ViewChild('openSidePannel') public openSidePannel: ElementRef;\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\n    @ViewChild(CreateFuelGroupComponent) public createFuelGroupComponent: CreateFuelGroupComponent;\n    fuelGroupGridList: FuelGroupGridViewModel[] = [];\n    fuelGroupEdit: FuelGroupViewModel;\n\n    public dtOptions: any = {};\n    public dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean;\n    public IsValidForm: boolean = true;\n    public popoverTitle: string = 'Archive Confirmation';\n    public popoverMessage: string = 'Do you want to archive?';\n    public cancelClicked: boolean = false;\n    public confirmClicked: boolean = false;\n    public confirmButtonText: string = 'Yes';\n    public cancelButtonText: string = 'No';\n    public IsShowBulkUploadPopup: boolean = false;\n    public SelectedFiles: File[] = [];\n    public MaxFileUploadSize: number = 1048576; // 1MB\n\n    public GroupId: number = -1;\n\n    constructor(private httpService: HttpClient, private carrierService: CarrierService,\n        private externalMappingsService: ExternalMappingsService,\n        private fuelSurchargeService: FuelSurchargeService,\n        private RegionService: RegionService    ) { }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            aaSorting: [],\n            orderable: false,\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Fuel Group Mapping', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Fuel Group Mapping', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n\n        this.getFuelGroupMapping();\n\n    }\n\n\n    filterGrid() {\n        $(\"#fuel-group-datatable\").DataTable().clear().destroy();\n    }\n    ngAfterViewInit(): void {\n        this.dtTrigger.next();\n    }\n\n    private getFuelGroupMapping() :void {\n        this.IsLoading = true;\n        this.externalMappingsService.getFuelGroupSummary().subscribe(async (data) => {\n            this.IsLoading = false;\n            this.fuelGroupGridList = await (data);\n            this.datatableRerender();\n        });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                dtInstance.destroy();\n                this.dtTrigger.next();\n            });\n        }\n    }\n\n    IdInComparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                //console.log(other + \":\" + current.Id);\n                return other == current.Id\n            }).length == 1;\n        }\n    }\n\n    \n   \n    public editFuelGroupMapping(groupId: number,mode: string): void {\n        this.title = mode;\n        this.createFuelGroupComponent.isLoadingSubject.next(false);\n        this.createFuelGroupComponent.nativeServiceCall = false;\n        this.httpService.get(this.externalMappingsService.getFuelGroupDetailsUrl + groupId).pipe(\n            map(item => {\n                this.IsLoading = true;\n                return item as FuelGroupViewModel;\n            }),\n            mergeMap(item => {\n                \n                this.fuelGroupEdit = item;\n                \n                var getFuelTypesUrl = \"\";\n                if (item.FuelGroupType == FuelGroupType.Standard) {\n                    getFuelTypesUrl = this.externalMappingsService.getFuelTypesUrl + this.fuelGroupEdit.ProductTypeIds + \"&fuelGroupType=\" + this.fuelGroupEdit.FuelGroupType + \"&editingGroupId=-1\" + \"&editingcompanyId=-1\";\n                } else {\n                    getFuelTypesUrl = this.externalMappingsService.getFuelTypesUrl + this.fuelGroupEdit.ProductTypeIds + \"&fuelGroupType=\" + this.fuelGroupEdit.FuelGroupType + \"&editingGroupId=\" + this.fuelGroupEdit.Id + \"&editingcompanyId=\" + this.fuelGroupEdit.AssignedCompanyId;\n                }\n                var getTableTypesUrl = \"/FuelSurcharge/GetTableTypes\";\n                const productTypes = this.httpService.get(this.externalMappingsService.getProductTypeUrl);\n                const fuelTypes = this.httpService.get(getFuelTypesUrl);\n                const customers = this.httpService.get(this.fuelSurchargeService.getSupplierCustomersUrl);\n                const carriers = this.httpService.get(this.RegionService.getCarriersUrl);\n                const Tabletypes = this.httpService.get(getTableTypesUrl);\n                return forkJoin([fuelTypes, customers, carriers, productTypes, Tabletypes]);\n            })).subscribe(result => {\n                this.IsLoading = false;\n                //this.createFuelGroupComponent.rcForm.reset();\n                this.createFuelGroupComponent.isLoadingSubject.next(true);\n                this.createFuelGroupComponent.rcForm.controls.Id.setValue(this.fuelGroupEdit.Id);\n                this.createFuelGroupComponent.ViewOrEdit = mode;\n                this.createFuelGroupComponent.rcForm.controls.GroupName.setValue(this.fuelGroupEdit.GroupName);\n\n                if (this.fuelGroupEdit.FuelGroupType == FuelGroupType.Custom) {\n\n                    let tblTypeList = result[4] as DropdownItem[];\n                    tblTypeList = tblTypeList.filter(x => x.Id != 1); // no master included.\n                    tblTypeList.forEach(res => res.Name = res.Name.replace(\"Specific\", \"\"));\n                    this.createFuelGroupComponent.TableTypeList = tblTypeList;\n\n                    this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('TableTypes').setValue(this.createFuelGroupComponent.TableTypeList.filter(t => t.Id == this.fuelGroupEdit.TableType));\n                    //this.createFuelGroupComponent.onTableTypeSelect({ Id: this.fuelGroupEdit.TableType });\n\n                    this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Customers').patchValue([]);\n                    this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Carriers').patchValue([]);\n                    this.createFuelGroupComponent.IsCustomerSelected = false;\n                    this.createFuelGroupComponent.IsCarrierSelected = false;\n\n                    this.createFuelGroupComponent.isLoadingSubject.next(true);\n\n                    if (this.fuelGroupEdit.TableType != null && this.fuelGroupEdit.TableType == TableType.Customer) {\n                        this.createFuelGroupComponent.IsCustomerSelected = true;\n                        this.createFuelGroupComponent.CustomerList = result[1] as DropdownItem[];\n                        this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Customers').setValue(this.createFuelGroupComponent.CustomerList.filter(x => x.Id == this.fuelGroupEdit.AssignedCompanyId));\n\n                    }\n                    else if (this.fuelGroupEdit.TableType != null && this.fuelGroupEdit.TableType == TableType.Carrier) {\n                        this.createFuelGroupComponent.IsCarrierSelected = true;\n                        this.createFuelGroupComponent.CarrierList = result[2] as DropdownItem[];\n                        this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Carriers').setValue(this.createFuelGroupComponent.CarrierList.filter(x => x.Id == this.fuelGroupEdit.AssignedCompanyId));\n\n                    }\n                }\n\n                this.createFuelGroupComponent.rcForm.controls.FuelGroupType.setValue(this.fuelGroupEdit.FuelGroupType);\n                this.createFuelGroupComponent.ProductTypeList = result[3] as DropdownItem[];\n                this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('ProductTypes').setValue(this.createFuelGroupComponent.ProductTypeList.filter(this.IdInComparer(this.fuelGroupEdit.ProductTypeIds)));\n                this.createFuelGroupComponent.IsProductTypeSelected = true;\n                this.IsLoading = true;\n                var ps = result[0] as DropdownCustomItem[];\n                if (this.fuelGroupEdit.FuelGroupType == FuelGroupType.Custom) {\n                    ps.filter(this.IdInComparer(this.fuelGroupEdit.FuelTypeIds));\n                } else {\n                    ps.filter(this.IdInComparer(this.fuelGroupEdit.FuelTypeIds)).forEach(res => res.isDisabled = false); // not all make isDisable false.\n                }\n                this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n                this.createFuelGroupComponent.FuelTypeList = ps;\n                let fueltyps = this.createFuelGroupComponent.FuelTypeList.filter(this.IdInComparer(this.fuelGroupEdit.FuelTypeIds));\n                this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('FuelTypes').setValue(fueltyps);\n                this.createFuelGroupComponent.isLoadingSubject.next(true);\n\n                \n                this.notEditableForm(mode);\n                this.IsLoading = false;\n                this.createFuelGroupComponent.isLoadingSubject.next(false);\n                this.createFuelGroupComponent.nativeServiceCall = true;\n            });\n    }\n    private notEditableForm(mode: string) {\n        this.createFuelGroupComponent.IsEditable = true;\n        if (mode == \"VIEW\") {\n            this.createFuelGroupComponent.IsEditable = false;\n        }\n        //this.createFuelGroupComponent.rcForm.controls.GroupName.disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls.FuelGroupType.disable({onlySelf: false });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('ProductTypes').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('FuelTypes').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('TableTypes').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Customers').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Carriers').disable({ onlySelf: isEdit });\n        //console.log(mode  + \" : \" + isEdit);\n    }\n   \n    public addFuelGroup() {\n        this.title = 'Create';\n        this.createFuelGroupComponent.rcForm.reset();\n        this.createFuelGroupComponent.IsEditable = true;\n        this.createFuelGroupComponent.IsCarrierSelected = false;\n        this.createFuelGroupComponent.IsCustomerSelected = false;\n        this.createFuelGroupComponent.rcForm.controls['Id'].patchValue(null);\n        this.createFuelGroupComponent.ViewOrEdit = \"Create\";\n        this.createFuelGroupComponent.rcForm.controls.FuelGroupType.setValue(FuelGroupType.Standard);\n        this.createFuelGroupComponent.isLoadingSubject.next(false);\n    }\n\n    getOutput($event) {\n        if ($event) {\n            this.openSidePannel.nativeElement.click();\n            this.getFuelGroupMapping();\n        }\n    }\n\n    archiveFuelGroup(item: FuelGroupGridViewModel) {\n        this.IsLoading = true;\n        \n        this.externalMappingsService.archiveFuelGroup(item.Id.toString()).subscribe(async (data) => {\n            var result = await (data);\n            if (result.StatusCode == 0) {\n                Declarations.msgsuccess(item.GroupName +  \" fuel group archived successfully.\", undefined, undefined);\n                this.getFuelGroupMapping();\n            } else\n                Declarations.msgerror(result.StatusMessage, undefined, undefined);\n            this.IsLoading = false;\n        });\n    }\n\n\n    selectFiles(files: File[]) {\n        if (files != null && files != undefined && files.length > 0)\n            this.SelectedFiles = files;\n    }\n\n \n\n    isValidFile(file: File) {\n        var isValid = true;\n        var extension = this.getExtension(file.name);\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        if (file.size > this.MaxFileUploadSize) {\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        return isValid;\n    }\n\n    downloadCsvTemplate() {\n        this.IsLoading = true;\n        var timestamp = new Date().getTime();\n        this.carrierService.downloadTerminalItemCodeMappingTemplate(timestamp).subscribe(blob => {\n            const a = document.createElement('a')\n            const objectUrl = URL.createObjectURL(blob)\n            a.href = objectUrl\n            a.download = 'FuelGroupMapping_Template.csv';\n            a.click();\n            URL.revokeObjectURL(objectUrl);\n\n            this.IsLoading = false;\n        });\n    }\n\n    getExtension(fileName) {\n        // extract file name from full path ...\n        var basename = fileName.split(/[\\\\/]/).pop();\n\n        // (supports `\\\\` and `/` separators)\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\n\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\n            return \"\";                             //  `.` not found (-1) or comes first (0)\n\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\n    }\n}\n","<div class=\"row\">\r\n    <!-- <div class=\"col-sm-12\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-right pa0\" data-target=\"raisedr\"\r\n            onclick=\"slidePanel('#terminal_i_code_map','40%')\" (click)=\"addTerminalItemCode()\"><i\r\n                class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Terminal Item Code</button>\r\n    </div> -->\r\n    <div class=\"col-sm-12\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-left pa0 mb-2\" data-target=\"raisedr\"\r\n                onclick=\"slidePanel('#Fuel_Group_Id','45%')\" (click)=\"addFuelGroup()\">\r\n            <i class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Fuel Group\r\n        </button>\r\n    </div>\r\n    <!--<div class=\"col-sm-6\">\r\n        <button id=\"showBulkUploadPopupBtn\" type=\"button\" class=\"btn btn-primary float-right mb5 valid\"\r\n                (click)=\"showBulkUploadPopup()\" data-toggle=\"modal\" data-target=\"#bulkUploadTerminalModalPopup\">\r\n            Bulk\r\n            Upload\r\n        </button>\r\n    </div>-->\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-fuel-group-code\" class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"fgn\">Fuel Group</th>\r\n                                    <th data-key=\"fgt\">Group Type</th>\r\n                                    <th data-key=\"fgty\">Group for</th>\r\n                                    <th data-key=\"fgcn\">Customer Name</th>\r\n                                    <th data-key=\"fgcn\">Carrier Name</th>\r\n                                    <th data-key=\"fgpt\">Product Type(s)</th>\r\n                                    <th data-key=\"fgsn\">Status</th>\r\n                                    <th data-key=\"Action\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of fuelGroupGridList\">\r\n                                    <td>{{item.GroupName}}</td>\r\n                                    <td>{{item.FuelGroupType}}</td>\r\n                                    <td>{{item.TableType!=0?item.TableType:\"-\"}}</td>\r\n                                    <td>{{ item.Customer}}</td>\r\n                                    <td>{{ item.Carrier}}</td>\r\n                                    <td>{{item.ProductType}}</td>\r\n                                    <td>{{item.StatusName}}</td>\r\n                                    <td class=\"text-center text-nowrap\">\r\n                                       <a *ngIf=\"item.StatusName!='Archived'\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                           [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                           (cancel)=\"cancelClicked = true\" (confirm)=\"archiveFuelGroup(item)\">\r\n                                            <i class=\"fa fa-file-archive \" placement=\"bottom\" ngbTooltip=\"Archive\"></i>\r\n                                        </a>\r\n\r\n                                        <a *ngIf=\"item.StatusName!='Archived'\" class=\"btn btn-link fs16 ml-0\" onclick=\"slidePanel('#Fuel_Group_Id','40%')\"\r\n                                           (click)=\"editFuelGroupMapping(item.Id,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\">\r\n                                            <i class=\"fas fa-edit\"></i>\r\n                                        </a>\r\n\r\n                                        <a class=\"btn btn-link fs16 ml-0\" onclick=\"slidePanel('#Fuel_Group_Id','40%')\"\r\n                                           (click)=\"editFuelGroupMapping(item.Id,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">\r\n                                            <i class=\"fas fa-eye\"></i>\r\n                                        </a>  \r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<div class=\"side-panel\" id=\"Fuel_Group_Id\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt10 pb0\">\r\n            <a class=\"ml20 close-panel\" onclick=\"closeSlidePanel();\" ><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">\r\n                {{title|titlecase}} Fuel Group \r\n            </h3>\r\n        </div>\r\n        <div class=\"pt10 pb10 pl20 pr20\">\r\n           <app-create-fuel-group (result)=\"getOutput($event)\">\r\n            </app-create-fuel-group>\r\n           \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","\r\nimport { FreightTableStatus, TableType } from \"src/app/app.enum\";\r\nimport { DropdownItem } from \"../../statelist.service\";\r\n\r\nexport class FuelGroupGridViewModel {\r\n    Id: number;\r\n    GroupName: string;\r\n    TableType: string;\r\n    FuelGroupType: string;    \r\n    Customer: string;\r\n    Carrier: string;\r\n    ProductType: string;\r\n    StatusName: string;\r\n}\r\n\r\nexport class FuelGroupViewModel {\r\n    Id?: number;\r\n    GroupName: string;\r\n    FuelGroupType: FuelGroupType;//GroupTypeStandard,GroupTypeCustom\r\n    TableType: TableType; // customer or carrier single selction\r\n    AssignedCompanyId?: number;\r\n    ProductTypes: DropdownItem[];\r\n    TableTypes: DropdownItem[];\r\n    Customers?: DropdownItem[];\r\n    Carriers?: DropdownItem[];\r\n    ProductTypeIds: number[];\r\n    ProductTypesToString: string;\r\n    FuelTypes: DropdownItem[];\r\n    FuelTypeIds: number[];\r\n    FuelTypesToString: string;\r\n    FreightTableStatus: FreightTableStatus; // publish or arcived\r\n    IsActive?: boolean;\r\n    AddedBy?: number;\r\n    AddedDate?: Date | string;\r\n    UpdatedBy?: number;\r\n    UpdatedDate?: Date | string;\r\n}\r\n\r\n\r\nexport enum FuelGroupType {\r\n        Standard = 1,\r\n        Custom = 2\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}