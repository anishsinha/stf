{"version":3,"sources":["webpack:///src/app/buyer-wally-board/buyer-locations.component.ts","webpack:///src/app/buyer-wally-board/buyer-locations.component.html","webpack:///src/app/buyer-wally-board/buyer-wally-board.module.ts","webpack:///src/app/buyer-wally-board/sales-data/location-view.component.html","webpack:///src/app/buyer-wally-board/sales-data/location-view.component.ts","webpack:///src/app/buyer-wally-board/sales-data/priority-view.component.html","webpack:///src/app/buyer-wally-board/sales-data/priority-view.component.ts","webpack:///src/app/buyer-wally-board/sales-data/tank-view-master.component.ts","webpack:///src/app/buyer-wally-board/sales-data/tank-view-master.component.html","webpack:///src/app/buyer-wally-board/sales-data/tank-view.component.ts","webpack:///src/app/buyer-wally-board/sales-data/tank-view.component.html","webpack:///src/app/buyer-wally-board/sales.component.ts","webpack:///src/app/buyer-wally-board/sales.component.html","webpack:///src/app/buyer-wally-board/wally-dashboard/grid-view.component.html","webpack:///src/app/buyer-wally-board/wally-dashboard/grid-view.component.ts","webpack:///src/app/buyer-wally-board/wally-dashboard/map-view.component.html","webpack:///src/app/buyer-wally-board/wally-dashboard/map-view.component.ts","webpack:///src/app/buyer-wally-board/wally-dashboard/wally-dashboard.component.ts","webpack:///src/app/buyer-wally-board/wally-dashboard/wally-dashboard.component.html","webpack:///src/app/buyer-wally-board/where-is-my-driver.component.ts","webpack:///src/app/buyer-wally-board/where-is-my-driver.component.html"],"names":["BuyerLocationsComponent","buyerwallyboardservice","fb","changeDetectorRef","isLoading","zoomLevel","jobLocationDataForMap","clickedAssetsDetails","countryList","priorityList","supplierList","carrierList","isShowCarrierManaged","selectedCarrierIds","latestReading","chartData","chartLabels","IsFiltersLoaded","UoM","selectedTankMinMax","selectedTankHeight","filteredJobLocationData","unchangedJobLocationData","assetDetails","assetIndex","assetsModal","modalDetails","display","data","dtTrigger","locationSubscription","clickViewActive","clickAssetsPanel","clickChartsPanel","toogleMap","toogleFilter","centerLocationLat","centerLocationLog","UserCountry","CountryCentre","USA","lat","lng","CAN","screenOptions","position","mustGoUrl","shouldGoUrl","couldGoUrl","noDlrUrl","noImageUrl","subscriptions","SelectedPriorityList","SelectedSupplierList","statusList","SelectedStatusList","locationList","DefaultLocationList","SelectedlocationList","SelectedCarrierList","isShowNonRetailJobs","jobIdsEmittedFromSalesComponent","IsLoadSalesData","LocationAttributeList","isChartDataExistSubject","initializeFilterForm","push","Id","Name","multiselectSettingsById","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","jobMultiselectSettingsById","multiDropdownSettings","priorityselectSettingsById","getFilterData","length","ids","forEach","res","TfxJobId","jobids","join","selectedLocAttributeId","FilterForm","controls","selectedLocAttributeList","value","add","getJobLocationDetails","subscribe","addJobPriority","fillSupplierCarrierDropdowns","setCountryCentre","SaveFilters","CurrentCompanyId","Number","currentCompanyId","jobIds","map","item","JobID","selectedSuppliers","get","filter","t","el","patchValue","selectedCarriers","onSupplierSelect","detectChanges","group","IsShowAssetJobs","control","IsShowCarrierManaged","ToggleMap","singleMulti","jobLocationData","element","obj","find","Priority","highestPriority","iconUrl","setCountryCenterInterval","window","setTimeout","Map","setCenter","google","maps","LatLng","setZoom","bounds","LatLngBounds","x","extend","Latitude","Longitude","fitBounds","getCenter","infoWindow","event","open","close","jobLocation","opendedJobDetails","CountryCode","jobAssetDetails","closeAssetsClicked","closeViewClicked","closeChartsClicked","jobTankAdditionalDetails","getDipTestDetails","toggleMap","siteId","tankId","noOfDays","chartOptions","setChartOptions","calculateMinMAx","StatusCode","resp","Data","chartdata","respLen","i","captureTime","Date","CaptureTimeString","format","unshift","NetVolume","country","FuelUnit","responsive","maintainAspectRatio","scales","yAxes","scaleLabel","labelString","ticks","callback","label","toString","replace","xAxes","type","time","displayFormats","selectedTank","MaxFill","MinFill","MaxFillPercent","MinFillPercent","ci_percent","FuelCapacity","sbf_percent","fillTankDiagram","min_ShouldBeEmptyPercent","min_ShouldBeFilledPercent","min_CurrentInventoryPercent","CurrentInventoryPercent","ShouldBeFilledPercent","ShouldBeEmptyPercent","scrollTo","assets","next","tanks","AssetType","getDemandCaptureChart","JobId","demandChartData","indx","tfxJobId","$event","modalClose","jQuery","val","click","filterData","filterModel","JSON","stringify","saveFilters","BuyerWallyboardLocation","getFilters","SetFilters","locationView","getSalesData","input","parse","ApplyFilters","isCarrierManaged","GetFilterData","GetUniqueItems","Suppliers","reduce","p","n","concat","Carriers","GetFilters","undefined","t1","some","t2","items","uniqueItems","includes","sort","a","b","localeCompare","valueEmitted","fetchJobLocationData","msg","filterCount","selectedSupplierList","selectedlocationList","selectedPriorityList","selectedStatusList","applyLoadsFilters","msgsuccess","msginfo","toggleMapView","mapReady","getJobIdsForMapEventHandler","selector","templateUrl","styleUrls","encapsulation","None","routeWallyBoard","path","component","BuyerWallyBoardModule","forChild","declarations","imports","LocationViewComponent","dispatcherService","carrierService","LocationSchedules","IsLoading","showDr","IsDrExists","DRLoader","ExistingDeliveries","DrPriority","MustGo","dtOptions","SelectedLocations","SelectedPriorities","SelectedCarriers","SelectedSuppliers","SelectedStatus","IsShowRetailJobs","SelectedPrioritiesId","dsModal","title","IsScheduled","isValid","isDataLoaded","ScheduleQuantityTypes","SelectedTankRegionId","getJobIdsForMap","initializeGrid","getScheduleQuantityType","subscribeFormChanges","valueChanges","change","isFilterChanged","setFilterData","unsubscribe","currentValue","previousValue","unSubscribeFormChanges","GetBuyerScheduleQtyType","SQT","selectedLocationId","SelectedLocationId","SelectedCarrierIds","selectedStatusId","SelectedStatusId","selectedLocAttri","SelectedLocArributeId","selectedSuppliersId","SelectedSuppliersId","isShowRetailJobs","selectedPrioritiesId","exportInvitedColumns","columns","dom","buttons","exportOptions","orientation","pagingType","pageLength","fixedHeader","lengthMenu","columnDefs","targets","inputs","LocationId","SelectedTab","Location","InventoryCaptureTypeIds","getBuyerSalesData","GetRaisedBuyerExceptions","m","f","TankDetail","TankId","SiteId","StorageId","IsUnknownOrMissing","Status","passJobIdsToMapData","datatableRerender","datatableElement","dtInstance","then","destroy","row","resetModal","SelectedTank","GetBuyerDeliveryDetails","ProductTypeId","isSchedule","RequiredQuantity","ScheduleQuantityType","validateMsg","$","hide","removeClass","raiseDr","FuelTypeId","MaxFillQuantity","PostBuyerRaiseDeliveryRequest","response","StatusMessage","closeModal","msgerror","RegionId","salesDataModel","LocationManagedType","dipTestComponent","loadTankDR","closeSlidePanel","jobsPriority","emit","filterForm","closeSidePanel","PriorityViewComponent","wallyUtilService","MustGoSchedules","ShouldGoSchedules","CouldGoSchedules","dtMustGoOptions","dtShouldGoOptions","dtCouldGoOptions","dtMustGoTrigger","dtShouldGoTrigger","dtCouldGoTrigger","applyFilterSubscription","columnsDetails","init","salesTabFilterForm","setValue","initializeMustGo","initializeCouldGo","initializeShouldGo","subscription","order","getIdsByList","IsShouldGoLoading","IsCouldGoLoading","IsMustGoLoading","ShouldGo","CouldGo","destroyDatatable","getSalesDtls","dtElements","dtElement","addClass","TankViewMasterComponent","TankViewComponent","CloneLocationSchedules","LocationDrpDwnList","FilterLocationDrpDwnList","IsLocDrpDwnLoading","filterArgs","key","asc","initLocationDropDown","CustomerIds","getCompanyIdsByList","InventoryCaptureType","IsRateOfConsumption","getBuyerLocationTanks","result","Partsfiltering","locationChange","loc","Tanks","IsUnknowDeliveryOrMissDelivery","SelectedTankId","SelectedSiteId","j","TankInventoryDiffinHrs","e","console","log","inputName","target","trim","searchWord","toUpperCase","LocationName","indexOf","location","SelectedRegionId","parseInt","LocationTankDetailsModel","TankDetailModel","SalesComponent","CarrierDdlSettings","LocationDdlSettings","Locations","LoadPriorities","getSalesTabFilterForm","setJobSuppliers","getCarrierLocations","BuyerWallyboardSales","isTopFilter","setFilterCount","PriorityTab","TanksTab","salesViewTypeChanged","ShowCarrierMangedData","WhereIsMyDriverGridViewComponent","chatService","SelectedMapLabelEnum","previousInfowindow","previousInfowindowIndex","centerLoactionLat","centerLoactionLng","MaxInputDate","toDate","TodaysDate","AUTO_REFRESH_TIME","autoRefreshTicks","driverModal","Drivers","OfflineDrivers","allLoads","selectedDriverLoads","selectedDriverDetails","States","StateDdlSettings","PriorityDdlSettings","RegionDdlSettings","customerList","selectedDriverLoadsdtOptions","selectedDriverLoadsdtTrigger","loadingData","modalData","backgroudchatDefault","memberInfo","disableControl","activePriorityTab","DeliveryReqPriority","showMustGo","showShouldGo","showCouldGo","readOnlyModeSelection","exportColumns","mustGocolumnsDetails","shouldGocolumnsDetails","couldGocolumnsDetails","name","serverSide","processing","header","headerOffset","ajax","dataTablesParameters","_states","LocationIds","getLocationIds","FromDate","ToDate","DriverSearch","SearchedKeyword","SupplierCompanyIds","getSupplierIds","CarrierCompanyIds","getCarrierIds","getselectedLocAttributeIds","inputData","Object","assign","getBuyerLoadsForGrid","recordsTotal","recordsFiltered","searching","locations","selectedLocationIds","selectedSupplierIds","_locAttribute","_locAttributeIds","priority","filterDriverData","getBuyerLoads","autoRefreshLoads","clearAllIntervals","frmDate","getData","WBF_FROMDATE_KEY","WBF_TODATE_KEY","selectedLocations","WBF_LOCATION_KEY","selectedStates","WBF_SELECTEDSTATES_KEY","initializeFilterChange","isArrayEqual","localStorage","setItem","reload","LdPri","slice","draw","showDriverDetails","searchLoadInterval","clearInterval","autoRefreshInterval","autoRefreshTimerInterval","statusId","_priorities","startAutoRefreshTimer","refreshDatatable","setInterval","IsUserActive","stopAutoRefreshTimer","toggleGrid","driver","isOpen","getDriverAdditionalDetails","msgwarning","readonlyKey","DSB_READONLY_KEY","selectedMaplable","other","prototype","call","valueLen","keys","otherLen","compare","item1","item2","match","hasOwnProperty","toggleGrids","changeActiveTab","read","WhereIsMyDriverMapViewComponent","OnGoingLoads","CloneOnGoingLoads","setSelectedLocationId","getDispatcherCountry","setMapCenter","loaderDetails","memberInfoDetails","changeFilterValueIntervalForMultiWindow","checkFilterValueChange","getDispatcherLoads","googleMap","Lat","Lng","statusColor","SttsId","locationbounds","dLat","dLng","Priorities","isFilter","getOnGoingLoadsForMap","initailizeOnGoingLoad","thing","arr","driverFilter","addDrivertoBackground","expandMapView","toggleDriverView","xItem","sendbirdComponent","IntializeChatDefault","driverId","IntializeDriverChat","index","routeShow","closePreviousWindow","toggleExpandMapView","filterMapByStatus","searchDrivers","WallyDashboardComponent","wallyBoardService","_activateRoute","customSortingService","checkWindowSelection","params","snapshot","queryParams","viewTypeFromDashboard","changeViewType","configColumnDefsNullToBottom","dispatcherDashboard","viewType","SingleMultiWindowSubject","getItem","WhereIsMyDriverComponent","DefaultLocations","viewLoadType","loadScreenType","IsDataLoaded","_this","addEventListener","setFilterForm","restoreFilterStates","fromDate","ToggleExpandMapView","ToggleGrids","ToggleDriverView","SelectedStates","setSelectedStateId","SelectedStateId","stateChanged","selectedSupplier","setSelectedSupplierId","SelectedSupplierId","suppplierChanged","setSelectedFilters","filterChange","sessionStorage","onSelectStates","onSelectSupplier","ApplyLoadsFilters","DateFormat","test","_fromDate","_toDate","setData","_selectedDate","DSB_DATE_KEY","BuyerWallyboardLoads","jsonFilterForm","loadsGridView","loadsMapView","selectedPriorities"],"mappings":"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","file":"buyer-wally-board-buyer-wally-board-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, ViewEncapsulation, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Subject, Subscription, BehaviorSubject, from } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { JobLocationDetailsModal, TankMinMaxFill, TankChartHeight, DipTest, JobTankAdditionalDetails, JobAssetDetail, Country, Priority, Supplier, Carrier, TfxModule } from './Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from './services/buyerwallyboard.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { LocationViewComponent } from './sales-data/location-view.component';\r\nimport { InventoryDataCaptureList } from '../app.constants';\r\nexport declare var google: any;\r\ndeclare var currentCompanyId: any;\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: 'app-buyer-locations',\r\n    templateUrl: './buyer-locations.component.html',\r\n    styleUrls: ['./buyer-locations.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class BuyerLocationsComponent implements OnInit {\r\n    public Map: any;\r\n    public isLoading = false;\r\n    public zoomLevel = 5;\r\n    public jobLocationDataForMap: JobLocationDetailsModal[] = [];\r\n    public opendedJobDetails: JobLocationDetailsModal;\r\n    public clickedAssetsDetails: JobAssetDetail[] = [];\r\n    public countryList: Country[] = [];\r\n    public priorityList: Priority[] = [];\r\n    public supplierList: Supplier[] = [];\r\n    public carrierList: Carrier[] = [];\r\n    public isShowCarrierManaged: boolean = false;\r\n    public selectedCarrierIds: string = '';\r\n    public latestReading: DipTest = new DipTest();\r\n    public chartData = [];\r\n    public demandChartData: any;\r\n    public chartLabels = [];\r\n    public IsFiltersLoaded: boolean = false;\r\n    private setCountryCenterInterval: any;\r\n    public FuelUnit: string; // Used only in demant chart \r\n    public UoM: string = '';\r\n    public chartOptions: ChartOptions;\r\n    public selectedTankMinMax: TankMinMaxFill = new TankMinMaxFill();\r\n    public selectedTankHeight: TankChartHeight = new TankChartHeight();\r\n\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public jobMultiselectSettingsById: IDropdownSettings;\r\n    public multiDropdownSettings: IDropdownSettings;//Added for allowing select all for carrier and supplier\r\n    public priorityselectSettingsById: IDropdownSettings;\r\n    public filteredJobLocationData: JobLocationDetailsModal[] = [];\r\n    public unchangedJobLocationData: JobLocationDetailsModal[] = [];\r\n    public FilterForm: FormGroup;\r\n\r\n    public assetDetails = { assetIndex: 0 };\r\n    public assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    private locationSubscription = new Subscription();\r\n\r\n    public clickViewActive: Boolean = false;\r\n    public clickAssetsPanel: Boolean = false;\r\n    public clickChartsPanel: Boolean = false;\r\n\r\n    public toogleMap: Boolean = true;\r\n    public toogleFilter: Boolean = false;\r\n\r\n    public centerLocationLat = 47.1853106;\r\n    public centerLocationLog = -125.36955;\r\n    private UserCountry = \"USA\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 3\r\n    };\r\n\r\n    public mustGoUrl = \"src/assets/marker-mustgo.svg\";\r\n    public shouldGoUrl = \"src/assets/marker-shouldgo.svg\";\r\n    public couldGoUrl = \"src/assets/marker-couldgo.svg\";\r\n    public noDlrUrl = \"src/assets/marker-nodr.svg\";\r\n    public noImageUrl = \"Content/images/no-image.png\";\r\n    public isChartDataExistSubject: BehaviorSubject<any>;\r\n    subscriptions: Subscription = new Subscription();\r\n    public CurrentCompanyId: any;\r\n    @Input() singleMulti: number;\r\n    SelectedPriorityList = [];\r\n    public SelectedSupplierIds: string;\r\n    SelectedSupplierList = [];\r\n    public SelectedPriorityIds: string;\r\n    public statusList = [];\r\n    SelectedStatusList = [];\r\n    public SelectedStatusesId: string;\r\n    public locationList = [];\r\n    public DefaultLocationList = [];\r\n    SelectedlocationList = [];\r\n    public SelectedLocationIds: string;\r\n    SelectedCarrierList = [];\r\n    public isShowNonRetailJobs: boolean = false;\r\n    public jobIdsEmittedFromSalesComponent: any = [];\r\n    public IsLoadSalesData = true;\r\n    public filterCount : number;\r\n\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    @ViewChild(LocationViewComponent)  locationView : LocationViewComponent;\r\n\r\n    constructor(private buyerwallyboardservice: BuyerwallyboardService, private fb: FormBuilder, private changeDetectorRef: ChangeDetectorRef) {\r\n        this.isChartDataExistSubject = new BehaviorSubject(false);\r\n        this.initializeFilterForm();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.SelectedPriorityList.push({ Id: 1, Name: 'Must Go' });\r\n        this.priorityList = [{\r\n            Id: 1,\r\n            Name: 'Must Go'\r\n        }, {\r\n            Id: 2,\r\n            Name: 'Should Go'\r\n        },\r\n        {\r\n            Id: 3,\r\n            Name: 'Could Go'\r\n        },\r\n        {\r\n            Id: 4,\r\n            Name: 'Unplanned'\r\n        }];\r\n        this.statusList = [{\r\n            Id: 'Scheduled',\r\n            Name: 'Scheduled'\r\n        }, {\r\n            Id: 'DR Created',\r\n            Name: 'DR Created'\r\n        },\r\n        {\r\n            Id: 'No DR',\r\n            Name: 'No DR'\r\n        }];\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.jobMultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.priorityselectSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.getFilterData();\r\n\r\n        // var _this = this;\r\n        // window.addEventListener(\"beforeunload\", function (e) {\r\n        //     _this.SaveFilters();\r\n        //     return;\r\n        // });\r\n    }\r\n\r\n    private fetchJobLocationData(): void {\r\n        this.isLoading = true;\r\n        if (this.jobIdsEmittedFromSalesComponent && this.jobIdsEmittedFromSalesComponent.length) {\r\n            var ids =  []\r\n            this.jobIdsEmittedFromSalesComponent.forEach(res => { ids.push(res.TfxJobId) });\r\n            var jobids = \"\";\r\n            jobids = ids.join();\r\n            //Location Type FIlter\r\n            var selectedLocAttributeId=\"\";\r\n            if( this.FilterForm.controls.selectedLocAttributeList.value &&   this.FilterForm.controls.selectedLocAttributeList.value.length>0){\r\n                var ids = [];\r\n                this.FilterForm.controls.selectedLocAttributeList.value.forEach(res => { ids.push(res.Id) });\r\n                selectedLocAttributeId= ids.join();\r\n            }\r\n\r\n            this.locationSubscription.add(this.buyerwallyboardservice.getJobLocationDetails(jobids,selectedLocAttributeId).subscribe(res => {\r\n                if (res) {\r\n                    this.unchangedJobLocationData = this.jobLocationDataForMap = this.addJobPriority(res['Data']['jobLocationDetails']);\r\n                    // this.locationList = this.unchangedJobLocationData;\r\n                    this.fillSupplierCarrierDropdowns();\r\n                    // this.jobLocationDataForMap = this.applyFilter();\r\n                }\r\n                this.setCountryCentre();\r\n                this.isLoading = false;\r\n            }));\r\n        } else {\r\n            this.unchangedJobLocationData = this.jobLocationDataForMap = [];\r\n            this.setCountryCentre();\r\n            this.isLoading = false;\r\n        }\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.SaveFilters();\r\n    }\r\n\r\n\r\n\r\n    private fillSupplierCarrierDropdowns() {\r\n        this.CurrentCompanyId = Number(currentCompanyId);\r\n        var jobIds = [];\r\n        this.jobLocationDataForMap.map(item => jobIds.push(item.JobID));\r\n        if (jobIds && jobIds.length) {\r\n            var selectedSuppliers = this.FilterForm.get('SelectedSupplierList').value;\r\n            selectedSuppliers = selectedSuppliers.filter(t => { return this.supplierList.filter(el => el.Id == t.Id).length > 0 })\r\n            this.FilterForm.get('SelectedSupplierList').patchValue(selectedSuppliers);\r\n            var selectedCarriers = this.FilterForm.get('SelectedCarrierList').value;\r\n            selectedCarriers = selectedCarriers.filter(t => { return this.carrierList.filter(el => el.Id == t.Id).length > 0 })\r\n            this.FilterForm.get('SelectedCarrierList').patchValue(selectedCarriers);\r\n            this.onSupplierSelect();\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    private initializeFilterForm() {\r\n        this.FilterForm = this.fb.group({\r\n            IsShowAssetJobs: this.fb.control(false),\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            SelectedCarrierList: this.fb.control([]),\r\n            SelectedSupplierList: this.fb.control([]),\r\n            SelectedlocationList: this.fb.control([]),\r\n            SelectedPriorityList: this.fb.control([]),\r\n            SelectedStatusList: this.fb.control([]),\r\n            ToggleMap: this.fb.control(true),\r\n            singleMulti: this.fb.control(this.singleMulti),\r\n            selectedLocAttributeList:this.fb.control([])\r\n        });\r\n    }\r\n    private addJobPriority(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n        if (jobLocationData && jobLocationData.length) {\r\n            jobLocationData.forEach(element => {\r\n                var obj =  this.jobIdsEmittedFromSalesComponent.find(t => t.TfxJobId == element.JobID);\r\n                if(obj)\r\n                {\r\n                    if (obj.Priority == 1) {\r\n                       element.highestPriority = 1;\r\n                       element.iconUrl = this.mustGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 2) {\r\n                        element.highestPriority = 2;\r\n                        element.iconUrl  = this.shouldGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 3) {\r\n                        element.highestPriority = 3;\r\n                        element.iconUrl  =  this.couldGoUrl;\r\n                    }\r\n                    else {\r\n                        element.highestPriority = 4;\r\n                        element.iconUrl  = this.noDlrUrl;\r\n                    }\r\n                }else{\r\n                    element.highestPriority = 4;\r\n                    element.iconUrl  = this.noDlrUrl;\r\n                }                        \r\n            });\r\n        }\r\n        return jobLocationData;\r\n    }\r\n    // private checkMostPriorityJob(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n    //     const jobLocationLength = jobLocationData.length;\r\n    //     for (let i = 0; i < jobLocationLength; i++) {\r\n    //         let deliveryRequests = jobLocationData[i].jobDeliveryRequests;\r\n    //         if (deliveryRequests.length) {\r\n    //             let filteredMustGoDRs = deliveryRequests.filter((data) => data.Priority === 1);\r\n    //             let filteredShoudGoDRs = deliveryRequests.filter((data) => data.Priority === 2);\r\n    //             if (filteredMustGoDRs.length > 0) {\r\n    //                 jobLocationData[i].highestPriority = 1;\r\n    //                 jobLocationData[i].iconUrl = this.mustGoUrl;\r\n    //             }\r\n    //             else if (filteredShoudGoDRs.length > 0) {\r\n    //                 jobLocationData[i].highestPriority = 2;\r\n    //                 jobLocationData[i].iconUrl = this.shouldGoUrl;\r\n    //             }\r\n    //             else {\r\n    //                 jobLocationData[i].highestPriority = 3;\r\n    //                 jobLocationData[i].iconUrl = this.couldGoUrl;\r\n    //             }\r\n    //         } else {\r\n    //             jobLocationData[i].highestPriority = 4;\r\n    //             jobLocationData[i].iconUrl = this.noDlrUrl;\r\n    //         }\r\n    //     }\r\n    //     return jobLocationData;\r\n    // }\r\n\r\n    // private convertToObjectArray(data: string[]): SelectedItem[] {\r\n    //     let modifiedItemArray: SelectedItem[] = [];\r\n    //     data.forEach((item, index) => {\r\n    //         let Item: SelectedItem = { 'Id': 0, 'Name': '' };\r\n    //         Item.Id = index;\r\n    //         Item.Name = item;\r\n    //         modifiedItemArray.push(Item);\r\n    //     })\r\n    //     return modifiedItemArray;\r\n    // }\r\n\r\n    private setCountryCentre(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.Map && (!this.jobLocationDataForMap || this.jobLocationDataForMap.length == 0)) {\r\n                    this.Map.setCenter(new google.maps.LatLng(this.centerLocationLat, this.centerLocationLog));\r\n                    this.Map.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.jobLocationDataForMap.forEach((x: JobLocationDetailsModal) => {\r\n                        bounds.extend(new google.maps.LatLng(x.Latitude, x.Longitude));\r\n                    });\r\n                    if (this.Map && bounds) {\r\n                        this.Map.fitBounds(bounds);\r\n                        this.Map.setCenter(bounds.getCenter());  \r\n                        this.Map.setZoom(5);       \r\n                    }           \r\n                    \r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    private setZoomLevel(): void {\r\n        if (this.jobLocationDataForMap && this.jobLocationDataForMap.length == 0) {\r\n            this.setCountryCentre();\r\n        } else {\r\n            //this.zoomLevel = 10;\r\n        }\r\n    }\r\n\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.open();\r\n    }\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.close();\r\n    }\r\n    public closeAssetsClicked(): void {\r\n        this.clickAssetsPanel = false;\r\n\r\n    }\r\n    public closeViewClicked(): void {\r\n        this.clickViewActive = false;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    public modalOpen(jobLocation: JobLocationDetailsModal): void {\r\n        this.opendedJobDetails = jobLocation;\r\n        if ((this.opendedJobDetails.CountryCode === 'USA') || this.opendedJobDetails.CountryCode === 'US') {\r\n            this.UoM = 'Gallons';\r\n        }\r\n        else {\r\n            this.UoM = 'Litres';\r\n        }\r\n        this.clickedAssetsDetails = this.opendedJobDetails.jobAssetDetails;\r\n        if (this.clickedAssetsDetails.length) {\r\n            this.closeAssetsClicked();\r\n            this.closeViewClicked();\r\n            this.closeChartsClicked();\r\n            this.assetDetails.assetIndex = 0;\r\n            if (this.clickedAssetsDetails[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            this.assetsModal = { modalDetails: { display: 'block', data: 'Modal Show' } };\r\n        }\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n    }\r\n    public toggleMapView(): void {\r\n        var toggleMap = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!toggleMap);\r\n        this.toogleMap = !toggleMap;\r\n    }\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n    public toggleFilterView(): void {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n    // private applySubFilter(locationData: any): JobLocationDetailsModal[] {\r\n    //     let location = true, priority = true, status = true;\r\n\r\n    //     let filterData = locationData.filter((data: JobLocationDetailsModal) => {\r\n    //         if (this.SelectedlocationList.length) {\r\n    //             var ids = [];\r\n    //             this.SelectedLocationIds = '';\r\n    //             this.SelectedlocationList.forEach(res => { ids.push(res.Id) });\r\n    //             this.SelectedLocationIds = ids.join();\r\n    //             location = this.SelectedLocationIds.includes(String(data.JobID));\r\n    //         }\r\n    //         if (this.SelectedPriorityList.length) {\r\n    //             var ids = [];\r\n    //             this.SelectedPriorityIds = '';\r\n    //             this.SelectedPriorityList.forEach(res => { ids.push(res.Id) });\r\n    //             this.SelectedPriorityIds = ids.join();\r\n    //             priority = this.SelectedPriorityIds.includes(String(data.highestPriority))\r\n    //         }\r\n    //         if (this.SelectedStatusList.length) {\r\n    //             var ids = [];\r\n    //             this.SelectedStatusesId = '';\r\n    //             this.SelectedStatusList.forEach(res => { ids.push(res.Id) });\r\n    //             this.SelectedStatusesId = ids.join();\r\n    //             status = this.SelectedStatusesId.includes(String(data.ScheduleStatus))\r\n    //         }\r\n    //         return (location && priority && status);\r\n    //     })\r\n\r\n    //     return filterData;\r\n    // }\r\n\r\n    // private applyFilter() {\r\n\r\n    //     if (this.IsCarrierChkChanged()) {\r\n    //         return;\r\n    //     }\r\n    //     if (this.IsAssetChkChanged()) {\r\n    //         return;\r\n    //     }\r\n    //     this.jobLocationDataForMap = this.unchangedJobLocationData;\r\n    //     let filteredJobData = [];\r\n    //     let filter = this.FilterForm.value;\r\n    //     if (this.SelectedSupplierList.length) {\r\n    //         var objSup = this.SelectedSupplierList.reduce((a, c) => Object.assign(a, { [c.Id]: c.Id }), {});\r\n    //         filteredJobData = this.jobLocationDataForMap.filter(f => f.supplierDetails.some(o => objSup[o.Id] === o.Id));\r\n    //     }\r\n\r\n    //     if (filter.SelectedCarrierList.length) {\r\n    //         var obj = filter.SelectedCarrierList.reduce((a, c) => Object.assign(a, { [c.Id]: c.Id }), {});\r\n    //         if (filteredJobData.length) {\r\n    //             filteredJobData = filteredJobData.filter(f => f.carrierDetails.some(o => obj[o.Id] === o.Id));\r\n    //         }\r\n    //         else {\r\n    //             filteredJobData = this.jobLocationDataForMap.filter(f => f.carrierDetails.some(o => obj[o.Id] === o.Id));\r\n    //         }\r\n    //     }\r\n    //     if (filter.SelectedSupplierList.length == 0 && filter.SelectedCarrierList.length == 0) {\r\n    //         filteredJobData = this.unchangedJobLocationData;\r\n    //     }\r\n    //     return this.applySubFilter(filteredJobData);\r\n    // }\r\n\r\n    public closeChartsClicked(): void {\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    private getDipTestDetails(siteId: string, tankId: string, noOfDays: number): void {\r\n        this.isLoading = true;\r\n        this.chartData = [];\r\n        this.chartOptions = {};\r\n        this.chartOptions = this.setChartOptions(this.UserCountry);\r\n        this.chartLabels = [];\r\n        this.latestReading = new DipTest();\r\n        this.calculateMinMAx(this.clickedAssetsDetails[this.assetDetails.assetIndex].jobTankAdditionalDetails[0]);\r\n        this.locationSubscription.add(this.buyerwallyboardservice.getDipTestDetails(siteId, tankId, noOfDays).subscribe((data) => {\r\n            if (data && data.StatusCode === 302) {\r\n                let resp = data.Data;\r\n                this.latestReading = resp[0];\r\n                let obj = {};\r\n                let chartdata = [];\r\n                obj['label'] = 'Tank ' + resp[0]['TankId'];\r\n                let respLen = resp.length;\r\n                for (let i = 0; (i < respLen); i++) {\r\n                    let captureTime = moment(new Date(resp[i].CaptureTimeString)).format('MM/DD/YYYY hh:mm A');\r\n                    chartdata.unshift(resp[i].NetVolume);\r\n                    this.chartLabels.unshift(captureTime);\r\n                }\r\n                obj['data'] = chartdata;\r\n                this.chartData.push(obj);\r\n            }\r\n            this.isLoading = false;\r\n        }));\r\n    }\r\n\r\n    private setChartOptions(country: string) {\r\n        this.FuelUnit = (country === 'USA') ? 'Gallons' : 'Litres';\r\n        return {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: `NetVolume ( Fuels Per ${this.UoM})`\r\n                    },\r\n                    ticks: {\r\n                        callback: label => { return label.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); }\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    type: 'time',\r\n                    time: {\r\n                        displayFormats: {\r\n                            'millisecond': 'MMM DD',\r\n                            'second': 'MMM DD',\r\n                            'minute': 'MMM DD',\r\n                            'hour': 'MMM DD',\r\n                            'day': 'MMM DD',\r\n                            'week': 'MMM DD',\r\n                            'month': 'MMM DD',\r\n                            'quarter': 'MMM DD',\r\n                            'year': 'MMM DD',\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    private calculateMinMAx(selectedTank: JobTankAdditionalDetails): void {\r\n        this.selectedTankMinMax.MaxFill = selectedTank.MaxFill;\r\n        this.selectedTankMinMax.MinFill = selectedTank.MinFill;\r\n        this.selectedTankMinMax.MaxFillPercent = selectedTank.MaxFillPercent;\r\n        this.selectedTankMinMax.MinFillPercent = selectedTank.MinFillPercent;\r\n        let ci_percent = ((this.latestReading.NetVolume || 0) / selectedTank.FuelCapacity) * 100;\r\n        ci_percent = ci_percent > selectedTank.MaxFillPercent ? selectedTank.MaxFillPercent : ci_percent;\r\n        ci_percent = ci_percent < 0 ? 0 : ci_percent;\r\n\r\n        let sbf_percent = (selectedTank.MaxFillPercent - ci_percent);\r\n        sbf_percent = sbf_percent > 100 ? 100 : sbf_percent;\r\n        sbf_percent = sbf_percent < 0 ? 0 : sbf_percent;\r\n\r\n        this.fillTankDiagram(sbf_percent, ci_percent);\r\n    }\r\n\r\n    private fillTankDiagram(sbf_percent: number, ci_percent: number): void {\r\n        this.selectedTankHeight.sbf_percent = sbf_percent;\r\n        this.selectedTankHeight.ci_percent = ci_percent;\r\n        let min_ShouldBeEmptyPercent = (125 - ((sbf_percent * 1.25) + (ci_percent * 1.25)));\r\n        let min_ShouldBeFilledPercent = (sbf_percent * 1.25);\r\n        let min_CurrentInventoryPercent = (ci_percent * 1.25);\r\n        //need of cal\r\n        if (min_ShouldBeFilledPercent < 16 || min_CurrentInventoryPercent < 16) {\r\n            //dont remove from emtty\r\n            if (min_ShouldBeEmptyPercent < 16) {\r\n\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent - 16;\r\n                }\r\n            }\r\n            //remove from empty\r\n            else {\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n            }\r\n        }\r\n        this.selectedTankHeight.CurrentInventoryPercent = min_CurrentInventoryPercent;\r\n        this.selectedTankHeight.ShouldBeFilledPercent = min_ShouldBeFilledPercent;\r\n        this.selectedTankHeight.ShouldBeEmptyPercent = min_ShouldBeEmptyPercent;\r\n    }\r\n\r\n    public onInfoViewClick(jobLocation: JobLocationDetailsModal): void {\r\n        window.scrollTo(0, 0);\r\n        this.opendedJobDetails = jobLocation;\r\n        if ((this.opendedJobDetails.CountryCode === 'USA') || ((this.opendedJobDetails.CountryCode === 'US'))) {\r\n            this.UoM = 'Gallons';\r\n        }\r\n        else {\r\n            this.UoM = 'Litres';\r\n        }\r\n        this.assetDetails.assetIndex = 0;\r\n        this.clickViewActive = true;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n        this.FilterForm.get('ToggleMap').patchValue(true);\r\n        this.toogleMap = true;\r\n        this.closeAssetsClicked();\r\n    }\r\n    public onAssetsViewClick(assets: JobAssetDetail[]): void {\r\n        if (assets.length) {\r\n            this.clickAssetsPanel = true;\r\n            this.clickedAssetsDetails = assets;\r\n            if (assets[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(assets[0].jobTankAdditionalDetails[0]['SiteId'], assets[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            else {\r\n                this.chartData = [];\r\n                this.latestReading = new DipTest();\r\n            }\r\n        }\r\n    }\r\n    public onChartsViewClick(assets: JobAssetDetail[]): void {\r\n        this.clickChartsPanel = true;\r\n        this.isChartDataExistSubject.next(false);\r\n        let tanks: JobAssetDetail[] = [];\r\n        if (assets.length) {\r\n            tanks = assets.filter(t => t.AssetType == 2);\r\n        }\r\n\r\n        if (tanks.length && tanks[0].jobTankAdditionalDetails.length) {\r\n            this.getDemandCaptureChart(tanks[0].jobTankAdditionalDetails[0]['SiteId'], 3, tanks[0].JobId);\r\n        }\r\n        else {\r\n            this.isChartDataExistSubject.next(false);\r\n            this.demandChartData = null;\r\n        }\r\n    }\r\n    public assetTabClicked(indx: number): void {\r\n        this.assetDetails.assetIndex = indx;\r\n        if (this.clickedAssetsDetails[indx].jobTankAdditionalDetails.length) {\r\n            this.getDipTestDetails(this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['TankId'], 3);\r\n        } else {\r\n            this.chartData = [];\r\n            this.latestReading = new DipTest();\r\n        }\r\n    }\r\n    public mapReady(map: any): void {\r\n        this.Map = map;\r\n        this.setCountryCentre();\r\n    }\r\n    public getDemandCaptureChart(siteId: string, noOfDays: number, tfxJobId: number): void {\r\n        this.demandChartData = { siteId: siteId, noOfDays: noOfDays, tfxJobId: tfxJobId };\r\n        this.isChartDataExistSubject.next(true);\r\n    }\r\n    public setCenterMap($event): void {\r\n        if (this.UserCountry && (!this.jobLocationDataForMap || !this.jobLocationDataForMap.length)) {\r\n            this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n            this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n            if (this.Map) {\r\n                this.Map.setCenter({ lat: this.centerLocationLat, lng: this.centerLocationLog });\r\n                this.Map.setZoom(5);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Will this work?\r\n    public openDRPanel(event: any) {\r\n        this.modalClose();\r\n        jQuery('#jobIdForDr').val(event.JobId);// set the html hidden field value i9n shared layout.cshtml\r\n        jQuery('#demandCaptureButton').click(); // trigger click of demand capture button in layout.cshtml\r\n    }\r\n\r\n\r\n    // public IsCarrierChkChanged() {\r\n    //     var isCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\r\n    //     if (this.isShowCarrierManaged != isCarrierManaged) {\r\n    //         this.selectedCarrierIds = '';\r\n    //         this.FilterForm.get('SelectedCarrierList').patchValue([]);\r\n    //         this.FilterForm.get('SelectedSupplierList').patchValue([]);\r\n    //         this.isShowCarrierManaged = isCarrierManaged;\r\n    //         // this.fetchJobLocationData();\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    // public IsAssetChkChanged() {\r\n    //     var isAssetChkManaged = this.FilterForm.get('IsShowAssetJobs').value;\r\n    //     if (this.isShowNonRetailJobs != isAssetChkManaged) {\r\n    //         this.isShowNonRetailJobs = isAssetChkManaged;\r\n    //         // this.fetchJobLocationData();\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    public SaveFilters() {\r\n        var filterData = this.FilterForm.value;\r\n        var filterModel = JSON.stringify(filterData);\r\n        this.buyerwallyboardservice.saveFilters(TfxModule.BuyerWallyboardLocation, filterModel).subscribe(res => {\r\n            if (res) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public GetFilters() {\r\n        this.buyerwallyboardservice.getFilters(TfxModule.BuyerWallyboardLocation).subscribe(res => {\r\n            if (res && res.length > 0) {\r\n                this.SetFilters(res);\r\n            }\r\n            else {\r\n                this.IsFiltersLoaded = true; \r\n                this.changeDetectorRef.detectChanges();\r\n                this.FilterForm.get('SelectedPriorityList').patchValue([{ Id: 1, Name: 'Must Go' }]);\r\n                this.locationView.getSalesData();\r\n            }\r\n        });\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        this.IsFiltersLoaded = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var filterData = JSON.parse(input);\r\n        if (!filterData.SelectedPriorityList || !filterData.SelectedPriorityList.length) {\r\n            filterData.SelectedPriorityList = [{ Id: 1, Name: 'Must Go' }];\r\n        }\r\n        this.FilterForm.patchValue(filterData);\r\n        this.toogleMap = filterData.ToggleMap;\r\n        this.locationView.getSalesData();\r\n        this.onSupplierSelect();\r\n        this.ApplyFilters();\r\n    }\r\n\r\n    getFilterData() {\r\n        var isCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\r\n        this.buyerwallyboardservice.GetFilterData(isCarrierManaged).subscribe(data => {\r\n            // this.locationList = data.map(t => {return {JobID: t.Id, JobName : t.Name}});\r\n            this.locationList = data;\r\n\r\n            this.DefaultLocationList=data;\r\n            this.supplierList = this.GetUniqueItems(data.map(t => t.Suppliers).reduce((p, n) => p.concat(n), []));\r\n            this.carrierList = this.GetUniqueItems(data.map(t => t.Carriers).reduce((p, n) => p.concat(n), []));\r\n            this.GetFilters();\r\n        });\r\n        // this.ApplyFilters();\r\n    }\r\n\r\n    onSupplierSelect(){\r\n        var selectedSuppliers = this.FilterForm.get('SelectedSupplierList').value;\r\n        if(selectedSuppliers != undefined && selectedSuppliers.length > 0)\r\n        {\r\n            // this.locationList=this.DefaultLocationList.filter(t=>t.Suppliers.filter(t1=> selectedSuppliers.some(t2=> t2.Id == t1.Id) ).length > 0 ).map(t => {return {JobID: t.Id, JobName : t.Name}});\r\n            this.locationList=this.DefaultLocationList.filter(t=>t.Suppliers.filter(t1=> selectedSuppliers.some(t2=> t2.Id == t1.Id) ).length > 0 );\r\n            \r\n        }else{\r\n            // this.locationList= this.DefaultLocationList.map(t => {return {JobID: t.Id, JobName : t.Name}});\r\n            this.locationList= this.DefaultLocationList;\r\n        }\r\n        this.locationList = this.GetUniqueItems(this.locationList.reduce((p, n) => p.concat(n), []));\r\n    }\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n    getJobIdsForMapEventHandler(valueEmitted) {\r\n        this.jobIdsEmittedFromSalesComponent = valueEmitted;\r\n        this.fetchJobLocationData();\r\n    }\r\n\r\n    public ResetFilters() {\r\n        this.FilterForm.get('SelectedSupplierList').patchValue([]);\r\n        this.FilterForm.get('SelectedlocationList').patchValue([]);\r\n        this.FilterForm.get('SelectedPriorityList').patchValue([]);\r\n        this.FilterForm.get('SelectedStatusList').patchValue([]);\r\n        this.FilterForm.get('selectedLocAttributeList').patchValue([]);\r\n        this.ApplyFilters('reset');\r\n    }\r\n    public ApplyFilters(msg?) {\r\n        // this.SaveFilters();\r\n        this.filterCount = 0;\r\n\r\n        if (this.FilterForm) {\r\n\r\n            var selectedSupplierList = this.FilterForm.get('SelectedSupplierList').value || [];\r\n            this.filterCount += selectedSupplierList.length;\r\n\r\n            var selectedlocationList = this.FilterForm.get('SelectedlocationList').value || [];\r\n            this.filterCount += selectedlocationList.length;\r\n\r\n            var selectedPriorityList = this.FilterForm.get('SelectedPriorityList').value || [];\r\n            this.filterCount += selectedPriorityList.length;\r\n\r\n            var selectedStatusList = this.FilterForm.get('SelectedStatusList').value || [];\r\n            this.filterCount += selectedStatusList.length;\r\n\r\n            var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\r\n            this.filterCount += selectedLocAttributeList.length;\r\n        }\r\n       \r\n        if (msg == \"set\") {\r\n            this.locationView.applyLoadsFilters(this.FilterForm);\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            this.locationView.applyLoadsFilters(this.FilterForm);\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n        this.SaveFilters();\r\n    }\r\n}\r\n","<div class=\"col-sm-9 sticky-header-loc\" [formGroup]=\"FilterForm\">\r\n    <div class=\"row mr15\">\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" formControlName=\"IsShowCarrierManaged\" (change)=\"SaveFilters()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"mtm5\" *ngIf=\"FilterForm.get('IsShowCarrierManaged').value\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\"\r\n                   [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 p-0\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Carriers'\" \r\n                                                 [formControl]=\"FilterForm.controls['SelectedCarrierList']\"\r\n                                                 [settings]=\"multiDropdownSettings\" class=\"fs14\"\r\n                                                 [data]=\"carrierList\"\r\n                                                 (onSelect)=\"SaveFilters()\"\r\n                                                 (onDeSelect)=\"SaveFilters()\"\r\n                                                 #selectedCarriers>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineShowAsset\" formControlName=\"IsShowAssetJobs\" (change)=\"SaveFilters()\">\r\n                <label class=\"form-check-label\" for=\"inlineShowAsset\"> Show locations with Assets</label>\r\n            </div>\r\n        </div>\r\n        <!--<a class=\"fs14 mb10\" (click)=\"toggleMapView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>-->\r\n        <!--<span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span>-->\r\n        <div class=\"col-4 pl0 text-right\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i>Filters</a>\r\n            <a class=\"hide_show_map fs14 dib mr10\" (click)=\"toggleMapView()\">\r\n                <i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleMap').value ? 'Hide Map View' : 'Show Map View' }}\r\n            </a>\r\n            <!--<div class=\"col-sm-4  text-center pt5\" (clickOutside)=\"clickOutsideDropdown()\">\r\n            <a class=\"fs14\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5 ml20\"></i> Filters</a>\r\n            <div class=\"locationfilter border mt5 bg-gray shadow-b z-index5 pa10\" *ngIf=\"toogleFilter\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Suppliers'\" [data]=\"supplierList\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedSupplierList']\"\r\n                                                 [settings]=\"multiDropdownSettings\" #selectedSuppliers>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedlocationList']\" [settings]=\"jobMultiselectSettingsById\"\r\n                                                 [placeholder]=\"'Select Location'\" [data]=\"locationList\" #selectedLocations>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Priority'\" [data]=\"priorityList\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedPriorityList']\" [settings]=\"priorityselectSettingsById\"\r\n                                                 #selectedPriority>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStatusList']\" [placeholder]=\"'Status'\"\r\n                                                 [data]=\"statusList\" [settings]=\"multiselectSettingsById\"\r\n                                                 #selectedPriority>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12\">\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\" [placeholder]=\"'Inventory Capture Method'\" [data]=\"LocationAttributeList\"\r\n                                                 [settings]=\"multiselectSettingsById\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"animated clearboth mt60 row\" [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap}\">\r\n    <div [ngClass]=\"clickViewActive  ? 'col-sm-8 mb15' : 'col-sm-12 mb15'\">\r\n        <div class='pa bg-white top0 left0 z-index5 loading-wrapper hide-element'>\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n        <div class=\"pr\">\r\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; bottom:0; left: 10px; font-size: 11px;\">\r\n                <div id=\"status-legends\" class=\"well pa0\">\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pl5 pr5 pt8 pb5 radius-10 no-b-radius\">\r\n                            <img [src]=\"mustGoUrl\" data-statusid=\"11\">\r\n                            Must Go\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pa5\">\r\n                            <img [src]=\"shouldGoUrl\" data-statusid=\"12\">\r\n                            Should Go\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pa5\">\r\n                            <img [src]=\"couldGoUrl\" data-statusid=\"1\">\r\n                            Could Go\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pa5\">\r\n                            <img [src]=\"noDlrUrl\" data-statusid=\"1\">\r\n                            Unplanned\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                <span class=\"spinner-dashboard pa\"></span>\r\n            </div>\r\n            <agm-map [zoom]=\"zoomLevel\" [minZoom]=\"2\" [maxZoom]=\"16\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\"\r\n                     [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\"\r\n                    >\r\n                <ng-container *ngFor=\"let jobLocation of jobLocationDataForMap\">\r\n                    <agm-marker [latitude]=\"jobLocation.Latitude\" [longitude]=\"jobLocation.Longitude\"\r\n                                [iconUrl]='{ \"url\": jobLocation.iconUrl, \"scaledSize\": { \"height\": 24, \"width\": 24 } }'\r\n                                (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\"\r\n                                (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\" (markerClick)=\"onInfoViewClick(jobLocation)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                            <div>\r\n                                <p><strong>{{ jobLocation.JobName}}</strong></p>\r\n                                <!--<p>{{jobLocation.CustomerName}}</p>-->\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                </ng-container>\r\n            </agm-map>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-sm-4 pl0 right_side_panel\" *ngIf=\"clickViewActive\">\r\n        <div class=\"dib full-width pr well pa15 pt10\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div *ngIf=\"!this.opendedJobDetails.SiteImageFilePath\" class=\"color-maroon pull-left\">\r\n                        <i class=\"fas fa-image mr5\"></i> No image available\r\n                    </div>\r\n                    <a (click)=\"closeViewClicked()\" class=\"pull-right\"><i class=\"far fa-times-circle fa-lg\"></i> </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <!--<img [src]=\"this.opendedJobDetails.SiteImageFilePath ? this.opendedJobDetails.SiteImageFilePath:noImageUrl\" alt=\"\" class=\"img-responsive\">-->\r\n                    <img *ngIf=\"this.opendedJobDetails.SiteImageFilePath\"\r\n                         [src]=\"this.opendedJobDetails.SiteImageFilePath\" class=\"img-responsive\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-sm-12 driver_details\">\r\n                    <div class=\"job-location\">\r\n                        <p class=\"mb0\">\r\n                            <span class=\"address1\">\r\n                                <i class=\"fas fa-briefcase\"></i> {{this.opendedJobDetails.JobName}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"job-location\">\r\n                        <p class=\"mb0\">\r\n                            <span class=\"address1\">\r\n                                <!--<i class=\"far fa-building\"></i> {{this.opendedJobDetails.CustomerName}}-->\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"job-location\">\r\n                        <p class=\"mb0\">\r\n                            <span class=\"address1\">\r\n                                <i class=\"fas fa-map-marker-alt\"></i> {{this.opendedJobDetails.Address}},\r\n                                {{this.opendedJobDetails.City}}, {{this.opendedJobDetails.State}},\r\n                                {{this.opendedJobDetails.ZipCode}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"site-status fs12 mt5\">\r\n                        <div class=\"panel-group\">\r\n                            <div class=\"panel panel-default\">\r\n                                <div class=\"panel-heading\">\r\n                                    <a data-toggle=\"collapse\" href=\"#collapse1\">\r\n                                        <span class=\"f-bold\">Site Availability:</span>\r\n                                        <span *ngIf=\"this.opendedJobDetails.SiteAvailabilityTotalDays\"\r\n                                              class=\"status  ml10\">OPEN</span>\r\n                                        <!--<span class=\"timing  ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>-->\r\n                                    </a>\r\n                                    <a data-toggle=\"collapse\" href=\"#collapse1\" class=\"pull-right\">\r\n                                        <i class=\"fas collapse1_icon fa-2x line-height_18 fa-angle-down\"></i>\r\n                                    </a>\r\n                                </div>\r\n                                <div id=\"collapse1\" class=\"panel-collapse collapse\">\r\n                                    <div class=\"panel-body\">\r\n                                        <div class=\"date_time\"\r\n                                             *ngFor=\"let day of this.opendedJobDetails.SiteAvailabilityArray\">\r\n                                            <span class=\"day ml10\">{{day}} </span>\r\n                                            <span class=\"status ml10 text-success\">OPEN</span>\r\n                                            <!--<span class=\"timing ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>-->\r\n                                        </div>\r\n                                        <div *ngIf=\"!this.opendedJobDetails.SiteAvailabilityArray.length\">\r\n                                            No Days Available\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"site-instruction fs12 mb5\">\r\n                        <label class=\"f-bold db mb0\">Site Instruction: </label>\r\n                        <span class=\"instruction opacity8\">\r\n                            {{this.opendedJobDetails.SiteInstructions}}\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"site-contacts fs12 row mb5\">\r\n                        <div class=\"col-sm-3\">\r\n                            <label class=\"f-bold\">Contact(s):</label>\r\n                        </div>\r\n                        <div class=\"col-sm-9\">\r\n                            <p class=\"mb0 opacity8\">{{this.opendedJobDetails.ContactPersonName}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 site-assets\">\r\n                            <a class=\"btn btn-default pull-left ml0 fs12\"\r\n                               (click)=\"onAssetsViewClick(this.opendedJobDetails.jobAssetDetails)\">\r\n                                {{this.opendedJobDetails.TotalCount}}\r\n                                Assets/Tanks\r\n                            </a>\r\n                            <a (click)=\"onChartsViewClick(this.opendedJobDetails.jobAssetDetails)\"\r\n                               class=\"btn btn-default pull-left fs12\">Demand Capture Trend </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"assets-panel dib full-width pr well pa15 pt10\" *ngIf=\"clickAssetsPanel\">\r\n            <div class=\"assets-header\">\r\n                <div class=\"row mb5\">\r\n                    <div class=\"col-sm-12\">\r\n                        <a class=\"pull-left\" (click)=\"closeAssetsClicked()\"> <i class=\"fas fa-arrow-left\"></i> Back</a>\r\n                        <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i class=\"far fa-times-circle fa-lg\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"charts-panel dib full-width pr well pa15 pt10 z-index10\" *ngIf=\"clickChartsPanel\">\r\n            <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                <span class=\"spinner-dashboard pa\"></span>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <a class=\"pull-left\" (click)=\"closeChartsClicked()\"> <i class=\"fas fa-arrow-left\"></i> Back</a>\r\n                    <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i class=\"far fa-times-circle fa-lg\"></i></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"charts-body\">\r\n                <div style=\"width: 100%;height:50vh\">\r\n                    <div style=\"width: 100%;Tor-ulsd#2 tank\">\r\n                        <app-demand-capture-chart *ngIf=\"(isChartDataExistSubject | async) else noDtaAvailable\"\r\n                                                  [data]=\"demandChartData\"></app-demand-capture-chart>\r\n                    </div>\r\n                    <ng-template #noDtaAvailable>\r\n                        <div class=\"alert alert-danger\">\r\n                            No Data Available\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--locations grid-->\r\n<div class=\"row\" [ngClass]=\"toogleMap ? 'mt20' : 'mt60'\">\r\n    <div class=\"col-sm-12\">\r\n        <app-location-view [FilterForm]=\"FilterForm\" [IsFiltersLoaded] =\"IsFiltersLoaded\" [IsLoadSalesData]=\"IsLoadSalesData\" (getJobIdsForMap)=\"getJobIdsForMapEventHandler($event)\">\r\n            Loading...\r\n        </app-location-view>\r\n    </div>\r\n</div>\r\n<!--modal popup of tank-->\r\n<ng-template #assetDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n         [ngStyle]=\"{'display':modalDetails.display}\" id=\"assetDetailsModal\" tabindex=\"-1\" role=\"dialog\"\r\n         aria-labelledby=\"assetDetailsModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        Asset/Tank Details\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt15\" (click)=\"modalClose()\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fa-lg\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"modal-body\" style=\"max-height:80vh;overflow-y:scroll\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-container *ngTemplateOutlet=\"assetDetailsModal;context:assetsModal\">\r\n</ng-container>\r\n<!--Tank details modal view-->\r\n<ng-template #assetsContentTemplate let-assetNumber=\"assetIndex\">\r\n    <div class=\"aseets-body assets_modal\">\r\n        <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div>\r\n        <ul class=\"nav nav-tabs\">\r\n            <ng-container *ngFor=\"let asset of clickedAssetsDetails let indx=index\">\r\n                <li [ngClass]=\"{'active':assetDetails.assetIndex===indx}\">\r\n                    <a (click)=\"assetTabClicked(indx)\">\r\n                        {{asset.AssetType === 2 ? 'Tank': 'Asset' }} ({{indx+1}})\r\n                    </a>\r\n                </li>\r\n\r\n            </ng-container>\r\n        </ul>\r\n        <div class=\"tab-content pa0\">\r\n            <div id=\"assets1\" class=\"tab-pane fade in active animated fadeIn\">\r\n                <div class=\"row mb10 mt10\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col align-self-start\">\r\n                                <span class=\"mt0 mb0 float-left fs16\">{{clickedAssetsDetails[assetNumber].AssetName}}</span>\r\n                                <span class=\"mt0 mb0 float-left fs16\"\r\n                                      *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName && clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber \">\r\n                                    &nbsp;(\r\n                                    {{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName}}-{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber}}\r\n                                    )\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col align-self-end\" *ngIf=\"!clickAssetsPanel\">\r\n                                <button *ngIf=\"clickedAssetsDetails[assetNumber].AssetType ===2\"\r\n                                        (click)=\"openDRPanel(clickedAssetsDetails[assetNumber])\"\r\n                                        class=\"btn btn-primary btn-sm float-right\">\r\n                                    Create DR\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col align-self-end\">\r\n                                <a href=\"{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath}}\"\r\n                                   target=\"_blank\" download\r\n                                   *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath\"\r\n                                   class=\"float-right mt5\">\r\n                                    <i class=\"fa fa-download mr5\" aria-hidden=\"true\"></i>Download Dip Chart\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border radius-5 pa15 mb20\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType === 1\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                   width=\"100%\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Product Type</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].ProductType}}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Capacity</td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border radius-5 pa15 tank-panel mb20\"\r\n                     *ngIf=\"clickedAssetsDetails[assetNumber].AssetType ===2\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"tank_dip_chart text-center mt10\">\r\n                                <div>\r\n                                    <div id=\"ShouldBeEmptyPercent\" class=\"color-green\"\r\n                                         [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeEmptyPercent || 0}\"> </div>\r\n                                    <div id=\"ShouldBeFilledPercent\" class=\"color-green\"\r\n                                         [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeFilledPercent || 0}\">\r\n                                        {{selectedTankHeight.sbf_percent| number:'1.0-2'}}%\r\n                                    </div>\r\n                                    <div id=\"CurrentInventoryPercent\" class=\"red-bg\"\r\n                                         [ngStyle]=\"{'height.px':selectedTankHeight.CurrentInventoryPercent || 0}\">\r\n                                        {{selectedTankHeight.ci_percent| number:'1.0-2'}}%\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-9\">\r\n                            <table class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                   width=\"100%\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\" width=\"50%\">Storage ID </td>\r\n                                        <td>\r\n                                            <span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.StorageId}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Type</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].TankTypeName}}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Product Type</td>\r\n                                        <td>\r\n                                            <span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TfxProductTypeName}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Capacity</td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">\r\n                                            <span>Min Fill</span>\r\n                                            <span>&nbsp;({{selectedTankMinMax.MinFillPercent}}%)</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{selectedTankMinMax.MinFill| number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].MinFill\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">\r\n                                            <span>Max Fill</span>\r\n                                            <span>&nbsp;({{selectedTankMinMax.MaxFillPercent}}%)</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{selectedTankMinMax.MaxFill | number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].MaxFill\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType ===2\">\r\n                    <div class=\"col-sm-12\">\r\n                        <table class=\"table table-condensed table-hover table-bordered small-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Last Reading</th>\r\n                                    <th>Ullage (<span>{{UoM}}</span>)</th>\r\n                                    <th>Last Reading Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div *ngIf=\"(latestReading?.NetVolume==-1 || latestReading?.NetVolume===undefined) else reading\">\r\n                                            NA\r\n                                        </div>\r\n                                        <ng-template #reading>\r\n                                            {{(latestReading?.NetVolume | number)}} <span>{{UoM}}</span>\r\n                                        </ng-template>\r\n                                    </td>\r\n                                    <td><span>{{(latestReading?.Ullage| number) || 'NA'}}</span></td>\r\n                                    <td>\r\n                                        <span>\r\n                                            {{\r\n(latestReading?.CaptureTimeString| date:'MM/dd/yyyy, hh:mm a':'UTC') ||\r\n                                            'NA'\r\n                                            }}\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"assets-id\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType===2\">\r\n\r\n                    <p class=\"mb0\">\r\n                        <label class=\"f-bold\">Dip test value trend : </label>\r\n                    </p>\r\n                    <div style=\"width: 100%;max-height:320px\" *ngIf=\"chartData.length\">\r\n                        <canvas baseChart height=\"300\" style=\"margin:auto;\" [chartType]=\"'line'\" [datasets]=\"chartData\"\r\n                                [options]=\"chartOptions\" [labels]=\"chartLabels\" [legend]=\"true\"></canvas>\r\n                    </div>\r\n                    <div *ngIf=\"!chartData.length && !isLoading\" class=\"alert alert-danger\">\r\n                        No Data Available\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Supplier</label>\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Suppliers'\" \r\n                                             [formControl]=\"FilterForm.controls['SelectedSupplierList']\"\r\n                                             [settings]=\"multiDropdownSettings\" [data]=\"supplierList\" (onDeSelect)=\"onSupplierSelect()\" (onSelect)=\"onSupplierSelect();\" #selectedSuppliers>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedlocationList']\" \r\n                                             [placeholder]=\"'Select Location'\" [settings]=\"jobMultiselectSettingsById\" [data]=\"locationList\" #selectedLocations>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Priority</label>\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Priority'\" \r\n                                             [formControl]=\"FilterForm.controls['SelectedPriorityList']\" [settings]=\"priorityselectSettingsById\" [data]=\"priorityList\"\r\n                                             #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Status</label>\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStatusList']\" [placeholder]=\"'Status'\"\r\n                                             [settings]=\"multiselectSettingsById\" [data]=\"statusList\" \r\n                                             #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\" [placeholder]=\"'Inventory Capture Method'\" \r\n                                             [settings]=\"multiselectSettingsById\" [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"ResetFilters();\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\nimport { WallyDashboardComponent } from './wally-dashboard/wally-dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { BuyerLocationsComponent } from './buyer-locations.component';\nimport { WhereIsMyDriverComponent } from './where-is-my-driver.component';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { WhereIsMyDriverMapViewComponent } from './wally-dashboard/map-view.component';\nimport { WhereIsMyDriverGridViewComponent } from './wally-dashboard/grid-view.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { DataTablesModule } from 'angular-datatables';\nimport { SalesComponent } from './sales.component';\nimport { PriorityViewComponent } from './sales-data/priority-view.component';\nimport { TankViewComponent } from './sales-data/tank-view.component';\nimport { LocationViewComponent } from './sales-data/location-view.component';\nimport { TankChartModule } from '../tank-chart/tank-chart.module';\nimport { FormsModule } from '@angular/forms';\nimport { TankViewMasterComponent } from './sales-data/tank-view-master.component';\n\nconst routeWallyBoard: Routes = [\n    {\n        path: '',\n        component: WallyDashboardComponent\n    },\n]\n\n@NgModule({\n    declarations: [\n        WallyDashboardComponent,\n        BuyerLocationsComponent,\n        WhereIsMyDriverComponent,\n        WhereIsMyDriverMapViewComponent,\n        WhereIsMyDriverGridViewComponent,\n        SalesComponent,\n        PriorityViewComponent,\n        TankViewComponent,\n        LocationViewComponent,\n        TankViewMasterComponent\n    ],\n    imports: [\n        SharedModule,\n        DirectiveModule,\n        ChartsModule,\n        DataTablesModule,\n        AgmDirectionModule,\n        TankChartModule,\n        FormsModule,\n        RouterModule.forChild(routeWallyBoard)\n    ]\n})\nexport class BuyerWallyBoardModule { }\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div>\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Location View</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-Locationmustgo\" class=\"table table-bordered table-hover\" datatable\r\n                                   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank/Asset Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of LocationSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td><!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span>\r\n                                            <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"(row.TankInventoryDiffinHrs>2 || row.TankInventoryDiffinHrs==0 && this.IsShowRetailJobs) \"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--') ?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <!-- <td>\r\n        <a (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n           data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n    </td> -->\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n        </ng-container>\r\n\r\n        <ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n            <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n                 [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n                 aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header pt10 pb5 no-border\">\r\n                            <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                                {{modalDetails.title}}\r\n                            </h3>\r\n                            <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\">\r\n                                <i class=\"fa fa-close fa-lg\"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                                <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <h3 class=\"fs14 font-bold\">Create DR</h3>\r\n                                        </div>\r\n                                        <div class=\"row col-sm-12\">\r\n                                            <div class=\"col-sm-3 input-group\">\r\n                                                <div class=\"form-group mb0\">\r\n                                                    <label>Quantity Type</label>\r\n                                                    <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\" (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                        <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                            {{sqType.Name}}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                                <div class=\"form-group mb0\">\r\n                                                    <label>Quantity</label>\r\n                                                    <div class=\"input-group\">\r\n                                                        <input type=\"text\" name=\"RequiredQuantity\"\r\n                                                               [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                               [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                               (change)=\"validateMsg='';\"\r\n                                                               class=\"form-control\" required />\r\n                                                        <div class=\"invalid-feedback\"\r\n                                                             [ngClass]=\"{'show-element': !isValid}\">\r\n                                                            {{validateMsg}}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6 mt5\">\r\n                                                <label>Priority</label>\r\n                                                <div class=\"col-sm-12 pa0 mt5\">\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                               [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                        <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                               [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                        <label class=\"form-check-label\" for=\"shouldgo-dr\">\r\n                                                            Should\r\n                                                            Go\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                               [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                        <label class=\"form-check-label\" for=\"couldgo-dr\">\r\n                                                            Could\r\n                                                            Go\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div class=\"col-sm-12 text-right mt10 \">\r\n                                            <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                                    class=\"btn btn-primary btn-lg\">\r\n                                                Create\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </div>\r\n                                <div *ngIf=\"ExistingDeliveries.length\">\r\n                                    <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                                <h2 class=\"mb-0\">\r\n                                                    <button class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                            type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                            aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                        Existing Delivery Request(s)\r\n                                                        <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                            <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                            <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                        </span>\r\n                                                    </button>\r\n                                                </h2>\r\n\r\n                                            </div>\r\n                                            <div id=\"collapseOne\" class=\"collapse\"\r\n                                                 [ngClass]=\"{'show':modalDetails.IsScheduled}\"\r\n                                                 aria-labelledby=\"headingOne\" data-parent=\"#accordionExitingDrReq\">\r\n                                                <div class=\"card-body pa5\">\r\n                                                    <div class=\"table-responsive\">\r\n                                                        <table class=\"table table-hover margin bottom details-table\">\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>Quantity</th>\r\n                                                                    <th>Schedule Date</th>\r\n                                                                    <th>Schedule Time</th>\r\n                                                                    <th>Driver</th>\r\n                                                                    <th>Carrier</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                                    <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}</td>\r\n                                                                    <td>{{del.ScheduleDate}}</td>\r\n                                                                    <td>{{del.ScheduleTime}}</td>\r\n                                                                    <td>{{del.Driver}}</td>\r\n                                                                    <td>{{del.Carrier}}</td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <div id=\"create-dip-test\">\r\n            <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\r\n        </div>\r\n","import { Component, OnInit, Input, ViewChild, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { Declarations } from 'src/app/declarations.module';\nimport { SalesDataModel, DeliveryDetailsModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Subject, forkJoin, Subscription } from 'rxjs';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { FormGroup } from '@angular/forms';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-location-view',\n    templateUrl: './location-view.component.html',\n    styleUrls: ['./location-view.component.css']\n})\nexport class LocationViewComponent implements OnInit {\n\n    public LocationSchedules: any = [];\n    IsLoading = false;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTank: SalesDataModel;\n    public dtTrigger: Subject<any> = new Subject();\n    subscriptions: Subscription = new Subscription();\n    public dtOptions: any = {};\n    public SelectedLocations = [];\n    SelectedPriorities = [];\n    SelectedCarriers = [];\n    IsShowCarrierManaged: boolean = false;\n    public SelectedSuppliers = [];\n    public SelectedStatus = [];\n    IsShowRetailJobs: boolean = false;\n    public SelectedPrioritiesId: any = [];\n    public SelectedRegionId: string;\n    public SelectedCustomerId: string;\n    public SelectedLocationId: string;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public isDataLoaded: boolean = false;\n    public ScheduleQuantityTypes: any = [];\n    @Input() FilterForm: FormGroup;\n    @Input() IsFiltersLoaded: boolean = false;\n    @Input() IsLoadSalesData: true;\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    public SelectedTankRegionId: string = '';\n    public SelectedCarrierIds: string;\n    public SelectedStatusId: string;\n    public SelectedSuppliersId: string;\n    public SelectedLocArributeId: string;\n    @Output()\n    getJobIdsForMap: EventEmitter<any[]> = new EventEmitter<any[]>();\n    constructor(private dispatcherService: DispatcherService, private carrierService: CarrierService) {\n    }\n\n    ngOnInit() {\n        this.initializeGrid();\n        // this.getSalesData();\n        this.getScheduleQuantityType();\n        this.subscribeFormChanges();\n\n    }\n\n    subscribeFormChanges() {\n        this.subscriptions.add(this.FilterForm.valueChanges\n            .subscribe(change => {\n                if (this.IsLoadSalesData) {\n                    let isFilterChanged = this.setFilterData();\n                    // if ((isFilterChanged || !this.isDataLoaded) && this.IsFiltersLoaded) {\n                    //     this.isDataLoaded = true;\n                    //     this.getSalesData();\n                    // }\n                }\n            }))\n    }\n\n    unSubscribeFormChanges() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    ngOnChanges(change: SimpleChanges) {\n        if (change.IsLoadSalesData && change.IsLoadSalesData.currentValue != change.IsLoadSalesData.previousValue) {\n            this.IsLoadSalesData = change.IsLoadSalesData.currentValue;\n        }\n        if (change.IsFiltersLoaded && change.IsFiltersLoaded.currentValue != change.IsFiltersLoaded.previousValue) {\n            this.IsFiltersLoaded = change.IsFiltersLoaded.currentValue;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.dtTrigger.unsubscribe();\n        this.unSubscribeFormChanges();\n    }\n\n    getScheduleQuantityType() {\n        this.dispatcherService.GetBuyerScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n\n    setFilterData() {\n        let isFilterChanged = false;\n\n        this.SelectedLocations = this.FilterForm.get('SelectedlocationList').value;\n        var ids = [];\n        this.SelectedLocations.forEach(res => { ids.push(res.Id) });\n        var selectedLocationId = ids.join();\n        if (this.SelectedLocationId != selectedLocationId) {\n            this.SelectedLocationId = selectedLocationId;\n            isFilterChanged = true;\n        }\n\n        if (this.IsShowCarrierManaged != this.FilterForm.get('IsShowCarrierManaged').value) {\n            this.IsShowCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\n            isFilterChanged = true;\n            this.getSalesData();\n        }\n        this.SelectedCarriers = this.FilterForm.get('SelectedCarrierList').value;\n        ids = [];\n        this.SelectedCarriers.forEach(res => { ids.push(res.Id) });\n        var selectedCarrierIds = ids.join();\n        if (this.SelectedCarrierIds != selectedCarrierIds) {\n            this.SelectedCarrierIds = selectedCarrierIds;\n            isFilterChanged = true;\n            this.getSalesData();\n        }\n\n        this.SelectedStatus = this.FilterForm.get('SelectedStatusList').value;\n        ids = [];\n        this.SelectedStatus.forEach(res => { ids.push(res.Id) });\n        var selectedStatusId = ids.join();\n        if (this.SelectedStatusId != selectedStatusId) {\n            this.SelectedStatusId = selectedStatusId;\n            isFilterChanged = true;\n        }\n        \n        var selectedLocAttri = this.FilterForm.get('selectedLocAttributeList').value;\n        ids = [];\n        selectedLocAttri && selectedLocAttri.forEach(res => { ids.push(res.Id) });\n        var SelectedLocArributeId = ids.join();\n        if (this.SelectedLocArributeId != SelectedLocArributeId) {\n            this.SelectedLocArributeId = SelectedLocArributeId;\n            isFilterChanged = true;\n        }\n\n        this.SelectedSuppliers = this.FilterForm.get('SelectedSupplierList').value;\n        ids = [];\n        this.SelectedSuppliers.forEach(res => { ids.push(res.Id) });\n        var selectedSuppliersId = ids.join();\n        if (this.SelectedSuppliersId != selectedSuppliersId) {\n            this.SelectedSuppliersId = selectedSuppliersId;\n            isFilterChanged = true;\n        }\n\n        var isShowRetailJobs = !this.FilterForm.get('IsShowAssetJobs').value;\n        if (this.IsShowRetailJobs != isShowRetailJobs) {\n            this.IsShowRetailJobs = isShowRetailJobs;\n            isFilterChanged = true;\n            this.getSalesData();\n        }\n        this.SelectedPriorities = this.FilterForm.get('SelectedPriorityList').value;\n        ids = [];\n        this.SelectedPriorities.forEach(res => { ids.push(res.Id) });\n        var selectedPrioritiesId = ids.join();\n        if (this.SelectedPrioritiesId != selectedPrioritiesId) {\n            this.SelectedPrioritiesId = selectedPrioritiesId;\n            isFilterChanged = true;\n        }\n        return isFilterChanged;\n    }\n\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n\n    public getSalesData() {\n        let inputs = {\n            Priority: this.SelectedPrioritiesId,\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Location,\n            Carriers: this.SelectedCarrierIds,\n            IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n            IsShowRetailJobs: !this.FilterForm.get('IsShowAssetJobs').value,\n            Suppliers: this.SelectedSuppliersId,\n            InventoryCaptureTypeIds:this.SelectedLocArributeId\n        };\n        this.IsLoading = true;\n\n        forkJoin([this.dispatcherService.getBuyerSalesData(inputs),\n        this.dispatcherService.GetRaisedBuyerExceptions()])\n            .subscribe(async (resp) => {\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                if (this.SelectedStatus && this.SelectedStatus.length && resp[0]) {\n                    resp[0] = resp[0].filter(t => this.SelectedStatusId.includes(t.Status))\n                }\n                this.LocationSchedules = resp[0];\n                this.passJobIdsToMapData();\n                this.IsLoading = false;\n                this.datatableRerender();\n            });\n        // this.dispatcherService.getBuyerSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\n        //   this.LocationSchedules = resp;\n        //   this.IsLoading = false;\n        //   this.datatableRerender();\n        // });\n    }\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n        }\n        this.dtTrigger.next();\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetBuyerDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n        //this.MaxFillQuantity = 120;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n        this.validateMsg = \"\";\n        this.isValid = true;\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n    public onDrSubmit() {\n        this.validateMsg = \"\";\n        this.isValid = true;\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (!(this.RequiredQuantity > 0) || this.RequiredQuantity < 0.00001)) {\n            this.validateMsg = \"Invalid required quantity.\"; this.isValid = false;\n        }\n        else if (this.ScheduleQuantityType == 1 && this.SelectedTank.MaxFillQuantity && this.SelectedTank.MaxFillQuantity > 0 && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity) {\n            this.validateMsg = \"Should not exceed max fill. (\" + this.SelectedTank.MaxFillQuantity + \")\"; this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.isValid = true;\n            this.dispatcherService.PostBuyerRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                    this.closeModal();\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.closeModal();\n                this.DRLoader = false;\n            });\n        }\n    }\n\n    public showTanks(row) {\n        this.SelectedTankRegionId = row.RegionId;\n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = row.RegionId;\n        salesDataModel.SiteId = row.SiteId;\n        salesDataModel.TankId = row.TankId;\n        salesDataModel.StorageId = row.StorageId;\n        salesDataModel.TfxJobId = row.TfxJobId;\n        salesDataModel.LocationManagedType = row.LocationManagedType ? row.LocationManagedType: null;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n    public passJobIdsToMapData() {\n        var jobsPriority = [];\n        if (this.LocationSchedules) {        \n            this.LocationSchedules.forEach(res => {\n                if (!jobsPriority.find(t => t.TfxJobId == res.TfxJobId)) {\n                    jobsPriority.push({TfxJobId: res.TfxJobId,Priority: res.Priority})\n                }\n            }\n            );\n            this.getJobIdsForMap.emit(jobsPriority);\n        } else {\n            this.getJobIdsForMap.emit(jobsPriority);\n        }\n    }\n  \n    public applyLoadsFilters(filterForm:FormGroup){\n        this.FilterForm = filterForm;\n        if (this.IsLoadSalesData) {\n            let isFilterChanged = this.setFilterData();\n            if ((isFilterChanged || !this.isDataLoaded) && this.IsFiltersLoaded) {\n                this.getSalesData();\n            }\n        }\n    }\n}\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsMustGoLoading || IsShouldGoLoading || IsCouldGoLoading\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row mt60\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div>\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-salemustgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsMustGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of MustGoSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td> <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span>\r\n                                                                   <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"  *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                         <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining==\"--\" ? \"NA\" :row.DaysRemaining}}</td>\r\n                                        <!-- <td><a (click)=\"openModal(row)\">{{row.Status}}</a></td> -->\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                            <table id=\"table-saleshouldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsShouldGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of ShouldGoSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td>  <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining==\"--\" ? \"NA\" :row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                            <table id=\"table-salecouldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level </th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsCouldGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of CouldGoSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td>  <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining==\"--\" ? \"NA\" :row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n</ng-container>\r\n\r\n<ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n         [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n         aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt10 pb5 no-border\">\r\n                    <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{modalDetails.title}}\r\n                    </h3>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fa-lg\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h3 class=\"fs14 font-bold\">Create DR</h3>\r\n                                </div>\r\n                                <div class=\"row col-sm-12\">\r\n                                    <div class=\"col-sm-3 input-group\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity Type</label>\r\n                                            <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\" (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                    {{sqType.Name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" name=\"RequiredQuantity\"\r\n                                                       [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                       [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                       (change)=\"validateMsg=''\"\r\n                                                       class=\"form-control\" required />\r\n                                                <div class=\"invalid-feedback\"\r\n                                                     [ngClass]=\"{'show-element': !isValid}\">\r\n                                                    {{validateMsg}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 mt5\">\r\n                                        <label>Priority</label>\r\n                                        <div class=\"col-sm-12 pa0 mt5\">\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                <label class=\"form-check-label\" for=\"shouldgo-dr\">\r\n                                                    Should\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                <label class=\"form-check-label\" for=\"couldgo-dr\">\r\n                                                    Could\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 text-right mt10 \">\r\n                                    <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                            class=\"btn btn-primary btn-lg\">\r\n                                        Create\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div *ngIf=\"ExistingDeliveries.length\">\r\n                            <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                    type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                    aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                Existing Delivery Request(s)\r\n                                                <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                    <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                    <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                </span>\r\n                                            </button>\r\n                                        </h2>\r\n\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" class=\"collapse\"\r\n                                         [ngClass]=\"{'show':modalDetails.IsScheduled}\"\r\n                                         aria-labelledby=\"headingOne\" data-parent=\"#accordionExitingDrReq\">\r\n                                        <div class=\"card-body pa5\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover margin bottom details-table\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Schedule Date</th>\r\n                                                            <th>Schedule Time</th>\r\n                                                            <th>Driver</th>\r\n                                                            <th>Carrier</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                            <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}</td>\r\n                                                            <td>{{del.ScheduleDate}}</td>\r\n                                                            <td>{{del.ScheduleTime}}</td>\r\n                                                            <td>{{del.Driver}}</td>\r\n                                                            <td>{{del.Carrier}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, SimpleChanges, OnDestroy, OnChanges, ViewChild } from '@angular/core';\nimport { Subject, forkJoin, Subscription, merge } from 'rxjs';\nimport { DeliveryDetailsModel, SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { SalesFilterModal } from '../Models/BuyerWallyBoard';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-priority-view',\n    templateUrl: './priority-view.component.html',\n    styleUrls: ['./priority-view.component.css']\n})\nexport class PriorityViewComponent implements OnInit, OnDestroy {\n    public MustGoSchedules: any = [];\n    public ShouldGoSchedules: any = [];\n    public CouldGoSchedules: any = [];\n    public dtMustGoOptions: any = {};\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoTrigger: Subject<any> = new Subject();\n    public dtCouldGoTrigger: Subject<any> = new Subject();\n    public IsShouldGoLoading: boolean;\n    public IsCouldGoLoading: boolean;\n    public IsMustGoLoading: boolean;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTank: SalesDataModel;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public ScheduleQuantityTypes: any = [];\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n\n\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    public SelectedTankRegionId: string = '';\n\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[]= [];\n\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) {\n    }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    init() {\n\n        this.applyFilterSubscription.push(merge(\n            this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n                if(this.salesTabFilterForm.get('SalesViewType').value == 1){\n                    this.getSalesData();\n                }\n         }));\n        //to load data - after second ngOnInit\n        if (this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').value) {\n            this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(false);\n            this.getSalesData();\n        }\n\n        this.initializeMustGo();\n        this.initializeCouldGo();\n        this.initializeShouldGo();\n        this.getScheduleQuantityType();\n    }\n\n    ngOnDestroy(): void {\n        this.dtCouldGoTrigger.unsubscribe();\n        this.dtShouldGoTrigger.unsubscribe();\n        this.dtMustGoTrigger.unsubscribe();\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n\n    columnsDetails = [\n        { data: 'Cust', \"autoWidth\": true },\n        { data: 'LocName', \"autoWidth\": true },\n        { data: 'Loc', \"autoWidth\": true },\n        { data: 'TName', \"autoWidth\": true },\n        { data: 'Avg7Day', \"autoWidth\": true },\n        { data: 'PDS', \"autoWidth\": true },\n        { data: 'CI', \"autoWidth\": true },\n        { data: 'Ullg', \"autoWidth\": true },\n        { data: 'lastDelivery', \"autoWidth\": true },\n        { data: 'lastDeliveryQty', \"autoWidth\": true },\n        { data: 'DRemg', \"autoWidth\": true }\n    ];\n\n    initializeMustGo() {\n\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtMustGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-MustGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-MustGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n\n        };\n    }\n\n    initializeCouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtCouldGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-CouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-CouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n    initializeShouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtShouldGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-ShouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-ShouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            fixedHeader: false,\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            order: [13]\n        };\n\n    }\n    getScheduleQuantityType() {\n        this.dispatcherService.GetBuyerScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n    getSalesDtls() {\n        let inputs = {\n            Priority: DeliveryReqPriority.None,\n            LocationId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedlocationList').value),\n            SelectedTab: SelectedTabEnum.Priority,\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            InventoryCaptureTypeIds: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n        };\n        this.IsShouldGoLoading = true;\n        this.IsCouldGoLoading = true;\n        this.IsMustGoLoading = true;\n        forkJoin([this.dispatcherService.getBuyerSalesData(inputs),\n        this.dispatcherService.GetRaisedBuyerExceptions()])\n            .subscribe(async (resp) => {\n\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                this.ShouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.ShouldGo) as SalesDataModel[];\n                this.CouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.CouldGo) as SalesDataModel[];\n                this.MustGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.MustGo) as SalesDataModel[];\n                this.destroyDatatable();\n                this.IsShouldGoLoading = false;\n                this.IsCouldGoLoading = false;\n                this.IsMustGoLoading = false;\n                this.dtCouldGoTrigger.next();\n                this.dtShouldGoTrigger.next();\n                this.dtMustGoTrigger.next();\n\n            });\n    }\n\n\n    filterData(): void {\n        this.getSalesData();\n    }\n\n    getSalesData(): void {\n        this.IsCouldGoLoading = true;\n        this.IsShouldGoLoading = true;\n        this.IsMustGoLoading = true;\n        this.getSalesDtls();\n    }\n\n    destroyDatatable(): void {\n        if (this.dtElements) {\n            this.dtElements.forEach((dtElement: DataTableDirective) => {\n                if (dtElement.dtInstance) {\n                    dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                        dtInstance.destroy();\n\n                    });\n                }\n            });\n        }\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetBuyerDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n    public onDrSubmit() {\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (this.RequiredQuantity == null || this.RequiredQuantity == 0)) {\n            Declarations.msgerror(\"Invalid required quantity.\", undefined, undefined);\n            this.isValid = false;\n        }\n        else if ((this.SelectedTank.MaxFillQuantity != null && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity)) {\n            Declarations.msgerror(\"Quantity Should be less than max fill quantity: \" + this.SelectedTank.MaxFillQuantity, undefined, undefined);\n            this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.isValid = true;\n            this.dispatcherService.PostBuyerRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.DRLoader = false;\n                this.closeModal();\n                $(\".modal-backdrop\").removeClass(\"show\");\n                $(\".modal-backdrop\").addClass(\"hide\");\n\n            });\n        }\n    }\n\n    public showTanks(row) {\n        this.SelectedTankRegionId = row.RegionId;\n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = row.RegionId;\n        salesDataModel.SiteId = row.SiteId;\n        salesDataModel.TankId = row.TankId;\n        salesDataModel.StorageId = row.StorageId;\n        salesDataModel.TfxJobId = row.TfxJobId;\n        salesDataModel.LocationManagedType = row.LocationManagedType ? row.LocationManagedType: null;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-tank-view-master',\n  templateUrl: './tank-view-master.component.html',\n  styleUrls: ['./tank-view-master.component.css']\n})\nexport class TankViewMasterComponent implements OnInit {\n\n    @Input() salesTabFilterForm: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n}\n","<div class=\"col-sm-12\" [formGroup]=\"salesTabFilterForm\">\r\n    <div class=\"row mt60\">\r\n        <div class=\"col-sm-12 text-center\">\r\n            <div class=\"custom-control custom-switch mb10\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"chk-consumptionrate\" name=\"chkRateOfConsumption\"\r\n                    formControlName=\"RateOfConsumption\" />\r\n                <label class=\"custom-control-label\" for=\"chk-consumptionrate\">Rate Of Consumption</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div>\r\n    <app-buyertank-view *ngIf=\"!salesTabFilterForm.get('RateOfConsumption').value\" [salesTabFilterForm]=\"salesTabFilterForm\">Loading...\r\n    </app-buyertank-view>\r\n\r\n    <app-forecasting-tank-view *ngIf=\"salesTabFilterForm.get('RateOfConsumption').value\" [salesTabFilterForm]=\"salesTabFilterForm\" [RequestFromBuyerWallyBoard]=\"true\">Loading...\r\n    </app-forecasting-tank-view>\r\n</div>","import { Component, OnInit, SimpleChanges, Input, ViewChildren, QueryList, ViewChild, OnChanges, OnDestroy } from '@angular/core';\nimport { Subject, forkJoin, merge, Subscription } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { ForecastingLocationFilter } from 'src/app/dispatcher/dispatcher.model';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-buyertank-view',\n    templateUrl: './tank-view.component.html',\n    styleUrls: ['./tank-view.component.css']\n})\nexport class TankViewComponent implements OnInit, OnDestroy {\n\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[]= [];\n    public LocationSchedules: any = [];\n    CloneLocationSchedules = [];\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\n    public FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\n    IsLoading = false;\n    IsLocDrpDwnLoading = false;\n\n    public dtTrigger: Subject<any> = new Subject();\n    public dtOptions: any = {};\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    public SelectedRegionId: string;\n    public SelectedCustomerId: string;\n    SelectedLocationId: string;\n    SelectedTankId: string;\n    SelectedSiteId: string;\n\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    filterArgs = { key: \"DaysRemaining\", asc: true };\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) {\n    }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n        //  this.initLocationDropDown();\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n            this.initLocationDropDown();\n        }));\n        //to load data - after in ngOnInit\n        if(this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').value){\n            this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(false);\n            this.initLocationDropDown();\n        }\n    }\n\n    ngOnDestroy(){\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n\n    setSortArgs(key: string) {\n        if (this.filterArgs.key == key) {\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\n        }\n        else {\n            this.filterArgs = { asc: true, key: key }\n        }\n    }\n\n    initLocationDropDown() {\n        this.IsLocDrpDwnLoading = true;\n        this.LocationDrpDwnList = [];\n\n        let filter: ForecastingLocationFilter = {\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            CustomerIds: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n        };\n\n        forkJoin([this.dispatcherService.getBuyerLocationTanks(filter), this.dispatcherService.GetRaisedBuyerExceptions()])\n            .subscribe(result => {\n                this.IsLocDrpDwnLoading = false;\n                this.LocationDrpDwnList = result[0];\n                this.Partsfiltering();\n                this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\n                if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\n                    this.LocationDrpDwnList.forEach(loc => {\n                        loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\n                            if (result[1] && result[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\n                                m.IsUnknowDeliveryOrMissDelivery = true;\n                            else\n                                m.IsUnknowDeliveryOrMissDelivery = false;\n                        });\n                    });\n                }\n                else {\n                    this.SelectedTankId = null;\n                    this.LocationSchedules = [];\n                    this.CloneLocationSchedules = [];\n                    this.SelectedLocationId = '0';\n                }\n            });\n    }\n\n    locationChange($event) {\n        this.SelectedTankId = null;\n        this.SelectedLocationId = $event.JobId;\n        this.SelectedSiteId = $event.SiteId;\n        this.LocationSchedules = [];\n        this.CloneLocationSchedules = [];\n        this.getSalesData();\n    }\n\n    tankChange($event) {\n        if (this.CloneLocationSchedules && this.CloneLocationSchedules.length > 0) {\n            this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\n            this.LocationSchedules = this.CloneLocationSchedules.filter(f => f.TankId == $event.TankId && f.StorageId == $event.StorageId);\n        }\n        else\n            this.LocationSchedules = [];\n    }\n\n    public getSalesData() {\n        let inputs = {\n            Priority: DeliveryReqPriority.None,\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Tanks,\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            InventoryCaptureTypeIds: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n        };\n        this.IsLoading = true;\n        this.dispatcherService.getBuyerSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\n            this.LocationSchedules = resp;\n            this.CloneLocationSchedules = resp;\n            this.IsLoading = false;\n            this.LocationSchedules && this.LocationSchedules.map(m => {\n                try {\n                    this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            })\n            this.datatableRerender();\n        });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                dtInstance.destroy();\n                this.dtTrigger.next();\n            });\n        }\n    }\n\n    Partsfiltering(inputName?) {\n        this.FilterLocationDrpDwnList = [];\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\n            let searchWord = inputName.target.value.toUpperCase();\n            this.LocationDrpDwnList.forEach(element => {\n                if (element.LocationName.toUpperCase().indexOf(searchWord) !== -1) {\n                    this.FilterLocationDrpDwnList.push(element);\n                }\n            });\n        } else {\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;\n        }\n    }\n\n\n    public showTanks(location: any) {\n\n        if (location && location.RegionId) {\n            this.SelectedRegionId = location.RegionId;\n\n            let salesDataModel = new SalesDataModel();\n            salesDataModel.RegionId = location.RegionId;\n            salesDataModel.SiteId = location.SiteId;\n            salesDataModel.TankId = location.TankId;\n            salesDataModel.StorageId = location.StorageId;\n            salesDataModel.TfxJobId = parseInt(location.JobId);\n            salesDataModel.LocationManagedType = location.LocationManagedType ? location.LocationManagedType: null;\n            this.dipTestComponent.loadTankDR(salesDataModel);\n        }\n        else {\n            Declarations.msgerror(\"Location not assigned to region. Contact your supplier\", undefined, undefined);\n            this.closeSidePanel();\n        }\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n\n\nexport class LocationTankDetailsModel {\n    JobId?: number;\n    SiteId?: string;\n    Tanks?: TankDetailModel[];\n    LocationName: string;\n    DaysRemaining: number\n    Status: string\n}\n\nexport class TankDetailModel {\n    TankId?: string;\n    StorageId?: string;\n    Name?: string;\n    IsUnknowDeliveryOrMissDelivery?: boolean;\n    TankInventoryDiffinHrs?: number;\n    Status: string;\n    DaysRemaining: number;\n    CustomerInfo?: string;\n}\n\n\n\n\n","<div class=\"row\">\n    <div class=\"col-sm-4\">\n        <div class=\"well bg-white shadow-b location-panel\">\n            <div id=\"accordion-location\" class=\"location-accordion\">\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\n                src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\n                alt=\"animated-truck-image-0009\" />-->\n                <div class=\"position-abs text-center\" [ngClass]=\"{'hide-element': !IsLocDrpDwnLoading }\">\n                    <span class='spinner-small ml10 mt5'></span>\n                </div>\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"mb10\">\n                    <div class=\"inner-addon left-addon\">\n                        <i class=\"glyphicon glyphicon-search\"></i>\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\"\n                            (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">No\n                    Location Available</div>\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\n\n                    <table class=\"table tank-view\">\n                        <thead>\n                            <tr>\n                                <th width=\"45%\">Location</th>\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                                </th>\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\n                                <th>\n                                    Status\n                                </th>\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\n                                </th> -->\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index\">\n                                <tr >\n                                    <td>\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.JobId\">\n                                            <h2 class=\"mb-0\">\n                                                <div ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\n                                                    class=\"position-relative pr-3 btn btn-link collapsed text-left position-relative pr-3\"\n                                                    data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.JobId\"\n                                                    aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.JobId\"\n                                                    (click)=\"locationChange(loc)\">\n                                                    <ng-container>\n                                                        {{loc?.LocationName}}\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\n                                                    </ng-container>\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\n                                                    </span>\n                                                </div>\n                                            </h2>\n                                        </div>\n                                       \n                                    </td>\n    \n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\n                                    <td>\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\n                                            <span class=\"\">{{loc.Status}}</span>\n                                        </a>\n                                    </td>\n                                </tr>\n                                <tr [attr.id]=\"'col'+loc?.JobId\" class=\"collapse\"\n                                data-parent=\"#accordion-location\"\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.JobId\">\n                                <td colspan=\"3\">\n                                    <div class=\"card-body\">\n                                        <ul class=\"list-group list-group-flush\">\n\n                                            <table class=\"table tank-view-child\">\n                                                <tbody>\n                                                    <tr *ngFor=\"let tank of loc?.Tanks\">\n                                                        <td width=\"49%\">\n\n                                                            <a href=\"javascript:void(0)\"\n                                                                (click)=\"tankChange(tank)\"\n                                                                [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\n                                                                {{tank.Name}}\n                                                                <span\n                                                                    *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\n                                                                    class=\"active-dot\"></span>\n\n                                                                <span title=\"Tank Inventory Alert\"\n                                                                    class=\"activediff-dot\"\n                                                                    *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\n                                                            </a>\n                                                        </td>\n                                                        <td width=\"24%\">\n                                                            {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\n                                                        </td>\n                                                        <td>\n                                                            <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\n                                                                <span class=\"\">{{tank.Status}}</span>\n                                                            </a>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </ul>\n                                    </div>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"col-sm-8 location-chart-panel\">\n        <div class=\"well bg-white shadow-b\">\n            <app-tank-chart [JobId]=\"SelectedLocationId\" [SiteId]=\"SelectedSiteId\" [TankId]=\"SelectedTankId\"\n                [isSupplierView]=\"false\"></app-tank-chart>\n        </div>\n        <div class=\"well bg-white shadow-b pr\">\n            <div class=\"ibox mb0\">\n                <div class=\"ibox-content no-padding no-border\">\n                    <div class=\"table-responsive\">\n                        <!--Enum - GridName.DispatherMustGoGrid => 19-->\n                        <table id=\"table-Location\" class=\"table table-bordered table-hover\" datatable\n                            [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\n                            <thead>\n                                <tr>\n                                    <!-- <th data-key=\"Cust\">Customer</th> -->\n                                    <th data-key=\"LocName\">Location Name</th>\n                                    <th data-key=\"Loc\">Location</th>\n                                    <th data-key=\"TName\">Tank Name</th>\n                                    <th data-key=\"WL\">Water Level</th>\n                                    <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\n                                    <th data-key=\"PDS\">Previous Day Sale</th>\n                                    <th data-key=\"SaleWeek\">Week Ago Sale</th>\n                                    <th data-key=\"CI\">Last Inventory Reading</th>\n                                    <th data-key=\"LastReadingTime\">Last Reading Time</th>\n                                    <th data-key=\"Ullg\">Ullage</th>\n                                    <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\n                                    <th data-key=\"lastDelivery\">Last Delivered On</th>\n                                    <th data-key=\"DRemg\">Days Remaining</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\n                                    <span class='spinner-dashboard pa'></span>\n                                </tr>\n                                <tr *ngFor=\"let row of LocationSchedules\">\n                                    <!-- <td>{{row.CompanyName}}</td> -->\n                                    <td>{{row.LocationName}}</td><!-- <td>{{row.SiteId}}</td> -->\n                                    <td>{{row.Location}}</td>\n                                    <td>{{row.TankName}}</td>\n                                    <td>{{row.WaterLevel}}</td>\n                                    <td>{{row.AvgSale}}</td>\n                                    <td>\n                                        <div *ngIf=\"row.PrevSale == 'NA*'\">\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\n                                        </div>\n                                        <div *ngIf=\"row.PrevSale != 'NA*'\">\n                                            {{row.PrevSale}}\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\n                                        </div>\n                                        <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\n                                            {{row.WeekAgoSale}}\n                                        </div>\n                                    </td>\n                                    <td>{{row.Inventory}}</td>\n                                    <td>{{row.LastReadingTime}}</td>\n                                    <td>{{row.Ullage}}</td>\n                                    <td>{{row.LastDeliveredQuantity}}</td>\n                                    <td>{{row.LastDeliveryDate}}</td>\n                                    <td>{{(row.DaysRemaining == null)? \"N\\A\": row.DaysRemaining + \" Days\"}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"create-dip-test\">\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" \n        [SelectedRegionId]=\"SelectedRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { LoadFilterModel, SalesFilterModal, SalesTankFilterModal, TfxModule } from './Models/BuyerWallyBoard';\nimport { BuyerwallyboardService } from './services/buyerwallyboard.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from '../carrier/service/wally-utility.service';\nimport { InventoryDataCaptureList, LoadPriorities } from '../app.constants';\nimport { SalesTabViewType } from '../app.enum';\n\n@Component({\n    selector: 'app-sales',\n    templateUrl: './sales.component.html',\n    styleUrls: ['./sales.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SalesComponent implements OnInit {\n    public filterCount: number = 0;\n\n    public CarrierDdlSettings: any = {};\n    public LocationDdlSettings: any = {};\n    public toogleFilter: Boolean = false;\n    public Locations: LoadFilterModel[] = [];\n    public Carriers: any = [];\n\n    public LoadPriorities: any = LoadPriorities;\n    public LocationAttributeList = InventoryDataCaptureList;\n    public salesTabFilterForm: FormGroup;\n    \n    constructor(private dispatcherService: BuyerwallyboardService, private wallyUtilService: WallyUtilService) {\n        this.salesTabFilterForm = this.wallyUtilService.getSalesTabFilterForm();\n    }\n\n    ngOnInit() {\n        this.CarrierDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.LocationDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n        this.GetFilters();\n    }\n\n    getCarrierLocations() {\n        this.dispatcherService.GetFilterData(this.salesTabFilterForm.get('IsShowCarrierManaged').value).subscribe(data => {\n            this.Locations = data;\n            this.Carriers = this.GetUniqueItems(data.map(t => t.Carriers).reduce((p, n) => p.concat(n), []));\n        });\n    }\n\n    public toggleFilterView() {\n        this.toogleFilter = !this.toogleFilter;\n    }\n\n    locationChanged(event?: any): void {\n        this.salesTabFilterForm.get('SelectedCarriers').setValue([])\n        this.setJobSuppliers();\n    }\n\n    setJobSuppliers(): void {\n        this.Carriers = [];\n        let SelectedLocations = this.salesTabFilterForm.get('SelectedlocationList').value as any[];\n        this.Locations.map(m => {\n            if (SelectedLocations.find(f => f.Id == m.Id) || SelectedLocations.length == 0) {\n                if (m && m.Carriers && m.Carriers.length > 0) {\n                    this.Carriers = this.Carriers.concat(m.Carriers);\n                }\n            }\n        })\n        this.Carriers = this.GetUniqueItems(this.Carriers.reduce((p, n) => p.concat(n), []));\n    }\n\n    GetUniqueItems(items: any[]) {\n        const ids = [];\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\n    }\n    public ShowCarrierMangedData() {\n        this.salesTabFilterForm.get('SelectedCarriers').setValue([]);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue([]);\n        \n        this.getCarrierLocations();\n        this.ApplyFilters();\n        this.SaveFilters(true);\n    }\n\n    public GetFilters() {\n        this.dispatcherService.getFilters(TfxModule.BuyerWallyboardSales).subscribe(res => {\n            if (res && res.length > 0) {\n                this.SetFilters(res);\n            }\n            else {\n                this.getCarrierLocations();\n                this.ApplyFilters();\n            }\n        });\n    }\n\n    public SaveFilters(isTopFilter: boolean) {\n        \n        this.dispatcherService.getFilters(TfxModule.BuyerWallyboardSales).subscribe(res => {\n            if (res) {\n                \n                let filterData = {};\n\n                var input = JSON.parse(res);\n                if (isTopFilter) {\n                    filterData['isShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    filterData['SelectedCarriers'] = this.salesTabFilterForm.get('SelectedCarriers').value;\n                    if (input.SelectedLocations && input.SelectedLocations.length > 0) {\n                        filterData['SelectedLocations'] = input.SelectedLocations || [];\n                    }\n                    if (input.selectedLocAttributeList && input.selectedLocAttributeList.length > 0) {\n                        filterData['selectedLocAttributeList'] = input.selectedLocAttributeList || [];\n                    }\n                } else {\n\n                    filterData['SelectedLocations'] = this.salesTabFilterForm.get('SelectedlocationList').value as any[] || [];\n                    filterData['selectedLocAttributeList'] = this.salesTabFilterForm.get('SelectedLocAttributeList').value as any[] || [];\n                    filterData['IsShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    if (input.SelectedCarriers && input.SelectedCarriers.length > 0) {\n                        filterData['SelectedCarriers'] = input.SelectedCarriers || [];\n                    }\n                }\n                this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardSales, JSON.stringify(filterData)).subscribe();\n            }\n        });\n    }\n\n    public SetFilters(input: any) {\n        let filter = JSON.parse(input);\n        this.salesTabFilterForm.get('IsShowCarrierManaged').setValue(filter.isShowCarrierManaged);\n        this.salesTabFilterForm.get('SelectedCarriers').setValue(filter.SelectedCarriers);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue(filter.SelectedLocations);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue(filter.selectedLocAttributeList);\n        \n        this.getCarrierLocations();\n        this.ApplyFilters();\n    }\n\n    public ResetFilters() {\n        this.salesTabFilterForm.get('SelectedlocationList').setValue([]);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue([]);\n        this.ApplyFilters('reset');\n    }\n\n    public ApplyFilters(msg?: string) {\n\n        this.salesTabFilterForm.get('IsApplyFilter').setValue(true);\n        \n        if (msg == \"set\") {\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\n        } else if (msg == \"reset\") {\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\n        }\n\n        this.setFilterCount();\n    }\n\n    setFilterCount(){\n\n        this.filterCount = 0;\n\n        let SelectedLocations = this.salesTabFilterForm.get('SelectedlocationList').value as any[];\n        let selectedLocAttributeList = this.salesTabFilterForm.get('SelectedLocAttributeList').value as any[];\n\n        if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.PriorityTab) {\n            this.filterCount += SelectedLocations.length;\n            this.filterCount += selectedLocAttributeList.length;\n        }\n        else if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.TanksTab) {\n            this.filterCount += selectedLocAttributeList.length;\n        }\n    }\n\n    triggerFilter($event: any){\n        if($event)\n            this.GetFilters();\n    }\n\n    salesViewTypeChanged(type: SalesTabViewType){\n        this.salesTabFilterForm.get('SalesViewType').setValue(type);\n        this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(true);\n        this.setFilterCount();\n    }\n}\n","<div class=\"col-sm-9 sticky-header-sales\">\r\n    <div class=\"row\">\r\n        <div class=\"col-2\">\r\n            <div class=\"dib border pa5 radius-capsule shadow-b pull-left mb10\">\r\n                <div class=\"btn-group btn-filter\">\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"1\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==1\" />\r\n                    <label class=\"btn ml0\" (click)=\"salesViewTypeChanged(1);\">Priority</label>\r\n\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"2\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==2\" />\r\n                    <label class=\"btn\" (click)=\"salesViewTypeChanged(2);\">Tanks</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\" [formGroup]=\"salesTabFilterForm\">\r\n            <div class=\"form-check form-check-inline fs14 mt10\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" name=\"IsShowCarrierManaged\"\r\n                formControlName=\"IsShowCarrierManaged\" (change)=\"ShowCarrierMangedData()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"mtm5\" *ngIf=\"salesTabFilterForm.get('IsShowCarrierManaged').value\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\" [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 p-0\">\r\n                        <ng-multiselect-dropdown formControlName=\"SelectedCarriers\"\r\n                                                 [settings]=\"CarrierDdlSettings\" [placeholder]=\"'Select Carrier'\"\r\n                                                 [data]=\"Carriers\" (onSelect)=\"SaveFilters(true)\" (onDeSelect)=\"SaveFilters(true)\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div class=\"col-sm-3 pr-5 pt5\" *ngIf=\"salesViewType!=2\">\r\n              <ng-multiselect-dropdown [(ngModel)]=\"SelectedLocations\" [settings]=\"LocationDdlSettings\"\r\n                         [placeholder]=\"'Select Location'\" [data]=\"Locations\" (onSelect)=\"onLocationSelect($event)\"\r\n                         (onDeSelect)=\"onLocationUnselect($event)\" (onSelectAll)=\"onAllLocationSelect($event)\"\r\n                         (onDeSelectAll)=\"onAllLocationDeSelect($event)\">\r\n             </ng-multiselect-dropdown>\r\n         </div>\r\n         <div class=\"col-sm-4 pr-5 pt5\">\r\n             <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\"\r\n                                     [settings]=\"LocationDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                     [data]=\"LocationAttributeList\">\r\n                                 </ng-multiselect-dropdown>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-4 pl0 text-right pt8\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i>Filters</a>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" [formGroup]=\"salesTabFilterForm\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\" *ngIf=\"salesTabFilterForm.get('SalesViewType').value!=2\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedlocationList\" [settings]=\"LocationDdlSettings\"\r\n                                             [placeholder]=\"'Select Location'\" [data]=\"Locations\" (onSelect)=\"locationChanged()\"\r\n                                             (onDeSelect)=\"locationChanged()\" (onSelectAll)=\"locationChanged()\"\r\n                                             (onDeSelectAll)=\"locationChanged()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"\" [ngClass]=\"salesTabFilterForm.get('SalesViewType').value!=2 ? 'col-6' : 'col-8'\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedLocAttributeList\"\r\n                                             [settings]=\"LocationDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                             [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"ResetFilters();SaveFilters(false);\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set');SaveFilters(false); p.close();\" class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<div class=\"row\"> \r\n    <div class=\"col-sm-12\">\r\n        <app-priority-view *ngIf=\"salesTabFilterForm.get('SalesViewType').value==1\" [salesTabFilterForm]=\"salesTabFilterForm\">Loading...\r\n        </app-priority-view>\r\n\r\n        <app-tank-view-master *ngIf=\"salesTabFilterForm.get('SalesViewType').value==2\" [salesTabFilterForm]=\"salesTabFilterForm\" \r\n                               (TriggerFilter)=\"triggerFilter($event)\" >Loading...</app-tank-view-master>\r\n    </div>\r\n</div>","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <a class=\"btn btn-link\" (click)=\"toggleGrids()\"><i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleGrids').value == true ? 'Show Grids' : 'Hide Grids'}}  </a>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\" [ngClass]=\"{'hide-element': FilterForm.get('ToggleGrids').value}\" style=\"margin-top:15px\">\r\n        <div class=\"sticky-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 text-right priority-tabs\">\r\n                    <ul class=\"nav nav-pills float-right\">\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\r\n                            <a class=\"nav-link mustgo active\"  [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\"  >Must Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\r\n                            <a class=\"nav-link shouldgo\"  [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\" >Should Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\r\n                            <a class=\"nav-link couldgo\"  [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\"  >Could Go</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n      \r\n        </div>\r\n        <div [ngClass]=\"{'hide-element': !showMustGo}\">\r\n        <div \r\n              [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.ShouldGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"table-mustgo\" data-gridname=\"19\" class=\"table table-bordered table-hover serverside-table\" datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>  \r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass]=\"{'hide-element': !showShouldGo}\">\r\n        <div  \r\n            [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"table-shouldgo\" data-gridname=\"20\" class=\"table table-bordered table-hover serverside-table\" datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>                                \r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass]=\"{'hide-element': !showCouldGo}\">\r\n\r\n    \r\n        <div \r\n             [ngClass]=\"{'hide-element':(activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.ShouldGo )}\">\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"table-couldgo\" data-gridname=\"21\" class=\"table table-bordered table-hover serverside-table\" datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChildren, QueryList, OnDestroy, ViewChild, TemplateRef, SimpleChanges, OnChanges, Input } from '@angular/core';\r\nimport { Subject, from, Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DataTablesResponse } from '../../shared/models/DataTable-models';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { LoadFilterModel, TfxModule } from '../Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from '../services/buyerwallyboard.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DeliveryReqPriority, SelectedMapLabelEnum } from 'src/app/app.enum';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\ndeclare function IsUserActive(): boolean;\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver-grid-view',\r\n    templateUrl: './grid-view.component.html',\r\n    styleUrls: ['./grid-view.component.css']\r\n})\r\nexport class WhereIsMyDriverGridViewComponent implements OnInit {\r\n\r\n    @Input() singleMulti: number;\r\n    @Input() FilterForm: FormGroup;\r\n    public SelectedMapLabelEnum = SelectedMapLabelEnum;\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 4;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n    private searchLoadInterval: any;\r\n    private autoRefreshInterval: any;\r\n    private autoRefreshTimerInterval: any;\r\n    private setCountryCenterInterval: any;\r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Locations: LoadFilterModel[] = [];\r\n    public States: any = [];\r\n    public Suppliers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public SelectedLocationId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    public activePriorityTab = 1;\r\n    public DeliveryReqPriority = DeliveryReqPriority;\r\n    changeFilterValueIntervalForMultiWindow: any;\r\n    showMustGo=false;\r\n    showShouldGo=false;\r\n    showCouldGo=false;\r\n\r\n    constructor(private dispatcherService: BuyerwallyboardService, private chatService: chatService, private carrierService: CarrierService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.subscribeFormChanges();\r\n        let exportColumns = { columns: ':visible' };\r\n        let mustGocolumnsDetails = [];\r\n        let shouldGocolumnsDetails = [];\r\n        let couldGocolumnsDetails = [];\r\n\r\n        mustGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\r\n        { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\r\n        { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\r\n        { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\r\n        { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\r\n        { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\r\n        { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\r\n        { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\r\n        { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\r\n        { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }];\r\n\r\n        this.dtMustGoOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            fixedHeader: {\r\n                header: true,\r\n                headerOffset: 200,\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {                \r\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n                let inputs = {\r\n                    LocationIds: this.getLocationIds(),\r\n                    States: _states,\r\n                    Priority: DeliveryReqPriority.MustGo,\r\n                    FromDate: this.FilterForm.get('FromDate').value,\r\n                    ToDate: this.FilterForm.get('ToDate').value,\r\n                    DriverSearch: this.SearchedKeyword,\r\n                    SupplierCompanyIds: this.getSupplierIds(),\r\n                    CarrierCompanyIds: this.getCarrierIds(),\r\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n                    InventoryCaptureType:this.getselectedLocAttributeIds()\r\n                };\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsMustGoLoading = true;\r\n                this.dispatcherService.getBuyerLoadsForGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.MustGoSchedules = resp.data;\r\n                    this.IsMustGoLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                });\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[8, 'desc']],\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Must Go', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Must Go', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: mustGocolumnsDetails\r\n        };\r\n\r\n\r\n        shouldGocolumnsDetails = [\r\n            { title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\r\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\r\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\r\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\r\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\r\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\r\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\r\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\r\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\r\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }];\r\n\r\n        this.dtShouldGoOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            fixedHeader: {\r\n                header: true,\r\n                headerOffset: 200,\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n                let inputs = {\r\n                    LocationIds: this.getLocationIds(),\r\n                    States: _states,\r\n                    Priority: DeliveryReqPriority.ShouldGo,\r\n                    FromDate: this.FilterForm.get('FromDate').value,\r\n                    ToDate: this.FilterForm.get('ToDate').value,\r\n                    DriverSearch: this.SearchedKeyword,\r\n                    SupplierCompanyIds: this.getSupplierIds(),\r\n                    CarrierCompanyIds: this.getCarrierIds(),\r\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n                    InventoryCaptureType:this.getselectedLocAttributeIds()\r\n                };\r\n\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsShouldGoLoading = true;\r\n                this.dispatcherService.getBuyerLoadsForGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.ShouldGoSchedules = resp.data;\r\n                    this.IsShouldGoLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                });\r\n\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[8, 'desc']],\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns},\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Should Go', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Should Go', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: shouldGocolumnsDetails\r\n        };\r\n\r\n\r\n        couldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\r\n        { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\r\n        { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\r\n        { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\r\n        { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\r\n        { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\r\n        { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\r\n        { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\r\n        { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\r\n        { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }];\r\n\r\n        this.dtCouldGoOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            fixedHeader: {\r\n                header: true,\r\n                headerOffset: 200,\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n                let inputs = {\r\n                    LocationIds: this.getLocationIds(),\r\n                    States: _states,\r\n                    Priority: DeliveryReqPriority.CouldGo,\r\n                    FromDate: this.FilterForm.get('FromDate').value,\r\n                    ToDate: this.FilterForm.get('ToDate').value,\r\n                    DriverSearch: this.SearchedKeyword,\r\n                    SupplierCompanyIds: this.getSupplierIds(),\r\n                    CarrierCompanyIds: this.getCarrierIds(),\r\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n                    InventoryCaptureType:this.getselectedLocAttributeIds()\r\n                };\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsCouldGoLoading = true;\r\n                this.dispatcherService.getBuyerLoadsForGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.CouldGoSchedules = resp.data;\r\n                    this.IsCouldGoLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                });\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[8, 'desc']],\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns},\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Could Go', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Could Go', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: couldGocolumnsDetails\r\n        };\r\n        this.selectedDriverLoadsdtOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            searching: true,\r\n            destroy: true,\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Selected Driver Loads', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Selected Driver Loads', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n        };\r\n\r\n        // this.changeFilterValueIntervalForMultiWindow = setInterval(() => {\r\n             //this.checkFilterValueChange();\r\n        // }, 10000);\r\n\r\n    }\r\n\r\n    getLocationIds() {\r\n        let locations = [];\r\n        let selectedLocationIds = '';\r\n        this.FilterForm.get('SelectedLocations').value.forEach(res => { locations.push(res.Id) });\r\n        selectedLocationIds = locations.join();\r\n        return selectedLocationIds == null ? '' : selectedLocationIds;\r\n    }\r\n\r\n    private getSupplierIds() {\r\n        let selectedSupplierIds = '';\r\n        let selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value || [];\r\n        selectedSuppliers.map(m => {\r\n            if (selectedSupplierIds == '')\r\n                selectedSupplierIds = m.Id;\r\n            else\r\n                selectedSupplierIds += ',' + m.Id;\r\n        });\r\n        return selectedSupplierIds;\r\n    }\r\n\r\n    private getCarrierIds() {\r\n        let selectedCarrierIds = '';\r\n        let selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\r\n        selectedCarriers.map(m => {\r\n            if (selectedCarrierIds == '')\r\n                selectedCarrierIds = m.Id;\r\n            else\r\n                selectedCarrierIds += ',' + m.Id;\r\n        });\r\n        return selectedCarrierIds;\r\n    }\r\nprivate getselectedLocAttributeIds(){\r\n    let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\r\n    let _locAttributeIds = _locAttribute.join();\r\n    return _locAttributeIds;\r\n}\r\n\r\n    public changeActiveTab(priority) {\r\n        this.activePriorityTab = priority;\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        // this.subscriptions.add(this.FilterForm.valueChanges\r\n        //     .subscribe(change => {\r\n        //         if (change.FromDate && change.ToDate) {\r\n        //             this.filterDriverData();\r\n        //         }\r\n        //     }));\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges.subscribe(change => {\r\n            this.loadingData = true;    \r\n            this.filterDriverData();\r\n        }));\r\n        this.subscriptions.add(this.FilterForm.get('SelectedCarriers').valueChanges.subscribe(change => {\r\n            this.loadingData = true;       \r\n            this.filterDriverData();\r\n        }));\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            //alert(change.singleMulti.currentValue)\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getBuyerLoads();\r\n        this.autoRefreshLoads();\r\n        this.dtCouldGoTrigger.next();\r\n        this.dtShouldGoTrigger.next();\r\n        this.dtMustGoTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clearAllIntervals();\r\n        this.unSubscribeFormChanges();\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();        \r\n    }\r\n\r\n    async checkFilterValueChange() {\r\n        if (this.singleMulti == 2) {\r\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n            let selectedLocations = MyLocalStorage.getData(MyLocalStorage.WBF_LOCATION_KEY);\r\n            selectedLocations == \"\" ? selectedLocations = [] : '';\r\n            let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n            selectedStates == \"\" ? selectedStates = [] : '';\r\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\r\n                this.FilterForm.get('FromDate').patchValue(frmDate);\r\n                this.initializeFilterChange();\r\n            } else if (!this.isArrayEqual(selectedLocations, this.FilterForm.get('SelectedLocations').value)) {\r\n                this.FilterForm.get('SelectedLocations').patchValue(selectedLocations);\r\n                this.initializeFilterChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    initializeFilterChange() {\r\n        localStorage.setItem(\"filterChange\", '1');\r\n        window.location.reload();\r\n    }\r\n\r\n    setDatatableData(data: WhereIsMyDriverModel[]): void {\r\n        this.MustGoSchedules = data.filter(x => x.LdPri == 1 || x.LdPri == 0).slice();\r\n        this.ShouldGoSchedules = data.filter(x => x.LdPri == 2).slice();\r\n        this.CouldGoSchedules = data.filter(x => x.LdPri == 3).slice();\r\n    }\r\n\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.draw();\r\n                });\r\n            }\r\n        });\r\n        if (this.driverModal.modalDetails.display === \"block\") {\r\n            this.showDriverDetails(this.driverModal.modalDetails.data);\r\n        }\r\n    }\r\n\r\n    filterDriverData(): void {\r\n        this.clearAllIntervals();\r\n        this.searchLoadInterval = window.setTimeout(() => {\r\n            this.getBuyerLoads();\r\n            this.autoRefreshLoads();\r\n        }, 2000);\r\n    }\r\n\r\n    clearAllIntervals(): void {\r\n        if (this.searchLoadInterval) {\r\n            clearInterval(this.searchLoadInterval);\r\n        }\r\n        if (this.autoRefreshInterval) {\r\n            clearInterval(this.autoRefreshInterval);\r\n        }\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    getBuyerLoads(statusId?): void {\r\n\r\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\r\n            return;\r\n        }\r\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\r\n        this.SelectedPrioritiesId = _priorities;\r\n        if(this.SelectedPrioritiesId.length>0){\r\n             this.showMustGo=this.SelectedPrioritiesId.filter(f=>f==1).length==1 ? true:false;\r\n             this.showShouldGo=this.SelectedPrioritiesId.filter(f=>f==2).length==1 ? true:false;\r\n             this.showCouldGo=this.SelectedPrioritiesId.filter(f=>f==3).length==1 ? true:false;\r\n        }else{\r\n            this.showMustGo=true;this.showShouldGo=true;this.showCouldGo=true;\r\n        }\r\n        this.startAutoRefreshTimer();\r\n        this.loadingData = false;\r\n        this.refreshDatatable();\r\n    }\r\n\r\n    autoRefreshLoads(): void {\r\n        this.autoRefreshInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.getBuyerLoads();\r\n            }\r\n        }, this.AUTO_REFRESH_TIME * 1000);\r\n    }\r\n\r\n    startAutoRefreshTimer(): void {\r\n        this.stopAutoRefreshTimer();\r\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n        this.autoRefreshTimerInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (this.autoRefreshTicks == 0) {\r\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n                    this.stopAutoRefreshTimer();\r\n                } else {\r\n                    this.autoRefreshTicks--;\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stopAutoRefreshTimer(): void {\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    public toggleGrids() {\r\n        var toggleGrid = this.FilterForm.get('ToggleGrids').value;\r\n        this.FilterForm.get('ToggleGrids').patchValue(!toggleGrid);\r\n    }\r\n\r\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\r\n        window.scrollTo(0, 0);\r\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\r\n        if (infoWindow && infoWindow.isOpen) {\r\n            infoWindow.close();\r\n        }\r\n        this.selectedDriverDetails = new DriverAdditionalDetails();\r\n        this.modalData = true;\r\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\r\n            if (data) {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\r\n                this.modalData = false;\r\n            }\r\n            else {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails();\r\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\r\n                this.modalData = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n        }\r\n    }\r\n\r\n    filterMapByStatus(statusId) {\r\n        this.selectedMaplable = statusId;\r\n        this.getBuyerLoads(statusId);\r\n    }\r\n\r\n    arraysEqual(a, b) {\r\n        if (a === b) return true;\r\n        if (a == null || b == null) return false;\r\n        if (a.length != b.length) return false;\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isArrayEqual(value, other) {\r\n        var type = Object.prototype.toString.call(value);\r\n        if (type !== Object.prototype.toString.call(other)) return false;\r\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\r\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n        if (valueLen !== otherLen) return false;\r\n        var compare = function (item1, item2) {\r\n        };\r\n        var match;\r\n        if (type === '[object Array]') {\r\n            for (var i = 0; i < valueLen; i++) {\r\n                compare(value[i], other[i]);\r\n            }\r\n        } else {\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    compare(value[key], other[key]);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public applyLoadsFilters(filterForm:FormGroup){\r\n        this.FilterForm = filterForm;\r\n            this.filterDriverData();\r\n    }\r\n}\r\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row animated mt60\">\r\n    <div class=\"\" [ngClass]=\"{'fadeIn': FilterForm.get('ToggleMap').value, 'display_hide': !FilterForm.get('ToggleMap').value ,'col-sm-9': !FilterForm.get('ToggleExpandMapView').value , 'col-sm-12':FilterForm.get('ToggleExpandMapView').value === true  }\">\r\n        <div class=\"expand_map_btn\">\r\n            <a class=\"\" (click)=\"toggleExpandMapView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleExpandMapView').value, 'fa-arrow-circle-left': FilterForm.get('ToggleExpandMapView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div id=\"map-view\" class=\"mb15\">\r\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; top: -5px; left: 10px; font-size: 11px;\">\r\n                <div id=\"status-legends\" class=\"well pa0\">\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(11)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==11}\">\r\n                            <img src=\"src/assets/truck-11.svg\" data-statusid=\"11\">\r\n                            On the way to terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(12)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==12}\">\r\n                            <img src=\"src/assets/truck-12.svg\" data-statusid=\"12\">\r\n                            Arrived at terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(1)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==1}\">\r\n                            <img src=\"src/assets/truck-1.svg\" data-statusid=\"1\">\r\n                            On the way to location\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(18)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==18}\">\r\n                            <img src=\"src/assets/truck-18.svg\" data-statusid=\"18\">\r\n                            Arrived at location\r\n                        </a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style=\"z-index: 1; position: absolute; top: 0; right: 65px; font-size: 11px; opacity:0.9\">\r\n                <div class=\"well pa5\">Auto Refresh in: <b>{{autoRefreshTicks * 1000 | date:'mm:ss':'UTC'}}</b> minutes</div>\r\n            </div>\r\n            <agm-map [ngStyle]=\"{'height':singleMulti == 2 ? '80vh' : '60vh' }\"  [zoom]=\"zoomLevel\" [maxZoom]=\"16\" [minZoom]=\"2\"\r\n                (mapReady)=\"mapReady($event)\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\">\r\n                <ng-container *ngFor=\"let driver of OnGoingLoads let indx=index\">\r\n                    <agm-marker *ngIf=\"driver.Lat!= null &&driver.Lng!= null\" [latitude]=\"driver.Lat\" [longitude]=\"driver.Lng\"\r\n                                [iconUrl]=\"{'url':'src/assets/truck-'+driver.SttsId+'.svg','scaledSize':{'height':40,'width':50}}\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (markerClick)=\"showHideRoutes(indx)\" (mouseOut)=\"mouseHoveOutMarker(null,$event,indx)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                            <div>\r\n                                <p><strong>Driver Name: </strong> {{ driver.Name}}</p>\r\n                                <p><strong>Contact Number: </strong><a href=\"tel:{{driver.PhNo}}\" target=\"_blank\" title=\"Call {{driver.Name}}\">{{driver.PhNo}}</a></p>\r\n                                <p><strong>Last UpdatedAt: </strong> {{ driver.AppLastUpdatedDate}}</p>\r\n                                <p style=\"font-size:11px;padding-top: 10px;\" *ngIf=\"driver.routeShow else showRouteTemplate\"><strong>Note:</strong> Click truck to hide routes.</p>\r\n                                <ng-template #showRouteTemplate>\r\n                                    <p style=\"font-size:11px;padding-top: 10px;\"><strong>Note:</strong>  Click truck to view routes</p>\r\n                                </ng-template>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    <agm-marker [latitude]=\"driver.dLat\" [longitude]=\"driver.dLng\" [iconUrl]='{ \"url\": \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", \"scaledSize\": { \"height\": 25, \"width\": 25 } }' (mouseOver)=\"mouseHoverMarker(infoWindow2,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow2,$event,null)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" [maxWidth]=\"200\" #infoWindow2>\r\n                            <div>\r\n                                <p><b>Engaged Driver : </b> {{ driver.Name}}</p>\r\n                                <p><b>Drop Location: </b>{{ driver.Loc}}</p>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    <agm-direction *ngIf=\"driver.dLat && driver.dLng && driver.Lat!= null && driver.Lng!= null\" [origin]=\"{lat:driver.Lat, lng: driver.Lng}\" [destination]=\"{lat:driver.dLat, lng: driver.dLng}\"\r\n                                   [visible]=\"driver.routeShow\" [renderOptions]=\"{ suppressMarkers: true , polylineOptions: { strokeColor: driver.statusColor }}\"></agm-direction>\r\n                </ng-container>\r\n            </agm-map>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"pl0\" [ngClass]=\"{'col-sm-3': (FilterForm.get('ToggleExpandMapView').value === false && FilterForm.get('ToggleMap').value === true), 'absolute_driver': FilterForm.get('ToggleMap').value===false, 'hide_absolute_driver': (FilterForm.get('ToggleDriverView').value === true && FilterForm.get('ToggleMap').value === false), 'display_hide': (FilterForm.get('ToggleExpandMapView').value === true && FilterForm.get('ToggleMap').value===true) }\">\r\n        <div class=\"driver_btn\" *ngIf=\"!FilterForm.get('ToggleMap').value\">\r\n            <a class=\"\" (click)=\"toggleDriverView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleDriverView').value, 'fa-arrow-circle-left': FilterForm.get('ToggleDriverView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div class=\"mt10\">\r\n            <h3 class=\"pull-left mt6 pb0 dib\">Drivers</h3>\r\n            <div class=\"inner-addon left-addon pull-left ml10\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Drivers\" type=\"text\" (input)=\"searchDrivers($event)\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"driver-list dib full-width\">\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of Drivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\"><span [ngClass]=\"driver.IsOnline ? 'live':''\"></span>{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" [ngClass]=\"{'activeRoute':driver.routeShow}\" [ngStyle]=\"{ 'color': (driver.routeShow ? driver.statusColor : '#2b2b2b') }\" title=\"Click to {{driver.routeShow ? 'hide':'show'}} routes\" (click)=\"showHideRoutes(indx)\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of OfflineDrivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\">{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" title=\"Last location is not available\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"chat-wrapper\" style=\"z-index: 9999;\">\r\n    <app-buyer-sendbird></app-buyer-sendbird>\r\n</div>\r\n<ng-template #driverDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true, 'left':true,'fade':true,'show': modalDetails.display==='block'}\" [ngStyle]=\"{'display':modalDetails.display}\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n            <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pb0 pt0\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{selectedDriverDetails.Name}}\r\n                        <a (click)=\"doChat(modalDetails.data.Id);\" title=\"Chat\"> <span class=\"fs18 far fa-comment\"></span></a>\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt10\" (click)=\"modalClose()\" aria-label=\"Close\"> <i class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>               \r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-container *ngTemplateOutlet=\"driverDetailsModal;context:driverModal\">\r\n</ng-container>\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChildren, QueryList, OnDestroy, ViewChild, TemplateRef, SimpleChanges, OnChanges, Input } from '@angular/core';\r\nimport { Subject, from, Subscription, Observable } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { BuyerSendbirdComponent } from 'src/app/shared-components/sendbird/buyer-sendbird/buyer-sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel, routesColor } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { LoadFilterModel } from '../Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from '../services/buyerwallyboard.service';\r\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\ndeclare function IsUserActive(): boolean;\r\n\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver-map-view',\r\n    templateUrl: './map-view.component.html',\r\n    styleUrls: ['./map-view.component.css']\r\n})\r\nexport class WhereIsMyDriverMapViewComponent implements OnInit {\r\n    @Input() singleMulti: number;\r\n    @Input() FilterForm: FormGroup;\r\n\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 5;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    private UserCountry = \"\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n\r\n    private searchLoadInterval: any;\r\n    private autoRefreshInterval: any;\r\n    private autoRefreshTimerInterval: any;\r\n    private setCountryCenterInterval: any;\r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Locations: LoadFilterModel[] = [];\r\n    public States: any = [];\r\n    public Suppliers: any = [];\r\n    public Carriers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public LocationDdlSettings: any = {};\r\n    public SelectedLocationId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    changeFilterValueIntervalForMultiWindow: any;\r\n\r\n    @ViewChild(BuyerSendbirdComponent) sendbirdComponent: BuyerSendbirdComponent;\r\n\r\n    constructor(private dispatcherService: BuyerwallyboardService, private chatService: chatService, private carrierService: CarrierService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.setSelectedLocationId();\r\n        this.subscribeFormChanges();\r\n        this.dispatcherService.getDispatcherCountry().subscribe(data => {\r\n            this.UserCountry = data;\r\n            this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\r\n            this.setMapCenter();\r\n        });\r\n        this.chatService.loaderDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.loadingData = data;\r\n            }\r\n        });\r\n        this.chatService.memberInfoDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.memberInfo = data as MemberInfo[];\r\n                this.loadingData = false;\r\n                jQuery('#btnconfirm-memberInfo').click();\r\n            }\r\n        });\r\n        this.changeFilterValueIntervalForMultiWindow = setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.checkFilterValueChange();\r\n            }\r\n        }, 10000);\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    setSelectedLocationId() {\r\n        var ids = [];\r\n        var selectedLocationIds = this.FilterForm.get('SelectedLocations').value.forEach(res => { ids.push(res.Id) });\r\n        selectedLocationIds = ids.join();\r\n        this.SelectedLocationId = selectedLocationIds;\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            //alert(change.singleMulti.currentValue)\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getDispatcherLoads();\r\n        this.autoRefreshLoads();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clearAllIntervals();\r\n        this.unSubscribeFormChanges();\r\n        if (this.changeFilterValueIntervalForMultiWindow)\r\n            clearInterval(this.changeFilterValueIntervalForMultiWindow);\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        // this.subscriptions.add(this.FilterForm.valueChanges\r\n        //     .subscribe(change => {\r\n        //         if (change.FromDate && change.ToDate) {\r\n        //             var ids = [];\r\n        //             change.SelectedLocations.forEach(res => { ids.push(res.Id) });\r\n        //             var selectedLocationIds = ids.join();\r\n        //             if (selectedLocationIds != this.SelectedLocationId) {\r\n        //                 this.CloneOnGoingLoads = [];\r\n        //                 this.SelectedLocationId = selectedLocationIds;\r\n        //             }\r\n        //             this.filterDriverData();\r\n        //         }\r\n        //     }))\r\n\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges.subscribe(change => {\r\n            // this.loadingData = true;    \r\n            this.filterDriverData();\r\n        }));\r\n        this.subscriptions.add(this.FilterForm.get('SelectedCarriers').valueChanges.subscribe(change => {\r\n            // this.loadingData = true;       \r\n            this.filterDriverData();\r\n        }));\r\n\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    async checkFilterValueChange() {\r\n        if (this.singleMulti == 2) {\r\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n            //let selectedLocations = MyLocalStorage.getData(MyLocalStorage.WBF_LOCATION_KEY);\r\n            //selectedLocations == \"\" ? selectedLocations = [] : '';\r\n            // let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n            //selectedStates == \"\" ? selectedStates = [] : '';\r\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\r\n                this.FilterForm.get('FromDate').patchValue(frmDate);\r\n                this.initializeFilterChange();\r\n            }\r\n            //else if (!this.isArrayEqual(selectedLocations, this.FilterForm.get('SelectedLocations').value)) {\r\n            //    this.FilterForm.get('SelectedLocations').patchValue(selectedLocations);\r\n            //    this.initializeFilterChange();\r\n            //}\r\n        }\r\n    }\r\n    initializeFilterChange() {\r\n        localStorage.setItem(\"filterChange\", '1');\r\n        window.location.reload();\r\n    }\r\n\r\n    setMapCenter(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLoactionLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLoactionLng = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.googleMap && this.OnGoingLoads.length == 0) {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    bounds.extend(new google.maps.LatLng(this.centerLoactionLat, this.centerLoactionLng));\r\n                    this.googleMap.fitBounds(bounds);\r\n                    this.googleMap.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.filter(t => t.Lat != null && t.Lng != null).forEach(x => {\r\n                        x.statusColor = routesColor[x.SttsId];\r\n                        bounds.extend(new google.maps.LatLng(x.Lat, x.Lng));\r\n                    });\r\n                    this.googleMap.fitBounds(bounds);\r\n\r\n                    const locationbounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.forEach(x => {\r\n                        locationbounds.extend(new google.maps.LatLng(x.dLat, x.dLng));\r\n                    });\r\n                    if (this.googleMap && locationbounds) {\r\n                        this.googleMap.setCenter(locationbounds.getCenter());         \r\n                    }\r\n                    this.googleMap.setZoom(5);\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    searchDrivers(event: any): void {\r\n        this.SearchedKeyword = event.target.value;\r\n        this.filterDriverData();\r\n    }\r\n\r\n    filterDriverData(): void {\r\n        this.clearAllIntervals();\r\n        this.loadingData = true;\r\n        this.searchLoadInterval = window.setTimeout(() => {\r\n            this.getDispatcherLoads();\r\n            this.autoRefreshLoads();\r\n        }, 2000);\r\n    }\r\n\r\n    clearAllIntervals(): void {\r\n        if (this.searchLoadInterval) {\r\n            clearInterval(this.searchLoadInterval);\r\n        }\r\n        if (this.autoRefreshInterval) {\r\n            clearInterval(this.autoRefreshInterval);\r\n        }\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    getDispatcherLoads(statusId?): void {\r\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\r\n            return;\r\n        }\r\n        let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\r\n        this.SelectedPrioritiesId = _priorities;\r\n        let selectedSupplierIds = '';\r\n        this.FilterForm.get('SelectedSuppliers').value.map(m => {\r\n            if (selectedSupplierIds == '') selectedSupplierIds = m.Id\r\n            else selectedSupplierIds += ',' + m.Id\r\n        })\r\n        let selectedCarrierIds = '';\r\n        this.FilterForm.get('SelectedCarriers').value.map(m => {\r\n            if (selectedCarrierIds == '') selectedCarrierIds = m.Id\r\n            else selectedCarrierIds += ',' + m.Id\r\n        })\r\n        var ids = [];\r\n        this.SelectedLocationId = '';\r\n        this.FilterForm.get('SelectedLocations').value.forEach(res => { ids.push(res.Id) });\r\n        this.SelectedLocationId = ids.join();\r\n\r\n        let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\r\n        let _locAttributeIds = _locAttribute.join();\r\n\r\n        let inputs = {\r\n            LocationIds: this.SelectedLocationId == null ? '' : this.SelectedLocationId,\r\n            States: _states,\r\n            Priorities: _priorities,\r\n            FromDate: this.FilterForm.get('FromDate').value,\r\n            ToDate: this.FilterForm.get('ToDate').value,\r\n            DriverSearch: this.SearchedKeyword,\r\n            SupplierCompanyIds: selectedSupplierIds,\r\n            CarrierCompanyIds: selectedCarrierIds,\r\n            IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n            InventoryCaptureType:_locAttributeIds\r\n        };\r\n        this.loadingData = true;\r\n        var data = this.CloneOnGoingLoads;\r\n        var isFilter = false;\r\n\r\n        if (statusId && this.CloneOnGoingLoads && this.CloneOnGoingLoads.length > 0) {\r\n            data = data.filter(f => f.SttsId == statusId);\r\n            isFilter = true;\r\n        }\r\n        if (!isFilter) {\r\n            this.dispatcherService.getOnGoingLoadsForMap(inputs).subscribe((data) => {\r\n                this.CloneOnGoingLoads = data;\r\n                this.initailizeOnGoingLoad(data);\r\n\r\n            });\r\n        } else\r\n            this.initailizeOnGoingLoad(data);\r\n    }\r\n\r\n    private initailizeOnGoingLoad(data) {\r\n        this.OnGoingLoads = data;\r\n        this.Drivers = this.OnGoingLoads.filter((thing, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === thing.Id)) === i;\r\n        });\r\n        this.Drivers = this.Drivers.filter(x => x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        //last location not available\r\n        this.OfflineDrivers = [];\r\n        var driverFilter = [];\r\n        data && data.map(m => {\r\n            if (!driverFilter.find(f => f && f.Name == m.Name)) {\r\n                driverFilter.push(m);\r\n                if (m.Lat == null && m.Lng == null && m.Name != null && m.Name != undefined && m.Name.trim() != '')\r\n                    (this.Drivers && this.Drivers.filter(f => f.Name == m.Name).length > 0) ? '' : this.OfflineDrivers.push(m);\r\n            }\r\n        })\r\n        //this.OfflineDrivers = data.filter(x => x.Lat == null && x.Lng == null && x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        this.setMapCenter();\r\n        this.startAutoRefreshTimer();\r\n        this.loadingData = false;\r\n        this.addDrivertoBackground();\r\n    }\r\n\r\n    autoRefreshLoads(): void {\r\n        this.autoRefreshInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.getDispatcherLoads();\r\n            }\r\n        }, this.AUTO_REFRESH_TIME * 1000);\r\n    }\r\n\r\n    startAutoRefreshTimer(): void {\r\n        this.stopAutoRefreshTimer();\r\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n        this.autoRefreshTimerInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (this.autoRefreshTicks == 0) {\r\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n                    this.stopAutoRefreshTimer();\r\n                } else {\r\n                    this.autoRefreshTicks--;\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stopAutoRefreshTimer(): void {\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    mapReady(map: any): void {\r\n        this.googleMap = map;\r\n        this.setMapCenter();\r\n    }\r\n\r\n    setZoomLevel(): void {\r\n        if (this.OnGoingLoads.length == 0) {\r\n            this.setMapCenter();\r\n        } else {\r\n            this.zoomLevel = 8; // default zoom level\r\n        }\r\n    }\r\n\r\n    public toggleExpandMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\r\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleDriverView() {\r\n        var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\r\n        this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\r\n    }\r\n\r\n    public addDrivertoBackground() {\r\n        this.Drivers.forEach(xItem => {\r\n            this.backgroudchatDefault.push(xItem.Id);\r\n        })\r\n        this.sendbirdComponent.IntializeChatDefault(this.backgroudchatDefault, \"\");\r\n    }\r\n    public doChat(driverId: number) {\r\n        this.sendbirdComponent.IntializeDriverChat(driverId, \"\");\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        if (this.previousInfowindow && this.previousInfowindow.isOpen) {\r\n            this.previousInfowindow.close();\r\n        }\r\n        if (infoWindow) {\r\n            this.previousInfowindow = infoWindow;\r\n            this.previousInfowindow.isOpen = true;\r\n            infoWindow.open();\r\n        }\r\n    }\r\n\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent, index: number = null): void {\r\n        if (this.previousInfowindow && this.previousInfowindow.isOpen && infoWindow) {\r\n            this.previousInfowindow.close();\r\n            this.previousInfowindow.isOpen = false;\r\n        }\r\n        if (infoWindow) {\r\n            infoWindow.close();\r\n        }\r\n    }\r\n\r\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\r\n        window.scrollTo(0, 0);\r\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\r\n        if (infoWindow && infoWindow.isOpen) {\r\n            infoWindow.close();\r\n        }\r\n        this.selectedDriverDetails = new DriverAdditionalDetails();\r\n        this.modalData = true;\r\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\r\n            if (data) {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\r\n                this.modalData = false;\r\n            }\r\n            else {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails();\r\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\r\n                this.modalData = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    private closePreviousWindow(index: number): void {\r\n        if (this.previousInfowindowIndex != null && this.previousInfowindow != null) {\r\n            this.OnGoingLoads[this.previousInfowindowIndex].routeShow = false;\r\n            if (this.previousInfowindow && this.previousInfowindow.isOpen)\r\n                this.previousInfowindow.close();\r\n            this.setMapCenter();\r\n        }\r\n    }\r\n    public showHideRoutes(index: number): void {\r\n        if (index == this.previousInfowindowIndex || this.previousInfowindowIndex == null) {\r\n            this.OnGoingLoads[index].routeShow = !this.OnGoingLoads[index].routeShow;\r\n            if (!this.OnGoingLoads[index].routeShow)\r\n                this.setMapCenter();\r\n        } else {\r\n            this.closePreviousWindow(index);\r\n        }\r\n        this.previousInfowindowIndex = index;\r\n    }\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n        }\r\n    }\r\n\r\n    filterMapByStatus(statusId) {\r\n        this.selectedMaplable = statusId;\r\n        this.getDispatcherLoads(statusId)\r\n    }\r\n\r\n    isArrayEqual(value, other) {\r\n        var type = Object.prototype.toString.call(value);\r\n        if (type !== Object.prototype.toString.call(other)) return false;\r\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\r\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n        if (valueLen !== otherLen) return false;\r\n        var compare = function (item1, item2) {\r\n        };\r\n        var match;\r\n        if (type === '[object Array]') {\r\n            for (var i = 0; i < valueLen; i++) {\r\n                compare(value[i], other[i]);\r\n            }\r\n        } else {\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    compare(value[key], other[key]);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n\r\n    }\r\n    public applyLoadsFilters(filterForm:FormGroup){\r\n        this.FilterForm = filterForm;\r\n        this.filterDriverData();\r\n    }\r\n}\r\n\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatatableCustomSortingService } from 'src/app/directives/sorting.pipe';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { BuyerwallyboardService } from '../services/buyerwallyboard.service';\r\n\r\n@Component({\r\n    selector: 'app-wally-dashboard',\r\n    templateUrl: './wally-dashboard.component.html',\r\n    styleUrls: ['./wally-dashboard.component.css']\r\n})\r\n\r\nexport class WallyDashboardComponent implements OnInit, AfterViewInit {\r\n    public viewType: any;\r\n    public singleMulti: any;\r\n    public disableControl: boolean = false;\r\n    private dispatcherDashboard: Window;\r\n\r\n    constructor(private wallyBoardService: BuyerwallyboardService, private _activateRoute: ActivatedRoute, private customSortingService: DatatableCustomSortingService) { }\r\n\r\n    ngOnInit() {\r\n        this.checkWindowSelection();\r\n        //this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        let params: any = this._activateRoute.snapshot.queryParams;\r\n        if (params && params.viewTypeFromDashboard)\r\n            this.changeViewType(params.viewTypeFromDashboard);\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        this.customSortingService.configColumnDefsNullToBottom();\r\n    }\r\n\r\n    public changeViewType(type: any): void {\r\n        localStorage.setItem('viewType', <string>type);\r\n        if (this.singleMulti === 2) {\r\n            this.dispatcherDashboard = window.open(\"/Buyer/Job/BuyerWallyBoard\", \"_blank\");\r\n        } else {\r\n            this.viewType = type;\r\n        }\r\n    }\r\n\r\n\r\n    public changeWindowType(type: number): void {\r\n        this.singleMulti = type;\r\n        this.wallyBoardService.SingleMultiWindowSubject.next(type);\r\n        if (type === 1 && +(localStorage.getItem('singleMulti')) !== 1) {\r\n            setTimeout(() => {\r\n                this.dispatcherDashboard.close();\r\n            }, 10000);\r\n        }\r\n        localStorage.setItem('singleMulti', <string>this.singleMulti);\r\n    }\r\n\r\n    private checkWindowSelection(): void {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        this.viewType = (localStorage.getItem('viewType')) ? +(localStorage.getItem('viewType')) : 1;\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl == true) {\r\n            this.viewType = 2;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"sticky-header-dash\" [ngClass]=\" viewType == 3 ? 'col-sm-3' : 'col-sm-3' \" >\r\n                <div class=\"dib border pa5 radius-capsule shadow-b pull-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Location</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">Loads</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"3\" [checked]=\"viewType==3\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(3)\">Sales</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dib switch-window ml20 pull-left mt5\" *ngIf=\"viewType!=3\" >\r\n                    <div class=\"btn-group\">\r\n                        <input class=\"hide-element\" name=\"single\" type=\"radio\" [value]=\"1\" [checked]=\"singleMulti==1\">\r\n                        <label class=\"btn ml0 first-icon\" (click)=\"changeWindowType(1)\" placement=\"bottom\" ngbTooltip=\"Single Window\"><i class=\"far fa-window-maximize fs14 mt3\"></i></label>\r\n                        <input class=\"hide-element\" name=\"multiple\" type=\"radio\" [value]=\"2\" [checked]=\"singleMulti==2\">\r\n                        <label class=\"btn last-icon\" (click)=\"changeWindowType(2)\" placement=\"bottom\" ngbTooltip=\"Multi Window\"><i class=\"far fa-window-restore fs14 mt3\"></i></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-buyer-locations [singleMulti]=\"singleMulti\" *ngIf=\"viewType==1\">Loading...</app-buyer-locations>\r\n                <app-where-is-my-driver [singleMulti]=\"singleMulti\" *ngIf=\"viewType==2\">Loading...\r\n                </app-where-is-my-driver>\r\n                <app-sales *ngIf=\"viewType==3\">Loading...</app-sales>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, AfterViewInit, EventEmitter, ViewChildren, QueryList, OnDestroy, ViewChild, TemplateRef, SimpleChanges, OnChanges, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Subject, from, Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird/sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { LoadFilterModel, TfxModule } from './Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from './services/buyerwallyboard.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { WhereIsMyDriverMapViewComponent } from './wally-dashboard/map-view.component';\r\nimport { WhereIsMyDriverGridViewComponent } from './wally-dashboard/grid-view.component';\r\nimport { InventoryDataCaptureList, LoadPriorities, RegExConstants } from '../app.constants';\r\n\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver',\r\n    templateUrl: './where-is-my-driver.component.html',\r\n    styleUrls: ['./where-is-my-driver.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WhereIsMyDriverComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() singleMulti: number;\r\n    // @Output() singleMultiOutput = new EventEmitter<number>();\r\n\r\n    @ViewChild(WhereIsMyDriverMapViewComponent)  loadsMapView : WhereIsMyDriverMapViewComponent;\r\n    @ViewChild(WhereIsMyDriverGridViewComponent) loadsGridView: WhereIsMyDriverGridViewComponent;\r\n\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 4;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n    public FilterForm: FormGroup;\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    selectedLocAttributeList=[];\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n  \r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Locations: LoadFilterModel[] = [];\r\n    public DefaultLocations: LoadFilterModel[] = [];\r\n    public States: any = [];\r\n    public Suppliers: any = [];\r\n    public Carriers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public LocationDdlSettings: any = {};\r\n    public SelectedLocationId: string;\r\n    public SelectedStateId: string;\r\n    public SelectedSupplierId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    //@ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    public viewLoadType = 1;\r\n    public loadScreenType = 'All';\r\n    subscription: Subscription;\r\n    public carrierList: any[] = [];\r\n    public IsDataLoaded: boolean = false;\r\n    public filterCount: number;\r\n\r\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: BuyerwallyboardService, private chatService: chatService, private carrierService: CarrierService) {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        if (this.singleMulti == 1)\r\n            this.loadScreenType = 'All';\r\n\r\n        var _this = this;\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            _this.SaveFilters(true);\r\n            return;\r\n        });\r\n        this.setFilterForm();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.StateDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.PriorityDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.LocationDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        this.restoreFilterStates();\r\n        this.subscribeFormChanges();\r\n        this.GetFilters();\r\n        //this.getFilterData();\r\n    }\r\n\r\n    public setFilterForm() {\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n\r\n        this.FilterForm = this.fb.group({\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            ToggleMap: this.fb.control(true),\r\n            ToggleExpandMapView: this.fb.control(false),\r\n            ToggleGrids: this.fb.control(false),\r\n            ToggleDriverView: this.fb.control(false),\r\n            SelectedSuppliers: this.fb.control([]),\r\n            SelectedCarriers: this.fb.control([]),\r\n            SelectedLocations: this.fb.control([]),\r\n            SelectedStates: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([]),\r\n            singleMulti: this.fb.control(this.singleMulti),\r\n            FromDate: this.fb.control(fromDate),\r\n            ToDate: this.fb.control(toDate),\r\n            selectedLocAttributeList:this.fb.control([])\r\n        });\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        // this.subscriptions.add(this.FilterForm.get('SelectedLocations').valueChanges\r\n        //     .subscribe(change => {\r\n        //         var selectedLocation = this.setSelectedLocationId();\r\n        //         if (this.SelectedLocationId != selectedLocation) {\r\n        //             this.locationChanged();\r\n        //         }\r\n        //     }))\r\n        this.subscriptions.add(this.FilterForm.get('SelectedStates').valueChanges\r\n            .subscribe(change => {\r\n                var selectedStates = this.setSelectedStateId();\r\n                if (this.SelectedStateId != selectedStates) {\r\n                    this.stateChanged();\r\n                }\r\n            }));\r\n            this.subscriptions.add(this.FilterForm.get('SelectedSuppliers').valueChanges\r\n            .subscribe(change => {\r\n                var selectedSupplier = this.setSelectedSupplierId();\r\n                if (this.SelectedSupplierId != selectedSupplier) {\r\n                    this.suppplierChanged();\r\n                }\r\n            }));\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges\r\n            .subscribe(change => {\r\n                this.ShowCarrierMangedData();\r\n            }))\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    getFilterData() {\r\n        var isCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\r\n        this.IsDataLoaded = false;\r\n        this.dispatcherService.GetFilterData(isCarrierManaged).subscribe(data => {\r\n            // this.IsDataLoaded = true;\r\n            this.Locations = data;\r\n            this.DefaultLocations=data;\r\n            this.States = this.GetUniqueItems(data.map(t => t.States).reduce((p, n) => p.concat(n), []));\r\n            this.Suppliers = this.GetUniqueItems(data.map(t => t.Suppliers).reduce((p, n) => p.concat(n), []));\r\n            this.Carriers = this.GetUniqueItems(data.map(t => t.Carriers).reduce((p, n) => p.concat(n), []));\r\n            var selectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n            selectedLocations = selectedLocations.filter(t => { return this.Locations.filter(el => t.Id == el.Id).length > 0 });\r\n            this.FilterForm.get('SelectedLocations').patchValue(selectedLocations);\r\n            this.SelectedLocationId = this.setSelectedLocationId();\r\n            this.setSelectedFilters();\r\n        });\r\n    }\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        let filterChange = localStorage.getItem(\"filterChange\") ? localStorage.getItem(\"filterChange\") : 0;\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            this.viewLoadType = (localStorage.getItem('viewLoadType')) ? +(localStorage.getItem('viewLoadType')) : 1;\r\n            if (this.singleMulti == 1) {\r\n                this.viewLoadType = 1\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType = \"All\"\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 0 && filterChange == 0) {\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType == \"Grid\" ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.viewLoadType == 2 && this.singleMulti == 2 && filterChange == 0) {\r\n                this.loadScreenType = sessionStorage.getItem('loadScreenType');\r\n                //this.loadScreenType == \"Grid\" ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 1 && filterChange == 0) {\r\n                this.viewLoadType == 1 ? this.loadScreenType = \"Map\" : '';\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (filterChange == 1 && this.singleMulti == 2) {\r\n                sessionStorage.getItem('loadScreenType') ? this.loadScreenType = sessionStorage.getItem('loadScreenType') : 'All';\r\n                //  type == 'Grid' ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n            }\r\n            if (this.loadScreenType == null && this.singleMulti == 2) { this.loadScreenType = 'Map' }\r\n\r\n        }\r\n        filterChange = 0;\r\n        localStorage.setItem('filterChange', filterChange.toString());\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unSubscribeFormChanges();\r\n        this.SaveFilters(true);\r\n    }\r\n\r\n    locationChanged(): void {\r\n        this.SelectedLocationId = this.setSelectedLocationId();\r\n        this.setJobSuppliers();\r\n\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_LOCATION_KEY, this.SelectedLocations);\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDSTATES_KEY, this.SelectedStates);\r\n    }\r\n\r\n    stateChanged(): void {\r\n        this.SelectedStateId = this.setSelectedStateId();\r\n        this.onSelectStates();\r\n    }\r\n\r\n    suppplierChanged(): void {\r\n        this.SelectedStateId = this.setSelectedSupplierId();\r\n        this.onSelectSupplier();\r\n    }\r\n\r\n    setSelectedLocationId() {\r\n        var ids = [];\r\n        var selectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n        selectedLocations.forEach(res => { ids.push(res.Id) });\r\n        return ids.join();\r\n    }\r\n\r\n\r\n    setSelectedStateId() {\r\n        var ids = [];\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        selectedStates.forEach(res => { ids.push(res.Id) });\r\n        return ids.join();\r\n    }\r\n\r\n    setSelectedSupplierId() {\r\n        var ids = [];\r\n        var selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value;\r\n        selectedSuppliers.forEach(res => { ids.push(res.Id) });\r\n        return ids.join();\r\n    }\r\n\r\n    setJobSuppliers(): void {\r\n        this.Suppliers = [];\r\n        this.Carriers = [];\r\n        this.States = [];\r\n        this.Locations.map(m => {\r\n            var selectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n            if (selectedLocations.find(f => f.Id == m.Id) || selectedLocations.length == 0) {\r\n                if (m && m.Suppliers && m.Suppliers.length > 0) {\r\n                    this.Suppliers = this.Suppliers.concat(m.Suppliers);\r\n                }\r\n                if (m && m.Carriers && m.Carriers.length > 0) {\r\n                    this.Carriers = this.Carriers.concat(m.Carriers);\r\n                }\r\n                if (m && m.States && m.States.length > 0) {\r\n                    this.States = this.States.concat(m.States);\r\n                }\r\n            }\r\n        })\r\n        this.States = this.GetUniqueItems(this.States.reduce((p, n) => p.concat(n), []));\r\n        this.Suppliers = this.GetUniqueItems(this.Suppliers.reduce((p, n) => p.concat(n), []));\r\n        this.Carriers = this.GetUniqueItems(this.Carriers.reduce((p, n) => p.concat(n), []));\r\n        if (this.IsDataLoaded) {\r\n            this.setSelectedFilters();\r\n        }\r\n    }\r\n\r\n\r\n    onSelectStates(): void {\r\n        this.Suppliers = [];\r\n        this.Locations=[]\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        this.Locations=this.DefaultLocations.filter(t=>selectedStates.some(t1=>t1.Id==t.States[0].Id));\r\n        if(!selectedStates || !selectedStates.length){\r\n            this.Locations=this.DefaultLocations;\r\n        }\r\n        this.Suppliers=this.Locations.map(t=>{\r\n            return t.Suppliers;\r\n        });\r\n      \r\n        this.Locations = this.GetUniqueItems(this.Locations.reduce((p, n) => p.concat(n), []));\r\n        this.Suppliers = this.GetUniqueItems(this.Suppliers.reduce((p, n) => p.concat(n), []));\r\n        if (this.IsDataLoaded) {\r\n            this.setSelectedFilters();\r\n        }\r\n    }\r\n\r\n    onSelectSupplier(): void {\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        var selectedSupplier = this.FilterForm.get('SelectedSuppliers').value;\r\n        selectedStates.forEach(element => {\r\n        this.Locations=this.DefaultLocations.filter(t=>t.States.filter(t1 => t1.Id == element.Id).length > 0);\r\n        });\r\n        selectedSupplier.forEach(element => {\r\n            this.Locations=this.Locations.filter(t=>t.Suppliers.filter(t1=>t1.Id == element.Id).length > 0);\r\n        });\r\n        this.Locations = this.GetUniqueItems(this.Locations.reduce((p, n) => p.concat(n), []));\r\n        if (this.IsDataLoaded) {\r\n            this.setSelectedFilters();\r\n        }\r\n    }\r\n\r\n    setSelectedFilters() {\r\n        var selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value;\r\n        var selectedCarriers = this.FilterForm.get('SelectedCarriers').value;\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        selectedSuppliers = selectedSuppliers.filter(t => { return this.Suppliers.filter(el => t.Id == el.Id).length > 0 });\r\n        selectedCarriers = selectedCarriers.filter(t => { return this.Carriers.filter(el => t.Id == el.Id).length > 0 });\r\n        selectedStates = selectedStates.filter(t => { return this.States.filter(el => t.Id == el.Id).length > 0 });\r\n\r\n        this.FilterForm.get('SelectedSuppliers').patchValue(selectedSuppliers);\r\n        this.FilterForm.get('SelectedCarriers').patchValue(selectedCarriers);\r\n        this.FilterForm.get('SelectedStates').patchValue(selectedStates);\r\n\r\n        this.ApplyLoadsFilters();\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('FromDate').patchValue(event);\r\n        }\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' && RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_toDate < _fromDate) {\r\n                this.FilterForm.get('ToDate').patchValue(event);\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    setToDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('ToDate').patchValue(event);\r\n        }\r\n        this.FilterForm.get('ToDate').patchValue(event);\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' && RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_fromDate > _toDate) {\r\n                this.FilterForm.get('FromDate').patchValue(event);\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    public toggleMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleFilterView() {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n\r\n    private restoreFilterStates(): void {\r\n        if (this.disableControl == true) {\r\n            let _selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n            if (_selectedDate != '') {\r\n                this.FilterForm.get('FromDate').patchValue(_selectedDate);\r\n                this.FilterForm.get('ToDate').patchValue(_selectedDate);\r\n            }\r\n        }\r\n    }\r\n\r\n    public GetFilters() {\r\n        this.dispatcherService.getFilters(TfxModule.BuyerWallyboardLoads).subscribe(res => {\r\n            if (res && res.length > 0) {\r\n                this.SetFilters(res);\r\n            }\r\n            else {\r\n                this.getFilterData();\r\n            }\r\n        });\r\n    }\r\n\r\n    public SaveFilters(isTopFilter) {\r\n        if(isTopFilter){\r\n            this.dispatcherService.getFilters(TfxModule.BuyerWallyboardLoads).subscribe(res => {\r\n                if (res && Object.keys(res).length > 0) {\r\n                    var IsShowCarrierManaged = this.FilterForm.get(\"IsShowCarrierManaged\").value;\r\n                    var  SelectedCarriers=  this.FilterForm.get(\"SelectedCarriers\").value || [];                  \r\n                    let jsonFilterForm : FormGroup = null;                \r\n                    jsonFilterForm = JSON.parse(res);\r\n                    jsonFilterForm[\"IsShowCarrierManaged\"]= IsShowCarrierManaged;\r\n                    jsonFilterForm[\"SelectedCarriers\"] =SelectedCarriers;\r\n                    var filterModel = JSON.stringify(jsonFilterForm);                   \r\n                    this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardLoads, filterModel).subscribe(res => {\r\n                        if (res) {\r\n            \r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            var filterModel = JSON.stringify(this.FilterForm.value);\r\n            this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardLoads, filterModel).subscribe(res => {\r\n                if (res) {\r\n    \r\n                }\r\n            });\r\n        }\r\n        // var filterData = this.FilterForm.value;\r\n        // delete filterData[\"FromDate\"];\r\n        // delete filterData[\"ToDate\"];\r\n        // var filterModel = JSON.stringify(filterData);\r\n        // this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardLoads, filterModel).subscribe(res => {\r\n        //     if (res) {\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        var filterData = JSON.parse(input);\r\n        this.FilterForm.patchValue(filterData);\r\n        this.getFilterData(); \r\n        this.ApplyLoadsFilters();\r\n    }\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n            //this.toogleDriver = true;\r\n        }\r\n\r\n    }\r\n\r\n    public ShowCarrierMangedData() {\r\n        this.FilterForm.get('SelectedCarriers').patchValue([]);\r\n        this.getFilterData();\r\n        this.loadsGridView.applyLoadsFilters(this.FilterForm);\r\n        this.loadsMapView.applyLoadsFilters(this.FilterForm);\r\n    }\r\n\r\n    public ResetLoadsFilters() {\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n        this.FilterForm.get('SelectedStates').patchValue([]);\r\n        this.FilterForm.get('SelectedPriorities').patchValue([]);\r\n        this.FilterForm.get('SelectedSuppliers').patchValue([]);\r\n        this.FilterForm.get('SelectedLocations').patchValue([]);\r\n        this.FilterForm.get('FromDate').patchValue(fromDate);\r\n        this.FilterForm.get('ToDate').patchValue(toDate);\r\n        this.FilterForm.get('selectedLocAttributeList').patchValue([]);\r\n        this.ApplyLoadsFilters('reset');\r\n    }\r\n\r\n    public ApplyLoadsFilters(msg?) {\r\n        this.SaveFilters(false);\r\n        this.filterCount = 0;\r\n\r\n        if (this.FilterForm) {\r\n\r\n            var selectedStates = this.FilterForm.get('SelectedStates').value || [];\r\n            this.filterCount += selectedStates.length;\r\n\r\n            var selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value || [];\r\n            this.filterCount += selectedSuppliers.length;\r\n\r\n            var selectedLocations = this.FilterForm.get('SelectedLocations').value || [];\r\n            this.filterCount += selectedLocations.length;\r\n\r\n            var selectedPriorities = this.FilterForm.get('SelectedPriorities').value || [];\r\n            this.filterCount += selectedPriorities.length;\r\n\r\n            var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\r\n            this.filterCount += selectedLocAttributeList.length;\r\n        }\r\n\r\n        this.loadsGridView.applyLoadsFilters(this.FilterForm);\r\n        this.loadsMapView.applyLoadsFilters(this.FilterForm);\r\n\r\n        if (msg == \"set\") {\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n<div class=\"col-sm-9 sticky-header-wmd\">\r\n    <div class=\"row\" [formGroup]=\"FilterForm\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-7\">\r\n                    <div class=\"form-check form-check-inline fs14 mt5\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" formControlName=\"IsShowCarrierManaged\" />\r\n                        <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n                    </div>\r\n                    <div class=\"mtm10\" *ngIf=\"FilterForm.get('IsShowCarrierManaged').value\">\r\n                        <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\" [autoClose]=\"'outside'\">Select Carrier</a>\r\n                        <ng-template #popContent>\r\n                            <div class=\"col-sm-12 p-0\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedCarriers']\"\r\n                                                         [settings]=\"PriorityDdlSettings\"\r\n                                                         [placeholder]=\"'Select Carrier'\"\r\n                                                         [data]=\"Carriers\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-5\">\r\n                    <!--<ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedLocations']\"\r\n                                             [settings]=\"LocationDdlSettings\" [placeholder]=\"'Select Location'\" [data]=\"Locations\">\r\n                    </ng-multiselect-dropdown>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n               [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\" formControlName=\"FromDate\" autocomplete=\"off\">-->\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n               [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\" formControlName=\"ToDate\" autocomplete=\"off\">-->\r\n        </div>\r\n\r\n        <!--<span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span>-->\r\n        <div class=\"col-3 pl0 text-right pt2\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i>Filters</a>\r\n            <a *ngIf=\"singleMulti!=2\" class=\"hide_show_map fs14 ml10\" (click)=\"toggleMapView()\">\r\n                <i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleMap').value ? 'Hide Map' : 'Show Map'}}\r\n            </a>\r\n            <!--<div class=\"col-sm-3 pl0 text-right pt8\" (clickOutside)=\"clickOutsideDropdown()\">\r\n                <a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>\r\n                <div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n                    <div class=\"pull-right\">\r\n                        <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 mb15\">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\"\r\n                                                             [settings]=\"StateDdlSettings\" [placeholder]=\"'Select States'\" [data]=\"States\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-sm-12 mb15\">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\" [data]=\"LoadPriorities\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-sm-12 mb15\">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedSuppliers']\"\r\n                                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Supplier'\" [data]=\"Suppliers\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-sm-12 \">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                                             [data]=\"LocationAttributeList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n        <ng-template #popContent>\r\n            <div class=\"popover-details\">\r\n                <div class=\"row border-bottom-2\">\r\n                    <div class=\"col-6 pr-0\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">State</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\"\r\n                                                     [settings]=\"StateDdlSettings\" [placeholder]=\"'Select States'\" [data]=\"States\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6 \">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Supplier</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedSuppliers']\"\r\n                                                     [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Supplier'\" [data]=\"Suppliers\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"row border-bottom-2 mt10\">\r\n                    <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedLocations']\"\r\n                                                     [settings]=\"LocationDdlSettings\" [placeholder]=\"'Select Location'\" [data]=\"Locations\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row border-bottom-2 mt10\">\r\n                    <div class=\"col-6 pr-0\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">From</label>\r\n                            <input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\" formControlName=\"FromDate\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">To</label>\r\n                            <input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\" formControlName=\"ToDate\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row border-bottom-2 mt10\">\r\n                    <div class=\"col-6 pr-0\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Priority</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                     [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\" [data]=\"LoadPriorities\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                     [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                                     [data]=\"LocationAttributeList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                 \r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-12 text-right\">\r\n                        <button type=\"button\" (click)=\"ResetLoadsFilters();\" class=\"btn btn-default\">\r\n                            Reset\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"ApplyLoadsFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n\r\n\r\n<app-where-is-my-driver-map-view *ngIf=\"(loadScreenType == 'Map' || loadScreenType == 'All') \" [singleMulti]=\"singleMulti\" [FilterForm]=\"FilterForm\"></app-where-is-my-driver-map-view>\r\n<app-where-is-my-driver-grid-view *ngIf=\"(loadScreenType == 'Grid' || loadScreenType == 'All') \" [singleMulti]=\"singleMulti\" [FilterForm]=\"FilterForm\"></app-where-is-my-driver-grid-view>"]}