{"version":3,"sources":["./src/app/contact-person/contact-person.component.ts","./src/app/contact-person/contact-person.component.html","./src/app/sales-user/create-sourcing-request/create-sourcing-request.component.ts","./src/app/sales-user/create-sourcing-request/create-sourcing-request.component.html","./src/app/sales-user/sales-user-dashboard/sales-user-dashboard.component.ts","./src/app/sales-user/sales-user-dashboard/sales-user-dashboard.component.html","./src/app/sales-user/sales-user.model.ts","./src/app/sales-user/sales-user.module.ts","./src/app/sales-user/sourcing-request-grid/sourcing-request-grid/sourcing-request-grid.component.ts","./src/app/sales-user/sourcing-request-grid/sourcing-request-grid/sourcing-request-grid.component.html"],"names":[],"mappings":"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","file":"sales-user-sales-user-module-es2015.js","sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ContactPersonModel } from '../sales-user/sales-user.model';\r\nimport { SalesUserService } from '../sales-user/sales-user.service';\r\n\n@Component({\n    selector: 'app-contact-person',\n    templateUrl: './contact-person.component.html',\n    styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit, OnChanges {\n\n    @Input() public Parent: FormGroup;\n    regexPhone: RegExp = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    constructor(private fb: FormBuilder, private salesUserService: SalesUserService,) { }\n\n    ngOnInit(): void {        \n        \n    }\n\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        //console.log(change);\r\n    }\r\n\n    public onChangeMobileNumber(event: any, contactPerson: any) {\n        if (contactPerson.get('PhoneNumber').value) {\n            this.salesUserService.IsPhoneNumberValid(contactPerson.get('PhoneNumber').value).subscribe(data => {\n                contactPerson.get('IsPhoneNumberConfirmed').setValue(data);\n            })\n        } else {\n            contactPerson.get('IsPhoneNumberConfirmed').setValue(true);\n        }\n    }\n\n    getNewContactPerson(): FormGroup {\r\n        var _contactPersonForm = this.fb.group({\r\n            Name: this.fb.control(null),\n            PhoneNumber: this.fb.control(null, [Validators.required, Validators.pattern(this.regexPhone)]),\n            Email: this.fb.control(null, [Validators.required, Validators.email]),\r\n            IsPhoneNumberConfirmed: this.fb.control(true)\r\n        });\r\n        return _contactPersonForm;\r\n    }\r\n\n\n    removeContactPerson(idx: number) {\r\n        (<FormArray>this.Parent.get('ContactPersons')).removeAt(idx);\r\n    }\n\n    addContactPerson(): void {\r\n        var contactPerson = new ContactPersonModel();\r\n        (<FormArray>this.Parent.get('ContactPersons')).push(this.getNewContactPerson());\r\n    }\n\n}\n","<div [formGroup]=\"Parent\" *ngIf=\"Parent.get('ContactPersons')['controls'].length > 0\">\r\n    <ng-container formArrayName=\"ContactPersons\">\r\n        <ng-container *ngFor=\"let contactperson of Parent.get('ContactPersons')['controls']; let i = index;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"row\" [formGroupName]=\"i\">\r\n                        <div class=\"col-sm-3 new-company\">\r\n                            <div class=\"form-group\">\r\n                                <div>\r\n                                    <input class=\"form-control newContactPerson\"\r\n                                           id=\"CustomerDetails_Name_{{i}}\" formControlName=\"Name\"\r\n                                           placeholder=\"Contact Person\" type=\"text\" value=\"\">\r\n                                    <!--<div *ngIf=\"contactperson.controls['Name'].errors\">\r\n                                        <span class=\"text-danger\"\r\n                                              *ngIf=\"contactperson.controls['Name'].errors?.required\">\r\n                                            Contact Person is required\r\n                                        </span>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control input-phoneformat phoneNumber\" (blur)=\"onChangeMobileNumber($event, contactperson)\" placeholder=\"Mobile Number\"\r\n                                       id=\"CustomerDetails_PhoneNumber_{{i}}\" name=\"PhoneNumber\"\r\n                                       formControlName=\"PhoneNumber\" type=\"text\" value=\"\">\r\n                                <div *ngIf=\"!contactperson.controls['PhoneNumber'].errors && contactperson.controls['IsPhoneNumberConfirmed'].value == false\" class=\"color-orange fs12 pt5\" id=\"mobile-validation-msg\">Unable to verify number! You will miss Text Alerts.</div>\r\n                                <div *ngIf=\"contactperson.controls['PhoneNumber'].errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"contactperson.controls['PhoneNumber'].errors?.required\">\r\n                                        Mobile Number is required\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"text-danger\" *ngIf=\"contactperson.controls['PhoneNumber'].errors?.pattern\">Please, Enter 10 digit Mobile Number.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group custEmail\">\r\n                                <input class=\"form-control email\" id=\"CustomerDetails_Email_{{i}}\" placeholder=\"Email\"\r\n                                       name=\"Email\" formControlName=\"Email\" type=\"email\" value=\"\" />\r\n                                <div *ngIf=\"contactperson.get('Email').errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"contactperson.get('Email').errors?.required\">\r\n                                        Email\r\n                                        is required\r\n                                    </span>\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"contactperson.get('Email').errors?.email\"> Invalid </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-1\">\r\n                            <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeContactPerson(i)\"></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>\r\n<button type=\"button\" class=\"btn btn-link\" (click)=\"addContactPerson()\"><i class=\"fa fa-plus-circle\"></i> Add Contact Person</button>\r\n\r\n\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SalesUserService } from '../sales-user.service';\nimport { map } from 'rxjs/operators';\nimport { Declarations } from 'src/app/declarations.module';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { ConfirmationDialogService } from '../../shared-components/confirmation-dialog/confirmation-dialog.service';\nimport { PricingSectionComponent } from 'src/app/shared-components/pricing-section/pricing-section.component';\nimport { ContactPersonModel, FeeModel, GeneralNote, Geocode, MapConstants } from '../sales-user.model';\nimport { SourcingRequestStatus, TierPricingType } from 'src/app/app.enum';\nimport { DropDown } from 'src/app/app.constants';\r\ndeclare var CurrentUserId: any;\ndeclare var IsSalesUser: boolean;\n\n@Component({\n    selector: 'app-create-sourcing-request',\n    templateUrl: './create-sourcing-request.component.html',\n    styleUrls: ['./create-sourcing-request.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CreateSourcingRequestComponent implements OnInit {\n\n    @ViewChild(PricingSectionComponent) private pricingModuleComponent: PricingSectionComponent;\n    pageloader = false;\n    keyword = 'Code';\n    Approved_Terminals_keyword = \"Name\";\n    public PrcingCodevalue = '';\n    popoverTitle = 'Create PO';\n    popoverMessage = 'Are you sure want to create PO?';\n    cancelClicked = false;\n    isPriceCodeLoading = false;\n    public userId: number;\n    sourcingRequestForm: FormGroup;\n    public editSourcingId: number = 0;\n    IsLoading = false;\n    formSubmited = false;\n    public companyExits = false;\n    public isPersonNew = true;\n    public TruckTypeLoadList = [];\n    public FreightOnBoardTypesList = [];\n    public allJobList: Array<DropDown> = [];\n    public countryList = [];\n    public currucyList = [];\n    public UomList = [];\n    public statesList = [];\n    public filteredStatesList = [];\n    public FuelProductsList = [];\n    public FeeTypesList = [];\n    public FeeSubTypesList = [];\n    public FeeConstraintTypesList = [];\n    public PaymentMethodsList = [];\n    public RackAvgPricingTypesList = [];\n    public CompanyContactPersonsList = [];\n    public CitySourcingGroupTerminalPriceAvailableList = [];\n    public SourcingCityGroupTerminalsList = [];\n    public ClosedTerminalList = [];\n    public OpisTerminalList = [];\n    public CompanyContactPersonsDetails: any;\n    public AllTPOCompaniesList: Array<DropDown> = [];\n    public RequestStatus = SourcingRequestStatus;\n    public GeneralNotesHistory: GeneralNote[] = [];\n    public pricingCodes = [];\n    public pricingfeedTypeId = 0;\n    public pricingfuelClassTypeId = 0;\n    public UserContext: any = {};\n    public IsSuppressPricing = false;\n    public isValidMobile: boolean = true;\n    public billableList = [{ Id: '1', Name: 'Net' }, { Id: '2', Name: 'Gross' }];\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\n    //public isShowNote:boolean=false;\n    @ViewChild('approveTerminalAuto') approveTerminalAuto;\n    public LeadFees: FeeModel[];\n    public displayCurrancy: string;\n    public isSalesUserType: boolean;\n    public countryGroupList = [];\n    public DispatchRegionList = [];\n    public companyPreferenceSetting = false;\n    \n    regexPhone: RegExp = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    popoverLostTitle = 'Request Lost';\n    popoverLostMessage = 'This request will be lost. Are you sure want to lose request?';\n\n    // map settings\n    mapConstants: MapConstants = new MapConstants();\n    UoM: number = 0;\n    public CompDdlSetting = {};\n\n    constructor(private fb: FormBuilder,\n        private salesUserService: SalesUserService,\n        private route_active: ActivatedRoute,\n        private router: Router,\n        private changeDetectorRef: ChangeDetectorRef,\n        private confirmationDialogService: ConfirmationDialogService) {\n\n        this.getUserContext();\n        this.initailizeSourcingReqForm();\n    }\n\n    ngAfterViewInit() {\n        if (typeof CurrentUserId !== \"undefined\") {\n            this.userId = CurrentUserId;\n        }\n    }\n\n    ngOnInit() {\n        this.pageloader = true\n        this.getFreightOnBoardTypes();\n        this.getTruckLoadType();\n        this.getUoMList();\n        this.getCurrecyList();\n        this.getCountryList();\n        // this.setCurrency(1);\n        this.getPaymentMethods();\n        //this.getFuelProducts();\n        this.getStatesOfAllCountries();\n        this.getRackAvgPricingTypes();\n        this.getAllTPOCompanies();\n\n        if (this.f.AddressDetails.get('CountryId').value == 2) { //canada\n            this.mapConstants.CenterLat = 56.14;\n            this.mapConstants.CenterLon = -106.34;\n        }\n        this.isSalesUserType = (typeof IsSalesUser !== undefined) && IsSalesUser;\n\n        this.getcountryGroupList();\n        this.GetDispatchRegions();\n\n        this.CompDdlSetting = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'id',\n            textField: 'text',\n            enableCheckAll: false,\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n    }\n\n    onCompSelect(company: any, isSelected: boolean) {\n        if (isSelected) {\n            this.f.CustomerDetails.get('CompanyId').setValue(company.id);\n            this.getSourcingCompanyContactPersons(company.id);\n            this.getJobLists(company.id, this.f.TruckLoadType.value, this.f.FreightOnBoardType.value);\n            this.isRegularBuyerUpdate(company.id, false);\n        }\n        else {\n            this.CompanyContactPersonsList = [];\n            this.f.AddressDetails['controls']['IsNewJob'].setValue(true);\r\n            this.allJobList = [];\r\n            this.setRegularBuyerValidation(true);\n        }\n        this.ClearAddress();\n        this.f.CustomerDetails.get('UserId').setValue(null);\n        this.f.CustomerDetails.get('PhoneNumber').setValue(null);\n        this.f.CustomerDetails.get('Email').setValue(null);\n        this.f.AddressDetails.get('JobId').setValue(null);\n        this.f.AddressDetails.get('JobName').setValue(null);\n        this.f.AddressDetails.get('TempJob').setValue(null);\n    }\n\n    onJobSelect(job: any, companyName: string, isSelected: boolean) {\n\n        if (isSelected) {\n            this.f.AddressDetails.get('JobId').setValue(job.id);\n            this.f.AddressDetails.get('JobName').setValue(job.text);\n            this.getJobDetails(job.id, companyName);\n        }\n        else {\n            this.f.AddressDetails.get('JobId').setValue(null);\n            this.f.AddressDetails.get('JobName').setValue(null);\n            //this.sourcingRequestForm.get('AddressDetails').reset();\n            // this.f.AddressDetails.get('DisplayJobID').setValue(null);\n            // this.f.AddressDetails.get('Address').setValue(null);\n            // this.f.AddressDetails.get('ZipCode').setValue(null);\n            // this.f.AddressDetails.get('City').setValue(null);\n            // this.f.AddressDetails.get('CountyName').setValue(null);\n            // this.f.AddressDetails.get('StateId').setValue(null);\n            // this.f.AddressDetails.get('Latitude').setValue(null);\n            // this.f.AddressDetails.get('Longitude').setValue(null);\n        }\n    }\n\n    companyExistanceChanged(isNew: boolean) {\n        if (isNew) {\n            this.f.CustomerDetails.get('CompanyName').setValue(null);\n            this.f.CustomerDetails.get('UserId').setValue(null);\n            this.f.CustomerDetails.get('PhoneNumber').setValue(null);\n            this.f.CustomerDetails.get('Email').setValue(null);\n\n            this.f.AddressDetails.get('JobId').setValue(null);\n            this.f.AddressDetails.get('JobName').setValue(null);\n\n            this.f.AddressDetails.get('IsNewJob').setValue(true);\n            this.setRegularBuyerValidation(isNew);\n            this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(this.companyPreferenceSetting);\n            this.f.CustomerDetails.get('TempCompany').setValue(null);\n            this.onCompSelect(null, false);\n        }\n        else {\r\n            this.ClearAddress();\r\n        }\n        this.clickNewPerson(true);\n    }\n\n    setRegularBuyerValidation(isNewCompany: boolean) {\r\n        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(this.companyPreferenceSetting);\n        this.pricingModuleComponent.toggleSuppressPricing(this.companyPreferenceSetting);\n        this.f.IsRegularBuyer.setValue(!isNewCompany);\n    }\r\n\n\n    initailizeSourcingReqForm() {\n        this.sourcingRequestForm = this.fb.group({\n            Id: this.fb.control(null),\n            TruckLoadType: this.fb.control(null),\n            FreightOnBoardType: this.fb.control(null),\n            AccountingCompanyId: this.fb.control(null),\n            DisplayRequestId: this.fb.control(null),\n            RequestName: this.fb.control(null),\n            SalesUserId: this.fb.control(null),\n            GeneralNote: this.fb.control(null),\n            RequestStatus: this.fb.control(0),\n            IsSupressOrderPricing: this.fb.control(false),\n            IsRegularBuyer: this.fb.control(false),\n            CustomerDetails: this.fb.group({\n                Id: this.fb.control(null),\n                UserId: this.fb.control(null),\n                CompanyId: this.fb.control(null),\n                IsNewCompany: this.fb.control(true),\n                CompanyName: this.fb.control(null, Validators.required),\n                Name: this.fb.control(null),\n                PhoneNumber: this.fb.control(null),\n                Email: this.fb.control(null, [Validators.required, Validators.email]),\n                IsInvitationEnabled: this.fb.control(null),\n                IsNotifyDeliveries: this.fb.control(null),\n                IsNotifySchedules: this.fb.control(null),\n                TempCompany: this.fb.control(null),\n                ContactPersons: this.initializeContactPersons([]),\n            }),\n            AddressDetails: this.fb.group({\n                Id: this.fb.control(null),\n                JobName: this.fb.control(null, Validators.required),\n                DisplayJobID: this.fb.control(null),\n                JobId: this.fb.control(null),\n                IsNewJob: this.fb.control(true),\n                Address: this.fb.control(null),\n                City: this.fb.control(null, Validators.required),\n                StateId: this.fb.control(null, Validators.required),\n                CountryId: this.fb.control(null, Validators.required),\n                CountyName: this.fb.control(null),\n                CountryName: this.fb.control(null),\n                CountryCode: this.fb.control(null),\n                StateName: this.fb.control(null),\n                Currency: this.fb.control(null),\n                ZipCode: this.fb.control(null),\n                IsProFormaPoEnabled: this.fb.control(null),\n                SignatureEnabled: this.fb.control(null),\n                IsGeocodeUsed: this.fb.control(true),\n                Latitude: this.fb.control(this.mapConstants.CenterLat, Validators.pattern('^[0-9.-]*$')),\n                Longitude: this.fb.control(this.mapConstants.CenterLon, Validators.pattern('^[0-9.-]*$')),\n                TimeZoneName: this.fb.control(null),\n                LocationManagedType: this.fb.control(null),\n                IsCompanyOwned: this.fb.control(null),\n                MarineUoM: this.fb.control(null),\n                IsMarineLocation: this.fb.control(null),\n                InventoryDataCaptureType: this.fb.control(null),\n                UOM: this.fb.control(1),\n                DispatchRegionId: this.fb.control(null),\n                TempJob: this.fb.control(null),\n            }),\n            FuelDetails: this.fb.group({\n                Id: this.fb.control(null),\n                FuelDisplayGroupId: this.fb.control(1),\n                FuelTypeId: this.fb.control(null, Validators.required),\n                QuantityTypeId: this.fb.control(3),\n                Quantity: this.fb.control(0, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\n                MinimumQuantity: this.fb.control(0, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\n                MaximumQuantity: this.fb.control(0, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\n                QuantityIndicatorTypes: this.fb.control(1),\n                NonStandardFuelName: this.fb.control(null),\n                NonStandardFuelDescription: this.fb.control(null),\n                IsTierPricing: this.fb.control(null),\n                PricingTypeId: this.fb.control(2),\n                PricePerGallon: this.fb.control(null),\n                Fees: this.intilizeFuelRequestFees(),\n            }),\n            FuelDeliveryDetails: this.fb.group({\n                Id: this.fb.control(null),\n                DeliveryTypeId: this.fb.control(2),\n                StartDate: this.fb.control(moment(new Date()).format('MM/DD/YYYY')),\n                EndDate: this.fb.control(null),\n                StartTime: this.fb.control('8:00 AM'),\n                EndTime: this.fb.control('5:00 PM'),\n                SingleDeliverySubTypes: this.fb.control(0),\n                PaymentMethods: this.fb.control(null),\n                PaymentTermId: this.fb.control(1),\n                NetDays: this.fb.control(0),\n                IsPrePostDipRequired: this.fb.control(null),\n                OrderEnforcementId: this.fb.control(1),\n            }),\n            FuelPricingDetails: this.fb.group({\n                Id: this.fb.control(null),\n                LeadRequestId: this.fb.control(null),\n                PricingTypeId: this.fb.control(2),\n                PricePerGallon: this.fb.control(null, Validators.required),\n                Code: this.fb.control(null),\n                TempCode: this.fb.control(null),\n                CodeId: this.fb.control(null),\n                CodeDescription: this.fb.control(null),\n                RackAvgTypeId: this.fb.control(1),\n                RackPrice: this.fb.control(0),\n                EnableCityRack: this.fb.control(null),\n                TerminalName: this.fb.control(null),\n                TempTerminalName: this.fb.control(null),\n                TerminalId: this.fb.control(null),\n                SupplierCostMarkupTypeId: this.fb.control(1),\n                SupplierCostMarkupValue: this.fb.control(0),\n                SupplierCost: this.fb.control(null),\n                SupplierCostTypeId: this.fb.control(null),\n                MarkertBasedPricingTypeId: this.fb.control(null),\n                CityGroupTerminalId: this.fb.control(null),\n                CityGroupTerminalName: this.fb.control(null),\n                CityGroupTerminalStateId: this.fb.control(null),\n                BrokerMarkUp: this.fb.control(null),\n                Currency: this.fb.control(null),\n                ExchangeRate: this.fb.control(null),\n                IsTierPricingRequired: this.fb.control(null),\n                DifferentFuelPrices: this.fb.control(null),\n                FormattedPricing: this.fb.control(null),\n                FuelTypeId: this.fb.control(null),\n                TierPricing: this.fb.group({\n                    TierPricingType: this.fb.control(TierPricingType.VolumeBased),\n                    IsResetCumulation: this.fb.control(null),\n                    AboveQuantityPricing: this.fb.control(null),\n                    Pricings: this.fb.array([]),\n                    ResetCumulationSetting: this.fb.group({\n                        CumulationType: this.fb.control(1),\n                        Day: this.fb.control(null),\n                        Date: this.fb.control(null),\n                    }),\n                    DisplayCumulationFrequency: this.fb.control(null)\n                }),\n                PricingSourceId: this.fb.control(1),\n                PricingNote: this.fb.control(null),\n                TempPricingCodeDetails: this.fb.control(null),\n                FuelPricingDetails: this.fb.group({\n                    PricingSourceId: this.fb.control(1),\n                    PricingCode: this.fb.control({ Id: null, Code: null, Description: null })\n                }),\n            }),\n            AdditionalDetailsViewModel: this.fb.group({\n                Id: this.fb.control(null),\n                IsAssetTracked: this.fb.control(null),\n                IsAssetDropStatusEnabled: this.fb.control(null)\n            })\n        });\n\n    }\n    get f() { return this.sourcingRequestForm.controls; }\n    removeValidator() {\n        this.f.CustomerDetails.get('CompanyName').setValidators([]);\n        this.f.CustomerDetails.get('CompanyName').updateValueAndValidity();\n    }\n    addValidators() {\n        let val = [Validators.required];\n        this.f.CustomerDetails.get('CompanyName').setValidators(val);\n        this.f.CustomerDetails.get('CompanyName').updateValueAndValidity();\n    }\n\n    initializeContactPersons(contactPersons: ContactPersonModel[]) {\n        let contactPersonsForm = this.fb.array([]);\n        for (var i = 0; i < contactPersons.length; i++) {\n            var _contactPersonForm = this.fb.group({\r\n                Name: this.fb.control(contactPersons[i].Name),\n                PhoneNumber: this.fb.control(contactPersons[i].PhoneNumber, [Validators.required, Validators.pattern(this.regexPhone)]),\n                Email: this.fb.control(contactPersons[i].Email, [Validators.required, Validators.email]),\r\n                IsValidMobileNumber: this.fb.control(contactPersons[i].IsPhoneNumberConfirmed)\r\n            });\r\n            contactPersonsForm.push(_contactPersonForm);\r\n        }\r\n        return contactPersonsForm;\r\n    }\n\n    initializeContactPerson(contactPerson: ContactPersonModel) {\n        return this.fb.group({\r\n            Name: this.fb.control(contactPerson.Name),\n            PhoneNumber: this.fb.control(contactPerson.PhoneNumber, [Validators.required, Validators.pattern(this.regexPhone)]),\n            Email: this.fb.control(contactPerson.Email, [Validators.required, Validators.email]),\r\n            IsPhoneNumberConfirmed: this.fb.control(contactPerson.IsPhoneNumberConfirmed)\r\n        });\r\n    }\n\n    intilizeFuelRequestFees() {\n        let _FRFArray = this.fb.array([]);\n        _FRFArray.push(this.fb.group({\n            FeeTypeId: this.fb.control(null),\n            FeeSubTypeId: this.fb.control(null),\n            FeeSubTypeName: this.fb.control(null),\n            Fee: this.fb.control(null),\n            FeeDetails: this.fb.control(null),\n            FeeConstraintTypeId: this.fb.control(null),\n            IncludeInPPG: this.fb.control(null),\n            OtherFeeTypeId: this.fb.control(null),\n        }));\n        return _FRFArray;\n    }\n\n    public getDetailsPage(Id: any) {\n        this.router.navigate(['SourcingRequest/Details/' + Id]);\n    }\n\n\n    clickNewPerson(isnew) {\n        this.isPersonNew = isnew;\n        if (isnew) {\n            this.f.CustomerDetails.get('Name').setValidators([Validators.required]);\n            this.f.CustomerDetails.get('UserId').setValidators([]);\n\n        } else {\n            this.f.CustomerDetails.get('UserId').setValidators([Validators.required]);\n            this.f.CustomerDetails.get('Name').setValidators([]);\n        }\n        this.f.CustomerDetails.get('Name').updateValueAndValidity();\n        this.f.CustomerDetails.get('UserId').updateValueAndValidity();\n\n    }\n    getPreferencesSettings() {\n        this.IsLoading = true;\n        let _this = this;\n        this.salesUserService.GetPreferencesSettings().subscribe(data => {\n            if (data) {\n                this.companyPreferenceSetting = data.IsSupressOrderPricing;\n                var FreightOnBoardType = this.FreightOnBoardTypesList.find(t => t.Id == data.FreightOnBoardType);\n                var truckload = this.TruckTypeLoadList.find(t => t.Id == data.TruckLoadType);\n                var truckLoadType;\n                if (truckload) {\n                    truckLoadType = truckload.Id;\n                }\n                if (FreightOnBoardType != null) {\n                    this.sourcingRequestForm.get('FreightOnBoardType').patchValue(FreightOnBoardType.Id);\n                }\n                this.sourcingRequestForm.get('TruckLoadType').patchValue(truckLoadType);\n                this.sourcingRequestForm.get('CustomerDetails').patchValue(data.CustomerDetails);\n                this.sourcingRequestForm.get('AddressDetails').patchValue(data.AddressDetails);\n                this.sourcingRequestForm.get('IsSupressOrderPricing').patchValue(data.IsSupressOrderPricing);\n                this.setCurrency(data.AddressDetails.Currency);\n                this.sourcingRequestForm.controls['FuelDetails']['controls']['FuelDisplayGroupId'].patchValue(data.FuelDetails.FuelDisplayGroupId);\n                this.sourcingRequestForm.controls['FuelDetails']['controls']['QuantityTypeId'].patchValue(data.FuelDetails.QuantityTypeId);\n\n                if (!_this.f.IsSupressOrderPricing.value) {\n                    _this.f.FuelPricingDetails.get('PricePerGallon').setValidators([Validators.required]);\n                }\n                _this.f.FuelPricingDetails.get('TierPricing').get('ResetCumulationSetting').get('CumulationType').setValue(1);\n                if (_this.pricingModuleComponent) {\n                    _this.pricingModuleComponent.setPricingCode();\n                }\n\n                if (!this.editSourcingId) {\n                    if (this.DispatchRegionList && this.DispatchRegionList.length == 1) {\n                        this.sourcingRequestForm.get('AddressDetails').get('DispatchRegionId').setValue(this.DispatchRegionList[0].Id);\n                    }\n                }\n                this.IsLoading = false;\n                this.pageloader = false;\n            }\n        });\n    }\n    getAllTPOCompanies() {\n        this.IsLoading = true;\n        this.salesUserService.GetAllTPOCompanies().subscribe((data => {\n            if (data) {\n                var listdata = data.map(item => {\n                    return {\n                        id: item.Id,\n                        text: item.Name\n                    }\n                });\n                this.AllTPOCompaniesList = listdata;\n\n                //this.IsLoading = false;\n            }\n            let esourcingId: number = this.route_active.snapshot.params.Id;\n            if (esourcingId && esourcingId > 0) {\n                this.editSourcingId = esourcingId;\n                this.getSourcingDetails();\n            } else {\n                this.getFuelProducts();\n                this.getPreferencesSettings();\n            }\n            this.IsLoading = false;\n        }));\n    }\n    public getSourcingCompanyContactPersons(event: any) {\n        var companyId = event;\n        this.IsLoading = true;\n\n        this.salesUserService.GetSourcingCompanyContactPersons(companyId).subscribe(data => {\n            if (data) {\n                this.CompanyContactPersonsList = data;\n                let companyname = this.AllTPOCompaniesList.filter(x => x.id == companyId);\n                this.sourcingRequestForm.get('CustomerDetails').get('CompanyName').setValue(companyname[0].text);\n                this.IsLoading = false;\n            } else {\n                this.IsLoading = false;\n            }\n        });\n    }\n    public getSourcingContactPersonDetails(userId: number) {\n        this.salesUserService.GetSourcingContactPersonDetails(userId).subscribe(data => {\n            if (data) {\n                this.CompanyContactPersonsDetails = data;\n                // this.CompanyContactPersonsDetails['IsNewCompany']=false;\n                this.sourcingRequestForm.get('CustomerDetails').get('PhoneNumber').setValue(this.CompanyContactPersonsDetails.PhoneNumber);\n                this.sourcingRequestForm.get('CustomerDetails').get('Email').setValue(this.CompanyContactPersonsDetails.Email);\n                // this.sourcingRequestForm.get('CustomerDetails').patchValue(this.CompanyContactPersonsDetails);\n            }\n        });\n    }\n\n    public getTruckLoadType() {\n        this.TruckTypeLoadList = [];\n        this.salesUserService.GetTruckLoadType().subscribe(data => {\n            if (data && data.length > 0) {\n                this.TruckTypeLoadList = data;\n                this.sourcingRequestForm.get('TruckLoadType').setValue(data[0].Id);\n            }\n        });\n    }\n    public getFreightOnBoardTypes() {\n        this.FreightOnBoardTypesList = [];\n        this.salesUserService.GetFreightOnBoardTypes().subscribe(data => {\n            if (data && data.length > 0) {\n                this.FreightOnBoardTypesList = data;\n                this.sourcingRequestForm.get('FreightOnBoardType').setValue(data[0].Id);\n            }\n        });\n    }\n\n    public getCountryList() {\n        this.salesUserService.GetCountryList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.countryList = data;\n            }\n        });\n    }\n\n    public getCurrecyList() {\n        this.salesUserService.GetCurrenyList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.currucyList = data;\n            }\n        });\n    }\n    public getUoMList() {\n        this.salesUserService.GetUoMList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.UomList = data;\n            }\n        });\n    }\n\n    public getStatesOfAllCountries(countryId?: number) {\n        this.salesUserService.GetStatesOfAllCountries(countryId).subscribe(data => {\n            if (data && data.length > 0) {\n                this.statesList = data;\n                this.filteredStatesList = this.statesList;\n            }\n        });\n    }\n    public getcountryGroupList() {\n        this.salesUserService.GetCountryGroupList(4).subscribe(data => {\n            if (data && data.length > 0) {\n                this.countryGroupList = data;\n            }\n        });\n    }\n\n    public getJobLists(companyId, isFtl, foAsTerminal) {\n        let companyName = this.AllTPOCompaniesList.find(t => t.id == companyId).text;\n        let ftlvalue = isFtl == \"FullTruckLoad\" ? true : false;\n        let tervalue = foAsTerminal == \"Terminal\" ? true : false;\n        this.salesUserService.GetJobLists(companyName, ftlvalue, tervalue).subscribe(data => {\n            if (data) {\n                let joblistdata = data.map(item => {\n                    return {\n                        id: item.Id,\n                        text: item.Name\n                    }\n                });\n                this.allJobList = joblistdata;\n            }\n        });\n    }\n    public getJobDetails(jobId: string, companyName: string) {\n        let job = this.allJobList.find(x => x.id == jobId);\n        if (job != null) {\n            this.salesUserService.GetJobDetails(job.text, companyName).subscribe(data => {\n                if (data) {\n                    this.sourcingRequestForm.get('AddressDetails').patchValue(data.AddressDetails);\n                }\n            });\n        }\n\n\n    }\n\n    public getFuelProducts() {\n        //this.f.FuelDetails.get('FuelTypeId').setValue(null);\n\n        let companyId = this.sourcingRequestForm.controls['CustomerDetails']['controls']['CompanyId'].value || 0;\n        let jobId = this.sourcingRequestForm.controls['AddressDetails']['controls']['JobId'].value || 0;\n\n        var productDisplayGroupId = this.f.FuelDetails.get('FuelDisplayGroupId').value ? this.f.FuelDetails.get('FuelDisplayGroupId').value : 1;\n        this.IsLoading = true;\n        this.salesUserService.GetFuelProducts(productDisplayGroupId, companyId, jobId).subscribe(data => {\n            if (data) {\n                this.FuelProductsList = data;\n                this.IsLoading = false;\n            } else {\n                this.IsLoading = false;\n            }\n        });\n    }\n    public getProductListByZip() {\n        //this.f.FuelDetails.get('FuelTypeId').setValue(null);\n        let zipCode = this.sourcingRequestForm.controls['AddressDetails']['controls']['ZipCode'].value;\n        this.IsLoading = true;\n        this.salesUserService.GetProductListByZip(zipCode).subscribe(data => {\n            if (data) {\n                this.FuelProductsList = data;\n                this.IsLoading = false;\n            } else {\n                this.IsLoading = false;\n            }\n        });\n    }\n\n    public getAllFeeTypes(companyId: any, currency: any, truckLoadType: any) {\n        this.salesUserService.GetAllFeeTypes(companyId, currency, truckLoadType).subscribe(data => {\n            if (data) {\n                this.FeeTypesList = data;\n            }\n        });\n    }\n    public getAllFeeSubTypes(feeTypeId: any, Currency: any) {\n        this.salesUserService.GetAllFeeSubTypes(feeTypeId, Currency).subscribe(data => {\n            if (data) {\n                this.FeeSubTypesList = data;\n            }\n        });\n    }\n    public getAllFeeConstraintTypes() {\n        this.salesUserService.GetAllFeeConstraintTypes().subscribe(data => {\n            if (data) {\n                this.FeeConstraintTypesList = data;\n            }\n        });\n    }\n    public getPaymentMethods() {\n        this.salesUserService.PaymentMethods().subscribe(data => {\n            if (data) {\n                this.PaymentMethodsList = data;\n            }\n        });\n    }\n    public getRackAvgPricingTypes() {\n        this.salesUserService.GetRackAvgPricingTypes().subscribe(data => {\n            if (data) {\n                this.RackAvgPricingTypesList = data;\n            }\n        });\n    }\n\n    addFees() {\n        let fee = this.sourcingRequestForm.get('FuelDetails').get('FuelRequestFees') as FormArray;\n        fee.push(\n            this.fb.group({\n                FeeTypeId: this.fb.control(null, Validators.required),\n                FeeSubTypeId: this.fb.control(null, Validators.required),\n                FeeSubTypeName: this.fb.control(null, Validators.required),\n                Fee: this.fb.control(null, Validators.required),\n                FeeDetails: this.fb.control(null, Validators.required),\n                FeeConstraintTypeId: this.fb.control(null, Validators.required),\n                IncludeInPPG: this.fb.control(null, Validators.required),\n                OtherFeeTypeId: this.fb.control(null, Validators.required),\n            })\n        );\n    }\n\n    public isSourcingCompanyExist() {\n        this.companyExits = false;\n        if (this.f.CustomerDetails.get('CompanyName').value) {\n            this.salesUserService.IsSourcingCompanyExist(this.f.CustomerDetails.get('IsNewCompany').value, this.f.CustomerDetails.get('CompanyName').value).subscribe(data => {\n                if (data != null || data != undefined) {\n                    this.companyExits = data;\n                }\n            });\n        }\n\n    }\n    public GetDispatchRegions() {\n        this.DispatchRegionList = [];\n        this.salesUserService.GetDispatchRegions().subscribe(data => {\n            if (data && data.length > 0) {\n                this.DispatchRegionList = data;\n                if (data.length == 1) {\n                    this.sourcingRequestForm.get('AddressDetails').get('DispatchRegionId').setValue(data[0].Id);\n                }\n            }\n        });\n    }\n\n    public getSourcingDetails() {\n        this.pageloader = true;\n        this.changeDetectorRef.detectChanges()\n        let _this = this;\n        // this.initailizeSourcingReqForm();\n        this.salesUserService.GetSourcingDetailsById(this.editSourcingId).subscribe(data => {\n            if (data) {\n                // this.sourcingRequestForm.patchValue(data);\n                this.sourcingRequestForm.get('Id').patchValue(data.Id);\n                this.sourcingRequestForm.get('FreightOnBoardType').patchValue(data.FreightOnBoardType);\n                this.sourcingRequestForm.get('TruckLoadType').patchValue(data.TruckLoadType);\n                this.sourcingRequestForm.get('AccountingCompanyId').patchValue(data.AccountingCompanyId);\n                this.sourcingRequestForm.get('DisplayRequestId').patchValue(data.DisplayRequestId);\n                this.sourcingRequestForm.get('RequestName').patchValue(data.RequestName);\n                this.sourcingRequestForm.get('RequestStatus').patchValue(data.RequestStatus);\n                this.sourcingRequestForm.get('SalesUserId').patchValue(data.SalesUserId);\n                this.sourcingRequestForm.get('IsSupressOrderPricing').patchValue(data.IsSupressOrderPricing);\n                if (!data.CustomerDetails.IsNewCompany) {\n                    this.getSourcingCompanyContactPersons(data.CustomerDetails.CompanyId);\n                    this.getJobLists(data.CustomerDetails.CompanyId, this.f.TruckLoadType.value, this.f.FreightOnBoardType.value);\n                }\n                if (data.CustomerDetails.UserId) {\n                    this.isPersonNew = false;\n                }\n                this.sourcingRequestForm.get('CustomerDetails').patchValue(data.CustomerDetails);\n                let contactPersons = this.sourcingRequestForm.get('CustomerDetails').get('ContactPersons') as FormArray;\n                if (data.CustomerDetails && data.CustomerDetails.ContactPersons && data.CustomerDetails.ContactPersons.length > 0) {\n                    for (var i = 0; i < data.CustomerDetails.ContactPersons.length; i++) {\n                        contactPersons.push(this.initializeContactPerson(data.CustomerDetails.ContactPersons[i]));\r\n                    }\n                }\n                this.sourcingRequestForm.get('AddressDetails').patchValue(data.AddressDetails);\n                this.sourcingRequestForm.get('FuelDetails').patchValue(data.FuelDetails);\n                this.LeadFees = data.FuelDetails.Fees;\n                this.sourcingRequestForm.get('FuelDeliveryDetails').patchValue(data.FuelDeliveryDetails);\n                this.sourcingRequestForm.get('AdditionalDetailsViewModel').patchValue(data.AdditionalDetailsViewModel);\n                //this.getSourcingCityGroupTerminals(data.AddressDetails.StateId,(data.FuelPricingDetails.Code==\"AXIS\") ? 1 : 2);\n                this.PrcingCodevalue = data.FuelPricingDetails.Code;\n                this.GeneralNotesHistory = data.GeneralNotesHistory;\n                // this.sourcingRequestForm.get('FuelPricingDetails').patchValue(data.FuelPricingDetails);\n                // this.sourcingRequestForm.get('FuelPricingDetails').get('TempCode').patchValue(data.FuelPricingDetails);\n                // this.sourcingRequestForm.get('FuelPricingDetails').get('TempTerminalName').patchValue(data.FuelPricingDetails.TerminalName);\n\n                if (_this.pricingModuleComponent) {\n                    _this.pricingModuleComponent.patchExistingPricingDetails(data.FuelPricingDetails);\n                }\n\n                this.UpdateViewedStatus();\n                this.setCurrency(data.AddressDetails.Currency);\n\n                if (!data.CustomerDetails.IsNewCompany) {\n                    this.f.CustomerDetails.get('TempCompany').setValue([{ id: data.CustomerDetails.CompanyId, text: data.CustomerDetails.CompanyName }]);\n                }\n                if (!data.AddressDetails.IsNewJob) {\n                    this.f.AddressDetails.get('TempJob').setValue([{ id: data.AddressDetails.JobId, text: data.AddressDetails.JobName }]);\n                }\n\n                this.getFuelProducts();\n                this.isRegularBuyerUpdate(data.CustomerDetails.CompanyId, true);\n\n                this.pageloader = false;\n                this.changeDetectorRef.detectChanges();\n            }\n        });\n    }\n\n    onSubmit() {\n        this.formSubmited = true;\n        this.resetPOValidation();\n        this.setSaveValidations();\n        if (this.sourcingRequestForm.invalid || this.companyExits) {\n            return false;\n        }\n\n        if (this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\n            let pricings = this.f.FuelPricingDetails.get('TierPricing').get('Pricings') as FormArray;\n            pricings.controls.forEach((pricing: FormGroup) => {\n                pricing.get('UoM').setValue(this.UoM);\n                pricing.get('Currency').setValue(this.UoM);\n            })\n        }\n\n        if (this.editSourcingId > 0) {\n            this.pageloader = true;\n            this.changeDetectorRef.detectChanges()\n            this.salesUserService.SaveEditSourcingDetails(this.sourcingRequestForm.getRawValue()).subscribe(data => {\n                this.pageloader = false;\n                this.changeDetectorRef.detectChanges()\n                if (data && data.StatusCode == 0) {\n                    Declarations.msgsuccess(\"Request Updated successfully\", undefined, undefined);\n                    this.router.navigate(['SalesUser/SourcingRequest/Index']);\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                    return;\n                }\n            });\n        } else {\n            this.pageloader = true;\n            this.changeDetectorRef.detectChanges()\n            this.salesUserService.CreateSourcingRequest(this.sourcingRequestForm.getRawValue()).subscribe(data => {\n                this.pageloader = false;\n                this.changeDetectorRef.detectChanges()\n                if (data && data.StatusCode == 0) {\n                    Declarations.msgsuccess(\"Request created successfully.\", undefined, undefined);\n                    this.router.navigate(['SalesUser/SourcingRequest/Index']);\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                    return;\n                }\n            });\n        }\n    }\n\n    setSaveValidations() {\n        if (this.f.CustomerDetails.get('IsNewCompany').value) {\n            this.f.CustomerDetails.get('Name').setValidators([Validators.required]);\n            this.f.CustomerDetails.get('Name').updateValueAndValidity();\n        } else {\n            if (this.isPersonNew) {\n                this.f.CustomerDetails.get('Name').setValidators([Validators.required]);\n                this.f.CustomerDetails.get('Name').updateValueAndValidity();\n            } else {\n                this.f.CustomerDetails.get('UserId').setValidators([Validators.required]);\n                this.f.CustomerDetails.get('UserId').updateValueAndValidity();\n            }\n        }\n\n        if (this.f.FuelDetails.get('QuantityTypeId').value == 1) {\n            this.f.FuelDetails.get('Quantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('Quantity').updateValueAndValidity();\n        } else if (this.f.FuelDetails.get('QuantityTypeId').value == 2) {\n            this.f.FuelDetails.get('MinimumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MinimumQuantity').updateValueAndValidity();\n\n            this.f.FuelDetails.get('MaximumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MaximumQuantity').updateValueAndValidity();\n        }\n\n        this.setNetDaysValidation(this.sourcingRequestForm.get('IsSupressOrderPricing').value);\n    }\n    createPO() {\n        this.setPOValidation();\n        this.formSubmited = true;\n        this.pageloader = true;\n        if (this.sourcingRequestForm.valid && !this.companyExits) {\n            this.pageloader = true;\n            this.salesUserService.CreateOrderFromSourcingRequest(this.sourcingRequestForm.value).subscribe(data => {\n                if (data.StatusCode == 0) {\n                    Declarations.msgsuccess(\"PO created successfully.\", undefined, undefined);\n                    this.router.navigate([]).then(result => { window.location.href = \"/Supplier/Order/View\"; });\n                    this.pageloader = false;\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                    this.pageloader = false;\n                    return;\n                }\n            });\n        } else {\n            this.pageloader = false;\n        }\n    }\n\n    setPOValidation() {\n        let required = [Validators.required];\n        this.f.TruckLoadType.setValidators(required);\n        this.f.TruckLoadType.updateValueAndValidity();\n\n        this.f.FreightOnBoardType.setValidators(required);\n        this.f.FreightOnBoardType.updateValueAndValidity();\n\n        // this.f.AccountingCompanyId.setValidators(required);\n        // this.f.AccountingCompanyId.updateValueAndValidity();\n\n        // this.f.DisplayRequestId.setValidators(required);\n        // this.f.DisplayRequestId.updateValueAndValidity();\n\n        // this.f.RequestName.setValidators(required);\n        // this.f.RequestName.updateValueAndValidity();\n\n        if (this.f.FuelDeliveryDetails.get('DeliveryTypeId').value == 1) {\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').setValidators(required);\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').updateValueAndValidity();\n        } else {\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').setValidators([]);\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').updateValueAndValidity();\n        }\n\n        this.f.FuelDeliveryDetails.get('StartDate').setValidators(required);\n        this.f.FuelDeliveryDetails.get('StartDate').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('StartTime').setValidators(required);\n        this.f.FuelDeliveryDetails.get('StartTime').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('EndTime').setValidators(required);\n        this.f.FuelDeliveryDetails.get('EndTime').updateValueAndValidity();\n\n        if (this.f.FuelDetails.get('QuantityTypeId').value == 1) {\n            this.f.FuelDetails.get('Quantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('Quantity').updateValueAndValidity();\n        } else if (this.f.FuelDetails.get('QuantityTypeId').value == 2) {\n            this.f.FuelDetails.get('MinimumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MinimumQuantity').updateValueAndValidity();\n\n            this.f.FuelDetails.get('MaximumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MaximumQuantity').updateValueAndValidity();\n        } else {\n            this.f.FuelDetails.get('Quantity').setValidators([Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('Quantity').updateValueAndValidity();\n            this.f.FuelDetails.get('MinimumQuantity').setValidators([Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MinimumQuantity').updateValueAndValidity();\n            this.f.FuelDetails.get('MaximumQuantity').setValidators([Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MaximumQuantity').updateValueAndValidity();\n        }\n\n        this.f.AddressDetails.get('CountyName').setValidators(required);\n        this.f.AddressDetails.get('CountyName').updateValueAndValidity();\n        this.f.AddressDetails.get('StateId').setValidators(required);\n        this.f.AddressDetails.get('StateId').updateValueAndValidity();\n        this.f.AddressDetails.get('ZipCode').setValidators(required);\n        this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\n        this.f.AddressDetails.get('Address').setValidators(required);\n        this.f.AddressDetails.get('Address').updateValueAndValidity();\n        this.setNetDaysValidation(this.sourcingRequestForm.get('IsSupressOrderPricing').value);\n\n\n        this.f.CustomerDetails.get('PhoneNumber').setValidators(required);\n        this.f.CustomerDetails.get('PhoneNumber').updateValueAndValidity();\n        this.f.CustomerDetails.get('Email').setValidators(required);\n        this.f.CustomerDetails.get('Email').updateValueAndValidity();\n    }\n\n    setNetDaysValidation(isSuppressPricing: boolean) {\n        if (this.f.FuelDeliveryDetails.get('PaymentTermId').value == 1 && !isSuppressPricing) {\n            this.f.FuelDeliveryDetails.get('NetDays').setValidators([Validators.required, Validators.min(1)]);\n            this.f.FuelDeliveryDetails.get('NetDays').updateValueAndValidity();\n        } else {\n            this.f.FuelDeliveryDetails.get('NetDays').setValidators([]);\n            this.f.FuelDeliveryDetails.get('NetDays').updateValueAndValidity();\n        }\n    }\n    resetPOValidation() {\n\n        this.f.TruckLoadType.setValidators([]);\n        this.f.TruckLoadType.updateValueAndValidity();\n\n        this.f.FreightOnBoardType.setValidators([]);\n        this.f.FreightOnBoardType.updateValueAndValidity();\n\n        this.f.AccountingCompanyId.setValidators([]);\n        this.f.AccountingCompanyId.updateValueAndValidity();\n\n        this.f.DisplayRequestId.setValidators([]);\n        this.f.DisplayRequestId.updateValueAndValidity();\n\n        this.f.RequestName.setValidators([]);\n        this.f.RequestName.updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').setValidators([]);\n        this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('StartDate').setValidators([]);\n        this.f.FuelDeliveryDetails.get('StartDate').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('StartTime').setValidators([]);\n        this.f.FuelDeliveryDetails.get('StartTime').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('EndTime').setValidators([]);\n        this.f.FuelDeliveryDetails.get('EndTime').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('NetDays').setValidators([]);\n        this.f.FuelDeliveryDetails.get('NetDays').updateValueAndValidity();\n\n        this.f.CustomerDetails.get('PhoneNumber').setValidators([]);\n        this.f.CustomerDetails.get('PhoneNumber').updateValueAndValidity();\n        this.f.CustomerDetails.get('Email').setValidators([]);\n        this.f.CustomerDetails.get('Email').updateValueAndValidity();\n        this.f.AddressDetails.get('ZipCode').setValidators([]);\n        this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\n        this.f.AddressDetails.get('Address').setValidators([]);\n        this.f.AddressDetails.get('Address').updateValueAndValidity();\n        this.f.AddressDetails.get('CountyName').setValidators([]);\n        this.f.AddressDetails.get('CountyName').updateValueAndValidity();\n    }\n\n\n    getAddress() {\n\n        let address = this.f.AddressDetails.get('Address').value || '';\n        let state = this.f.AddressDetails.get('StateName').value || '';\n        let country = this.f.AddressDetails.get('CountryCode').value || ''\n        let city = this.f.AddressDetails.get('City').value || '';\n        let zipcode = this.f.AddressDetails.get('ZipCode').value || '';\n\n        if (address == '' || state == '' || country == '' || zipcode == '')\n            return;\n\n        address = address + \" \" + city + \" \" + state + \" \" + country + \" \" + zipcode;\n\n        this.salesUserService.GetAddress(address).subscribe((data) => {\n            this.updateAddressData(data)\n        })\n    }\n\n    stateChanged() {\n        if (this.pricingModuleComponent) {\n            this.pricingModuleComponent.getCityGroupTerminals();\n        }\n        this.getAddress();\n        this.setBillableQuantity();\n    }\n\n    setBillableQuantity() {\n        let state = this.statesList.find(st => st.StateId == this.f.AddressDetails.get('StateId').value);\n        if (state && state.QuantityIndicatorId) {\n            this.f.FuelDetails.get('FuelQuantity').get('QuantityIndicatorTypes').setValue(state.QuantityIndicatorId);\n        }\n    }\n\n    public acceptRequest() {\n        this.salesUserService.ChangesSourcingRequestStatus(this.RequestStatus.Accepted, this.editSourcingId).subscribe(data => {\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(\"Request Accepted.\", undefined, undefined);\n                this.router.navigate(['SalesUser/SourcingRequest/Index']);\n            } else {\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                return;\n            }\n        });\n    }\n\n    public loseRequest() {\n        this.salesUserService.ChangesSourcingRequestStatus(this.RequestStatus.Lost, this.editSourcingId).subscribe(data => {\n            if (data.StatusCode == 0) {\n                Declarations.msginfo(\"Request Lost.\", undefined, undefined);\n                this.router.navigate(['SalesUser/SourcingRequest/Index']);\n            } else {\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                return;\n            }\n        });\n    }\n    // openPriceCodeModal(pricingcodeModal) {\n    //   this.getPricingCodes();\n    //   this.modalService.open(pricingcodeModal, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true });\n    // }\n\n    public isCitySourcingGroupTerminalPriceAvailable(jobId: any, fueltypeId: any, selectedCityRackId: any, lattitude?: any, longitude?: any, countryCode?: string, sourceId?: any) {\n        this.salesUserService.IsCitySourcingGroupTerminalPriceAvailable(jobId, fueltypeId, selectedCityRackId, lattitude, longitude, countryCode, sourceId).subscribe(data => {\n            if (data) {\n                this.CitySourcingGroupTerminalPriceAvailableList = data;\n            }\n        });\n    }\n    // async getSourcingCityGroupTerminals(stateId: any, sourceId: any) {\n    //   this.salesUserService.GetSourcingCityGroupTerminals(stateId,sourceId).subscribe(data => {\n    //       if (data) {\n    //               this.SourcingCityGroupTerminalsList = data;\n    //           }\n    //       });\n    //   }\n    // public getClosedTerminal(event) {\n    //  var fuelTypeId=this.f.FuelDetails.get('FuelTypeId').value;\n    //  var latitude=this.f.AddressDetails.get('Latitude').value;\n    //  var longitude=this.f.AddressDetails.get('Longitude').value;\n    //  var countryId=this.f.AddressDetails.get('CountryId').value;\n    //  var pricingCodeId=this.f.FuelPricingDetails.get('CodeId').value;\n    //  var CityGroupTerminalId=this.f.FuelPricingDetails.get('CityGroupTerminalId').value;\n    // //  var terminal= this.SourcingCityGroupTerminalsList.find(t => t.Id == CityGroupTerminalId).Name;\n    // var terminal= \"\";\n    // var pricingSourceId=this.f.FuelPricingDetails.get('PricingSourceId').value;\n\n    //  if(pricingSourceId==2){\n    //   //  this.getOpisTerminals(CityGroupTerminalId,latitude,longitude,countryId,terminal,pricingSourceId);\n\n    //       this.salesUserService.GetOpisTerminals(CityGroupTerminalId, latitude, longitude, countryId, terminal, pricingSourceId).subscribe(data => {\n    //           if (data) {\n    //                   this.ClosedTerminalList = data;\n    //                   event.stopPropagation();\n    //                   this.approveTerminalAuto.open();\n    //               }\n    //           });\n\n    //  }else{\n    //   this.salesUserService.GetClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId).subscribe(data => {\n    //     if (data) {\n    //             this.ClosedTerminalList = data;\n    //         }\n    //     });\n    //  }\n    // }\n\n    // getApprovedTerminal(event){\n    //   var fuelTypeId=this.f.FuelDetails.get('FuelTypeId').value;\n    //   var latitude=this.f.AddressDetails.get('Latitude').value;\n    //   var longitude=this.f.AddressDetails.get('Longitude').value;\n    //   var countryId=this.f.AddressDetails.get('CountryId').value;\n    //   var pricingCodeId=this.f.FuelPricingDetails.get('CodeId').value;\n    //   var CityGroupTerminalId=this.f.FuelPricingDetails.get('CityGroupTerminalId').value;\n    //   var terminal=event;\n    //   var pricingSourceId=this.f.FuelPricingDetails.get('PricingSourceId').value;\n    //   if(pricingSourceId==2){\n    //     this.getOpisTerminals(CityGroupTerminalId,latitude,longitude,countryId,terminal,pricingSourceId);\n    //   }else{\n    //    this.salesUserService.GetClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId).subscribe(data => {\n    //      if (data) {\n    //              this.ClosedTerminalList = data;\n    //          }\n    //      });\n    //   }\n    // }\n\n    public getOpisTerminals(cityRackId: any, latitude: any, longitude: any, countryId: any, terminal: string, source: any) {\n        this.salesUserService.GetOpisTerminals(cityRackId, latitude, longitude, countryId, terminal, source).subscribe(data => {\n            if (data) {\n                this.ClosedTerminalList = data;\n                this.approveTerminalAuto.open();\n            }\n        });\n    }\n    // setTermialvalue(event){\n    //   this.f.FuelPricingDetails.get('TerminalName').patchValue(event.Name);\n    // }\n    // getPricingCodes(isFromControl?: any, prefix?: any) {\n    //   this.isPriceCodeLoading=true;\n    //   var filterData = {};\n    //   if (!prefix) {\n    //     prefix = \"\";\n    //   }\n    //   if (isFromControl) {\n    //     filterData = {\n    //       \"PricingSourceId\": this.f.FuelPricingDetails.get('PricingSourceId').value,\n    //       \"PricingTypeId\": this.f.FuelPricingDetails.get('PricingTypeId').value,\n    //       \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\n    //       \"feedTypeId\": 0,\n    //       \"fuelClassTypeId\": 0,\n    //       \"Prefix\": prefix\n    //     }\n    //   } else {\n    //     filterData = {\n    //       \"PricingSourceId\": this.f.FuelPricingDetails.get('PricingSourceId').value,\n    //       \"PricingTypeId\": this.f.FuelPricingDetails.get('PricingTypeId').value,\n    //       \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\n    //       \"feedTypeId\": this.pricingfeedTypeId,\n    //       \"fuelClassTypeId\": this.pricingfuelClassTypeId,\n    //       \"Prefix\": \"\"\n    //     }\n\n    //   }\n\n    //   this.salesUserService.GetPricingCodes(filterData).subscribe(data => {\n    //     if (data) {\n    //       this.pricingCodes = data.PricingCodes;\n    //       this.isPriceCodeLoading=false;\n    //     }\n    //   });\n    // }\n    // getSelectedPricingCode(item: any) {\n    //   this.modalService.dismissAll();\n    //   var pricingCodeDisplayData = this.getPricingDisplayData(item);\n    //   if (item) {\n    //     this.f.FuelPricingDetails.get('Code').patchValue(item.Code);\n    //     this.f.FuelPricingDetails.get('CodeId').patchValue(item.Id);\n    //     this.f.FuelPricingDetails.get('PricingTypeId').patchValue(item.PricingTypeId);\n    //     this.f.FuelPricingDetails.get('CodeDescription').patchValue(pricingCodeDisplayData);\n    //     this.f.FuelPricingDetails.get('PricingSourceId').patchValue(item.PricingSourceId);\n    //   }\n    //   if (item.PricingSourceId == 1) {\n    //     this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\n    //   }\n    //   else {\n    //     this.f.FuelPricingDetails.get('EnableCityRack').setValue(true);\n    //      this.getSourcingCityGroupTerminals(this.f.AddressDetails.get('StateId').value,this.f.FuelPricingDetails.get('PricingSourceId').value)\n    //   }\n    //   this.setRackTerminalValidation();\n    // }\n\n    setRackTerminalValidation() {\n        let isChecked = this.f.FuelPricingDetails.get('EnableCityRack').value;\n        if (isChecked) {\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').setValidators([Validators.required]);\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').updateValueAndValidity();\n        }\n        else {\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').setValidators([]);\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').updateValueAndValidity();\n        }\n    }\n    getPricingDisplayData(item) {\n        var displayData = '';\n        if (item != undefined || item != null) {\n            if (item.PricingTypeId == 2) {\n                displayData += item.PricingSource + ', ' + \"Fixed\";\n            }\n            else if (item.PricingTypeId == 4) {\n                displayData += item.PricingSource + ', ' + \"Fuel Cost\";\n            }\n            else if (item.PricingTypeId == 1) {\n                displayData += item.PricingSource + ', ' + item.RackAvgPricingType;\n                if (item.PricingSourceId == 2 || item.PricingSourceId == 3) {\n                    displayData += ', ' + item.FeedType + ', ' + item.WeekendPricingDay;\n                }\n                if (item.PricingSourceId == 2) {\n                    displayData += ', ' + item.FuelClassType + ', ' + item.QuantityIndicator;\n                }\n            }\n        }\n        return displayData;\n    }\n\n    public getAddressByZip() {\n        var zipCode = this.f.AddressDetails.get('ZipCode').value;\n        if (zipCode) {\n            this.salesUserService.GetAddressByZip(zipCode).subscribe(data => {\n                if (data) {\n                    this.f.AddressDetails.get('CountryName').patchValue(data.CountryName);\n                    var country = this.countryList.find(t => t.Code.includes(data.CountryCode));\n                    if (country) {\n                        var countryId = country.Id;\n                        this.f.AddressDetails.get('CountryCode').patchValue(countryId);\n                        if (countryId == 1) {\n                            this.f.AddressDetails.get('CountryId').patchValue(countryId);\n                            this.f.AddressDetails.get('Currency').patchValue(1);\n                            this.f.AddressDetails.get('UOM').patchValue(1);\n                        } else {\n                            this.f.AddressDetails.get('CountryId').patchValue(countryId);\n                            this.f.AddressDetails.get('Currency').patchValue(2);\n                            this.f.AddressDetails.get('UOM').patchValue(2);\n                        }\n\n                        this.f.AddressDetails.get('Address').patchValue(data.Address);\n                        this.f.AddressDetails.get('CountyName').patchValue(data.CountyName);\n                        this.f.AddressDetails.get('City').patchValue(data.City);\n                        var stateId = this.statesList.find(x => x.StateCode == data.StateCode).StateId;\n                        this.f.AddressDetails.get('StateId').patchValue(stateId);\n                        this.f.AddressDetails.get('StateName').patchValue(data.StateName);\n                        this.f.AddressDetails.get('Latitude').patchValue(data.Latitude);\n                        this.f.AddressDetails.get('Longitude').patchValue(data.Longitude);\n                        this.mapConstants.CenterLat = data.Latitude;\n                        this.mapConstants.CenterLon = data.Longitude;\n                        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\n                    }\n                }\n            });\n        }\n\n    }\n\n    // addValidationPrice(){\n    //   let required = [Validators.required];\n    //   if (this.f.FuelPricingDetails.get('PricingTypeId').value == 1) {\n    //     this.f.FuelPricingDetails.get('Code').setValidators(required);\n    //     this.f.FuelPricingDetails.get('Code').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('RackPrice').setValidators(required);\n    //     this.f.FuelPricingDetails.get('RackPrice').updateValueAndValidity();\n    //   }if(this.f.FuelPricingDetails.get('PricingTypeId').value == 4){\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').setValidators(required);\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('PricePerGallon').setValidators([]);\n    //     this.f.FuelPricingDetails.get('PricePerGallon').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('Code').setValidators([]);\n    //     this.f.FuelPricingDetails.get('Code').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('RackPrice').setValidators([]);\n    //     this.f.FuelPricingDetails.get('RackPrice').updateValueAndValidity();\n    //   } else if(this.f.FuelPricingDetails.get('PricingTypeId').value == 2){\n    //     this.f.FuelPricingDetails.get('PricePerGallon').setValidators(required);\n    //     this.f.FuelPricingDetails.get('PricePerGallon').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('Code').setValidators([]);\n    //     this.f.FuelPricingDetails.get('Code').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('RackPrice').setValidators([]);\n    //     this.f.FuelPricingDetails.get('RackPrice').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').setValidators([]);\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').updateValueAndValidity();\n\n\n    //   }\n    // }\n\n    getUserContext() {\n        this.salesUserService.GetUserContext().subscribe(data => {\n            this.UserContext = data;\n        })\n    }\n    public onChangeMobile(event: any) {\n        if (this.f.CustomerDetails.get('PhoneNumber').value) {\n            this.salesUserService.IsPhoneNumberValid(this.f.CustomerDetails.get('PhoneNumber').value).subscribe(data => {\n                this.isValidMobile = data;\n            })\n        } else {\n            this.isValidMobile = true;\n        }\n\n    }\n\n    markerDragEnd(event) {\n        this.confirmationDialogService.confirm('Map update', 'Geo Codes shifted to a new location!')\n            .then((confirmed) => (confirmed == true) ? this.updateGeoCode(event.coords.lat, event.coords.lng) : this.previousLatLon())\n            .catch(() => this.previousLatLon());\n    }\n\n    updateGeoCode(lat, lng) {\n        this.salesUserService.GetAddressByLongLat(lat, lng).subscribe(data => {\n            this.updateAddressData(data);\n        })\n    }\n    public previousLatLon() {\n        this.mapConstants.CenterLat = this.f.AddressDetails.get('Latitude').value;\n        this.mapConstants.CenterLon = this.f.AddressDetails.get('Longitude').value;\n    }\n\n    public UpdateViewedStatus() {\n        this.salesUserService.UpdateViewedStatus(true, this.editSourcingId).subscribe(data => {\n        })\n    }\n    public onCancel() {\n        this.router.navigate(['SalesUser/SourcingRequest/Index']);\n    }\n\n    countryChanged() {\n        this.f.AddressDetails.get('StateId').setValue(null)\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\n        (this.f.AddressDetails.get('CountryId').value == 2) ? this.UoM = 2 : this.UoM = 1;\n        this.f.AddressDetails.get('UOM').setValue(this.UoM);\n    }\n    countryGroupChanged(selectedCountryGroupId: any) {\n        if (selectedCountryGroupId) {\n            var countryGroup = selectedCountryGroupId.target.value;\n            if (countryGroup === 'Select') {\n                this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\n                this.f.AddressDetails.get('StateId').setValue(null)\n            }\n            else {\n                this.filteredStatesList = this.statesList.filter(s => s.CountryGroupId == countryGroup) || [];\n                this.f.AddressDetails.get('StateId').setValue(null)\n            }\n        }\n    }\n    updateAddressData(address: Geocode) {\n        let countryId = (address.CountryCode == 'US') ? 1 : (address.CountryCode == 'CA' ? 2 : this.f.AddressDetails.get('CountryId').value);\n        let state = this.statesList.find(st => st.StateName.toLowerCase() == address.StateName.toLowerCase());\n        let stateId = (state && state.StateId) ? state.StateId : this.f.AddressDetails.get('StateId').value;\n\n        this.f.AddressDetails.get('Address').patchValue(address.Address);\n        this.f.AddressDetails.get('City').patchValue(address.City);\n        this.f.AddressDetails.get('ZipCode').patchValue(address.ZipCode);\n        this.f.AddressDetails.get('CountyName').patchValue(address.CountyName);\n        this.f.AddressDetails.get('CountryCode').patchValue(address.CountryCode);\n        this.f.AddressDetails.get('CountryId').patchValue(countryId);\n        this.f.AddressDetails.get('StateName').patchValue(address.StateName);\n        this.f.AddressDetails.get('StateId').patchValue(stateId);\n\n        if (address.Latitude) {\n            this.f.AddressDetails.get('Latitude').patchValue(address.Latitude);\n            this.f.AddressDetails.get('Longitude').patchValue(address.Longitude);\n        }\n\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\n        this.UoM = countryId == 2 ? 2 : 1;\n\n    }\n\n    // changePricingCode(){\n    //   if(this.f.FuelPricingDetails.get('PricingTypeId').value == 2){\n    //     this.f.FuelPricingDetails.get('Code').patchValue('A-120000');\n    //     this.f.FuelPricingDetails.get('Code').patchValue('');\n    //     this.f.FuelPricingDetails.get('RackAvgTypeId').patchValue('');\n    //     this.f.FuelPricingDetails.get('RackPrice').patchValue('');\n    //     this.f.FuelPricingDetails.get('CityGroupTerminalId').patchValue('');\n    //     this.f.FuelPricingDetails.get('TerminalName').patchValue('');\n    //   }else if(this.f.FuelPricingDetails.get('PricingTypeId').value == 4){\n    //     this.f.FuelPricingDetails.get('Code').patchValue('A-140000');\n    //     this.f.FuelPricingDetails.get('RackAvgTypeId').patchValue('');\n    //     this.f.FuelPricingDetails.get('RackPrice').patchValue('');\n    //     this.f.FuelPricingDetails.get('CityGroupTerminalId').patchValue('');\n    //     this.f.FuelPricingDetails.get('TerminalName').patchValue('');\n    //   }else if(this.f.FuelPricingDetails.get('PricingTypeId').value == 1){\n    //     this.f.FuelPricingDetails.get('Code').patchValue('');\n    //     // this.f.FuelPricingDetails.get('PricePerGallon').patchValue('');\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').patchValue('');\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId').patchValue('');\n    //   }\n    // }\n\n    setCurrency(Currency: any) {\n        this.UoM = Currency;\n        if (Currency == \"1\") {\n            this.displayCurrancy = \"USD\";\n        }\n        else if (Currency == \"2\") {\n            this.displayCurrancy = \"CAD\";\n        }\n    }\n    //ToogleNotes(){\n    //  this.isShowNote= !this.isShowNote;\n    //}\n\n    deliveryTypeIdChanged(deliveryTypeId: number) {\n        if (deliveryTypeId == 1) {\n            this.f.FuelPricingDetails.get('TierPricing').get('TierPricingType').setValue(2);\n        }\n    }\n    updateFormControlValidators(control: any, validators: any[]) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n    }\n\n    deliveryTypeChanged(type: number) {\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\n        //SET VALIDATION\n        this.setFuelTypevalidation(type);\n        //GET PRODUCTS\n        if (type == 1 || type == 2) {\n            this.getFuelProducts();\n        }\n        else if (type == 4) {\n            this.getProductListByZip();\n        }\n        if (type == 3 && this.pricingModuleComponent) {\n            this.f.FuelPricingDetails.get('PricingTypeId').setValue(2);\n            //DONT UPDATE VALIDATION IF TIER PRICING ALREADY CHECKED\n            if (!this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\n                this.pricingModuleComponent.pricingTypeChanged(2)\n            }\n        }\n    }\n    setFuelTypevalidation(type: number) {\n        //other\n        if (type == 3) {\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), []);\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), [Validators.required]);\n        }\n        //In Location Area//Common//Less common\n        else {\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), [Validators.required]);\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), []);\n        }\n    }\n    UpdateSuppressPricing(value: boolean) {\n        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(value);\n        this.setNetDaysValidation(value);\n    }\n    isRegularBuyerUpdate(companyId: number, isEditRequest: boolean) {\n\n        if (companyId > 0) {\r\n            this.salesUserService.GetValidTPOCompany(companyId).subscribe(data => {\n                this.f.IsRegularBuyer.setValue(!data);\n                if (!isEditRequest) {\r\n                    if (data) {\r\n                        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(this.companyPreferenceSetting);\n                        this.pricingModuleComponent.toggleSuppressPricing(this.companyPreferenceSetting);\n                    }\r\n                    else {\r\n                        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(false);\r\n                        this.pricingModuleComponent.toggleSuppressPricing(false);\r\n                        this.f.AddressDetails['controls']['IsNewJob'].setValue(false);\r\n                        this.clickNewPerson(false);\r\n                    }\r\n                }\r\n            });\n        }\n    }\n    ClearAddress() {\n        this.f.AddressDetails['controls']['JobId'].setValue(null);\n        this.f.AddressDetails['controls']['JobName'].setValue(null);\n        this.f.AddressDetails['controls']['DisplayJobID'].setValue(null);\r\n        this.f.AddressDetails['controls']['Address'].setValue(null);\r\n        this.f.AddressDetails['controls']['ZipCode'].setValue(null);\r\n        this.f.AddressDetails['controls']['City'].setValue(null);\r\n        this.f.AddressDetails['controls']['CountyName'].setValue(null);\r\n        this.f.AddressDetails['controls']['StateId'].setValue(null);\r\n        this.f.AddressDetails['controls']['Latitude'].setValue(null);\r\n        this.f.AddressDetails['controls']['Longitude'].setValue(null);\r\n        this.f.AddressDetails['controls']['TimeZoneName'].setValue(null);\r\n    }\n}\n","<div class=\"loader\" *ngIf=\"pageloader\">\n    <div class=\"loading-content text-center\">\n        <div class=\"spinner\"></div>\n    </div>\n</div>\n<div class=\"create-sourcing-request-container\">\n    <form [formGroup]=\"sourcingRequestForm\">\n        <div class=\"row\">\n            <div class=\"col-9\">\n                <div class=\"row\" formGroupName=\"CustomerDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well col-sm-12\">\n                            <div class=\"row\">\n                                <div class=\"col-4\">\n                                    <span class=\"badge badge-pill badge-success bg-success shadow-sm animated flash infinite\">\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Submitted\">\n                                            New\n                                        </span>\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Modified\">\n                                            WIP\n                                        </span>\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Accepted ||\n                                                                                  sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.AcceptedAndModified\">\n                                            Sourced\n                                        </span>\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Lost\">\n                                            Lost\n                                        </span>\n                                    </span>\n                                    <h4>Customer Information</h4>\n                                </div>\n\n                                <div class=\"col-8\">\n                                    <div class=\"float-right\">\n                                        <input id=\"Submit\"\n                                               *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Accepted || sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.AcceptedAndModified\"\n                                               type=\"button\" value=\"Create PO\" mwlConfirmationPopover\n                                               [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\"\n                                               placement=\"left\" (confirm)=\"createPO()\"\n                                               (cancel)=\"cancelClicked = true\"\n                                               class=\"btn btn-lg btn-primary btnSubmit\">\n                                        <input id=\"Accept\"\n                                               *ngIf=\"sourcingRequestForm.controls['SalesUserId'].value != UserContext?.Id && (sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Modified || sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Submitted || sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Lost)\"\n                                               type=\"button\" value=\"Accept\" (click)=\"acceptRequest()\"\n                                               class=\"btn btn-lg btn-primary btnSubmit\">\n                                        <input id=\"lost\"\n                                               *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value != RequestStatus.Lost && editSourcingId > 0\"\n                                               type=\"button\" value=\"Lost\" mwlConfirmationPopover\n                                               [popoverTitle]=\"popoverLostTitle\" [popoverMessage]=\"popoverLostMessage\"\n                                               placement=\"left\" (confirm)=\"loseRequest()\"\n                                               (cancel)=\"cancelClicked = true\"\n                                               class=\"btn btn-lg btn-danger btnSubmit\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" formControlName=\"IsNewCompany\"\n                                               id=\"radio-newcustomer\" type=\"radio\" [value]=\"true\" (change)=\"companyExistanceChanged(true)\">\n                                        <label class=\"form-check-label\" for=\"radio-newcustomer\">New</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" id=\"radio-existingcustomer\"\n                                               formControlName=\"IsNewCompany\" type=\"radio\" [value]=\"false\" (change)=\"companyExistanceChanged(false)\">\n                                        <label class=\"form-check-label\" for=\"radio-existingcustomer\">Existing</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4 col-md-3\">\n                                    <div class=\"form-group mb0\">\n                                        <label for=\"CustomerDetails_CompanyName\">\n                                            Company Name<span class=\"required pl4\"\n                                                              aria-required=\"true\">*</span>\n                                        </label>\n                                        <div class=\"mtm1 new-CompanyName\"\n                                             *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==true\">\n                                            <input class=\"form-control\" id=\"CustomerDetails_CompanyName\"\n                                                   formControlName=\"CompanyName\" placeholder=\"Company\" type=\"text\" value=\"\"\n                                                   (change)=\"isSourcingCompanyExist()\">\n                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyName').errors\">\n                                                <span class=\"text-danger\"\n                                                      *ngIf=\"f.CustomerDetails.get('CompanyName').errors?.required\">\n                                                    Company\n                                                    Name is required\n                                                </span>\n                                            </div>\n                                            <div *ngIf=\"companyExits\">\n                                                <span class=\"text-danger\">Company already exist</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"existing-CompanyName\"\n                                             *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false\">\n\n\n                                            <ng-multiselect-dropdown class=\"single-select\"\n                                                                     style=\"width: 100%;\"\n                                                                     [settings]=\"CompDdlSetting\"\n                                                                     [data]=\"AllTPOCompaniesList\"\n                                                                     formControlName=\"TempCompany\"\n                                                                     (onSelect)=\"onCompSelect($event, true)\"\n                                                                     (onDeSelect)=\"onCompSelect($event, false)\">\n                                            </ng-multiselect-dropdown>\n\n                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyId').errors\">\n                                                <span class=\"text-danger\"\n                                                      *ngIf=\"f.CustomerDetails.get('CompanyId').errors?.required\">\n                                                    Company\n                                                    Name is required\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-8 col-md-9\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-4 new-company\" *ngIf=\"isPersonNew\">\n                                            <div class=\"form-group\">\n                                                <div id=\"newContactPersonInput\">\n                                                    <label for=\"CustomerDetails_Name\">\n                                                        Contact Person<span class=\"required pl4\" aria-required=\"true\">*</span>\n                                                    </label>\n                                                    <input class=\"form-control newContactPerson\"\n                                                           id=\"CustomerDetails_Name\" formControlName=\"Name\"\n                                                           placeholder=\"Contact Person\" type=\"text\" value=\"\">\n                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('Name').errors\">\n                                                        <span class=\"text-danger\"\n                                                              *ngIf=\"f.CustomerDetails.get('Name').errors?.required\">\n                                                            Contact Person is required\n                                                        </span>\n                                                    </div>\n                                                    <a id=\"useExisting\" class=\"\" \n                                                       *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false\"\n                                                       (click)=\"clickNewPerson(false)\">\n                                                        <span class=\"fa fa-arrow-left mt7\"></span> Use Existing\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4 existing-company \" *ngIf=\"!isPersonNew\">\n                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper customer-contact hide-element\">\n                                                <span class=\"spinner-dashboard pa\"></span>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <div id=\"existingContactPersonDropdown\">\n                                                    <label for=\"CustomerDetails_Name\">Contact Person</label>\n                                                    <select class=\"form-control existingContactPerson\"\n                                                            id=\"CustomerDetails_UserId\" formControlName=\"UserId\"\n                                                            (change)=\"getSourcingContactPersonDetails($event.target.value)\">\n                                                        <option value=\"null\" disabled>Select Contact Person</option>\n                                                        <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                                *ngFor=\"let item of CompanyContactPersonsList\"\n                                                                [selected]=\"item.Id== f.CustomerDetails.get('UserId').value\">\n                                                            {{item.Name}}\n                                                        </option>\n                                                    </select>\n                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('UserId').errors\">\n                                                        <span class=\"text-danger\"\n                                                              *ngIf=\"f.CustomerDetails.get('UserId').errors?.required\">\n                                                            Contact Person is required\n                                                        </span>\n                                                    </div>\n                                                    <a id=\"createNew\"\n                                                       *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false && !f.IsRegularBuyer.value\"\n                                                       (click)=\"clickNewPerson(true)\">\n                                                        <span class=\"fa fa-plus-circle mt7\"></span> Create\n                                                        New\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4\">\n                                            <div class=\"form-group\">\n                                                <label for=\"CustomerDetails_PhoneNumber\">Mobile Number</label>\n                                                <input class=\"form-control input-phoneformat phoneNumber\"\n                                                       id=\"CustomerDetails_PhoneNumber\" name=\"PhoneNumber\"\n                                                       formControlName=\"PhoneNumber\" (blur)=\"onChangeMobile($event)\" type=\"text\" value=\"\">\n                                                <div *ngIf=\"!f.CustomerDetails.get('PhoneNumber').errors && !isValidMobile\" class=\"color-orange fs12 pt5\" id=\"mobile-validation-msg\">Unable to verify number! You will miss Text Alerts.</div>\n                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('PhoneNumber').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.CustomerDetails.get('PhoneNumber').errors?.required\">\n                                                        Mobile Number is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4\">\n                                            <div class=\"form-group custEmail\">\n                                                <label for=\"CustomerDetails_Email\">Email</label>\n                                                <input class=\"form-control email\" id=\"CustomerDetails_Email\"\n                                                       name=\"Email\" formControlName=\"Email\" type=\"email\" value=\"\" />\n                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('Email').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.required\">\n                                                        Email\n                                                        is required\n                                                    </span>\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.email\"> Invalid </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <div *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==true\">\r\n                                        <app-contact-person [Parent]=\"f.CustomerDetails\"></app-contact-person>\r\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\" col-12\">\n                        <div class=\"well col-sm-12\">\n                            <h4>Sourcing Request</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"TruckLoadType\">Type</label>\n                                        <select class=\"form-control\" name=\"RequestType\" formControlName=\"TruckLoadType\">\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                    *ngFor=\"let item of TruckTypeLoadList\"\n                                                    [selected]=\"item.Id==f.TruckLoadType.value\">\n                                                {{item.Name}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"formSubmited && f.TruckLoadType.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.TruckLoadType.errors?.required\">\n                                                Truck\n                                                Load Type is required\n                                            </span>\n                                        </div>\n                                        <!-- <span class=\"field-validation-valid\" ></span> -->\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"FreightOnBoardType\">Freight on Board (FOB)</label>\n                                        <select class=\"form-control\" name=\"FOB\" formControlName=\"FreightOnBoardType\" [disableControl]=\"f.TruckLoadType.value==1\">\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                    *ngFor=\"let item of FreightOnBoardTypesList\"\n                                                    [selected]=\"item.Id==f.FreightOnBoardType.value\">\n                                                {{item.Name}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"formSubmited && f.FreightOnBoardType.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.FreightOnBoardType.errors?.required\">\n                                                Freight OnBoard Type is required\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"AccountingCompanyId\">Accounting Company ID</label>\n                                        <input class=\"form-control\" id=\"AccountingCompanyId\" name=\"AccountingCompanyId\"\n                                               formControlName=\"AccountingCompanyId\" type=\"text\" value=\"\">\n                                        <div *ngIf=\"formSubmited && f.AccountingCompanyId.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.AccountingCompanyId.errors?.required\">\n                                                Accounting CompanyId is required\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"DisplayRequestId\">SR#</label>\n                                        <input class=\"form-control\" id=\"DisplayRequestId\"\n                                            formControlName=\"DisplayRequestId\" type=\"text\" value=\"\">\n                                        <div *ngIf=\"formSubmited && f.DisplayRequestId.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.DisplayRequestId.errors?.required\"> SR#\n                                                is required</span>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"RequestName\">SR Name</label>\n                                        <input class=\"form-control\" id=\"RequestName\" name=\"Name\"\n                                               formControlName=\"RequestName\" type=\"text\" value=\"\">\n                                        <div *ngIf=\"formSubmited && f.RequestName.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.RequestName.errors?.required\">\n                                                SR Name is\n                                                required\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" formGroupName=\"AddressDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <h4 class=\"job-site-info\">Location Information</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <div class=\"form-check form-check-inline radio\" *ngIf=\"!f.IsRegularBuyer.value\">\n                                        <input class=\"jobname form-check-input\" id=\"radio-newjob\" (click)=\"ClearAddress()\"\n                                               formControlName=\"IsNewJob\" type=\"radio\" [value]=\"true\">\n                                        <label class=\"form-check-label\" for=\"radio-newjob\">New</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline existingjobSection radio\"\n                                         *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false\">\n                                        <input class=\"jobname existingjob form-check-input\" id=\"radio-existingjob\" (click)=\"ClearAddress()\"\n                                               formControlName=\"IsNewJob\" type=\"radio\" [value]=\"false\">\n                                        <label class=\"form-check-label\" for=\"radio-existingjob\">Existing</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"new-job\"\n                                                 *ngIf=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value==true\">\n                                                <label class=\"job-site-info\" for=\"AddressDetails_JobName\">\n                                                    Location\n                                                    Name <span class=\"required pl4\"\n                                                               aria-required=\"true\">*</span>\n                                                </label>\n                                                <input class=\"form-control\" id=\"AddressDetails_JobName\"\n                                                       formControlName=\"JobName\" type=\"text\" value=\"\">\n                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('JobName').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.AddressDetails.get('JobName').errors?.required\">\n                                                        Location Name is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"existing-job defaultDisabled\"\n                                                 *ngIf=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value==false\">\n                                                <label class=\"job-site-info\" for=\"AddressDetails_JobId\">\n                                                    Location\n                                                    Name<span class=\"required pl4\" aria-required=\"true\">*</span>\n                                                </label>\n\n\n                                                <ng-multiselect-dropdown class=\"single-select\"\n                                                                         style=\"width: 100%;\"\n                                                                         [settings]=\"CompDdlSetting\"\n                                                                         [data]=\"allJobList\"\n                                                                         formControlName=\"TempJob\"\n                                                                         (onSelect)=\"onJobSelect($event, sourcingRequestForm.controls['CustomerDetails']['controls']['CompanyName'].value, true)\"\n                                                                         (onDeSelect)=\"onJobSelect($event, null, false)\">\n                                                </ng-multiselect-dropdown>\n\n                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('JobName').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.AddressDetails.get('JobName').errors?.required\">\n                                                        Location Name is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"address-controls\"\n                                                 [ngClass]=\"{'pntr-none subSectionOpacity': sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false }\">\n                                                <div class=\"form-group combineDiv\">\n                                                    <label class=\"job-site-info\" for=\"AddressDetails_DisplayJobID\">\n                                                        Third\n                                                        Party Location ID\n                                                    </label>\n                                                    <input class=\"form-control\" id=\"AddressDetails_DisplayJobID\"\n                                                           formControlName=\"DisplayJobID\" type=\"text\" value=\"\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-6\">\n                                    <div class=\"row address-controls\"\n                                         [ngClass]=\"{'pntr-none subSectionOpacity': sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false }\">\n                                        <div class=\"col-sm-4\">\n                                            <div class=\"form-group\">\n                                                <label for=\"AddressDetails_Country_Id\">Country/Group</label>\n                                                <select class=\"form-control country addressInput\"\n                                                        id=\"AddressDetails_Country_Id\" formControlName=\"CountryId\" (change)=\"countryChanged()\">\n                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                            *ngFor=\"let item of countryList\"\n                                                            [selected]=\"item.Id== f.AddressDetails.get('CountryId').value\">\n                                                        {{item.Code}}\n                                                    </option>\n                                                </select>\n                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('CountryId').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.AddressDetails.get('CountryId').errors?.required\">\n                                                        Country is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4\" *ngIf=\"f.AddressDetails.get('CountryId').value == '4'\">\n                                            <div class=\"form-group\">\n                                                <label>Country</label>\n                                                <select class=\"form-control country-group\"\n                                                        id=\"AddressDetails_Country_Id\" (change)=\"countryGroupChanged($event)\">\n                                                    <option id=\"0\" value=\"Select\">Select</option>\n                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                            *ngFor=\"let item of countryGroupList\">\n                                                        {{item.Name}}\n                                                    </option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-8\">\n                                            <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"form-group\" id=\"ddl-currency-filter-div\">\n                                                        <label for=\"AddressDetails_Country_Currency\">Currency</label>\n                                                        <select class=\"form-control currency valid\"\n                                                                id=\"AddressDetails_Country_Currency\"\n                                                                name=\"AddressDetails.Country.Currency\"\n                                                                formControlName=\"Currency\"\n                                                                (change)=\"setCurrency(f.AddressDetails.get('Currency').value)\">\n                                                            <!-- <option selected=\"selected\" value=\"1\">USD</option>\n                                                            <option value=\"2\">CAD</option> -->\n                                                            <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                    *ngFor=\"let item of currucyList\"\n                                                                    [selected]=\"item.Id== f.AddressDetails.get('Currency').value\">\n                                                                {{item.Name}}\n                                                            </option>\n                                                        </select>\n                                                        <!-- <span class=\"field-validation-valid\"\n                                                            data-valmsg-for=\"AddressDetails.Country.Currency\"\n                                                            data-valmsg-replace=\"true\"></span> -->\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-md-6 uom-section\">\n                                                    <div class=\"form-group\">\n                                                        <label for=\"AddressDetails_Country_UoM\">UOM</label>\n                                                        <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\n                                                           data-placement=\"top\" title=\"Unit Of Measurement\"\n                                                           data-original-title=\"Unit Of Measurement\"></i>\n                                                        <select class=\"form-control\" id=\"AddressDetails_Country_UoM\"\n                                                                formControlName=\"UOM\" readonly=\"true\">\n                                                            <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                    *ngFor=\"let item of UomList\"\n                                                                    [selected]=\"item.Id== f.AddressDetails.get('UOM').value\">\n                                                                {{item.Name}}\n                                                            </option>\n\n                                                            <!-- <option selected=\"selected\" value=\"1\">Gallons</option>\n                                                            <option value=\"2\">Litres</option> -->\n                                                        </select>\n                                                        <!-- <span class=\"field-validation-valid\"\n                                                            data-valmsg-for=\"AddressDetails.Country.UoM\"\n                                                            data-valmsg-replace=\"true\"></span> -->\n                                                    </div>\n                                                </div>\n\n\n                                                <div class=\"col-md-6 mfn-uom-section hide-element\">\n                                                    <div class=\"form-group\">\n                                                        <label for=\"AddressDetails_Country_UoM\">UOM</label>\n                                                        <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\n                                                           data-placement=\"top\" title=\"Unit Of Measurement\"\n                                                           data-original-title=\"Unit Of Measurement\"></i>\n                                                        <select class=\"form-control\" id=\"AddressDetails_MarineUoM\"\n                                                                formControlName=\"UOM\">\n                                                            <option value=\"1\">Gallons</option>\n                                                            <option value=\"2\">Litres</option>\n                                                            <option value=\"3\">Barrels</option>\n                                                            <option value=\"4\">MetricTons</option>\n                                                        </select>\n                                                        <!-- <span class=\"field-validation-valid\"\n                                                            data-valmsg-for=\"AddressDetails.MarineUoM\"\n                                                            data-valmsg-replace=\"true\"></span> -->\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mt20\">\n                                <div class=\"col-sm-12\">\n                                    <!-- <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                            <div>\n                                                <label class=\"checkbox-inline ftl-controls hide-element\"\n                                                    style=\"display: none;\">\n                                                    <input data-val=\"true\"\n                                                        data-val-required=\"The IsVarious field is required.\"\n                                                        id=\"AddressDetails_IsVarious\" name=\"AddressDetails.IsVarious\"\n                                                        onclick=\"showHideControls(this,'wrapper-various','wrapper-location');\"\n                                                        type=\"checkbox\" value=\"False\"><input name=\"AddressDetails.IsVarious\"\n                                                        type=\"hidden\" value=\"false\">\n                                                    Various\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div> -->\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-7\">\n                                            <div class=\"wrapper-location\" style=\"display: block;\">\n                                                <div class=\"address-controls\"\n                                                     [ngClass]=\"{'pntr-none subSectionOpacity': sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false }\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-8\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_Address\">Address</label>\n                                                                <input class=\"form-control address addressInput\"\n                                                                       id=\"AddressDetails_Address\"\n                                                                       name=\"AddressDetails.Address\" type=\"text\"\n                                                                       formControlName=\"Address\" value=\"\">\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('Address').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('Address').errors?.required\">\n                                                                        Address is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_ZipCode\">Zip</label>\n                                                                <input class=\"form-control\"\n                                                                       id=\"AddressDetails_ZipCode_an\"\n                                                                       name=\"AddressDetails.ZipCode\"\n                                                                       formControlName=\"ZipCode\" type=\"text\" value=\"\" (change)=\"getAddressByZip()\">\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('ZipCode').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('ZipCode').errors?.required\">\n                                                                        Zip is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_City\">\n                                                                    City<span class=\"required pl4\"\n                                                                              aria-required=\"true\">*</span>\n                                                                </label>\n                                                                <input class=\"form-control city addressInput\"\n                                                                       id=\"AddressDetails_City\" formControlName=\"City\"\n                                                                       type=\"text\" value=\"\">\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('City').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('City').errors?.required\">\n                                                                        City is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_CountyName\">\n                                                                    County\n                                                                    Name\n                                                                </label>\n                                                                <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\n                                                                   data-placement=\"top\"\n                                                                   title=\"Correct County name is required by our Tax service to calculate taxes accurately.\"></i>\n                                                                <input class=\"form-control county addressInput\"\n                                                                       id=\"AddressDetails_CountyName\"\n                                                                       formControlName=\"CountyName\" type=\"text\" value=\"\"\n                                                                       autocomplete=\"off\">\n\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('CountyName').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('CountyName').errors?.required\">\n                                                                        County  Name is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_State_Id\">\n                                                                    State<span class=\"required pl4\"\n                                                                               aria-required=\"true\">*</span>\n                                                                </label>\n                                                                <select class=\"form-control state addressInput triggerTerminalChange\"\n                                                                        id=\"AddressDetails_State_Id\"\n                                                                        name=\"AddressDetails.State.Id\"\n                                                                        formControlName=\"StateId\"\n                                                                        (change)=\"stateChanged()\">\n                                                                    <option value=\"\">Select State</option>\n                                                                    <option id=\"{{item.StateId}}\" [value]=\"item.StateId\"\n                                                                            *ngFor=\"let item of filteredStatesList\" [selected]=\"item.StateId== f.AddressDetails.get('StateId').value\">\n                                                                        {{item.StateName}}\n                                                                    </option>\n                                                                </select>\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('StateId').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('StateId').errors?.required\">\n                                                                        State is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-12\">\n                                                            <div class=\"form-check form-group form-check-inline\">\n                                                                <input class=\"form-check-input\" id=\"checkbox-geocodes\"\n                                                                       formControlName=\"IsGeocodeUsed\" type=\"checkbox\"\n                                                                       [value]=\"false\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false\">\n                                                                <label class=\"form-check-label\"\n                                                                       for=\"checkbox-geocodes\">Geo Codes</label>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class=\"col-xs-6 col-md-4 combineDiv\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_Latitude\">Latitude</label>\n                                                                <input class=\"form-control datatype-decimal mask-decimal latitude geoInput defaultDisabled\"\n                                                                       id=\"AddressDetails_Latitude\"\n                                                                       name=\"AddressDetails.Latitude\"\n                                                                       formControlName=\"Latitude\" type=\"text\" value=\"0\"\n                                                                       [readonly]=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsGeocodeUsed'].value == false\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false\">\n                                                                <!-- <span class=\"field-validation-valid\"\n                                                                    data-valmsg-for=\"AddressDetails.Latitude\"\n                                                                    data-valmsg-replace=\"true\"></span> -->\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-xs-6 col-md-4 combineDiv\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_Longitude\">Longitude</label>\n                                                                <input class=\"form-control datatype-decimal mask-decimal longitude geoInput defaultDisabled\"\n                                                                       id=\"AddressDetails_Longitude\"\n                                                                       formControlName=\"Longitude\" type=\"text\" value=\"0\"\n                                                                       [readonly]=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsGeocodeUsed'].value == false\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false\">\n                                                                <!-- <span class=\"field-validation-valid\"\n                                                                    data-valmsg-for=\"AddressDetails.Longitude\"\n                                                                    data-valmsg-replace=\"true\"></span> -->\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-md-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_TimeZoneName\">\n                                                                    Time\n                                                                    Zone\n                                                                </label>\n                                                                <input class=\"form-control timeZoneName defaultDisabled\"\n                                                                       id=\"AddressDetails_TimeZoneName\"\n                                                                       formControlName=\"TimeZoneName\" readonly=\"true\"\n                                                                       type=\"text\" value=\"\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsGeocodeUsed'].value == false\">\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div class=\"col-sm-5\">\n                                            <agm-map [zoom]=\"mapConstants.ZoomArea\" [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\">\n                                                <agm-marker [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\" [markerDraggable]=\"true\"\n                                                            (dragEnd)=\"markerDragEnd($event)\"\n                                                            [iconUrl]=\"mapConstants.IconUrl\"></agm-marker>\n                                            </agm-map>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"form-group col-sm-2\">\n                                    <label for=\"DispatchRegion\">Dispatch Region</label>\n                                    <select class=\"form-control\" id=\"AddressDetails_DispatchRegionId\"\n                                            formControlName=\"DispatchRegionId\">\n                                        <option disabled [value]=\"null\">Select</option>\n                                        <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                *ngFor=\"let item of DispatchRegionList\">\n                                            {{item.Name}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <h4>Delivery</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 mb5\">\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input single-delivery-schedule\" type=\"radio\"\n                                               formControlName=\"DeliveryTypeId\"\n                                               id=\"FuelDeliveryDetails_single_DeliveryTypeId\" [value]=\"1\" (change)=\"deliveryTypeIdChanged(1)\">\n                                        <label class=\"form-check-label\"\n                                               for=\"FuelDeliveryDetails_single_DeliveryTypeId\">Single Delivery</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input multiple-delivery-schedule\" type=\"radio\"\n                                               formControlName=\"DeliveryTypeId\"\n                                               id=\"FuelDeliveryDetails_multi_DeliveryTypeId\" [value]=\"2\" (change)=\"deliveryTypeIdChanged(2)\">\n                                        <label class=\"form-check-label\"\n                                               for=\"FuelDeliveryDetails_multi_DeliveryTypeId\">Multiple Deliveries</label>\n                                    </div>\n                                    <!-- <div class=\"radio dib mr10\">\n                                        <label>\n                                            <input class=\"single-delivery-schedule\" id=\"FuelDeliveryDetails_DeliveryTypeId\"\n                                                formControlName=\"DeliveryTypeId\" type=\"radio\" value=\"1\">\n                                            Single Delivery\n                                        </label>\n                                    </div>\n                                    <div class=\"radio dib\">\n                                        <label>\n                                            <input class=\"multiple-delivery-schedule\" id=\"FuelDeliveryDetails_DeliveryTypeId\"\n                                                formControlName=\"DeliveryTypeId\" type=\"radio\" value=\"2\">\n                                            Multiple Deliveries\n                                        </label>\n                                    </div> -->\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-3 single-delivery\"\n                                             *ngIf=\"sourcingRequestForm.controls['FuelDeliveryDetails']['controls']['DeliveryTypeId'].value == 1\">\n                                            <div class=\"single-delivery-sub-types\">\n                                                <label for=\"FuelDeliveryDetails_SingleDeliverySubTypes\">Type</label>\n                                                <select class=\"form-control\"\n                                                        id=\"FuelDeliveryDetails_SingleDeliverySubTypes\"\n                                                        formControlName=\"SingleDeliverySubTypes\">\n                                                    <option [value]=\"0\">Delivery Date</option>\n                                                    <option [value]=\"1\">Delivery Date Range</option>\n                                                </select>\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('SingleDeliverySubTypes').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('SingleDeliverySubTypes').errors?.required\">\n                                                        Delivary Type is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"form-group\">\n                                                <label for=\"FuelDeliveryDetails_StartDate\">Start Date</label>\n                                                <input type=\"text\" class=\"form-control datepicker\" [maxDate]=\"MaxInputDate\"\n                                                       [format]=\"'MM/DD/YYYY'\" formControlName=\"StartDate\" myDatePicker\n                                                       (onDateChange)=\"f.FuelDeliveryDetails.get('StartDate').setValue($event);\" />\n\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('StartDate').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('StartDate').errors?.required\">\n                                                        Start Date is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"end-date\">\n                                                <label for=\"End_Date\">End Date</label>\n                                                <input class=\"form-control datepicker\" [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\"\n                                                       id=\"FuelDeliveryDetails_EndDate\" formControlName=\"EndDate\"\n                                                       type=\"text\" value=\"\" myDatePicker\n                                                       (onDateChange)=\"f.FuelDeliveryDetails.get('EndDate').setValue($event);\"\n                                                       [disableControl]=\"f.FuelDeliveryDetails.get('SingleDeliverySubTypes').value==0 && f.FuelDeliveryDetails.get('DeliveryTypeId').value==1\">\n\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"form-group\">\n                                                <label for=\"FuelDeliveryDetails_StartTime\">Start Time</label>\n                                                <input type=\"text\" class=\"form-control timepicker\"\n                                                       formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm:ss A'\"\n                                                       (onTimeChange)=\"f.FuelDeliveryDetails.get('StartTime').setValue($event);\" />\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('StartTime').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('StartTime').errors?.required\">\n                                                        Start Time is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"form-group\">\n                                                <label for=\"FuelDeliveryDetails_EndTime\">End Time</label>\n                                                <input type=\"text\" class=\"form-control timepicker\"\n                                                       formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm:ss A'\"\n                                                       (onTimeChange)=\"f.FuelDeliveryDetails.get('EndTime').setValue($event);\" />\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('EndTime').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('EndTime').errors?.required\">\n                                                        End Time is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-12 mb15 multi-delivery\" style=\"display: block;\">\n                                    <div class=\"row mt5\">\n                                        <div class=\"col-md-12\">\n                                            <div id=\"delivery-schedule-section\"\n                                                class=\"partial-section delivery-schedule defaultDisabled\">\n                                                <div class=\"form-group pl0 mt7\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n                                                            <h3 class=\"mt0 mb0\">Delivery Schedules</h3>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"partial-block-collection-section\">\n                                                </div>\n                                                <div class=\"form-group col-md-12 pl0 delivery-schedule defaultDisabled\">\n                                                    <a href=\"javascript:void(0)\" class=\"add-partial-block\"\n                                                        data-url=\"/Supplier/FuelRequest/DeliverySchedule\"\n                                                        style=\"pointer-events: visible;\"><i class=\"fas fa-plus-circle\"></i>\n                                                        Add Delivery Schedule</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <ng-container formGroupName=\"FuelDetails\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12 disable-in-tpo-edit fuel-display-group \">\n                                        <h4 class=\"mb0 pb10\">Fuel Type</h4>\n                                        <div class=\"form-group mb0 \">\n                                            <!-- <div class=\"radio dib mr20 mt0 hide-from-tpo\" style=\"display: none;\">\n                                                <label>\n                                                    <input data-val=\"true\"\n                                                        data-val-number=\"The field FuelDisplayGroupId must be a number.\"\n                                                        data-val-required=\"FuelDisplayGroupId is required\"\n                                                        id=\"FuelDetails_FuelDisplayGroupId\"\n                                                        name=\"FuelDetails.FuelDisplayGroupId\"\n                                                        onclick=\"showHideControls(this,'standard-fuels','fuels-in-myarea,non-standard-fuels,add-favorite,taxForOtherFuel');radioChange(this,'wrapper-rackprice,wrapper-suppliercost,city-groupterminal,chkcity-groupterminal', null);checkOtherFuelType(this)\"\n                                                        type=\"radio\" value=\"5\">\n                                                    Favorite\n                                                </label>\n                                            </div> -->\n\n                                            <div class=\"form-check form-check-inline in-job-area\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_location\" [value]=\"4\"\n                                                       (change)=\"deliveryTypeChanged(4)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_location\">\n                                                    In Location\n                                                    Area\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_common\" [value]=\"1\"\n                                                       (change)=\"deliveryTypeChanged(1)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_common\">Common</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_less_common\" [value]=\"2\"\n                                                       (change)=\"deliveryTypeChanged(2)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_less_common\">Less Common</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_other\" [value]=\"3\"\n                                                       (change)=\"deliveryTypeChanged(3)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_other\">Other</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-12 disable-in-tpo-edit\">\n                                        <div class=\"form-group\">\n                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\n                                                 *ngIf=\"IsLoading\">\n                                                <span class=\"spinner-dashboard pa\"></span>\n                                            </div>\n                                            <div class=\"row standard-fuels\"\n                                                 *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['FuelDisplayGroupId'].value)!=3\">\n                                                <div class=\"col-sm-3 clearboth\">\n                                                    <select class=\"form-control\" id=\"FuelDetails_FuelTypeId\"\n                                                            formControlName=\"FuelTypeId\">\n                                                        <option disabled [value]=\"null\">Select</option>\n                                                        <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                *ngFor=\"let item of FuelProductsList\">\n                                                            {{item.Name}}\n                                                        </option>\n                                                    </select>\n                                                    <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelTypeId').errors\">\n                                                        <span class=\"text-danger\"\n                                                              *ngIf=\"f.FuelDetails.get('FuelTypeId').errors?.required\">\n                                                            Fuel\n                                                            type is required\n                                                        </span>\n                                                    </div>\n                                                    <!-- <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n                                                            <div id=\"fuelTypeNearYourArea\" class=\"fuels-in-myarea hide-element\"\n                                                                style=\"display: block;\">\n                                                                <div class=\"pr\">\n                                                                    <input type=\"text\"\n                                                                        class=\"form-control nearest-fueltype pl16\"\n                                                                        onkeydown=\"javascript:return false\">\n                                                                </div>\n                                                                <div class=\"nearest-fuellist pa bg-white\"\n                                                                    style=\"display: none;\">\n                                                                    <ul class=\"list-unstyled\"></ul>\n                                                                    <div class=\"text-center\">\n                                                                        <a href=\"javascript:void(0)\"\n                                                                            class=\"more-nearestfuel\">See More</a>\n                                                                        <div class=\"spinner-xsmall mbm2 ml2\" style=\"\"></div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div> -->\n                                                    <!-- <div class=\"hide-element\" id=\"noFavoriteFuelMsg\">\n                                                        <div class=\"alert alert-info mb0 fs13\">You have not yet added a favorite\n                                                            fuel type</div>\n                                                    </div> -->\n                                                    <!-- <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n                                                            <div class=\"form-group\">\n                                                                <div id=\"allOtherFuelTypes\" class=\"all-other-fuels\"\n                                                                    style=\"display: none;\">\n                                                                    <select class=\"form-control\" data-val=\"true\"\n                                                                        data-val-number=\"The field Fuel must be a number.\"\n                                                                        data-val-requiredif=\"Fuel is required\"\n                                                                        data-val-requiredif-dependentproperty=\"FuelDisplayGroupId\"\n                                                                        data-val-requiredif-dependentvalue=\"3\"\n                                                                        data-val-requiredif-operator=\"NotEqualTo\"\n                                                                        id=\"FuelDetails_FuelTypeId\"\n                                                                        name=\"FuelDetails.FuelTypeId\"></select>\n                                                                </div>\n                                                                <span class=\"field-validation-valid\"\n                                                                    data-valmsg-for=\"FuelDetails.FuelTypeId\"\n                                                                    data-valmsg-replace=\"true\"></span>\n                                                            </div>\n                                                        </div>\n                                                    </div> -->\n                                                </div>\n                                            </div>\n                                            <div class=\"non-standard-fuels\"\n                                                 *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['FuelDisplayGroupId'].value)==3\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-3\">\n                                                        <div class=\"form-group\">\n                                                            <label for=\"FuelDetails_NonStandardFuelName\">\n                                                                Product\n                                                                Name<span class=\"required pl4\"\n                                                                          aria-required=\"true\">*</span>\n                                                            </label>\n                                                            <input class=\"form-control\"\n                                                                   id=\"FuelDetails_NonStandardFuelName\"\n                                                                   formControlName=\"NonStandardFuelName\" type=\"text\"\n                                                                   value=\"\" autocomplete=\"off\">\n                                                            <!-- <span class=\"field-validation-valid\"\n                                                                data-valmsg-for=\"FuelDetails.NonStandardFuelName\"\n                                                                data-valmsg-replace=\"true\"></span> -->\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-3 mb15\">\n                                                        <div class=\"form-group mb0\">\n                                                            <label for=\"FuelDetails_NonStandardFuelDescription\">\n                                                                Product\n                                                                Description\n                                                            </label>\n                                                            <textarea class=\"form-control\" cols=\"20\"\n                                                                      id=\"FuelDetails_NonStandardFuelDescription\"\n                                                                      formControlName=\"NonStandardFuelDescription\"\n                                                                      rows=\"2\"></textarea>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <h4>Quantity</h4>\n                                        <div class=\"row\">\n                                            <div class=\"container ml0\">\n                                                <!-- <input data-val=\"true\" data-val-required=\"The UoM field is required.\"\n                                                    id=\"FuelDetails_FuelQuantity_UoM\" formControlName=\"FuelDetails.FuelQuantity.UoM\"\n                                                    type=\"hidden\" value=\"None\"> -->\n\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-12\">\n                                                        <div class=\"form-check form-check-inline \">\n                                                            <input class=\"revalidate quantity-type-id form-check-input\"\n                                                                   id=\"radio-quantityfixed\"\n                                                                   formControlName=\"QuantityTypeId\" type=\"radio\"\n                                                                   [value]=\"1\">\n                                                            <label class=\"form-check-label\"\n                                                                   for=\"radio-quantityfixed\">Fixed</label>\n                                                        </div>\n                                                        <div class=\"form-check form-check-inline \">\n                                                            <input class=\"revalidate form-check-input\"\n                                                                   id=\"radio-quantityrange\"\n                                                                   formControlName=\"QuantityTypeId\" type=\"radio\"\n                                                                   [value]=\"2\">\n                                                            <label class=\"form-check-label\"\n                                                                   for=\"radio-quantityrange\">Range</label>\n                                                        </div>\n                                                        <div class=\"form-check form-check-inline\">\n                                                            <input checked=\"checked\" class=\"revalidate form-check-input\"\n                                                                   id=\"quantitynotspecified\"\n                                                                   formControlName=\"QuantityTypeId\" type=\"radio\"\n                                                                   [value]=\"3\">\n                                                            <label class=\"form-check-label\"\n                                                                   for=\"quantitynotspecified\">\n                                                                Not\n                                                                Specified\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-3 fixed-quantity\"\n                                                         *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['QuantityTypeId'].value)==1\">\n                                                        <div class=\"form-group\" style=\"pointer-events: visible;\">\n                                                            <div class=\"mt5\">\n                                                                <label>Quantity</label>\n                                                                <div class=\"input-group\">\n                                                                    <input class=\"form-control datatype-decimal total-gallons-required\"\n                                                                           id=\"FuelDetails_FuelQuantity_Quantity\"\n                                                                           formControlName=\"Quantity\" type=\"text\"\n                                                                           value=\"0\">\n                                                                    <span class=\"input-group-addon uom quantity-uom\">Gallons</span>\n                                                                </div>\n                                                                <div *ngIf=\"formSubmited && f.FuelDetails.get('Quantity').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.FuelDetails.get('Quantity').errors?.required\">\n                                                                        Quantity is required\n                                                                    </span>\n                                                                </div>\n                                                                <div *ngIf=\"f.FuelDetails.get('Quantity').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.FuelDetails.get('Quantity').errors.pattern\">\n                                                                        Invalid.\n                                                                    </span>\n                                                                </div>\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-6\"\n                                                         *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['QuantityTypeId'].value)==2\">\n                                                        <div class=\"resetleftspace\">\n                                                            <div class=\"row mt5 mb15 form-group\">\n                                                                <div class=\"col-sm-6\">\n                                                                    <div class=\"dib\">\n                                                                        <label for=\"FuelDetails_FuelQuantity_MinimumQuantity\">\n                                                                            Min<span class=\"required pl4\"\n                                                                                     aria-required=\"true\">*</span>\n                                                                        </label>\n                                                                    </div>\n                                                                    <div class=\"input-group pull-left\">\n                                                                        <input class=\"form-control datatype-decimal always\"\n                                                                               id=\"FuelDetails_FuelQuantity_MinimumQuantity\"\n                                                                               formControlName=\"MinimumQuantity\"\n                                                                               type=\"text\" [value]=\"\">\n                                                                        <!-- (change)=\"validateMinMaxValue(this.f.FuelDetails.get('MinimumQuantity'))\" -->\n                                                                        <span class=\"input-group-addon uom quantity-uom\">Gallons</span>\n                                                                    </div>\n                                                                    <div *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors\">\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors.pattern\">\n                                                                            Invalid.\n                                                                        </span>\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors.required\">\n                                                                            Minimum Quantity is Required\n                                                                        </span>\n                                                                        <!-- <span class=\"text-danger\" *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors.RangeError\">\n                                                                            Max Quantity should be greater than Min Quantatity\n                                                                        </span> -->\n                                                                    </div>\n\n                                                                </div>\n                                                                <div class=\"col-sm-6\">\n                                                                    <div class=\"dib\">\n                                                                        <label for=\"FuelDetails_FuelQuantity_MaximumQuantity\">\n                                                                            Max<span class=\"required pl4\"\n                                                                                     aria-required=\"true\">*</span>\n                                                                        </label>\n                                                                    </div>\n                                                                    <div class=\"input-group pull-left\">\n                                                                        <input class=\"form-control\"\n                                                                               id=\"FuelDetails_FuelQuantity_MaximumQuantity\"\n                                                                               formControlName=\"MaximumQuantity\"\n                                                                               type=\"text\" [value]=\"\">\n                                                                        <!-- (change)=\"validateMinMaxValue(this.f.FuelDetails.get('MaximumQuantity'))\" -->\n                                                                        <span class=\"input-group-addon uom quantity-uom\">Gallons</span>\n                                                                    </div>\n                                                                    <div *ngIf=\"f.FuelDetails.get('MaximumQuantity').errors\">\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MaximumQuantity').errors.pattern\">\n                                                                            Invalid.\n                                                                        </span>\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MaximumQuantity').errors.required\">\n                                                                            Maximum Quantity is Required\n                                                                        </span>\n                                                                        <!-- <span class=\"text-danger\">\n                                                                            Max Quantity should be greater than Min Quantatity\n                                                                            {{f.FuelDetails.get('MaximumQuantity').errors?.RangeError}}\n                                                                        </span> -->\n\n                                                                    </div>\n\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-3 ftl-controls ftl-billable-quantity mt5\">\n                                                        <div class=\"form-group\">\n                                                            <ng-container *ngIf=\"f.TruckLoadType.value==2\">\n                                                                <label>Billable Quantity</label>\n                                                                <select class=\"form-control enum-ddl qty-ind\"\n                                                                        id=\"FuelDetails_FuelQuantity_QuantityIndicatorTypes\"\n                                                                        formControlName=\"QuantityIndicatorTypes\">\n                                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                            *ngFor=\"let item of billableList\"\n                                                                            [selected]=\"item.Id== f.FuelDetails.get('QuantityIndicatorTypes').value\">\n                                                                        {{item.Name}}\n                                                                    </option>\n                                                                    <!-- <option [value]=\"1\" [selected]=\"true\">Net</option>\n                                                                    <option [value]=\"2\">Gross</option> -->\n                                                                </select>\n                                                            </ng-container>\n                                                            <div class=\"row\">\n                                                                <div class=\"text-danger col-12 fs12 mt5\"\n                                                                     id=\"quantity-warning-message\">\n                                                                    <span class=\"qty-ind-err hide-element warning\"\n                                                                          style=\"display: none;\">\n                                                                        Changes will be updated\n                                                                        on\n                                                                        BOL.\n                                                                        Taxes will continue to be calculated as per\n                                                                        state\n                                                                        quantity regulations.\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n\n                <app-pricing-section [locationForm]=\"sourcingRequestForm\" [formSubmited]=\"formSubmited\"\n                                     [UoM]=\"f.AddressDetails.get('UOM').value\" [IsTBD]=\"false\"\n                                     (UpdateSuppressPricingChange)=\"UpdateSuppressPricing($event)\">\n\n                </app-pricing-section>\n\n                <div class=\"row\" formGroupName=\"FuelDetails\">\n                    <div class=\"col-12\" [ngClass]=\"{'hide-element':f.IsSupressOrderPricing.value}\">\n                        <!-- [Currency]=\"f.AddressDetails.get('Currency').value\" -->\n                        <app-fee-list [Parent]=\"f.FuelDetails\" [Fees]=\"LeadFees\" [isSales]=\"true\" [Currency]=\"displayCurrancy\"></app-fee-list>\n                    </div>\n                </div>\n\n\n                <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\n                    <div class=\"col-12\" [ngClass]=\"{'hide-element':f.IsSupressOrderPricing.value}\">\n                        <div class=\"well\">\n                            <h4>Payment Details</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                            <div class=\"form-check form-check-inline radio\">\n                                                <input checked=\"checked\" class=\"revalidate form-check-input\"\n                                                       id=\"radio-netpayment\" formControlName=\"PaymentTermId\" type=\"radio\"\n                                                       [value]=\"1\">\n                                                <label class=\"form-check-label\" for=\"radio-netpayment\">Net</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline radio\">\n                                                <input class=\"revalidate form-check-input\" id=\"radio-dueonreceipt\"\n                                                       formControlName=\"PaymentTermId\" type=\"radio\" [value]=\"2\">\n                                                <label class=\"form-check-label\" for=\"radio-dueonreceipt\">\n                                                    Due On\n                                                    Receipt\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline radio\">\n                                                <input class=\"revalidate form-check-input\" id=\"radio-prepaidfull\"\n                                                       formControlName=\"PaymentTermId\" type=\"radio\" [value]=\"3\">\n                                                <label class=\"form-check-label\" for=\"radio-prepaidfull\">\n                                                    Pre Paid In\n                                                    Full\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row mt5\">\n                                        <div class=\"col-sm-4 netdays\">\n                                            <input class=\"form-control always datatype-decimal\"\n                                                   id=\"FuelOfferDetails_NetDays\" formControlName=\"NetDays\" type=\"text\" [value]=\"0\"\n                                                   [disableControl]=\"sourcingRequestForm.controls['FuelDeliveryDetails']['controls']['PaymentTermId'].value != 1\">\n                                            <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('NetDays').errors\">\n                                                <span class=\"text-danger\" *ngIf=\"f.FuelDeliveryDetails.get('NetDays').errors?.min\">\n                                                    Value should be greater than 0\n                                                </span>\n                                                <span class=\"text-danger\" *ngIf=\"f.FuelDeliveryDetails.get('NetDays').errors?.required\">\n                                                    Net\n                                                    Days is required\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-8 pl0 pt8 fs12\">\n                                            Days of receipt - Upon Credit Approval\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label> Payment Method</label>\n                                        <select class=\"form-control\" id=\"FuelDeliveryDetails_PaymentMethods\"\n                                                formControlName=\"PaymentMethods\">\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                    *ngFor=\"let item of PaymentMethodsList\"\n                                                    [selected]=\"item.Id== f.FuelDeliveryDetails.get('PaymentMethods').value\">\n                                                {{item.Name}}\n                                            </option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row notes-section\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <h4>General Notes</h4>\n                            <div class=\"row\">\n                                <div class=\"col-8 form-group\">\n                                    <textarea id=\"GeneralNote\" formControlName=\"GeneralNote\" class=\"form-control col-12\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-8\">\n                                    <div class=\"list-group\">\n                                        <div *ngFor=\"let item of GeneralNotesHistory;let i = index;\">\n                                            <a href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" [ngClass]=\"{'active' :i == 0}\">\n                                                <div class=\"d-flex w-100 justify-content-between\">\n                                                    <h5 class=\"mb-1 user-name\">{{item.UserName}}</h5>\n                                                    <small>{{item.CreatedDate}}</small>\n                                                </div>\n                                                <p class=\"mb-1\">{{item.Note}}</p>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-3\">\n                <div class=\"row\" formGroupName=\"AddressDetails\" *ngIf=\"!f.IsRegularBuyer.value\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12\">\n                                <h3>Inventory Capture Method</h3>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-not-specific\" [value]=\"0\"\n                                           checked>\n                                    <label class=\"form-check-label\" for=\"Radios-not-specific\">Not Specified</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Connected\" [value]=\"1\">\n                                    <label class=\"form-check-label\" for=\"Radios-Connected\">Connected</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Manual\" [value]=\"2\">\n                                    <label class=\"form-check-label\" for=\"Radios-Manual\">Manual</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Call-in\" [value]=\"3\">\n                                    <label class=\"form-check-label\" for=\"Radios-Call-in\">Call-in</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Mixed\" [value]=\"4\">\n                                    <label class=\"form-check-label\" for=\"Radios-Mixed\">Mixed</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12 pr-0\">\n                                <h3>Cutomer</h3>\n                                <div formGroupName=\"CustomerDetails\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsNotifyDeliveries\" id=\"Chk-IsNotifyDeliveries\"\n                                               value=\"option1\" checked>\n                                        <label class=\"form-check-label\" for=\"Chk-IsNotifyDeliveries\">\n                                            Provide Delivery\n                                            Details to\n                                            Customer\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsNotifySchedules\" id=\"Chk-IsNotifySchedules\"\n                                               value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-IsNotifySchedules\">\n                                            Provide Schedule\n                                            Details to\n                                            Customer\n                                        </label>\n                                    </div>\n                                    <!-- <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsRetailJob\"\n                                            id=\"Chk-AddressDetails_IsRetailJob\" value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-AddressDetails_IsRetailJob\">Retail\n                                            Location</label>\n                                    </div> -->\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsInvitationEnabled\" id=\"Chk-IsInvitationEnabled\"\n                                               value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-IsInvitationEnabled\">\n                                            Send Invitation\n                                            Link\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <div formGroupName=\"AddressDetails\">\n\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsProFormaPoEnabled\"\n                                               id=\"Chk-AddressDetails_IsProFormaPoEnabled\" value=\"option1\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Chk-AddressDetails_IsProFormaPoEnabled\">\n                                            Enable\n                                            After-the-Fact POs (Optional)\n                                        </label>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"!f.IsRegularBuyer.value\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12 pr-0\">\n                                <h3>Asset</h3>\n                                <div formGroupName=\"AdditionalDetailsViewModel\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsAssetTracked\"\n                                               id=\"Chk-IsAssetTracked\" value=\"option1\" checked>\n                                        <label class=\"form-check-label\" for=\"Chk-IsAssetTracked\">\n                                            Enable Asset Level\n                                            Tracking\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsAssetDropStatusEnabled\" id=\"Chk-IsAssetDropStatusEnabled\"\n                                               value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-IsAssetDropStatusEnabled\">\n                                            Enable drop\n                                            status for all assets\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"enableStatusForAllAssets\" formGroupName=\"FuelDeliveryDetails\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsPrePostDipRequired\"\n                                               id=\"Chk-FuelDeliveryDetails_IsPrePostDipRequired\" value=\"option1\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Chk-FuelDeliveryDetails_IsPrePostDipRequired\">\n                                            Require Pre-Post Dip test\n                                            data for Asset/Tank\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12\">\n                                <h3 class=\"mt0\">Invoice Creation Preference</h3>\n                                <div class=\"form-group mb0\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"radio\"\n                                               formControlName=\"OrderEnforcementId\"\n                                               id=\"Radios-FuelDeliveryDetails_OrderEnforcementId\" [value]=\"1\" checked>\n                                        <label class=\"form-check-label\"\n                                               for=\"Radios-FuelDeliveryDetails_OrderEnforcementId\">\n                                            Enforce Order Level\n                                            Values\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"radio\"\n                                               formControlName=\"OrderEnforcementId\"\n                                               id=\"Radios-FuelDeliveryDetails_OrderEnforcementId_mange\" [value]=\"2\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Radios-FuelDeliveryDetails_OrderEnforcementId_mange\">\n                                            Manage\n                                            Exceptions\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"radio\"\n                                               formControlName=\"OrderEnforcementId\"\n                                               id=\"Radios-FuelDeliveryDetails_OrderEnforcementId_no\" [value]=\"3\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Radios-FuelDeliveryDetails_OrderEnforcementId_no\">\n                                            No\n                                            Enforcement\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"fixed-footer-panel\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 text-right\">\n                    <input type=\"button\" value=\"Cancel\" (click)=\"onCancel()\" class=\"btn\">\n                    <input id=\"Submit\" type=\"button\" value=\"Submit\" (click)=\"onSubmit()\"\n                           class=\"btn btn-lg btn-primary btnSubmit\">\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { SalesUserService } from '../sales-user.service';\nimport { SourcingRequestDisplayStatus, UoM } from 'src/app/app.enum';\nimport { Form, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { ConfirmDRStatus, CustomCompanyModel, CustomersAndJobs, CustomersModel, DeliveryRequestInputModel, ProductsGroup, SalesDRModel, SalesUserDRProductStatus, SalesUserDRStatus } from '../sales-user.model';\nimport * as moment from 'moment';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-sales-user-dashboard',\n  templateUrl: './sales-user-dashboard.component.html',\n  styleUrls: ['./sales-user-dashboard.component.scss']\n})\nexport class SalesUserDashboardComponent implements OnInit, OnChanges {\n\n  public IsLoading: boolean = false;\n  Sourcingrequests: any = [];\n    orders: any = [];\n    Invoices: any = [];\n    activeInvoiceDDTTab = 0;\n    public minDate: Date = new Date();\n    public maxDate: Date = new Date();\n    @Input() private SelectedDate: Date = new Date();\n    formSubmitted = false;\n    selectedCompany:{CompanyId: number, CompanyName: string} = {CompanyId: 0, CompanyName: \"\"};\n    selectedSite:{Id: number, Name: string} = {Id: 0, Name: \"\"};\n    CompanySettings: IDropdownSettings = {};\n    SiteddlSettings: IDropdownSettings = {};\n    companyList = [];\n    SiteList= [];\n    IsEditable: boolean;\n    SingleSelectSettingsById: IDropdownSettings = {};\n    FuelTypeList = [];\n    SalesDRForm: FormGroup;\n    public isLoadingSubject: BehaviorSubject<any>;\n    AllTPOCompaniesList = [];\n    UserContext = {};\n    postData= {};\n    AdditionalProducts: FormGroup[];\n    showModal = false;\n    CustomersJobsParentList: CustomersModel = {regionsAndJobsModels: [], customersandJobs: []};;\n    CustomersNJobsList: CustomersAndJobs[];\n    salesDrModel: SalesDRModel;\n    DRInput: DeliveryRequestInputModel[] = [];\n    ProductStatuses: SalesUserDRProductStatus[] = [];\n    Unit: UoM;\n    isConfirmDisabled: boolean = false;\n    QuantityRegEx = /^\\d*(\\.\\d{1,4})?$/;\n    initFormValues: any;\n    uparrow = true; \n\n\n  public DisplayRequestStatus = SourcingRequestDisplayStatus;\n  \n  constructor(private salesUserService: SalesUserService,private router: Router, private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService) {\n    this.getUserContext();\n    this.AdditionalProducts = [];\n    this.maxDate.setFullYear(this.maxDate.getFullYear() + 1);\n   }\n\n  ngOnInit() {\n    this.multiSettings();\n    this.salesDrModel = new SalesDRModel();\n    this.SalesDRForm = this.initSalesDRForm();\n    this.initFormValues = this.SalesDRForm.value;\n    this.getSourcingRequests();\n    this.getOrders();\n    this.getInvoices(0);\n    this.GetCustomersNJobs();\n    this.getProducts(0, 0);//By Default Get All Products\n\n  }\n\n  ngOnChanges(change: SimpleChanges): void {\n    if (change.SelectedDate && change.SelectedDate.currentValue) {\n        if (this.maxDate < this.SelectedDate) {\n            this.maxDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\n            this.minDate = moment(new Date(this.SelectedDate)).toDate();\n        } else {\n            this.minDate = moment(new Date(this.SelectedDate)).toDate();\n            this.maxDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\n        }\n\n    }\n}\n\n  SetStartDate(date: string, index: number) {\n      let _date = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).controls[index] as FormGroup).controls['StartDate'];\n      if (_date.value != date) {\n          _date.patchValue(date);\n      }\n  }\n\n  SetStartTime(time: string, index: number) {\n    let _startTime = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).controls[index] as FormGroup).controls['StartTime'];\n      if (_startTime.value != time) {\n        _startTime.patchValue(time);\n      }\n  }\n\n  SetEndTime(time: string, index: number) {\n    let _endTime = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).controls[index] as FormGroup).controls['EndTime'];\n      if (_endTime.value != time) {\n        _endTime.patchValue(time);\n      }\n  }\n  GetUoMString(Uom:UoM): string {\n    let UoMString:string = UoM[Uom];\n    return UoMString;\n  }\n\n  GetToolTip(prodStatus: SalesUserDRProductStatus) {\n    if(prodStatus.Status.State != SalesUserDRStatus.Success) {\n        return \"This customer is not set up to receive\\n this product at this location; please \\ncontact accounting for assistance.\";\n    }\n    else {\n        return \"\";\n    }\n  }\n\n\n  RemoveToolTip(event: MouseEvent) {\n    (<HTMLSpanElement>event.target).title = \"\";\n    //(<HTMLSpanElement>event.target).title = \"\";\n  }\n    getBGColor(prodStatus: SalesUserDRProductStatus) {\n    return (prodStatus.Status.State == SalesUserDRStatus.Success) ? 'green' : 'red';\n  }\n  GetCustomersNJobs() {\n    this.IsLoading = true;\n    this.salesUserService.GetCustomersAndLocations().subscribe(customersAndLocations => {\n      if (customersAndLocations) {\n        var _cusAndLocations = customersAndLocations;\n        var _joblist = customersAndLocations.customersandJobs.map(item => {\n          return {\n            Id: item.JobId,\n            Name: item.JobName\n          } \n        });\n\n        var _custlist = customersAndLocations.customersandJobs.map(item => {\n          return {\n            CompanyId: item.CustomerId,\n            CompanyName: item.CustomerName\n          } \n        });\n      }\n      this.SiteList = _joblist;\n\n      //Filter Unique Customers\n      this.AllTPOCompaniesList = this.FilterUniqueCustomers(_custlist);\n      //Sort Customers by Name\n      this.AllTPOCompaniesList.sort((a,b) => (a.CompanyName.toLowerCase() > b.CompanyName.toLowerCase()) ? 1 : ((b.CompanyName.toLowerCase() > a.CompanyName.toLowerCase()) ? -1 : 0));\n      \n      //Sort Job By Names\n      this.SiteList.sort((a,b) => (a.Name.toLowerCase() > b.Name.toLowerCase()) ? 1 : ((b.Name.toLowerCase() > a.Name.toLowerCase()) ? -1 : 0));\n\n      this.CustomersJobsParentList = _cusAndLocations;\n      this.IsLoading = false;\n    });\n\n   \n  }\n\n  FilterUniqueCustomers(custList: CustomCompanyModel[]): CustomCompanyModel[] {\n    const res = [];\n    const map = new Map();\n    for(const item of custList) {\n        if(!map.has(item.CompanyId)) {\n            map.set(item.CompanyId, true);\n            res.push({\n                CompanyId: item.CompanyId,\n                CompanyName: item.CompanyName\n            });\n        }\n    }\n    return res;\n  }\n  getProducts(companyId: number, jobId: number) {\n    this.IsLoading = true;\n    this.salesUserService.GetProducts(companyId, jobId).subscribe(data =>{\n      this.FuelTypeList = data; \n      this.IsLoading = false;\n    })\n    \n  }\n  addProducts() {\n    this.formSubmitted = false;\n    this.AdditionalProducts.push(this.initAdditionalProducts());\n    (this.SalesDRForm.get('AdditionalProducts') as FormArray).push(this.initAdditionalProducts());\n    this.setProducts();\n  }\n\n  setProducts() {\n    if(this.selectedSite.Id > 0 && this.selectedCompany.CompanyId > 0) {\n      this.getProducts(this.selectedCompany.CompanyId, this.selectedSite.Id);\n    }\n    else {\n      this.getProducts(0, 0);\n    }\n  }\n\n  removeProduct(index) {\n    this.formSubmitted = false;\n    (this.SalesDRForm.controls.AdditionalProducts as FormArray).removeAt(index);\n    this.AdditionalProducts.splice(index, 1);\n  }\n\n  initAdditionalProducts(): FormGroup {\n    let _addProd = this.fb.group({\n        Quantity: this.fb.control('', [Validators.required, Validators.pattern(this.QuantityRegEx)]),\n        UoM: this.fb.control(1, Validators.required),\n        StartDate: this.fb.control(''),\n        StartTime: this.fb.control(''),\n        EndTime: this.fb.control(''),\n        FuelTypes: this.fb.control([], Validators.required),\n        DRPO: this.fb.control('')\n    });\n    return _addProd;\n  }\n\n  initSalesDRForm(): FormGroup {\n    this.AdditionalProducts.push(this.initAdditionalProducts());\n    let _form = this.fb.group({\n      CompanyList: this.fb.control([], Validators.required),\n      SiteList: this.fb.control([], Validators.required),\n      DRNotes: this.fb.control(''),\n      AdditionalProducts: this.fb.array(this.AdditionalProducts)\n     });\n     return _form;\n  }\n\n  getCompanies() {\n    //this.isLoadingSubject.next(true);\n    this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\n      this.companyList = await (data);\n      //this.isLoadingSubject.next(false);\n  });\n  }\n\n  getUserContext() {\n    this.salesUserService.GetUserContext().subscribe(data => {\n        this.UserContext = data;\n    })\n}\n\n  clearProducts() {\n    if(this.SalesDRForm.controls.AdditionalProducts != undefined && this.SalesDRForm.controls.AdditionalProducts != null && (this.SalesDRForm.controls.AdditionalProducts as FormArray).length > 1) {\n      for(let i = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).length - 1); i > 0; i--) {\n        this.removeProduct(i);\n      }\n    }\n  }\n\n  clearSalesDRForm(){\n    this.clearProducts();\n    this.SalesDRForm.reset(this.initFormValues);\n    this.formSubmitted = false;\n\n  }\n\nupdateFormControlValidators(control: any, validators: any[]) {\n  control.setValidators(validators);\n  control.updateValueAndValidity();\n}\n\nFindSuccessStatus(status, index) {\n  if(status.Status.State ==  SalesUserDRStatus.Success) {\n    return status.Status.State == SalesUserDRStatus.Success;\n  }\n}\n\nonValidate() {\n  this.IsLoading = true;\n  //Copy Form values to model\n  this.formSubmitted = true;\n  if(!this.SalesDRForm.valid) {\n    this.IsLoading = false;\n    return;\n  }\n  this.SalesDRformToModel();\n\n  //Post the model for validations\n  this.salesUserService.ValidateDREntryForm(this.salesDrModel).subscribe(res => {\n    if(res) {\n      var _inputDR = res;\n    }\n\n    this.DRInput = _inputDR.RaiseDeliveryRequestInput;\n    this.ProductStatuses = _inputDR.ProductStatuses;\n    if(this.ProductStatuses && this.ProductStatuses.length > 0) {\n      let successStatus = this.ProductStatuses.find((status, index) => this.FindSuccessStatus(status, index));\n      this.isConfirmDisabled = successStatus ? false : true;\n    }\n    this.IsLoading = false;\n  });\n  \n  this.showModal = true;\n}\n\n  onSubmit() {\n   this.IsLoading = true;\n\n    this.salesUserService.CreateDREntryForm(this.DRInput).subscribe(data => {\n      if (data && data.StatusCode == ConfirmDRStatus.Success) {\n          var _DRstatus = data;\n\n          Declarations.msgsuccess(\"DR/Order Creation was Successful.\", undefined, undefined);\n          this.IsLoading = false;\n      } else {\n          Declarations.msgerror(data.StatusMessage, undefined, undefined);\n          this.IsLoading = false;\n          return;\n      }\n\n    })\n    \n    this.clearForm();\n  }\n\n  clearForm() {\n    this.salesDrModel = new SalesDRModel();\n    this.clearSalesDRForm();\n    this.SalesDRForm.reset(this.initFormValues);\n    this.showModal = false;\n    this.formSubmitted = false;\n  }\n\n  multiSettings() {\n    this.CompanySettings = {\n      singleSelection: true,\n      closeDropDownOnSelection: true,\n      idField: 'CompanyId',\n      textField: 'CompanyName',\n      enableCheckAll: false,\n      itemsShowLimit: 1,\n      allowSearchFilter: true\n    };\n    this.SingleSelectSettingsById = {\n      singleSelection: true,\n      closeDropDownOnSelection: true,\n      idField: 'Id',\n      textField: 'Name',\n      enableCheckAll: false,\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 1,\n      allowSearchFilter: true\n    };\n  }\n\n  onCompanySelect(company: any): void {\n        this.SalesDRForm.controls.SiteList.setValue([]);\n        (this.SalesDRForm.controls.AdditionalProducts as FormArray).controls.forEach(x=> x.reset(this.initAdditionalProducts().value));\n        this.selectedCompany.CompanyId = company.CompanyId;\n        this.selectedCompany.CompanyName = company.CompanyName;\n        this.SalesDRForm.controls.CompanyList.setValue([{ CompanyId: company.CompanyId, CompanyName: company.CompanyName }]);\n        \n        var _filteredSites = this.CustomersJobsParentList.customersandJobs.filter(x => x.CustomerId == company.CompanyId).map(item => {\n          return {\n            Id: item.JobId,\n            Name: item.JobName\n          }\n        });\n\n        this.SiteList = _filteredSites;\n        this.SiteList.sort((a,b) => (a.Name.toLowerCase() > b.Name.toLowerCase()) ? 1 : ((b.Name.toLowerCase() > a.Name.toLowerCase()) ? -1 : 0));\n        if(this.selectedSite.Id > 0 && this.selectedCompany.CompanyId > 0) {\n          this.getProducts(this.selectedCompany.CompanyId, this.selectedSite.Id);\n        }\n        else {\n          this.getProducts(0, 0);\n        }\n        \n      /*this.selectedOrder = [];\n      this.SelectedCustomerId = item.CompanyId;\n      this.SiteList = this.drOrders.filter(x => x.CompanyId == item.CompanyId).map((element) => ({ Id: element.JobId, Name: element.JobName }));\n      this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), [])); */\n  }\n\n  onCompanyDeSelect(event: any) {\n    this.selectedCompany.CompanyId = 0;\n    this.selectedSite.Id = 0;\n    this.SiteList = [];\n    this.FuelTypeList = [];\n    this.SalesDRForm.controls.SiteList.setValue([]);\n    this.getProducts(0, 0);\n    this.clearForm();\n  }\n\n  onSiteSelect(sites: any) {\n    (this.SalesDRForm.controls.AdditionalProducts as FormArray).controls.forEach(x=> x.reset(this.initAdditionalProducts().value));\n      this.selectedSite.Id = sites.Id;\n      this.selectedSite.Name = sites.Name;\n      this.SalesDRForm.controls.SiteList.setValue([{ Id: sites.Id, Name: sites.Name }]);\n\n      if(this.selectedSite.Id > 0 && this.selectedCompany.CompanyId > 0) {\n        this.getProducts(this.selectedCompany.CompanyId, this.selectedSite.Id);\n      }\n      else {\n        this.getProducts(0, 0);\n      }\n  }\n\n  onSiteDeSelect(event: any) {\n    this.FuelTypeList = []; \n    (this.SalesDRForm.controls.AdditionalProducts as FormArray).controls.forEach(x=> x.reset(this.initAdditionalProducts().value));\n    this.getProducts(0, 0);\n  }\n\n\nSalesDRformToModel() {\n  this.salesDrModel = new SalesDRModel();\n  if(this.SalesDRForm.valid) {\n    this.salesDrModel.CompanyId = this.SalesDRForm.controls.CompanyList.value[0].CompanyId;\n  this.salesDrModel.CompanyName = this.SalesDRForm.controls.CompanyList.value[0].CompanyName;\n  this.salesDrModel.JobId = this.SalesDRForm.controls.SiteList.value[0].Id;\n  this.salesDrModel.JobName = this.SalesDRForm.controls.SiteList.value[0].Name;\n  this.salesDrModel.DRNotes = this.SalesDRForm.controls.DRNotes.value;\n  this.salesDrModel.Products = [];\n  var addProducts = this.SalesDRForm.controls.AdditionalProducts as FormArray;\n\n\n  for(let control of addProducts.controls) {\n    if(control instanceof FormGroup) {\n      this.salesDrModel.Products.push({\n        Quantity: control.value.Quantity,\n        UoM: control.value.UoM,\n        StartDate: control.value.StartDate,\n        StartTime: control.value.StartTime,\n        EndTime: control.value.EndTime,\n        DRPO: control.value.DRPO,\n        FuelTypes: {Id: control.value.FuelTypes[0].Id, Name: control.value.FuelTypes[0].Name},\n        FuelTypeId: control.value.FuelTypes[0].Id,\n        FuelName: control.value.FuelTypes[0].Name\n\n      });\n    }\n  }\n  }\n  \n}\n\npublic getJobLists(companyId, isFtl, foAsTerminal) {\n  let companyName = this.AllTPOCompaniesList.find(t => t.CompanyId == companyId).CompanyName;\n  let ftlvalue = isFtl == \"FullTruckLoad\" ? true : false;\n  let tervalue = foAsTerminal == \"Terminal\" ? true : false;\n  this.salesUserService.GetJobLists(companyName, ftlvalue, tervalue).subscribe(data => {\n      if (data) {\n          let joblistdata = data.map(item => {\n              return {\n                  Id: item.Id,\n                  Name: item.Name\n              }\n          });\n          this.SiteList = joblistdata;\n      }\n  });\n}\n\n    public toggleArrow() {\n        this.uparrow = !this.uparrow;\r\n    }\n  public getSourcingRequests() \n  {\n    this.IsLoading = true;\n    var isFromDashboard = true;\n      this.salesUserService.GetSourcingRequests(this.DisplayRequestStatus.All ,isFromDashboard).subscribe(data => {\n      this.IsLoading = false;\n      this.Sourcingrequests = data;\n    });\n  }\n  public getOrders() \n  {\n    this.IsLoading = true;\n    this.salesUserService.GetOrdersForDashboard().subscribe(data => {\n      this.IsLoading = false;\n      this.orders = data;\n    });\n  }\n    public getInvoices(type) {\n        this.IsLoading = true;\n        this.salesUserService.GetInvoicesForDashboard(type).subscribe(data => {\n            this.IsLoading = false;\n            this.Invoices = data;\n        });\n    }\n    public changeActiveTab(type) {\n        this.activeInvoiceDDTTab = type;\n        this.getInvoices(type);\n    }\n  public navigateToSourcing(): void {\n    this.router.navigate([]).then(result => { window.open('/SalesUser/SourcingRequest/Index', '_blank'); });\n  }\n  public navigateToOrders(): void {\n    this.router.navigate([]).then(result => { window.open('/Supplier/Order/View', '_blank'); });\n  }\n    public navigateToInvoice(): void {\n        this.router.navigate([]).then(result => { window.open('Supplier/Invoice/View', '_blank'); });\n    }\n}\n\n","<div class=\"sales-user-dashboard-container\">\n<!--Order Entry Form Start-->\n<form [formGroup]=\"SalesDRForm\" >\n<div class=\"container well accordion\"id=\"entryForm\">\n    <div class=\"loader\" *ngIf=\"IsLoading\">\n        <div class=\"loading-content text-center\">\n            <div class=\"spinner\"></div>\n        </div>\n    </div>\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-11\"><div class=\"well-header\"><h4 class=\"well-title\">Order Entry Form</h4></div></div>\r\n                    <div class=\"col-1 mt-2 d-flex justify-content-center\" *ngIf=!uparrow><i class=\"fas fa-chevron-down fa-2x arrow\" data-toggle=\"collapse\" data-target=\"#collapseEntryForm\" aria-expanded=\"true\" aria-controls=\"collapseEntryForm\" (click)=\"toggleArrow()\"></i></div>\r\n                    <div class=\"col-1 mt-2 d-flex justify-content-center\" *ngIf=uparrow><i class=\"fas fa-chevron-up fa-2x arrow\" data-toggle=\"collapse\" data-target=\"#collapseEntryForm\" aria-expanded=\"true\" aria-controls=\"collapseEntryForm\" (click)=\"toggleArrow()\"></i></div>\r\n                </div>\r\n                <div id=\"collapseEntryForm\" class=\"collapse show\" data-parent=\"#entryForm\">\r\n                    <div class=\"row well-header\">\r\n                        <div class=\"col-sm-4\">\r\n                            <label for=\"Quantity\" class=\"control-label font-weight-bold\">Company Name<span class=\"color-maroon\">*</span></label>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown class=\"single-select\"\r\n                                                         [placeholder]=\"'Select Company'\"\r\n                                                         [settings]=\"CompanySettings\"\r\n                                                         [data]=\"AllTPOCompaniesList\"\r\n                                                         formControlName=\"CompanyList\"\r\n                                                         (onSelect)=\"onCompanySelect($event)\"\r\n                                                         (onDeSelect)=\"onCompanyDeSelect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"formSubmitted && SalesDRForm.controls?.CompanyList?.errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"SalesDRForm.controls?.CompanyList?.errors?.required\">\r\n                                        Company is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <label for=\"Quantity\" class=\"control-label font-weight-bold\">Ship-to Location <span class=\"color-maroon\">*</span></label>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown class=\"single-select\"\r\n                                                         [placeholder]=\"'Select Ship-to location'\"\r\n                                                         [settings]=\"SingleSelectSettingsById\"\r\n                                                         [data]=\"SiteList\"\r\n                                                         formControlName=\"SiteList\"\r\n                                                         (onSelect)=\"onSiteSelect($event)\"\r\n                                                         (onDeSelect)=\"onSiteDeSelect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"formSubmitted && SalesDRForm.controls?.SiteList?.errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"SalesDRForm.controls?.SiteList?.errors?.required\">\r\n                                        Ship-to location is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div formArrayName=\"AdditionalProducts\" *ngFor=\"let product of AdditionalProducts; let i=index; let isLast = last\" class=\"mx-3\">\r\n                        <div class=\"row well-header\" [formGroupName]=\"i\">\r\n                            <!--Repeating Row-->\r\n                            <div class=\"col-sm-12 addProdTemplate shadow-sm\">\r\n                                <div class=\"row mt-3\">\r\n                                    <!--Row 1-->\r\n                                    <div class=\"form-group col-sm-3\">\r\n                                        <!--Product-->\r\n                                        <label for=\"idFuelType\" class=\"control-label font-weight-bold\">Product</label>\r\n                                        <span class=\"color-maroon\">*</span>\r\n                                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                                 formControlName=\"FuelTypes\"\r\n                                                                 id=\"FuelTypes\"\r\n                                                                 [placeholder]=\"'Select Product'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelTypeList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <div *ngIf=\"formSubmitted && SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.FuelTypes?.errors ? true : false\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.FuelTypes?.errors?.required ? true : false\">\r\n                                                Product is Required.\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group col-sm-3\">\r\n                                        <!--Quantity-->\r\n                                        <label for=\"Quantity\" class=\"control-label font-weight-bold\">Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input type=\"text\" value='' class=\"form-control\" id=\"Quantity\" placeholder=\"\" formControlName=\"Quantity\">\r\n                                        <div *ngIf=\"formSubmitted && SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.Quantity?.errors ? true : false\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.Quantity?.errors?.required ? true : false\">\r\n                                                Quantity is required\r\n                                            </span>\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls.Quantity?.errors?.pattern ? true : false\">\r\n                                                Quantity is Invalid\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group col-sm-3\">\r\n                                        <!--UoM-->\r\n                                        <label for=\"idUoM\" class=\"control-label font-weight-bold\">UoM<span class=\"color-maroon\">*</span></label>\r\n                                        <select class=\"form-control\" id=\"idUoM\"\r\n                                                formControlName=\"UoM\">\r\n                                            <option value=\"1\">Gallons</option>\r\n                                            <option value=\"2\">Litres</option>\r\n                                            <option value=\"3\">Barrels</option>\r\n                                            <option value=\"4\">MetricTons</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"formSubmitted && SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.UoM?.errors ? true : false\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.UoM?.errors?.required ? true : false\">\r\n                                                UoM is required\r\n                                            </span>\r\n                                        </div>\r\n                                    </div><!--End of UoM-->\r\n                                    <div class=\"col-sm-3 form-group\">\r\n                                        <!--DR-PO#-->\r\n                                        <label for=\"DR_PO\" class=\"control-label font-weight-bold\">Delivery Level PO#</label>\r\n                                        <input type=\"text\" value='' class=\"form-control\" id=\"DR_PO\" placeholder=\"\" formControlName=\"DRPO\">\r\n                                        <!-- Uncomment Below for Required Validations -->\r\n                                        <!-- <div *ngIf=\"formSubmited && SalesDRForm.controls.AdditionalProducts[i].controls.DRPO.errors\">\r\n                                <span class=\"text-danger\"\r\n                                      *ngIf=\"SalesDRForm.controls.AdditionalProducts[i].controls.DRPO.errors?.required\">\r\n                                      DR-PO# is required\r\n                                </span>\r\n                            </div> -->\r\n                                    </div>\r\n                                </div><!--End of Row 1-->\r\n\r\n                                <div class=\"row\">\r\n                                    <!--Row 2-->\r\n                                    <div class=\"form-group col-sm-3 col-md-2\">\r\n                                        <label class=\"font-weight-bold\">Start Date <!-- <span class=\"color-maroon\">*</span> --></label>\r\n                                        <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\"\r\n                                               placeholder=\"Start Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                               [maxDate]=\"maxDate\" [minDate]=\"minDate\"\r\n                                               (onDateChange)=\"SetStartDate($event, i)\" autocomplete=\"off\" />\r\n                                        <!--  <div *ngIf=\"formSubmited && SalesDRForm.controls.AdditionalProducts[i].controls.StartDate.invalid && SalesDRForm.controls.AdditionalProducts[i].controls.StartDate.touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SalesDRForm.controls.AdditionalProducts[i].controls.StartDate.errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div> -->\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-3 col-md-2 form-group\">\r\n                                        <label for=\"idStartTime\" class=\"font-weight-bold\">Start Time</label>\r\n                                        <input type=\"text\" class=\"form-control timepicker\"\r\n                                               formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                               placeholder=\"Start Time\"\r\n                                               (onTimeChange)=\"SetStartTime($event, i)\" autocomplete=\"off\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-2 form-group\">\r\n                                        <label for=\"idEndTime\" class=\"font-weight-bold\">End Time</label>\r\n                                        <input type=\"text\" class=\"form-control timepicker\"\r\n                                               formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                               placeholder=\"End Time\"\r\n                                               (onTimeChange)=\"SetEndTime($event, i)\" autocomplete=\"off\" />\r\n                                    </div>\r\n                                </div><!--End of Row 2-->\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 form-group\">\r\n                                        <a class=\"float-right\" *ngIf=\"i > 0\">\r\n                                            <i class=\"fa fa-trash-alt text-danger\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Remove\" (click)=\"removeProduct(i)\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div><!--End of Repeating Row-->\r\n                    </div>\r\n                    <div class=\"row well-header\">\r\n                        <!-- Add Product Row-->\r\n                        <div class=\"col-sm-4\">\r\n                            <a class=\"add-partial-block\" (click)=\"addProducts()\">\r\n                                <i class=\"fas fa-plus-circle\"></i>\r\n                                Add Product\r\n                            </a>\r\n                        </div>\r\n                    </div> <!--End of Add Product Row-->\r\n                    <div class=\"row well-header\">\r\n                        <!--DRNotes Row-->\r\n                        <div class=\"form-group col-sm-3\">\r\n                            <label for=\"DRNotes\" class=\"font-weight-bold\">DR Notes</label>\r\n                            <textarea name=\"DRNotes\" id=\"DRNotes\" cols=\"30\" rows=\"2\" formControlName=\"DRNotes\"></textarea>\r\n                        </div>\r\n                    </div><!--End of DRNotes Row-->\r\n\r\n                    <div class=\"row\">\r\n                        <!--Clear and Submit Buttons-->\r\n                        <div class=\"col-sm-12 text-right\">\r\n                            <div class=\"container form-group\">\r\n                                <input type=\"button\" value=\"Clear\" class=\"btn\" (click)=\"clearSalesDRForm()\" data-toggle=\"modal\" data-target=\"#validateModal\">&nbsp;&nbsp;\r\n                                <input id=\"Submit\" type=\"button\" value=\"Submit\" (click)=\"onValidate()\"\r\n                                       class=\"btn btn-lg btn-primary btnSubmit\">\r\n                            </div>\r\n                        </div>\r\n                    </div><!--End of Clear and Submit Buttons-->\r\n                </div>\r\n            </div>\r\n    </div>\n</div>\n\n</form>\n<!--Order Entry Form End-->\n\n<!--Order Entry Form Validations-->\n<div class=\"container p-0\">\n    <div class=\"container well\">\n        <div class=\"loader\" *ngIf=\"IsLoading\">\n            <div class=\"loading-content text-center\">\n                <div class=\"spinner\"></div>\n            </div>\n        </div>\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"modal fade\" id=\"validateModal\" tabindex=\"-1\" [ngClass]=\"{'show': showModal}\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <div class=\"col-sm-8 text-left \">\n                                <h4 class=\"modal-title pull-left p-0\"><b>Preview</b></h4>\n                            </div>\n                            <div class=\"col-sm-4 text-right\">\n                                <button class=\"close pull-right\" data-dismiss=\"modal\" (click)=\"showModal = false\">&times;</button>\n                            </div>\n                        </div>\n\n                        <div class=\"modal-body\">\n                            <div class=\"row form-group\" *ngIf=\"salesDrModel != undefined && ((salesDrModel | json) != '{}')  \">\n                                <div class=\"col-sm-4\">\n                                    <h5 class=\"font-800\">Customer Company</h5>\n                                    <div><span>{{salesDrModel.CompanyName}}</span></div>\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <h5 class=\"font-800\">Location Name</h5>\n                                    <div><span>{{salesDrModel.JobName}}</span></div>\n                                </div>\n                            </div>\n\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Product</th>\n                                        <th>Quantity</th>\n                                        <th>Delivery Date</th>\n                                        <th>Delivery Window</th>\n                                        <th>Status</th>\n                                    </tr>\n                                </thead>\n                                <tbody *ngIf=\"ProductStatuses != undefined && ProductStatuses.length > 0\">\n                                    <tr *ngFor=\"let prodStatus of ProductStatuses\">\n                                        <td>{{prodStatus.Product.FuelName}}</td>\n                                        <td>{{prodStatus.Product.Quantity}} &nbsp; {{ GetUoMString(prodStatus.Product.UoM) }}</td>\n                                        <td>{{prodStatus.Product.StartDate}}</td>\n                                        <td>{{prodStatus.Product.StartTime}} - {{prodStatus.Product.EndTime}}</td>\n                                        <td class=\"text-center\"><span class=\"dot tooltip-dot\" [ngStyle]=\"{backgroundColor: getBGColor(prodStatus)}\" placement=\"bottom\" container=\"body\" ngbTooltip=\"{{GetToolTip(prodStatus)}}\"></span></td>\n                                    </tr>   \n                                </tbody>\n                            </table>\n\n                            <div class=\"row form-group\">\n                                <div class=\"col-sm-12\">\n                                    <p class=\"font-weight-bold my-2\">DR Notes</p>\n                                    <div>{{salesDrModel.DRNotes}}</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"modal-footer\">\n                            <div class=\"col-sm-12 text-right pull-right pr-0\">\n                                <button class=\"btn btn-clear\" data-dismiss=\"modal\" (click)=\"showModal = false\">Back</button>\n                                <button class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"isConfirmDisabled\">Confirm</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!--End of Order Entry Form Validations-->\n\n\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"well\">\n                <div class=\"well-header\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-9 form-row align-items-center\">\n                            <div class=\"d-inline-block\">\n                                <h4 class=\"well-title\">Sourcing Request</h4>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                            <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigateToSourcing()\">View More</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"well-body  padding-8\">\n                    <div class=\"table-wrapper\">\n                        <!-- <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\n                            <span class=\"spinner-dashboard pa\"></span>\n                        </div> -->\n                        <table  class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th >Request #</th>\n                                    <th >Location</th>\n                                    <th >Fuel Type</th>\n                                    <th >Quantity</th>\n                                    <th >Pricing</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let item of Sourcingrequests\">\n                                    <td>{{item.RequestNumber}}</td>\n                                    <td>{{item.JobName}} </td>\n                                    <td>{{item.FuelType }}</td>\n                                    <td>{{item.Quantity}}</td>\n                                    <td>{{item.Pricing}}</td>                  \n                                </tr>\n                                <tr *ngIf=\"Sourcingrequests && Sourcingrequests.length==0\">\n                                    <td colspan=\"5\">\n                                        <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                            <div class=\"col-12 align-items-center text-center\">\n                                                <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                <h4>No Data Found</h4>\n                                            </div>\n                                        </div>\n                                     </td>  \n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"well\">\n                <div class=\"well-header\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-9 form-row align-items-center\">\n                            <div class=\"d-inline-block\">\n                                <h4 class=\"well-title\">Orders</h4>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                            <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigateToOrders()\">View More</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"well-body  padding-8\">\n                    <div class=\"table-wrapper\">\n                        <table  class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th >PO #</th>\n                                    <th >Location Name</th>\n                                    <th >Customer</th>\n                                    <th >Fuel Type</th>\n                                    <th >Quantity</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of orders\">\n                                    <td>{{item.PoNumber}}</td>\n                                    <td>{{item.JobName}} </td>\n                                    <td>{{item.Customer }}</td>\n                                    <td>{{item.FuelType}}</td>\n                                    <td>{{item.Quantity}}</td>         \n                                    </tr>\n                                    <tr *ngIf=\"orders && orders.length==0\">\n                                        <td colspan=\"5\">\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Data Found</h4>\n                                                </div>\n                                            </div>\n                                         </td>  \n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n   \n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"well\">\n                <div class=\"well-header\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-9 form-row align-items-center\">\n                            <div class=\"d-inline-block\">\n                                <h4 class=\"well-title\">{{ (activeInvoiceDDTTab==6)? 'DDTs' : 'Invoices' }}</h4>\n                            </div>\n                            <div class=\"dib border radius-capsule shadow-b ml20\">\n                                <div class=\"btn-group btn-filter\">\n                                    <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"0\" [checked]=\"activeInvoiceDDTTab==0\">\n                                    <label class=\"btn ml0\" (click)=\"changeActiveTab(0)\">Invoices</label>\n                                    <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"6\" [checked]=\"activeInvoiceDDTTab==6\">\n                                    <label class=\"btn\" (click)=\"changeActiveTab(6)\">DDTs</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                            <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigateToInvoice()\">View More</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"well-body  padding-8\">\n                    <div class=\"table-wrapper\">\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>InvoiceNumber #</th>\n                                    <th>PoNumber</th>\n                                    <th>SourcingRequest</th>\n                                    <th>DropDate</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of Invoices\">\n                                        <td>{{item.InvoiceNumber}}</td>\n                                        <td>{{item.PoNumber}} </td>\n                                        <td>{{item.SourcingRequest }}</td>\n                                        <td>{{item.DropDate}}</td>\n                                        <td>\n                                            <span class=\"badge badge-pill badge-primary\" [ngClass]=\"{'badge-success': item?.Status=='Received','badge-danger': item?.Status=='Rejected','badge-warning': item?.Status.length>8 }\"\n                                                  placement=\"left\"\n                                                  ngbTooltip=\"{{item?.Status}}\">\n                                                {{ (item?.Status.length>8)? (item?.Status | slice:0:8)+'..':(item?.Status) }}\n                                            </span>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"Invoices && Invoices.length==0\">\n                                        <td colspan=\"5\">\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Data Found</h4>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n","import * as internal from \"stream\";\r\nimport { DropDown } from \"../app.constants\";\r\nimport { UoM } from \"../app.enum\";\r\n\r\nexport class Geocode {\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n    CountyName: string;\r\n    StateCode: string;\r\n    StateName: string;\r\n    City: string;\r\n    CountryCode: string;\r\n    CountryName: string;\r\n    ZipCode: string;\r\n}\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class FeeModel {\r\n    public OrderId: number;\r\n    public Currency: number;\r\n    public TruckLoadType: number;\r\n    public TruckLoadCategoryId: number;\r\n    public CommonFee: boolean;\r\n    public FeeConstraintTypeId: number;\r\n    public SpecialDate: string;\r\n    public FeeTypeId: string;\r\n    public FeeSubTypeId: number;\r\n    public OtherFeeDescription: string;\r\n    public MinimumGallons: number;\r\n    public DeliveryFeeByQuantity: ByQuantityModel[];\r\n    public Fee: number;\r\n    public IncludeInPPG: boolean;\r\n}\r\n\r\nexport class ByQuantityModel {\r\n    Currency: number;\r\n    MinQuantity: number = 0;\r\n    MaxQuantity: number;\r\n    Fee: number;\r\n}\r\n\r\nexport class ContactPersonModel {\r\n    public ContactPersonModel() {\r\n        this.IsPhoneNumberConfirmed = true;\r\n    }\r\n    public Name: string;\r\n    public PhoneNumber: string;\r\n    public Email: string;\r\n    public IsPhoneNumberConfirmed: boolean;\r\n}\r\n\r\nexport class GeneralNote {\r\n    UserName: string;\r\n    Note: string;\r\n    CreatedDate: string;\r\n}\r\n\r\nexport class SalesDRModel {\r\n    constructor() {\r\n        this.CompanyId = 0;\r\n        this.CompanyId = 0;\r\n        this.CompanyName = \"\";\r\n        this.DRNotes = \"\";\r\n        this.JobId = 0;\r\n        this.JobName = \"\";\r\n        this.Products = [];\r\n    }\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    JobId: number;\r\n    JobName: string;\r\n    Products: ProductsGroup[];\r\n    DRNotes: string;\r\n}\r\n\r\nexport class CustomersAndJobs\r\n{\r\n    CustomerId:number\r\n    CustomerName:string\r\n    JobId:number\r\n    JobName:string\r\n}\r\n\r\nexport class DDL {\r\n    Id: number;\r\n    Name: string;\r\n}\r\nexport class ProductsGroup {\r\n    Quantity: number;\r\n    UoM: UoM;\r\n    StartDate: string;\r\n    StartTime: string;\r\n    EndTime: string;\r\n    DRPO: string;\r\n    FuelTypes: {Id: number, Name: string};\r\n    FuelTypeId: number;\r\n    FuelName: string;\r\n}\r\n\r\nexport class CustomersModel\r\n{\r\n    regionsAndJobsModels: RegionsAndJobsModel[] = [];\r\n    customersandJobs: CustomersAndJobs[] = [];\r\n}\r\nexport class RegionsAndJobsModel\r\n{\r\n    RegionId: string;\r\n    CompanyId: number;\r\n    Jobs: DDL[];\r\n}\r\n\r\nexport enum SalesUserDRStatus{\r\n    Success = 1,\r\n    Error = 2,\r\n    RegionNotFound = 3,\r\n    FuelRequestNotFound = 4,\r\n    OrderNotFound = 5\r\n}\r\n\r\nexport enum ConfirmDRStatus\r\n{\r\n    Success = 0,\r\n    Failed = 1,\r\n    Warning = 2,\r\n}\r\n\r\nexport class SalesUserDRStatusModel\r\n{\r\n    State: SalesUserDRStatus;\r\n    Code: number;\r\n    Message:string;\r\n}\r\nexport class SalesUserDRProductStatus\r\n{\r\n     Status:SalesUserDRStatusModel;\r\n     Product: ProductsGroup;\r\n}\r\n\r\nexport class ValidateDREntryResponse {\r\n\r\n    ProductStatuses: SalesUserDRProductStatus[];\r\n    RaiseDeliveryRequestInput: DeliveryRequestInputModel[];\r\n}\r\n\r\nexport class DeliveryRequestInputModel {\r\n    JobId: number;\r\n    RequiredQuantity: number;\r\n    UserId: number;\r\n    AssignedToRegionId: string;\r\n    BuyerCompanyId: number;\r\n    UoM: number;\r\n    FuelType: string;\r\n    ScheduleQuantityType: number;\r\n    CustomerCompany: string;\r\n    DeliveryDateStartTime: string;\r\n    WindowStartTime:string;\r\n    WindowEndTime: string;\r\n    DispatcherNote: string;\r\n    WindowStartDate: string;\r\n    JobName: string;\r\n    SupplierCompanyId: number;\r\n    DeliveryRequestFor: number;\r\n    OrderId: number;\r\n    TankId: string;\r\n    StorageId: string;\r\n    SelectedDate: string;\r\n}\r\n\r\nexport class CustomCompanyModel {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SalesUserDashboardComponent } from './sales-user-dashboard/sales-user-dashboard.component';\nimport { SharedModule } from '../modules/shared.module';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateSourcingRequestComponent } from './create-sourcing-request/create-sourcing-request.component';\nimport { SourcingRequestGridComponent } from './sourcing-request-grid/sourcing-request-grid/sourcing-request-grid.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport { FeesModule } from 'src/app/fees/fees.module';\nimport { PricingSectionModule } from '../shared-components/pricing-section/pricing-section.module';\nimport { ContactPersonComponent } from 'src/app/contact-person/contact-person.component';\n\n\nconst route:Routes=[\n  {\n    path:'Dashboard',\n    component:SalesUserDashboardComponent\n  },\n  {\n    path:'Dashboard/Index',\n    component:SalesUserDashboardComponent\n  },\n   {\n     path:'SourcingRequest/Create',\n     component:CreateSourcingRequestComponent\n   },\n  {\n    path:'SourcingRequest',\n    component:SourcingRequestGridComponent\n  },\n  {\n    path:'SourcingRequest/Index',\n    component:SourcingRequestGridComponent\n  },\n  {\n    path:'SourcingRequest/Details/:Id',\n    component:CreateSourcingRequestComponent,\n  }\n]\n@NgModule({\n    declarations: [SalesUserDashboardComponent, CreateSourcingRequestComponent, SourcingRequestGridComponent, ContactPersonComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DirectiveModule,\n    DataTablesModule,\n    FormsModule,\n    AutocompleteLibModule,\n      NgbModule,\n      FeesModule,\n    RouterModule.forChild(route),\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType: 'danger', \n    }),\n    PricingSectionModule\n  ],\n})\nexport class SalesUserModule {\n\n }\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { SalesUserService } from '../../sales-user.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { SourcingRequestDisplayStatus} from 'src/app/app.enum';\n@Component({\n  selector: 'app-sourcing-request-grid',\n  templateUrl: './sourcing-request-grid.component.html',\n  styleUrls: ['./sourcing-request-grid.component.scss']\n})\nexport class SourcingRequestGridComponent implements OnInit {\n\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean = false;\n    public RequestStatusdata: SourcingRequestDisplayStatus = SourcingRequestDisplayStatus.All; \n  Sourcingrequests: any = [];\n    UserContext: any;\n    public DisplayRequestStatus = SourcingRequestDisplayStatus;\n    public _opened: boolean = false;\n    public DispatchRegion = [];\n  constructor(private salesUserService: SalesUserService) { \n      this.getUserContext();\n  }\n\n  ngOnInit() {\n    this.initializeGrid();\n\n  }\n    ngAfterViewInit(): void {\n        let requestStatusdata = localStorage.getItem('SelectedSRStatus');\n        let requestStatus = requestStatusdata == undefined || requestStatusdata == \"\" ? this.DisplayRequestStatus.All : requestStatusdata;\n        this.getRequests(requestStatus);\n  }\n\n  @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n  refreshDatatable(): void {\n    this.dtElements.forEach((dtElement: DataTableDirective) => {\n      if (dtElement.dtInstance) {\n        dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n      }\n    });\n    this.dtTrigger.next();\n  }\n\n  getUserContext() {\n    this.salesUserService.GetUserContext().subscribe(data => {\n      this.UserContext = data;\n    })  \n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':visible' };\n    this.dtOptions = {\n        dom: '<\"html5buttons\"B>lTfgitp',\n        buttons: [\n            { extend: 'colvis' },\n            { extend: 'copy', exportOptions: exportInvitedColumns },\n            { extend: 'csv', title: 'Sourcing Requests', exportOptions: exportInvitedColumns },\n            { extend: 'pdf', title: 'Sourcing Requests', orientation: 'landscape', exportOptions: exportInvitedColumns },\n            { extend: 'print', exportOptions: exportInvitedColumns }\n        ],\n        pagingType: 'first_last_numbers',\n        order: [[0, 'desc']],\n        pageLength: 10,\n        lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n  }\n\n    public getRequests(status) \n    {\n        this.RequestStatusdata = status;\n        localStorage.setItem('SelectedSRStatus', status);\n        this.IsLoading = true;\n          this.salesUserService.GetSourcingRequests(status, false).subscribe(data => {\n          this.IsLoading = false;\n              this.Sourcingrequests = data;\n              this.refreshDatatable();\n        });\n    }\n  \n}\n","<div class=\"sourcing-request-grid-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"float-right\">\r\n                <div class=\"row\">\r\n                    <div class=\"dib border pa5 radius-capsule ml20\" id=\"daySelector\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"all\" [checked]=\"RequestStatusdata == DisplayRequestStatus.All\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.All)\">All</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"new\" [checked]=\"RequestStatusdata == DisplayRequestStatus.New\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.New)\">New</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"wip\" [checked]=\"RequestStatusdata == DisplayRequestStatus.WIP\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.WIP)\">Wip</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"sourced\" [checked]=\"RequestStatusdata == DisplayRequestStatus.Sourced\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.Sourced)\">Sourced</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"lost\" [checked]=\"RequestStatusdata == DisplayRequestStatus.Lost\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.Lost)\">Lost</label>\r\n                        </div>\r\n                        <span class='spinner-small fr-type float-left ml10 mt5'></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-carrier-grid\" class=\"table-responsive\">\r\n                            <table id=\"request-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#Request</th>\r\n                                        <th>Location</th>\r\n                                        <th>Fuel Type</th>\r\n                                        <th>Quantity Requested</th>\r\n                                        <th>Pricing(USD/CAD)</th>\r\n                                        <th>Delivery Date</th>\r\n                                        <th>Type</th>\r\n                                        <th>Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let item of Sourcingrequests\">\r\n                                        <td>\r\n                                            <a [routerLink]=\"['/SalesUser/SourcingRequest/Details/'+item.Id]\">\r\n                                                <span>{{item.RequestNumber}}</span>\r\n                                            </a>\r\n                                        <span *ngIf=\"(UserContext.Id != item.ModifiedBy && item.ModifiedBy != 0) && (item.Status != 'Submitted' && item.Status != 'Lost' && !item.ViewedModified)\" class=\"active-red-dot\"></span>\r\n                                        </td>\r\n                                        <td>{{item.JobName}} </td>\r\n                                        <td>{{item.FuelType }}</td>\r\n                                        <td>{{item.Quantity}}</td>\r\n                                        <td>{{item.Pricing}}</td>\r\n                                        <td>{{item.DeliveryDate}}</td>\r\n                                        <td>{{item.DeliveryType}}</td>\r\n                                        <td>{{item.Status}}</td>\r\n                                    </tr>\r\n                                    <!-- <tr *ngIf=\"Sourcingrequests && Sourcingrequests.length==0\">\r\n                                         <td colspan=\"8\">\r\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\r\n                                                <div class=\"col-12 align-items-center text-center\">\r\n                                                    <h4>No Data Found</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                         </td>\r\n                                    </tr> -->\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}