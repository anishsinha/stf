{"version":3,"sources":["./src/app/carrier-companies/carrier-companies.component.ts","./src/app/carrier-companies/carrier-companies.component.html","./src/app/carrier-companies/lazy-loading/carrier-companies-routing.module.ts","./src/app/carrier-companies/lazy-loading/carrier-companies.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AAI6C;AAC5G;AACvB;AACyB;;;;;;;;;;;;;;;ICH5C,0EAA+D;IAAA,uEAAY;IAAA,4DAAK;;;IAE5E,0EAA8B;IAAA,yEAAc;IAAA,4DAAK;IACjD,2EAA4D;IAAA,yIAA8E;IAAA,4DAAM;;;IAEpJ,sEACI;IAAA,2EAA4D;IAAA,uDAAoB;IAAA,4DAAM;IAC1F,4DAAM;;;IAD0D,0DAAoB;IAApB,sFAAoB;;;IAEpF,2EACI;IAAA,uEAA0C;IAC9C,4DAAM;;;IA0GM,6EAAkF;IAAA,kEAAO;IAAA,4DAAQ;;;;IACjG,+FAI0B;IAJkE,6YAAiC;IAI7H,4DAA0B;;;IAJkE,+FAAiC;;;IAK7H,2EAAmD;IAAA,uDAAwB;IAAA,4DAAM;;;IAA9B,0DAAwB;IAAxB,4FAAwB;;;;;IAgDvE,0EAA+L;IAAvC,uXAAqC;IAAE,uDAAyB;IAAA,4DAAK;;;IAAjM,2KAAkD;IAAiH,0DAAyB;IAAzB,oGAAyB;;;IA8CxM,wEACI;IAAA,uDACJ;IAAA,qEAAe;;;;IADX,0DACJ;IADI,qHACJ;;;IAHJ,uEACI;IAAA,qJACI;IAER,4DAAO;;;IAHW,0DAA4D;IAA5D,+FAA4D;;;;IAP1F,0EACI;IAAA,0EACI;IAAA,2EACI;IADe,sXAAoC;IACnD,uEAAM;IAAA,uDAAwB;IAAA,4DAAO;IACzC,4DAAM;IACN,2EACI;IAAA,6HACI;IAIR,4DAAM;IACN,2EACI;IAAA,yEAAyI;IAAzC,+XAAwC;IAAC,oEAA6F;IAAC,4DAAI;IAC/O,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IAhBuB,0KAAiD;IAG3D,0DAAwB;IAAxB,yFAAwB;IAGxB,0DAA8B;IAA9B,4FAA8B;;;IA4CpE,2EACI;IAAA,uEAA0C;IAC9C,4DAAM;;;;IAqBsB,qEACI;IAGA,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,uDAA6B;IAAA,4DAAK;IACtC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,yEACI;IAAA,8EAAuE;IAA/D,8WAA2B;IAAoC,oEAAgC;IAAA,4DAAS;IAChH,0EAEkF;IAA/E,gUAA0B,IAAI,IAAC;IAA4C,4DAAI;IACtF,4DAAK;IACT,4DAAK;;;;IATG,0DAAwB;IAAxB,yFAAwB;IACxB,0DAA6B;IAA7B,8FAA6B;IAC7B,0DAAuB;IAAvB,wFAAuB;IAIpB,0DAA6B;IAA7B,8FAA6B;;;IAmBxD,2EACI;IAAA,uEAA0C;IAC9C,4DAAM;;AD5SnB,MAAM,yBAAyB;IA+DlC,YAAoB,EAAe,EAAU,oBAA0C;QAAnE,OAAE,GAAF,EAAE,CAAa;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QA7DhF,kBAAa,GAAG,EAAE,CAAC;QACnB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,IAAI,CAAC;QACzB,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAkB,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAE/D,aAAQ,GAAY,KAAK,CAAC;QAG1B,cAAS,GAAY,KAAK,CAAC;QAC3B,YAAO,GAAY,KAAK,CAAC;QACzB,cAAS,GAAY,KAAK,CAAC;QAE3B,wBAAmB,GAAc,EAAE,CAAC;QACpC,qBAAgB,GAAc,EAAE,CAAC;QAEjC,gBAAW,GAAmB,EAAE,CAAC;QACjC,SAAI,GAAmB,EAAE,CAAC;QAC1B,UAAK,GAAmB,EAAE,CAAC;QAC3B,kBAAa,GAAiB,EAAE,CAAC;QACjC,iBAAY,GAAiB,EAAE,CAAC;QACvC,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAW,EAAE,CAAC;QACzB,gBAAW,GAAW,EAAE,CAAC;QAClB,iBAAY,GAAW,qBAAqB,CAAC;QAC7C,mBAAc,GAAW,gIAAgI,CAAC;QAG1J,mBAAc,GAAY,KAAK,CAAC;QAChC,kBAAa,GAAY,KAAK,CAAC;QAE/B,iBAAY,GAAwB,EAAE,CAAC;QACvC,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QACxC,cAAS,GAAQ,EAAE,CAAC;QAQpB,oBAAe,GAAY,KAAK,CAAC;QACjC,iBAAY,GAAmB,EAAE,CAAC;QAClC,yBAAoB,GAAY,IAAI,CAAC;QAGrC,kBAAa,GAAY,KAAK,CAAC;QAC/B,gBAAW,GAAmB,EAAE,CAAC;QACjC,mBAAc,GAAW,wGAAwG,CAAC;QAEzI,kBAAa,GAAW,IAAI,CAAC;QAC7B,iBAAY,GAAQ,EAAE,CAAC;QAIvB,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,yBAAoB,GAAG,KAAK,CAAC;QAC7B,0BAAqB,GAAG,KAAK,CAAC;IAI6D,CAAC;IAE5F,QAAQ;QACJ,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,qBAAqB,GAAG;YACzB,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG;YACpB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QACF,iCAAiC;QACjC,IAAI,aAAa,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG;YACb,UAAU,EAAE,gBAAgB;YAC5B,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;YAC7D,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,IAAI;YACb,GAAG,EAAE,0BAA0B;YAC/B,OAAO,EAAE;gBACL,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE;gBAChD,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,EAAE,aAAa,EAAE,aAAa,EAAE;gBAC3E,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE;gBACrG,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE;aACpD;SACJ,CAAC;IACN,CAAC;IAED,WAAW;QACP,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE;aAClC,SAAS,CAAC,CAAC,QAAwB,EAAE,EAAE;YACpC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,MAAM;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IACD,uBAAuB;QACnB,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,EAAE;aAC9C,SAAS,CAAC,CAAC,QAA6B,EAAE,EAAE;YACzC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IACD,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAA6B,EAAE,EAAE;YACtD,IAAI,SAAS,CAAC,UAAU,EAAE;gBACtB,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAA0B,EAAE,EAAE,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACxF;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IACD,qBAAqB,CAAC,OAAgB;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,OAAO,CAAC;aACnD,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gBAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACvC,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mBAAmB;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,EAAE;aAC1C,SAAS,CAAC,CAAC,QAAmB,EAAE,EAAE;YAC/B,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,EAAE;gBAC3C,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;gBACpC,IAAI,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IACD,OAAO;QACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACvC,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAC1D,IAAI,OAAO,CAAC,IAAI,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClF;aACJ;QACL,CAAC,CAAC;QACF,yFAAyF;QACzF,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE;aAC9B,SAAS,CAAC,CAAC,QAAsB,EAAE,EAAE;YAClC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YACxB,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;YAC5E,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAChC,IAAI,OAAO,EAAE;wBACT,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;4BAClB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;4BAClE,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;gCAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;6BAAE;4BAAA,CAAC;wBAC9D,CAAC,CAAC;qBACL;gBACL,CAAC,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IACD,eAAe,CAAC,YAAqB;QACjC,IAAI,SAAS,GAAG,GAAG,CAAC;QACpB,IAAI,YAAY,EAAE;YACd,IAAI,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aACnD;iBAAM;gBACH,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;SACJ;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,QAAQ,CAAC,QAAiB;QACtB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,EAAE,CAAC;QACjC,IAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IACM,oBAAoB;QACvB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,GAAG,CAAC,EAAE;YACrD,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAChF,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;SACzC;aACI;YAAE,OAAO,EAAE,CAAC;SAAE;IACvB,CAAC;IAEM,oBAAoB,CAAC,SAAiB;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,SAAS,CAAC;iBACpD,SAAS,CAAC,CAAC,QAAwB,EAAE,EAAE;gBACpC,IAAI,QAAQ,EAAE;oBACV,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC;iBAC9E;gBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAC3B,CAAC,CAAC,CAAC;SACV;IACL,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,EAAE;YACvD,iEAAY,CAAC,QAAQ,CAAC,sCAAsC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YACpF,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;YACrD,iEAAY,CAAC,QAAQ,CAAC,kCAAkC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAChF,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACjB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;YACzF,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;gBACxD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;gBAClD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;gBACjD,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAChC;qBAAM;oBACH,IAAI,CAAC,cAAc,EAAE,CAAC;iBACzB;aACJ;SACJ;IACL,CAAC;IACM,YAAY;QACf,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/E,IAAI,WAAW,EAAE;YACb,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;YAC5B,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACvB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACpC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE;wBACzB,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;qBAC/B;oBACD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;wBACvD,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;qBAC3H;gBACL,CAAC,CAAC;aACL;iBACI;gBACD,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;aAC/B;SACJ;IACL,CAAC;IACD,aAAa;QACT,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,cAAc;QACV,IAAI,CAAC,oCAAoC,EAAE,CAAC;IAChD,CAAC;IAED,qBAAqB;QACjB,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjD,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1C,+FAA+F;gBAC/F,IAAI,CAAC,oCAAoC,EAAE,CAAC;aAC/C;iBACI;gBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,4CAA2C;qBAC/G,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;oBAChC,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;wBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,2CAA0C;qBAC/E;yBACI;wBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,iEAAY,CAAC,QAAQ,CAAC,2BAA2B,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;wBACzE,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;wBAC7B,IAAI,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;wBAC5D,OAAO,CAAC,KAAK,EAAE,CAAC;wBAChB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;qBAC7B;gBACL,CAAC,CAAC,CAAC;aACV;SACJ;IACL,CAAC;IAGD,aAAa,CAAC,UAAmB;QAC7B,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;aACI;YACD,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;IACL,CAAC;IACD,SAAS;QACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO;QACjC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;QACzF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IACD,SAAS,CAAC,IAAY,EAAE,CAAS;QAC7B,IAAI,eAAe,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAClD,IAAI,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO;;gBAEtD,CACI,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK;;wBAE3C,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAChD;QACL,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,oBAAoB;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;IACpD,CAAC;IAEM,eAAe,CAAC,OAAY;QAC/B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAEM,iBAAiB,CAAC,OAAY;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IACM,aAAa,CAAC,KAAU,EAAE,GAAe;QAC5C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE;YACjB,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;SACvB;QACD,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1F,CAAC;IACM,eAAe,CAAC,KAAU,EAAE,GAAe;QAC9C,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;QAC5D,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAAE;IACzD,CAAC;IACM,SAAS,CAAC,KAAU,EAAE,GAAe;QACxC,GAAG,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;IAC3C,CAAC;IACM,YAAY,CAAC,YAAY;QAC5B,IAAI,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE;YAC7B,YAAY,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;SACvC;aAAM;YACH,YAAY,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;SACtC;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACjD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;SACtC;QACD,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAChD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACrC;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/G,CAAC;IACM,eAAe,CAAC,IAAY,EAAE,SAAkB;QACnD,IAAI,SAAS,EAAE;YACX,CAAC,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC;SAC/S;aAAM;YACH,CAAC,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;SACjT;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/G,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QACtD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC;QAClE,sDAAsD;QACrD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC;QAC7E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;IACzD,CAAC;IACM,WAAW;QACd,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QACrD,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC;QACnE,oDAAoD;QACpD,IAAI,CAAC,YAAY,GAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC;IAEnF,CAAC;IAGD,UAAU;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IACD,YAAY,CAAC,KAAK;QACd,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,YAAY;QACR,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,iEAAY,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAClE,OAAO;SACV;QACD,IAAI,OAAO,GAAgB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;QAChE,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAC5E,CAAC,QAAa,EAAE,EAAE;YACd,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gBAC1B,iEAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAClG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;iBAAM;gBACH,iEAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBACtE,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAErB,CAAC,CACJ,CAAC;IACN,CAAC;IACM,oCAAoC;QACvC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,OAAO,GAAgB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;QAC3D,OAAO,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IACM,qBAAqB,CAAC,aAAsB;QAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC;iBAC1D,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,aAAa,EAAE;wBACf,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC;6BAC9D,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;4BACzB,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gCAC1B,iEAAY,CAAC,UAAU,CAAC,2CAA2C,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;6BAC9F;iCAAM,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gCACjC,iEAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;6BACvE;4BAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;4BAC7B,IAAI,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;4BAC5D,OAAO,CAAC,KAAK,EAAE,CAAC;4BAChB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;4BAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC/B,CAAC,CAAC,CAAC;qBACV;yBAAM;wBACH,IAAI,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;wBAC5D,OAAO,CAAC,KAAK,EAAE,CAAC;wBAChB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;wBAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;qBAChC;iBACJ;qBAAM,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBACjC,iEAAY,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iBACrG;YACL,CAAC,CAAC,CAAC;SACV;aACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,4CAA2C;iBAC/G,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;gBACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAChC,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;oBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,2CAA0C;iBACvF;qBACI;oBACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;oBAC5D,OAAO,CAAC,KAAK,EAAE,CAAC;oBAChB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC1B,iEAAY,CAAC,QAAQ,CAAC,2BAA2B,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;iBAC5E;gBACD,+BAA+B;YACnC,CAAC,CAAC,CAAC;SACV;IACL,CAAC;IACM,qBAAqB;QACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QACnF,IAAI,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QACpG,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,kBAAkB,CAAC,OAAO,CAAC,UAAU,IAAI;YACrC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,mBAAmB,CAAC,OAAO,CAAC,UAAU,IAAI;YACtC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,kBAAkB,CAAC,OAAO,CAAC,UAAU,IAAI;YACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBACd,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtB;QACL,CAAC,CAAC,CAAC;QACH,mBAAmB,CAAC,OAAO,CAAC,UAAU,IAAI;YACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBACd,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACpB,YAAY,EAAE,QAAQ;YACtB,WAAW,EAAE,OAAO;SACvB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEM,qBAAqB,CAAC,aAAsB;QAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,cAAc,GAAa,EAAE,CAAC;QAClC,IAAI,aAAa,GAAa,EAAE,CAAC;QAEjC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QACpD,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAClD,IAAI,gBAAgB,GAAG,IAAI,mFAAoB,EAAE,CAAC;QAClD,gBAAgB,CAAC,UAAU,GAAG,cAAc,CAAC;QAC7C,gBAAgB,CAAC,cAAc,GAAG,aAAa,CAAC;QAChD,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;QACxE,gBAAgB,CAAC,aAAa,GAAG,aAAa,CAAC;QAC/C,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;aAC5D,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gBAC1B,iEAAY,CAAC,UAAU,CAAC,iDAAiD,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBACjG,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;iBACI;gBACD,iEAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aACzD;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,OAAO,GAAgB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YAC5D,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,6BAA6B,CAAC,OAAgB;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC9E,IAAI,gBAAgB,GAAG,IAAI,mFAAoB,EAAE,CAAC;QAClD,gBAAgB,CAAC,UAAU,GAAG,EAAE,CAAC;QACjC,gBAAgB,CAAC,cAAc,GAAG,cAAc,CAAC;QACjD,gBAAgB,CAAC,gBAAgB,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QACvD,gBAAgB,CAAC,aAAa,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,CAAC,gBAAgB,CAAC;aACpE,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,QAAQ,CAAC,UAAU,IAAI,CAAC,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;iBAAM;aAEN;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;;kGA5kBQ,yBAAyB;yGAAzB,yBAAyB;;;;;kEAoCpB,qEAAkB;;;;;;;;;QCrDpC,yEACI;QAAA,uFACI;QAAA,gFACI;QADQ,iMAAoB;QAC5B,uEAAkC;QAA/B,4IAAS,kBAAc,KAAK,CAAC,IAAC;QAAC,kEAAgC;QAAA,4DAAI;QACtE,mHAA+D;QAC/D,iNACI;QAGJ,qHACI;QAEJ,qHACI;QAwGJ,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,4HAAkF;QAClF,gKAIA;QACA,wHAAmD;QAUvD,4DAAM;QAGV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,iFAAqB;QAAA,4DAAK;QAClC,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EAAiD;QAAA,oEAA4B;QAAA,4DAAO;QACxF,4DAAM;QACN,6EACJ;QADiD,mMAAyB;QAAtE,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,2EACI;QAAA,wDACJ;QAAA,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QACA,2EACI;QAAA,6EACJ;QADoD,6MAAmC,iGAAmF,oBAAgB,cAAc,wBAAwB,IAAzI;QAAnF,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,sHAA+L;;QACnM,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EACI;QADoE,kJAAS,gBAAY,IAAC;QAC1F,uEAAsD;QAC1D,4DAAS;QAET,8EACI;QADqE,kJAAS,iBAAa,IAAC;QAC5F,uEAAuD;QAC3D,4DAAS;QACb,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QACjC,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EAAiD;QAAA,oEAA4B;QAAA,4DAAO;QACxF,4DAAM;QACN,6EAAqJ;QAAxG,mMAAyB;QAAtE,4DAAqJ;QACzJ,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QACA,2EACI;QAAA,6EACJ;QADoD,4MAAkC,iGAAkF,oBAAgB,aAAa,wBAAwB,IAAvI;QAAlF,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,uHACI;;QAgBR,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,8EAAuE;QAA/D,kJAAS,kBAAc,KAAK,CAAC,IAAC;QAAiC,kEAAM;QAAA,4DAAS;QACtF,8EAAkF;QAAtC,kJAAS,iBAAa,IAAC;QAAe,gEAAI;QAAA,4DAAS;QAC/F,6EACwD;QAC5D,4DAAM;QACV,4DAAM;QACV,4DAAa;QACjB,4DAAuB;QAGvB,2EACI;QAAA,2EACI;QAAA,0EAA0B;QAAA,6EAAiB;QAAA,4DAAK;QAChD,yEACI;QADqB,6IAAS,mBAAe,IAAE;QAC/C,oEAAoD;QAAA,4EAAiC;QAAA,sEAAU;QAAA,4DAAO;QAC1G,4DAAI;QACR,4DAAM;QAIN,2EACI;QAAA,yEACI;QADmC,6IAAS,gBAAY,IAAC;QACzD,oEAAiD;QAAA,4EAAiC;QAAA,uEAAW;QAAA,4DAAO;QACxG,4DAAI;QACR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,wHACI;QAOJ,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,uEAAI;QAAA,sEAAS;QAAA,4DAAK;QAClB,uEAAI;QAAA,sFAAyB;QAAA,4DAAK;QAClC,uEAAI;QAAA,mEAAM;QAAA,4DAAK;QACnB,4DAAK;QACT,4DAAQ;QACR,0EACI;QAAA,yHACI;QAaR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGN,4EACI;QAAA,4EAEI;QAAA,4EACI;QAAA,4EACI;QAAA,yHACI;QAEJ,4EACI;QAAA,2EAAkC;QAAA,uEAAU;QAAA,4DAAK;QACjD,mFAEI;QAAA,qEAAgC;QACpC,4DAAS;QACb,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,iIACJ;QAAA,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,+EAEI;QADI,mJAAS,0BAAsB,KAAK,CAAC,IAAC;QAC1C,iEACJ;QAAA,4DAAS;QACT,+EAEI;QADI,mJAAS,0BAAsB,IAAI,CAAC,IAAC;QACzC,kEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,2EAAkC;QAAA,wEAAW;QAAA,4DAAK;QAClD,mFAAyH;QAAA,6EAAgD;QAAA,mEAAO;QAAA,4DAAO;QAAA,4DAAS;QACpM,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,wEAA8C;QAC9C,0EAAwF;QAAA,8EAAiB;QAAA,4DAAI;QACjH,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,uEACI;QAAA,8EACI;QAAA,8EACJ;QADuC,qMAA0B,kGAAW,wBAAoB,IAA/B;QAA7D,4DACJ;QAAA,4DAAQ;QACZ,4DAAK;QACL,4EACI;QAAA,yLACJ;QAAA,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,8EACI;QAAA,mIAEJ;QAAA,4DAAQ;QACR,4EACI;QAAA,8EACA;QADuE,6MAAkC;QAAzG,4DACA;QAAA,8EAAmD;QAAA,gEAAG;QAAA,4DAAQ;QAClE,4DAAM;QACN,4EACI;QAAA,8EACA;QADuE,6MAAkC;QAAzG,4DACA;QAAA,8EAAmD;QAAA,+DAAE;QAAA,4DAAQ;QACjE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,8EACJ;QADuH,kJAAS,kBAAc,IAAC;QAA3I,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,2EAAuB;QAAA,2EAAc;QAAA,4DAAK;QAC1C,gFACI;QAAA,8EAAyB;QAAA,mEAAO;QAAA,4DAAO;QAC3C,4DAAS;QACb,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,4EACI;QAAA,+EAA+B;QAAA,0EAAa;QAAA,4DAAQ;QACpD,iGAA4M;QAA7H,2NAA8B;QAAqE,4DAA0B;QAChN,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,6EACI;QACA,gFAA4F;QAAtE,mJAAS,kBAAc,IAAC;QAA8C,iEAAI;QAAA,4DAAS;QAC7G,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;QAzac,0DAAoB;QAApB,+EAAoB;QAExB,0DAAgC;QAAhC,8EAAgC;QAK/B,0DAAiC;QAAjC,mGAAiC;QAGY,0DAAiB;QAAjB,+EAAiB;QA4GnB,0DAAiB;QAAjB,+EAAiB;QAC5B,0DAAiB;QAAjB,+EAAiB;QAKR,0DAAgB;QAAhB,8EAAgB;QA6BO,2DAAyB;QAAzB,oFAAyB;QAMtE,0DACJ;QADI,6FACJ;QAMwD,0DAAmC;QAAnC,8FAAmC;QAMhB,0DAAwE;QAAxE,0KAAwE;QA0BlG,2DAAyB;QAAzB,oFAAyB;QAOlB,0DAAkC;QAAlC,6FAAkC;QAMhB,0DAAuE;QAAvE,yKAAuE;QAyB9F,0DAAe;QAAf,wEAAe;QAyB7B,2DAAiB;QAAjB,+EAAiB;QAauB,0DAAuB;QAAvB,oFAAuB;QAU5F,2DAA2C;QAA3C,4FAA2C;QA6Bb,0DAAuB;QAAvB,qFAAuB;QAiDtB,2DAA0B;QAA1B,qFAA0B;QAckB,0DAAkC;QAAlC,6FAAkC;QAIlC,0DAAkC;QAAlC,6FAAkC;QAQ5F,0DAAyC;QAAzC,sGAAyC;QAyBlB,2DAA8B;QAA9B,uFAA8B;;6FD9YjG,yBAAyB;cARrC,uDAAS;eAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;gBAChD,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACxC;;kBAuCI,0DAAY;mBAAC,qEAAkB;;kBAG/B,uDAAS;mBAAC,cAAc;;kBACxB,uDAAS;mBAAC,eAAe;;kBACzB,uDAAS;mBAAC,mBAAmB;;kBAC7B,uDAAS;mBAAC,iBAAiB;;;;;;;;;;;;;;AE3DhC;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACoB;;;AAI3E,MAAM,qBAAqB,GAAW;IAClC;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAyB;QAC9C,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,sFAAyB;gBACpC,IAAI,EAAE;oBACF,KAAK,EAAE,mBAAmB;iBAC7B;aACJ;SACJ;KACJ;CACJ,CAAC;AAWK,MAAM,6BAA6B;;4GAA7B,6BAA6B;oLAA7B,6BAA6B,kBAR7B;YACL,4DAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC;SAC/C;QAEG,4DAAY;mIAIP,6BAA6B,uFAJlC,4DAAY;6FAIP,6BAA6B;cATzC,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC;iBAC/C;gBACD,OAAO,EAAE;oBACL,4DAAY;iBACf;aACJ;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAC0C;AACR;AACd;AACM;AACb;;AAe/C,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAPtB;YACL,+FAA6B;YAC7B,0EAAY;YACZ,mEAAgB;YAChB,gFAAe;SAClB;mIAEQ,sBAAsB,mBAT3B,sFAAyB,aAGzB,+FAA6B;QAC7B,0EAAY;QACZ,mEAAgB;QAChB,gFAAe;6FAGV,sBAAsB;cAZlC,sDAAQ;eAAC;gBAEN,YAAY,EAAE;oBACV,sFAAyB;iBAC5B;gBACD,OAAO,EAAE;oBACL,+FAA6B;oBAC7B,0EAAY;oBACZ,mEAAgB;oBAChB,gFAAe;iBAClB;aACJ","file":"carrier-companies-lazy-loading-carrier-companies-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, ViewEncapsulation, ViewChildren, QueryList } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { startsWithPipe, startsWithJobPipe } from './search-filter';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { AssigncarrierService, DropdownItem, Carrier, CarrierJob, CarrierJobDetails, EditFreightOnlyOrder, JobWithEmails } from './service/assigncarrier.service';\r\nimport { Declarations } from '../declarations.module';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n    selector: 'app-carrier-companies',\r\n    templateUrl: './carrier-companies.component.html',\r\n    styleUrls: ['./carrier-companies.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n\r\nexport class CarrierCompaniesComponent implements OnInit {\r\n\r\n    public carrierEmails = [];\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n    public serviceResponse: any;\r\n    public isUpdate: boolean = false;\r\n    public multiDropdownSettings: IDropdownSettings;\r\n    public dropdownSettings: IDropdownSettings;\r\n    public IsLoading: boolean = false;\r\n    public IsEmpty: boolean = false;\r\n    public IsSuccess: boolean = false;\r\n    public carrier: Carrier;\r\n    public assignedCarrierList: Carrier[] = [];\r\n    public assignedCarriers: Carrier[] = [];\r\n    public rcForm: FormGroup;\r\n    public carrierList: DropdownItem[] = [];\r\n    public jobs: DropdownItem[] = [];\r\n    public jobs2: DropdownItem[] = [];\r\n    public availableJobs: CarrierJob[] = [];\r\n    public assignedJobs: CarrierJob[] = [];\r\n    query: string = '';\r\n    list1Search: string = '';\r\n    list2Search: string = '';\r\n    public popoverTitle: string = 'Delete Confirmation';\r\n    public popoverMessage: string = 'Do you really want to delete? Deleting a location assignment will result in closure of all the existing orders for the carrier';\r\n\r\n    public SelectedCount: number;\r\n    public confirmClicked: boolean = false;\r\n    public cancelClicked: boolean = false;\r\n\r\n    public CarrierUsers: CarrierJobDetails[] = [];\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    public dtOptions: any = {};\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n\r\n\r\n    @ViewChild('btnOpenModal') btnOpenModal: ElementRef<HTMLElement>;\r\n    @ViewChild('btnCloseModal') btnCloseModal: ElementRef<HTMLElement>;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    @ViewChild('confirmationBox') confirmationBox: ElementRef;\r\n    public IsDisplayLoader: boolean = false;\r\n    public SelectedJobs: DropdownItem[] = [];\r\n    public IsCreateFreightOrder: boolean = null;\r\n    public UpdatedJobIds: any[];\r\n\r\n    public IsJobDeselect: boolean = false;\r\n    public removedJobs: DropdownItem[] = [];\r\n    public WarningMessage: string = \"Note: Removing a location assignment will result in closure of all the existing orders for the carrier\";\r\n    file: any;\r\n    editCarrierId: string = null;\r\n    existingJobs: any = [];\r\n    SelectedCarrier: DropdownItem;\r\n    selectedCarrierItem: DropdownItem;\r\n    allJobs: CarrierJob[];\r\n    selectCarrierModel: any = [];\r\n    assginedJobSelectAll = false;\r\n    availableJobSelectAll = false;\r\n    editEmailJobId: number;\r\n    editEmailDetails: DropdownItem[];\r\n    selectedFile: any;\r\n    constructor(private fb: FormBuilder, private assigncarrierService: AssigncarrierService) { }\r\n\r\n    ngOnInit() {\r\n        this.getAssignedCarriers();\r\n        this.getCarriers();\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.dropdownSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        //this.getAssignedCarrierUsers();\r\n        let exportColumns = { columns: [0, 1, 2] };\r\n        this.dtOptions = {\r\n            pagingType: 'simple_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n            searching: true,\r\n            destroy: true,\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Assigned Carriers', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Assigned Carriers', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n        };\r\n    }\r\n\r\n    getCarriers() {\r\n        this.assigncarrierService.getCarriers()\r\n            .subscribe((carriers: DropdownItem[]) => {\r\n                this.carrierList = carriers;\r\n                this.carrierList.length\r\n            });\r\n    }\r\n    getAssignedCarrierUsers() {\r\n        this.assigncarrierService.getAssignedCarrierUsers()\r\n            .subscribe((carriers: CarrierJobDetails[]) => {\r\n                this.CarrierUsers = carriers;\r\n                this.refreshDatatable();\r\n            });\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    removeAssignedCarrier(carrier: Carrier) {\r\n        this.IsSuccess = true;\r\n        this.IsLoading = true;\r\n        this.assigncarrierService.deleteAssignedCarrier(carrier)\r\n            .subscribe((response: any) => {\r\n                this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    this.carrierList.push(carrier.Carrier);\r\n                    this.closeAssignedOrdersforCarrier(carrier);\r\n                } else {\r\n                    this.IsLoading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    getAssignedCarriers() {\r\n        this.IsLoading = true;\r\n        this.assigncarrierService.getAssignedCarriers()\r\n            .subscribe((response: Carrier[]) => {\r\n                if (response != null && response != undefined) {\r\n                    this.assignedCarrierList = response;\r\n                    var existingCarriers = response.map(function (item) { return item.Carrier.Id; });\r\n                    this.carrierList = this.carrierList.filter(function (item) { return existingCarriers.indexOf(item.Id) == -1; });\r\n                    this.getJobs();\r\n                    this.IsLoading = false;\r\n                    this.refreshDatatable();\r\n                }\r\n            });\r\n    }\r\n    getJobs() {\r\n        this.assignedCarrierList.forEach(element => {\r\n            if (element) {\r\n                element.assignedLocations = this.getAssignedJobs(element);\r\n                if (element.Jobs) {\r\n                    this.existingJobs.push(element.Jobs.map(function (item) { return item.Job; }));\r\n                }\r\n            }\r\n        })\r\n        //this.existingJobs = this.assignedCarrierList.map(function (item) { return item.Jobs;});\r\n        this.assigncarrierService.getJobs()\r\n            .subscribe((response: CarrierJob[]) => {\r\n                this.availableJobs = response;\r\n                this.allJobs = response;\r\n                this.availableJobs && this.availableJobs.map(m => m.Job.IsSelected = false);\r\n                if (this.existingJobs) {\r\n                    this.existingJobs.forEach(element => {\r\n                        if (element) {\r\n                            element.forEach(job => {\r\n                                let index = this.availableJobs.findIndex(t => t.Job.Id == job.Id);\r\n                                if (index != -1) { this.availableJobs.splice(index, 1); };\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n    }\r\n    getAssignedJobs(assignedJobs: Carrier) {\r\n        var locations = '-';\r\n        if (assignedJobs) {\r\n            var jobs = assignedJobs.Jobs.map(function (item) { return item.Job.Name; });\r\n            if (jobs.length > 4) {\r\n                locations = jobs.slice(0, 4).join(\", \") + \"...\";\r\n            } else {\r\n                locations = jobs.join(\", \");\r\n            }\r\n        }\r\n        return locations;\r\n    }\r\n\r\n    editForm(_carrier: Carrier) {\r\n        this.SelectedCarrier = _carrier.Carrier;\r\n        this.editCarrierId = _carrier.Id;\r\n        var selectedJobs = _carrier.Jobs.map(function (item) { return item.Job; });\r\n        this.SelectedJobs = [];\r\n        this.SelectedJobs = selectedJobs;\r\n        this.assignedJobs = _carrier.Jobs;\r\n        this.assignedJobs && this.assignedJobs.map(m => m.Job.IsSelected = false);\r\n        this._toggleOpened(true);\r\n        this.GetCarrierUserEmails(_carrier.Carrier.Id);\r\n        this.isUpdate = true;\r\n    }\r\n    public getCarrierEmailsById() {\r\n        if (this.SelectedCarrier && this.SelectedCarrier.Id > 0) {\r\n            var _com = this.carrierEmails.find(x => x.CompanyId == this.SelectedCarrier.Id);\r\n            return _com ? _com.CarrierEmails : [];\r\n        }\r\n        else { return []; }\r\n    }\r\n\r\n    public GetCarrierUserEmails(companyId: number) {\r\n        var _com = this.carrierEmails.find(x => x.CompanyId == companyId);\r\n        if (!_com) {\r\n            this.IsLoading = true;\r\n            this.assigncarrierService.GetCarrierUserEmails(companyId)\r\n                .subscribe((response: DropdownItem[]) => {\r\n                    if (response) {\r\n                        this.carrierEmails.push({ CompanyId: companyId, CarrierEmails: response });\r\n                    }\r\n                    this.IsLoading = false;\r\n                });\r\n        }\r\n    }\r\n    Validate() {\r\n        if (!this.SelectedCarrier || this.SelectedCarrier.Id <= 0) {\r\n            Declarations.msgerror(\"Atleast one carrier must be assigned\", undefined, undefined);\r\n            return false;\r\n        }\r\n        if (!this.assignedJobs || this.assignedJobs.length <= 0) {\r\n            Declarations.msgerror(\"Atleast one job must be selected\", undefined, undefined);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public SaveCarrier() {\r\n        if (this.Validate()) {\r\n            this.assignedCarriers = [];\r\n            this.assignedCarriers.push({ Id: \"\", Carrier: null, Jobs: [], assignedLocations: null });\r\n            if (this.SelectedCarrier) {\r\n                this.assignedCarriers[0].Carrier = this.SelectedCarrier;\r\n                this.assignedCarriers[0].Jobs = this.assignedJobs;\r\n                this.assignedCarriers[0].Id = this.editCarrierId;\r\n                if (this.isUpdate) {\r\n                    this.updateAssignedCarrier();\r\n                } else {\r\n                    this.assignCarriers();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public SaveJobEmail() {\r\n        var selectedJob = this.assignedJobs.find(t => t.Job.Id == this.editEmailJobId);\r\n        if (selectedJob) {\r\n            selectedJob.Job.Emails = [];\r\n            if (this.editEmailDetails) {\r\n                this.editEmailDetails.forEach(element => {\r\n                    if (!selectedJob.Job.Emails) {\r\n                        selectedJob.Job.Emails = [];\r\n                    }\r\n                    if (!selectedJob.Job.Emails.find(t => t.Id == element.Id)) {\r\n                        selectedJob.Job.Emails.push({ Id: element.Id, Name: element.Name, Code: element.Code, IsSelected: element.IsSelected });\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                selectedJob.Job.Emails = [];\r\n            }\r\n        }\r\n    }\r\n    assignNewForm() {\r\n        this._toggleOpened(true);\r\n        this.isUpdate = false;\r\n    }\r\n\r\n    assignCarriers() {\r\n        this.DisplayFreightOrderConfirmationModal();\r\n    }\r\n\r\n    updateAssignedCarrier() {\r\n        var updatedJobIds = this.ValidateIfNewJobAdded();\r\n        if (updatedJobIds.length > 0) {\r\n            if (updatedJobIds[0].InsertedJobs.length > 0) {\r\n                //show modal as new jobs are added when editing;FO will be created only for newly assigned jobs\r\n                this.DisplayFreightOrderConfirmationModal();\r\n            }\r\n            else {\r\n                this.IsSuccess = true;\r\n                this.assigncarrierService.updateAssignedCarrier(this.assignedCarriers[0])// First Update Existing carrier assignment\r\n                    .subscribe((response: any) => {\r\n                        this.serviceResponse = response;\r\n                        if (response.StatusCode == 0) {\r\n                            this.IsSuccess = false;\r\n                            this.EditFreightOnlyOrders(false);// Edit FO according to new job assignment\r\n                        }\r\n                        else {\r\n                            this.IsSuccess = false;\r\n                            Declarations.msgerror(\"Carrier Assignment Failed\", undefined, undefined);\r\n                            this.getAssignedCarriers();\r\n                            this.IsDisplayLoader = false;\r\n                            let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                            element.click();\r\n                            this._toggleOpened(false);\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    _toggleOpened(shouldOpen: boolean) {\r\n        if (shouldOpen) {\r\n            this._opened = true;\r\n        }\r\n        else {\r\n            this._opened = !this._opened;\r\n            this.clearForm();\r\n            this.isUpdate = false;\r\n        }\r\n    }\r\n    clearForm() {\r\n        this.availableJobs = this.allJobs\r\n        this.availableJobs && this.availableJobs.map(m => m.Job.IsSelected = false);\r\n        this.assignedJobs = [];\r\n        this.SelectedCarrier = null;\r\n        this.selectCarrierModel = [];\r\n        this.list1Search = '';\r\n        this.list2Search = '';\r\n        this.assginedJobSelectAll = false;\r\n        this.availableJobSelectAll = false;\r\n        this.assignedCarriers.push({ Id: \"\", Carrier: null, Jobs: [], assignedLocations: null });\r\n        this.editEmailDetails = [];\r\n        this.selectedCarrierItem = null;\r\n        this.existingJobs = [];\r\n    }\r\n    isInvalid(name: string, i: number): boolean {\r\n        var carrierControls = this.getCarriersFormArray();\r\n        var result = carrierControls.controls[i].get(name).invalid\r\n            &&\r\n            (\r\n                carrierControls.controls[i].get(name).dirty\r\n                ||\r\n                carrierControls.controls[i].get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    getCarriersFormArray(): FormArray {\r\n        return this.rcForm.get('Carriers') as FormArray;\r\n    }\r\n\r\n    public OnCarrierSelect(carrier: any) {\r\n        this.SelectedCarrier = carrier;\r\n        this.GetCarrierUserEmails(carrier.Id);\r\n    }\r\n\r\n    public OnCarrierDeSelect(carrier: any) {\r\n        this.SelectedCarrier = null;\r\n    }\r\n    public OnEmailSelect(email: any, job: CarrierJob) {\r\n        if (!job.Job.Emails) {\r\n            job.Job.Emails = [];\r\n        }\r\n        job.Job.Emails.push({ Id: email.Id, Name: email.Name, Code: null, IsSelected: true });\r\n    }\r\n    public OnEmailDeSelect(email: any, job: CarrierJob) {\r\n        let index = job.Job.Emails.findIndex(a => a.Id == email.Id);\r\n        if (index != -1) { job.Job.Emails.splice(index, 1); }\r\n    }\r\n    public editEmail(email: any, job: CarrierJob) {\r\n        job.Job.IsEmailEdit = true;\r\n        this.editEmailJobId = job.Job.Id;\r\n        this.editEmailDetails = job.Job.Emails;\r\n    }\r\n    public toggleSelect(availableJob) {\r\n        if (availableJob.Job.IsSelected) {\r\n            availableJob.Job.IsSelected = false;\r\n        } else {\r\n            availableJob.Job.IsSelected = true;\r\n        }\r\n        if (this.availableJobs.find(t => !t.Job.IsSelected)) {\r\n            this.availableJobSelectAll = false;\r\n        }\r\n        if (this.assignedJobs.find(t => !t.Job.IsSelected)) {\r\n            this.assginedJobSelectAll = false;\r\n        }\r\n        this.SelectedCount = Object.keys(this.availableJobs.filter((data) => data.Job.IsSelected === true)).length;\r\n    }\r\n    public toogleSelectAll(name: string, isChecked: boolean) {\r\n        if (isChecked) {\r\n            (name == 'availableJob') ? this.availableJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list1Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = true) : this.assignedJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list2Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = true);\r\n        } else {\r\n            (name == 'availableJob') ? this.availableJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list1Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = false) : this.assignedJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list2Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = false);\r\n        }\r\n        this.SelectedCount = Object.keys(this.availableJobs.filter((data) => data.Job.IsSelected === true)).length;\r\n    }\r\n\r\n    public moveToLeft() {\r\n        this.availableJobs.map(m => m.Job.IsSelected = false);\r\n        var ls = this.assignedJobs.filter(f => f.Job.IsSelected == true);\r\n       // this.availableJobs = this.availableJobs.concat(ls);\r\n        this.availableJobs = ls.concat(this.availableJobs);\r\n        this.assignedJobs = this.assignedJobs.filter(f => f.Job.IsSelected == false);\r\n        this.assignedJobs.map(m => m.Job.IsSelected = false);\r\n    }\r\n    public moveToRight() {\r\n        this.assignedJobs.map(m => m.Job.IsSelected = false);\r\n        var ls = this.availableJobs.filter(f => f.Job.IsSelected == true);\r\n       // this.assignedJobs = this.assignedJobs.concat(ls);\r\n       this.assignedJobs=ls.concat(this.assignedJobs);\r\n        this.availableJobs = this.availableJobs.filter(f => f.Job.IsSelected == false);\r\n       \r\n    }\r\n\r\n\r\n    bulkUpload() {\r\n        this.IsCreateFreightOrder = null;\r\n        this.selectedFile = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.IsLoading = true;\r\n        this.assigncarrierService.upload(this.file, this.IsCreateFreightOrder).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getAssignedCarriers();\r\n                }\r\n                this.file = null;\r\n\r\n            }\r\n        );\r\n    }\r\n    public DisplayFreightOrderConfirmationModal() {\r\n        this.IsDisplayLoader = false;\r\n        let element: HTMLElement = this.btnOpenModal.nativeElement;\r\n        element.click();\r\n    }\r\n    public IscreateFreightOrders(IsCreateOrder: boolean) {\r\n        if (!this.isUpdate) {\r\n            this.IsDisplayLoader = true;\r\n            this.assigncarrierService.assignCarriers(this.assignedCarriers)\r\n                .subscribe((response: any) => {\r\n                    if (response.StatusCode == 0) {\r\n                        this.IsSuccess = false;\r\n                        if (IsCreateOrder) {\r\n                            this.assigncarrierService.createFreightOrder(this.assignedCarriers)\r\n                                .subscribe((response: any) => {\r\n                                    if (response.StatusCode == 0) {\r\n                                        Declarations.msgsuccess(\"Order(s) Assigned Successfully to Carrier\", undefined, undefined);\r\n                                    } else if (response.StatusCode == 1) {\r\n                                        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                                    }\r\n\r\n                                    this.IsDisplayLoader = false;\r\n                                    let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                                    element.click();\r\n                                    this._toggleOpened(false);\r\n                                    this.getAssignedCarriers();\r\n                                });\r\n                        } else {\r\n                            let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                            element.click();\r\n                            this._toggleOpened(false);\r\n                            this.getAssignedCarriers();\r\n                            this.IsDisplayLoader = false;\r\n                        }\r\n                    } else if (response.StatusCode == 1) {\r\n                        Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        }\r\n        else if (this.isUpdate) {\r\n            this.IsDisplayLoader = true;\r\n            this.assigncarrierService.updateAssignedCarrier(this.assignedCarriers[0])// First Update Existing carrier assignment\r\n                .subscribe((response: any) => {\r\n                    this.serviceResponse = response;\r\n                    if (response.StatusCode == 0) {\r\n                        this.IsSuccess = false;\r\n                        this.IsDisplayLoader = false;\r\n                        this.EditFreightOnlyOrders(IsCreateOrder);// Edit FO according to new job assignment\r\n                    }\r\n                    else {\r\n                        this.IsDisplayLoader = false;\r\n                        let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                        element.click();\r\n                        this._toggleOpened(false);\r\n                        Declarations.msgerror(\"Carrier Assignment Failed\", undefined, undefined);\r\n                    }\r\n                    //this.IsDisplayLoader = false;\r\n                });\r\n        }\r\n    }\r\n    public ValidateIfNewJobAdded(): any[] {\r\n        this.UpdatedJobIds = [];\r\n        var prevAssignedJobIds = this.SelectedJobs.map(function (item) { return item.Id });\r\n        var newlyAssignedJobIds = this.assignedCarriers[0].Jobs.map(function (item) { return item.Job.Id });\r\n        var keys1 = {};\r\n        var keys2 = {};\r\n        var inserted = [];\r\n        var deleted = [];\r\n        prevAssignedJobIds.forEach(function (item) {\r\n            keys1[item] = item;\r\n        });\r\n        newlyAssignedJobIds.forEach(function (item) {\r\n            keys2[item] = item;\r\n        });\r\n        prevAssignedJobIds.forEach(function (item) {\r\n            if (!keys2[item]) {\r\n                deleted.push(item);\r\n            }\r\n        });\r\n        newlyAssignedJobIds.forEach(function (item) {\r\n            if (!keys1[item]) {\r\n                inserted.push(item);\r\n            }\r\n        });\r\n        this.UpdatedJobIds.push({\r\n            InsertedJobs: inserted,\r\n            DeletedJobs: deleted\r\n        });\r\n        return this.UpdatedJobIds;\r\n    }\r\n\r\n    public EditFreightOnlyOrders(IsCreateOrder: boolean) {\r\n        this.IsDisplayLoader = true;\r\n        var InsertedJobIds: number[] = [];\r\n        var DeletedJobIds: number[] = [];\r\n\r\n        InsertedJobIds = this.UpdatedJobIds[0].InsertedJobs;\r\n        DeletedJobIds = this.UpdatedJobIds[0].DeletedJobs;\r\n        let editfreightOrder = new EditFreightOnlyOrder();\r\n        editfreightOrder.newJobsIds = InsertedJobIds;\r\n        editfreightOrder.removedJobsIds = DeletedJobIds;\r\n        editfreightOrder.CarrierCompanyId = this.assignedCarriers[0].Carrier.Id;\r\n        editfreightOrder.IsCreateOrder = IsCreateOrder;\r\n        this.assigncarrierService.editFreightOnlyOrders(editfreightOrder)\r\n            .subscribe((response: any) => {\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess(\"Carrier - Location assignment made successfully\", undefined, undefined);\r\n                    this.getAssignedCarriers();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Failed\", undefined, undefined);\r\n                }\r\n                this.IsDisplayLoader = false;\r\n                let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                element.click();\r\n                this._toggleOpened(false);\r\n            });\r\n    }\r\n\r\n    public closeAssignedOrdersforCarrier(carrier: Carrier) {\r\n        this.IsSuccess = true;\r\n        var removedJobsIds = carrier.Jobs.map(function (item) { return item.Job.Id });\r\n        let editfreightOrder = new EditFreightOnlyOrder();\r\n        editfreightOrder.newJobsIds = [];\r\n        editfreightOrder.removedJobsIds = removedJobsIds;\r\n        editfreightOrder.CarrierCompanyId = carrier.Carrier.Id;\r\n        editfreightOrder.IsCreateOrder = false;\r\n        this.assigncarrierService.closeAssignedOrdersforCarrier(editfreightOrder)\r\n            .subscribe((response: any) => {\r\n                this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    this.IsSuccess = false;\r\n                } else {\r\n\r\n                }\r\n                this.IsLoading = false;\r\n                this._opened = false;\r\n                this.getAssignedCarriers();\r\n            });\r\n    }\r\n\r\n}\r\n","<div id=\"CarrierToggleId\" class=\"mt10\">\r\n    <ng-sidebar-container>\r\n        <ng-sidebar [(opened)]=\"_opened\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh\">\r\n            <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 *ngIf=\"isUpdate; else editTitle\" class=\"dib ml10 mt10 mb0\">Edit Carrier</h3>\r\n            <ng-template #editTitle>\r\n                <h3 class=\"dib ml10 mt10 mb0\">Assign Carrier</h3>\r\n                <div class=\"alert alert-warning fs11 pt5 pl10 pr10 pb5 mb5\">Order(s)/DR(s) created for those locations will be sent to respective email(s)</div>\r\n            </ng-template>\r\n            <div *ngIf=\"isUpdate && IsJobDeselect\">\r\n                <div class=\"alert alert-warning fs11 pt5 pl10 pr10 pb5 mb5\">{{ WarningMessage }}</div>\r\n            </div>\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"IsSuccess\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <!--<content class=\"pr30\">\r\n            <form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit()\" id=\"assignCarrier\">\r\n                <div class=\"carrier-assignment\" formArrayName=\"Carriers\">\r\n                    <ng-container *ngFor=\"let carrier of rcForm.get('Carriers')['controls']; let i = index;\">\r\n                        <div class=\"row\" [formGroupName]=\"i\">\r\n                            <div class=\"col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"pa15 border radius-5 bg-lightgrey\">\r\n                                                <div class=\"row\">\r\n                                                    <input type=\"hidden\" formControlName=\"Id\">\r\n                                                    <div class=\"col-sm-5\">\r\n                                                        <ng-multiselect-dropdown formControlName=\"SelectedCarrier\"\r\n                                                                                 [placeholder]=\"'Select Carrier'\" *ngIf=\"!isUpdate\" [data]=\"carrierList\"\r\n                                                                                 [settings]=\"dropdownSettings\" (onSelect)=\"OnCarrierSelect($event, i)\"\r\n                                                                                 (onDeSelect)=\"OnCarrierDeSelect($event, i)\">\r\n                                                        </ng-multiselect-dropdown>\r\n                                                        <label *ngIf=\"isUpdate\" class=\"db\"><b>Carrier :</b></label>\r\n                                                        <label *ngIf=\"isUpdate\">{{carrier.get('SelectedCarrier').value[0].Name}}</label>\r\n                                                        <div *ngIf=\"carrier.get('SelectedCarrier').invalid && (carrier.get('SelectedCarrier').touched)\"\r\n                                                             class=\"color-maroon\">\r\n                                                            <div *ngIf=\"isRequired('SelectedCarrier', i)\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div *ngIf=\"carrier.get('IsValid').value==false\" class=\"color-maroon\">\r\n                                                            Carrier already Assigned.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <label *ngIf=\"isUpdate\"> <b>Locations :</b></label>\r\n                                                        <ng-multiselect-dropdown id=\"location-confirm\" formControlName=\"SelectedJobs\"\r\n                                                                                 [placeholder]=\"'Select Jobs'\" data-toggle=\"popover\" [data]=\"jobs\"\r\n                                                                                 [settings]=\"multiDropdownSettings\" (onSelect)=\"OnJobSelect($event, i)\"\r\n                                                                                 (onSelectAll)=\"OnJobSelectAll($event, i)\"\r\n                                                                                 (onDeSelectAll)=\"OnJobDeSelectAll($event, i)\"\r\n                                                                                 (onDeSelect)=\"OnJobDeSelect($event ,i)\">\r\n                                                        </ng-multiselect-dropdown>\r\n                                                        <div *ngIf=\"carrier.get('SelectedJobs').invalid && (carrier.get('SelectedJobs').touched)\"\r\n                                                             class=\"color-maroon\">\r\n                                                            <div *ngIf=\"isRequired('SelectedJobs', i)\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-1\" *ngIf=\"!isUpdate\">\r\n                                                        <a class=\"fa fa-trash-alt color-maroon mt10\" (click)=\"removeCarrier(carrier,i)\"></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\" *ngIf=\"carrier.get('JobWithEmails').controls?.length>0\" formArrayName=\"JobWithEmails\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-12\">\r\n                                                    <div class=\"pa15\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-5\"><label class=\"mb0\"><b>Location</b></label></div>\r\n                                                            <div class=\"col-6\"><label class=\"mb0\"><b>Email id</b></label></div>\r\n                                                        </div>\r\n                                                        <div *ngFor=\"let job of carrier.get('JobWithEmails').controls; let j = index;\">\r\n                                                            <div class=\"row mb5 mt10\" *ngIf=\"job.get('Job').value\" [formGroupName]=\"j\">\r\n                                                                <div class=\"col-5\">\r\n                                                                    <label class=\"mt10\">{{job.get('Job').value.Name}}</label>\r\n                                                                </div>\r\n                                                                <div class=\"col-6\">\r\n                                                                    <ng-multiselect-dropdown [placeholder]=\"'Select Email'\"\r\n                                                                                             [settings]=\"   \" [data]=\"getCarrierEmailsById(carrier.get('SelectedCarrier'))\"\r\n                                                                                             formControlName=\"Email\">\r\n                                                                    </ng-multiselect-dropdown>\r\n                                                                </div>\r\n                                                                <div class=\"col-1\">\r\n                                                                    <a class=\"fa fa-trash-alt color-maroon mt10\" (click)=\"OnRemoveEmail(job.get('Job').value, i)\"></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class=\"row mt15\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div *ngIf=\"!isUpdate\" class=\"mt10\">\r\n                                <a (click)=\"assignNewCarrier()\"><i class=\"fa fa-plus-circle\"></i> Assign New</a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6 text-right\">\r\n                            <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                            <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save</button>\r\n                            <button #btnOpenModal id=\"openfreightOrderModel\" type=\"button\" [hidden]=\"true\" data-toggle=\"modal\"\r\n                                    data-target=\"#createFreightOrderModel\"></button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </content>-->\r\n            <div class=\"row mt10\">\r\n                <div class=\"col-sm-4 text-left\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"fs16 font-weight-500\" *ngIf=\"!isUpdate\" for=\"formGroupExampleInput\">Carrier</label>\r\n                        <ng-multiselect-dropdown *ngIf=\"!isUpdate\" class=\"single-select\" id=\"formGroupExampleInput\" [(ngModel)]=\"selectedCarrierItem\"\r\n                                                 [placeholder]=\"'Select Carrier'\" \r\n                                                 [settings]=\"dropdownSettings\" [data]=\"carrierList\" (onSelect)=\"OnCarrierSelect($event)\"\r\n                                                 (onDeSelect)=\"OnCarrierDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div class=\"fs16 font-weight-500\" *ngIf=\"isUpdate\">{{SelectedCarrier.Name}}</div>\r\n                        <!--<div *ngIf=\"carrier.get('SelectedCarrier').invalid && (carrier.get('SelectedCarrier').touched)\"\r\n                             class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('SelectedCarrier', i)\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"carrier.get('IsValid').value==false\" class=\"color-maroon\">\r\n                            Carrier already Assigned.\r\n                        </div>-->\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"dual-list list-left col-4\">\r\n                    <div class=\"well text-right\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-left\">\r\n                                <h4>Available Location(s)</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" name=\"searchAvailableJob\" [(ngModel)]=\"list1Search\" class=\"form-control\" placeholder=\"search\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <h5>Count</h5>\r\n                                <div class=\"text-center\">\r\n                                    {{SelectedCount}}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"btn-group float-left form-control chk-custom-all\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Select All\">\r\n                                    <!-- <a class=\"btn btn-default selector\" title=\"select all\"><i class=\"glyphicon glyphicon-unchecked\"></i></a>-->\r\n                                    <div class=\"form-check form-check-inline mt4\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"availableJobSelectAll\" name=\"availableJobSelectAll\" id=\"ckb-list1-SelectAll\" value=\"selectAll\" (change)=\"toogleSelectAll('availableJob', $event.target.checked)\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul class=\"list-group\">\r\n                            <li class=\"list-group-item\" [ngClass]=\"{'active':availableJob.Job.IsSelected}\" *ngFor=\"let availableJob of availableJobs | startsWithJob : list1Search\" (click)=\"toggleSelect(availableJob);\"> {{availableJob.Job.Name}}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-arrows col-sm-1 text-center\">\r\n                    <button class=\"btn btn-default btn-sm move-left\"  title=\"Shift to Left\" (click)=\"moveToLeft()\">\r\n                        <span class=\"glyphicon glyphicon-chevron-left\"></span>\r\n                    </button>\r\n                    \r\n                    <button class=\"btn btn-default btn-sm move-right\" title=\"Shift to Right\" (click)=\"moveToRight()\" >\r\n                        <span class=\"glyphicon glyphicon-chevron-right\"></span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"dual-list list-right col-7\">\r\n                    <div class=\"well\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-left\">\r\n                                <h4>Assigned Location(s)</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" name=\"searchAvailableJob\" [(ngModel)]=\"list2Search\" class=\"form-control\" placeholder=\"search\" />                                  <!--<input type=\"text\" name=\"searchAssignedJob\" [(ngModel)]=\"list2Search\" class=\"form-control\" placeholder=\"search\" />-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"btn-group float-left form-control chk-custom-all\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Select All\">\r\n                                    <!-- <a class=\"btn btn-default selector\" title=\"select all\" (click)=\"toogleSelectAll('jobs2')\"><i class=\"glyphicon glyphicon-unchecked\"></i></a>-->\r\n                                    <div class=\"form-check form-check-inline mt4\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"assginedJobSelectAll\" name=\"assginedJobSelectAll\" id=\"ckb-list2-SelectAll\" value=\"selectAll\" (change)=\"toogleSelectAll('assignedJob', $event.target.checked)\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul class=\"list-group\">\r\n                            <li class=\"list-group-item\" [ngClass]=\"{'active':assignedJob.Job.IsSelected}\" *ngFor=\"let assignedJob of assignedJobs | startsWithJob : list2Search \">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\" (click)=\"toggleSelect(assignedJob);\">\r\n                                        <span>{{assignedJob.Job.Name}}</span>\r\n                                    </div>\r\n                                    <div class=\"col-7  trncate-text text-right\">\r\n                                        <span *ngIf=\"assignedJob.Job.Emails\">\r\n                                            <ng-container *ngFor=\"let item of assignedJob.Job.Emails; let isLast=last\">\r\n                                                {{item.Name}}{{isLast ? '' : ', '}}\r\n                                            </ng-container>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"col-1 text-right\">\r\n                                        <a href=\"javascript:void(0);\" id=\"edit-email\" data-toggle=\"modal\" data-target=\"#add-edit-email\" (click)=\"editEmail($event,assignedJob);\"><i class=\"fa fa-edit ml10\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Email\"></i> </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt15\">\r\n                <div class=\"col-sm-12 text-right\">\r\n                    <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                    <button class=\"ml15 btn btn-primary btn-lg\" (click)=\"SaveCarrier()\" type=\"submit\">Save</button>\r\n                    <button #btnOpenModal id=\"openfreightOrderModel\" type=\"button\" [hidden]=\"true\" data-toggle=\"modal\"\r\n                            data-target=\"#createFreightOrderModel\"></button>\r\n                </div>\r\n            </div>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n\r\n    <!--sidebar for region creation-->\r\n    <div class=\"row mt5 mb10\">\r\n        <div class=\"col-sm-9\">\r\n            <h4 class=\"pt0 pull-left\">Assigned Carriers</h4>\r\n            <a id=\"assignNewCarrier\" (click)=\"assignNewForm();\" class=\"fs18 pull-left ml20\">\r\n                <i class=\"fa fa-plus-circle fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Assign New</span>\r\n            </a>\r\n        </div>\r\n        <!--<div class=\"col-sm-3\">\r\n            <input type=\"text\" id=\"searchCarrier\" class=\"form-control input\" placeholder=\"Search Carriers\" [(ngModel)]=\"query\">\r\n        </div>-->\r\n        <div class=\"col-sm-3 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" (click)=\"bulkUpload()\" data-target=\"#upload-carrier-csv\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-download fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row pr\" id=\"assignCarrierDetails\">\r\n        <div class=\"pa bg-white z-index5 loading-wrapper left0 top0\" *ngIf=\"IsLoading\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div>\r\n        <!--<div class=\"col-sm-12 text-center\" *ngIf=\"!carriers||carriers?.length == 0\">\r\n            <i class=\"fa fas fa-exclamation-triangle opacity8\"></i>\r\n            <label class=\"fs15 color-maroon\">No carriers assigned </label>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"carrierjobassignment-grid\" class=\"table-responsive\">\r\n                            <table id=\"carrier-datatable\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Carrier Name</th>\r\n                                        <th>Locations</th>\r\n                                        <th>No. of Locations Assigned</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let carrier of assignedCarrierList\">\r\n                                        <!--<td>{{carrier.CarrierCompanyName}}</td>\r\n                                        <td>{{carrier.AssignedLocations}}</td>\r\n                                        <td>{{carrier.LocationCount}}</td>-->\r\n                                        <td>{{carrier.Carrier.Name}}</td>\r\n                                        <td>{{carrier.assignedLocations}}</td>\r\n                                        <td>{{carrier.Jobs.length}}</td>\r\n                                        <td class=\"text-center\">\r\n                                            <button (click)=\"editForm(carrier)\" type=\"button\" class=\"btn btn-link\"><i class=\"fas fa-edit fs16\"></i></button>\r\n                                            <a class=\"fa fa-trash-alt color-maroon ml10 mr15\" mwlConfirmationPopover\r\n                                               [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                               (cancel)=\"cancelClicked = true\" (confirm)=\"removeAssignedCarrier(carrier)\"></a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--freight order confimation modal-->\r\n    <div class=\"modal fade\" id=\"createFreightOrderModel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"IsDisplayLoader\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Pass Order</h4>\r\n                        <button #btnCloseModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\"\r\n                                aria-label=\"Close\">\r\n                            <i class=\"fa fa-close fs21\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 mt10\">\r\n                            Do you want to pass the existing Order(s) to the assigned carrier?\r\n                        </div>\r\n                    </div>\r\n                    <div class=row>\r\n                        <div class=\"col-sm-12 text-right mt10\">\r\n                            <button type=\"button\" id=\"btnDismissCreateFreightOrder\" class=\"btn btn-lg\"\r\n                                    (click)=\"IscreateFreightOrders(false)\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"button\" id=\"btnCreateFreightOrder\" class=\"btn btn-lg btn-primary\"\r\n                                    (click)=\"IscreateFreightOrders(true)\">\r\n                                Yes\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal fade\" id=\"upload-carrier-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog \" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Carrier CSV</h4>\r\n                        <button  #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <span class=\"fa fa-download mr10 mt10\"></span>\r\n                            <a href=\"/Content/Bulk_upload_template_Carrier_Assignment.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-md-12 b-dashed\">\r\n                            <h2>\r\n                                <label for=\"csvFile\" class=\"btn btn-primary ml0\">\r\n                                    <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                                </label>\r\n                            </h2>\r\n                            <div class=\"alert alert-warning fs12\">\r\n                                Note : Please use the .csv template for uploading your Carrier details. Follow the required and optional field guidelines.\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"selectInputEmail1\" class=\"d-block\">\r\n                                            *\r\n                                            Do you want to pass the existing Order(s) to the assigned carrier?\r\n                                        </label>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" [(ngModel)]=\"IsCreateFreightOrder\" id=\"inlineRadio1\" value=\"1\">\r\n                                            <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" [(ngModel)]=\"IsCreateFreightOrder\" id=\"inlineRadio2\" value=\"0\">\r\n                                            <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                    <input type=\"submit\" [disabled]=\"IsCreateFreightOrder == null\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"add-edit-email\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header modal-header pt5 pb0\">\r\n                    <h4 class=\"float-left\">Add/Edit Email</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 b-dashed\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectInputEmail1\">Select Email </label>\r\n                                <ng-multiselect-dropdown id=\"selectInputEmail1\" [placeholder]=\"'Select Email'\" [(ngModel)]=\"editEmailDetails\" [settings]=\"multiDropdownSettings\" [data]=\"getCarrierEmailsById()\"> </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <!-- <input type=\"submit\" value=\"Save\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />-->\r\n                    <button type=\"button\" (click)=\"SaveJobEmail()\" data-dismiss=\"modal\" class=\"btn btn-primary\">Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CarrierCompaniesComponent } from '../carrier-companies.component';\r\n\r\n\r\n\r\nconst routeCarrierCompanies: Routes = [\r\n    {\r\n        path: '', component: CarrierCompaniesComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: CarrierCompaniesComponent,\r\n                data: {\r\n                    title: 'Carrier Companies'\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeCarrierCompanies)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class CarrierCompaniesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CarrierCompaniesRoutingModule } from './carrier-companies-routing.module';\r\nimport { CarrierCompaniesComponent } from '../carrier-companies.component';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        CarrierCompaniesComponent,\r\n    ],\r\n    imports: [\r\n        CarrierCompaniesRoutingModule,\r\n        SharedModule,\r\n        DataTablesModule,\r\n        DirectiveModule\r\n    ]\r\n})\r\nexport class CarrierCompaniesModule { }\r\n"],"sourceRoot":"webpack:///"}