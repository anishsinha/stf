{"version":3,"sources":["./src/app/order/create-blend-group/create-blend-group.component.ts","./src/app/order/create-blend-group/create-blend-group.component.html","./src/app/order/create-same-dest-group/create-same-dest-group.component.ts","./src/app/order/create-same-dest-group/create-same-dest-group.component.html","./src/app/order/filter-group/filter-group.component.ts","./src/app/order/filter-group/filter-group.component.html","./src/app/order/lazy-loading/order-routing.module.ts","./src/app/order/lazy-loading/order.module.ts","./src/app/order/models/OrderDetail.ts","./src/app/order/models/ViewOrderGroupDdlModel.ts","./src/app/order/services/order.service.ts","./src/app/order/services/shared.service.ts","./src/app/order/services/viewordergroup.service.ts","./src/app/order/term-pricing-contract.component.ts","./src/app/order/term-pricing-contract.component.html","./src/app/order/view-order-group/view-order-group.component.ts","./src/app/order/view-order-group/view-order-group.component.html"],"names":[],"mappings":"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","file":"order-lazy-loading-order-module-es2015.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { OrderGroupDetails } from '../models/models';\r\nimport { OrderService } from '../services/order.service';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { OrderGroupType } from 'src/app/app.enum';\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var IsSupplierCompany: boolean;\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n\tselector: 'app-create-blend-group',\r\n\ttemplateUrl: './create-blend-group.component.html',\r\n\tstyleUrls: ['./create-blend-group.component.css']\r\n})\r\n\r\nexport class CreateBlendGroupComponent implements OnInit {\r\n\r\n\tpublic BlendGroupForm: FormGroup;\r\n\r\n\tpublic FuelTypeList = [];\r\n\tpublic SelectedFuelTypes = [];\r\n\tpublic CustomerList = [];\r\n\tpublic SelectedCustomer: any;\r\n\tpublic JobList = [];\r\n\tpublic SelectedJob: any;\r\n\tpublic IsLoading: boolean = false;\r\n\tpublic configSettings = {};\r\n\tpublic FuelDdlSettings = {};\r\n\tpublic SingleDdlSettings = {};\r\n\tpublic orderList: OrderGroupDetails[] = [];\r\n\tpublic finalSubmitData: any = {};\r\n\tpublic groupId: number = 0;\r\n\tpublic isEdit: boolean = false;\r\n\r\n\r\n\t@Output() onSubmitGroupData: EventEmitter<any> = new EventEmitter<any>();\r\n\tconstructor(private fb: FormBuilder, private orderService: OrderService, private viewGroupService: SharedService) {\r\n\t\tthis.BlendGroupForm = this.fb.group({\r\n\t\t\tOrderBlendedGroups: this.fb.array([]),\r\n\t\t\tCustomerPoNumber: this.fb.control('')\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.configSettings = {\r\n\t\t\tdisplayKey: 'Name',\r\n\t\t\tsearch: true,\r\n\t\t}\r\n\t\tthis.FuelDdlSettings = {\r\n\t\t\tsingleSelection: false,\r\n\t\t\tidField: 'Id',\r\n\t\t\ttextField: 'Name',\r\n\t\t\tenableCheckAll: false,\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\titemsShowLimit: 1,\r\n\t\t\tallowSearchFilter: true,\r\n\t\t\tcloseDropDownOnSelection: true\r\n\t\t};\r\n\t\tthis.SingleDdlSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\tidField: 'Id',\r\n\t\t\ttextField: 'Name',\r\n\t\t\tenableCheckAll: false,\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\titemsShowLimit: 1,\r\n\t\t\tallowSearchFilter: true\r\n\t\t};\r\n\t\tif (IsSupplierCompany) {\r\n\t\t\tthis.orderService.getCustomerList().subscribe(data => this.CustomerList = data);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.orderService.getSupplierList().subscribe(data => this.CustomerList = data);\r\n\t\t}\r\n\r\n\t\tthis.viewGroupService.currentGroup.subscribe(id => {\r\n\t\t\tthis.groupId = id;\r\n\t\t\tif (id > 0) {\r\n\t\t\t\tthis.clearBlendGroupForm();\r\n\t\t\t\tthis.GetGroupDetails();\r\n\t\t\t\tthis.isEdit = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tngAfterViewInit() {\r\n\t}\r\n\tget OrderBlendedGroups(): FormArray {\r\n\t\treturn this.BlendGroupForm.get(\"OrderBlendedGroups\") as FormArray\r\n\t}\r\n\tget CustomerPoNumber(): FormControl {\r\n\t\treturn this.BlendGroupForm.get(\"CustomerPoNumber\") as FormControl\r\n\t}\r\n\tget Job(): DropdownItem {\r\n\t\treturn this.SelectedJob[0];\r\n\t}\r\n\tget Customer(): DropdownItem {\r\n\t\treturn this.SelectedCustomer[0];\r\n\t}\r\n\tget selectedFuelTypeList(): number[] {\r\n\t\treturn this.SelectedFuelTypes.map(x => x.Id);\r\n\t}\r\n\tisDropAllowed = (dragData: any) => {\r\n\t\treturn dragData > 500;\r\n\t}\r\n\r\n\tbuildProduct(model: OrderGroupDetails) {\r\n\t\treturn this.fb.group({\r\n\t\t\tGroupId: this.fb.control(model.GroupId),\r\n\t\t\tOrderId: this.fb.control(model.OrderId),\r\n\t\t\tTfxPoNumber: this.fb.control(model.TfxPoNumber),\r\n\t\t\tFuelType: this.fb.control(model.FuelType),\r\n\t\t\tQuantity: this.fb.control(model.Quantity),\r\n\t\t\tDisplayPrice: this.fb.control(model.DisplayPrice),\r\n\t\t\tBlendPercentage: this.fb.control(model.BlendPercentage, [Validators.required, Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),\r\n\t\t});\r\n\t}\r\n\tonItemDrop(order: any) {\r\n\t\t//this.usedOrderGroupDetails.push(order.dragData);\r\n\t\t//this.OrderBlendedGroups.patchValue(this.usedOrderGroupDetails);\r\n\t\tthis.setSelectedOrders(order.dragData);\r\n\t\tthis.SetDefaultBlendPercentage();\r\n\t}\r\n\r\n\tsetSelectedOrders(order: any) {\r\n\t\tthis.OrderBlendedGroups.push(this.buildProduct(order));\r\n\t\tthis.orderList = this.orderList.filter(x => x.FuelType !== order.FuelType);\r\n\t}\r\n\tpublic onFuelSelect(item: any): void {\r\n\t\tthis.loadOrders(this.Customer.Id, this.Job.Id, this.selectedFuelTypeList);\r\n\t}\r\n\r\n\tpublic onFuelDeSelect(item: any): void {\r\n\t\tthis.RemoveOrder(item.Name);\r\n\t\tthis.RemoveGroups(item.Name);\r\n\t}\r\n\r\n\tremoveBlend(i: number) {\r\n\t\tthis.OrderBlendedGroups.removeAt(i);\r\n\r\n\t\tvar selectedFuelTypes = this.OrderBlendedGroups.controls.map(x => { return x.get('FuelType').value });\r\n\t\tvar fuelTypeIds = this.FuelTypeList.map(t => {\r\n\t\t\tif (selectedFuelTypes.indexOf(t.Name) > -1)\r\n\t\t\t\treturn t.Id;\r\n\t\t});\r\n\t\tvar loadedFuelType = this.selectedFuelTypeList.filter(x => fuelTypeIds.indexOf(x) == -1);\r\n\t\tthis.SetDefaultBlendPercentage();\r\n\t\tthis.loadOrders(this.Customer.Id, this.Job.Id, loadedFuelType);\r\n\t}\r\n\r\n\tRemoveOrder(fuelTypeName: string) {\r\n\t\tthis.orderList = this.orderList.filter(obj => obj.FuelType !== fuelTypeName);\r\n\t}\r\n\r\n\tloadOrders(_customerId: number, _jobId: number, _fuelTypeIds: number[]): void {\r\n\t\tthis.orderService.getFilteredOrdersList(_customerId, _jobId, _fuelTypeIds, this.groupId).subscribe((data: OrderGroupDetails[]) => {\r\n\t\t\tvar existingOrderList = this.OrderBlendedGroups.controls.map(x => { return x.get('OrderId').value });\r\n\t\t\tthis.orderList = data.filter(ele => existingOrderList.indexOf(ele.OrderId) == -1);\r\n\t\t});\r\n\t}\r\n\r\n\tloadFuelType(_customerId: number, _jobId: number): void {\r\n\t\tthis.orderService.getFuelTypesList(_customerId, _jobId).subscribe((data: DropdownItem[]) => {\r\n\t\t\tthis.FuelTypeList = data;\r\n\t\t});\r\n\t}\r\n\r\n\tRemoveGroups(_FuelType: string): void {\r\n\t\t//this.usedOrderGroupDetails = this.usedOrderGroupDetails.filter(x => x.FuelType !== _FuelType);\r\n\t\tthis.OrderBlendedGroups.setValue(this.OrderBlendedGroups.controls.filter(group => group.get('FuelType').value !== _FuelType));\r\n\t\tthis.SetDefaultBlendPercentage();\r\n\t}\r\n\r\n\tSetDefaultBlendPercentage(): void {\r\n\t\tvar totalFuelTypes = this.OrderBlendedGroups.length;\r\n\t\tvar equalPercent = (100 / totalFuelTypes).toFixed(2);\r\n\t\tthis.OrderBlendedGroups.controls.forEach((x: FormGroup) => { x.get('BlendPercentage').setValue(equalPercent) });\r\n\t}\r\n\tpublic OnCustomerSelect(customer: any) {\r\n\t\tthis.SelectedJob = '';\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t\tthis.orderService.getCommonJobList(customer.Id).subscribe(data => this.JobList = data);\r\n\t}\r\n\r\n\tpublic OnCustomerDeSelect(customer: any) {\r\n\t\tthis.SelectedCustomer = '';\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = '';\r\n\t\tthis.FuelTypeList = [];\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.orderList = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t}\r\n\r\n\tpublic OnJobSelect(job: any) {\r\n\t\tthis.orderList = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.loadFuelType(this.Customer.Id, job.Id);\r\n\t}\r\n\r\n\tpublic OnJobDeSelect(job: any) {\r\n\t\tthis.FuelTypeList = [];\r\n\t\tthis.SelectedFuelTypes = [];\r\n\t\tthis.orderList = [];\r\n\t\tthis.OrderBlendedGroups.clear();\r\n\t}\r\n\r\n\tpublic OnSubmit(): void {\r\n\t\tvar blendValue: number[] = this.OrderBlendedGroups.controls.map(x => { return parseFloat(x.get('BlendPercentage').value) });\r\n\t\tvar sum = 0;\r\n\t\tblendValue.forEach(x => sum += x);\r\n\t\tif (sum != 100) {\r\n\t\t\tDeclarations.msgerror('Total percentage sum should be 100', undefined, undefined);\r\n\t\t\tthis.BlendGroupForm.setErrors({ 'invalid': true });\r\n\t\t}\r\n\t\tthis.finalSubmitData = {\r\n\t\t\tId: this.isEdit ? this.groupId : 0,\r\n\t\t\tOrderList: this.OrderBlendedGroups.value,\r\n\t\t\tGroupPoNumber: this.CustomerPoNumber.value,\r\n\t\t\tBuyerCompanyId: IsSupplierCompany ? this.Customer.Id : currentUserCompanyId,\r\n\t\t\tSupplierCompanyId: IsSupplierCompany ? currentUserCompanyId : this.Customer.Id,\r\n\t\t\tJobId: this.Job.Id,\r\n\t\t\tGroupType: OrderGroupType.Blend\r\n\t\t};\r\n\r\n\t\tif (this.BlendGroupForm.valid) {\r\n\t\t\tthis.IsLoading = true;\r\n\t\t\tif (this.isEdit) {\r\n\t\t\t\tthis.orderService.postEditGroup(this.finalSubmitData).subscribe(data => {\r\n\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\tif (data.StatusCode == 0) {\r\n\t\t\t\t\t\tDeclarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t\tthis.clearBlendGroupForm();\r\n\t\t\t\t\t\tcloseSlidePanel();\r\n\t\t\t\t\t\tthis.onSubmitGroupData.emit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tDeclarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.orderService.postCreateGroup(this.finalSubmitData).subscribe(data => {\r\n\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\tif (data.StatusCode == 0) {\r\n\t\t\t\t\t\tDeclarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t\tcloseSlidePanel();\r\n\t\t\t\t\t\tthis.onSubmitGroupData.emit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tDeclarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tGetGroupDetails(): void {\r\n\t\tthis.orderService.getBlendGroupDetails(this.groupId).subscribe(group => {\r\n\t\t\tthis.JobList = group.Jobs;\r\n\t\t\tthis.FuelTypeList = group.FuelTypes;\r\n\t\t\tthis.orderList = group.FilteredOrders;\r\n\t\t\tthis.CustomerPoNumber.setValue(group.GroupDetails.GroupPoNumber);\r\n\t\t\tthis.SelectedCustomer = IsSupplierCompany ? this.getCustomerFromSupplier(group.GroupDetails.BuyerCompanyId) : this.getCustomerFromSupplier(group.GroupDetails.SupplierCompanyId);\r\n\t\t\tthis.SelectedJob = this.JobList.filter(ele => ele.Id == group.GroupDetails.JobId);\r\n\t\t\tvar _fuelTypes = group.GroupDetails.OrderList.map(x => x.Order.FuelType);\r\n\t\t\tthis.SelectedFuelTypes = this.FuelTypeList.filter(ele => _fuelTypes.indexOf(ele.Name) > -1);\r\n\t\t\tfor (var i = 0; i < group.GroupDetails.OrderList.length; i++) {\r\n\t\t\t\tvar orderDetail: OrderGroupDetails = group.GroupDetails.OrderList[i];\r\n\t\t\t\tvar orderToMove: OrderGroupDetails[] = this.orderList.filter(t => t.OrderId == orderDetail.OrderId);\r\n\t\t\t\tthis.setSelectedOrders(orderToMove[0]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetCustomerFromSupplier(id: number) {\r\n\t\treturn this.CustomerList.filter(e => e.Id == id);\r\n\t}\r\n\r\n\tpublic clearBlendGroupForm(): void {\r\n\t\tif (this.SelectedCustomer != null) {\r\n\t\t\tthis.OnCustomerDeSelect(this.SelectedCustomer);\r\n\t\t}\r\n\t\tthis.CustomerPoNumber.setValue(\"\");\r\n\t\tthis.isEdit = false;\r\n\t}\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"form-group col-sm-3\">\r\n        <!--<ngx-select-dropdown (change)=\"OnCustomerSelect($event)\" [multiple]=\"false\" [config]=\"configSettings\" [options]=\"CustomerList\"></ngx-select-dropdown>-->\r\n        <label>Customer</label>\r\n        <ng-multiselect-dropdown [data]=\"CustomerList\" [(ngModel)]=\"SelectedCustomer\" [settings]=\"SingleDdlSettings\" (onSelect)=\"OnCustomerSelect($event)\" (onDeSelect)=\"OnCustomerDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-4\">\r\n        <label>Job</label>\r\n        <ng-multiselect-dropdown [data]=\"JobList\" [(ngModel)]=\"SelectedJob\" [settings]=\"SingleDdlSettings\" (onSelect)=\"OnJobSelect($event)\" (onDeSelect)=\"OnJobDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-3\">\r\n        <label>Fuel Type</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelTypes\" [settings]=\"FuelDdlSettings\" [data]=\"FuelTypeList\" \r\n                                 (onSelect)=\"onFuelSelect($event)\" (onDeSelect)=\"onFuelDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n</div>\r\n<div [formGroup]=\"BlendGroupForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\">\r\n            <div class=\"group-height\">\r\n                <div class=\"clearboth border-dash-dark radius-5\" droppable (onDrop)=\"onItemDrop($event)\">\r\n                    <div class=\"pa10 ma15 text-center\" *ngIf=\"BlendGroupForm.get('OrderBlendedGroups')['controls'].length == 0\">\r\n                        <i class=\"far fa-hand-rock fs25\"></i>\r\n                        <h3 class=\"fs16 ma5 pa0 color-orange\">Please drag order here to blend fuel types</h3>\r\n                    </div>\r\n                    <div formArrayName=\"OrderBlendedGroups\">\r\n                        <div class=\"radius-5 pl10 pr10 ma15\" *ngFor=\"let group of BlendGroupForm.get('OrderBlendedGroups')['controls']; let i = index;\">\r\n                            <div class=\"row\" [formGroupName]=\"i\">\r\n                                <div class=\"well mb0 col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <h3 class=\"mt0 mb0\">{{group.get('TfxPoNumber').value}}<input type=\"hidden\" formControlName=\"OrderId\" value=\"{{group.get('OrderId').value}}\" /></h3>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row mt10\">\r\n                                        <div class=\"col-sm-4 pt10\">\r\n                                            <span>{{group.get('FuelType').value}}</span>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"BlendPercentage\" value=\"{{group.get('BlendPercentage').value}}\">\r\n                                                <span class=\"input-group-addon\">%</span>\r\n                                            </div>\r\n                                            <div class=\"help-block color-maroon\" *ngIf=\"group.get('BlendPercentage').errors && (group.get('BlendPercentage').touched || group.get('BlendPercentage').dirty)\">\r\n                                                <span *ngIf=\"group.get('BlendPercentage').errors.required\">\r\n                                                    Required.\r\n                                                </span>\r\n                                                <span *ngIf=\"group.get('BlendPercentage').errors.pattern\">\r\n                                                    Invalid.\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-2 pt10\">\r\n                                            <a class=\"color-maroon pull-right\" (click)=\"removeBlend(i)\"><i class=\"fa fa-trash-alt\"></i></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"i + 1 < BlendGroupForm.get('OrderBlendedGroups')['controls'].length\" class=\"text-center col-sm-12\"><i class=\"fas fa-plus fs21 mt15\"></i></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <div class=\"group-height\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\" *ngFor=\"let order of orderList\" draggable [dragData]=\"order\">\r\n                        <div class=\"well\">\r\n                            <h3 class=\"mt0 mb0\">{{order.TfxPoNumber}}</h3>\r\n                            <span>{{order.FuelType}}</span><br>\r\n                            <span>{{order.DisplayPrice}}</span><br>\r\n                            <span>{{order.Quantity}}</span><br>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n                <label for=\"CustomerPoNumber\">Customer Po#</label>\r\n                <input class=\"form-control\" type=\"text\" formControlName=\"CustomerPoNumber\" />\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn btn-lg\" (click)=\"clearBlendGroupForm()\" onclick=\"closeSlidePanel()\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"!isEdit\" class=\"btn btn-primary btn-lg\" value=\"Create\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"isEdit\" class=\"btn btn-primary btn-lg\" value=\"Submit\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Submitting Group...</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { OrderGroupDetails } from '../models/models';\r\nimport { OrderService } from '../services/order.service';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { OrderGroupType } from 'src/app/app.enum';\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var IsSupplierCompany: boolean;\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n    selector: 'app-create-same-dest-group',\r\n    templateUrl: './create-same-dest-group.component.html',\r\n    styleUrls: ['./create-same-dest-group.component.css']\r\n})\r\nexport class CreateSameDestGroupComponent implements OnInit {\r\n\r\n    public SameDestGroupForm: FormGroup;\r\n\r\n    public FuelTypeList = [];\r\n    public SelectedFuelTypes = [];\r\n    public CustomerList = [];\r\n    public SelectedCustomer: any;\r\n    public JobList = [];\r\n    public SelectedJob: any;\r\n    public IsLoading: boolean = false;\r\n    public configSettings = {};\r\n    public FuelDdlSettings = {};\r\n    public SingleDdlSettings = {};\r\n    public orderList: OrderGroupDetails[] = [];\r\n    public orderListSelected: OrderGroupDetails[] = [];\r\n    public finalSubmitData: any = {};\r\n    public groupId: number = 0;\r\n    public isEdit: boolean = false;\r\n\r\n    @Output() onSubmitGroupData: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor(private fb: FormBuilder, private orderService: OrderService, private viewGroupService: SharedService) {\r\n        this.SameDestGroupForm = this.fb.group({\r\n            CustomerPoNumber: this.fb.control('')\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.configSettings = {\r\n            displayKey: 'Name',\r\n            search: true,\r\n\r\n        }\r\n        this.FuelDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: true,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'Unselect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            closeDropDownOnSelection: true\r\n        };\r\n        this.SingleDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'Unselect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        if (IsSupplierCompany) {\r\n            this.orderService.getCustomerList().subscribe(data => this.CustomerList = data);\r\n        }\r\n        else {\r\n            this.orderService.getSupplierList().subscribe(data => this.CustomerList = data);\r\n        }\r\n\r\n        this.viewGroupService.currentGroup.subscribe(id => {\r\n            this.groupId = id;\r\n            if (id > 0) {\r\n                this.clearDestGroupForm();\r\n                this.GetGroupDetails();\r\n                this.isEdit = true;\r\n            }\r\n        });\r\n    }\r\n    OrderClicked(orderData: OrderGroupDetails) {\r\n        let obj = this.orderList.find(o => o.OrderId == orderData.OrderId);\r\n        obj.IsOrderSelected = !obj.IsOrderSelected;\r\n        this.orderListSelected = this.orderList.filter(t => t.IsOrderSelected == true);\r\n    }\r\n    get CustomerPoNumber(): FormControl {\r\n        return this.SameDestGroupForm.get(\"CustomerPoNumber\") as FormControl\r\n    }\r\n    get Job(): DropdownItem {\r\n        return this.SelectedJob[0];\r\n    }\r\n    get Customer(): DropdownItem {\r\n        return this.SelectedCustomer[0];\r\n    }\r\n    get selectedFuelTypeList(): number[] {\r\n        return this.SelectedFuelTypes.map(x => x.Id);\r\n    }\r\n\r\n\r\n    buildProduct(model: OrderGroupDetails) {\r\n        return this.fb.group({\r\n            GroupId: this.fb.control(model.GroupId),\r\n            OrderId: this.fb.control(model.OrderId),\r\n            TfxPoNumber: this.fb.control(model.TfxPoNumber),\r\n            FuelType: this.fb.control(model.FuelType),\r\n            Quantity: this.fb.control(model.Quantity),\r\n            DisplayPrice: this.fb.control(model.DisplayPrice),\r\n            BlendPercentage: this.fb.control(model.BlendPercentage, [Validators.required, Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),\r\n        });\r\n    }\r\n\r\n    public onFuelSelect(item: any): void {\r\n        this.loadOrders(this.Customer.Id, this.Job.Id, this.selectedFuelTypeList);\r\n    }\r\n\r\n    public onAllFuelDeSelect(items: any): void {\r\n        this.orderList = [];\r\n    }\r\n\r\n    public onFuelDeSelect(item: any): void {\r\n        this.RemoveOrders(item.Name);\r\n    }\r\n\r\n    loadOrders(_customerId: number, _jobId: number, _fuelTypeIds: number[]): void {\r\n        this.orderService.getFilteredOrdersList(_customerId, _jobId, _fuelTypeIds, this.groupId).subscribe((data: OrderGroupDetails[]) => {\r\n            this.orderList = data;\r\n            for (var i = 0; i < this.orderListSelected.length; i++) {\r\n                this.orderList.filter(x => x.OrderId == this.orderListSelected[i].OrderId).forEach(t => t.IsOrderSelected = this.orderListSelected[i].IsOrderSelected);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadFuelType(_customerId: number, _jobId: number): void {\r\n        this.orderService.getFuelTypesList(_customerId, _jobId).subscribe((data: DropdownItem[]) => {\r\n            this.FuelTypeList = data;\r\n        });\r\n    }\r\n\r\n    RemoveOrders(_FuelType: string): void {\r\n        this.orderList = this.orderList.filter(t => t.FuelType != _FuelType);\r\n        this.orderListSelected = this.orderListSelected.filter(t => t.FuelType != _FuelType);\r\n    }\r\n    public OnCustomerSelect(customer: any) {\r\n        this.SelectedJob = '';\r\n        this.SelectedFuelTypes = [];\r\n        this.orderService.getCommonJobList(customer.Id).subscribe(data => this.JobList = data);\r\n    }\r\n\r\n    public OnCustomerDeSelect(customer: any) {\r\n        this.SelectedCustomer = '';\r\n        this.JobList = [];\r\n        this.SelectedJob = '';\r\n        this.FuelTypeList = [];\r\n        this.SelectedFuelTypes = [];\r\n        this.orderList = [];\r\n        this.orderListSelected = [];\r\n    }\r\n\r\n    public OnJobSelect(job: any) {\r\n        this.orderList = [];\r\n        this.SelectedFuelTypes = [];\r\n        this.orderListSelected = [];\r\n        this.loadFuelType(this.Customer.Id, job.Id);\r\n    }\r\n\r\n    public OnJobDeSelect(job: any) {\r\n        this.FuelTypeList = [];\r\n        this.SelectedFuelTypes = [];\r\n        this.orderList = [];\r\n        this.orderListSelected = [];\r\n    }\r\n\r\n    public OnSubmit(): void {\r\n\r\n        if (this.orderListSelected.length < 2) {\r\n            Declarations.msgerror('Group must contain at least 2 orders', undefined, undefined);\r\n            this.SameDestGroupForm.setErrors({ 'invalid': true });\r\n        }\r\n\r\n        this.finalSubmitData = {\r\n            Id: this.isEdit ? this.groupId : 0,\r\n            OrderList: this.orderListSelected,\r\n            GroupPoNumber: this.CustomerPoNumber.value,\r\n            BuyerCompanyId: IsSupplierCompany ? this.Customer.Id : currentUserCompanyId,\r\n            SupplierCompanyId: IsSupplierCompany ? currentUserCompanyId : this.Customer.Id,\r\n            JobId: this.Job.Id,\r\n            GroupType: OrderGroupType.MultiProducts\r\n        };\r\n        \r\n        if (this.SameDestGroupForm.valid) {\r\n            this.IsLoading = true;\r\n            if (this.isEdit)\r\n            {\r\n                this.orderService.postEditGroup(this.finalSubmitData).subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    if (data.StatusCode == 0) {\r\n                        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                        this.clearDestGroupForm();\r\n                        closeSlidePanel();\r\n                        this.onSubmitGroupData.emit();\r\n                    }\r\n                    else {\r\n                        Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                this.orderService.postCreateGroup(this.finalSubmitData).subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    if (data.StatusCode == 0) {\r\n                        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                        closeSlidePanel();\r\n                        this.onSubmitGroupData.emit();\r\n                    }\r\n                    else {\r\n                        Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    GetGroupDetails(): void {\r\n        this.orderService.getBlendGroupDetails(this.groupId).subscribe(group => {\r\n            this.JobList = group.Jobs;\r\n            this.FuelTypeList = group.FuelTypes;\r\n            this.orderList = group.FilteredOrders;\r\n            this.CustomerPoNumber.setValue(group.GroupDetails.GroupPoNumber);\r\n            this.SelectedCustomer = IsSupplierCompany ? this.getCustomerFromSupplier(group.GroupDetails.BuyerCompanyId) : this.getCustomerFromSupplier(group.GroupDetails.SupplierCompanyId);\r\n            this.SelectedJob = this.JobList.filter(ele => ele.Id == group.GroupDetails.JobId);\r\n            var _fuelTypes: string[] = group.GroupDetails.OrderList.map(x => x.Order.FuelType);\r\n            this.SelectedFuelTypes = this.FuelTypeList.filter(ele => _fuelTypes.indexOf(ele.Name) > -1);\r\n            this.orderList.filter(ele => _fuelTypes.indexOf(ele.FuelType) > -1).forEach(t => t.IsOrderSelected = true);\r\n            this.orderListSelected = this.orderList.filter(x => x.IsOrderSelected == true);\r\n            //for (var i = 0; i < group.GroupDetails.OrderList.length; i++) {\r\n            //    var orderDetail: OrderGroupDetails = group.GroupDetails.OrderList[i];\r\n            //    var orderToMove: OrderGroupDetails[] = this.orderList.filter(t => t.OrderId == orderDetail.OrderId);\r\n            //    this.setSelectedOrders(orderToMove[0]);\r\n            //}\r\n        });\r\n    }\r\n\r\n    getCustomerFromSupplier(id: number) {\r\n        return this.CustomerList.filter(e => e.Id == id);\r\n    }\r\n\r\n    public clearDestGroupForm(): void {\r\n        if (this.SelectedCustomer != null) {\r\n            this.OnCustomerDeSelect(this.SelectedCustomer);\r\n        }\r\n        this.CustomerPoNumber.setValue(\"\");\r\n        this.isEdit = false;\r\n    }\r\n\r\n    //setSelectedOrders(order: OrderGroupDetails) {\r\n    //    order.IsOrderSelected = true;\r\n    //    this.orderListSelected.push(order);\r\n    //    this.orderList.filter(x => x.FuelType == order.FuelType).forEach(x1 => x1.IsOrderSelected = true);\r\n    //}\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"form-group col-sm-3\">\r\n        <!--<ngx-select-dropdown (change)=\"OnCustomerSelect($event)\" [multiple]=\"false\" [config]=\"configSettings\" [options]=\"CustomerList\"></ngx-select-dropdown>-->\r\n        <label>Customer</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomer\" [settings]=\"SingleDdlSettings\" [data]=\"CustomerList\" (onSelect)=\"OnCustomerSelect($event)\" (onDeSelect)=\"OnCustomerDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-4\">\r\n        <label>Job</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" [settings]=\"SingleDdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\" (onDeSelect)=\"OnJobDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n    <div class=\"form-group col-sm-3\">\r\n        <label>Fuel Type</label>\r\n        <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelTypes\" [settings]=\"FuelDdlSettings\" [data]=\"FuelTypeList\"\r\n                                 (onSelect)=\"onFuelSelect($event)\" (onDeSelect)=\"onFuelDeSelect($event)\" (onSelectAll)=\"onFuelSelect($event)\" (onDeSelectAll)=\"onAllFuelDeSelect($event)\">\r\n        </ng-multiselect-dropdown>\r\n    </div>\r\n</div>\r\n<div [formGroup]=\"SameDestGroupForm\">\r\n    <div class=\"group-height\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3\" *ngFor=\"let order of orderList\">\r\n                        <div class=\"well\" [ngClass]=\"{'order-selected': order.IsOrderSelected==true}\" (click)=\"OrderClicked(order)\" style=\"cursor:pointer\">\r\n                            <h3 class=\"mt0 mb0\">{{order.TfxPoNumber}}</h3>\r\n                            <span>{{order.FuelType}}</span><br>\r\n                            <span>{{order.DisplayPrice}}</span><br>\r\n                            <span>{{order.Quantity}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-3\">\r\n                <label for=\"CustomerPoNumber\">Customer PO#</label>\r\n                <input class=\"form-control\" type=\"text\" formControlName=\"CustomerPoNumber\" />\r\n                <span class=\"help-block color-maroon\" *ngIf=\"SameDestGroupForm.get('CustomerPoNumber').errors && (SameDestGroupForm.get('CustomerPoNumber').touched ||\r\n                                  SameDestGroupForm.get('CustomerPoNumber').dirty)\">\r\n                    <span *ngIf=\"SameDestGroupForm.get('CustomerPoNumber').errors.required\">\r\n                        Required.\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn btn-lg\" (click)=\"clearDestGroupForm()\" onclick=\"closeSlidePanel()\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"!isEdit\" class=\"btn btn-primary btn-lg\" value=\"Create\">\r\n            <input type=\"button\" (click)=\"OnSubmit()\" *ngIf=\"isEdit\" class=\"btn btn-primary btn-lg\" value=\"Submit\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Submitting Group...</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ViewOrderGroupService } from '../services/viewordergroup.service';\r\nimport { ViewOrderGroupDdlModel } from '../models/ViewOrderGroupDdlModel'\r\nimport { OrderService } from '../services/order.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-group',\r\n    templateUrl: './filter-group.component.html',\r\n    styleUrls: ['./filter-group.component.css']\r\n})\r\nexport class FilterGroupComponent implements OnInit {\r\n    public filterGroupForm: FormGroup;\r\n    public model: ViewOrderGroupDdlModel;\r\n\r\n    public SelectedCompany = [];\r\n    public SelectedGroupType = [];\r\n    public SelectedJob = [];\r\n    public SelectedFuelGroup = [];\r\n    public SelectedState = [];\r\n\r\n    public IsSupplierCompany: boolean;\r\n    public IsMultiProduct: boolean = true;\r\n    public IsTier: boolean = false;\r\n    public IsBlend: boolean = false;\r\n    public IsLoading: boolean = true;   \r\n\r\n    public GroupTypeList = [];\r\n    public CompanyList = [];\r\n    public JobList = [];\r\n    public FuelGroupList = [];\r\n    public StateList = [];\r\n\r\n    public GroupTypeDdlSettings = {};\r\n    public CompanyDdlSettings = {};\r\n    public JobDdlSettings = {};\r\n    public FuelGroupDdlSettings = {};\r\n    public StateDdlSettings = {};\r\n    \r\n    @Output() onViewOrderGroupResponse: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private viewOrderGroupService: ViewOrderGroupService, private orderService: OrderService) {\r\n        this.model = new ViewOrderGroupDdlModel();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.IsLoading = true;\r\n        this.model.GroupTypeId = 0;\r\n        this.filterGroupForm = this.fb.group({\r\n            GroupType: this.fb.control(null),\r\n            Customer: this.fb.control(null),\r\n            Job: this.fb.control(null),\r\n            ProductCategory: this.fb.control(null),\r\n            State: this.fb.control(null),\r\n            GroupTypeId: this.fb.control(0),\r\n            CompanyId: this.fb.control(null),\r\n            JobId: this.fb.control(null),\r\n            FuelGroupId: this.fb.control(null),\r\n            StateId: this.fb.control(null),\r\n            SearchText: this.fb.control(null),\r\n        });\r\n\r\n        this.GroupTypeDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.CompanyDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.JobDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.FuelGroupDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.StateDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.GroupTypeList = data.GroupTypes;\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n\r\n                this.IsSupplierCompany = data.IsSupplierCompany;\r\n            });\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.onOrderGroupFilterSubmit();\r\n    }\r\n\r\n    public showHideControlsByGroupType(groupTypeId) {\r\n        if (groupTypeId == 2) {\r\n            this.IsTier = true\r\n            this.IsMultiProduct = false;\r\n            this.IsBlend = false;\r\n        }\r\n        else if (groupTypeId == 3) {\r\n            this.IsBlend = true;\r\n            this.IsTier = false;\r\n            this.IsMultiProduct = false;\r\n        }\r\n        else {\r\n            this.IsMultiProduct = true;\r\n            this.IsTier = false;\r\n            this.IsBlend = false;\r\n        }\r\n    }\r\n\r\n    public OnGroupTypeSelect(groupType: any) {\r\n        this.IsLoading = true;\r\n        this.resetForm();\r\n        this.model.GroupTypeId = groupType.target.value;\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n                this.IsLoading = false;\r\n            });\r\n\r\n        this.onOrderGroupFilterSubmit();\r\n    }\r\n\r\n    public onOrderGroupFilterSubmit() {\r\n        this.IsLoading = true;\r\n        this.model.SearchText = this.filterGroupForm.get('SearchText').value;\r\n        this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n            .subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.onViewOrderGroupResponse.emit(data);\r\n            });\r\n    }\r\n\r\n    public resetForm() {\r\n        this.SelectedCompany = [];\r\n        this.SelectedGroupType = [];\r\n        this.SelectedJob = [];\r\n        this.SelectedFuelGroup = [];\r\n        this.SelectedState = [];\r\n        this.onViewOrderGroupResponse.emit([]);\r\n    }\r\n\r\n    public onSearch(searchText: any) {\r\n        var text = searchText.target.value;\r\n        if (text != null && text != '' && text.length >= 3) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = text;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n        else if (text.length == 0) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = null;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    public OnCompanySelect(company: any) {\r\n        this.model.CompanyId = company.Id;\r\n        this.JobList = [];\r\n        this.orderService.getCommonJobList(company.Id).subscribe(data => this.JobList = data);\r\n    }\r\n\r\n    public OnCompanyDeSelect(groupType: any) {\r\n        this.JobList = [];\r\n        this.model.CompanyId = null;\r\n    }\r\n\r\n    public OnJobSelect(job: any) {\r\n        this.model.JobId = job.Id;\r\n    }\r\n\r\n    public OnJobDeSelect(groupType: any) {\r\n        this.model.JobId = null;\r\n    }\r\n\r\n    public OnFuelGroupSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = fuelGroup.Id;\r\n    }\r\n\r\n    public OnFuelGroupDeSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = null;\r\n    }\r\n\r\n    public OnStateSelect(state: any) {\r\n        this.model.StateId = state.Id;\r\n    }\r\n\r\n    public OnStateDeSelect(state: any) {\r\n        this.model.StateId = null;\r\n    }\r\n\r\n    //onGroupSelect(type: any) {\r\n    //    this.onGroupTypeSelect.emit(type);\r\n    //}\r\n}\r\n","<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2\">\r\n            <div class=\"form-group\">\r\n                <label>Select Grouping Purpose</label>\r\n                <select class=\"form-control\" (change)=\"OnGroupTypeSelect($event)\">\r\n                    <option value=\"0\">All</option>\r\n                    <option *ngFor=\"let grpType of GroupTypeList || []\" [ngValue]=\"SelectedGroupType\" [value]=\"grpType.Id\">{{grpType.Name}}</option>\r\n                </select>\r\n                <!--<ng-multiselect-dropdown [data]=\"GroupTypeList\" [settings]=\"GroupTypeDdlSettings\" (onSelect)=\"OnGroupTypeSelect($event)\"\r\n                            (onDeSelect)=\"OnGroupTypeDeSelect($event)\">\r\n                </ng-multiselect-dropdown>-->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <div class=\"form-group\">\r\n                <label *ngIf=\"IsSupplierCompany\">Select Customer</label>\r\n                <label *ngIf=\"!IsSupplierCompany\">Select Supplier</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedCompany\" [settings]=\"CompanyDdlSettings\" [data]=\"CompanyList\" (onSelect)=\"OnCompanySelect($event)\"\r\n                                         (onDeSelect)=\"OnCompanyDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\" *ngIf=\"IsMultiProduct || IsTier\">\r\n            <div class=\"form-group\">\r\n                <label>Select Job/Site Name</label> \r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" [settings]=\"JobDdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\"\r\n                                         (onDeSelect)=\"OnJobDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\" *ngIf=\"IsTier\">\r\n            <div class=\"form-group\">\r\n                <label>Select Fuel Group</label> \r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelGroup\" [settings]=\"FuelGroupDdlSettings\" [data]=\"FuelGroupList\" (onSelect)=\"OnFuelGroupSelect($event)\"\r\n                                         (onDeSelect)=\"OnFuelGroupDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\" *ngIf=\"!IsSupplierCompany && IsTier\">\r\n            <div class=\"form-group\">\r\n                <label>Select State</label> \r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedState\" [settings]=\"StateDdlSettings\" [data]=\"StateList\" (onSelect)=\"OnStateSelect($event)\"\r\n                                         (onDeSelect)=\"OnStateDeSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div [formGroup]=\"filterGroupForm\">\r\n            <div class=\"col-sm-2\">\r\n                <input class=\"btn btn-primary btn-submit btn-lg no-disable\" type=\"submit\" value=\"Apply\" (click)=\"onOrderGroupFilterSubmit()\" />\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <div class=\"form-group\">\r\n                    <label>Search</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"SearchText\" (keypress)=\"onSearch($event)\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>   \r\n</div>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ViewOrderGroupComponent } from '../view-order-group/view-order-group.component';\r\n\r\nconst routeOrder: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewOrderGroupComponent\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeOrder)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class OrderRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewOrderGroupComponent } from '../view-order-group/view-order-group.component';\r\nimport { OrderRoutingModule } from './order-routing.module';\r\nimport { CreateBlendGroupComponent } from '../create-blend-group/create-blend-group.component';\r\nimport { CreateSameDestGroupComponent } from '../create-same-dest-group/create-same-dest-group.component';\r\nimport { FilterGroupComponent } from '../filter-group/filter-group.component';\r\nimport { TermPricingContractComponent } from '../term-pricing-contract.component';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        ViewOrderGroupComponent,\r\n        CreateBlendGroupComponent,\r\n        CreateSameDestGroupComponent,\r\n        FilterGroupComponent,\r\n        TermPricingContractComponent, \r\n\r\n    ],\r\n    imports: [\r\n        OrderRoutingModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        NgDragDropModule.forRoot(),\r\n    ]\r\n})\r\nexport class OrderModule { }\r\n","export class OrderDetailModel {\r\n\tpublic OrderId: number;\r\n\tpublic TfxPoNumber: string;\r\n\tpublic FuelType: string;\r\n\tpublic Quantity: string;\r\n\tpublic DisplayPrice: string;\r\n}\r\n\r\nexport class OrderList {\r\n\tconstructor() {\r\n\t\tthis.Order = new OrderDetailModel();\r\n\t}\r\n\tMinVolume: number;\r\n\tMaxVolume: number;\r\n\tOrderId: number;\r\n\tOrder: OrderDetailModel;\r\n}\r\n\r\nexport class CurrentUser {\r\n\tIsBuyerCompany: boolean;\r\n\tIsSupplierCompany: boolean;\r\n}\r\n\r\nexport class OrderGroupViewModel {\r\n\tId: number;\r\n\tBuyerCompanyId: number;\r\n\tJobId: number;\r\n\tSupplierCompanyId: number;\r\n\tProductType: number;\r\n\tStartDate: string;\r\n\tRenewalFrequency: number;\r\n\tRenewalCount: number;\r\n\tGroupType: number;\r\n\tGroupPoNumber: string;\r\n\r\n\tOrderList: OrderList[];\r\n}","import { DropdownItemExt, DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class ViewOrderGroupDdlModel {\r\n    public SearchText: string;\r\n    public GroupTypeId: number;\r\n    public CompanyId: number;\r\n    public JobId: number;\r\n    public ProductCategoryId: number;\r\n    public StateId: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class OrderService extends HandleError {\r\n\tprivate getCustomerListUrl = '/Supplier/OrderGroup/GetCustomersForSupplier';\r\n\tprivate getJobListUrl = '/Supplier/OrderGroup/GetJobsForCustomer?buyerCompanyId=';\r\n\r\n\tprivate getCommonJobListUrl = '/OrderBase/GetJobsForCustomers?companyId=';\r\n\tprivate postCreateGroupUrl: string = '/OrderBase/CreateOrderGroup';\r\n\tprivate postEditGroupUrl: string = '/OrderBase/EditOrderGroup';\r\n\tprivate getFilteredOrders = '/OrderBase/GetFilteredOrders';\r\n\tprivate getFuelTypes = '/OrderBase/GetFuelTypes?';\r\n\tprivate getCurrentUserUrl = '/OrderBase/GetUserContext';\r\n\tprivate getSupplierListUrl = '/Buyer/OrderGroup/GetSuppliersForCustomer';\r\n\tprivate getGroupDetailsUrl = '/OrderBase/GetOrderGroupDetails?groupId=';\r\n\tprivate getBlendedGroupDetailstUrl = '/OrderBase/GetBlendedGroupDetails?groupId=';\r\n\r\n\tconstructor(private httpClient: HttpClient) { super(); }\r\n\r\n\tgetCustomerList(): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getCustomerListUrl).pipe(catchError(this.handleError<any>('getCustomerList', null)));\r\n\t}\r\n\r\n\tgetBlendGroupDetails(groupId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getBlendedGroupDetailstUrl + groupId).pipe(catchError(this.handleError<any>('getBlendGroupDetails', null)));\r\n\t}\r\n\r\n\tgetSupplierList(): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getSupplierListUrl).pipe(catchError(this.handleError<any>('getSupplierList', null)));\r\n\t}\r\n\r\n\tgetJobList(customerId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getJobListUrl + customerId).pipe(catchError(this.handleError<any>('getJobList', null)));\r\n\t}\r\n\r\n\tgetCommonJobList(customerId: number): Observable<any> {\r\n        return this.httpClient.get(this.getCommonJobListUrl + customerId).pipe(catchError(this.handleError<any>('getCommonJobList', null)));\r\n\t}\r\n\tgetFilteredOrdersList(customerId: number, jobId: number, tfxFuelTypeIds: number[], groupId: number): Observable<any> {\r\n\t\treturn this.httpClient.post(this.getFilteredOrders, { customerId: customerId, jobId: jobId, tfxFuelTypeIds: tfxFuelTypeIds, groupId: groupId }).pipe(catchError(this.handleError<any>('getFilteredOrdersList', null)));\r\n\t}\r\n\r\n\tgetJobListByFuelGroupType(customerId: number, supplierId: number, fuelGroupType: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getJobListByFuelGroupUrl(customerId, supplierId, fuelGroupType)).pipe(catchError(this.handleError<any>('getJobListByFuelGroupType', null)));\r\n\t}\r\n\r\n\tgetOrderList(buyerCompanyId: number, supplierCompanyId: number, fuelGroupType: number, jobId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getOrderListUrl(buyerCompanyId, supplierCompanyId, fuelGroupType, jobId)).pipe(catchError(this.handleError<any>('getOrderList', null)));\r\n\t}\r\n\r\n\tgetCurrentUser(): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getCurrentUserUrl).pipe(catchError(this.handleError<any>('getCurrentUser', null)));\r\n\t}\r\n\r\n\tgetGroupDetails(groupId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getGroupDetailsUrl + groupId).pipe(catchError(this.handleError<any>('getGroupDetails', null)));\r\n\t}\r\n\r\n\tgetOrderListUrl(a: number, b: number, c: number, d: number) {\r\n\t\treturn `/OrderBase/GetOrdersForTierGroup?buyerCompanyId=${a}&supplierCompanyId=${b}&fuelGroupType=${c}&jobId=${d}`;\r\n\t}\r\n\r\n\tgetFuelTypesList(customerId: number, jobId: number): Observable<any> {\r\n\t\treturn this.httpClient.get(this.getFuelTypes + \"customerId=\" + customerId + \"&jobId=\" + jobId).pipe(catchError(this.handleError<any>('getFuelTypesList', null)));\r\n\t}\r\n\r\n\tgetJobListByFuelGroupUrl(a: number, b: number, c: number) {\r\n\t\treturn `/OrderBase/GetJobsByFuelGroup?buyerCompanyId=${a}&supplierCompanyId=${b}&fuelGroupType=${c}`;\r\n\t}\r\n\r\n\tpostCreateGroup(groupModel: any): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.postCreateGroupUrl, groupModel)\r\n\t\t\t.pipe(catchError(this.handleError<any>('postCreateGroup', null)));\r\n\t}\r\n\r\n\tpostEditGroup(groupModel: any): Observable<any> {\r\n\t\treturn this.httpClient.post<any>(this.postEditGroupUrl, groupModel)\r\n\t\t\t.pipe(catchError(this.handleError<any>('postEditGroup', null)));\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\tprivate selectedGroupId = new BehaviorSubject(0);\n\tcurrentGroup = this.selectedGroupId.asObservable();\n\tconstructor() { }\n\n\tsetGroupId(groupId: number) {\n\t\tthis.selectedGroupId.next(groupId);\n\t}\n}\n","import { Injectable } from '@angular/core'\r\nimport { HandleError } from '../../errors/HandleError';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ViewOrderGroupDdlModel } from '../models/ViewOrderGroupDdlModel';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ViewOrderGroupService extends HandleError {\r\n    private getOrderGroupAllDdlUrl: string = '/OrderBase/FillOrderGroupDdl?groupTypeId=';\r\n    private viewOrderGroupDetailsUrl: string = '/OrderBase/ViewOrderGroupDetails';    \r\n    private getCommonJobListUrl = '/OrderBase/GetJobsForCustomers?companyId=';\r\n    private getDeleteOrderGroupUrl = '/OrderBase/DeleteOrderGroup?groupId=';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n\t}\r\n\r\n    fillDDLByGroup(groupTypeId): Observable<any> {\r\n        return this.httpClient.get(this.getOrderGroupAllDdlUrl + groupTypeId)\r\n            .pipe(catchError(this.handleError<any>('fillViewOrderGroupAllDDL', null)));\r\n    }\r\n\r\n    getOrderGroupDetails(viewOrderGroupFilterModel: ViewOrderGroupDdlModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.viewOrderGroupDetailsUrl, viewOrderGroupFilterModel)\r\n            .pipe(catchError(this.handleError<any>('getOrderGroupDetails', null)));\r\n    }\r\n\r\n    getCommonJobList(customerId: number): Observable<any> {\r\n        return this.httpClient.get(this.getCommonJobListUrl + customerId).pipe(catchError(this.handleError<any>('getCommonJobList', null)));\r\n    }\r\n\r\n    deleteOrderGroup(groupId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.getDeleteOrderGroupUrl + groupId, groupId).pipe(catchError(this.handleError<any>('deleteOrderGroup', null)));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { OrderService } from './services/order.service';\r\nimport { OrderDetailModel, OrderList, CurrentUser, OrderGroupViewModel } from '../order/models/OrderDetail';\r\nimport { Declarations } from '../declarations.module';\r\nimport { SharedService } from './services/shared.service';\r\nimport * as moment from 'moment';\r\nimport { RegExConstants } from '../app.constants';\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var IsSupplierCompany: boolean;\r\ndeclare var currentUserCompanyName: string;\r\n\r\n@Component({\r\n\tselector: 'app-term-pricing-contract',\r\n\ttemplateUrl: './term-pricing-contract.component.html',\r\n\tstyleUrls: ['./term-pricing-contract.component.css']\r\n})\r\nexport class TermPricingContractComponent implements OnInit {\r\n\tpublic TermPricingForm: FormGroup;\r\n\tpublic OrderGroupModel: OrderGroupViewModel;\r\n\tpublic CustomerList = [];\r\n\tpublic SupplierList = [];\r\n\tpublic FuelGroupList = [{ Id: 1, Name: \"Gasoline\" }, { Id: 2, Name: \"Diesel\" }];\r\n\tpublic JobList = [];\r\n\tpublic SelectedFuelGroup = [{ Id: 1, Name: \"Gasoline\" }];\r\n\tpublic SelectedCustomer = [];\r\n\tpublic SelectedSupplier = [];\r\n\tpublic groupId: number;\r\n\tpublic SelectedJob = [];\r\n\tpublic DdlSettings = {};\r\n\tpublic Orders: OrderDetailModel[];\r\n\tpublic MinStartDate = new Date();\r\n\tpublic MaxStartDate = new Date();\r\n\tpublic NextRenewalDate: string;\r\n\tpublic IsLoading: boolean = true;\r\n\tOrderList: OrderList[] = [];\r\n\tpublic DefaultTier: OrderList = { Order: new OrderDetailModel(), OrderId: null, MinVolume: null, MaxVolume: null };\r\n\tpublic CurrentUser: CurrentUser = { IsBuyerCompany: !IsSupplierCompany, IsSupplierCompany: IsSupplierCompany };\r\n\tpublic DisplayDate: string;\r\n\tpublic emptyOrder: OrderDetailModel = {\r\n\t\tOrderId: null,\r\n\t\tTfxPoNumber: null,\r\n\t\tFuelType: null,\r\n\t\tQuantity: null,\r\n\t\tDisplayPrice: null\r\n\t};\r\n\r\n\tconstructor(private fb: FormBuilder, private orderService: OrderService, private viewGroupService: SharedService) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.DisplayDate = moment(new Date()).format('MM/DD/YYYY');\r\n\t\tthis.NextRenewalDate = moment(new Date()).add(1, 'months').startOf('month').format('MM/DD/YYYY');\r\n\t\tthis.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 10);\r\n\t\tthis.TermPricingForm = this.fb.group({\r\n\t\t\tGroupType: this.fb.control('2', [Validators.required]),\r\n\t\t\tBuyerCompanyId: this.fb.control('', [Validators.required]),\r\n\t\t\tSupplierCompanyId: this.fb.control('', [Validators.required]),\r\n\t\t\tProductType: this.fb.control(1, [Validators.required]),\r\n\t\t\tJobId: this.fb.control('', [Validators.required]),\r\n\t\t\tStartDate: this.fb.control(this.DisplayDate, [Validators.required]),\r\n\t\t\tRenewalFrequency: this.fb.control('1', [Validators.required]),\r\n\t\t\tRenewalPeriod: this.fb.control('Monthly'),\r\n\t\t\tRenewalCount: this.fb.control('', [Validators.required, Validators.pattern(RegExConstants.Integer)]),\r\n\t\t\tGroupPoNumber: this.fb.control(''),\r\n\t\t\tOrderList: this.fb.array([]),\r\n\t\t});\r\n\t\tthis.DdlSettings = {\r\n\t\t\tsingleSelection: true,\r\n\t\t\tidField: 'Id',\r\n\t\t\ttextField: 'Name',\r\n\t\t\tcloseDropDownOnSelection: true,\r\n\t\t\tenableCheckAll: false,\r\n\t\t\tselectAllText: 'Select All',\r\n\t\t\tunSelectAllText: 'UnSelect All',\r\n\t\t\titemsShowLimit: 1,\r\n\t\t\tallowSearchFilter: true\r\n\t\t};\r\n\t\tthis.viewGroupService.currentGroup.subscribe(id => this.groupId = id);\r\n\r\n\t\tif (IsSupplierCompany) {\r\n\t\t\tthis.SupplierList = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.SelectedSupplier = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(currentUserCompanyId);\r\n\t\t\tthis.GetCustomerList();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.CustomerList = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.SelectedCustomer = [{ Id: currentUserCompanyId, Name: currentUserCompanyName }];\r\n\t\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(currentUserCompanyId);\r\n\t\t\tthis.GetSupplierList();\r\n\t\t}\r\n\r\n\t\tif (this.groupId == 0) {\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t}\r\n\t\tthis.IsLoading = false;\r\n\t}\r\n\r\n\r\n\tngAfterViewInit() {\r\n\t\tif (this.groupId != null && this.groupId != undefined && this.groupId > 0) {\r\n\t\t\tthis.getDefaultGroupDetail(this.groupId);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getDefaultGroupDetail(_groupId: number) {\r\n\t\tthis.orderService.getGroupDetails(_groupId)\r\n\t\t\t.subscribe(response => {\r\n\t\t\t\tthis.OrderGroupModel = response;\r\n\t\t\t\tthis.initFormData(response);\r\n\t\t\t});\r\n\t}\r\n\r\n\tinitFormData(model: OrderGroupViewModel): void {\r\n\t\tif (model != null && model != undefined && model.Id > 0) {\r\n\t\t\tthis.TermPricingForm.patchValue({\r\n\t\t\t\tGroupType: model.GroupType,\r\n\t\t\t\tBuyerCompanyId: model.BuyerCompanyId,\r\n\t\t\t\tSupplierCompanyId: model.SupplierCompanyId,\r\n\t\t\t\tProductType: model.ProductType,\r\n\t\t\t\tJobId: model.JobId,\r\n\t\t\t\tStartDate: model.StartDate,\r\n\t\t\t\tRenewalFrequency: model.RenewalFrequency,\r\n\t\t\t\tRenewalPeriod: 'Monthly',\r\n\t\t\t\tRenewalCount: model.RenewalCount,\r\n\t\t\t\tGroupPoNumber: model.GroupPoNumber,\r\n\t\t\t\tOrderList: model.OrderList\r\n\t\t\t});\r\n\t\t\tthis.SelectedCustomer = this.CustomerList.filter(function (item) { return item.Id == model.BuyerCompanyId });\r\n\t\t\tthis.SelectedSupplier = this.SupplierList.filter(function (item) { return item.Id == model.SupplierCompanyId });\r\n\t\t\tthis.SelectedJob = this.JobList.filter(function (item) { return item.Id == model.JobId });\r\n\t\t\tthis.SelectedFuelGroup = this.FuelGroupList.filter(function (item) { return item.Id == model.ProductType });\r\n\t\t\t//this.Tiers = model.OrderList;\r\n\t\t\tthis.Orders = this.Orders.filter(function (item) {\r\n\t\t\t\treturn model.OrderList.filter(function (t) { return t.OrderId == item.OrderId }).length == 0;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tpublic GetCustomerList() {\r\n\t\tthis.orderService.getCustomerList().subscribe(data => {\r\n\t\t\tthis.CustomerList = data;\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tthis.SelectedCustomer = [data[0]];\r\n\t\t\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(data[0].Id);\r\n\t\t\t\tthis.OnCustomerSelect(data[0]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic GetSupplierList() {\r\n\t\tthis.orderService.getSupplierList().subscribe(data => {\r\n\t\t\tthis.SupplierList = data;\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tthis.SelectedSupplier = [data[0]];\r\n\t\t\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(data[0].Id);\r\n\t\t\t\tthis.OnSupplierSelect(data[0]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic OnCustomerSelect(customer: any) {\r\n\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(customer.Id);\r\n\t\tvar productType = this.TermPricingForm.get('ProductType').value;\r\n\t\tvar selectedsupplier = this.TermPricingForm.get('SupplierCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tif (customer != null && customer != undefined && customer.Id > 0 && productType > 0 && selectedsupplier > 0) {\r\n\t\t\tthis.orderService.getJobListByFuelGroupType(customer.Id, selectedsupplier, productType).subscribe(data => {\r\n\t\t\t\tthis.JobList = data;\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis.SelectedJob = [data[0]];\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(data[0].Id);\r\n\t\t\t\t\tthis.OnJobSelect(data[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.SelectedJob = [];\r\n\t\t\t\t\tformOrderList.clear();\r\n\t\t\t\t\tthis.OrderList = [];\r\n\t\t\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\t\t\tthis.Orders = [];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.JobList = [];\r\n\t\t\tthis.SelectedJob = [];\r\n\t\t\tformOrderList.clear();\r\n\t\t\tthis.OrderList = [];\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\tthis.Orders = [];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnCustomerDeSelect(customer: any) {\r\n\t\tthis.TermPricingForm.get('BuyerCompanyId').patchValue(null);\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = [];\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t}\r\n\r\n\tpublic OnSupplierSelect(supplier: any) {\r\n\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(supplier.Id);\r\n\t\tvar productType = this.TermPricingForm.get('ProductType').value;\r\n\t\tvar customer = this.TermPricingForm.get('BuyerCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tif (supplier != null && supplier != undefined && supplier.Id > 0 && productType > 0 && customer > 0) {\r\n\t\t\tthis.orderService.getJobListByFuelGroupType(customer, supplier.Id, productType).subscribe(data => {\r\n\t\t\t\tthis.JobList = data;\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis.SelectedJob = [data[0]];\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(data[0].Id);\r\n\t\t\t\t\tthis.OnJobSelect(data[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.SelectedJob = [];\r\n\t\t\t\t\tthis.Orders = [];\r\n\t\t\t\t\tformOrderList.clear();\r\n\t\t\t\t\tthis.OrderList = [];\r\n\t\t\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.JobList = [];\r\n\t\t\tthis.SelectedJob = [];\r\n\t\t\tthis.Orders = [];\r\n\t\t\tformOrderList.clear();\r\n\t\t\tthis.OrderList = [];\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnSupplierDeSelect(supplier: any) {\r\n\t\tthis.TermPricingForm.get('SupplierCompanyId').patchValue(null);\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = [];\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t}\r\n\r\n\r\n\tpublic OnFuelGroupSelect(fuelGroup: any) {\r\n\t\tthis.TermPricingForm.get('ProductType').patchValue(fuelGroup.Id);\r\n\t\tvar customer = this.TermPricingForm.get('BuyerCompanyId').value;\r\n\t\tvar selectedsupplier = this.TermPricingForm.get('SupplierCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\r\n\t\tif (customer != null && customer != undefined && customer > 0 && fuelGroup.Id > 0 && selectedsupplier > 0) {\r\n\t\t\tthis.orderService.getJobListByFuelGroupType(customer, selectedsupplier, fuelGroup.Id).subscribe(data => {\r\n\t\t\t\tthis.JobList = data;\r\n\t\t\t\tif (data.length > 0) {\r\n\t\t\t\t\tthis.SelectedJob = [data[0]];\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(data[0].Id);\r\n\t\t\t\t\tthis.OnJobSelect(data[0]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.SelectedJob = [];\r\n\t\t\t\t\tthis.Orders = [];\r\n\t\t\t\t\tformOrderList.clear();\r\n\t\t\t\t\tthis.OrderList = [];\r\n\t\t\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.JobList = [];\r\n\t\t\tthis.SelectedJob = [];\r\n\t\t\tthis.Orders = [];\r\n\t\t\tformOrderList.clear();\r\n\t\t\tthis.OrderList = [];\r\n\t\t\tthis.addNewTier(this.DefaultTier);\r\n\t\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnFuelGroupDeSelect(fuelGroup: any) {\r\n\t\tthis.TermPricingForm.get('ProductType').patchValue(null);\r\n\t\tthis.JobList = [];\r\n\t\tthis.SelectedJob = [];\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\r\n\t}\r\n\r\n\r\n\tpublic OnJobSelect(job: any) {\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(job.Id);\r\n\t\tvar productType = this.TermPricingForm.get('ProductType').value;\r\n\t\tvar selectedcustomer = this.TermPricingForm.get('BuyerCompanyId').value;\r\n\t\tvar selectedsupplier = this.TermPricingForm.get('SupplierCompanyId').value;\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t\tthis.orderService.getOrderList(selectedcustomer, selectedsupplier, productType, job.Id).subscribe(data => { this.Orders = data; });\r\n\t}\r\n\r\n\tpublic OnJobDeSelect(job: any) {\r\n\t\tthis.TermPricingForm.get('JobId').patchValue(null);\r\n\t\tthis.Orders = [];\r\n\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tformOrderList.clear();\r\n\t\tthis.OrderList = [];\r\n\t\tthis.addNewTier(this.DefaultTier);\r\n\t}\r\n\r\n\tpublic onSubmit(): void {\r\n\t\tif (this.TermPricingForm.valid && this.validateTierControls()) {\r\n\t\t\tthis.orderService.postCreateGroup(this.TermPricingForm.value)\r\n\t\t\t\t.subscribe((data: any) => {\r\n\t\t\t\t\tif (data != null && data.StatusCode == 0) {\r\n\t\t\t\t\t\tDeclarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\t\twindow.location.href = this.CurrentUser.IsBuyerCompany ? \"/Buyer/OrderGroup/View\" : \"/Supplier/OrderGroup/View\";\r\n\t\t\t\t\t\t//this.TermPricingForm.reset();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.IsLoading = false;\r\n\t\t\t\t\t\tDeclarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.IsLoading = false;\r\n\t\t\tthis.TermPricingForm.markAllAsTouched();\r\n\t\t\tlet invalidControls: string[] = this.findInvalidControlsRecursive(this.TermPricingForm);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic findInvalidControlsRecursive(formToInvestigate: FormGroup | FormArray): string[] {\r\n\t\tvar invalidControls: string[] = [];\r\n\t\tlet recursiveFunc = (form: FormGroup | FormArray) => {\r\n\t\t\tObject.keys(form.controls).forEach(field => {\r\n\t\t\t\tconst control = form.get(field);\r\n\t\t\t\tif (control.invalid) invalidControls.push(field);\r\n\t\t\t\tif (control instanceof FormGroup) {\r\n\t\t\t\t\trecursiveFunc(control);\r\n\t\t\t\t} else if (control instanceof FormArray) {\r\n\t\t\t\t\trecursiveFunc(control);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecursiveFunc(formToInvestigate);\r\n\t\treturn invalidControls;\r\n\t}\r\n\r\n\taddNewTier(model: OrderList) {\r\n\t\tif (model == null || model == undefined) {\r\n\t\t\tmodel = new OrderList();\r\n\t\t}\r\n\t\tif (model.OrderId == null || model.OrderId == undefined) {\r\n\t\t\tif (this.OrderList.length == 0) {\r\n\t\t\t\tmodel.MinVolume = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar formOrderList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\t\t\tvar lastMaxValue = formOrderList.controls[formOrderList.length - 1].get('MaxVolume').value;\r\n\t\t\t\tif (lastMaxValue != null && lastMaxValue != undefined && parseInt(lastMaxValue) > 0) {\r\n\t\t\t\t\tmodel.MinVolume = parseInt(lastMaxValue) + 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tierForm = this.buildTier(model);\r\n\t\tthis.OrderList.push({ Order: model.Order, OrderId: model.OrderId, MinVolume: model.MinVolume, MaxVolume: model.MaxVolume });\r\n\t\tvar prodArray = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tif (prodArray != undefined && prodArray != null) {\r\n\t\t\tprodArray.push(tierForm);\r\n\t\t}\r\n\t}\r\n\r\n\tbuildTier(model: OrderList): FormGroup {\r\n\t\treturn this.fb.group({\r\n\t\t\tOrder: this.fb.group({\r\n\t\t\t\tOrderId: this.fb.control(model.Order.OrderId, [Validators.required]),\r\n\t\t\t\tTfxPoNumber: this.fb.control(model.Order.TfxPoNumber),\r\n\t\t\t\tFuelType: this.fb.control(model.Order.FuelType),\r\n\t\t\t\tQuantity: this.fb.control(model.Order.Quantity),\r\n\t\t\t\tDisplayPrice: this.fb.control(model.Order.DisplayPrice)\r\n\t\t\t}),\r\n\t\t\tOrderId: this.fb.control(model.Order.OrderId),\r\n\t\t\tMinVolume: this.fb.control(model.MinVolume, [Validators.required, Validators.pattern(RegExConstants.Integer)]),\r\n\t\t\tMaxVolume: this.fb.control(model.MaxVolume, [Validators.required, Validators.pattern(RegExConstants.Integer)])\r\n\t\t});\r\n\t}\r\n\r\n\tremoveTier(tier: OrderList, index: number): void {\r\n\t\tvar deletedOrder = this.OrderList[index].Order;\r\n\t\tif (deletedOrder != null && deletedOrder != undefined && this.OrderList[index].OrderId > 0) {\r\n\t\t\tthis.Orders.push(this.OrderList[index].Order);\r\n\t\t}\r\n\t\tvar _tiers = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\t_tiers.removeAt(index);\r\n\t\tthis.OrderList.splice(index, 1);\r\n\t}\r\n\r\n\tonItemDropTier(index: number, event: any) {\r\n\t\tvar tierList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tvar existingOrderinTier = this.OrderList[index].Order;\r\n\t\tvar indexOfSameOrderinAnotherTier = this.OrderList.findIndex(t => t.OrderId == event.dragData.OrderId);\r\n\t\tif (indexOfSameOrderinAnotherTier >= 0) {\r\n\t\t\tthis.OrderList[indexOfSameOrderinAnotherTier].Order = new OrderDetailModel();\r\n\t\t\tthis.OrderList[indexOfSameOrderinAnotherTier].OrderId = null;\r\n\t\t\ttierList.controls[indexOfSameOrderinAnotherTier].get('Order').patchValue(this.emptyOrder);\r\n\t\t\ttierList.controls[indexOfSameOrderinAnotherTier].get('OrderId').patchValue(null);\r\n\t\t}\r\n\t\tthis.OrderList[index].Order = event.dragData;\r\n\t\tthis.OrderList[index].OrderId = event.dragData.OrderId;\r\n\t\ttierList.controls[index].get('Order').patchValue(event.dragData);\r\n\t\ttierList.controls[index].get('OrderId').patchValue(event.dragData.OrderId);\r\n\t\tthis.Orders = this.Orders.filter(function (element) { return element.OrderId != event.dragData.OrderId });\r\n\t\tif (existingOrderinTier != null && existingOrderinTier != undefined && existingOrderinTier.OrderId > 0) {\r\n\t\t\tthis.Orders.push(existingOrderinTier);\r\n\t\t}\r\n\t}\r\n\r\n\tonItemDropOrder(event: any) {\r\n\t\tif (this.Orders.findIndex(t => t.OrderId == event.dragData.OrderId) < 0) {\r\n\t\t\tthis.Orders.push(event.dragData);\r\n\t\t}\r\n\t\tvar index = this.OrderList.findIndex(t => t.OrderId == event.dragData.OrderId);\r\n\t\tif (index >= 0) {\r\n\t\t\tthis.OrderList[index].Order = new OrderDetailModel();\r\n\t\t\tthis.OrderList[index].OrderId = null;\r\n\t\t\tvar tierList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\t\ttierList.controls[index].get('Order').patchValue(this.emptyOrder);\r\n\t\t\ttierList.controls[index].get('OrderId').patchValue(null);\r\n\t\t}\r\n\t}\r\n\r\n\tisInvalid(drop: FormGroup, name: string): boolean {\r\n\t\treturn drop.get(name).invalid &&\r\n\t\t\t(drop.get(name).dirty || drop.get(name).touched);\r\n\t}\r\n\r\n\tisRequired(drop: FormGroup, name: string): boolean {\r\n\t\treturn drop.get(name).errors.required &&\r\n\t\t\t(drop.get(name).dirty || drop.get(name).touched);\r\n\t}\r\n\r\n\tisMin(drop: FormGroup, name: string): boolean {\r\n\t\treturn drop.get(name).errors.min;\r\n\t}\r\n\r\n\tisDropAllowed = (dragData: any) => {\r\n\t\treturn dragData > 500;\r\n\t}\r\n\r\n\tgetNextRenewalDate(date: Date) {\r\n\t\tthis.NextRenewalDate = moment(date).add(1, 'months').startOf('month').format('MM/DD/YYYY');\r\n\t}\r\n\r\n\tcomparisonValidator(group: any, index: any, controlName:string){\r\n\t\tconst minVolume = group.get('MinVolume');\r\n\t\tconst maxVolume = group.get('MaxVolume');\r\n\t\tif (minVolume.value !== null && maxVolume.value !== null && parseInt(minVolume.value) >= parseInt(maxVolume.value)) {\r\n\t\t\tgroup.get(controlName).setErrors({ notEquivalent: true });\r\n\t\t} \r\n\t}\r\n\r\n\tvalidateTierControls() {\r\n\t\tvar tierList = this.TermPricingForm.get('OrderList') as FormArray;\r\n\t\tvar maxVolumeCtrl, minVolumeCtrl;\r\n\t\tvar minVolume, maxVolume;\r\n\t\tfor (var i = 0; i < tierList.length; i++) {\r\n\t\t\tmaxVolumeCtrl = tierList.controls[i].get('MaxVolume');\r\n\t\t\tminVolumeCtrl = tierList.controls[i].get('MinVolume');\r\n\t\t\tif (minVolume != undefined && minVolume != null) {\r\n\t\t\t\tif (parseInt(maxVolume) + 1 != parseInt(minVolumeCtrl.value)) {\r\n\t\t\t\t\tminVolumeCtrl.setErrors({ notEquivalent: true });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmaxVolume = maxVolumeCtrl.value;\r\n\t\t\tminVolume = minVolumeCtrl.value;\r\n\t\t}\r\n\t\treturn this.TermPricingForm.valid;\r\n\t}\r\n}\r\n","<div class=\"row\">\r\n\t<div class=\"col-sm-3\" *ngIf=\"CurrentUser.IsSupplierCompany\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Customer</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomer\" [data]=\"CustomerList\" [settings]=\"DdlSettings\" (onSelect)=\"OnCustomerSelect($event)\" (onDeSelect)=\"OnCustomerDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-3\" *ngIf=\"CurrentUser.IsBuyerCompany\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Supplier</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedSupplier\"  [settings]=\"DdlSettings\" [data]=\"SupplierList\" (onSelect)=\"OnSupplierSelect($event)\" (onDeSelect)=\"OnSupplierDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-2\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Fuel Group Type</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelGroup\" [settings]=\"DdlSettings\" [data]=\"FuelGroupList\" (onSelect)=\"OnFuelGroupSelect($event)\" (onDeSelect)=\"OnFuelGroupDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-4\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Job</label>\r\n\t\t\t<ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" [settings]=\"DdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\" (onDeSelect)=\"OnJobDeSelect($event)\">\r\n\t\t\t</ng-multiselect-dropdown>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<form [formGroup]=\"TermPricingForm\" (ngSubmit)=\"onSubmit()\">\r\n\t<div class=\"pa bg-white z-index5 loading-wrapper left0 top0\" *ngIf=\"IsLoading\">\r\n\t\t<span class='spinner-dashboard pa'></span>\r\n\t</div>\r\n\t<input type=\"hidden\" formControlName=\"GroupType\" value=\"2\" />\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-sm-3\">\r\n\t\t\t<div class=\"clearboth\" formArrayName=\"OrderList\">\r\n\t\t\t\t<div class=\"group-maxheight\">\r\n\t\t\t\t\t<ng-container *ngFor=\"let tier of TermPricingForm.get('OrderList')['controls']; let i = index;\">\r\n\t\t\t\t\t\t<div [formGroupName]=\"i\" [ngClass]=\"['bg'+i]\" class=\"pa10 radius-5 mb10 border-dash-dark\">\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t<h3 class=\"mt0 mb0 pull-left\">Tier {{i+1}}</h3>\r\n\t\t\t\t\t\t\t\t\t<a (click)=\"removeTier(tier, i)\" class=\"color-maroon ml10 mt2 pull-left\"><i class=\"fa fa-trash-alt pull-right\"></i></a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group mb5\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" formControlName=\"MinVolume\" placeholder=\"Min\" (change)=\"comparisonValidator(tier, i,'MinVolume')\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"help-block color-maroon\" *ngIf=\"tier.get('MinVolume').errors && (tier.get('MinVolume').touched ||\r\n                                  tier.get('MinVolume').dirty)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MinVolume').errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MinVolume').errors.pattern\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"!tier.get('MinVolume').errors.required && !tier.get('MinVolume').errors.pattern && tier.get('MinVolume').errors\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-group mb5\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" formControlName=\"MaxVolume\" placeholder=\"Max\" (change)=\"comparisonValidator(tier, i, 'MaxVolume')\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"help-block color-maroon\" *ngIf=\"tier.get('MaxVolume').errors && (tier.get('MaxVolume').touched || tier.get('MaxVolume').dirty)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MaxVolume').errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('MaxVolume').errors.pattern\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"row\" [formGroup]=\"tier.get('Order')\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"well\" draggable droppable (onDrop)=\"onItemDropTier(i,$event)\" [dragData]=\"tier.get('Order').value\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-center\" *ngIf=\"tier.get('Order').get('FuelType').value==null\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-hand-rock fs25\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"fs16 mb0 pa0 color-orange\" *ngIf=\"tier.get('Order').get('FuelType').value==null\">Please drag order here</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"tier.get('Order').get('FuelType').value!=null\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 class=\"mt0 mb0\">{{tier.get('Order').get('FuelType').value}}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{tier.get('Order').get('TfxPoNumber').value}}</span><br>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{tier.get('Order').get('Quantity').value}}</span><br>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{tier.get('Order').get('DisplayPrice').value}}</span><br>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"help-block color-maroon\" *ngIf=\"tier.get('Order').get('OrderId').errors && (tier.get('Order').get('OrderId').touched || tier.get('Order').get('OrderId').dirty)\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"tier.get('Order').get('OrderId').errors.required\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<a (click)=\"addNewTier(null);\" class=\"mt20\"><i class=\"fa fa-plus\"></i> Add Tier</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-sm-6\">\r\n\t\t\t<div class=\"group-height\" droppable (onDrop)=\"onItemDropOrder($event)\">\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-sm-6\" *ngFor=\"let order of Orders;index as i\">\r\n\t\t\t\t\t\t<div draggable class=\"well\" [dragData]=\"order\">\r\n\t\t\t\t\t\t\t<h3 class=\"mt0 mb0\">{{order.FuelType}}</h3>\r\n\t\t\t\t\t\t\t<span>{{order.TfxPoNumber}}</span><br>\r\n\t\t\t\t\t\t\t<span>{{order.Quantity}}</span><br>\r\n\t\t\t\t\t\t\t<span>{{order.DisplayPrice}}</span><br>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-sm-3\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<label>Renewal Period</label>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Renewal Frequency\" formControlName=\"RenewalPeriod\" class=\"form-control\" value=\"Monthly\" readonly />\r\n\t\t\t\t\t\t<input type=\"hidden\" formControlName=\"RenewalFrequency\" value=\"1\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<label>Maximum Renewal Count</label>\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"Maximum Renewal Count\" formControlName=\"RenewalCount\" class=\"form-control\">\r\n\t\t\t\t\t<span *ngIf=\"isInvalid(TermPricingForm, 'RenewalCount')\" class=\"color-maroon\">\r\n\t\t\t\t\t\t<span *ngIf=\"isRequired(TermPricingForm, 'RenewalCount')\">\r\n\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span *ngIf=\"!isRequired(TermPricingForm, 'RenewalCount') && isInvalid(TermPricingForm, 'RenewalCount')\">\r\n\t\t\t\t\t\t\tInvalid.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<label>Start Date</label>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control datepicker\" formControlName=\"StartDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" (onDateChange)=\"TermPricingForm.get('StartDate').setValue($event);getNextRenewalDate($event);\" />\r\n\t\t\t\t\t\t<span>Next Renewal Date: {{NextRenewalDate}}</span>\r\n\t\t\t\t\t\t<span *ngIf=\"isInvalid(TermPricingForm, 'StartDate')\" class=\"color-maroon\">\r\n\t\t\t\t\t\t\t<span *ngIf=\"isRequired(TermPricingForm, 'StartDate')\">\r\n\t\t\t\t\t\t\t\tRequired.\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t<label>Customer PO#</label>\r\n\t\t\t\t\t<input type=\"text\" placeholder=\"Customer PO#\" formControlName=\"GroupPoNumber\" class=\"form-control\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-sm-12 text-right\">\r\n\t\t\t<input type=\"button\" value=\"Cancel\" class=\"btn btn-lg\" onclick=\"closeSlidePanel()\">\r\n\t\t\t<input type=\"submit\" class=\"btn btn-primary btn-lg\" value=\"Create\">\r\n\t\t</div>\r\n\t</div>\r\n</form>","import { Component, ElementRef, OnInit, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ViewOrderGroupService } from '../services/viewordergroup.service';\r\nimport { OrderGroupDetailModel } from '../models/ViewOrderGroupModel'\r\nimport { SharedService } from '../services/shared.service';\r\nimport { CreateBlendGroupComponent } from '../create-blend-group/create-blend-group.component';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ViewOrderGroupDdlModel } from '../models/ViewOrderGroupDdlModel';\r\nimport { OrderService } from '../services/order.service';\r\nimport { CreateSameDestGroupComponent } from '../create-same-dest-group/create-same-dest-group.component';\r\nimport { OrderGroupType } from 'src/app/app.enum';\r\n\r\n@Component({\r\n\tselector: 'app-view-order-group',\r\n\ttemplateUrl: './view-order-group.component.html',\r\n\tstyleUrls: ['./view-order-group.component.css']\r\n})\r\nexport class ViewOrderGroupComponent implements OnInit {\r\n\r\n\tpublic viewOrderGroupForm: FormGroup;\r\n\tpublic groups: OrderGroupDetailModel[];\r\n\tSelectedButton: string = \"\";\r\n\tModalText: string = \"\";\r\n\tModalTextData: string[] = ['', 'Create Same Destination Group', 'Term Pricing Contract', 'Create Blend Group'];\r\n\tModalEditTextData: string[] = ['', 'Edit Same Destination Group', 'Edit Pricing Contract', 'Edit Blend Group'];\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n    public ShowCount: number = 0;\r\n    public TotalGroupCount: number = 0;\r\n\r\n    //child \r\n    public model: ViewOrderGroupDdlModel = new ViewOrderGroupDdlModel();\r\n\r\n    public SelectedCompany = [];\r\n    public SelectedGroupType = [];\r\n    public SelectedJob = [];\r\n    public SelectedFuelGroup = [];\r\n    public SelectedState = [];\r\n\r\n    public IsSupplierCompany: boolean;\r\n    public IsMultiProduct: boolean = true;\r\n    public IsTier: boolean = false;\r\n    public IsBlend: boolean = false;\r\n\r\n   // public SearchText: string;\r\n    public GroupTypeList = [];\r\n    public CompanyList = [];\r\n    public JobList = [];\r\n    public FuelGroupList = [];\r\n    public StateList = [];\r\n\r\n    public GroupTypeDdlSettings = {}; \r\n    public CompanyDdlSettings = {};\r\n    public JobDdlSettings = {};\r\n    public FuelGroupDdlSettings = {};\r\n    public StateDdlSettings = {};\r\n    SelectedOrderGroupIdToDelete: number = 0;\r\n    @ViewChild(CreateBlendGroupComponent) BlendComponent: CreateBlendGroupComponent;\r\n    @ViewChild(CreateSameDestGroupComponent) SameDestComponent: CreateSameDestGroupComponent;\r\n\r\n    constructor(private fb: FormBuilder, private viewOrderGroupService: ViewOrderGroupService, private sharedService: SharedService, private orderService: OrderService) {\r\n\t}\r\n\r\n    ngOnInit() {\r\n\r\n        this.model.GroupTypeId = 0;\r\n        this.viewOrderGroupForm = this.fb.group({\r\n            OrderGroupDetails: this.fb.control(''),\r\n            GroupType: this.fb.control(null),\r\n            Customer: this.fb.control(null),\r\n            Job: this.fb.control(null),\r\n            ProductCategory: this.fb.control(null),\r\n            State: this.fb.control(null),\r\n            GroupTypeId: this.fb.control(0),\r\n            CompanyId: this.fb.control(null),\r\n            JobId: this.fb.control(null),\r\n            FuelGroupId: this.fb.control(null),\r\n            StateId: this.fb.control(null),\r\n            SearchText: this.fb.control(null),\r\n        });\r\n\r\n        this.GroupTypeDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.CompanyDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.JobDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.FuelGroupDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.StateDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: '',\r\n            unSelectAllText: '',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.fillDDLByGroup();\r\n    }\r\n\r\n\r\n    fillDDLByGroup() {\r\n        this.IsLoading = true;\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.GroupTypeList = data.GroupTypes;\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n                this.IsSupplierCompany = data.IsSupplierCompany;\r\n\r\n                this.onOrderGroupFilterSubmit();\r\n            });\r\n    }\r\n\r\n    //onViewOrderGroupChildResponse(response: ViewOrderGroupModel) {\r\n\t//\t//this.model = response;\r\n\t//\tthis.groups = response.OrderGroupDetails as OrderGroupDetailModel[];\r\n\t//\tconsole.log(response);\r\n\t//}\r\n\r\n    ButtonPressed(_SelectedButton: string) {\r\n        if (this.BlendComponent != undefined) {\r\n            this.BlendComponent.clearBlendGroupForm();\r\n        }\r\n        if (this.SameDestComponent != undefined) {\r\n            this.SameDestComponent.clearDestGroupForm();\r\n        }\r\n\t\tthis.SelectedButton = OrderGroupType[_SelectedButton];\r\n\t\tthis.ModalText = this.ModalTextData[_SelectedButton];\r\n\t\tthis.sharedService.setGroupId(0);\r\n    }\r\n    \r\n    public showHideControlsByGroupType(groupTypeId) {\r\n        if (groupTypeId == 2) {\r\n            this.IsTier = true\r\n            this.IsMultiProduct = false;\r\n            this.IsBlend = false;\r\n        }\r\n        else if (groupTypeId == 3) {\r\n            this.IsBlend = true;\r\n            this.IsTier = false;\r\n            this.IsMultiProduct = false;\r\n        }\r\n        else {\r\n            this.IsMultiProduct = true;\r\n            this.IsTier = false;\r\n            this.IsBlend = false;\r\n        }\r\n    }\r\n\r\n    public OnGroupTypeSelect(groupType: any) {\r\n        this.IsLoading = true;\r\n        this.resetForm();\r\n        this.model.GroupTypeId = groupType.target.value;\r\n        this.showHideControlsByGroupType(this.model.GroupTypeId);\r\n        this.viewOrderGroupService.fillDDLByGroup(this.model.GroupTypeId)\r\n            .subscribe(data => {\r\n                this.CompanyList = data.Companies;\r\n                this.FuelGroupList = data.ProductCategories;\r\n                this.StateList = data.States;\r\n\r\n                this.onOrderGroupFilterSubmit();\r\n            });\r\n    }\r\n\r\n    public onOrderGroupFilterSubmit() {\r\n        this.IsLoading = true;\r\n        this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n            .subscribe(data => {\r\n                this.groups = data.OrderGroupDetails as OrderGroupDetailModel[];\r\n                this.TotalGroupCount = data.TotalGroupCount;\r\n                this.ShowCount = data.ShowCount;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    public resetForm() {\r\n        this.SelectedCompany = [];\r\n        this.SelectedGroupType = [];\r\n        this.SelectedJob = [];\r\n        this.SelectedFuelGroup = [];\r\n        this.SelectedState = [];\r\n        //this.onViewOrderGroupResponse.emit([]);\r\n        this.groups = [];\r\n    }\r\n\r\n    public onSearch(text: string) {\r\n        if (text != null && text != '' && text.length >= 3) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = text;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.groups = data.OrderGroupDetails as OrderGroupDetailModel[];\r\n                    this.TotalGroupCount = data.TotalGroupCount;\r\n                    this.ShowCount = data.ShowCount;\r\n                    //this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n        else if (text.length == 0) {\r\n            this.IsLoading = true;\r\n            this.model.SearchText = null;\r\n            this.viewOrderGroupService.getOrderGroupDetails(this.model)\r\n                .subscribe(data => {\r\n                    this.IsLoading = false;\r\n                    this.groups = data.OrderGroupDetails as OrderGroupDetailModel[];\r\n                    this.TotalGroupCount = data.TotalGroupCount;\r\n                    this.ShowCount = data.ShowCount;\r\n                   // this.onViewOrderGroupResponse.emit(data);\r\n                });\r\n        }\r\n    }\r\n    public OnCompanySelect(company: any) {\r\n        this.model.CompanyId = company.Id;\r\n        this.JobList = [];\r\n        this.orderService.getCommonJobList(company.Id).subscribe(data => this.JobList = data);\r\n    }\r\n\r\n    public OnCompanyDeSelect(company: any) {\r\n        this.JobList = [];\r\n        this.model.CompanyId = null;\r\n    }\r\n\r\n    public OnJobSelect(job: any) {\r\n        this.model.JobId = job.Id;\r\n    }\r\n\r\n    public OnJobDeSelect(groupType: any) {\r\n        this.model.JobId = null;\r\n    }\r\n\r\n    public OnFuelGroupSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = fuelGroup.Id;\r\n    }\r\n\r\n    public OnFuelGroupDeSelect(fuelGroup: any) {\r\n        this.model.ProductCategoryId = null;\r\n    }\r\n\r\n    public OnStateSelect(state: any) {\r\n        this.model.StateId = state.Id;\r\n    }\r\n\r\n    public OnStateDeSelect(state: any) {\r\n        this.model.StateId = null;\r\n    }\r\n\r\n    SetOrderGroupIdToDelete(orderGroupId: number) {\r\n        this.SelectedOrderGroupIdToDelete = orderGroupId;\r\n    }\r\n\r\n    deleteOrderGroup() {\r\n        if (this.SelectedOrderGroupIdToDelete == 0) { return; }\r\n\r\n        this.IsLoading = true;\r\n        this.viewOrderGroupService.deleteOrderGroup(this.SelectedOrderGroupIdToDelete)\r\n            .subscribe(data => {                \r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.onOrderGroupFilterSubmit();\r\n                    this.IsLoading = false;\r\n                } else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        this.SelectedOrderGroupIdToDelete = 0;\r\n    }\r\n\r\n\tOpenEditSlider(OrderGroupId: number, _SelectedButton: string) {\r\n\t\tif (this.BlendComponent != undefined) {\r\n\t\t\tthis.BlendComponent.isEdit = true;\r\n\t\t}\r\n\t\tthis.SelectedButton = OrderGroupType[_SelectedButton];\r\n\t\tthis.ModalText = this.ModalEditTextData[_SelectedButton];\r\n\t\tthis.sharedService.setGroupId(OrderGroupId);\r\n\t}\r\n}\r\n","<div>\r\n    <button type=\"button\" class=\"btn btn-default mr25\" (click)=\"ButtonPressed('3')\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\"><i class=\"fas fa-plus mr5\"></i>Create Blend Group</button>\r\n    <button type=\"button\" class=\"btn btn-default mr25\" (click)=\"ButtonPressed('1')\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\"><i class=\"fas fa-plus mr5\"></i>Create Same Destination Group</button>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"ButtonPressed('2')\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\"><i class=\"fas fa-plus mr5\"></i>Term Pricing Contract</button>\r\n</div>\r\n<div id=\"create-group\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15 pb0\">\r\n            <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h2 class=\"dib mt0 mb0 fs21 ml15\">{{ModalText}}</h2>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div *ngIf=\"SelectedButton=='Blend'\">\r\n                <app-create-blend-group (onSubmitGroupData)=\"onOrderGroupFilterSubmit();\"></app-create-blend-group>\r\n            </div>\r\n            <div *ngIf=\"SelectedButton=='MultiProducts'\">\r\n                <app-create-same-dest-group (onSubmitGroupData)=\"onOrderGroupFilterSubmit();\"></app-create-same-dest-group>\r\n            </div>\r\n            <div *ngIf=\"SelectedButton=='Tier'\">\r\n                <app-term-pricing-contract></app-term-pricing-contract>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div>\r\n        <form #viewOrderGroupForm>\r\n            <div class=\"container-fluid mt15\">\r\n                <!--(onGroupTypeSelect)=\"onGroupSelected($event)\"-->\r\n                <!--[GroupList]=\"model?.GroupTypes || []\"-->\r\n                <!--<app-filter-group (onViewOrderGroupResponse)=\"onViewOrderGroupChildResponse($event)\"></app-filter-group>-->\r\n                <div class=\"row well\">\r\n                    <div class=\"col-sm-9\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Grouping Purpose</label>\r\n                                    <select class=\"form-control\" (change)=\"OnGroupTypeSelect($event)\">\r\n                                        <option value=\"0\">All</option>\r\n                                        <option *ngFor=\"let grpType of GroupTypeList || []\" [ngValue]=\"SelectedGroupType\" [value]=\"grpType.Id\">{{grpType.Name}}</option>\r\n                                    </select>\r\n                                    <!--<ng-multiselect-dropdown [data]=\"GroupTypeList\" [settings]=\"GroupTypeDdlSettings\" (onSelect)=\"OnGroupTypeSelect($event)\"\r\n                                                (onDeSelect)=\"OnGroupTypeDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label *ngIf=\"IsSupplierCompany\">Customer</label>\r\n                                    <label *ngIf=\"!IsSupplierCompany\">Supplier</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedCompany\" [data]=\"CompanyList\" name=\"SelectedCompany\" [settings]=\"CompanyDdlSettings\" (onSelect)=\"OnCompanySelect($event)\"\r\n                                                             (onDeSelect)=\"OnCompanyDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngIf=\"IsMultiProduct || IsTier\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Location/Site Name</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedJob\" name=\"SelectedJob\" [settings]=\"JobDdlSettings\" [data]=\"JobList\" (onSelect)=\"OnJobSelect($event)\"\r\n                                                             (onDeSelect)=\"OnJobDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\" *ngIf=\"IsTier\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Fuel Group</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedFuelGroup\" name=\"SelectedFuelGroup\" [settings]=\"FuelGroupDdlSettings\" [data]=\"FuelGroupList\" (onSelect)=\"OnFuelGroupSelect($event)\"\r\n                                                             (onDeSelect)=\"OnFuelGroupDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\" *ngIf=\"!IsSupplierCompany && IsTier\">\r\n                                <div class=\"form-group\">\r\n                                    <label>State</label>\r\n                                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedState\" name=\"SelectedState\" [settings]=\"StateDdlSettings\" [data]=\"StateList\" (onSelect)=\"OnStateSelect($event)\"\r\n                                                             (onDeSelect)=\"OnStateDeSelect($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <input class=\"btn btn-primary btn-submit btn-lg no-disable btn-lg mt-4\" type=\"submit\" value=\"Search\" (click)=\"onOrderGroupFilterSubmit()\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"row mt-4\">\r\n                            <div class=\"col-sm-2\">\r\n                                <button class=\"btn btn-primary\" (click)=\"onSearch(searchTxt.value)\" ><i class=\"fas fa-search\"></i></button>\r\n                            </div>\r\n                            <div class=\"col-sm-10\">\r\n                                <input type=\"text\" class=\"form-control input-lg\" placeholder=\"Search Group\" #searchTxt>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"pb15 f-bold\">\r\n                Showing {{ShowCount}} of {{TotalGroupCount}}\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3\" *ngFor=\"let grp of groups; let i = index;\">\r\n                    <div class=\"well animated fadeInUp\">\r\n                        <div class=\"row mb10\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"pa10 mb0 jumbotron group-cust radius-5\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-8\">\r\n                                            <div class=\"fs12 f-bold\">Customer PO#</div>\r\n                                            <h2 class=\"pt0 mt0 f-normal fs16\">{{grp.CustomerPoNumber}}</h2>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 text-right\">\r\n                                            <a *ngIf=\"grp.IsEditOrDeleteAllowed && grp.CanCurrentUserEditOrDeleteGroup\" (click)=\"OpenEditSlider(grp.OrderGroupId, grp.GroupType);\" onclick=\"slidePanel('#create-group','90%')\" data-target=\"create-group\" class=\"mr5 fs16\"><i class=\"fa fa-edit\"></i></a>\r\n                                            <a *ngIf=\"grp.IsEditOrDeleteAllowed && grp.CanCurrentUserEditOrDeleteGroup\" (click)=\"SetOrderGroupIdToDelete(grp.OrderGroupId);\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-trash-alt color-maroon\"></i></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\" *ngIf=\"grp.GroupType == 1\">\r\n                                        <!-- 1=Multi Products || 2=Tier || 3=Blend -->\r\n                                        <div class=\"col-sm-12\" *ngIf=\"grp.JobAddress != null\">\r\n                                            <span class=\"fs12\">{{grp.JobName}}</span><br>\r\n                                            <span class=\"fs11\">{{grp.JobAddress}}</span><br>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"grp.GroupType == 2\">\r\n                                        <!-- 2=Tier -->\r\n                                        <span class=\"fs14\">{{grp.DisplayProductType}}</span><br>\r\n                                        <span class=\"fs14\" *ngIf=\"grp.RenewalFrequency != '' || grp.RenewalFrequency != null\">Renewal - {{grp.RenewalFrequency}}</span><br>\r\n                                    </div>\r\n                                    <!-- 3=Blend -->\r\n                                    <div *ngIf=\"grp.GroupType == 3\">\r\n                                        <!--<span class=\"fs14\">Group Weighted Avg PPG - {{grp.BlendedGroupWeightedPPG}}</span><br>-->\r\n                                        <span class=\"fs13\">{{grp.DisplayBlendedGroupWeightedPPG}}</span><br>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"order-list pa10\">\r\n                            <div *ngFor=\"let drop of grp.OrderDrops; let j = index;\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"row col-sm-12\" *ngIf=\"grp.GroupType == 1\">\r\n                                        <div class=\"col-sm-9\">\r\n                                            <!-- 1=MultiProducts -->\r\n                                            <span class=\"fs14\">{{drop.FuelType}}</span><br>\r\n                                            <!--QuantityType 1=SpecificAmount || 2=Range || 3=NotSpecified -->\r\n                                            <div *ngIf=\"drop.QuantityType == 1\"><span class=\"fs12 color-lightgrey\">{{drop.DroppedGallons}} {{drop.UoM}}</span><br></div>\r\n                                            <div *ngIf=\"drop.QuantityType == 2\">\r\n                                                <span class=\"fs12 color-lightgrey\">Tier {{j+1}} - {{drop.MinVolume}} to {{drop.MaxVolume}} {{drop.UoM}}</span><br>\r\n                                            </div>\r\n                                            <div *ngIf=\"drop.QuantityType == 3\"><span class=\"fs12 color-lightgrey\">Not Specified</span><br></div>\r\n                                            <!--<span class=\"fs11 color-lightgrey\"><a href=\"\">{{drop.TfxPoNumber}}</a></span>-->\r\n                                            <span class=\"fs11 color-lightgrey\">{{drop.TfxPoNumber}}</span>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 text-right\">\r\n                                            <span class=\"badge\" *ngIf=\"drop.QuantityType != 3 && drop.DropPercentage != '--'\">{{drop.DropPercentage}}%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row col-sm-12\" *ngIf=\"grp.GroupType == 2\">\r\n                                        <div class=\"col-sm-9\">\r\n                                            <!-- 2=Tier -->\r\n                                            <!--QuantityType 1=SpecificAmount || 2=Range || 3=NotSpecified -->\r\n                                            <div *ngIf=\"drop.QuantityType == 1\">\r\n                                                <span class=\"fs12 color-lightgrey\">{{drop.TfxPoNumber}} - {{drop.DroppedGallons}} {{drop.UoM}}</span><br>\r\n                                            </div>\r\n                                            <div *ngIf=\"drop.QuantityType == 3\">\r\n                                                <span class=\"fs12 color-lightgrey\">{{drop.TfxPoNumber}} - Not Specified</span><br>\r\n                                            </div>\r\n                                            <span class=\"fs12 color-lightgrey\">Tier {{j+1}} - {{drop.MinVolume}} to {{drop.MaxVolume}} {{drop.UoM}}</span><br>\r\n                                            <span class=\"fs12 color-lightgrey\">{{drop.DisplayPPG}}</span><br>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 text-right\">\r\n                                            <span class=\"badge\" *ngIf=\"drop.QuantityType != 3 && drop.DropPercentage != '--'\">{{drop.DropPercentage}}%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row col-sm-12\" *ngIf=\"grp.GroupType == 3\">\r\n                                        <div class=\"col-sm-9\">\r\n                                            <span class=\"fs14\">{{drop.FuelType}}</span><br>\r\n                                            <div *ngIf=\"drop.QuantityType == 1\">\r\n                                                <span class=\"fs12 color-lightgrey\">{{drop.DroppedGallons}} {{drop.UoM}}</span><br>\r\n                                            </div>\r\n                                            <div *ngIf=\"drop.QuantityType == 3\">\r\n                                                <span class=\"fs12 color-lightgrey\">Not Specified</span><br>\r\n                                            </div>\r\n                                            <span class=\"fs11 color-lightgrey\">{{drop.TfxPoNumber}}</span><br />\r\n                                            <span class=\"fs11 color-lightgrey\">Blended Ratio - {{drop.BlendRatioPercentage}}%</span>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 text-right\">\r\n                                            <span class=\"badge\" *ngIf=\"drop.QuantityType != 3 && drop.DropPercentage != '--'\">{{drop.DropPercentage}}%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"border-b clearboth mt10 mb10\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n    <!--modal-->\r\n    <div class=\"modal fade\" id=\"myModal\" role=\"dialog\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n        <div class=\"modal-dialog\" style=\"width:200px\">\r\n\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    Are you sure to delete?\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-danger\" (click)=\"deleteOrderGroup();\">Yes</button>\r\n                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-success\" (click)=\"SetOrderGroupIdToDelete(0);\">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n"],"sourceRoot":"webpack:///"}