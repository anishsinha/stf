{"version":3,"sources":["./node_modules/ngx-json-viewer/__ivy_ngcc__/ngx-json-viewer.js","./src/app/tpd-api-dashboard/dashboard/dashboard.component.ts","./src/app/tpd-api-dashboard/dashboard/dashboard.component.html","./src/app/tpd-api-dashboard/service/api-dashboard.service.ts","./src/app/tpd-api-dashboard/tpd-api-dashboard.module.ts"],"names":[],"mappings":"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AAE,uKAAuK,iCAAiC,EAAE,iPAAiP,8BAA8B,EAAE,oHAAoH,2CAA2C,2CAA2C,EAAE,qLAAqL,0BAA0B,EAAE,IAAI;AAC7/J;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sCAAsC,eAAe;AACrD;AACA,4FAA4F,uBAAuB;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iCAAiC;AACjC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA,2BAA2B;AAC3B;AACA,wBAAwB;AACxB;AACA,wBAAwB;AACxB;AACA,4BAA4B;AAC5B;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA,8BAA8B;AAC9B;AACA,oBAAoB;AACpB;AACA,+BAA+B;AAC/B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,yCAAyC;AACzC;AACA;AACA,wBAAwB;AACxB;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,2BAA2B,8DAAuB,EAAE,4BAA4B;AAChF,2BAA2B,8DAAuB,EAAE,mDAAmD,yCAAyC,EAAE;AAClJ,YAAY,4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","file":"tpd-api-dashboard-tpd-api-dashboard-module-es2015.js","sourcesContent":["import { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction NgxJsonViewerComponent_section_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n} }\nfunction NgxJsonViewerComponent_section_1_span_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.description);\n} }\nfunction NgxJsonViewerComponent_section_1_section_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"section\", 11);\n    ɵngcc0.ɵɵelement(1, \"ngx-json-viewer\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"json\", segment_r1.value)(\"expanded\", ctx_r4.expanded);\n} }\nconst _c0 = function (a1) { return [\"segment\", a1]; };\nconst _c1 = function (a1, a2) { return { \"segment-main\": true, \"expandable\": a1, \"expanded\": a2 }; };\nfunction NgxJsonViewerComponent_section_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"section\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"section\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxJsonViewerComponent_section_1_Template_section_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const segment_r1 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.toggle(segment_r1); });\n    ɵngcc0.ɵɵtemplate(2, NgxJsonViewerComponent_section_1_div_2_Template, 1, 0, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"span\", 5);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 6);\n    ɵngcc0.ɵɵtext(6, \": \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, NgxJsonViewerComponent_section_1_span_7_Template, 2, 1, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, NgxJsonViewerComponent_section_1_section_8_Template, 2, 2, \"section\", 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const segment_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c0, \"segment-type-\" + segment_r1.type));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c1, ctx_r0.isExpandable(segment_r1), segment_r1.expanded));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isExpandable(segment_r1));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.key);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !segment_r1.expanded || !ctx_r0.isExpandable(segment_r1));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", segment_r1.expanded && ctx_r0.isExpandable(segment_r1));\n} }\nclass NgxJsonViewerComponent {\n    constructor() {\n        this.expanded = true;\n        /**\n         * @deprecated It will be always true and deleted in version 3.0.0\n         */\n        this.cleanOnChange = true;\n        this.segments = [];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.cleanOnChange) {\n            this.segments = [];\n        }\n        if (typeof this.json === 'object') {\n            Object.keys(this.json).forEach(key => {\n                this.segments.push(this.parseKeyValue(key, this.json[key]));\n            });\n        }\n        else {\n            this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\n        }\n    }\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    isExpandable(segment) {\n        return segment.type === 'object' || segment.type === 'array';\n    }\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    toggle(segment) {\n        if (this.isExpandable(segment)) {\n            segment.expanded = !segment.expanded;\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    parseKeyValue(key, value) {\n        const /** @type {?} */ segment = {\n            key: key,\n            value: value,\n            type: undefined,\n            description: '' + value,\n            expanded: this.expanded\n        };\n        switch (typeof segment.value) {\n            case 'number': {\n                segment.type = 'number';\n                break;\n            }\n            case 'boolean': {\n                segment.type = 'boolean';\n                break;\n            }\n            case 'function': {\n                segment.type = 'function';\n                break;\n            }\n            case 'string': {\n                segment.type = 'string';\n                segment.description = '\"' + segment.value + '\"';\n                break;\n            }\n            case 'undefined': {\n                segment.type = 'undefined';\n                segment.description = 'undefined';\n                break;\n            }\n            case 'object': {\n                // yea, null is object\n                if (segment.value === null) {\n                    segment.type = 'null';\n                    segment.description = 'null';\n                }\n                else if (Array.isArray(segment.value)) {\n                    segment.type = 'array';\n                    segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\n                }\n                else if (segment.value instanceof Date) {\n                    segment.type = 'date';\n                }\n                else {\n                    segment.type = 'object';\n                    segment.description = 'Object ' + JSON.stringify(segment.value);\n                }\n                break;\n            }\n        }\n        return segment;\n    }\n}\nNgxJsonViewerComponent.ɵfac = function NgxJsonViewerComponent_Factory(t) { return new (t || NgxJsonViewerComponent)(); };\nNgxJsonViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxJsonViewerComponent, selectors: [[\"ngx-json-viewer\"]], inputs: { expanded: \"expanded\", cleanOnChange: \"cleanOnChange\", json: \"json\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[1, \"ngx-json-viewer\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"ngClass\", \"click\"], [\"class\", \"toggler\", 4, \"ngIf\"], [1, \"segment-key\"], [1, \"segment-separator\"], [\"class\", \"segment-value\", 4, \"ngIf\"], [\"class\", \"children\", 4, \"ngIf\"], [1, \"toggler\"], [1, \"segment-value\"], [1, \"children\"], [3, \"json\", \"expanded\"]], template: function NgxJsonViewerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"section\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgxJsonViewerComponent_section_1_Template, 9, 11, \"section\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.segments);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgIf, NgxJsonViewerComponent], styles: [\"@charset \\\"UTF-8\\\";\\n    .ngx-json-viewer[_ngcontent-%COMP%] {\\n      font-family: monospace;\\n      font-size: 1em;\\n      width: 100%;\\n      height: 100%;\\n      overflow: hidden;\\n      position: relative; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%] {\\n        padding: 2px;\\n        margin: 1px 1px 1px 12px; }\\n        .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%] {\\n          word-wrap: break-word; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .toggler[_ngcontent-%COMP%] {\\n            position: absolute;\\n            margin-left: -14px;\\n            margin-top: 3px;\\n            font-size: .8em;\\n            line-height: 1.2em;\\n            vertical-align: middle;\\n            color: #787878; }\\n            .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .toggler[_ngcontent-%COMP%]::after {\\n              display: inline-block;\\n              content: \\\"\\u25BA\\\";\\n              -webkit-transition: -webkit-transform 0.1s ease-in;\\n              transition: -webkit-transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-key[_ngcontent-%COMP%] {\\n            color: #4E187C; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-separator[_ngcontent-%COMP%] {\\n            color: #999; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-value[_ngcontent-%COMP%] {\\n            color: #000; }\\n        .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .children[_ngcontent-%COMP%] {\\n          margin-left: 12px; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-string[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #FF6B6B; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-number[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #009688; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-boolean[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #b938a4; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-date[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #05668D; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-array[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-object[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-function[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-null[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #fff; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #fff; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-null[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        background-color: red; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-key[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        background-color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-object[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%], .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-array[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%] {\\n        white-space: nowrap; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .expanded[_ngcontent-%COMP%]    > .toggler[_ngcontent-%COMP%]::after {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg); }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .expandable[_ngcontent-%COMP%], .ngx-json-viewer[_ngcontent-%COMP%]   .expandable[_ngcontent-%COMP%]    > .toggler[_ngcontent-%COMP%] {\\n        cursor: pointer; }\"] });\n/**\n * @nocollapse\n */\nNgxJsonViewerComponent.ctorParameters = () => [];\nNgxJsonViewerComponent.propDecorators = {\n    'json': [{ type: Input },],\n    'expanded': [{ type: Input },],\n    'cleanOnChange': [{ type: Input },],\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxJsonViewerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-json-viewer',\n                template: `\n    <section class=\"ngx-json-viewer\">\n      <section\n        *ngFor=\"let segment of segments\"\n        [ngClass]=\"['segment', 'segment-type-' + segment.type]\">\n        <section\n          (click)=\"toggle(segment)\"\n          [ngClass]=\"{\n            'segment-main': true,\n            'expandable': isExpandable(segment),\n            'expanded': segment.expanded\n          }\">\n          <div *ngIf=\"isExpandable(segment)\" class=\"toggler\"></div>\n          <span class=\"segment-key\">{{ segment.key }}</span>\n          <span class=\"segment-separator\">: </span>\n          <span *ngIf=\"!segment.expanded || !isExpandable(segment)\" class=\"segment-value\">{{ segment.description }}</span>\n        </section>\n        <section *ngIf=\"segment.expanded && isExpandable(segment)\" class=\"children\">\n          <ngx-json-viewer [json]=\"segment.value\" [expanded]=\"expanded\"></ngx-json-viewer>\n        </section>\n      </section>\n    </section>\n  `,\n                styles: [`\n    @charset \"UTF-8\";\n    .ngx-json-viewer {\n      font-family: monospace;\n      font-size: 1em;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      position: relative; }\n      .ngx-json-viewer .segment {\n        padding: 2px;\n        margin: 1px 1px 1px 12px; }\n        .ngx-json-viewer .segment .segment-main {\n          word-wrap: break-word; }\n          .ngx-json-viewer .segment .segment-main .toggler {\n            position: absolute;\n            margin-left: -14px;\n            margin-top: 3px;\n            font-size: .8em;\n            line-height: 1.2em;\n            vertical-align: middle;\n            color: #787878; }\n            .ngx-json-viewer .segment .segment-main .toggler::after {\n              display: inline-block;\n              content: \"►\";\n              -webkit-transition: -webkit-transform 0.1s ease-in;\n              transition: -webkit-transform 0.1s ease-in;\n              transition: transform 0.1s ease-in;\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\n          .ngx-json-viewer .segment .segment-main .segment-key {\n            color: #4E187C; }\n          .ngx-json-viewer .segment .segment-main .segment-separator {\n            color: #999; }\n          .ngx-json-viewer .segment .segment-main .segment-value {\n            color: #000; }\n        .ngx-json-viewer .segment .children {\n          margin-left: 12px; }\n      .ngx-json-viewer .segment-type-string > .segment-main > .segment-value {\n        color: #FF6B6B; }\n      .ngx-json-viewer .segment-type-number > .segment-main > .segment-value {\n        color: #009688; }\n      .ngx-json-viewer .segment-type-boolean > .segment-main > .segment-value {\n        color: #b938a4; }\n      .ngx-json-viewer .segment-type-date > .segment-main > .segment-value {\n        color: #05668D; }\n      .ngx-json-viewer .segment-type-array > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-function > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        color: #fff; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        color: #fff; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        background-color: red; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-key {\n        color: #999; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        background-color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main,\n      .ngx-json-viewer .segment-type-array > .segment-main {\n        white-space: nowrap; }\n      .ngx-json-viewer .expanded > .toggler::after {\n        -webkit-transform: rotate(90deg);\n                transform: rotate(90deg); }\n      .ngx-json-viewer .expandable,\n      .ngx-json-viewer .expandable > .toggler {\n        cursor: pointer; }\n  `]\n            }]\n    }], function () { return []; }, { expanded: [{\n            type: Input\n        }], cleanOnChange: [{\n            type: Input\n        }], json: [{\n            type: Input\n        }] }); })();\n\nclass NgxJsonViewerModule {\n}\nNgxJsonViewerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxJsonViewerModule });\nNgxJsonViewerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxJsonViewerModule_Factory(t) { return new (t || NgxJsonViewerModule)(); }, imports: [[\n            CommonModule\n        ]] });\n/**\n * @nocollapse\n */\nNgxJsonViewerModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxJsonViewerModule, { declarations: function () { return [NgxJsonViewerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxJsonViewerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxJsonViewerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxJsonViewerComponent\n                ],\n                exports: [\n                    NgxJsonViewerComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxJsonViewerModule, NgxJsonViewerComponent };\n\n//# sourceMappingURL=ngx-json-viewer.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiDashboardService } from '../service/api-dashboard.service';\nimport { Subject } from 'rxjs';\nimport * as moment from 'moment';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ApiResultType, ReqResType } from 'src/app/app.enum';\ndeclare var currentCompanyId;\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    public ApiResultType = ApiResultType;\n    public ReqResType = ReqResType;\n    dtOptions: any = {};\n  \n    public Log: ApiDetailModel = {};\n    dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean = false;\n    currentCompanyId: any;\n    selectedReqRes: any;\n    modelHeader: any;\n    fromDate: string;3\n    toDate: string;\n    selectedApi: any = '';\n    ApiList = ['Select API','Invoice-Create', 'Invoice-UpdateImages', 'Schedule-Create', 'Customer-Create','Location-Create'];\n    viewType: any = ApiResultType.Total;\n    //min max date\n    MinStartDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n    MaxStartDate = new Date();\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n    constructor(private dashbpardSer: ApiDashboardService) {\n        this.toDate = moment().format('MM/DD/YYYY');\n        this.fromDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1))).format('MM/DD/YYYY'); \n    }\n\n    ngOnInit() {\n        this.currentCompanyId = currentCompanyId;\n        this.initializeGrid();\n        this.getAPILogs();\n    }\n\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n              /*  { extend: 'colvis' }*/\n                //{ extend: 'copy', exportOptions: exportInvitedColumns },\n                //{ extend: 'csv', title: 'API Details', exportOptions: exportInvitedColumns },\n                //{ extend: 'pdf', title: 'API Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                //{ extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n\n    ReloadDataTable() {\n        this.getAPILogs();\n    }\n   public getAPILogs() {\n       this.IsLoading = true;\n       if ((this.datatableElement && this.datatableElement.dtInstance)) {\n        this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n      }\n       this.Log = {};\n       if(this.fromDate == undefined) this.fromDate = '' ;\n       if (this.toDate == undefined) this.toDate = '';\n       if (this.selectedApi == undefined || this.selectedApi == 'Select API')\n       {\n           this.selectedApi = '';\n       }\n       this.dashbpardSer.getApiLogs(this.currentCompanyId, this.fromDate, this.toDate, this.selectedApi, this.viewType).subscribe(data => {\n           this.IsLoading = false;\n           this.Log = data as ApiDetailModel;\n           this.Log && this.Log.ApiLogList.map(m => {\n               m.CreatedDate=  moment(m.CreatedDate).format('MM/DD/YYYY hh:mm a');\n           });\n           this.dtTrigger.next();\n        });\n   }\n\n    public showReqRes(log: ApiDashBoardModel, reqResType) {\n        this.IsLoading = true;\n        this.selectedReqRes = null;\n        this.dashbpardSer.getApiReqRes(log.Id, reqResType).subscribe(data => {\n            this.IsLoading = false;\n            reqResType == ReqResType.Request ? this.selectedReqRes = JSON.parse(data.Request) : this.selectedReqRes = JSON.parse(data.Response);\n            reqResType == ReqResType.Request ? this.modelHeader = 'Request (' + log.Url + \" )\" : this.modelHeader = 'Response (' + log.Url + \" )\";\n            });\n       // reqResType == 2 ? this.selectedReqRes = JSON.parse(log.Request) : this.selectedReqRes = JSON.parse(log.Response);\n    }\n\n    setFromDate(event: any): void {\n        this.fromDate=(event);\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 1))).toDate();\n        !this.toDate ? this.toDate =(moment(d).format('MM/DD/YYYY')) : '';\n        if (this.fromDate != '' && this.toDate!= '') {\n            let _fromDate = moment(this.fromDate).toDate();\n            let _toDate = moment(this.toDate).toDate();\n            if (_toDate < _fromDate) {\n                this.toDate=(event);\n            }\n        }\n    }\n\n    setToDate(event: any) {\n        this.toDate = (event);\n        if (this.fromDate != '' && this.toDate != '') {\n            let _fromDate = moment(this.fromDate).toDate();\n            let _toDate = moment(this.toDate).toDate();\n            if (_fromDate > _toDate) {\n                this.fromDate = (event);\n            }\n        }\n    }\n    apiChanged($event) {\n        this.selectedApi = $event.target.value;\n    }\n\n    getView(type) {\n        this.viewType = type;\n        this.getAPILogs();\n    }\n}\n\n\nexport class ApiDashBoardModel {\n    Id?: number;\n    Request?: string;\n    Response?: string;\n    Url?: string;\n    ExternalRefID?: string;\n    Message?: string;\n    CreatedDate?: string;\n    CreatedBy?: number;\n    CompanyId?: number;\n}\n\nexport class ApiDetailModel {\n    TotalCall?: number;\n    SuccessCall?: number;\n    FailedCall?: number;\n    ApiLogList?: ApiDashBoardModel[] = [];\n}\n\n\n","<div class=\"api-dashboard-container \">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"well pb10 pt15 mb10 no-shadow\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12 col-sm-2 col-md-1 pt5 pr0\"><i class=\"fa fa-filter mr5 fs16\"></i><label class=\"f-normal fs16\">Filter</label></div>\r\n                    <div class=\"col-xs-6 col-sm-3 col-md-2 mb5\">\r\n                        <select class=\"form-control\" (change)=\"apiChanged($event)\" >\r\n                            <!--<option [value]='' disabled>Select API</option>-->\r\n                            <option *ngFor=\"let api of ApiList\" [value]=\"api\" [selected]=\"api==selectedApi\">\r\n                                {{api}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-xs-6 col-sm-3 col-md-2 mb5\">\r\n                        <input type=\"text\" [(ngModel)]=\"fromDate\" #fromDate1 class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\"  />\r\n                    </div>\r\n                    <div class=\"col-xs-6 col-sm-3 col-md-2 mb5\">\r\n                        <input type=\"text\" [(ngModel)]=\"toDate\" #EndDate1 class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" />\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-4 col-md-3\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" id=\"btnApplyFilter\" value=\"Apply\" (click)=\"ReloadDataTable();\" />\r\n                        <!--<input type=\"button\" class=\"btn ml5\" id=\"btnClearFilter\" value=\"Clear Filter\" (click)=\"ClearFilter();\" />-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt10\">\r\n        <div class=\"col-sm-2 col-xs-12 mb10-xs\">\r\n            <div class=\"col-xs-12 api-cards-container\">\r\n                <a class=\"col-sm-12 col-xs-3 card\" [ngClass]=\"{'active':viewType==ApiResultType.Total}\" (click)=\"getView(ApiResultType.Total);\">\r\n                    <h1 class=\"digit color-default\">{{Log.TotalCall}}</h1>\r\n                    <span class=\"text color-default\">Total Calls</span>\r\n                </a>\r\n                <a class=\"col-sm-12 col-xs-3 card\" [ngClass]=\"{'active':viewType==ApiResultType.Success}\" (click)=\"getView(ApiResultType.Success);\">\r\n                    <h1 class=\"digit color-lightgreen\">{{Log.SuccessCall}}</h1>\r\n                    <span class=\"text color-lightgreen\">Success</span>\r\n                </a>\r\n                <!--<a class=\"col-sm-12 col-xs-3 card active\">\r\n                    <h1 class=\"digit color-failed\">24</h1>\r\n                    <span class=\"text color-failed\">Failed</span>\r\n                </a>-->\r\n                <a class=\"col-sm-12 col-xs-3 card\" [ngClass]=\"{'active':viewType==ApiResultType.Exception}\" (click)=\"getView(ApiResultType.Exception);\">\r\n                    <h1 class=\"digit color-failed\">{{Log.FailedCall}}</h1>\r\n                    <span class=\"text color-failed\">Failed</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-10 col-xs-12\">\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span class='spinner-dashboard pa'></span></div>\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border location_table\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"iapi-dashboard-datatable\" data-gridname=\"26\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <!--<table id=\"api-dashboard-datatable\" data-gridname=\"18\" class=\"table table-bordered\" datatable>-->\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Api_Name\">API Name</th>\r\n                                        <th data-key=\"External_Ref_ID\">External Ref ID</th>\r\n                                        <th data-key=\"DateTime\">DateTime</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"Request\">Request</th>\r\n                                        <th data-key=\"Response\">Response</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <ng-container>\r\n                                        <tr *ngFor=\"let log of Log?.ApiLogList\">\r\n                                            <td>{{log.Url}}</td>\r\n                                            <td>{{log.ExternalRefID ?log.ExternalRefID : '--'}}</td>\r\n                                            <td>{{log.CreatedDate}}</td>\r\n                                            <td>{{log.Message ==1 ? 'Failed':'Success'}}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" class=\"btn btn-link\" (click)=\"showReqRes(log,ReqResType.Request)\" data-toggle=\"modal\" data-target=\"#idReqResModel\">\r\n                                                    <i class=\"fa fa-arrow-up\" alt=\"Request\" title=\"Request\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button type=\"button\" class=\"btn btn-link\" (click)=\"showReqRes(log,ReqResType.Response)\" data-toggle=\"modal\" data-target=\"#idReqResModel\">\r\n                                                    <i class=\"fa fa-arrow-down\" alt=\"Response\" title=\"Response\"></i>\r\n                                                </button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--req json-->\r\n<div id=\"idReqResModel\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n                <h4 class=\"modal-title\"> {{modelHeader}}  <span class=\"pull-right\"></span></h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ngx-json-viewer *ngIf=\"selectedReqRes\" [json]=\"selectedReqRes\"></ngx-json-viewer>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" id=\"idCloseModel\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<!--end view Shift-->\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HandleError } from 'src/app/errors/HandleError';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiDashboardService extends HandleError {\n    private getAllLogUrl: string = '/Home/GetApiLogs?companyId=';\n    private getReqResUrl: string = '/Home/GetApiLogRequestResponse?id=';\n    constructor(private httpClient: HttpClient) {\n        super();\n    }\n\n    getApiLogs(currentCompanyId:number,fromDate,toDate,selectedApi,viewType): Observable<any> {\n        return this.httpClient.get(this.getAllLogUrl + currentCompanyId + \"&fromdate=\" + fromDate + \"&toDate=\" + toDate + \"&viewType=\" + viewType+\"&apiName=\" + selectedApi)\n            .pipe(catchError(this.handleError<any>('getApiLogs', null)));\n    }\n    getApiReqRes(id, reqResType): Observable<any> {\n        return this.httpClient.get(this.getReqResUrl + id + \"&ReqResType=\" + reqResType)\n            .pipe(catchError(this.handleError<any>('GetApiLogRequestResponse', null)));\n    }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\n\nconst routeTpd: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n];\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    SharedModule,\n    DirectiveModule,\n    NgxJsonViewerModule,\n    DataTablesModule,\n    RouterModule.forChild(routeTpd)\n  ]\n})\nexport class TpdApiDashboardModule { }\n"],"sourceRoot":"webpack:///"}