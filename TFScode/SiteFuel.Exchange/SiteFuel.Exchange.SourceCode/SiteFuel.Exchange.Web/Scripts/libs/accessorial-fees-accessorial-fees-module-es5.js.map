{"version":3,"sources":["webpack:///src/app/accessorial-fees/accessorial-fees.module.ts","webpack:///src/app/accessorial-fees/create/child-components/fee-list.component.ts","webpack:///src/app/accessorial-fees/create/child-components/fee-list.component.html","webpack:///src/app/accessorial-fees/create/child-components/fee-type.component.ts","webpack:///src/app/accessorial-fees/create/child-components/fee-type.component.html","webpack:///src/app/accessorial-fees/create/create-accessorial-fees.component.html","webpack:///src/app/accessorial-fees/create/create-accessorial-fees.component.ts","webpack:///src/app/accessorial-fees/master/master.component.ts","webpack:///src/app/accessorial-fees/master/master.component.html","webpack:///src/app/accessorial-fees/model/accessorial-fees.ts","webpack:///src/app/accessorial-fees/service/accessorialfees.service.ts","webpack:///src/app/accessorial-fees/view/view-accessorial-fees.component.html","webpack:///src/app/accessorial-fees/view/view-accessorial-fees.component.ts","webpack:///src/app/accessorial-fees/view/view-fees-details/view-fees-details.component.ts","webpack:///src/app/company-addresses/region/service/region.service.ts","webpack:///src/app/invoice/services/fee.service.ts"],"names":["route","path","component","AccessorialFeesModule","forChild","declarations","imports","FeeListComponent","fb","feeService","dataService","IsLoading","CommonFees","OtherFees","SpCommonFees","SpOtherFees","Parent","addControl","array","getFeeTypes","subscribe","data","FeeTypes","getFeeConstraintTypes","FeeConstraintTypes","getFeeSubTypes","FeeSubTypes","filter","elem","FeeSubTypeId","RemoveFeesSubject","x","removeFeesOnCreateNew","change","CountryId","currentValue","currency","DisplayCurrency","Fees","fees","get","clear","currValues","forEach","FeeConstraintTypeId","addGeneralFee","CommonFee","addSpecialFee","model","byQtyModel","DeliveryFeeByQuantity","byQuantity","_fb","undefined","idx","push","group","Currency","control","MinQuantity","required","MaxQuantity","Fee","_specialDate","SpecialDate","format","OrderId","TruckLoadType","TruckLoadCategoryId","IncludeInPPG","FeeTypeId","OtherFeeDescription","MinimumGallons","_commonFee","feeObj","indexOf","feeGroup","getForm","fee","_fees","removeAt","controls","splice","typeId","lastFee","length","value","index","drop","name","invalid","dirty","touched","errors","min","predicate","formControl","parent","commonFee","removeGeneralFee","OtherFee","SpCommonFee","removeSpecialFee","SpOtherFee","selector","templateUrl","styleUrls","FeeGroup","setValue","$event","FeeTypeComponent","maxDate","Date","minDate","DisplayFeeTypes","setFullYear","getFullYear","setValidators","feeNameRequired","slice","subTypes","feeTypeId","_fee","pattern","lastMax","_form","subTypeId","field1Name","field2Name","field3Name","field1","field2","field3","replace","updateSubType","handleByQuantity","CreateAccessorialFeesComponent","fuelsurchargeService","regionService","carrierService","accesorialFeeService","http","_document","SingleSelectSettingsById","MultiSelectSettingsByGroup","SelectedCountryId","AccessorialFeeMode","TerminalsAndBulkPlantList","IsCustomerSelected","IsMasterSelected","IsCarrierSelected","IsSourceRegionSelected","decimalSupportedRegx","SelectedTerminalsAndBulkPlants","disableInputControls","IsEditable","IsLoaded","onPageSubmit","CurrentCompanyId","Number","currentUserCompanyId","getDefaultServingCountry","singleSelection","closeDropDownOnSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","MultiSelectSettingsById","text","searchPlaceholderText","primaryKey","labelKey","enableSearchFilter","badgeShowLimit","groupBy","rcForm","createForm","getTableTypes","patchValue","Id","Master","Name","getSourceRegions","toString","onSelectedAccessorialFeeId","s","stringify","JSON","parse","AccessorialFeeId","Mode","id","localStorage","getItem","removeItem","valueChanges","pipe","prev","next","SourceRegionChange","DefaultCountryId","TableTypeList","tableType","customerIds","carrierIds","selectedCustomers","map","selectedCarriers","sourceRegionInput","TableType","CustomerId","CarrierId","SourceRegionList","TableTypeId","TableName","TableTypes","Customers","Carriers","SourceRegions","TerminalsAndBulkPlants","StartDate","EndDate","StatusId","requiredControls","notRequiredControls","ctrl","updateValueAndValidity","clearValidators","item","AddRemoveValidations","getSupplierCustomers","getCarriers","onCarriersOrCustomersChange","selectedTableType","sr","CustomerList","ids","selectedSourceRegions","getTerminalsAndBulkPlants","join","carriers","CarrierList","status","accessorialFeeName","msgerror","AccessorialDate","feeModel","createPostObject","Status","Draft","Published","markAllAsTouched","valid","updateAccessorialFee","response","ServiceResponse","StatusCode","message","msgsuccess","changeViewType","StatusMessage","createAccessorialFee","reset","removeFeesOnCreateNewSubject","changeToViewTab","defaultView","location","reload","onSelectedTabChanged","form","key","viewType","emit","selectedTerminalBulkplant","t","CustomerIds","CarrierIds","endDate","startDate","sourceRegions","SourceRegionIds","type","Ids","selectedTerminals","Code","terminal","terminalId","parseInt","isNaN","selectedBulkPlants","bulkplant","bulkplantId","getAccessorialFee","accessorialFeeId","sorceRegionIds","getAccessorialFeeUrl","af","afModel","Afmodel","companyIds","toUpperCase","customers","getSupplierCustomersUrl","getCarriersUrl","Customer","Carrier","post","getSourceRegionsUrl","tableTypes","getTableTypesUrl","terminalAndBulkPlans","getTerminalsAndBulkPlantsUrl","result","Edit","_af","IdInComparer","ComparerWithId","otherArray","current","other","onSubmit","onTableTypeSelect","onCustomersSelect","onCustomersDeSelect","onCarriersSelect","onCarriersDeSelect","onSourceRegionsDeSelect","onSourceRegionsDeSelectAll","onCancel","Document","MasterComponent","accessorialFeeService","_viewType","setItem","ViewAccessorialFeeModel","AccessorialFeeInputModel","AccessorialFeeGridModel","CreateAccessorialFeeModel","httpOptions","headers","AccessorialFeesService","httpClient","archiveAccessorialFeeUrl","getViewAccessorialFeeSummaryUrl","postCreateAccesorialFeesUrl","postUpdateAccesorialFeesUrl","handleError","accessorialFeeModel","providedIn","ViewAccessorialFeesComponent","cdr","dtOptions","dtTrigger","SinlgeselectSettingsById","AccessorialFeeList","popoverTitle","popoverMessage","cancelClicked","confirmClicked","CounrtyId","getData","MultiselectSettingsById","viewAccessorialFeeForm","initializeAccessorialFeeDatatableGrid","rerender_destroy","getAccessorialFeeGridDetails","fromDate","toDate","isArchived","archiveAccessorialFee","filterGrid","getTerminalsBulkPlant","$","DataTable","destroy","clearForm","detectChanges","input","selectedTableTypes","selectedTerminalAndBulkPlants","IsArchived","tableTypeIds","TableTypeIds","sourceRegionIds","selectedTerminalIds","c","terminalIds","TerminalIds","bulkPlantIds","BulkPlantIds","datatableElement","dtInstance","then","mode","operation","exportColumns","columns","dom","buttons","extend","exportOptions","title","orientation","pagingType","pageLength","lengthMenu","ViewFeesDetailsComponent","RegionService","createUrl","updateUrl","deleteUrl","getRegionsUrl","createSourceRegionUrl","updateSourceRegionUrl","deleteSourceRegionUrl","getJobsUrl","getDriversUrl","getDispatchersUrl","getTrailersUrl","stateUrl","shiftByDriverUrl","getRegionSchedulsbyRegionIdUrl","getRouteByReginId","getCompanyShiftsUrl","getRegionDriversUrl","addDriverScheduleUrl","addRegionScheduleUrl","updateDriverScheduleUrl","deleteDriverScheduleUrl","getRegionShiftMapping","getCarrierRegionsUrl","getSelectedCarriersByRegionUrl","isSourceRegionAvailableUrl","getProductTypeUrl","getFuelProductUrl","isPublishedDRUrl","onLoadingChanged","regiondId","regionId","region","countryId","driverIds","scheduleType","routeId","date","postModel","SelectedDate","driverScheduleMappingViewModels","productIds","fuelTypeIds","FeeService","getFeeTypesUrl","getFeeSubTypesUrl","getFeeConstraintTypesUrl","getEiaPriceUrl","orderId","isFromAccesorialFees"],"mappings":"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","file":"accessorial-fees-accessorial-fees-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MasterComponent } from './master/master.component';\r\nimport { ViewAccessorialFeesComponent } from './view/view-accessorial-fees.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateAccessorialFeesComponent } from './create/create-accessorial-fees.component';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { FeeListComponent } from './create/child-components/fee-list.component';\r\nimport { FeeTypeComponent } from './create/child-components/fee-type.component';\r\nimport { ViewFeesDetailsComponent } from './view/view-fees-details/view-fees-details.component';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\n\r\nconst route: Routes = [\r\n    { path: '', component: MasterComponent },\r\n    { path: 'Create', component: MasterComponent }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MasterComponent,\r\n        ViewAccessorialFeesComponent,\r\n        CreateAccessorialFeesComponent,\r\n        FeeListComponent,\r\n        FeeTypeComponent,\r\n        ViewFeesDetailsComponent\r\n    ],\r\n  imports: [\r\n      CommonModule, \r\n      SharedModule, \r\n      FormsModule, \r\n      DataTablesModule, \r\n      DirectiveModule, \r\n      RouterModule.forChild(route),\r\n      AngularMultiSelectModule\r\n  ]\r\n})\r\nexport class AccessorialFeesModule { }\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, Pipe, PipeTransform } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { FeeModel } from '../../../invoice/models/DropDetail';\r\nimport { DropdownItem, DropdownItemExt, FeeSubType } from 'src/app/statelist.service';\r\nimport { FeeService } from '../../../invoice/services/fee.service';\r\nimport * as moment from 'moment';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../../../carrier/service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-fee-list',\r\n  templateUrl: './fee-list.component.html',\r\n  styleUrls: ['./fee-list.component.css']\r\n})\r\nexport class FeeListComponent implements OnInit {\r\n    @Input() Parent: FormGroup;\r\n    @Input() CountryId: any;\r\n    @Input() public Fees: FeeModel[];\r\n\r\n    //---------------Fees GROUP -----------\r\n\r\n    public CommonFees: FormGroup[];\r\n    public OtherFees: FormGroup[];\r\n    public SpCommonFees: FormGroup[];\r\n    public SpOtherFees: FormGroup[];\r\n\r\n    public FeeTypes: DropdownItemExt[];\r\n    public FeeSubTypes: FeeSubType[];\r\n    public FeeConstraintTypes: DropdownItem[];\r\n\r\n    public IsLoading: boolean = false; \r\n    public DisplayCurrency: any;\r\n    //public OrderId: number;\r\n    constructor(private fb: FormBuilder, private feeService: FeeService, private route: ActivatedRoute, private dataService: DataService) {\r\n        this.CommonFees = [];\r\n        this.OtherFees = [];\r\n        this.SpCommonFees = [];\r\n        this.SpOtherFees = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);\r\n        this.Parent.addControl('Fees', this.fb.array([]));\r\n\r\n\r\n        this.IsLoading = true\r\n        this.feeService.getFeeTypes(0, true).subscribe(data => {\r\n            this.IsLoading = false\r\n            this.FeeTypes = data;\r\n\r\n        });\r\n\r\n        this.feeService.getFeeConstraintTypes()\r\n            .subscribe((data: DropdownItem[]) => { this.FeeConstraintTypes = data; });\r\n\r\n        this.feeService.getFeeSubTypes(0)\r\n            .subscribe((data: FeeSubType[]) => {\r\n                this.FeeSubTypes = data.filter(function (elem: FeeSubType) { return elem.FeeSubTypeId != 1 });\r\n            });\r\n\r\n        this.dataService.RemoveFeesSubject.subscribe(x => {\r\n            this.removeFeesOnCreateNew();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.CountryId && change.CountryId.currentValue) {\r\n            var currency = change.CountryId.currentValue;\r\n            if (currency == 1) {\r\n                this.DisplayCurrency = \"USD\";\r\n            } else if (currency == 2) {\r\n                this.DisplayCurrency = \"CAD\";\r\n            }           \r\n        }\r\n\r\n        if (change.Fees && change.Fees.currentValue) {\r\n            this.CommonFees = [];\r\n            this.OtherFees = [];\r\n            this.SpCommonFees = [];\r\n            this.SpOtherFees = [];\r\n          \r\n            let fees = this.Parent.get('Fees') as FormArray;\r\n            if (fees) {\r\n                fees.clear();\r\n            }\r\n            var currValues = change.Fees.currentValue as FeeModel[];\r\n            currValues.forEach((x: FeeModel) => {\r\n                if (x.FeeConstraintTypeId == null) {\r\n                    this.addGeneralFee(x.CommonFee, x);\r\n                } else {\r\n                    this.addSpecialFee(x.CommonFee, x.FeeConstraintTypeId, x);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getForm(model: FeeModel): FormGroup {\r\n        var byQtyModel = model.DeliveryFeeByQuantity;\r\n        var byQuantity = []; var _fb = this.fb;\r\n        if (byQtyModel != undefined && byQtyModel != null) {\r\n            byQtyModel.forEach(function (elem, idx) {\r\n                byQuantity.push(_fb.group({\r\n                    Currency: _fb.control(elem.Currency),\r\n                    MinQuantity: _fb.control(elem.MinQuantity, [Validators.required]),\r\n                    MaxQuantity: _fb.control(elem.MaxQuantity, [Validators.required]),\r\n                    Fee: _fb.control(elem.Fee, [Validators.required])\r\n                }));\r\n            });\r\n        }\r\n\r\n        var _specialDate = '';\r\n        if (model.SpecialDate != null && model.SpecialDate != undefined) {\r\n            _specialDate = moment(model.SpecialDate).format('MM/DD/YYYY');\r\n            _specialDate = _specialDate == '01/01/0001' ? '' : _specialDate;\r\n        }\r\n        var group = this.fb.group({\r\n            OrderId: this.fb.control(model.OrderId),\r\n            Currency: this.fb.control(this.DisplayCurrency),\r\n            TruckLoadType: this.fb.control(model.TruckLoadType),\r\n            TruckLoadCategoryId: this.fb.control(model.TruckLoadCategoryId),\r\n            IncludeInPPG: this.fb.control(model.IncludeInPPG),\r\n            CommonFee: this.fb.control(model.CommonFee),\r\n            FeeConstraintTypeId: this.fb.control(model.FeeConstraintTypeId),\r\n            SpecialDate: this.fb.control(_specialDate),\r\n            FeeTypeId: this.fb.control(model.FeeTypeId, [Validators.required]),\r\n            FeeSubTypeId: this.fb.control(model.FeeSubTypeId, [Validators.required]),\r\n            OtherFeeDescription: this.fb.control(model.OtherFeeDescription),\r\n            MinimumGallons: this.fb.control(model.MinimumGallons),\r\n            Fee: this.fb.control(model.Fee, [Validators.required]),\r\n            DeliveryFeeByQuantity: this.fb.array(byQuantity),\r\n        });\r\n        return group;\r\n    }\r\n\r\n    addGeneralFee(_commonFee: boolean, feeObj: FeeModel): void {\r\n        if (feeObj == null) {\r\n            feeObj = new FeeModel();\r\n            feeObj.CommonFee = _commonFee;\r\n        }\r\n        if (!_commonFee && (feeObj.FeeTypeId == undefined || feeObj.FeeTypeId == null || feeObj.FeeTypeId.indexOf('14') < 0)) {\r\n            feeObj.FeeTypeId = '14';\r\n        }\r\n        var feeGroup = this.getForm(feeObj);\r\n        if (_commonFee) {\r\n            this.CommonFees.push(feeGroup);\r\n        } else {\r\n            this.OtherFees.push(feeGroup);\r\n        }\r\n        (this.Parent.get('Fees') as FormArray).push(feeGroup);\r\n    }\r\n\r\n    removeGeneralFee(_commonFee: boolean, fee: FormGroup): void {\r\n        var _fees = this.Parent.get('Fees') as FormArray;\r\n        _fees.removeAt(_fees.controls.indexOf(fee));\r\n        if (_commonFee) {\r\n            this.CommonFees.splice(this.CommonFees.indexOf(fee), 1);\r\n        } else {\r\n            this.OtherFees.splice(this.OtherFees.indexOf(fee), 1);\r\n        }\r\n    }\r\n\r\n    addSpecialFee(_commonFee: boolean, typeId: number, feeObj: FeeModel): void {\r\n        if (feeObj == null) {\r\n            feeObj = new FeeModel();\r\n            feeObj.CommonFee = _commonFee;\r\n        }\r\n        if (!_commonFee && (feeObj.FeeTypeId == undefined || feeObj.FeeTypeId == null || feeObj.FeeTypeId.indexOf('14') < 0)) {\r\n            feeObj.FeeTypeId = '14';\r\n        }\r\n        feeObj.FeeConstraintTypeId = typeId;\r\n        var feeGroup = this.getForm(feeObj);\r\n        if (_commonFee) {\r\n            this.SpCommonFees.push(feeGroup);\r\n        } else {\r\n            this.SpOtherFees.push(feeGroup);\r\n        }\r\n        (this.Parent.get('Fees') as FormArray).push(feeGroup);\r\n    }\r\n\r\n    removeSpecialFee(_commonFee: boolean, fee: FormGroup): void {\r\n        var _fees = this.Parent.get('Fees') as FormArray;\r\n        _fees.removeAt(_fees.controls.indexOf(fee));\r\n        if (_commonFee) {\r\n            this.SpCommonFees.splice(this.SpCommonFees.indexOf(fee), 1);\r\n        } else {\r\n            this.SpOtherFees.splice(this.SpOtherFees.indexOf(fee), 1);\r\n        }\r\n    }\r\n\r\n    addByQtyFee(fee: FormGroup): void {\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        var lastFee = _fees.controls[_fees.controls.length - 1].get('Fee').value;\r\n        var feeObj = new FeeModel(); feeObj.Fee = lastFee;\r\n        _fees.push(this.getForm(feeObj));\r\n    }\r\n\r\n    removeByQtyFee(fee: FormGroup, index: number): void {\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        _fees.removeAt(index);\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n\r\n    isInvalid(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).invalid &&\r\n            (drop.get(name).dirty || drop.get(name).touched);\r\n    }\r\n\r\n    isRequired(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).errors.required;\r\n    }\r\n\r\n    isMin(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).errors.min;\r\n    }\r\n     requiredIfValidator(predicate) {\r\n        return (formControl => {\r\n            if (!formControl.parent) {\r\n                return null;\r\n            }\r\n            if (predicate()) {\r\n                return Validators.required(formControl);\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n    removeFeesOnCreateNew() {\r\n        this.CommonFees.forEach(commonFee => {\r\n            this.removeGeneralFee(true, commonFee);\r\n        })\r\n        this.OtherFees.forEach(OtherFee => {\r\n            this.removeGeneralFee(false, OtherFee);\r\n        })\r\n        this.SpCommonFees.forEach(SpCommonFee => {\r\n            this.removeSpecialFee(true, SpCommonFee);\r\n        })\r\n        this.SpOtherFees.forEach(SpOtherFee => {\r\n            this.removeSpecialFee(false, SpOtherFee);\r\n        })\r\n    }\r\n}\r\n","<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading</div>\r\n    </div>\r\n</div>\r\n<div [formGroup]=\"Parent\" class=\"well box-shadow\">\r\n    <div formArrayName=\"Fees\">\r\n        <h4>Fees</h4>\r\n        <div class=\"mt10 mb5\">\r\n            <b>General</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let commonFee of CommonFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"commonFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">                    \r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeGeneralFee(true, commonFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addGeneralFee(true, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n        <div class=\"mt10\">\r\n            <b>Other</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let otherFee of OtherFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"otherFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeGeneralFee(false, otherFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addGeneralFee(false, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n        <div class=\"mt10\">\r\n            <h4>Weekend / Holiday Fee(s)</h4>\r\n        </div>\r\n        <div class=\"mt10 mb5\">\r\n            <b>General</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let spCommonFee of SpCommonFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"spCommonFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon\" (click)=\"removeSpecialFee(true, spCommonFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addSpecialFee(true, 1, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n        <div class=\"mt10 mb5\">\r\n            <b>Other</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let spOtherFee of SpOtherFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"spOtherFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeSpecialFee(false, spOtherFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addSpecialFee(false, 1, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { DropdownItem, DropdownItemExt, FeeSubType } from 'src/app/statelist.service';\r\nimport { FeeService } from '../../../invoice/services/fee.service';\r\nimport { ByQuantityModel } from '../../../invoice/models/DropDetail';\r\n\r\n@Component({\r\n  selector: 'app-fee-type',\r\n  templateUrl: './fee-type.component.html',\r\n  styleUrls: ['./fee-type.component.css']\r\n})\r\nexport class FeeTypeComponent implements OnInit {\r\n\r\n    @Input() Parent: FormGroup;\r\n    @Input() FeeGroup: FormGroup;\r\n\r\n    @Input() Currency: string; // Input property from fee-list component \r\n\r\n    public DisplayCurrency: any;\r\n\r\n    //----------------DDL------------------\r\n\r\n    @Input() public FeeTypes: DropdownItemExt[];\r\n    @Input() public FeeSubTypes: FeeSubType[];\r\n    @Input() public FeeConstraintTypes: DropdownItem[];\r\n    public DisplayFeeTypes: FeeSubType[];\r\n\r\n    public maxDate = new Date();\r\n    public minDate = new Date();\r\n\r\n\r\n    constructor(private fb: FormBuilder, private feeService: FeeService) {\r\n        this.DisplayFeeTypes = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.FeeGroup.setValidators(this.feeNameRequired('FeeTypeId', 'OtherFeeDescription', 'CommonFee'));\r\n        if (this.FeeSubTypes != null && this.FeeSubTypes != undefined)\r\n            this.DisplayFeeTypes = this.FeeSubTypes.slice();\r\n        this.DisplayCurrency = this.Currency;\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.FeeSubTypes && change.FeeSubTypes.currentValue != null) {\r\n            var subTypes = change.FeeSubTypes.currentValue as FeeSubType[];\r\n            this.DisplayFeeTypes = subTypes;\r\n        }\r\n    }\r\n\r\n    updateSubType(feeTypeId: string): void {\r\n        this.DisplayFeeTypes = this.FeeSubTypes.slice().filter(function (elem) { return elem.FeeTypeId == feeTypeId; });\r\n    }\r\n\r\n    getForm(_fee: ByQuantityModel): FormGroup {\r\n        return this.fb.group({\r\n            Currency: this.fb.control(_fee.Currency),\r\n            MinQuantity: this.fb.control(_fee.MinQuantity, [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\r\n            MaxQuantity: this.fb.control(_fee.MaxQuantity, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.required]),\r\n            Fee: this.fb.control(_fee.Fee, [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)])\r\n        });\r\n    }\r\n\r\n    addByQtyFee(fee: FormGroup, feeObj: ByQuantityModel): void {\r\n        if (feeObj == null) {\r\n            feeObj = new ByQuantityModel();\r\n        }\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        if (_fees.controls.length > 0) {\r\n            var lastMax = _fees.controls[_fees.controls.length - 1].get('MaxQuantity');\r\n            lastMax.setValidators([Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]);\r\n            feeObj.MinQuantity = lastMax.value;\r\n        }\r\n        var _form = this.getForm(feeObj);\r\n\r\n        _fees.push(_form);\r\n    }\r\n\r\n    removeByQtyFee(fee: FormGroup, index: number): void {\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        _fees.removeAt(index);\r\n        if (_fees.controls.length > 0) {\r\n            var lastMax = _fees.controls[_fees.controls.length - 1].get('MaxQuantity');\r\n            lastMax.setValidators([Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.required]);\r\n        }\r\n    }\r\n\r\n    isInvalid(group: FormGroup, name: string): boolean {\r\n        return group.get(name).invalid &&\r\n            (group.get(name).dirty || group.get(name).touched || group.get(name).invalid);\r\n    }\r\n\r\n    isRequired(group: FormGroup, name: string): boolean {\r\n        return group.get(name).errors.required;\r\n    }\r\n\r\n    isFeeNameRequired(group: FormGroup, name: string): boolean {\r\n        return group.get(name).errors.required;\r\n    }\r\n\r\n    handleByQuantity(group: FormGroup, subTypeId: number): void {\r\n        var fee = group.get('Fee');\r\n        if (subTypeId == 3) {\r\n            fee.setValue(0);\r\n        } else {\r\n            if (fee.value == 0) {\r\n                fee.setValue('');\r\n            }\r\n            (group.get('DeliveryFeeByQuantity') as FormArray).clear();\r\n        }\r\n    }\r\n\r\n    feeNameRequired(field1Name: string, field2Name: string, field3Name: string): any {\r\n        let field1 = this.FeeGroup.controls[field1Name];\r\n        let field2 = this.FeeGroup.controls[field2Name];\r\n        let field3 = this.FeeGroup.controls[field3Name];\r\n        if (field3.value && (field1.value == null || field1.value == '')) {\r\n            return Validators.required(field1);\r\n        } else if (!field3.value && (field2.value == null || field2.value.replace(/\\s/g, '') == '')) {\r\n            return Validators.required(field2);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"row\" [formGroup]=\"FeeGroup\">\r\n    <div class=\"col-sm-3\">\r\n        <select formControlName=\"FeeTypeId\" class=\"form-control\"\r\n                [style.display]=\"FeeGroup.get('CommonFee').value ? 'block' : 'none'\"\r\n                #feeTypeId (change)=\"updateSubType(FeeGroup.get('FeeTypeId').value)\">\r\n            <option [value]=\"null\">Select Fee</option>\r\n            <option *ngFor=\"let ft of FeeTypes\" [value]=\"ft.Code\" [selected]=\"ft.Code==FeeGroup.get('FeeTypeId').value\">{{ft.Name}}</option>\r\n        </select>\r\n        <div class=\"mb15 form-group\">\r\n            <input type=\"text\" formControlName=\"OtherFeeDescription\" [style.display]=\"FeeGroup.get('CommonFee').value ? 'none' : 'block'\" class=\"form-control\" placeholder=\"Fee Name\" />\r\n            <span *ngIf=\"isInvalid(FeeGroup, 'FeeTypeId') || isInvalid(FeeGroup, 'OtherFeeDescription')\" class=\"color-maroon\">\r\n                <span *ngIf=\"isRequired(FeeGroup, 'FeeTypeId') || isFeeNameRequired(FeeGroup, 'OtherFeeDescription')\">\r\n                    Required.\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"form-group\">\r\n            <select formControlName=\"FeeSubTypeId\" class=\"form-control\" (focus)=\"updateSubType(FeeGroup.get('FeeTypeId').value)\"\r\n                    (change)=\"handleByQuantity(FeeGroup, FeeGroup.get('FeeSubTypeId').value)\">\r\n                <option [value]=\"null\">Select Fee Type</option>\r\n                <option *ngFor=\"let fst of DisplayFeeTypes\" [value]=\"fst.FeeSubTypeId\"\r\n                        [selected]=\"fst.FeeSubTypeId==FeeGroup.get('FeeSubTypeId').value\">\r\n                    {{fst.SubTypeName}}\r\n                </option>\r\n            </select>\r\n            <span *ngIf=\"isInvalid(FeeGroup, 'FeeSubTypeId')\" class=\"color-maroon pa\">\r\n                <span *ngIf=\"isRequired(FeeGroup, 'FeeSubTypeId')\">\r\n                    Required.\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"FeeGroup.get('FeeConstraintTypeId').value!=null\">\r\n        <div class=\"form-group\">\r\n            <select formControlName=\"FeeConstraintTypeId\" *ngIf=\"FeeGroup.get('FeeConstraintTypeId').value\" class=\"form-control\">\r\n                <option *ngFor=\"let fc of FeeConstraintTypes\" [value]=\"fc.Id\"\r\n                        [selected]=\"fc.Id==FeeGroup.get('FeeConstraintTypeId').value\">\r\n                    {{fc.Name}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"FeeGroup.get('FeeConstraintTypeId').value==2\">\r\n        <div class=\"form-group\">\r\n            <input type=\"text\" formControlName=\"SpecialDate\" class=\"form-control datepicker\" placeholder=\"Date\" \r\n                   [maxDate]=\"maxDate\"   [minDate]=\"minDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" \r\n                   (onDateChange)=\"FeeGroup.get('SpecialDate').setValue($event)\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"FeeGroup.get('FeeTypeId').value == '8'\">\r\n        <input type=\"text\" formControlName=\"MinimumGallons\" class=\"form-control\" placeholder=\"Min Quantity\" />\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n                <input type=\"number\" formControlName=\"Fee\" class=\"form-control\" *ngIf=\"FeeGroup.get('FeeSubTypeId').value != 3\" placeholder=\"Fee\" />\r\n                <div class=\"input-group-addon fs12\" *ngIf=\"FeeGroup.get('FeeSubTypeId').value != 3\">{{DisplayCurrency}}</div>\r\n            </div>\r\n            <span *ngIf=\"isInvalid(FeeGroup, 'Fee')\" class=\"color-maroon\">\r\n                <span *ngIf=\"isRequired(FeeGroup, 'Fee')\">\r\n                    Required.\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-9\" *ngIf=\"FeeGroup.get('FeeSubTypeId').value == 3\">\r\n        <div formArrayName=\"DeliveryFeeByQuantity\">\r\n            <div *ngFor=\"let byQty of FeeGroup.get('DeliveryFeeByQuantity')['controls'];  let i = index;\">\r\n                <div class=\"row\" [formGroupName]=\"i\">\r\n                    <div class=\"col-sm-3 pr0 mb5\">\r\n                        <input type=\"hidden\" formControlName=\"Currency\" />\r\n                        <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" readonly=\"readonly\" placeholder=\"Min Quantity\" />\r\n                    </div>\r\n                    <div class=\"col-sm-3 pr0 mb5\">\r\n                        <input type=\"text\" formControlName=\"MaxQuantity\" class=\"form-control\" placeholder=\"Max Quantity\" />\r\n                        <span *ngIf=\"isInvalid(byQty, 'MaxQuantity')\" class=\"color-maroon\">\r\n                            <span *ngIf=\"isRequired(byQty, 'MaxQuantity')\">\r\n                                Required.\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-3 pr0 mb5\">\r\n                        <input type=\"text\" formControlName=\"Fee\" class=\"form-control\" placeholder=\"Fee\" />\r\n                        <span *ngIf=\"isInvalid(byQty, 'Fee')\" class=\"color-maroon\">\r\n                            <span *ngIf=\"isRequired(byQty, 'Fee')\">\r\n                                Required.\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-1\">\r\n                        <a (click)=\"removeByQtyFee(FeeGroup, i)\"><i class=\"fa fa-trash-alt color-maroon mt10\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb10\">\r\n                <div class=\"col-sm-12\">\r\n                    <a (click)=\"addByQtyFee(FeeGroup, null)\"><i class=\"fa fa-plus-circle\"></i> Add Quantity Range</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-2 text-lg-right mt-2\">\r\n        <input type=\"checkbox\" formControlName=\"IncludeInPPG\">\r\n        <label class=\"ml-2\">Include In PPG </label>\r\n        <input type=\"hidden\" formControlName=\"Currency\" />\r\n    </div>\r\n\r\n</div>\r\n","<form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit(2)\">\r\n\r\n    <div>\r\n        <div *ngIf=\"AccessorialFeeMode!='CREATE'\">\r\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm()\"><i class=\"fa fa-plus-circle\"></i>Create New</button>\r\n        </div>\r\n        <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n            <div class=\"well bg-white\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Table Name <span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"TableName\" class=\"form-control\" />\r\n                        <div *ngIf=\"rcForm.get('TableName').invalid && rcForm.get('TableName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('TableName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TableTypes\">Table Type <span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                     class=\"single-select\"\r\n                                                     id=\"TableTypes\"\r\n                                                     [settings]=\"SingleSelectSettingsById\"\r\n                                                     [data]=\"TableTypeList\"\r\n                                                     [placeholder]=\"'Select Type'\"\r\n                                                     (onSelect)=\"onTableTypeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('TableTypes').invalid && rcForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('TableTypes').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Customers\">Select Customer(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                         id=\"Customers\"\r\n                                                         [settings]=\"MultiSelectSettingsById\"\r\n                                                         [data]=\"CustomerList\"\r\n                                                         (onSelect)=\"onCustomersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCustomersDeSelect($event)\"\r\n                                                         [placeholder]=\"'Select Customers'\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"IsCustomerSelected && rcForm.get('Customers').invalid && rcForm.get('Customers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Customers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Carriers\">Select Carrier(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                         id=\"Carriers\"\r\n                                                         [settings]=\"MultiSelectSettingsById\"\r\n                                                         [data]=\"CarrierList\"\r\n                                                         (onSelect)=\"onCarriersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCarriersDeSelect($event)\"\r\n                                                         [placeholder]=\"'Select Carriers'\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"IsCarrierSelected && rcForm.get('Carriers').invalid && rcForm.get('Carriers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Carriers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"SourceRegions\">Select Source Region(s)<span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                     id=\"SourceRegions\"\r\n                                                     [settings]=\"MultiSelectSettingsById\"\r\n                                                     [data]=\"SourceRegionList\"\r\n                                                     [placeholder]=\"'Select Source Regions'\"\r\n                                                     (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('SourceRegions').invalid && rcForm.get('SourceRegions').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('SourceRegions').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsSourceRegionSelected}\">\r\n                                <label for=\"TerminalsAndBulkPlants\">Select Terminal(s)/BulkPlant(s)</label>\r\n                                <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                      [data]=\"TerminalsAndBulkPlantList\"\r\n                                                      formControlName=\"TerminalsAndBulkPlants\"\r\n                                                      [settings]=\"MultiSelectSettingsByGroup\">\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Effective Start Date <span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\"\r\n                               placeholder=\"Effective Start Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                               [maxDate]=\"maxDate\"\r\n                               (onDateChange)=\"rcForm.get('StartDate').setValue($event)\" />\r\n                        <div *ngIf=\"rcForm.get('StartDate').invalid && rcForm.get('StartDate').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('StartDate').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Effective End Date </label>\r\n                        <input type=\"text\" formControlName=\"EndDate\" class=\"form-control datepicker\"\r\n                               placeholder=\"Effective End Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                               [minDate]=\"minDate\" [maxDate]=\"maxDate\"\r\n                               (onDateChange)=\"rcForm.get('EndDate').setValue($event)\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <app-fee-list [Parent]=\"rcForm\" [CountryId]=\"SelectedCountryId\" [Fees]=\"Fees\"></app-fee-list>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"text-right \">\r\n                <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n                <input type=\"button\" class=\"btn btn-lg btn-light\" [disabled]=\"disableInputControls ? true : null\" value=\"Draft\" (click)=\"onSubmit(1)\">\r\n                <input type=\"button\" class=\"btn btn-lg btn-primary\" [disabled]=\"disableInputControls ? true : null\" value=\"Submit\" (click)=\"onSubmit(2)\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CreateAccessorialFeeModel } from '../model/accessorial-fees';\r\nimport * as moment from 'moment';\r\nimport { from, forkJoin, merge } from 'rxjs';\r\nimport { FeeModel } from 'src/app/invoice/models/DropDetail';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport {AccessorialFeesService } from '../service/accessorialfees.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { map, mergeMap, pairwise, startWith } from 'rxjs/operators';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { FreightTableStatus, SourceRegionInputModel, TableType } from 'src/app/app.enum';\r\nimport { DataService } from '../../carrier/service/data.service';\r\ndeclare var currentUserCompanyId: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-accessorial-fees',\r\n  templateUrl: './create-accessorial-fees.component.html',\r\n  styleUrls: ['./create-accessorial-fees.component.css']\r\n})\r\nexport class CreateAccessorialFeesComponent implements OnInit {\r\n    public rcForm: FormGroup;\r\n    public minDate = new Date();\r\n    public maxDate = new Date();\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n\r\n    public IsLoading: boolean = false;\r\n    public SelectedCountryId: number = -1;\r\n    public CurrentCompanyId: number;\r\n    public AccessorialFeeId?: number;\r\n    public AccessorialFeeMode: string = \"CREATE\";\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n\r\n    public Fees: FeeModel[] = [];\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    \r\n    public decimalSupportedRegx = /^[0-9]\\d{0,9}(\\.\\d{0,5})?%?$/;\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    public Afmodel: CreateAccessorialFeeModel;\r\n    public disableInputControls: boolean = false;\r\n    public ServiceResponse: any;\r\n    public IsEditable: boolean = true;\r\n    public IsLoaded: boolean = true;\r\n    @Output() onPageSubmit = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService, private dataService: DataService,\r\n        private regionService: RegionService, private carrierService: CarrierService, private accesorialFeeService: AccessorialFeesService, private http: HttpClient,\r\n        @Inject(DOCUMENT) private _document: Document) { }\r\n\r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n\r\n        this.CurrentCompanyId = Number(currentUserCompanyId);\r\n        this.getDefaultServingCountry();\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select Terminals or Bulk Plants\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.rcForm = this.createForm();\r\n        this.getTableTypes();\r\n        this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Master, Name: \"Master\" }]);// default will master\r\n        this.IsMasterSelected = true;\r\n        \r\n        this.getSourceRegions(TableType.Master.toString());\r\n\r\n        this.accesorialFeeService.onSelectedAccessorialFeeId.subscribe(s => {\r\n            if (s) {\r\n                let stringify = JSON.parse(s);\r\n                this.AccessorialFeeId = stringify.AccessorialFeeId;\r\n                this.AccessorialFeeMode = stringify.Mode;\r\n            }\r\n        })\r\n\r\n        let id = localStorage.getItem(\"AccessorialFeeId\");\r\n        if (id && +id > 0) {\r\n            this.AccessorialFeeId = Number(id);\r\n            this.AccessorialFeeMode = \"VIEW\";\r\n            localStorage.removeItem(\"AccessorialFeeId\");\r\n        }\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.SourceRegionChange(prev, next);\r\n            });\r\n    }\r\n\r\n\r\n    getDefaultServingCountry() {\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n        });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await (data);\r\n            this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == TableType.Master));// default will master\r\n            this.rcForm.controls['TableTypeId'].setValue(TableType.Master);\r\n            this.IsMasterSelected = true;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(async (data) => {\r\n            this.SourceRegionList = await (data);\r\n        });\r\n    }\r\n\r\n    private createForm() {\r\n        return this.fb.group({\r\n            AccessorialFeeId: new FormControl(''),\r\n            TableTypeId: new FormControl(),\r\n            TableName: new FormControl('', [Validators.required]),\r\n            TableTypes: new FormControl('', [Validators.required]),\r\n            Customers: new FormControl(''),\r\n            Carriers: new FormControl(''),\r\n            SourceRegions: new FormControl('', [Validators.required]),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            StartDate: new FormControl(\"\", [Validators.required]),\r\n            EndDate: new FormControl(\"\"),\r\n            StatusId: new FormControl(''),\r\n        })\r\n    }\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n\r\n    }\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.rcForm.get('Carriers').patchValue([]);\r\n        this.rcForm.get('Customers').patchValue([]);\r\n        this.rcForm.controls['TableTypeId'].setValue(item.Id);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]); //\"Carriers,Customers\"\r\n                break;\r\n            case 2: // customer\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                this.IsCustomerSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Customers')], [this.rcForm.get('Carriers')]);\r\n                break;\r\n            case 3: //carrier\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                this.IsCarrierSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers')], [this.rcForm.get('Customers')]);\r\n                break;\r\n        }\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n    \r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        var sr = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        this.IsSourceRegionSelected = sr.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await (data);\r\n        });\r\n    }\r\n\r\n    public SourceRegionChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n      \r\n        this.IsSourceRegionSelected = false\r\n        var ids = [];\r\n        \r\n        let selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions.length > 0) {\r\n            selectedSourceRegions.forEach(s => ids.push(s.Id));\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(ids.join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList);\r\n                this.IsSourceRegionSelected = true;\r\n            });\r\n        }\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n            });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        var selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.IsSourceRegionSelected = true;\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {             \r\n                this.TerminalsAndBulkPlantList = await (data);\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSubmit(status: any): void {\r\n        let accessorialFeeName = this.rcForm.get('TableName').value;\r\n        if (accessorialFeeName == null || accessorialFeeName == undefined || accessorialFeeName == \"\")\r\n        {\r\n            Declarations.msgerror(\" Table Name is required\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        let AccessorialDate = this.rcForm.get('StartDate').value;\r\n        if (AccessorialDate == null || AccessorialDate == undefined || AccessorialDate == \"\")\r\n        {\r\n            Declarations.msgerror(\" Date is required\", undefined, undefined);\r\n            return;\r\n\r\n        }\r\n\r\n        let feeModel = this.createPostObject(status);\r\n        if (feeModel.Status == FreightTableStatus.Draft && +this.rcForm.controls['StatusId'].value == FreightTableStatus.Published) {\r\n            if (this.rcForm.get('AccessorialFeeId').value != \"\") {\r\n                Declarations.msgerror(\"Not allowed. \" + this.rcForm.get('TableName').value + \" is in published mode.\", undefined, undefined);\r\n                this.IsLoading = false;\r\n                return;\r\n            }\r\n        }\r\n        else if (feeModel.Status == FreightTableStatus.Published) {\r\n            this.rcForm.markAllAsTouched();\r\n            if (this.rcForm.valid) {\r\n                let fees = this.rcForm.get('Fees').value as DropdownItem[];\r\n                if (fees == null || fees == undefined || fees.length == 0) {\r\n                    Declarations.msgerror(\"Please add Fee(s)\", undefined, undefined);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.rcForm.get('AccessorialFeeId').value != \"\") {\r\n            this.accesorialFeeService.updateAccessorialFee(feeModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \" edited\";\r\n                        if (feeModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(feeModel.Name + message + \" successfully.\", undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeViewType(2);\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        } else {\r\n            this.accesorialFeeService.createAccessorialFee(feeModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \"\";\r\n                        if (feeModel.Status == FreightTableStatus.Published) {\r\n                            message = \" created\"\r\n                        }\r\n                        else if (feeModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(feeModel.Name + message + \" successfully.\", undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeViewType(2);\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    public clearForm() {\r\n        this.rcForm.get('TableName').patchValue([]);\r\n        this.rcForm.get('TableTypes').patchValue([]);\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.rcForm.get('TerminalsAndBulkPlants').patchValue([]);\r\n        this.rcForm.get('StartDate').patchValue([]);\r\n        this.rcForm.get('EndDate').patchValue([]);\r\n        this.rcForm.controls['Fees'].reset();\r\n\r\n        this.disableInputControls = false;\r\n        this.dataService.removeFeesOnCreateNewSubject();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.AccessorialFeeMode == \"VIEW\") {\r\n            this.disableInputControls = false;\r\n            this.AccessorialFeeId = null;\r\n        }\r\n       \r\n        if (this.AccessorialFeeMode == \"EDIT\") {\r\n            this.AccessorialFeeId = null;\r\n        }\r\n\r\n        if (this.AccessorialFeeId != null) {\r\n            this.changeToViewTab();\r\n        }\r\n        else {\r\n            this._document.defaultView.location.reload();\r\n        } \r\n    }\r\n\r\n    public changeToViewTab() {\r\n        this.accesorialFeeService.onSelectedTabChanged.next(1);\r\n\r\n    }\r\n\r\n    public removeValidators(form: FormGroup) {\r\n        for (const key in form.controls) {\r\n            if (key == 'TableName') {\r\n                continue;\r\n            }\r\n            else {\r\n                form.get(key).clearValidators();\r\n                form.get(key).updateValueAndValidity();\r\n            }            \r\n        }\r\n    }\r\n\r\n    public changeViewType(viewType: any): void {\r\n        this.onPageSubmit.emit(viewType);\r\n    }\r\n\r\n\r\n    public createPostObject(status: any): CreateAccessorialFeeModel {\r\n        let feeModel = new CreateAccessorialFeeModel();\r\n        feeModel.Id = this.rcForm.get('AccessorialFeeId').value;\r\n        feeModel.Name = this.rcForm.get('TableName').value;\r\n        feeModel.Status = status;\r\n        let selectedTerminalBulkplant = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n        if (selectedTerminalBulkplant != null && selectedTerminalBulkplant != undefined && selectedTerminalBulkplant.length > 0)\r\n        {\r\n            feeModel.TerminalsAndBulkPlants = this.rcForm.get('TerminalsAndBulkPlants').value;\r\n        }\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0)\r\n        {\r\n            selectedCustomers.forEach(t => feeModel.CustomerIds.push(t.Id));\r\n        }\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0)\r\n        {\r\n            selectedCarriers.forEach(t => feeModel.CarrierIds.push(t.Id));\r\n        }\r\n        let endDate = this.rcForm.get('EndDate').value;\r\n        let startDate = this.rcForm.get('StartDate').value;\r\n        if (endDate == \"\" || endDate == undefined || endDate == null)\r\n        {\r\n            endDate = null;\r\n        }\r\n        if (startDate == \"\" || startDate == undefined || startDate == null)\r\n        {\r\n            startDate = null;\r\n        }\r\n        feeModel.StartDate = startDate;\r\n        feeModel.EndDate = endDate;        \r\n        feeModel.Fees = this.rcForm.get('Fees').value;\r\n        let sourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (sourceRegions != null && sourceRegions != undefined && sourceRegions.length > 0) {\r\n            sourceRegions.forEach(t => feeModel.SourceRegionIds.push(t.Id));\r\n        }\r\n        let tableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        if (tableType != null && tableType != undefined && tableType.length > 0)\r\n        {\r\n            feeModel.TableType = tableType[0].Id;\r\n        }\r\n        feeModel.CountryId = this.SelectedCountryId;\r\n        \r\n        return feeModel;\r\n    }\r\n\r\n    public getBulkPlantTerminalIds(type: string): number[] {\r\n        let Ids = [];\r\n        if (type === 'Terminals') {\r\n            let selectedTerminalBulkplant = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n            let selectedTerminals = selectedTerminalBulkplant.filter(t => t.Code === 'Terminals');\r\n            if (selectedTerminals != null && selectedTerminals != undefined && selectedTerminals.length > 0) {\r\n                selectedTerminals.forEach(function (terminal) {\r\n                    let terminalId = parseInt(terminal.Id.replace(\"Terminals_\", \"\"));\r\n                    if (!isNaN(terminalId)) {\r\n                        Ids.push(terminalId);\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n        else if (type === 'BulkPlants') {\r\n            let selectedTerminalBulkplant = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n            let selectedBulkPlants = selectedTerminalBulkplant.filter(t => t.Code === 'BulkPlants');\r\n            if (selectedBulkPlants != null && selectedBulkPlants != undefined && selectedBulkPlants.length > 0) {\r\n                selectedBulkPlants.forEach(function (bulkplant) {\r\n                    let bulkplantId = parseInt(bulkplant.Id.replace(\"BulkPlants_\", \"\"));\r\n                    if (!isNaN(bulkplantId)) {\r\n                        Ids.push(bulkplantId);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return Ids;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.AccessorialFeeId != null && this.AccessorialFeeId != undefined) {\r\n            this.getAccessorialFee(this.AccessorialFeeId); //existing Accessorial Fee.\r\n        }\r\n    }\r\n\r\n    //GET\r\n    private getAccessorialFee(accessorialFeeId: number): void {\r\n        this.IsLoading = true;\r\n        this.IsLoaded = false;\r\n        let sorceRegionIds: string = \"\";\r\n        this.http.get(this.accesorialFeeService.getAccessorialFeeUrl + accessorialFeeId).pipe(\r\n            map(af => {\r\n                const afModel = af as CreateAccessorialFeeModel;\r\n                return afModel;\r\n            }),\r\n            mergeMap(afModel => {\r\n                this.Afmodel = afModel;\r\n                let companyIds: number[] = [];\r\n                if (this.AccessorialFeeId != null && this.AccessorialFeeMode.toUpperCase() == \"COPY\") { // on copy \r\n                    this.Afmodel.Id = null;\r\n                    this.Afmodel.Name = \"\";\r\n                }\r\n                const customers = this.http.get(this.fuelsurchargeService.getSupplierCustomersUrl);\r\n                const carriers = this.http.get(this.regionService.getCarriersUrl);\r\n\r\n                if (this.Afmodel.TableType == TableType.Customer && this.Afmodel.CustomerIds.length > 0) {\r\n                    this.Afmodel.CustomerIds.forEach(s => companyIds.push(s));\r\n                }\r\n                if (this.Afmodel.TableType == TableType.Carrier && this.Afmodel.CarrierIds.length > 0) {\r\n                    this.Afmodel.CarrierIds.forEach(s => companyIds.push(s));\r\n                }\r\n\r\n                var sourceRegionInput = new SourceRegionInputModel();\r\n                sourceRegionInput.TableType = this.Afmodel.TableType.toString();\r\n                sourceRegionInput.CustomerId = this.Afmodel.CustomerIds;\r\n                sourceRegionInput.CarrierId = this.Afmodel.CarrierIds;\r\n\r\n                const sourceRegions = this.http.post(this.fuelsurchargeService.getSourceRegionsUrl, sourceRegionInput);\r\n                const tableTypes = this.http.get(this.fuelsurchargeService.getTableTypesUrl);\r\n\r\n                if (this.Afmodel.SourceRegionIds != null && this.Afmodel.SourceRegionIds != undefined && this.Afmodel.SourceRegionIds.length > 0) {\r\n                    sorceRegionIds = this.Afmodel.SourceRegionIds.map(s => s).join(',');\r\n                    this.IsSourceRegionSelected = true;\r\n                }\r\n                const terminalAndBulkPlans = this.http.get(this.fuelsurchargeService.getTerminalsAndBulkPlantsUrl + sorceRegionIds)\r\n                return forkJoin([customers, carriers, sourceRegions, terminalAndBulkPlans, tableTypes]);\r\n            })).subscribe(result => {\r\n                this.IsLoading = false;\r\n                this.IsMasterSelected = false;\r\n                this.IsCustomerSelected = false;\r\n                this.IsCarrierSelected = false;\r\n\r\n                if (this.Afmodel.TableType == TableType.Master) {\r\n                    this.IsMasterSelected = true;\r\n                }\r\n                else if (this.Afmodel.TableType == TableType.Customer) {\r\n                    this.IsCustomerSelected = true;\r\n                }\r\n                else if (this.Afmodel.TableType == TableType.Carrier) {\r\n                    this.IsCarrierSelected = true;\r\n                }\r\n\r\n                if (this.Afmodel.TableType != TableType.Master) {\r\n                    this.CustomerList = result[0] as DropdownItem[];\r\n                    this.CarrierList = result[1] as DropdownItem[];\r\n                }\r\n\r\n                this.SourceRegionList = result[2] as DropdownItem[];\r\n                if (this.Afmodel.TerminalsAndBulkPlants != null && this.Afmodel.TerminalsAndBulkPlants != undefined && this.Afmodel.TerminalsAndBulkPlants.length > 0) {\r\n                    this.TerminalsAndBulkPlantList = result[3] as DropdownItemExt[];\r\n                }\r\n                this.TableTypeList = result[4] as DropdownItem[];\r\n                this.Edit(this.Afmodel);\r\n\r\n            });\r\n    }\r\n\r\n    //Edit\r\n    private Edit(_af: CreateAccessorialFeeModel) {\r\n      if (this.rcForm) {\r\n\r\n            if (this.AccessorialFeeMode != \"COPY\") {\r\n                this.rcForm.controls['AccessorialFeeId'].setValue(_af.Id);\r\n                this.rcForm.controls['TableTypes'].setValue(_af.TableType);\r\n                this.rcForm.controls['TableName'].setValue(_af.Name);\r\n                this.IsEditable = false;\r\n            } else {\r\n                this.AccessorialFeeId = null;\r\n            }\r\n           \r\n          this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == _af.TableType));\r\n\r\n            if (_af.TableType != TableType.Master) this.IsMasterSelected = false;\r\n\r\n            if (_af.CustomerIds != null && _af.CustomerIds != undefined && _af.CustomerIds.length > 0) {\r\n                if (this.CustomerList.length > 0 && _af.CustomerIds.length > 0) this.rcForm.controls['Customers'].setValue(this.CustomerList.filter(this.IdInComparer(_af.CustomerIds)));\r\n            }\r\n\r\n            if (_af.CarrierIds != null && _af.CarrierIds != undefined && _af.CarrierIds.length > 0) {\r\n                if (this.CarrierList.length > 0 && _af.CarrierIds.length > 0) this.rcForm.controls['Carriers'].setValue(this.CarrierList.filter(this.IdInComparer(_af.CarrierIds)));\r\n            }\r\n\r\n            if (this.SourceRegionList != null && this.SourceRegionList != undefined && _af.SourceRegionIds != null && _af.SourceRegionIds != undefined && _af.SourceRegionIds.length > 0) {\r\n                if (this.SourceRegionList.length > 0 && _af.SourceRegionIds.length > 0)\r\n                    this.rcForm.controls['SourceRegions'].setValue(this.SourceRegionList.filter(this.IdInComparer(_af.SourceRegionIds)));\r\n            }\r\n            if (this.TerminalsAndBulkPlantList != null && this.TerminalsAndBulkPlantList != undefined && _af.TerminalsAndBulkPlants != null && _af.TerminalsAndBulkPlants != undefined && _af.TerminalsAndBulkPlants.length > 0) {\r\n                if (this.TerminalsAndBulkPlantList.length > 0 && _af.TerminalsAndBulkPlants.length > 0) {\r\n                    this.rcForm.controls['TerminalsAndBulkPlants'].setValue(this.TerminalsAndBulkPlantList.filter(this.ComparerWithId(_af.TerminalsAndBulkPlants)));\r\n                }\r\n            }\r\n\r\n            this.rcForm.get('StartDate').setValue(moment(_af.StartDate).format('MM/DD/YYYY'));\r\n\r\n            if (_af.EndDate != null && _af.EndDate != undefined) {\r\n                this.rcForm.get('EndDate').setValue(moment(_af.EndDate).format('MM/DD/YYYY'));\r\n            }\r\n\r\n            this.Fees = _af.Fees;\r\n            \r\n            this.rcForm.controls['StatusId'].setValue(_af.Status);\r\n            this.IsLoading = false;\r\n            this.IsLoaded = true;\r\n        }\r\n\r\n        if (this.AccessorialFeeMode == \"VIEW\") {\r\n            this.disableInputControls = true;\r\n        }\r\n    }\r\n\r\n    private IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n              \r\n                return other == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n\r\n    private ComparerWithId(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                //console.log(other + \" : \" + current.Id);\r\n                return other.Id == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { AccessorialFeesService } from '../service/accessorialfees.service';\r\n@Component({\r\n    selector: 'app-master',\r\n    templateUrl: './master.component.html',\r\n    styleUrls: ['./master.component.css']\r\n})\r\nexport class MasterComponent implements OnInit, AfterViewInit {\r\n    viewType = 0\r\n    constructor(private accessorialFeeService: AccessorialFeesService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        let _viewType = localStorage.getItem(\"fuelSurchargeTabId\");\r\n        if (_viewType && +_viewType > 0) {\r\n            this.viewType = +_viewType;\r\n        }\r\n\r\n        this.accessorialFeeService.onSelectedTabChanged.subscribe(s => {\r\n            if (s == 2) {\r\n                this.viewType = 2;\r\n\r\n            }\r\n            else {\r\n                this.viewType = 1;\r\n            }\r\n        })\r\n        this.viewType = +_viewType;\r\n\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        this.changeViewType(this.viewType)\r\n    }\r\n\r\n    public changeViewType(value: number) {\r\n\r\n        localStorage.setItem(\"fuelSurchargeTabId\", value.toString());\r\n\r\n        this.viewType = value;\r\n        this.accessorialFeeService.onSelectedAccessorialFeeId.next(null);\r\n        this.accessorialFeeService.onSelectedTabChanged.next(value);   \r\n    }\r\n    public onCreateFees(viewType) {\r\n        this.changeViewType(viewType);\r\n    }\r\n}\r\n","        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block border bg-white p-1 radius-capsule shadow-b mb-2\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Create Accessorial Fees</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">View Accessorial Fees</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-create-accessorial-fees *ngIf=\"viewType==1\" (onPageSubmit)=\"onCreateFees($event)\"></app-create-accessorial-fees>\r\n\r\n                <app-view-accessorial-fees *ngIf=\"viewType==2\"></app-view-accessorial-fees>\r\n            </div>\r\n        </div>\r\n","import { FreightTableStatus, TableType } from 'src/app/app.enum';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FeeModel } from '../../invoice/models/DropDetail';\r\n\r\nexport class ViewAccessorialFeeModel {\r\n    AccessorialFeeId?: number;\r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];\r\n    Carriers: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n}\r\n\r\nexport class AccessorialFeeInputModel {\r\n    public TableTypeIds: string;\r\n    public CustomerIds: string;\r\n    public CarrierIds: string;\r\n    public SourceRegionIds: string;\r\n    public TerminalIds: string;\r\n    public BulkPlantIds: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public IsArchived: boolean;\r\n}\r\n\r\nexport class AccessorialFeeGridModel {\r\n    public Id: number;\r\n    public DateRange: string;\r\n    public TableType: string;\r\n    public TableName: number;\r\n    public Customer: string;\r\n    public Carrier: string;\r\n    public SourceRegion: string;\r\n    public Terminal: string;\r\n    public BulkPlant: string;\r\n    public StatusName: string;\r\n    public IsArchived: boolean;\r\n     // For UI Dropdown\r\n    public IsShowMore : boolean;\r\n}\r\n\r\nexport class CreateAccessorialFeeModel\r\n{\r\n    constructor() {\r\n        this.CustomerIds = [];\r\n        this.CarrierIds = [];\r\n        this.SourceRegionIds = [];\r\n        this.Fees = [];\r\n    }\r\n    public Id?: number;\r\n    public Name: string;\r\n    public Status: FreightTableStatus;\r\n    public StartDate: Date;\r\n    public EndDate: Date;\r\n    public TableType :TableType\r\n    public CustomerIds: number[] = [];\r\n    public CarrierIds: number[] = [];\r\n    public SourceRegionIds: number[] = [];\r\n    public TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    public Fees: FeeModel[] = [];\r\n    public CountryId: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AccessorialFeesService extends HandleError {\r\n    public onSelectedTabChanged: BehaviorSubject<any>;\r\n    public onSelectedAccessorialFeeId: BehaviorSubject<any>;\r\n\r\n    public archiveAccessorialFeeUrl = '/AccessorialFees/ArchiveAccessorialFee';\r\n    public getViewAccessorialFeeSummaryUrl = '/AccessorialFees/GetViewAccessorialFeeSummary';\r\n    public getAccessorialFeeUrl = '/AccessorialFees/GetAccessorialFee?accessorialFeeId=';\r\n    public postCreateAccesorialFeesUrl = '/AccessorialFees/CreateAccessorialFee'\r\n    public postUpdateAccesorialFeesUrl = '/AccessorialFees/UpdateAccessorialFee'\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onSelectedTabChanged = new BehaviorSubject(1);\r\n        this.onSelectedAccessorialFeeId = new BehaviorSubject(null);\r\n    }\r\n\r\n    getAccessorialFeeGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.getViewAccessorialFeeSummaryUrl, filter)\r\n            .pipe(catchError(this.handleError<any>('getAccessorialFeeGridDetails', null)));\r\n    }\r\n\r\n    archiveAccessorialFee(accessorialFeeId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.archiveAccessorialFeeUrl, { accessorialFeeId: accessorialFeeId })\r\n            .pipe(catchError(this.handleError<any>('archiveAccessorialFee', null)));\r\n    }\r\n\r\n    createAccessorialFee(accessorialFeeModel: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postCreateAccesorialFeesUrl, { model: accessorialFeeModel })\r\n            .pipe(catchError(this.handleError<any>('createAccessorialFee', null)));\r\n    }\r\n\r\n    updateAccessorialFee(accessorialFeeModel: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postUpdateAccesorialFeesUrl, { model: accessorialFeeModel })\r\n            .pipe(catchError(this.handleError<any>('updateAccessorialFee', null)));\r\n    }\r\n\r\n    getAccessorialFee(accessorialFeeId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAccessorialFeeUrl + accessorialFeeId)\r\n            .pipe(catchError(this.handleError<any>('getAccessorialFee', null)));\r\n    }\r\n}","<form [formGroup]=\"viewAccessorialFeeForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-left\">\r\n            <a class=\"fs16 mr10 filter-link pa\" [ngbPopover]=\"popContent\" placement=\"bottom\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-accessorial-fee-grid\" class=\"table-responsive\">\r\n                                <table id=\"accessorial-fee-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                         \r\n                                            <th data-key=\"DateRange\">Date Range</th>\r\n                                            <th data-key=\"TableType\">Table Type</th>\r\n                                            <th data-key=\"TableName\">Table Name</th>\r\n                                            <th data-key=\"StatusName\">Status</th>\r\n                                            <th data-key=\"Customer\">Customer(s)</th>\r\n                                            <th data-key=\"Carrier\">Carrier(s)</th>\r\n                                            <th data-key=\"SourceRegion\">Source Region(s)</th>\r\n                                            <th data-key=\"Terminal\">Terminal(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Bulk Plant(s)</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let fee of AccessorialFeeList, let i = index\">\r\n \r\n                                            <td class=\"text-center\">{{fee.DateRange}}</td>\r\n                                            <td>{{fee.TableType}}</td>\r\n                                            <td>{{fee.TableName}}</td>\r\n                                            <td>{{fee.StatusName}}</td>\r\n                                            <td>{{fee.Customer}}</td>\r\n                                            <td>{{fee.Carrier}}</td>\r\n                                            <td>{{fee.SourceRegion}}</td>\r\n                                            <td *ngIf=\"fee.Terminal.length>40\">\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': fee.IsShowMore}\">{{fee.Terminal}}</div>\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': !fee.IsShowMore}\" *ngIf=\"(fee.Terminal.length>40)\">{{fee.Terminal | slice :0:40}}...</div>\r\n                                                <a (click)=\"fee.IsShowMore = !fee.IsShowMore\">View More/Less</a>\r\n                                            </td>\r\n                                            <td *ngIf=\"fee.Terminal.length<=40\">{{fee.Terminal}}</td>\r\n                                            <td>{{fee.BulkPlant}}</td>\r\n                                            <td class=\"text-center text-nowrap\">\r\n                                                <a *ngIf=\"!fee.IsArchived\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                                   [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                                   (cancel)=\"cancelClicked = true\" (confirm)=\"archiveAccessorialFee(fee.Id)\"><i class=\"fa fa-trash-alt color-maroon \" placement=\"bottom\" ngbTooltip=\"Archive\"></i></a>\r\n\r\n                                                <a *ngIf=\"!fee.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewAccessorialFee(fee.Id,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\"><i class=\"fas fa-edit\"></i></a>\r\n\r\n                                                <a class=\"btn btn-link fs16 ml-0\" (click)=\"viewAccessorialFee(fee.Id,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">\r\n                                                    <i class=\"fas fa-street-view\"></i>\r\n                                                </a>\r\n\r\n                                                <a *ngIf=\"!fee.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewAccessorialFee(fee.Id,'COPY');\" placement=\"bottom\" ngbTooltip=\"Copy\"><i class=\"fas fa-copy\"></i></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"fee-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Fee Details</h3>\r\n            </div>\r\n            <div>\r\n                <app-view-fees-details></app-view-fees-details>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #popContent>\r\n        <div class=\"popover-details\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TableTypes\">Table Type</label>\r\n                        <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                 id=\"TableTypes\"\r\n                                                 [settings]=\"SinlgeselectSettingsById\"\r\n                                                 [data]=\"TableTypeList\"\r\n                                                 [placeholder]=\"'Select Type (Required)'\"\r\n                                                 (onSelect)=\"onTableTypeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"viewAccessorialFeeForm.get('TableTypes').invalid && viewAccessorialFeeForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"viewAccessorialFeeForm.get('TableTypes').errors.required\">\r\n                                Table Type is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customers\">Customer(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     id=\"Customers\"\r\n                                                     [settings]=\"MultiselectSettingsById\"\r\n                                                     [data]=\"CustomerList\"\r\n                                                     [placeholder]=\"'Select Customers'\"\r\n                                                     (onSelect)=\"onCustomersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCustomersDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Carriers\">Carrier(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                     id=\"Carriers\"\r\n                                                     [settings]=\"MultiselectSettingsById\"\r\n                                                     [data]=\"CarrierList\"\r\n                                                     [placeholder]=\"'Select Carriers'\"\r\n                                                     (onSelect)=\"onCarriersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCarriersDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"SourceRegions\">Source Region(s)</label>\r\n                        <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                 id=\"SourceRegions\"\r\n                                                 [data]=\"SourceRegionList\"\r\n                                                 [settings]=\"MultiselectSettingsById\"\r\n                                                 [placeholder]=\"'Select Source Regions'\"\r\n                                                 (onSelect)=\"onSourceRegionsSelect($event)\"\r\n                                                 (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                 (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\">\r\n                        </ng-multiselect-dropdown>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                        <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                              [data]=\"TerminalsAndBulkPlantList\"\r\n                                              formControlName=\"TerminalsAndBulkPlants\"\r\n                                              [settings]=\"MultiSelectSettingsByGroup\">\r\n                        </angular2-multiselect>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>From</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"fromDate\"\r\n                               (onDateChange)=\"setfromDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>To</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"toDate\" [minDate]=\"minDate\"\r\n                               [maxDate]=\"maxDate\" (onDateChange)=\"settoDate($event);\" class=\"form-control datepicker\"\r\n                               myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-6 form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" formControlName=\"isArchived\" type=\"checkbox\" value=\"\" id=\"ckb-isArchived\">\r\n                        <label class=\"form-check-label\" for=\"ckb-isArchived\">\r\n                            Show Archived\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6 text-right form-buttons mt20\">\r\n                    <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                    <button id=\"filter-accessorial-fee-grid\" type=\"button\" class=\"btn btn-lg btn-primary mt3 valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid();p.close()\">Apply</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </ng-template>\r\n</form>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { AccessorialFeesService } from '../service/accessorialfees.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\r\nimport { ViewAccessorialFeeModel, AccessorialFeeInputModel, AccessorialFeeGridModel } from '../model/accessorial-fees';\r\nimport { ViewFeesDetailsComponent } from './view-fees-details/view-fees-details.component';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n    selector: 'app-view-accessorial-fees',\r\n    templateUrl: './view-accessorial-fees.component.html',\r\n    styleUrls: ['./view-accessorial-fees.component.css']\r\n})\r\nexport class ViewAccessorialFeesComponent implements OnInit {\r\n\r\n    public IsLoading: boolean = false;\r\n    public viewAccessorialFeeForm: FormGroup;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public SinlgeselectSettingsById = {};\r\n    public MultiselectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n    public CounrtyId: any;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    public Afmodel: ViewAccessorialFeeModel;\r\n    public AccessorialFeeList: AccessorialFeeGridModel[] = [];\r\n    public AccessorialFeeInput: AccessorialFeeInputModel;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    constructor(private fb: FormBuilder, private regionService: RegionService, private fuelsurchargeService: FuelSurchargeService,\r\n        private accessorialFeeService: AccessorialFeesService,private cdr : ChangeDetectorRef) {\r\n    }\r\n\r\n    minDate = new Date();\r\n    maxDate = new Date();\r\n    public popoverTitle: string = 'Archive Confirmation';\r\n    public popoverMessage: string = 'Do you want to archive?';\r\n    public cancelClicked: boolean = false;\r\n    public confirmClicked: boolean = false;\r\n    @ViewChild(ViewFeesDetailsComponent) accessorialFeeComponent: ViewFeesDetailsComponent;\r\n    ngOnInit() {\r\n        \r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.minDate.setFullYear(this.minDate.getFullYear() - 20);\r\n        this.CounrtyId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SinlgeselectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.getTableTypes();\r\n        this.viewAccessorialFeeForm = this.createForm();\r\n        this.initializeAccessorialFeeDatatableGrid();\r\n       \r\n    }\r\n    ngOnDestroy() {\r\n        this.rerender_destroy();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.getAccessorialFeeGridDetails();\r\n    }\r\n    private createForm() {\r\n        if (this.Afmodel == undefined || this.Afmodel == null) {\r\n            this.Afmodel = new ViewAccessorialFeeModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            TableTypes: new FormControl(this.Afmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Afmodel.Customers),\r\n            Carriers: new FormControl(this.Afmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Afmodel.SourceRegions),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            fromDate: [''],\r\n            toDate: [''],\r\n            isArchived: false\r\n        });\r\n    }\r\n\r\n    archiveAccessorialFee(accessorialFeeId: number) {\r\n        this.IsLoading = true;\r\n        this.accessorialFeeService.archiveAccessorialFee(accessorialFeeId)\r\n            .subscribe((response: any) => {\r\n                this.IsLoading = false;\r\n                //this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Selected accessorial fee archived successfully', undefined, undefined);\r\n                    this.filterGrid();\r\n                }\r\n            });\r\n    }\r\n   \r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.viewAccessorialFeeForm.get('Carriers').patchValue([]);\r\n        this.viewAccessorialFeeForm.get('Customers').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                break;\r\n            case 2: // customer\r\n                this.IsCustomerSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n            case 3: //carrier\r\n                this.IsCarrierSelected = true;\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                break;\r\n        }\r\n        this.viewAccessorialFeeForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.viewAccessorialFeeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.viewAccessorialFeeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.viewAccessorialFeeForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.SourceRegionList = null;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {\r\n        this.IsLoading = true;\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.viewAccessorialFeeForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.viewAccessorialFeeForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(data => {\r\n            this.SourceRegionList = data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.viewAccessorialFeeForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        this.IsSourceRegionSelected = this.Afmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    public onSourceRegionsSelect(item: any): void {\r\n        this.getTerminalsBulkPlant();\r\n        this.IsSourceRegionSelected = this.Afmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n        $(\"#accessorial-fee-grid-datatable\").DataTable().clear().destroy();\r\n        this.getAccessorialFeeGridDetails();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getAccessorialFeeGridDetails();\r\n    }\r\n    \r\n    clearForm() {\r\n        this.viewAccessorialFeeForm.reset();\r\n        $(\"#accessorial-fee-grid-datatable\").DataTable().clear().destroy();\r\n        this.CustomerList = [];\r\n        this.CarrierList = [];\r\n        this.SourceRegionList = [];\r\n    }\r\n    \r\n    getAccessorialFeeGridDetails() {\r\n        this.cdr.detectChanges()\r\n        var input = new AccessorialFeeInputModel();\r\n\r\n        var selectedTableTypes = this.viewAccessorialFeeForm.get('TableTypes').value as DropdownItem[];\r\n        var selectedCustomers = this.viewAccessorialFeeForm.get('Customers').value as DropdownItem[];\r\n        var selectedCarriers = this.viewAccessorialFeeForm.get('Carriers').value as DropdownItem[];\r\n        var selectedSourceRegions = this.viewAccessorialFeeForm.get('SourceRegions').value as DropdownItem[];\r\n        var selectedTerminalAndBulkPlants = this.viewAccessorialFeeForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n\r\n        input.StartDate = this.viewAccessorialFeeForm.controls.fromDate.value;\r\n        input.EndDate = this.viewAccessorialFeeForm.controls.toDate.value;\r\n        input.IsArchived = this.viewAccessorialFeeForm.controls.isArchived.value;\r\n\r\n        if (selectedTableTypes != null && selectedTableTypes != undefined && selectedTableTypes.length > 0) {\r\n            var tableTypeIds = selectedTableTypes.map(s => s.Id);\r\n            input.TableTypeIds = tableTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            var customerIds = selectedCustomers.map(s => s.Id);\r\n            input.CustomerIds = customerIds.join(',');\r\n        }\r\n\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            var carrierIds = selectedCarriers.map(s => s.Id);\r\n            input.CarrierIds = carrierIds.join(',');\r\n        }\r\n\r\n        if (selectedSourceRegions != null && selectedSourceRegions != undefined && selectedSourceRegions.length > 0) {\r\n            var sourceRegionIds = selectedSourceRegions.map(s => s.Id);\r\n            input.SourceRegionIds = sourceRegionIds.join(',');\r\n        }\r\n\r\n        if (selectedTerminalAndBulkPlants != null && selectedTerminalAndBulkPlants != undefined && selectedTerminalAndBulkPlants.length > 0) {\r\n            var selectedTerminalIds = selectedTerminalAndBulkPlants.filter(c => c.Code == \"Terminals\");\r\n            var terminalIds = selectedTerminalIds.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n\r\n            var selectedBulkPlants = selectedTerminalAndBulkPlants.filter(c => c.Code == \"BulkPlants\");\r\n            var bulkPlantIds = selectedBulkPlants.map(s => s.Id);\r\n            input.BulkPlantIds = bulkPlantIds.join(',');\r\n        }\r\n        this.IsLoading = true;\r\n        this.accessorialFeeService.getAccessorialFeeGridDetails(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if(data && data.length>0){\r\n                this.AccessorialFeeList = data as AccessorialFeeGridModel[];\r\n            }\r\n            this.dtTrigger.next();\r\n        });\r\n    }\r\n   \r\n    rerender_destroy(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n            });\r\n        }\r\n    }\r\n      rerender_trigger(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                this.dtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    public viewAccessorialFee(accessorialFeeId: number, mode: string) {\r\n        let operation = { AccessorialFeeId: accessorialFeeId, Mode: mode };\r\n        this.accessorialFeeService.onSelectedAccessorialFeeId.next(JSON.stringify(operation));\r\n        this.accessorialFeeService.onSelectedTabChanged.next(1);\r\n    }\r\n\r\n    setfromDate($event) {\r\n        this.viewAccessorialFeeForm.controls.fromDate.setValue($event);\r\n    }\r\n\r\n    settoDate($event) {\r\n        this.viewAccessorialFeeForm.controls.toDate.setValue($event);\r\n    }\r\n\r\n    initializeAccessorialFeeDatatableGrid() {\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Accessorial Fee', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Accessorial Fee', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n       \r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { AccessorialFeesService } from '../../service/accessorialfees.service';\r\n//import { FeesDetailModel, AccessorialFuelFeeModel } from '../../model/accessorial-fees';\r\n\n@Component({\n    selector: 'app-view-fees-details',\n    templateUrl: './view-fees-details.component.html',\n    styleUrls: ['./view-fees-details.component.css']\n})\nexport class ViewFeesDetailsComponent implements OnInit {\n\n    constructor(private fb: FormBuilder, private accessorialFeeService: AccessorialFeesService) { }\n    //public AccessorialFuelFee: AccessorialFuelFeeModel;\n    //public FeesDetailList: FeesDetailModel[]\n    ngOnInit() {\n    }\n\n    getAccessorialFeesDetails(accessorialFeeId: number) {\r\n        //this.accessorialFeeService.getAccessorialFee(accessorialFeeId).subscribe(data => {\r\n        //    this.AccessorialFuelFee = data as AccessorialFuelFeeModel;\r\n        //    this.FeesDetailList = this.AccessorialFuelFee.FuelFees;\r\n        //});\r\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, ObservableLike } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HandleError } from '../../errors/HandleError';\r\nimport { DropdownItem, DropdownItemExt, FeeSubType } from '../../statelist.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeeService extends HandleError {\r\n\r\n    private getFeeTypesUrl = '/Supplier/Invoice/GetFeeTypes?orderId=';\r\n    private getFeeSubTypesUrl = '/Supplier/Invoice/GetFeeSubTypes?orderId=';\r\n    private getFeeConstraintTypesUrl = '/Supplier/Invoice/GetFeeConstraintTypes';\r\n    private getEiaPriceUrl = '/Supplier/Invoice/GetEIAPrice';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getFeeTypes(orderId: number, isFromAccesorialFees?: boolean): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getFeeTypesUrl + orderId + '&isFromAccesorialFees=' + isFromAccesorialFees)\r\n            .pipe(catchError(this.handleError<DropdownItemExt[]>('getFeeTypes', [])));\r\n    }\r\n\r\n    getFeeSubTypes(orderId: number): Observable<FeeSubType[]> {\r\n        return this.httpClient.get<FeeSubType[]>(this.getFeeSubTypesUrl + orderId)\r\n            .pipe(catchError(this.handleError<FeeSubType[]>('getFeeSubTypes', [])));\r\n    }\r\n\r\n    getFeeConstraintTypes(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getFeeConstraintTypesUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getFeeConstraintTypes', [])));\r\n    }\r\n\r\n    getEiaPrice(data: any): Observable<any> {\r\n        return this.httpClient.post(this.getEiaPriceUrl, data)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getEiaPrice', [])));\r\n    }\r\n}\r\n"]}