{"version":3,"sources":["webpack:///src/app/directives/visibility-change.module.ts","webpack:///src/app/invitation/invitation-submit/invitation-submit.component.ts","webpack:///src/app/invitation/invitation-submit/invitation-submit.component.html","webpack:///src/app/invitation/invitation.component.ts","webpack:///src/app/invitation/invitation.component.html","webpack:///src/app/invitation/invitation.module.ts","webpack:///src/app/invitation/left-menu/left-menu.component.ts"],"names":["VisibilityChangeDirective","_element","visibilityChange","checkForIntersection","entries","forEach","entry","checkIfIntersecting","emit","_intersectionObserver","IntersectionObserver","threshold","isIntersecting","target","nativeElement","registerIntersectionObserver","observe","selector","VisibilityChangeModule","declarations","imports","exports","InvitationSubmitComponent","templateUrl","styleUrls","$event","value","InvitationComponent","route","router","fb","invitationService","cdr","pageloader","offeringloader","_loadingAddress","emailExists","isPhoneNumberValid","CountryList","statesList","dataForEachServiceType","filteredcityList","invitedCompanyTypes","AllTrailerAssetTypes","PhoneTypes","DdlSettings","ZipDdlSettings","ddlCitySettings","formSubmited","ServiceOfferingTypes","ServiceOfferingTypesDisplay","_opened","_initiated","WizardTabEnum","activeWizard","ContactInfo","activeServiceOffering","FTL","logoImage","backgroundImage","Companies","companyLoader","isSubmitted","initailizeThirdPartyInviteForm","fuelAssetForm","getFuelAssetsFormGroup","wizardForm","controls","parameter","FuelTrailerAssetType","find","x","Id","Name","DefTrailerAssetType","filter","t","CountryId","f","CompanyInfo","get","countryId","GetCarrierOnboardingForBranding","getCountryList","getStatesOfAllCountries","getThirdPartyCompanyTypes","getPhoneTypes","GetAllTrailerAssetTypes","GetCompanies","InitializeServiceDropdown","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","token","snapshot","queryParams","subscribe","response","IsBrandMyWebsite","carrierOnboarding","ImageFilePath","CarrierOnboardingImageFilePath","template","classList","remove","HeaderColor","ButtonColor","LTL","DEF","LTLWetHosing","DEFWetHosing","group","UserInfo","control","Title","required","FirstName","LastName","Email","pattern","IsNewCompany","CompanyName","CompanyTypeId","CompanyAddress","StateId","CountryName","StateName","City","County","Zip","PhoneType","PhoneNumber","Phone","FleetInfo","FuelAssets","array","DefAssets","ServiceOffering","Token","buildServiceOffering","bindLocalStorageData","serviceOffers","serviceOfferings","Object","keys","isNaN","Number","index","push","IsEnable","AreaWide","ServiceDeliveryType","ServiceAreas","SelectedCountry","SelectedStates","SelectedCities","SelectedZipCodes","isFuelAssets","FuelTrailerServiceTypeFTL","DEFTrailerServiceType","Capacity","min","TrailerHasPump","IsTrailerMetered","Count","PackagedGoods","IsFuelAssets","tempArray","removeAt","zipCode","GetAddressByZip","updateAddress","address","CountryCode","state","st","toLowerCase","stateId","Address","patchValue","CountyName","_fmArray","serviceOffering","setValue","data","disableCompanyControls","detectChanges","cName","_this","IsCompanyNameExist","disable","enable","GetCountryList","length","GetStatesOfAllCountries","GetThirdPartyCompanyTypes","newStateAdded","_selectedStates","stateslist","map","join","GetCitiesFromStates","pipe","thing","i","arr","indexOf","CityId","msgerror","removeSelectedCitiesOfRemovedState","_areawide","stateChanged","document","getElementById","click","selectedCitiesForm","selectedCities","availableCities","finalCities","selectedCity","c","newCityAdded","_selectedCities","cityChanged","_selectedCityIds","allZipcodes","includes","removeSelectedZipsOfRemovedCities","selectedZipsForm","selectedZips","availableZips","finalZips","zip","ZipCode","UserDetails","IsEmailExist","undefined","GetPhoneTypes","phoneNumber","IsPhoneNumberValid","id","localStorage","setItem","JSON","stringify","CompanyInformation","scrollIntoView","behavior","block","inline","FleetInformation","ServiceOfferings","ContactInformation","setLocalStorageData","serviceEnabled","areaWide","updateFormControlValidators","validators","setValidators","updateValueAndValidity","wizardFormData","getItem","wizardFormDataJSON","parse","fuelAsset","defAssets","markAllAsTouched","msgwarning","valid","input","SaveInvitedRequest","StatusCode","EntityId","serviceOffer","_serviceOffer","allZipCodes","a","allStates","msgsuccess","EntityNumber","navigate","window","location","href","removeBtnPrimaryClass","onSubmit","routeInv","path","component","InvitationModule","forChild","LeftMenuComponent"],"mappings":"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","file":"invitation-invitation-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ElementRef, EventEmitter, Output, Directive, AfterViewInit, Input, NgModule } from '@angular/core';\n\n@Directive({\n    selector: '[visibilityChange]'\n})\nexport class VisibilityChangeDirective implements AfterViewInit {\n\n    @Output() public visibilityChange: EventEmitter<any> = new EventEmitter();\n    \n    @Input() public threshold: number;\n\n    private _intersectionObserver?: IntersectionObserver;\n\n    constructor(private _element: ElementRef) { }\n\n    private checkForIntersection = (entries: Array<IntersectionObserverEntry>) => {\n        entries.forEach((entry: IntersectionObserverEntry) => {\n            if (this.checkIfIntersecting(entry)) {\n                this.visibilityChange.emit();\n            }\n        });\n    }\n\n    private registerIntersectionObserver(): void {\n        if (!!this._intersectionObserver) {\n            return;\n        }\n        this._intersectionObserver = new IntersectionObserver(entries => {\n            this.checkForIntersection(entries);\n        }, {\n            threshold: this.threshold ? this.threshold : 0.0\n        });\n    }\n\n    private checkIfIntersecting(entry: IntersectionObserverEntry) {\n        return (<any>entry).isIntersecting && entry.target === this._element.nativeElement;\n    }\n\n    ngAfterViewInit(): void {\n        this.registerIntersectionObserver();\n        if (this._intersectionObserver && this._element.nativeElement) {\n            this._intersectionObserver.observe(<Element>(this._element.nativeElement));\n        }\n    }\n}\n\n@NgModule({\n    declarations: [VisibilityChangeDirective],\n    imports: [CommonModule],\n    exports: [VisibilityChangeDirective]\n})\nexport class VisibilityChangeModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation-submit',\n  templateUrl: './invitation-submit.component.html',\n  styleUrls: ['./invitation-submit.component.css']\n})\nexport class InvitationSubmitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"submit-section\">\r\n    <div class=\"d-flex align-items-center justify-content-center h-100\">\r\n        <div class=\"d-flex flex-column text-center\">\r\n            <i class=\"far fa-check-circle fa-7x text-success\"></i>\r\n            <h2 class=\"mt-2 f-bold\">Thank you for your information</h2>\r\n                <p>\r\n                    You will be sent an email prompting you to register your account.<br>\r\n                    This will allow you to log into your account.\r\n                </p>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { InvitationService } from './invitation.service';\nimport { CarrierOnboardingBrandingModel, ServiceArea, StateListViewModel } from './third-party-invitation.model';\nimport { Declarations } from '../declarations.module';\nimport { RegExConstants } from '../app.constants';\nimport { Geocode } from '../carrier/schedule-builder/add-location/add-location.model';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DropdownItem, StatelistService } from '../statelist.service';\nimport { ServiceOfferingType, WizardTabEnum } from 'src/app/app.enum';\n\n@Component({\n    selector: 'app-invitation',\n    templateUrl: './invitation.component.html',\n    styleUrls: ['./invitation.component.css']\n})\nexport class InvitationComponent implements OnInit {\n\n    public pageloader = false;\n    public offeringloader = false;\n    public _loadingAddress = false;\n    public wizardForm: FormGroup;\n    public emailExists = false;\n    public isPhoneNumberValid = null;\n    //public isSubmitted: boolean = false;\n\n    public CountryList: DropdownItem[] = [];\n    public statesList: StateListViewModel[] = [];\n    public carrierOnboarding : CarrierOnboardingBrandingModel;\n    public dataForEachServiceType: object = {};\n\n    public filteredcityList = [];\n    public invitedCompanyTypes = [];\n    public AllTrailerAssetTypes: any = null;\n    public PhoneTypes = [];\n    public DdlSettings: any = {};\n    public ZipDdlSettings: any = {};\n    public ddlCitySettings: any = {};\n    public formSubmited = false;\n    public ServiceOfferingTypes: typeof ServiceOfferingType = ServiceOfferingType;\n    public ServiceOfferingTypesDisplay: { [index: number]: string } = {};\n    //fuel assets\n    public fuelAssetForm: FormGroup;\n    public _opened: boolean = false;\n    public _initiated: boolean = false;\n    //active wizard\n    WizardTabEnum = WizardTabEnum;\n    activeWizard = WizardTabEnum.ContactInfo;\n    threshold: number = 1.0;\n    @ViewChild('ContactInformation') ContactInformation: ElementRef;\n    @ViewChild('CompanyInformation') CompanyInformation: ElementRef;\n    @ViewChild('FleetInformation') FleetInformation: ElementRef;\n    @ViewChild('ServiceOffering') ServiceOffering: ElementRef;\n    //service offerings\n    activeServiceOffering = ServiceOfferingType.FTL;\n\n    //Branding\n    logoImage = \"../../../Content/images/truefill-logo.png\";\n    backgroundImage = \"\";\n\n    //get accessors\n    get f() { return this.wizardForm.controls; }\n    get getFuelTrailerAssetTypeName(): any { return (parameter: number) => this.AllTrailerAssetTypes?.FuelTrailerAssetType.find((x: { Id: number; }) => x.Id == parameter).Name; }\n    get getDefTrailerAssetTypeName(): any { return (parameter: number) => this.AllTrailerAssetTypes?.DefTrailerAssetType.find((x: { Id: number; }) => x.Id == parameter).Name; }\n    get StatesListByCountry(): any[] { return this.statesList.filter(t => t.CountryId == this.f.CompanyInfo.get('CountryId').value) }\n    get StatesListByCountryForService(): any { return (countryId: number) => this.statesList.filter(x => x.CountryId == countryId); }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder,\n        private invitationService: InvitationService,\n        private cdr: ChangeDetectorRef) {\n        this.initailizeThirdPartyInviteForm();\n        this.fuelAssetForm = this.getFuelAssetsFormGroup(true);\n    }\n\n    ngOnInit() {\n        this.GetCarrierOnboardingForBranding();\n        this.getCountryList();\n        this.getStatesOfAllCountries();\n        this.getThirdPartyCompanyTypes();\n        this.getPhoneTypes();\n        this.GetAllTrailerAssetTypes();\n        this.GetCompanies();\n        this.InitializeServiceDropdown();\n\n        this.DdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 2,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n        this.ZipDdlSettings = {\n            singleSelection: false,\n            idField: 'ZipCode',\n            textField: 'ZipCode',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 2,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n        this.ddlCitySettings = {\n            singleSelection: false,\n            idField: 'CityId',\n            textField: 'CityName',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 2,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n    }\n\n    GetCarrierOnboardingForBranding() {\n        let token = this.route.snapshot.queryParams.token;\n        this.invitationService.GetCarrierOnboardingForBranding(token).subscribe(response => {\n            if (response && response.IsBrandMyWebsite) {\n                this.carrierOnboarding = response;\n                this.logoImage = this.carrierOnboarding.ImageFilePath;\n                this.backgroundImage = this.carrierOnboarding.CarrierOnboardingImageFilePath;\n            }\n        });\n    }\n\n    removeBtnPrimaryClass(template: any) {\n        template.classList.remove('btn-primary');\n    }\n    getHeaderColor(): object {\n        if (this.carrierOnboarding && this.carrierOnboarding.IsBrandMyWebsite && this.carrierOnboarding.HeaderColor)\n            return { \"background-color\": this.carrierOnboarding.HeaderColor };\n        else\n            return {};\n    }\n\n    getButtonColor(): object {\n        if (this.carrierOnboarding && this.carrierOnboarding.IsBrandMyWebsite && this.carrierOnboarding.ButtonColor)\n            return { \"background-color\": this.carrierOnboarding.ButtonColor,\"color\":\"white\" ,\"border\":\"none\"};\n        else\n            return {};\n    }\n\n  \n\n    InitializeServiceDropdown() {\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.FTL]] = \"FTL\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.LTL]] = \"LTL\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.DEF]] = \"DEF\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.LTLWetHosing]] = \"LTL Wet Hosing\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.DEFWetHosing]] = \"DEF Wet Hosing\";\n    }\n\n    initailizeThirdPartyInviteForm() {\n        this.wizardForm = this.fb.group({\n            UserInfo: this.fb.group({\n                Id: this.fb.control(null),\n                Title: this.fb.control(null, [Validators.required]),\n                FirstName: this.fb.control(null, [Validators.required]),\n                LastName: this.fb.control(null, [Validators.required]),\n                Email: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Email)]),\n            }),\n            CompanyInfo: this.fb.group({\n                IsNewCompany: this.fb.control(true),\n                CompanyName: this.fb.control(null, [Validators.required]),\n                CompanyTypeId: this.fb.control(null, [Validators.required]),\n                CompanyAddress: this.fb.control(null, [Validators.required]),\n                CountryId: this.fb.control(1, [Validators.required]),\n                StateId: this.fb.control(null, [Validators.required]),\n                CountryName: this.fb.control(null),\n                StateName: this.fb.control(null),\n                City: this.fb.control(null, [Validators.required]),\n                County: this.fb.control(null, [Validators.required]),\n                Zip: this.fb.control(null, [Validators.required]),\n                PhoneType: this.fb.control(null, [Validators.required]),\n                PhoneNumber: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Phone)]),\n            }),\n            FleetInfo: this.fb.group({\n                FuelAssets: this.fb.array([]),\n                DefAssets: this.fb.array([])\n            }),\n            ServiceOffering: this.fb.array([]),\n            Token: this.fb.control(this.route.snapshot.queryParams.token)\n        });\n        this.buildServiceOffering();\n        this.bindLocalStorageData();\n    }\n\n    buildServiceOffering() {\n        let serviceOffers = this.wizardForm.get('ServiceOffering') as FormArray;\n        let serviceOfferings = Object.keys(ServiceOfferingType).filter(f => !isNaN(Number(f)));\n\n        for (let index in serviceOfferings) {\n            serviceOffers.push(this.fb.group({\n                IsEnable: this.fb.control(null),\n                AreaWide: this.fb.control(1),\n                ServiceDeliveryType: [this.ServiceOfferingTypes[+index + 1]],\n                ServiceAreas: this.fb.control(null),\n                SelectedCountry: this.fb.control(null),\n                SelectedStates: this.fb.control([]),\n                SelectedCities: this.fb.control([]),\n                SelectedZipCodes: this.fb.control([]),\n            }));\n\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] = [] as ServiceArea[];\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = [] as ServiceArea[];\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] = [] as ServiceArea[];\n        }\n    }\n\n    getFuelAssetsFormGroup(isFuelAssets: boolean) {\n        return this.fb.group({\n            FuelTrailerServiceTypeFTL: this.fb.control(null, isFuelAssets ? [Validators.required] : []),\n            DEFTrailerServiceType: this.fb.control(null, !isFuelAssets ? [Validators.required] : []),\n            Capacity: this.fb.control(null, [Validators.required, Validators.min(0.0001)]),\n            TrailerHasPump: this.fb.control(false),\n            IsTrailerMetered: this.fb.control(false),\n            Count: this.fb.control(null, [Validators.required, Validators.min(1)]),\n            PackagedGoods: this.fb.control(false),\n            IsFuelAssets: this.fb.control(isFuelAssets),\n        })\n    }\n\n    openFuelAssetForm(isFuelAssets: boolean) {\n        this._opened = true;\n        this.fuelAssetForm = this.getFuelAssetsFormGroup(isFuelAssets);\n    }\n\n    removeAsset(index: number, isFuelAssets: boolean) {\n        let tempArray: FormArray;\n        if (isFuelAssets) {\n            tempArray = this.f.FleetInfo.get('FuelAssets') as FormArray;\n        }\n        else {\n            tempArray = this.f.FleetInfo.get('DefAssets') as FormArray;\n        }\n        tempArray.removeAt(index);\n    }\n\n    getAddressByZip(zipCode: string) {\n        if (zipCode) {\n            this.invitationService.GetAddressByZip(zipCode).subscribe((response) => {\n                if (response) {\n                    this.updateAddress(response)\n                }\n            });\n        }\n    }\n\n    updateAddress(address: Geocode) {\n        if (address.CountryCode && address.StateName) {\n\n            let countryId = (address.CountryCode == 'US') ? 1 : (address.CountryCode == 'CA' ? 2 : this.f.CompanyInfo.get('CountryId').value);\n            let state = this.statesList.find(st => st.Name.toLowerCase() == address.StateName.toLowerCase());\n            let stateId = (state && state.Id) ? state.Id : this.f.CompanyInfo.get('StateId').value;\n            if (address.Address && address.Address != '' && this.f.CompanyInfo.get('CompanyAddress').value != '') {\n                this.f.CompanyInfo.get('CompanyAddress').patchValue(address.Address);\n            }\n            this.f.CompanyInfo.get('City').patchValue(address.City);\n            this.f.CompanyInfo.get('County').patchValue(address.CountyName);\n            this.f.CompanyInfo.get('StateId').patchValue(stateId);\n            this.f.CompanyInfo.get('CountryId').patchValue(countryId);\n        }\n    }\n\n    onSubmitFleetInfo() {\n        this._opened = false;\n        let _fmArray: FormArray;\n        if (this.fuelAssetForm.get('IsFuelAssets').value) {\n            _fmArray = this.wizardForm.get('FleetInfo').get('FuelAssets') as FormArray;\n        }\n        else {\n            _fmArray = this.wizardForm.get('FleetInfo').get('DefAssets') as FormArray;\n        }\n        _fmArray.push(this.fuelAssetForm)\n    }\n\n    public serviceCountryChanged(serviceOffering: FormGroup) {\n        serviceOffering.get('SelectedStates').setValue([]);\n        serviceOffering.get('SelectedCities').setValue([]);\n        serviceOffering.get('SelectedZipCodes').setValue([]);\n    }\n\n    public GetCompanies() {\n        this.pageloader = true;\n        this.invitationService.GetCompanies().subscribe((data => {\n            this.pageloader = false;\n            if (data) {\n                this.Companies = data;\n            }\n        }));\n    }\n\n    public companySeleted(data: any) {\n        this.f.CompanyInfo.get('IsNewCompany').patchValue(false);\n        this.disableCompanyControls(true);\n        this.cdr.detectChanges();\n    }\n\n    Companies: any[] = [];\n    companyLoader = false;\n    public isCompanyNameExist(cName: string) {\n        if (cName) {\n            let _this = this;\n            this.companyLoader = true;\n            this.invitationService.IsCompanyNameExist(this.f.CompanyInfo.get('IsNewCompany').value, this.f.CompanyInfo.get('CompanyName').value).subscribe(data => {\n                if(typeof _this.f.CompanyInfo.get('CompanyName').value !== 'object'){\n                    _this.f.CompanyInfo.get('IsNewCompany').patchValue(!data);\n                    //_this.cdr.detectChanges();\n                }\n                _this.disableCompanyControls(!_this.f.CompanyInfo.get('IsNewCompany').value);\n                this.companyLoader = false;\n            });\n        }\n    }\n\n    disableCompanyControls(data: boolean){\n        if (data) {\n            this.f.CompanyInfo.get('CompanyTypeId').disable();\n            this.f.CompanyInfo.get('CompanyAddress').disable();\n            this.f.CompanyInfo.get('CountryId').disable();\n            this.f.CompanyInfo.get('StateId').disable();\n            this.f.CompanyInfo.get('CountryName').disable();\n            this.f.CompanyInfo.get('StateName').disable();\n            this.f.CompanyInfo.get('City').disable();\n            this.f.CompanyInfo.get('County').disable();\n            this.f.CompanyInfo.get('Zip').disable();\n            this.f.CompanyInfo.get('PhoneType').disable();\n            this.f.CompanyInfo.get('PhoneNumber').disable();\n        }\n        else {\n            this.f.CompanyInfo.get('CompanyTypeId').enable();\n            this.f.CompanyInfo.get('CompanyAddress').enable();\n            this.f.CompanyInfo.get('CountryId').enable();\n            this.f.CompanyInfo.get('StateId').enable();\n            this.f.CompanyInfo.get('CountryName').enable();\n            this.f.CompanyInfo.get('StateName').enable();\n            this.f.CompanyInfo.get('City').enable();\n            this.f.CompanyInfo.get('Zip').enable();\n            this.f.CompanyInfo.get('PhoneType').enable();\n            this.f.CompanyInfo.get('PhoneNumber').enable();\n        }\n    }\n    public getCountryList() {\n        this.invitationService.GetCountryList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.CountryList = data;\n            }\n        });\n    }\n\n    public getStatesOfAllCountries() {\n        this.invitationService.GetStatesOfAllCountries().subscribe(data => {\n            if (data && data.length > 0) {\n                this.statesList = data;\n            }\n        });\n    }\n\n    public getThirdPartyCompanyTypes() {\n        this.invitationService.GetThirdPartyCompanyTypes().subscribe(data => {\n            if (data && data.length > 0) {\n                this.invitedCompanyTypes = data;\n            }\n        });\n    }\n\n    public GetAllTrailerAssetTypes() {\n        this.invitationService.GetAllTrailerAssetTypes().subscribe(data => {\n            if (data) {\n                this.AllTrailerAssetTypes = data;\n            }\n        });\n    }\n\n\n    stateChanged(serviceOffering: FormGroup, index: number, newStateAdded: boolean, _selectedStates: any[]) {\n\n        this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] = [] as ServiceArea[];\n        this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] = [] as ServiceArea[];\n\n        if (_selectedStates.length == 0) {\n            serviceOffering.get('SelectedCities').patchValue([]);\n            serviceOffering.get('SelectedZipCodes').patchValue([]);\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = [];\n            return;\n        }\n\n        var stateslist = _selectedStates.map(t => t.Id).join(\",\");\n        this.offeringloader = true;\n\n        this.invitationService.GetCitiesFromStates(stateslist).pipe(debounceTime(1000)).subscribe(response => {\n\n            if (response && response.length > 0) {\n                this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] = response;\n                this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] = response.filter((thing, i, arr) => {\n                    return arr.indexOf(arr.find(t => t.CityId === thing.CityId)) === i;\n                }) as ServiceArea[];\n            }\n            else if (!response) {\n                Declarations.msgerror(\"Failed to load Cities.\", \"Failed\", null)\n            }\n            if (!newStateAdded) {\n                this.removeSelectedCitiesOfRemovedState(serviceOffering.get('SelectedCities') as FormControl, index);\n            }\n\n            this.offeringloader = false;;\n        });\n    }\n\n    public stateChangedSingle(serviceOffering: FormGroup, index: number, newStateAdded: boolean) {\n        let _areawide = serviceOffering.get('AreaWide').value as number;\n        if (_areawide == 2) {\n            let _selectedStates = serviceOffering.get('SelectedStates').value as any[];\n            this.stateChanged(serviceOffering, index, newStateAdded, _selectedStates);\n        }\n    }\n\n    public stateChangedAll(serviceOffering: FormGroup, index: number, newStateAdded: boolean, _selectedStates: any[]) {\n        let _areawide = serviceOffering.get('AreaWide').value as number;\n        if (_areawide == 2) {\n            document.getElementById(\"stateDiv\").click();\n            this.stateChanged(serviceOffering, index, newStateAdded, _selectedStates);\n        }\n    }\n\n    public removeSelectedCitiesOfRemovedState(selectedCitiesForm: FormControl, index: number) {\n        let selectedCities = selectedCitiesForm.value as ServiceArea[];\n        if (selectedCities.length > 0) {\n\n            let availableCities = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] as ServiceArea[];\n            let finalCities = [];\n            selectedCities.forEach(selectedCity => {\n                if (availableCities.find(c => c.CityId == selectedCity.CityId)) {\n                    finalCities.push(selectedCity)\n                }\n            });\n            selectedCitiesForm.patchValue(finalCities);\n        }\n    }\n\n    public cityChangedSingle(serviceOffering: FormGroup, index: number, newCityAdded: boolean) {\n        let _selectedCities = serviceOffering.get('SelectedCities').value as any[];\n        this.cityChanged(serviceOffering, index, newCityAdded, _selectedCities);\n    }\n\n    public cityChangedAll(serviceOffering: FormGroup, index: number, newCityAdded: boolean, _selectedCities: any[]) {\n        this.cityChanged(serviceOffering, index, newCityAdded, _selectedCities);\n    }\n\n    public cityChanged(serviceOffering: FormGroup, index: number, newCityAdded: boolean, _selectedCities: any[]) {\n\n        if (_selectedCities.length == 0) {\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = [] as ServiceArea[];\n            serviceOffering.get('SelectedZipCodes').patchValue([]);\n            return;\n        }\n\n        let _selectedCityIds: number[] = _selectedCities.map(c => { return c.CityId; })\n\n        let allZipcodes = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] as ServiceArea[];\n        this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = allZipcodes.filter(c => _selectedCityIds.includes(c.CityId)) as ServiceArea[];\n\n        if (!newCityAdded) {\n            this.removeSelectedZipsOfRemovedCities(serviceOffering.get('SelectedZipCodes') as FormControl, index);\n        }\n    }\n\n    public removeSelectedZipsOfRemovedCities(selectedZipsForm: FormControl, index: number) {\n        let selectedZips = selectedZipsForm.value as ServiceArea[];\n        if (selectedZips.length > 0) {\n\n            let availableZips = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] as ServiceArea[];\n            let finalZips = []\n            selectedZips.forEach(zip => {\n                if (availableZips.find(c => c.ZipCode == zip.ZipCode)) {\n                    finalZips.push(zip)\n                }\n            });\n            selectedZipsForm.patchValue(finalZips);\n        }\n    }\n\n    public countryChanged() {\n        this.f.CompanyInfo.get('CompanyAddress').setValue(null);\n        this.f.CompanyInfo.get('Zip').setValue(null);\n        this.f.CompanyInfo.get('City').setValue(null);\n        this.f.CompanyInfo.get('County').setValue(null);\n        this.f.CompanyInfo.get('StateId').setValue(null);\n    }\n\n    public isEmailExist() {\n        this.emailExists = false;\n        if (this.f.UserDetails.get('Email').value) {\n            this.invitationService.IsEmailExist(this.f.UserInfo.get('Email').value).subscribe(data => {\n                if (data != null || data != undefined) {\n                    this.emailExists = data;\n                }\n            });\n        }\n    }\n\n    public getPhoneTypes() {\n        this.invitationService.GetPhoneTypes().subscribe(data => {\n            if (data && data.length > 0) {\n                this.PhoneTypes = data;\n            }\n        });\n    }\n\n    public IsPhoneNumberValid(phoneNumber: string) {\n        this.isPhoneNumberValid = null;\n        if (phoneNumber) {\n            this.invitationService.IsPhoneNumberValid(phoneNumber).subscribe(data => {\n                if (data != null || data != undefined) {\n                    this.isPhoneNumberValid = data;\n                }\n            });\n        }\n    }\n\n    public scrollToElemen(id: WizardTabEnum): void {\n        this.activeWizard = id;\n    }\n\n    public setServiceQuestion(id: ServiceOfferingType) {\n        this.activeServiceOffering = id;\n    }\n\n    public setLocalStorageData(): void {\n        localStorage.setItem('wizardData', JSON.stringify(this.wizardForm.value));\n    }\n\n    public goToNextQuestion(){\n\n        if(this.activeServiceOffering != this.ServiceOfferingTypes.DEFWetHosing){\n            this.activeServiceOffering = +this.activeServiceOffering+1;\n        }\n    }\n\n    public scrollToElement(id: WizardTabEnum) {\n        this.activeWizard = id;\n        if (id == WizardTabEnum.CompanyInfo) {\n            this.CompanyInformation.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        } else if (id == WizardTabEnum.FleetInfo) {\n            this.FleetInformation.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        } else if (id == WizardTabEnum.ServiceOfferings) {\n            this.ServiceOffering.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        } else {\n            this.activeWizard = WizardTabEnum.ContactInfo;\n            this.ContactInformation.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        }\n    }\n\n    public onFinishAndSave() {\n        this.setLocalStorageData();\n    }\n\n    updateServiceValidation(serviceOffering: FormGroup, serviceEnabled: boolean, areaWide: number){\n\n        this.updateFormControlValidators(serviceOffering.get('SelectedCountry'), [])\n        this.updateFormControlValidators(serviceOffering.get('SelectedStates'), [])\n        this.updateFormControlValidators(serviceOffering.get('SelectedCities'), [])\n        this.updateFormControlValidators(serviceOffering.get('SelectedZipCodes'), [])\n\n        if (serviceEnabled) {\n\n            this.updateFormControlValidators(serviceOffering.get('SelectedCountry'), [Validators.required])\n            this.updateFormControlValidators(serviceOffering.get('SelectedStates'), [Validators.required])\n\n            if (areaWide==2) {\n                this.updateFormControlValidators(serviceOffering.get('SelectedCities'), [Validators.required])\n                this.updateFormControlValidators(serviceOffering.get('SelectedZipCodes'), [Validators.required])\n            }\n        }\n    }\n\n    updateFormControlValidators(control: any, validators: any[]) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n     }\n\n    public bindLocalStorageData(): void {\n        let wizardFormData = localStorage.getItem('wizardData')\n        if (wizardFormData) {\n            let wizardFormDataJSON = JSON.parse(wizardFormData);\n            this.f.UserInfo.patchValue(wizardFormDataJSON.UserInfo);\n            this.f.CompanyInfo.patchValue(wizardFormDataJSON.CompanyInfo);\n            this.f.ServiceOffering.patchValue(wizardFormDataJSON.ServiceOffering);\n\n            // this.f.CompanyInfo.get('IsNewCompany').patchValue(!data);\n\n            let FuelAssets = this.f.FleetInfo.get('FuelAssets') as FormArray;\n            wizardFormDataJSON.FleetInfo.FuelAssets.forEach((fuelAsset: any) => {\n                FuelAssets.push(this.fb.group({\n                    FuelTrailerServiceTypeFTL: this.fb.control(fuelAsset.FuelTrailerServiceTypeFTL, [Validators.required]),\n                    DEFTrailerServiceType: this.fb.control(fuelAsset.DEFTrailerServiceType, []),\n                    Capacity: this.fb.control(fuelAsset.Capacity, [Validators.required, Validators.min(0.0001)]),\n                    TrailerHasPump: this.fb.control(fuelAsset.TrailerHasPump),\n                    IsTrailerMetered: this.fb.control(fuelAsset.IsTrailerMetered),\n                    Count: this.fb.control(fuelAsset.Count, [Validators.required, Validators.min(1)]),\n                    PackagedGoods: this.fb.control(fuelAsset.PackagedGoods),\n                    IsFuelAssets: this.fb.control(true),\n                }))\n            });\n\n            let DefAssets = this.f.FleetInfo.get('DefAssets') as FormArray;\n            wizardFormDataJSON.FleetInfo.DefAssets.forEach((defAssets: any) => {\n                DefAssets.push(this.fb.group({\n                    FuelTrailerServiceTypeFTL: this.fb.control(defAssets.FuelTrailerServiceTypeFTL, []),\n                    DEFTrailerServiceType: this.fb.control(defAssets.DEFTrailerServiceType, [Validators.required]),\n                    Capacity: this.fb.control(defAssets.Capacity, [Validators.required, Validators.min(0.0001)]),\n                    TrailerHasPump: this.fb.control(defAssets.TrailerHasPump),\n                    IsTrailerMetered: this.fb.control(defAssets.IsTrailerMetered),\n                    Count: this.fb.control(defAssets.Count, [Validators.required, Validators.min(1)]),\n                    PackagedGoods: this.fb.control(defAssets.PackagedGoods),\n                    IsFuelAssets: this.fb.control(false),\n                }))\n            });\n\n            if(!this.f.CompanyInfo.get('IsNewCompany').value){\n                this.f.CompanyInfo.get('IsNewCompany').markAllAsTouched();\n                //this.isCompanyNameExist(this.f.CompanyInfo.get('CompanyName').value?.Name);\n                this.disableCompanyControls(!this.f.CompanyInfo.get('IsNewCompany').value);\n            }\n        }\n    }\n    isSubmitted = false;\n    public onSubmit() {\n        \n        this.formSubmited = true;\n\n        if (!this.f.Token.value) {\n            Declarations.msgwarning(\"Invalid invitation link.\", undefined, undefined);\n            return;\n        }\n\n        if (this.wizardForm.valid) {\n            if (!this.f.CompanyInfo.get('IsNewCompany').value) {\n                let input = this.wizardForm.value;\n                input.CompanyInfo.IsNewCompany = false;\n\n                this.pageloader = true;\n                this.invitationService.SaveInvitedRequest(input).subscribe(response => {\n                    this.pageloader = false;\n                    localStorage.setItem('wizardData', '');\n                    if (response && response.StatusCode == 0 && response.EntityId) {\n                        this.isSubmitted = true;\n                        //this.router.navigate(['/Invitation/Submit']); \n                        //this.router.navigateByUrl('/Submit');  // open welcome component\n                        //Declarations.msgsuccess(\"Thank You for your information. email will be send to Company Admin to confirm account\", undefined, undefined);\n                        //Declarations.msgsuccess(\"Request created successfully.\", undefined, undefined);\n                        //this.router.navigate([window.location.href = \"/Account/Register?supplierURL=&invitationId=\" + response.EntityId]);\n                    }\n                    else {\n                        Declarations.msgerror(\"Failed\", undefined, undefined);\n                    }\n                });\n                return;\n            }\n            else {\n                //SET SERVICE OFFERINGS\n                let serviceOffers = this.wizardForm.get('ServiceOffering') as FormArray;\n                serviceOffers.controls.forEach((serviceOffer: FormControl, index: number) => {\n                    let _serviceOffer = serviceOffer.value;\n                    if (_serviceOffer.IsEnable && _serviceOffer.SelectedStates.length > 0) {\n                        if (_serviceOffer.AreaWide == 2 && _serviceOffer.SelectedZipCodes.length > 0) {\n                            let allZipCodes = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] as ServiceArea[];\n                            let selectedZips = _serviceOffer.SelectedZipCodes.map((a: { ZipCode: string; }) => a.ZipCode) as string[];\n                            serviceOffer.get('ServiceAreas').setValue(allZipCodes.filter(a => selectedZips.includes(a.ZipCode)));\n                        }\n                        else {\n                            let allStates: ServiceArea[] = [];\n                            _serviceOffer.SelectedStates.forEach((t) => { allStates.push({ StateId: t.Id } as ServiceArea); });\n                            serviceOffer.get('ServiceAreas').setValue(allStates);\n                        }\n                    }\n                });\n\n                this.pageloader = true;\n                this.invitationService.SaveInvitedRequest(this.wizardForm.value).subscribe(response => {\n                    this.pageloader = false;\n                    localStorage.setItem('wizardData', '');\n                    if (response && response.StatusCode == 0 && response.EntityId) {\n                        Declarations.msgsuccess(\"Request created successfully.\", undefined, undefined);\n                        if (response.EntityNumber == null || response.EntityNumber == \"\" || response.EntityNumber == undefined)\n                            this.router.navigate([window.location.href = \"/Account/Register?supplierURL=&invitationId=\" + response.EntityId]);\n                        else\n                            this.router.navigate([window.location.href = \"/Account/Register?supplierURL=\" + response.EntityNumber +\"&invitationId=\" + response.EntityId]);\n                    }\n                    else {\n                        Declarations.msgerror(\"Failed\", undefined, undefined);\n                    }\n                });\n            }\n\n\n        }\n    }\n}","<div *ngIf=\"!isSubmitted\">\r\n    <div class=\"row custom-bg\" [style.background-image]=\"'url(' + backgroundImage + ')'\">\r\n            <div class=\"loader\" *ngIf=\"pageloader\">\r\n                <div class=\"loading-content text-center\">\r\n                    <div class=\"spinner\"></div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\" *ngIf=\"pageloader\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div> -->\r\n            <div class=\"col-sm-12 p-0\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 bg-white fixed\" style=\"z-index: 2;\" [ngStyle]=\"getHeaderColor()\">\r\n                            <img [src]=\"logoImage\" alt=\"\" style=\"position: sticky;height: 50px;top: 0;\" class=\"py-2\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row wizard\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"\" style=\"position: sticky; top: 4rem;\">\r\n\r\n                                <!--<app-left-menu class=\"fixed-areaa\"></app-left-menu>-->\r\n                                <div class=\"list-group bg-white shadow\">\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.ContactInfo)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.ContactInfo\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.ContactInfo ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"fas fa-user\"></i></span>Contact\r\n                                        Information\r\n                                    </button>\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.CompanyInfo)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.CompanyInfo\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.CompanyInfo ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"far fa-building\"></i></span>Company\r\n                                        Information\r\n                                    </button>\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.FleetInfo)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.FleetInfo\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.FleetInfo ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"fas fa-truck-moving\"></i></span>Fleet\r\n                                        Information\r\n                                    </button>\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.ServiceOfferings)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.ServiceOfferings\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.ServiceOfferings ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"fas fa-cogs\"></i></span>Service\r\n                                        Offerings\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-9 rightmenu pb-5\">\r\n                            <!-- Contact Info -->\r\n                            <div>\r\n                                <form [formGroup]=\"wizardForm\">\r\n\r\n                                    <div #ContactInformation class=\"section pt-130\">\r\n                                        <div formGroupName=\"UserInfo\"\r\n                                             (visibilityChange)=\"scrollToElemen(WizardTabEnum.ContactInfo)\"\r\n                                             [threshold]=\"threshold\" class=\"shadow border bg-white p-3 rounded-lg\"\r\n                                             id=\"contact-information\">\r\n                                            <div class=\"row mb-3\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <h1 class=\"mb-1\">Contact Information</h1>\r\n                                                    <h4>Please enter your details to build your account </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <div id=\"usertitle\">\r\n                                                        <label for=\"UserInfo_Title\">\r\n                                                            Title<span class=\"text-danger\" aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <input class=\"form-control form-control-lg\" id=\"UserInfo_Title\"\r\n                                                               formControlName=\"Title\" type=\"text\">\r\n                                                        <div *ngIf=\"formSubmited && f.UserInfo.get('Title').errors\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.UserInfo.get('Title').errors?.required\">\r\n                                                                Title is required\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <label for=\"UserInfo_FirstName\">\r\n                                                        First Name<span class=\"text-danger\">*</span>\r\n                                                    </label>\r\n                                                    <input name=\"UserInfo_FirstName\" formControlName=\"FirstName\"\r\n                                                           class=\"form-control form-control-lg\" />\r\n                                                    <div *ngIf=\"formSubmited && f.UserInfo.get('FirstName').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('FirstName').errors?.required\">\r\n                                                            First Name is required\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <label for=\"UserInfo_LastName\">\r\n                                                        Last Name<span class=\"text-danger\">*</span>\r\n                                                    </label>\r\n                                                    <input name=\"UserInfo_LastName\" formControlName=\"LastName\"\r\n                                                           class=\"form-control form-control-lg\" />\r\n                                                    <div *ngIf=\"formSubmited && f.UserInfo.get('LastName').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('LastName').errors?.required\">\r\n                                                            Last Name is required\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <label for=\"UserInfo_Email\">\r\n                                                        Email<span class=\"text-danger\">*</span>\r\n                                                    </label>\r\n                                                    <input name=\"UserInfo_Email\" formControlName=\"Email\"\r\n                                                           class=\"form-control form-control-lg\" />\r\n                                                    <div *ngIf=\"formSubmited && f.UserInfo.get('Email').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('Email').errors?.required\">\r\n                                                            Email is required\r\n                                                        </span>\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('Email').errors?.pattern\">\r\n                                                            Invalid email\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div #CompanyInformation class=\"section pt-130\">\r\n                                        <div formGroupName=\"CompanyInfo\"\r\n                                             (visibilityChange)=\"scrollToElemen(WizardTabEnum.CompanyInfo)\"\r\n                                             [threshold]=\"threshold\" class=\"shadow border bg-white p-3 rounded-lg\"\r\n                                             id=\"company-information\">\r\n                                            <div class=\"row mb-3\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <h1 class=\"mb-1\">Company Information</h1>\r\n                                                    <h4>Tell us more about your company</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <div id=\"CompanyName\">\r\n                                                        <label for=\"CompanyInfo_CompanyName\">\r\n                                                            Company Name<span class=\"required pl4\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <!-- <input class=\"form-control\" id=\"CompanyInfo_CompanyName\"\r\n                                                    formControlName=\"CompanyName\" placeholder=\"Company Name\"\r\n                                                    (change)=\"isCompanyNameExist($event.target.value)\"> -->\r\n\r\n                                                        <ng-autocomplete [data]=\"Companies\" [searchKeyword]=\"'Name'\"\r\n                                                                         formControlName=\"CompanyName\" [itemTemplate]=\"itemTemplate\"\r\n                                                                         [notFoundTemplate]=\"notFoundTemplate\"\r\n                                                                         (change)=\"isCompanyNameExist($event.target.value)\"\r\n                                                                         (selected)=\"companySeleted($event)\">\r\n                                                        </ng-autocomplete>\r\n                                                        <ng-template #itemTemplate let-item>\r\n                                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                                        </ng-template>\r\n                                                        <ng-template #notFoundTemplate let-notFound>\r\n                                                            <div [innerHTML]=\"notFound\"></div>\r\n                                                        </ng-template>\r\n\r\n                                                        <div *ngIf=\"!companyLoader && formSubmited && f.CompanyInfo.get('CompanyName').errors;\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.CompanyInfo.get('CompanyName').errors?.required\">\r\n                                                                Company Name is required\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div *ngIf=\"!companyLoader && !f.CompanyInfo.get('CompanyName').errors && !f.CompanyInfo.get('IsNewCompany').value && f.CompanyInfo.get('CompanyName').touched\">\r\n                                                            <span class=\"text-danger\">\r\n                                                                This company already exists. Please click the Finish & save button to request an account.\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div *ngIf=\"companyLoader\">\r\n                                                            <span class=\"text-danger\">\r\n                                                                Validating company..\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <div id=\"CompanyTypeId\">\r\n                                                        <label for=\"CompanyInfo_CompanyTypeId\">\r\n                                                            Company Type<span class=\"text-danger\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <select formControlName=\"CompanyTypeId\"\r\n                                                                class=\"form-control form-control-lg\" placeholder=\"Select Type\"\r\n                                                                [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                            <!-- (change)=\"setStateName(product, $event)\" -->\r\n                                                            <option [value]=\"null\" disabled>Select Type</option>\r\n                                                            <option *ngFor=\"let ct of invitedCompanyTypes\" [value]=\"ct.Id\">\r\n                                                                {{ct.Name}}\r\n                                                            </option>\r\n                                                        </select>\r\n                                                        <div *ngIf=\"formSubmited && f.CompanyInfo.get('CompanyTypeId').errors\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.CompanyInfo.get('CompanyTypeId').errors?.required\">\r\n                                                                Company Type is required\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <div class=\"pa bg-white z-index5 loading-wrapper\"\r\n                                                         *ngIf=\"_loadingAddress\">\r\n                                                        <span class='spinner-dashboard pa'></span>\r\n                                                    </div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"UserDetails_CompanyTypeId\">\r\n                                                                Company Address\r\n                                                                <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"CompanyAddress\"\r\n                                                                       formControlName=\"CompanyAddress\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('CompanyAddress').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('CompanyAddress').errors?.required\">\r\n                                                                    Address is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"UserInfo_FirstName\">\r\n                                                                Zip Code<span class=\"color-maroon\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"Zip\" formControlName=\"Zip\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       (change)=\"getAddressByZip($event.target.value)\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('Zip').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('Zip').errors?.required\">\r\n                                                                    Zip is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                City<span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"City\" formControlName=\"City\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('City').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('City').errors?.required\">\r\n                                                                    City is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                County<span class=\"text-danger\"\r\n                                                                            aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"County\" formControlName=\"County\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                State<span class=\"required pl4\"\r\n                                                                           aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <select formControlName=\"StateId\"\r\n                                                                        class=\"form-control form-control-lg\"\r\n                                                                        [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                    <option [value]=\"null\" disabled>Select State</option>\r\n                                                                    <option *ngFor=\"let st of StatesListByCountry\"\r\n                                                                            [value]=\"st.Id\">\r\n                                                                        {{st.Name}}&nbsp;({{st.Code}})\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('StateId').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('StateId').errors?.required\">\r\n                                                                    State is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                Country<span class=\"text-danger\"\r\n                                                                             aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <select formControlName=\"CountryId\" class=\"form-control\"\r\n                                                                        (change)=\"countryChanged()\"\r\n                                                                        [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                    <option [value]=\"null\" disabled>Select Country</option>\r\n                                                                    <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Id\">\r\n                                                                        {{ct.Code}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('CountryId').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('CountryId').errors?.required\">\r\n                                                                    Country is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_PhoneType\">\r\n                                                                Phone Type<span class=\"text-danger\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <select formControlName=\"PhoneType\"\r\n                                                                        class=\"form-control form-control-lg\"\r\n                                                                        placeholder=\"Select Type\"\r\n                                                                        [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                    <option [value]=\"null\" disabled>Select Type</option>\r\n                                                                    <option *ngFor=\"let pt of PhoneTypes\" [value]=\"pt.Id\">\r\n                                                                        {{pt.Name}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('PhoneType').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('PhoneType').errors?.required\">\r\n                                                                    Phone Type is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_PhoneNumber\">\r\n                                                                Phone Number<span class=\"text-danger\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"PhoneNumber\" formControlName=\"PhoneNumber\"\r\n                                                                       class=\"form-control input-phoneformat phoneNumber form-control-lg\"\r\n                                                                       (change)=\"IsPhoneNumberValid($event.target.value)\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('PhoneNumber').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('PhoneNumber').errors?.required\">\r\n                                                                    Phone Number is required\r\n                                                                </span>\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('PhoneNumber').errors?.pattern\">\r\n                                                                    Invalid Phone Number\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"!f.CompanyInfo.get('PhoneNumber').errors && f.CompanyInfo.get('PhoneNumber').value && isPhoneNumberValid==false\">\r\n                                                                <span class=\"color-orange fs12\">\r\n                                                                    Unable to verify number! You will miss Text\r\n                                                                    Alerts.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div #FleetInformation class=\"section pt-130\">\r\n                                        <div (visibilityChange)=\"scrollToElemen(WizardTabEnum.FleetInfo)\"\r\n                                             [threshold]=\"threshold\" class=\"shadow border bg-white p-3 rounded-lg\"\r\n                                             id=\"fleet-information\">\r\n                                            <div formGroupName=\"FleetInfo\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <h1 class=\"mb-1\">Fleet Information</h1>\r\n                                                        <h4>Tell us more about your trailers</h4>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <label class=\"h5\">Fuel Assets</label>\r\n                                                        <button type=\"button\" class=\"btn btn-link fs14 ml-3 mb-2\"\r\n                                                                id=\"fuel_asset\" value=\"+ Add New\"\r\n                                                                (click)=\"openFuelAssetForm(true)\">\r\n                                                            <!-- (click)=\"bolDetail.initDrops(invoiceForm.get('Drops').value,InvoiceModel?.Drops);bolDetail.toggleOpen(true, null);bolDetail.getAddedProductDetails(invoiceForm.get('Drops').value)\" -->\r\n                                                            <i class=\"fa fa-plus-circle\"></i> Add New\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div class=\"ibox mb0\">\r\n                                                            <div class=\"ibox-content no-border px-0\">\r\n                                                                <div id=\"div-fuel-assets-grid\" class=\"table-responsive\">\r\n                                                                    <table id=\"fuel-assets-grid-datatable\"\r\n                                                                           class=\"table table-hover\">\r\n                                                                        <thead>\r\n                                                                            <tr>\r\n                                                                                <th>Trailer Type</th>\r\n                                                                                <th>Capacity per asset(G)</th>\r\n                                                                                <th>Does Trailer have Pump?</th>\r\n                                                                                <th>Is Trailer Metered?</th>\r\n                                                                                <th>Count</th>\r\n                                                                                <th></th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody>\r\n                                                                            <tr *ngFor=\"let trail of f.FleetInfo.get('FuelAssets')['value'];let i=index\">\r\n                                                                                <td>\r\n                                                                                    {{getFuelTrailerAssetTypeName(trail.FuelTrailerServiceTypeFTL)}}\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Capacity}}</td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.TrailerHasPump\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.TrailerHasPump\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.IsTrailerMetered\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.IsTrailerMetered\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Count}}</td>\r\n                                                                                <td>\r\n                                                                                    <a (click)=\"removeAsset(i, true)\">\r\n                                                                                        <i class=\"fa fa-trash text-danger fs16\"\r\n                                                                                           data-placement=\"top\"\r\n                                                                                           data-toggle=\"tooltip\"\r\n                                                                                           title=\"Remove\">\r\n                                                                                        </i>\r\n                                                                                    </a>\r\n                                                                                </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <label class=\"h5\">DEF Assets</label>\r\n                                                        <button type=\"button\" class=\"btn btn-link fs14 ml-3 mb-2\"\r\n                                                                id=\"def_asset\" value=\"+ Add New\"\r\n                                                                (click)=\"openFuelAssetForm(false)\">\r\n                                                            <!-- (click)=\"bolDetail.initDrops(invoiceForm.get('Drops').value,InvoiceModel?.Drops);bolDetail.toggleOpen(true, null);bolDetail.getAddedProductDetails(invoiceForm.get('Drops').value)\" -->\r\n                                                            <i class=\"fa fa-plus-circle\"></i> Add New\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div class=\"ibox mb0\">\r\n                                                            <div class=\"ibox-content no-border px-0\">\r\n                                                                <div id=\"div-def-assets-grid\" class=\"table-responsive\">\r\n                                                                    <table id=\"def-assets-grid-datatable\"\r\n                                                                           class=\"table table-hover\">\r\n                                                                        <thead>\r\n                                                                            <tr>\r\n                                                                                <th>Trailer Type</th>\r\n                                                                                <th>Capacity per asset(G)</th>\r\n                                                                                <th>Packaged Goods</th>\r\n                                                                                <th>Does Trailer have Pump?</th>\r\n                                                                                <th>Is Trailer Metered?</th>\r\n                                                                                <th>Count</th>\r\n                                                                                <th></th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody>\r\n                                                                            <tr *ngFor=\"let trail of f.FleetInfo.get('DefAssets')['value']; let i=index\">\r\n                                                                                <td>\r\n                                                                                    {{getDefTrailerAssetTypeName(trail.DEFTrailerServiceType)}}\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Capacity}}</td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.PackagedGoods\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.PackagedGoods\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.TrailerHasPump\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.TrailerHasPump\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.IsTrailerMetered\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.IsTrailerMetered\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Count}}</td>\r\n                                                                                <td>\r\n                                                                                    <a (click)=\"removeAsset(i, false)\">\r\n                                                                                        <i class=\"fa fa-trash text-danger fs16\"\r\n                                                                                           data-placement=\"top\"\r\n                                                                                           data-toggle=\"tooltip\"\r\n                                                                                           title=\"Remove\">\r\n                                                                                        </i>\r\n                                                                                    </a>\r\n                                                                                </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div #ServiceOffering class=\"section pt-130 pr\">\r\n\r\n                                        <div (visibilityChange)=\"scrollToElemen(WizardTabEnum.ServiceOfferings)\"\r\n                                             [threshold]=\"threshold\">\r\n                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\r\n                                                 *ngIf=\"offeringloader\">\r\n                                                <span class=\"spinner-dashboard pa\"></span>\r\n                                            </div>\r\n\r\n                                            <div class=\"shadow border bg-white p-3 rounded-lg\" id=\"service-information\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <h1 class=\"mb-1\">Service Offerings</h1>\r\n                                                        <h4>Please list market footprint per service offering</h4>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div [formArrayName]=\"'ServiceOffering'\">\r\n                                                            <ng-container *ngFor=\"let service of wizardForm.get('ServiceOffering')['controls']; let i = index;\">\r\n                                                                <div [formGroupName]=\"i\">\r\n\r\n                                                                    <div class=\"border rounded p-4\"\r\n                                                                         *ngIf=\"activeServiceOffering==(+i+1)\">\r\n\r\n                                                                        <div class=row>\r\n                                                                            <div class=\"col-12 font-bold\">\r\n                                                                                Do you Offer\r\n                                                                                {{ServiceOfferingTypesDisplay[service.get('ServiceDeliveryType').value]}}\r\n                                                                                Deliveries ?\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"row mt-2\">\r\n                                                                            <div class=\"col-12\">\r\n                                                                                <div [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'pntr-none subSectionOpacity' : ''\">\r\n                                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                                        <input class=\"form-check-input\"\r\n                                                                                               formControlName=\"IsEnable\"\r\n                                                                                               id=\"radio-enable-yes-{{i}}\"\r\n                                                                                               type=\"radio\" [value]=\"true\"\r\n                                                                                               (change)=\"updateServiceValidation(service, true, service.get('AreaWide').value)\"\r\n                                                                                               [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                        <label class=\"form-check-label\"\r\n                                                                                               for=\"radio-enable-yes-{{i}}\">Yes</label>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                                        <input class=\"form-check-input\"\r\n                                                                                               formControlName=\"IsEnable\"\r\n                                                                                               id=\"radio-enable-false-{{i}}\"\r\n                                                                                               type=\"radio\" [value]=\"false\"\r\n                                                                                               (change)=\"goToNextQuestion();updateServiceValidation(service, false, service.get('AreaWide').value)\"\r\n                                                                                               [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                        <label class=\"form-check-label\"\r\n                                                                                               for=\"radio-enable-false-{{i}}\">No</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        <div class=\"row mt-3\"\r\n                                                                             [class]=\"service.get('IsEnable').value ? 'mb-3' : 'mb-3 pntr-none subSectionOpacity'\">\r\n                                                                            <div class=\"col-sm-3 mb-2\">\r\n                                                                                <select formControlName=\"AreaWide\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        (change)=\"stateChangedSingle(service, i, true);updateServiceValidation(service, true, $event.target.value)\"\r\n                                                                                        [disableControl]=\"!service.get('IsEnable').value || !f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                    <option value=\"1\">State wide</option>\r\n                                                                                    <option value=\"2\">Zip wide</option>\r\n                                                                                </select>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-sm-3\">\r\n                                                                                <select formControlName=\"SelectedCountry\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        (change)=\"serviceCountryChanged(service)\"\r\n                                                                                        [disableControl]=\"!service.get('IsEnable').value || !f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                    <option value=\"null\" disabled>\r\n                                                                                        Select Country\r\n                                                                                    </option>\r\n                                                                                    <option *ngFor=\"let country of CountryList\"\r\n                                                                                            value=\"{{country.Id}}\">\r\n                                                                                        {{country.Code}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                                <div *ngIf=\"formSubmited && service.get('SelectedCountry').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedCountry').errors?.required\">\r\n                                                                                        Country is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'col-sm-3 pntr-none subSectionOpacity' : 'col-sm-3'\"\r\n                                                                                 id=\"stateDiv\">\r\n                                                                                <ng-multiselect-dropdown #multiSelect1\r\n                                                                                                         [placeholder]=\"'Select States'\"\r\n                                                                                                         [settings]=\"DdlSettings\"\r\n                                                                                                         [data]=\"StatesListByCountryForService(service.get('SelectedCountry').value)\"\r\n                                                                                                         formControlName=\"SelectedStates\"\r\n                                                                                                         (onSelect)=\"stateChangedSingle(service, i, true)\"\r\n                                                                                                         (onSelectAll)=\"stateChangedAll(service, i, true, $event)\"\r\n                                                                                                         (onDeSelect)=\"stateChangedSingle(service, i, false)\"\r\n                                                                                                         (onDeSelectAll)=\"stateChangedAll(service, i, false, $event)\">\r\n                                                                                </ng-multiselect-dropdown>\r\n                                                                                <div *ngIf=\"formSubmited && service.get('SelectedStates').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedStates').errors?.required\">\r\n                                                                                        State is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"(service.get('AreaWide').value == 2)\"\r\n                                                                                 [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'col-sm-3 pntr-none subSectionOpacity' : 'col-sm-3'\">\r\n                                                                                <ng-multiselect-dropdown #multiSelect2\r\n                                                                                                         [placeholder]=\"'Select City'\"\r\n                                                                                                         [settings]=\"ddlCitySettings\"\r\n                                                                                                         [data]=\"dataForEachServiceType[ServiceOfferingTypes[+i + 1] + '_CitiesByState']\"\r\n                                                                                                         formControlName=\"SelectedCities\"\r\n                                                                                                         (onSelect)=\"cityChangedSingle(service, i, true)\"\r\n                                                                                                         (onSelectAll)=\"cityChangedAll(service, i, true, $event)\"\r\n                                                                                                         (onDeSelect)=\"cityChangedSingle(service, i, false)\"\r\n                                                                                                         (onDeSelectAll)=\"cityChangedAll(service, i, false, $event)\">\r\n                                                                                </ng-multiselect-dropdown>\r\n                                                                                <div \r\n                                                                                     *ngIf=\"formSubmited && service.get('SelectedCities').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedCities').errors?.required\">\r\n                                                                                        City is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"(service.get('AreaWide').value == 2)\"\r\n                                                                                 [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'col-sm-3 pntr-none subSectionOpacity' : 'col-sm-3'\">\r\n                                                                                <ng-multiselect-dropdown #multiSelect3\r\n                                                                                                         [placeholder]=\"'Select Zip Codes'\"\r\n                                                                                                         [settings]=\"ZipDdlSettings\"\r\n                                                                                                         [data]=\"dataForEachServiceType[ServiceOfferingTypes[+i + 1] + '_ZipCodesByCities']\"\r\n                                                                                                         formControlName=\"SelectedZipCodes\">\r\n                                                                                </ng-multiselect-dropdown>\r\n                                                                                <div \r\n                                                                                     *ngIf=\"formSubmited && service.get('SelectedZipCodes').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedZipCodes').errors?.required\">\r\n                                                                                        Zip Code is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        <div class=\"row mt-3\">\r\n                                                                            <div class=\"col-sm-6 text-left\">\r\n                                                                                <nav aria-label=\"...\">\r\n                                                                                    <ul \r\n                                                                                        class=\"pagination pagination-sm mb-0\">\r\n\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.FTL\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.FTL ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.FTL)\">1</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.LTL\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.LTL ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.LTL)\">2</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.LTLWetHosing\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.LTLWetHosing ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.LTLWetHosing)\">3</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.DEF\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.DEF ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.DEF)\">4</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.DEFWetHosing\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                            [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.DEFWetHosing ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.DEFWetHosing)\">5</a>\r\n                                                                                        </li>\r\n                                                                                    </ul>\r\n                                                                                </nav>\r\n                                                                            </div>\r\n\r\n                                                                            <div class=\"col-sm-6 text-right\">\r\n                                                                                <input type=\"button\"\r\n                                                                                       class=\"btn btn-primary btn-sm\"\r\n                                                                                       value=\"Prev\" [ngStyle]=\"getButtonColor()\"\r\n                                                                                       (click)=\"setServiceQuestion(+activeServiceOffering-1)\"\r\n                                                                                       [disabled]=\"activeServiceOffering==1\" \r\n                                                                                       [ngStyle]=\"activeServiceOffering!=1 ? getButtonColor(): {}\"\r\n                                                                                       #prev (mouseenter)=\"removeBtnPrimaryClass(prev)\"/>\r\n                                                                                <input type=\"button\"\r\n                                                                                       class=\"btn btn-primary btn-sm\"\r\n                                                                                       value=\"Next\" [ngStyle]=\"getButtonColor()\"\r\n                                                                                       (click)=\"setServiceQuestion(+activeServiceOffering+1)\"\r\n                                                                                       [disabled]=\"activeServiceOffering==5\" \r\n                                                                                       [ngStyle]=\"activeServiceOffering!=5 ? getButtonColor(): {}\"\r\n                                                                                       #next (mouseenter)=\"removeBtnPrimaryClass(next)\"/>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"floating-buttons white-bg pt10\" [ngStyle]=\"getHeaderColor()\">\r\n                                        <div class=\"row mr20\">\r\n                                            <div class=\"col-sm-12 text-right\">\r\n\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-lg\" [ngStyle]=\"activeWizard!=4? getButtonColor(): {}\" \r\n                                                        [disabled]=\"activeWizard==4\"\r\n                                                        (click)=\"scrollToElement(+activeWizard+1)\"\r\n                                                        #next1 (mouseenter)=\"removeBtnPrimaryClass(next1)\">Next</button>\r\n\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" [ngStyle]=\"!f.UserInfo.invalid && !f.CompanyInfo.invalid? getButtonColor(): {}\"\r\n                                                        [disabled]=\"f.UserInfo.invalid || f.CompanyInfo.invalid\"\r\n                                                        data-toggle=\"modal\" data-target=\"#confirmationModal\" (click)=\"onFinishAndSave()\"\r\n                                                        #finishAndSave (mouseenter)=\"removeBtnPrimaryClass(finishAndSave)\">Finish &\r\n                                                    save</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-sidebar-container>\r\n            <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'right'\" [showBackdrop]=\"true\"\r\n                        style=\"height: 100vh\">\r\n                <div class=\"header-panel\">\r\n                    <div class=\"heading\">\r\n                        <a (click)=\"_opened=false\"><i class=\"fa fa-close fs21 mr-3 float-left\"></i></a>\r\n                        <h3 class=\"d-inline-block\">Create Trailer</h3>\r\n                    </div>\r\n                    <form [formGroup]=\"fuelAssetForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ts_type\">Trailer Type</label>\r\n                                    <ng-container *ngIf=\"fuelAssetForm.get('IsFuelAssets').value && AllTrailerAssetTypes\">\r\n                                        <select class=\"form-control\" formControlName=\"FuelTrailerServiceTypeFTL\"\r\n                                                [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                            <option [value]=\"null\" disabled>Select</option>\r\n                                            <option *ngFor=\"let asset of AllTrailerAssetTypes?.FuelTrailerAssetType\"\r\n                                                    [value]=\"asset.Id\">\r\n                                                {{asset.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div \r\n                                             *ngIf=\"fuelAssetForm.get('FuelTrailerServiceTypeFTL').dirty || fuelAssetForm.get('FuelTrailerServiceTypeFTL').touched && fuelAssetForm.get('FuelTrailerServiceTypeFTL').errors\">\r\n                                            <label style=\"color:red\"\r\n                                                   *ngIf=\"fuelAssetForm.get('FuelTrailerServiceTypeFTL').errors?.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                    <ng-container *ngIf=\"!fuelAssetForm.get('IsFuelAssets').value && AllTrailerAssetTypes\">\r\n                                        <select class=\"form-control\" formControlName=\"DEFTrailerServiceType\"\r\n                                                [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                            <option [value]=\"null\" disabled>Select</option>\r\n                                            <option *ngFor=\"let asset of AllTrailerAssetTypes?.DefTrailerAssetType\"\r\n                                                    [value]=\"asset.Id\">\r\n                                                {{asset.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div \r\n                                             *ngIf=\"(fuelAssetForm.get('DEFTrailerServiceType').dirty || fuelAssetForm.get('DEFTrailerServiceType').touched) && fuelAssetForm.get('DEFTrailerServiceType').errors\">\r\n                                            <label style=\"color:red\"\r\n                                                   *ngIf=\"fuelAssetForm.get('DEFTrailerServiceType').errors?.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ts_type\">Capacity per asset(G)</label>\r\n                                    <input type=\"number\" formControlName=\"Capacity\" class=\"form-control\"\r\n                                           placeholder=\"Capacity\"\r\n                                           [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                    <div \r\n                                         *ngIf=\"(fuelAssetForm.get('Capacity').dirty || fuelAssetForm.get('Capacity').touched) && fuelAssetForm.get('Capacity').errors\">\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Capacity').errors?.required\">\r\n                                            Required\r\n                                        </label>\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Capacity').errors.min\">\r\n                                            Invalid capacity\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ts_type\">Count</label>\r\n                                    <input type=\"number\" formControlName=\"Count\" class=\"form-control\" placeholder=\"Count\"\r\n                                           [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                    <div\r\n                                         *ngIf=\"(fuelAssetForm.get('Count').dirty || fuelAssetForm.get('Count').touched) && fuelAssetForm.get('Count').errors\">\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Count').errors?.required\">\r\n                                            Required\r\n                                        </label>\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Count').errors.min\">\r\n                                            Invalid Count\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"ts_type\" class=\"d-block\">Is your trailer metered?</label>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"metered\"\r\n                                                       formControlName=\"TrailerHasPump\" [name]=\"'TrailerHasPump'\"\r\n                                                       [value]=\"true\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"metered\">Yes</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"non_metered\"\r\n                                                       formControlName=\"TrailerHasPump\" [name]=\"'TrailerHasPump'\"\r\n                                                       [value]=\"false\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"non_metered\">No</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"ts_type\" class=\"d-block\">Does your trailer have pump?</label>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"metered1\"\r\n                                                       formControlName=\"IsTrailerMetered\" [name]=\"'IsTrailerMetered'\"\r\n                                                       [value]=\"true\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"metered1\">Yes</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"non_metered1\"\r\n                                                       formControlName=\"IsTrailerMetered\" [name]=\"'IsTrailerMetered'\"\r\n                                                       [value]=\"false\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"non_metered1\">No</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-6\" *ngIf=\"!fuelAssetForm.get('IsFuelAssets').value\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"ts_type\" class=\"d-block\">Is packaged goods?</label>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"metered2\"\r\n                                                       formControlName=\"PackagedGoods\" [name]=\"'PackagedGoods'\" [value]=\"true\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"metered2\">Yes</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"non_metered2\"\r\n                                                       formControlName=\"PackagedGoods\" [name]=\"'PackagedGoods'\" [value]=\"false\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"non_metered2\">No</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right\">\r\n                                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"_opened=false\">\r\n                                <input id=\"Submit\" type=\"button\" value=\"Submit\" [disabled]=\"fuelAssetForm.invalid\"\r\n                                       (click)=\"onSubmitFleetInfo()\" class=\"btn btn-primary btnSubmit\"\r\n                                       #submit1 (mouseenter)=\"removeBtnPrimaryClass(submit1)\"\r\n                                       [ngStyle]=\"!fuelAssetForm.invalid? getButtonColor(): {}\">\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </ng-sidebar>\r\n        </ng-sidebar-container>\r\n    </div>\r\n<app-invitation-submit *ngIf=\"isSubmitted\"></app-invitation-submit>\r\n\r\n<div class=\"modal fade\" id=\"confirmationModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmationModal\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"mt-2 f-bold\">Thank you for your information</h2>\r\n                <p>\r\n                    You will be sent an email prompting you to register your account.<br>\r\n                    This will allow you to log into your account.\r\n                </p>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"\r\n                #close (mouseenter)=\"removeBtnPrimaryClass(close)\"\r\n                [ngStyle]=\"getButtonColor()\">Close</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onSubmit()\"\r\n                #submit (mouseenter)=\"removeBtnPrimaryClass(submit)\"\r\n                [ngStyle]=\"getButtonColor()\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InvitationComponent } from './invitation.component';\nimport { LeftMenuComponent } from './left-menu/left-menu.component'\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InvitationSubmitComponent } from './invitation-submit/invitation-submit.component';\nimport { VisibilityChangeModule } from 'src/app/directives/visibility-change.module';\n\nconst routeInv: Routes = [\n  {\n    path: \"\",\n    component: InvitationComponent\n  },\n  {\n    path: \"/Index\",\n    component: InvitationComponent\n  },\n  {\n    path: \"/Submit\",\n    component: InvitationSubmitComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    InvitationComponent,\n    LeftMenuComponent,\n    InvitationSubmitComponent\n  ],\n\n  imports: [\n    CommonModule,\n    DirectiveModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    VisibilityChangeModule,\n    RouterModule.forChild(routeInv)\n  ]\n})\nexport class InvitationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-menu',\n  templateUrl: './left-menu.component.html',\n  styleUrls: ['./left-menu.component.css']\n})\nexport class LeftMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"]}