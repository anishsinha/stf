{"version":3,"sources":["webpack:///src/app/carrier/models/CarrierDetailsViewModel.ts","webpack:///src/app/self-service-alias/company-carrier-mapping/company-carrier-mapping.component.ts","webpack:///src/app/self-service-alias/company-carrier-mapping/company-carrier-mapping.component.html","webpack:///src/app/self-service-alias/create-terminal-item-code/create-terminal-item-code.component.ts","webpack:///src/app/self-service-alias/create-terminal-item-code/create-terminal-item-code.component.html","webpack:///src/app/self-service-alias/customer-mapping/customer-mapping.component.ts","webpack:///src/app/self-service-alias/customer-mapping/customer-mapping.component.html","webpack:///src/app/self-service-alias/edit-carrier-mapping/edit-carrier-mapping.component.ts","webpack:///src/app/self-service-alias/edit-customer/edit-customer.component.ts","webpack:///src/app/self-service-alias/edit-customer/edit-customer.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-bulk-plant-mappings/external-bulk-plant-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-bulk-plant-mappings/external-bulk-plant-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-carrier-mappings/external-carrier-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-carrier-mappings/external-carrier-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-customer-mappings/external-customer-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-customer-mappings/external-customer-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-customerlocation-mappings/external-customerlocation-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-customerlocation-mappings/external-customerlocation-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-driver-mappings/external-driver-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-driver-mappings/external-driver-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-product-mappings/external-product-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-product-mappings/external-product-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-supplier-mappings/external-supplier-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-supplier-mappings/external-supplier-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-terminal-mappings/external-terminal-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-terminal-mappings/external-terminal-mappings.component.html","webpack:///src/app/self-service-alias/external-entity-mappings/external-vehicle-mappings/external-vehicle-mappings.component.ts","webpack:///src/app/self-service-alias/external-entity-mappings/external-vehicle-mappings/external-vehicle-mappings.component.html","webpack:///src/app/self-service-alias/models/ProductMappingModel.ts","webpack:///src/app/self-service-alias/product-mapping/product-mapping.component.ts","webpack:///src/app/self-service-alias/product-mapping/product-mapping.component.html","webpack:///src/app/self-service-alias/self-service-alias.component.ts","webpack:///src/app/self-service-alias/self-service-alias.component.html","webpack:///src/app/self-service-alias/self-service-alias.module.ts","webpack:///src/app/self-service-alias/terminal-item-code-mapping/terminal-item-code-mapping.component.ts","webpack:///src/app/self-service-alias/terminal-item-code-mapping/terminal-item-code-mapping.component.html","webpack:///src/app/self-service-alias/terminal-mapping/terminal-mapping.component.ts","webpack:///src/app/self-service-alias/terminal-mapping/terminal-mapping.component.html"],"names":["CarrierDetailsViewModel","AssignedTerminalId","CompanyCarrierMappingComponent","carrierService","dispatcherService","isShowLoader","dtOptions","dtTrigger","isShowCountryDDL","CarrierDetails","IsLoading","ddlSettingsById","carrierList","SelectedCarrierList","SelectedTerminalList","popoverTitle","confirmButtonText","cancelButtonText","AssignedTerminalIdList","carriers","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","initializeCarrierGridInfo","getTerminalIdsForMapping","getCarriers","changes","countryId","currentValue","clearForm","getAssignedTerminalIdsForMapping","subscribe","response","event","keyword","target","value","toLowerCase","slice","filter","elem","Name","indexOf","SelectedCarrierName","selectedCarrierId","Id","GetCarriersForSupplier","data","getCarrierData","next","carrier","mappingId","deleteCarrierMapping","StatusCode","msgsuccess","StatusMessage","undefined","$","DataTable","clear","destroy","getCarrierMappingsData","msgerror","headerText","HeaderText","rowIndex","assignedCarrierName","jQuery","text","assignedCarrierId","trim","CarrierName","AssignedCarrierId","msgwarning","carrierInput","TerminalCompanyAliasId","AssignedTerminalIdName","CountryId","SaveCarrierMapping","exportInvitedColumns","columns","dom","buttons","extend","exportOptions","title","orientation","pagingType","pageLength","lengthMenu","IsValidForm","carrierMapping","isValid","selectedTerminalId","IsValidValue","selectedCarrierName","onCarrierNameSearched","onSubmit","selector","templateUrl","styleUrls","CreateTerminalItemCodeComponent","httpService","_fb","result","TerminalSupplierList","TerminalSupplierDescList","TerminalItemCodeMappingModel","GetTerminalSupplierUrl","PostSaveTerminalMappingUrl","PostUpdateTerminalMappingUrl","selectedTerminalSupplier","selectedItemDesc","minDate","Date","maxDate","setFullYear","getFullYear","init","terminalmappingForm","group","id","terminalSupplierId","required","itemDescriptionId","itemCode","effectiveDate","expiryDate","getTerminalSupplier","change","previousValue","fetchAll","pipe","TerminalDescriptionList","c","controls","markAsTouched","valid","x","split","length","updateTerminalMapping","addTerminalMapping","TerminalSupplierId","ItemDescriptionId","ItemCode","EffectiveDate","ExpiryDate","postData","res","emit","$event","setValue","seteffectiveDate","setexpiryDate","encapsulation","None","CustomerMappingComponent","isShow","CarrierCustomers","initializeCarrierCustomers","getAllCustomerData","Customer","CustomerDataToBeSend","JSON","parse","stringify","EditCarrierMappingComponent","EditCustomerComponent","fb","IdTaken","CustomerForm","control","TotalDDTCount","TotalInvoiceCount","BuyerCompanyId","BuyerName","TotalOrders","CarrierAssignedCustomerId","customerDetail","CustomerIdNotTaken","submitForm","CustomerDetail","get","checkMyCustomerIdDuplicate","saveAndUpdateCustomerMapping","closeSlidePanel","reset","ExternalBulkPlantMappingsComponent","externalMappingsService","externalBulkPlantMappings","initializeBulkPlantCustomers","getBulkPlantsData","getBulkPlantsForExternalMapping","refreshDatatable","dtElements","forEach","dtElement","dtInstance","then","bulkPlant","editBulkPlantDetails","ThirdPartyId","thirdPartyCompanyId","SaveExternalBulkPlantMappings","file","files","selectedFile","element","btnCloseBulkModal","nativeElement","click","BulkUploadBulkPlantMapping","bulkUpload","onFileChange","onFileUpload","ExternalCarrierMappingsComponent","externalCarrierMappings","getCarriersData","getCarriersForExternalMapping","editCarrierDetails","SaveExternalCarrierMappings","BulkUploadCarrierMapping","ExternalCustomerMappingsComponent","externalCustomerMappings","getCustomersForExternalMapping","customer","editCustomerDetails","SaveExternalCustomerMappings","BulkUploadCustomerMapping","ExternalCustomerlocationMappingsComponent","externalCustomerLocationMappings","getCustomerLocationsData","getCustomerLocationsForExternalMapping","customerLocation","editCustomerLocationsDetails","location","SaveExternalCustomerLocationMappings","BulkUploadCustomerLocationMapping","ExternalDriverMappingsComponent","externalDriverMappings","initializeDriverCustomers","getDriversData","getDriversForExternalMapping","driver","editDriverDetails","SaveExternalDriverMappings","BulkUploadDriverMapping","ExternalProductMappingsComponent","externalProductMappings","getProductsData","getProductsForExternalMapping","product","editProductDetails","SaveExternalProductMappings","BulkUploadProductMapping","ExternalSupplierMappingsComponent","externalSupplierMappings","getSuppliersData","getSuppliersForExternalMapping","supplier","editSupplierDetails","SaveExternalSupplierMappings","BulkUploadSupplierMapping","ExternalTerminalMappingsComponent","externalTerminalMappings","getTerminalData","getTerminalsForExternalMapping","terminal","editTerminalDetails","SaveExternalTerminalMappings","BulkUploadTerminalMapping","ExternalVehicleMappingsComponent","externalVehicleMappings","getVehicleData","getVehiclesForExternalMapping","vehicle","editVehicleDetails","SaveExternalVehicleMappings","BulkUploadVehicleMapping","ProductMappingModel","StateList","CityList","TerminalList","FuelType","ProductMappingGridModel","ProductMappingComponent","FuelTypeList","ProductMappingList","UpdateProductMappingList","IsShowBulkUploadPopup","ddlSettingsByCode","ddlSettingsByIdSingleSelect","MaxFileUploadSize","SelectedFiles","ProductMappingForm","States","Cities","Terminals","FuelTypes","MyProductId","BackOfficeProductId","DriverProductId","CompanyId","initializeProductMappingDatatableGrid","CurrentCompanyId","Number","currentCompanyId","getServingFuelTypesByCompany","SelectedCountryId","isNaN","getDefaultServingCountry","getStates","getProductMappingGridDetails","selectedStates","selectedCities","selectedTerminals","selectedFuelTypes","input","stateIds","map","s","StateIds","join","cityIds","CityIds","terminalIds","TerminalIds","fuelTypeIds","FuelTypeIds","DefaultCountryId","getCities","patchValue","getTerminals","myProductId","backOfficeProductId","driverProductId","saveProductMapping","rowToUpdate","updateProductNames","filterGrid","mapping","key","nameToUpdate","innerText","existingId","obj","push","companyId","model","postDeleteProductMapping","state","getCitiesByStateId","states","m","city","cities","formData","FormData","isValidFile","append","name","postBulkUploadTemplate","CloseBulkUploadPopup","extension","getExtension","size","timestamp","getTime","downloadProductMappingTemplate","blob","a","document","createElement","objectUrl","URL","createObjectURL","href","download","revokeObjectURL","fileName","basename","pop","pos","lastIndexOf","exportColumns","onStateSelect","onStateDeSelect","onStateSelectAll","onStateDeSelectAll","onCitySelect","onCityDeSelect","onCitySelectAll","onCityDeSelectAll","clearFilter","showBulkUploadPopup","SelfServiceAliasComponent","CountryEnum","CountryType","isShowCarrier","CountryList","IsShowProductMappingComponent","IsShowCarrierMappingComponent","isShowTerminalmappingCode","isShowFuelGroup","SelectedCompany","ServingCountries","externalCompanies","pdiTabName","defaultCountryId","getExternalCompanies","getCountries","carrierMappingVisible","currencyDdlHide","localStorage","setItem","CountryFilter","find","t","locationViewType","getItem","GetCountries","companyChanged","routeSelfService","path","component","SelfServiceAliasModule","forChild","declarations","imports","TerminalItemCodeMappingComponent","terminalMappingList","popoverSaveTitle","popoverDeleteTitle","DeleteTerminalItemCodeMappingUrl","aaSorting","orderable","getTerminalItemCodeMapping","datatableRerender","datatableElement","item","createTerminalItemCodeComponent","f","Code","obj1","openSidePannel","postBulkUploadTerminalItemCodeMappingTemplate","downloadTerminalItemCodeMappingTemplate","addTerminalItemCode","getOutput","TerminalMappingComponent","locationService","selected","TerminalsList","SelectedTerminalId","ddlSettingsForTerminal","existingAssignedTerminalId","IsLiftFileValidationEnabled","TerminalMappingForm","SelectedTerminal","MyTerminalId","SelectedTerminalSupplier","initializeUserTerminalData","getAllUserTerminalData","getTerminalsForMapping","getTerminalSuppliers","stateId","loadData","args","TermSupplierId","TerminalId","objTerminalId","SelectedTermSupplier","TerminalMappingViewModel","IsBulkPlant","checkDuplicateTerminalId","saveTerminalMapping","updateTerminalId","updateTerminal","postDeleteTerminalMappingById","getTerminalMappingGrid","selectedCountryId"],"mappings":"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","file":"self-service-alias-self-service-alias-module-es5.js","sourcesContent":["\r\nimport { DropDownItem } from 'src/app/lfv-dashboard/LiftFileModels';\r\n\r\nexport class CarrierDetailsViewModel {\r\n    constructor() {\r\n        this.AssignedTerminalId = new DropDownItem();\r\n    }\r\n    public AssignedTerminalId: DropDownItem;\r\n    public CarrierName: string;\r\n    public AssignedCarrierId: string;\r\n    public Id: number; //mapping Id\r\n    public CountryId: number;\r\n    public AssignedTerminalIdName: string;\r\n    public TerminalCompanyAliasId: number;\r\n    \r\n}","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DropdownItem } from 'src/app/carrier-companies/service/assigncarrier.service';\r\nimport { CarrierDetailsViewModel } from 'src/app/carrier/models/CarrierDetailsViewModel';\r\nimport { TerminalMappingModel } from 'src/app/carrier/models/location';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage'\r\n\r\n@Component({\r\n    selector: 'app-company-carrier-mapping',\r\n    templateUrl: './company-carrier-mapping.component.html',\r\n    styleUrls: ['./company-carrier-mapping.component.css']\r\n})\r\nexport class CompanyCarrierMappingComponent implements OnInit {\r\n    @Input() countryId: number;\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    CarrierDataToBeSend: CarrierDetailsViewModel;\r\n    public isShowCountryDDL: boolean = false;\r\n    public CarrierDetails: CarrierDetailsViewModel[] = [];\r\n    public HeaderText: string;\r\n    public IsLoading: boolean = false;\r\n    ddlSettingsById: any = {};\r\n    //TerminalList = [];  \r\n    carrierList = [];    \r\n    //Carriermapping: CarrierDetailsViewModel = {};\r\n    SelectedCarrierList = [];\r\n    SelectedTerminalList = [];\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n\r\n    \r\n    //\r\n    public SelectedCarrierName: string;\r\n    public selectedCarrierId: number;\r\n    public AssignedTerminalIdList = [];\r\n    public carriers = [];\r\n    public AssignedCarrierId: string;\r\n    public CountryId: number;\r\n  \r\n    constructor(private carrierService: CarrierService, private dispatcherService: DispatcherService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ddlSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        \r\n        this.initializeCarrierGridInfo();\r\n       // this.getCarrierMappingsData();\r\n        this.isShowCountryDDL = false;\r\n        this.getTerminalIdsForMapping();\r\n        this.getCarriers();        \r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n        //     this.getDefaultServingCountry();\r\n        // }\r\n        // else {\r\n        if (changes.countryId && changes.countryId.currentValue) {\r\n            \r\n            this.clearForm();\r\n        }\r\n        //}\r\n    }\r\n\r\n    private getTerminalIdsForMapping() {\r\n        this.IsLoading = true;\r\n        this.AssignedTerminalIdList = [];\r\n        this.carrierService.getAssignedTerminalIdsForMapping().subscribe((response) => {\r\n           // console.log({ \"response\": response});\r\n            this.AssignedTerminalIdList = response;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n    onCarrierNameSearched(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.carriers = this.carrierList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });       \r\n    }\r\n\r\n    onCarrierSelected(event: any) {\r\n        this.SelectedCarrierName = event.Name;\r\n        this.selectedCarrierId = event.Id;\r\n        this.carriers = this.carrierList.slice();\r\n    }\r\n\r\n    private getCarriers() {\r\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\r\n            this.carrierList = data;\r\n        });\r\n    }\r\n    getCarrierMappingsData() {\r\n        this.isShowLoader = true;\r\n        this.carrierService.getCarrierData(this.countryId).subscribe(data => {\r\n            this.CarrierDetails = data;\r\n            this.isShowLoader = false;\r\n            this.dtTrigger.next();\r\n           \r\n        });\r\n    }\r\n\r\n    deleteMapping(carrier: CarrierDetailsViewModel) {\r\n        let mappingId = carrier.Id;\r\n        this.carrierService.deleteCarrierMapping(mappingId).subscribe(response => {\r\n            if (response.StatusCode == 0) {\r\n                Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n                this.getCarrierMappingsData();\r\n\r\n            }\r\n            else if (response.StatusCode == 1) {\r\n                Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n      \r\n    }\r\n\r\n    setPanelHeader(headerText: string) {\r\n        this.HeaderText = headerText;\r\n    }\r\n\r\n    cancelMapping(carrier: CarrierDetailsViewModel) {\r\n        this.getCarrierMappingsData();\r\n    }\r\n\r\n    updateMapping(carrier: CarrierDetailsViewModel, rowIndex: number) {\r\n        let assignedCarrierName = jQuery('#CarrierName_'+rowIndex).text();\r\n        let assignedCarrierId = jQuery('#CarrierID_'+rowIndex).text();\r\n        if (assignedCarrierName && assignedCarrierId) {\r\n            if ((assignedCarrierName.trim() == carrier.CarrierName)\r\n                && (assignedCarrierId.trim() == carrier.AssignedCarrierId)) {\r\n                Declarations.msgwarning(\"Update Assigned CarrierID/CarrierName \", undefined, undefined);\r\n                return;\r\n            }\r\n            let carrierInput = new CarrierDetailsViewModel();\r\n            carrierInput.AssignedTerminalId.Id = carrier.TerminalCompanyAliasId;\r\n            carrierInput.AssignedTerminalId.Name = carrier.AssignedTerminalIdName;\r\n            carrierInput.Id = carrier.Id;\r\n            carrierInput.CountryId = this.countryId;\r\n            carrierInput.CarrierName = carrier.CarrierName;\r\n            carrierInput.TerminalCompanyAliasId = carrier.TerminalCompanyAliasId;\r\n            carrierInput.AssignedCarrierId = carrier.AssignedCarrierId;\r\n            if (assignedCarrierName.trim() != carrier.CarrierName) {\r\n                carrierInput.CarrierName = assignedCarrierName.trim();\r\n            }\r\n            if (assignedCarrierId.trim() != carrier.AssignedCarrierId) {\r\n                carrierInput.AssignedCarrierId = assignedCarrierId.trim();\r\n            }\r\n            this.carrierService.SaveCarrierMapping(carrierInput).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.isShowLoader = false;\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n                    this.getCarrierMappingsData();\r\n                    //this.updatedCarrierName = null;\r\n                    //this.updatedCarrierId = null;\r\n                    //this.selectedMappingId = null;\r\n                }\r\n                else if (data.StatusCode == 1) {\r\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            Declarations.msgwarning(\"Update Assigned CarrierID/CarrierName \", undefined, undefined);\r\n            return;\r\n        }        \r\n    }\r\n\r\n    //editCarrier(carrier) {\r\n    //    this.CarrierDataToBeSend = carrier;\r\n    //}\r\n\r\n    clearForm() {\r\n        $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n        this.getTerminalIdsForMapping();\r\n        this.getCarrierMappingsData();\r\n    }\r\n\r\n    initializeCarrierGridInfo() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Carrier Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Carrier Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n   \r\n\r\n    public onSubmit() {\r\n        if (this.IsValidForm())\r\n        {\r\n            this.IsLoading = true;\r\n            this.isShowLoader = true;\r\n            let carrierMapping = new CarrierDetailsViewModel();\r\n            carrierMapping.AssignedTerminalId = this.SelectedTerminalList[0];\r\n            carrierMapping.CarrierName = this.SelectedCarrierName;\r\n            carrierMapping.AssignedCarrierId = this.AssignedCarrierId;\r\n            carrierMapping.CountryId = this.countryId;\r\n           \r\n            this.carrierService.SaveCarrierMapping(carrierMapping).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.isShowLoader = false;\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n                    this.getCarrierMappingsData();\r\n                    this.SelectedTerminalList = [];\r\n                    this.SelectedCarrierName = \"\";\r\n                    this.AssignedCarrierId = \"\";\r\n                }\r\n                else if (data.StatusCode == 1) {\r\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n                }\r\n            });            \r\n        }\r\n        else\r\n        {\r\n            Declarations.msgerror(\"Terminal ID/CarrierName/CarrierID is required\", undefined, undefined);\r\n        }\r\n    }\r\n\r\n    public IsValidForm() {\r\n        let isValid = false;\r\n        let selectedTerminalId = this.IsValidValue (this.SelectedTerminalList[0]);\r\n        let selectedCarrierName = this.IsValidValue(this.SelectedCarrierName);\r\n        let assignedCarrierId = this.IsValidValue(this.AssignedCarrierId);  \r\n        if (selectedTerminalId && selectedCarrierName && assignedCarrierId)\r\n        {\r\n            isValid = true;\r\n        }\r\n        return isValid;\r\n        \r\n    }\r\n    public IsValidValue(value:any)\r\n    {\r\n        if (value) {\r\n            return true;\r\n        } else\r\n        { return false; }\r\n    }\r\n}\r\n\r\n","<div class=\"col-sm-12\">\r\n    <div class=\"row\">\r\n        <div class=\"well col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label>Terminal ID</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Terminal ID'\"\r\n                                                 [(ngModel)]=\"SelectedTerminalList\" \r\n                                                 [settings]=\"ddlSettingsById\" [data]=\"AssignedTerminalIdList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label>Carrier Name</label>\r\n                        <input type=\"text\" class=\"form-control\" (input)=\"onCarrierNameSearched($event)\" [(ngModel)]=\"SelectedCarrierName\"/>\r\n                        <ul class=\"auto-select border-dash\">\r\n                            <li *ngFor=\"let carrier of carriers;\"\r\n                                (click)=\"onCarrierSelected(carrier)\"\r\n                                [attr.selected]=\"carrier.Name== SelectedCarrierName\">\r\n                                {{carrier.Name}}\r\n                            </li>\r\n                        </ul>\r\n                        <input  type=\"hidden\" [(ngModel)]=\"selectedCarrierId\"/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label>CarrierID</label>\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"AssignedCarrierId\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"text-left form-buttons mt20\">\r\n                        <button id=\"submit-product-mapping-form\" type=\"submit\" class=\"mt4 btn btn-lg btn-default valid\"\r\n                            [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\"\r\n                            (click)=\"onSubmit()\">Assign</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-carrier-grid\" class=\"table-responsive\">\r\n                        <table id=\"carrier-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                            class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"TerminalID\">Terminal ID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"AssignedCarrierId\">CarrierID</th>\r\n                                    <th data-key=\"Action\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody >\r\n                                <tr *ngFor=\"let carrier of CarrierDetails; let i = index\">\r\n                                    <td>{{carrier.AssignedTerminalIdName}}</td>\r\n                                    <td contenteditable=\"true\" class=\"edit-td\" id=\"CarrierName_{{i}}\">\r\n                                        {{carrier.CarrierName}}\r\n                                    </td>\r\n                                    <td contenteditable=\"true\" class=\"edit-td\" id=\"CarrierID_{{i}}\">\r\n                                        {{carrier.AssignedCarrierId}}\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                                [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\"\r\n                                                [cancelText]=\"cancelButtonText\" placement=\"bottom\" (cancel)=\"cancelMapping(carrier)\"\r\n                                                (confirm)=\"updateMapping(carrier,i)\">\r\n                                            <i class=\"fs21 fas fa-save color-green\" alt=\"Update\"\r\n                                               title=\"Update\"></i>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                                [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\"\r\n                                                [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                                (confirm)=\"deleteMapping(carrier)\">\r\n                                            <i class=\"fas fa-trash-alt color-maroon\"\r\n                                               alt=\"Delete\" title=\"Delete\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<!--<div id=\"edit-carrier-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"\r\n                    (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div *ngIf=\"CarrierDataToBeSend\">\r\n            <app-edit-carrier-mapping #ViewCarrier (getCarrierData)=\"getCarrierData()\"\r\n                [CarrierDataToBeSend]=\"CarrierDataToBeSend\"></app-edit-carrier-mapping>\r\n        </div>\r\n    </div>\r\n</div>-->","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { first } from 'rxjs/operators';\nimport { DropdownItem } from 'src/app/carrier-companies/service/assigncarrier.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { HttpGenericService } from 'src/app/http-generic.service';\nimport { TerminalItemCodeMappingModel } from '../models/TerminalItemCodeMappingModel';\n@Component({\n    selector: 'app-create-terminal-item-code',\n    templateUrl: './create-terminal-item-code.component.html',\n    styleUrls: ['./create-terminal-item-code.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CreateTerminalItemCodeComponent implements OnInit, OnChanges {\n  @Input() countryId: any;\n  @Output() result = new EventEmitter();\n  public IsLoading: boolean;\n  TerminalSupplierList: DropdownItem[] = [];\n  TerminalSupplierDescList: DropdownItem[] = [];\n  public ddlSettingsById = {};\n  terminalmappingForm: FormGroup;\n  TerminalItemCodeMappingModel: TerminalItemCodeMappingModel = {};\n  GetTerminalSupplierUrl = '/Carrier/SelfServiceAlias/GetTerminalSupplierAndDesc?CountryId=';\n  PostSaveTerminalMappingUrl = '/Carrier/SelfServiceAlias/SaveTerminalItemCodeMapping';\n  PostUpdateTerminalMappingUrl = '/Carrier/SelfServiceAlias/UpdateTerminalItemCodeMapping';\n\n  selectedTerminalSupplier = [];\n  selectedItemDesc = [];\n  constructor(private httpService: HttpGenericService, private _fb: FormBuilder) { }\nminDate=new Date();\nmaxDate=new Date();\n  ngOnInit() {\n    this.maxDate.setFullYear(this.maxDate.getFullYear()+20);\n    this.ddlSettingsById = {\n      singleSelection: true,\n      idField: 'Id',\n      textField: 'Name',\n      // selectAllText: 'Select All',\n      // unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true\n    };\n    this.init();\n  }\n\n  init() {\n    this.terminalmappingForm = this._fb.group({\n      id: [''],\n      terminalSupplierId: ['', Validators.required],\n      itemDescriptionId: ['', Validators.required],\n      itemCode: ['', Validators.required],\n      effectiveDate: ['', Validators.required],\n      expiryDate: ['']\n    });\n    this.getTerminalSupplier();\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.countryId && change.countryId.currentValue) {\n      this.countryId = change.countryId.currentValue;\n      if (change.countryId.previousValue && change.countryId.currentValue != change.countryId.previousValue) {\n        this.getTerminalSupplier();\n      }\n    }\n\n  }\n\n  getTerminalSupplier() {\n    this.IsLoading = true;\n    this.httpService.fetchAll(`${this.GetTerminalSupplierUrl}${this.countryId}`).pipe(first()).subscribe(result => {\n      this.IsLoading = false;\n      this.TerminalSupplierList = result.TerminalSupplierList;\n      this.TerminalSupplierDescList = result.TerminalDescriptionList;\n    });\n  }\n\n  onSubmit() {\n    for (let c in this.terminalmappingForm.controls) {\n      this.terminalmappingForm.controls[c].markAsTouched();\n    }\n    if (this.terminalmappingForm.valid) {\n      if (this.terminalmappingForm && this.terminalmappingForm.controls.id.value){\n        var x= this.terminalmappingForm.controls.itemCode.value.split(\",\");\n        if(x && x.length > 1){\n          Declarations.msgerror('Comma Seperated item code for update is not allowed', undefined, undefined);\n          return false;\n        }\n        this.updateTerminalMapping();\n      }\n       \n      else\n        this.addTerminalMapping();\n    }\n  }\n\n  private addTerminalMapping() {\n    this.TerminalItemCodeMappingModel = {};\n    this.IsLoading = true;\n    this.TerminalItemCodeMappingModel.TerminalSupplierId = this.terminalmappingForm.controls.terminalSupplierId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemDescriptionId = this.terminalmappingForm.controls.itemDescriptionId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemCode = this.terminalmappingForm.controls.itemCode.value;\n    this.TerminalItemCodeMappingModel.EffectiveDate = this.terminalmappingForm.controls.effectiveDate.value;\n    this.TerminalItemCodeMappingModel.ExpiryDate = this.terminalmappingForm.controls.expiryDate.value;\n\n    this.httpService.postData(this.PostSaveTerminalMappingUrl, this.TerminalItemCodeMappingModel).pipe(first()).subscribe(res => {\n      if (res.StatusCode == 0) {\n        this.result.emit(true);\n        Declarations.msgsuccess(res.StatusMessage, undefined, undefined);\n\n      } else\n        Declarations.msgerror(res.StatusMessage, undefined, undefined);\n      this.IsLoading = false;\n    })\n  }\n\n  private updateTerminalMapping() {\n    this.TerminalItemCodeMappingModel = {};\n    this.IsLoading = true;\n    this.TerminalItemCodeMappingModel.Id = this.terminalmappingForm.controls.id.value;\n    this.TerminalItemCodeMappingModel.TerminalSupplierId = this.terminalmappingForm.controls.terminalSupplierId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemDescriptionId = this.terminalmappingForm.controls.itemDescriptionId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemCode = this.terminalmappingForm.controls.itemCode.value;\n    this.TerminalItemCodeMappingModel.EffectiveDate = this.terminalmappingForm.controls.effectiveDate.value;\n    this.TerminalItemCodeMappingModel.ExpiryDate = this.terminalmappingForm.controls.expiryDate.value;\n\n    this.httpService.postData(this.PostUpdateTerminalMappingUrl, this.TerminalItemCodeMappingModel).pipe(first()).subscribe(res => {\n      if (res.StatusCode == 0) {\n        Declarations.msgsuccess(res.StatusMessage, undefined, undefined);\n        this.result.emit(true);\n      } else\n        Declarations.msgerror(res.StatusMessage, undefined, undefined);\n      this.IsLoading = false;\n    })\n\n  }\n  setexpiryDate($event) {\n    this.terminalmappingForm.controls.expiryDate.setValue($event);\n\n  }\n  seteffectiveDate($event) {\n    this.terminalmappingForm.controls.effectiveDate.setValue($event);\n\n  }\n\n}\n","<form [formGroup]=\"terminalmappingForm\" name=\"terminalmappingForm\" autocomplete=\"off\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Terminal Supplier <span class=\"color-maroon\">*</span></label>\r\n                        <ng-multiselect-dropdown class=\"single-select\" [placeholder]=\"'Select Terminal'\"\r\n                            formControlName=\"terminalSupplierId\" [(ngModel)]=\"selectedTerminalSupplier\"\r\n                            [settings]=\"ddlSettingsById\" [data]=\"TerminalSupplierList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"terminalmappingForm.get('terminalSupplierId').invalid && terminalmappingForm.get('terminalSupplierId').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('terminalSupplierId').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Terminal Supplier Description <span class=\"color-maroon\">*</span></label>\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                            [placeholder]=\"'Select Terminal Item Description'\" [(ngModel)]=\"selectedItemDesc\"\r\n                            formControlName=\"itemDescriptionId\"\r\n                            [settings]=\"ddlSettingsById\" [data]=\"TerminalSupplierDescList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"terminalmappingForm.get('itemDescriptionId').invalid && terminalmappingForm.get('itemDescriptionId').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('itemDescriptionId').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <label>{{terminalmappingForm?.get('id').value ? 'Terminal Item Code':'Terminal Item Code (s)'}}<span\r\n                                class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"itemCode\" />\r\n                        <span class=\"text-info\" *ngIf=\"!terminalmappingForm?.get('id').value\">Multiple Item Code\r\n                            separated by comma can be entered</span>\r\n                        <div *ngIf=\"terminalmappingForm.get('itemCode').invalid && terminalmappingForm.get('itemCode').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('itemCode').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Effective Date <span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" placeholder=\"Effective Date\" formControlName=\"effectiveDate\"\r\n                            (onDateChange)=\"seteffectiveDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                            [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                        <div *ngIf=\"terminalmappingForm.get('effectiveDate').invalid && terminalmappingForm.get('effectiveDate').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('effectiveDate').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Expiry Date </label>\r\n                        <input type=\"text\" placeholder=\"Expiry Date\" formControlName=\"expiryDate\" [minDate]=\"minDate\"\r\n                            [maxDate]=\"maxDate\" (onDateChange)=\"setexpiryDate($event);\" class=\"form-control datepicker\"\r\n                            myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <button id=\"submit-terminal-mapping-form\" type=\"submit\" class=\"mt4 btn btn-lg btn-primary valid\"\r\n                        [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\">\r\n                        Assign\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, Input, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CustomerDetailsViewModel } from 'src/app/carrier/models/CustomerDetailsViewModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\n\n@Component({\n  selector: 'app-customer-mapping',\n  templateUrl: './customer-mapping.component.html',\n  styleUrls: ['./customer-mapping.component.css']\n})\nexport class CustomerMappingComponent implements OnInit {\n   \n    isShow = false;\n    isShowLoader = false;\n    dtOptions: any = {};\n    dtTrigger: Subject<any> = new Subject();\n    CustomerDataToBeSend: CustomerDetailsViewModel; \n    public isShowCountryDDL: boolean = false;\n    public CarrierCustomers: CustomerDetailsViewModel[] = [];\n    public HeaderText: string;\n    public IsLoading: boolean = false;\n    \n    constructor(private carrierService: CarrierService) {\n       \n        };\n\n    ngOnInit() {\n        this.initializeCarrierCustomers();\n        this.getAllCustomerData();\n        this.isShowCountryDDL = false;\n  }\n    getDriverDetails() {\n        \n        $(\"#customer-grid-datatable\").DataTable().clear().destroy();\n    }\n\n    getAllCustomerData() {\n        this.isShowLoader = true;\n        this.carrierService.getAllCustomerData().subscribe(data => {\n            this.CarrierCustomers = data;\n            this.isShowLoader = false;\n            $(\"#customer-grid-datatable\").DataTable().clear().destroy();\n            this.dtTrigger.next();\n        });\n    }\n\n\n    setPanelHeader(headerText: string) {\n        this.HeaderText = headerText;\n    }\n\n\n    editDriver(Customer: any)\n    {\n        this.CustomerDataToBeSend = JSON.parse(JSON.stringify(Customer));\n    }\n\n    clearForm() {\n        $(\"#customer-grid-datatable\").DataTable().clear().destroy();\n        this.getAllCustomerData();\n    }\n\n    initializeCarrierCustomers() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Customer Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Customer Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n\n}\n","\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                        <table id=\"customer-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"BuyerName\">Company Name</th>\r\n                                    <!--<th data-key=\"TotalOrders\">Total Orders</th>-->\r\n                                    <th data-key=\"CarrierAssignedCustomerId\">My Customer Id</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let Customer of CarrierCustomers\">\r\n                                    <td>{{Customer.BuyerName}}</td>\r\n                                    <!--<td>{{Customer.TotalOrders}}</td>-->\r\n                                    <td>\r\n                                        <a (click)=\"setPanelHeader('Edit Customer Id');editDriver(Customer);\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','40%','60%')\">\r\n                                            <span *ngIf=\"Customer.CarrierAssignedCustomerId != null\">{{Customer.CarrierAssignedCustomerId}}</span>\r\n                                            <span *ngIf=\"Customer.CarrierAssignedCustomerId == null\">--</span>\r\n                                            <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<div id=\"driver-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div *ngIf=\"CustomerDataToBeSend\">\r\n            <app-edit-customer #ViewCustomer (getAllCustomerData)=\"getAllCustomerData()\" [CustomerDataToBeSend]=\"CustomerDataToBeSend\"></app-edit-customer>\r\n        </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { CarrierDetailsViewModel } from 'src/app/carrier/models/CarrierDetailsViewModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Declarations } from 'src/app/declarations.module';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n  selector: 'app-edit-carrier-mapping',\n  templateUrl: './edit-carrier-mapping.component.html',\n  styleUrls: ['./edit-carrier-mapping.component.css']\n})\nexport class EditCarrierMappingComponent implements OnInit {\n\n  //  public CarrierForm: FormGroup;\n  //  public isShowLoader: boolean = false;\n  //  @Input() CarrierDataToBeSend: CarrierDetailsViewModel;\n  //  @Output() getCarrierData: EventEmitter<any> = new EventEmitter();\n\n  //  constructor(public fb: FormBuilder, private carrierService: CarrierService) {\n  //      this.CarrierForm = this.fb.group({\n  //          Id: this.fb.control(0),          \n  //          CarrierCompanyId: this.fb.control(''),\n  //          CarrierName: this.fb.control(''),\n  //          TotalOrders: this.fb.control(''),\n  //          AssignedCarrierId: this.fb.control(''),\n  //          CompanyId: this.fb.control(''),\n  //      });\n  //  }\n\n  ngOnInit() {\n  }\n\n  //  checkDuplicateCarrierId(carrierDetail) {\n  //      this.carrierService.checkDuplicateCarrierId(carrierDetail).subscribe(data => {\n  //          if (data.StatusCode == 0) {\n  //              this.submitForm(carrierDetail);\n  //          }\n\n  //          if (data.StatusCode == 2) {\n  //              Declarations.msgerror(data.StatusMessage, undefined, undefined);\n  //          }\n  //      });\n  //  }\n\n  //  onSubmit() {\n  //      var CarrierDetail =\n  //      {\n  //          CarrierCompanyId: this.CarrierForm.get(\"CarrierCompanyId\").value,\n  //          CarrierName: this.CarrierForm.get(\"CarrierName\").value,\n  //          AssignedCarrierId: this.CarrierForm.get(\"AssignedCarrierId\").value,\n  //          Id: this.CarrierForm.get(\"Id\").value,\n  //          CompanyId: this.CarrierForm.get(\"CompanyId\").value\n  //      }\n  //      this.checkDuplicateCarrierId(CarrierDetail);\n  //  }\n\n  //  submitForm(CarrierDetail) {\n  //      this.isShowLoader = true;\n  //      this.carrierService.saveAndUpdateCarrierMapping(CarrierDetail).subscribe(data => {\n  //          this.isShowLoader = false;\n  //          if (data.StatusCode == 0) {\n  //              Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n  //              closeSlidePanel();\n  //              this.clearForm();\n  //          }\n  //          else if (data.StatusCode == 2) {\n  //              Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n  //          }\n  //          else {\n  //              Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n  //          }\n  //      });\n  //  }\n\n  //  clearForm() {\n  //      this.CarrierForm.reset();\n  //      $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\n  //      this.getCarrierData.emit();\n  //  }\n}\n","import { Component, OnInit, Output,Input, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,AbstractControl } from '@angular/forms';\nimport { CustomerDetailsViewModel } from 'src/app/carrier/models/CustomerDetailsViewModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Declarations } from 'src/app/declarations.module';\ndeclare function closeSlidePanel(): any;\n\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n \n    public CustomerForm: FormGroup;\n    public isShowLoader: boolean = false;\n    @Input() CustomerDataToBeSend: CustomerDetailsViewModel;\n    @Output() getAllCustomerData: EventEmitter<any> = new EventEmitter();\n    public IdTaken: number = 5;\n\n    constructor(public fb: FormBuilder, private carrierService: CarrierService) {\n        this.CustomerForm = this.fb.group({\n\n            Id: this.fb.control(0),\n            TotalDDTCount: this.fb.control(''),\n            TotalInvoiceCount: this.fb.control(''),\n            BuyerCompanyId: this.fb.control(''),\n            BuyerName: this.fb.control(''),\n            TotalOrders: this.fb.control(''),\n            CarrierAssignedCustomerId: this.fb.control(''),\n\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    checkMyCustomerIdDuplicate(customerDetail) {\n        this.carrierService.CustomerIdNotTaken(customerDetail).subscribe(data => {\n            if (data.StatusCode == 0) {\n                this.IdTaken = 0;\n                this.submitForm(customerDetail);\n            }\n\n             if (data.StatusCode == 2) {\n                 Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                 this.IdTaken = 2;\n            }\n        });\n    }\n\n    onSubmit() {\n        var CustomerDetail =\n        {\n            BuyerCompanyId: this.CustomerForm.get(\"BuyerCompanyId\").value,\n            BuyerName: this.CustomerForm.get(\"BuyerName\").value,\n            CarrierAssignedCustomerId: this.CustomerForm.get(\"CarrierAssignedCustomerId\").value,\n            Id: this.CustomerForm.get(\"Id\").value\n        }\n         this.checkMyCustomerIdDuplicate(CustomerDetail);\n    }\n\n    submitForm(CustomerDetail) {\n        this.isShowLoader = true;\n        this.carrierService.saveAndUpdateCustomerMapping(CustomerDetail).subscribe(data => {\n            this.isShowLoader = false;\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                this.IdTaken = 5;\n                closeSlidePanel();\n                this.clearForm();\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n            this.getAllCustomerData.emit();\n        });\n    }\n\n    clearForm() {\n        this.CustomerForm.reset();\n    }\n}\n","<form [formGroup]=\"CustomerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"side-panel-body\">\r\n        <div class=\"col-sm-12\" id=\"Customer-Form\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"hidden\" formControlName=\"BuyerCompanyId\" [(ngModel)]=\"CustomerDataToBeSend.BuyerCompanyId\" />\r\n                        <input type=\"hidden\" formControlName=\"TotalDDTCount\" [(ngModel)]=\"CustomerDataToBeSend.TotalDDTCount\" />\r\n                        <input type=\"hidden\" formControlName=\"TotalInvoiceCount\" [(ngModel)]=\"CustomerDataToBeSend.TotalInvoiceCount\" />\r\n                        <input type=\"hidden\" formControlName=\"Id\" [(ngModel)]=\"CustomerDataToBeSend.Id\" />\r\n\r\n                        <label>Company Name</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly formControlName=\"BuyerName\" [(ngModel)]=\"CustomerDataToBeSend.BuyerName\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>My Customer Id</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"CarrierAssignedCustomerId\" [(ngModel)]=\"CustomerDataToBeSend.CarrierAssignedCustomerId\" />\r\n                        <!--<input type=\"text\" class=\"form-control\" readonly formControlName=\"TotalOrders\" [(ngModel)]=\"CustomerDataToBeSend.TotalOrders\" />-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">-->\r\n                        <!--<label>My Customer Id</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"CarrierAssignedCustomerId\" [(ngModel)]=\"CustomerDataToBeSend.CarrierAssignedCustomerId\" />-->\r\n                    <!--</div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\"col-sm-12 text-right form-buttons\">\r\n            <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n            <button id=\"submit-driver-form\" type=\"submit\"  [disabled]=\"(!CustomerForm.dirty||CustomerDataToBeSend.CarrierAssignedCustomerId.trim() == ''|| CustomerDataToBeSend.CarrierAssignedCustomerId == null)\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalBulkPlantMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n  selector: 'app-external-bulk-plant-mappings',\r\n  templateUrl: './external-bulk-plant-mappings.component.html',\r\n  styleUrls: ['./external-bulk-plant-mappings.component.css']\r\n})\r\nexport class ExternalBulkPlantMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalBulkPlantMappings: ExternalBulkPlantMappingViewModel[] = [];\r\n    editBulkPlantDetails: ExternalBulkPlantMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeBulkPlantCustomers();\r\n        this.getBulkPlantsData();\r\n    }\r\n    getBulkPlantsData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getBulkPlantsForExternalMapping().subscribe(data => {\r\n            this.externalBulkPlantMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeBulkPlantCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'BulkPlant Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'BulkPlant Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editBulkPlant(bulkPlant: ExternalBulkPlantMappingViewModel) {\r\n        this.editBulkPlantDetails = JSON.parse(JSON.stringify(bulkPlant));\r\n    }\r\n    SaveExternalBulkPlantMappings(bulkPlant: ExternalBulkPlantMappingViewModel) {\r\n        bulkPlant.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalBulkPlantMappings(bulkPlant).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getBulkPlantsData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editBulkPlantDetails = null;\r\n    }\r\n\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadBulkPlantMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getBulkPlantsData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb10\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-bulkPlant-grid\" class=\"table-responsive\">\r\n                            <table id=\"bulkPlant-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"BulkPlantName\">Site/BulkPlant Name</th>\r\n                                        <th data-key=\"TargetBulkPlantValue\">Site/BulkPlant Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let BulkPlant of externalBulkPlantMappings\">\r\n                                        <td>{{BulkPlant.BulkPlantName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editBulkPlant(BulkPlant)\" class=\"btn btn-link\" onclick=\"slidePanel('#bulkPlant-panel','40%','60%')\">\r\n                                                <span *ngIf=\"BulkPlant.TargetBulkPlantValue != null\">{{BulkPlant.TargetBulkPlantValue}}</span>\r\n                                                <span *ngIf=\"BulkPlant.TargetBulkPlantValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    <div class=\"loader\" *ngIf=\"isShowLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"bulkPlant-panel\" class=\"side-panel\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15\">\r\n                <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Site/BulkPlant Mapping</h3>\r\n            </div>\r\n            <ng-container *ngIf=\"editBulkPlantDetails\">\r\n                <div class=\"side-panel-body\">\r\n                    <div class=\"col-sm-12\" id=\"BulkPlant-Form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Site/BulkPlant Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editBulkPlantDetails.BulkPlantName\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Site/BulkPlant Id</label>\r\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editBulkPlantDetails.TargetBulkPlantValue\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"col-sm-12 text-right form-buttons\">\r\n                        <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                        <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalBulkPlantMappings(editBulkPlantDetails)\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog \" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Site/BulkPlant CSV</h4>\r\n                        <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <span class=\"fa fa-download mr10 mt10\"></span>\r\n                            <a href=\"/Content/Template_Site_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-md-12 b-dashed\">\r\n                            <h2>\r\n                                <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                    <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                                </label>\r\n                            </h2>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                    <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkRecords\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalCarrierMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-carrier-mappings',\r\n  templateUrl: './external-carrier-mappings.component.html',\r\n  styleUrls: ['./external-carrier-mappings.component.css']\r\n})\r\nexport class ExternalCarrierMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalCarrierMappings: ExternalCarrierMappingViewModel[] = [];\r\n    editCarrierDetails: ExternalCarrierMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getCarriersData();\r\n    }\r\n    getCarriersData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getCarriersForExternalMapping().subscribe(data => {\r\n            this.externalCarrierMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Carriers Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Carriers Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editCarrier(carrier: ExternalCarrierMappingViewModel) {\r\n        this.editCarrierDetails = JSON.parse(JSON.stringify(carrier));\r\n    }\r\n    SaveExternalCarrierMappings(carrier: ExternalCarrierMappingViewModel) {\r\n        carrier.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalCarrierMappings(carrier).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getCarriersData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editCarrierDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadCarrierMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getCarriersData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-carrier-grid\" class=\"table-responsive\">\r\n                            <table id=\"carrier-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                        <th data-key=\"TargetCarrierValue\"> Carrier Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Carrier of externalCarrierMappings\">\r\n                                        <td>{{Carrier.CarrierName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editCarrier(Carrier)\" class=\"btn btn-link\" onclick=\"slidePanel('#carrier-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Carrier.TargetCarrierValue != null\">{{Carrier.TargetCarrierValue}}</span>\r\n                                                <span *ngIf=\"Carrier.TargetCarrierValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"carrier-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Carrier Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editCarrierDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Carrier-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Carrier Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCarrierDetails.CarrierName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Carrier Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editCarrierDetails.TargetCarrierValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalCarrierMappings(editCarrierDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Carrier CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Carrier_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChildren,QueryList,Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\nimport { ExternalCustomerMappingViewModel } from '../../models/ExternalMappingModel';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DataTableDirective } from 'angular-datatables';\ndeclare function closeSlidePanel(): any;\n@Component({\n    selector: 'app-external-customer-mappings',\n    templateUrl: './external-customer-mappings.component.html',\n    styleUrls: ['./external-customer-mappings.component.css']\n})\nexport class ExternalCustomerMappingsComponent implements OnInit {\n\n    isShowLoader = false;\n    dtOptions: any = {};\n    dtTrigger: Subject<any> = new Subject();\n    externalCustomerMappings: ExternalCustomerMappingViewModel[] = [];\n    editCustomerDetails: ExternalCustomerMappingViewModel;\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    @Input() thirdPartyCompanyId: number;\n    file: any;\n    selectedFile: any;\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\n    constructor(private externalMappingsService: ExternalMappingsService) { }\n\n    ngOnInit() {\n        this.initializeCarrierCustomers();\n        this.getAllCustomerData();\n    }\n    getAllCustomerData() {\n        this.isShowLoader = true;\n        this.externalMappingsService.getCustomersForExternalMapping().subscribe(data => {\n            this.externalCustomerMappings = data;\n            this.isShowLoader = false;\n            this.refreshDatatable();\n        });\n    }\n\n    initializeCarrierCustomers() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Customer Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Customer Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n    refreshDatatable(): void {\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\n            if (dtElement.dtInstance) {\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n            }\n        });\n        this.dtTrigger.next();\n    }\n    editCustomer(customer: ExternalCustomerMappingViewModel) {\n        this.editCustomerDetails = JSON.parse(JSON.stringify(customer));\n    }\n\n    SaveExternalCustomerMappings(customer: ExternalCustomerMappingViewModel) {\n        customer.ThirdPartyId = this.thirdPartyCompanyId;\n        this.isShowLoader = true;\n        this.externalMappingsService.SaveExternalCustomerMappings(customer).subscribe(data => {\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                closeSlidePanel();\n                this.clearForm();\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n            this.isShowLoader = false;\n            this.getAllCustomerData();\n        });\n    }\n\n    clearForm() {\n        this.editCustomerDetails = null;\n    }\n\n    onFileChange(event) {\n        this.file = event.target.files[0];\n    }\n    bulkUpload() {\n        this.selectedFile = null;\n        this.file = null;\n    }\n    onFileUpload() {\n        if (!this.file) {\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\n            return;\n        }\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\n        element.click();\n        this.isShowLoader = true;\n        this.externalMappingsService.BulkUploadCustomerMapping(this.file).subscribe(\n            (response: any) => {\n                if (response.StatusCode == 1) {\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                    this.isShowLoader = false;\n                } else {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                    this.getAllCustomerData();\n                }\n                this.file = null;\n            }\n        );\n    }\n}\n","<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                            <table id=\"customer-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"CustomerName\">Customer Name</th>\r\n                                        <th data-key=\"TargetCustomerValue\">Customer Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Customer of externalCustomerMappings\">\r\n                                        <td>{{Customer.CustomerName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editCustomer(Customer)\" class=\"btn btn-link\" onclick=\"slidePanel('#customer-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Customer.TargetCustomerValue != null\">{{Customer.TargetCustomerValue}}</span>\r\n                                                <span *ngIf=\"Customer.TargetCustomerValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"customer-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Customer Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editCustomerDetails\">\r\n                <div class=\"side-panel-body\">\r\n                    <div class=\"col-sm-12\" id=\"Customer-Form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Customer Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" readonly  [(ngModel)]=\"editCustomerDetails.CustomerName\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label> Customer Id</label>\r\n                                    <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"editCustomerDetails.TargetCustomerValue\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"col-sm-12 text-right form-buttons\">\r\n                        <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                        <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalCustomerMappings(editCustomerDetails)\">Submit</button>\r\n                    </div>\r\n                </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Customer CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Customer_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalCustomerLocationMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-customerlocation-mappings',\r\n  templateUrl: './external-customerlocation-mappings.component.html',\r\n  styleUrls: ['./external-customerlocation-mappings.component.css']\r\n})\r\nexport class ExternalCustomerlocationMappingsComponent implements OnInit {\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalCustomerLocationMappings: ExternalCustomerLocationMappingViewModel[] = [];\r\n    editCustomerLocationsDetails: ExternalCustomerLocationMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getCustomerLocationsData();\r\n  }\r\n    getCustomerLocationsData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getCustomerLocationsForExternalMapping().subscribe(data => {\r\n            this.externalCustomerLocationMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Location Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Location Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editCustomerLocation(customerLocation: ExternalCustomerLocationMappingViewModel) {\r\n        this.editCustomerLocationsDetails = JSON.parse(JSON.stringify(customerLocation));\r\n    }\r\n    SaveExternalCustomerLocationMappings(location: ExternalCustomerLocationMappingViewModel) {\r\n        location.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalCustomerLocationMappings(location).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getCustomerLocationsData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editCustomerLocationsDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadCustomerLocationMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getCustomerLocationsData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb10\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                            <table id=\"location-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"CompanyName\">Customer Name</th>\r\n                                        <th data-key=\"CustomerLocationName\">Customer Location</th>\r\n                                        <th data-key=\"TargetCustomerValue\"> Customer Id</th>\r\n                                        <th data-key=\"TargetCustomerLocationValue\"> Location Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Location of externalCustomerLocationMappings\">\r\n                                        <td>{{Location.CompanyName}}</td>\r\n                                        <td>{{Location.CustomerLocationName}}</td>\r\n                                        <td>{{Location.TargetCustomerValue}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editCustomerLocation(Location)\" class=\"btn btn-link\" onclick=\"slidePanel('#location-panel','40%')\">\r\n                                                <span *ngIf=\"Location.TargetCustomerLocationValue != null\">{{Location.TargetCustomerLocationValue}}</span>\r\n                                                <span *ngIf=\"Location.TargetCustomerLocationValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"location-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Customer Location Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editCustomerLocationsDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Location-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Customer Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCustomerLocationsDetails.CompanyName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Customer Location</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCustomerLocationsDetails.CustomerLocationName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Customer Id</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCustomerLocationsDetails.TargetCustomerValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>PDI Location Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editCustomerLocationsDetails.TargetCustomerLocationValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalCustomerLocationMappings(editCustomerLocationsDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Customer Location CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_CustomerLocation_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalDriverMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-driver-mappings',\r\n  templateUrl: './external-driver-mappings.component.html', \r\n  styleUrls: ['./external-driver-mappings.component.css']\r\n})\r\nexport class ExternalDriverMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalDriverMappings: ExternalDriverMappingViewModel[] = [];\r\n    editDriverDetails: ExternalDriverMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeDriverCustomers();\r\n        this.getDriversData();\r\n    }\r\n    getDriversData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getDriversForExternalMapping().subscribe(data => {\r\n            this.externalDriverMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeDriverCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Drivers Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Drivers Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editDriver(driver: ExternalDriverMappingViewModel) {\r\n        this.editDriverDetails = JSON.parse(JSON.stringify(driver));\r\n    }\r\n    SaveExternalDriverMappings(driver: ExternalDriverMappingViewModel) {\r\n        driver.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalDriverMappings(driver).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getDriversData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editDriverDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadDriverMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getDriversData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div>\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-driver-grid\" class=\"table-responsive\">\r\n                            <table id=\"driver-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"DriverName\">Driver Name</th>\r\n                                        <th data-key=\"Email\">Driver Email</th>\r\n                                        <th data-key=\"TargetDriverValue\"> Driver Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Driver of externalDriverMappings\">\r\n                                        <td>{{Driver.FirstName + ' ' + Driver.LastName}}</td>                                        \r\n                                        <td>{{Driver.Email}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editDriver(Driver)\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Driver.TargetDriverValue != null\">{{Driver.TargetDriverValue}}</span>\r\n                                                <span *ngIf=\"Driver.TargetDriverValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"driver-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Driver Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editDriverDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Driver-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Driver Name</label>\r\n                                <label class=\"form-control\">{{editDriverDetails.FirstName + ' ' + editDriverDetails.LastName}} </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Driver Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editDriverDetails.TargetDriverValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalDriverMappings(editDriverDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Driver CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Driver_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkDriver\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChildren, QueryList, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalProductMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n  selector: 'app-external-product-mappings',\r\n  templateUrl: './external-product-mappings.component.html',\r\n  styleUrls: ['./external-product-mappings.component.css']\r\n})\r\nexport class ExternalProductMappingsComponent implements OnInit {\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalProductMappings: ExternalProductMappingViewModel[] = [];\r\n    editProductDetails: ExternalProductMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getProductsData();\r\n  }\r\n    getProductsData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getProductsForExternalMapping().subscribe(data => {\r\n            this.externalProductMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Products Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Products Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editProduct(product: ExternalProductMappingViewModel) {\r\n        this.editProductDetails = JSON.parse(JSON.stringify(product));\r\n    }\r\n    SaveExternalProductMappings(product: ExternalProductMappingViewModel) {\r\n        product.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalProductMappings(product).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getProductsData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editProductDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadProductMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getProductsData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","\r\n<div class=\"well\">\r\n    <div class=\"row mb10\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                            <table id=\"product-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"ProductName\">Product Name</th>\r\n                                        <th data-key=\"TargetProductValue\"> Product Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Product of externalProductMappings\">\r\n                                        <td>{{Product.ProductName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editProduct(Product)\" class=\"btn btn-link\" onclick=\"slidePanel('#product-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Product.TargetProductValue != null\">{{Product.TargetProductValue}}</span>\r\n                                                <span *ngIf=\"Product.TargetProductValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"isShowLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"product-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Product Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editProductDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Product-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Product Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editProductDetails.ProductName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Product Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editProductDetails.TargetProductValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalProductMappings(editProductDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Product CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Product_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalSupplierMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n  selector: 'app-external-supplier-mappings',\r\n  templateUrl: './external-supplier-mappings.component.html',\r\n  styleUrls: ['./external-supplier-mappings.component.css']\r\n})\r\nexport class ExternalSupplierMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalSupplierMappings: ExternalSupplierMappingViewModel[] = [];\r\n    editSupplierDetails: ExternalSupplierMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getSuppliersData();\r\n    }\r\n    getSuppliersData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getSuppliersForExternalMapping().subscribe(data => {\r\n            this.externalSupplierMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Suppliers Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Suppliers Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editSupplier(supplier: ExternalSupplierMappingViewModel) {\r\n        this.editSupplierDetails = JSON.parse(JSON.stringify(supplier));\r\n    }\r\n    SaveExternalSupplierMappings(supplier: ExternalSupplierMappingViewModel) {\r\n        supplier.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalSupplierMappings(supplier).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getSuppliersData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editSupplierDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadSupplierMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getSuppliersData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","\r\n<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-supplier-grid\" class=\"table-responsive\">\r\n                            <table id=\"supplier-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"SupplierName\">Vendor</th>\r\n                                        <th data-key=\"TargetSupplierValue\"> Vendor Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Supplier of externalSupplierMappings\">\r\n                                        <td>{{Supplier.SupplierName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editSupplier(Supplier)\" class=\"btn btn-link\" onclick=\"slidePanel('#supplier-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Supplier.TargetSupplierValue != null\">{{Supplier.TargetSupplierValue}}</span>\r\n                                                <span *ngIf=\"Supplier.TargetSupplierValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"supplier-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Vendor Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editSupplierDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Supplier-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Vendor</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editSupplierDetails.SupplierName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Vendor Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editSupplierDetails.TargetSupplierValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalSupplierMappings(editSupplierDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Vendor CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Vendor_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalTerminalMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-terminal-mappings',\r\n  templateUrl: './external-terminal-mappings.component.html',\r\n  styleUrls: ['./external-terminal-mappings.component.css']\r\n})\r\nexport class ExternalTerminalMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalTerminalMappings: ExternalTerminalMappingViewModel[] = [];\r\n    editTerminalDetails: ExternalTerminalMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getTerminalData();\r\n    }\r\n    getTerminalData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getTerminalsForExternalMapping().subscribe(data => {\r\n            this.externalTerminalMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Terminals Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Terminals Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editTerminal(terminal: ExternalTerminalMappingViewModel) {\r\n        this.editTerminalDetails = JSON.parse(JSON.stringify(terminal));\r\n    }\r\n    SaveExternalTerminalMappings(terminal: ExternalTerminalMappingViewModel) {\r\n        terminal.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalTerminalMappings(terminal).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getTerminalData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editTerminalDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadTerminalMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getTerminalData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-terminal-grid\" class=\"table-responsive\">\r\n                            <table id=\"terminal-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"TerminalName\">Terminal Name</th>\r\n                                        <th data-key=\"ControlNumber\">Terminal Control Number</th>\r\n                                        <th data-key=\"TargetTerminalValue\"> Terminal Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Terminal of externalTerminalMappings\">\r\n                                        <td>{{Terminal.TerminalName}}</td>\r\n                                        <td>{{Terminal.ControlNumber}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editTerminal(Terminal)\" class=\"btn btn-link\" onclick=\"slidePanel('#terminal-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Terminal.TargetTerminalValue != null\">{{Terminal.TargetTerminalValue}}</span>\r\n                                                <span *ngIf=\"Terminal.TargetTerminalValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"terminal-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Terminal Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editTerminalDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Terminal-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Terminal Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editTerminalDetails.TerminalName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Terminal Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editTerminalDetails.TargetTerminalValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalTerminalMappings(editTerminalDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Terminal CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Terminal_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef    } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalVehicleMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-vehicle-mappings',\r\n  templateUrl: './external-vehicle-mappings.component.html',\r\n  styleUrls: ['./external-vehicle-mappings.component.css']\r\n})\r\nexport class ExternalVehicleMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalVehicleMappings: ExternalVehicleMappingViewModel[] = [];\r\n    editVehicleDetails: ExternalVehicleMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getVehicleData();\r\n    }\r\n    getVehicleData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getVehiclesForExternalMapping().subscribe(data => {\r\n            this.externalVehicleMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Vehicles Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Vehicles Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editVehicle(vehicle: ExternalVehicleMappingViewModel) {\r\n        this.editVehicleDetails = JSON.parse(JSON.stringify(vehicle));\r\n    }\r\n    SaveExternalVehicleMappings(vehicle: ExternalVehicleMappingViewModel) {\r\n        vehicle.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalVehicleMappings(vehicle).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getVehicleData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editVehicleDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadVehicleMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getVehicleData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","<div>\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-vehicle-grid\" class=\"table-responsive\">\r\n                            <table id=\"vehicle-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"TruckName\">Vehicle Name</th>\r\n                                        <th data-key=\"TargetVehicleValue\"> Vehicle Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Vehicle of externalVehicleMappings\">\r\n                                        <td>{{Vehicle.TruckName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editVehicle(Vehicle)\" class=\"btn btn-link\" onclick=\"slidePanel('#vehicle-panel','40%')\">\r\n                                                <span *ngIf=\"Vehicle.TargetVehicleValue != null\">{{Vehicle.TargetVehicleValue}}</span>\r\n                                                <span *ngIf=\"Vehicle.TargetVehicleValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"vehicle-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Vehicle Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editVehicleDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Vehicle-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Vehicle Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editVehicleDetails.TruckName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Vehicle Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editVehicleDetails.TargetVehicleValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalVehicleMappings(editVehicleDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Vehicle CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Vehicle_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkVehicle\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class ProductMappingModel {\r\n    constructor() {\r\n        this.StateList = [];\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        this.FuelType = new DropdownItem();\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public CountryId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n    public StateList: DropdownItem[];\r\n    public CityList: DropdownItem[];\r\n    public TerminalList: DropdownItem[];\r\n    public FuelType: DropdownItem;\r\n    public StateIds: string;\r\n    public CityIds: string;\r\n    public TerminalIds: string;\r\n    public FuelTypeIds: string;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ProductMappingGridModel {\r\n    constructor() {\r\n       \r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n   // public TerminalItemCode: string;\r\n\r\n    public StateId: number;\r\n    public StateCode: string;\r\n    public CityId: number;\r\n    public City: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public TerminalAddress: string;\r\n    public CountryCode: string;\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { ProductMappingModel, ProductMappingGridModel } from '../models/ProductMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { Subject, concat } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\ndeclare var currentCompanyId: any;\r\n\r\n@Component({\r\n    selector: 'app-product-mapping',\r\n    templateUrl: './product-mapping.component.html',\r\n    styleUrls: ['./product-mapping.component.css']\r\n})\r\nexport class ProductMappingComponent implements OnInit, AfterViewInit {\r\n    public IsLoading: boolean = false;\r\n    public StateList: DropdownItem[] = [];\r\n    public CityList: DropdownItem[] = [];\r\n    public TerminalList: DropdownItem[] = [];\r\n    public FuelTypeList: DropdownItem[] = [];\r\n    public ProductMappingList: ProductMappingGridModel[] = [];\r\n    public UpdateProductMappingList: ProductMappingGridModel[] = [];\r\n    public ProductMapping: ProductMappingModel;\r\n    public IsShowBulkUploadPopup: boolean = false;\r\n    public ProductMappingForm: FormGroup;\r\n    public ddlSettingsByCode = {};\r\n    public ddlSettingsById = {};\r\n    public ddlSettingsByIdSingleSelect = {};\r\n    public CurrentCompanyId: any;\r\n    public SelectedCountryId: number;\r\n    public MaxFileUploadSize: number = 1048576; // 1MB\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    public SelectedFiles: File[] = [];\r\n    @Input() countryId: number;\r\n    public IsValidForm: boolean = true;\r\n    @ViewChild('MyProductId') MyProductId: ElementRef;\r\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService) {\r\n        this.ProductMappingForm = this.fb.group({\r\n            States: this.fb.control([]),\r\n            Cities: this.fb.control([]),\r\n            Terminals: this.fb.control([]),\r\n            FuelTypes: this.fb.control([], [Validators.required]),\r\n            MyProductId: this.fb.control(''),\r\n            BackOfficeProductId: this.fb.control(''),\r\n            DriverProductId: this.fb.control(''),\r\n          //  TerminalItemCode: this.fb.control(''),\r\n            CompanyId: this.fb.control(0),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ddlSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByCode = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByIdSingleSelect = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.initializeProductMappingDatatableGrid();\r\n        this.CurrentCompanyId = Number(currentCompanyId);       \r\n        this.getServingFuelTypesByCompany();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.clearForm();\r\n        this.SelectedCountryId = Number(this.countryId);\r\n        if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n            this.getDefaultServingCountry();\r\n        }\r\n        else {\r\n            this.getStates();\r\n            this.getProductMappingGridDetails();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.getProductMappingGridDetails();\r\n    }\r\n\r\n    getProductMappingGridDetails() {\r\n        this.IsLoading = true;\r\n        var selectedStates = this.ProductMappingForm.get('States').value as DropdownItem[];\r\n        var selectedCities = this.ProductMappingForm.get('Cities').value as DropdownItem[];\r\n        var selectedTerminals = this.ProductMappingForm.get('Terminals').value as DropdownItem[];\r\n        var selectedFuelTypes = this.ProductMappingForm.get('FuelTypes').value as DropdownItem[];\r\n\r\n        var input = new ProductMappingModel();\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(s => s.Id);\r\n            input.StateIds = stateIds.join(',');\r\n        }\r\n        if (selectedCities != null && selectedCities != undefined && selectedCities.length > 0) {\r\n            var cityIds = selectedCities.map(s => s.Name);\r\n            input.CityIds = cityIds.join(',');\r\n        }\r\n        if (selectedTerminals != null && selectedTerminals != undefined && selectedTerminals.length > 0) {\r\n            var terminalIds = selectedTerminals.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n        }\r\n        if (selectedFuelTypes != null && selectedFuelTypes != undefined && selectedFuelTypes.length > 0) {\r\n            var fuelTypeIds = selectedFuelTypes.map(s => s.Id);\r\n            input.FuelTypeIds = fuelTypeIds.join(',');\r\n        }\r\n        input.CompanyId = this.CurrentCompanyId;\r\n        input.CountryId = this.SelectedCountryId;\r\n\r\n        if (input.CompanyId != undefined && input.CompanyId > 0) {\r\n            this.carrierService.getProductMappingGridDetails(input).subscribe(data => {               \r\n                this.IsLoading = false;\r\n                this.ProductMappingList = data as ProductMappingGridModel[];\r\n                this.dtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    getDefaultServingCountry() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n            this.getStates();\r\n            this.getProductMappingGridDetails();\r\n        });\r\n    }\r\n\r\n    getStates() {\r\n        this.IsLoading = true;\r\n        if (this.SelectedCountryId != undefined && this.SelectedCountryId > 0) {\r\n            this.carrierService.getStates(this.SelectedCountryId).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.StateList = data as DropdownItem[];\r\n            });\r\n        }\r\n    }\r\n\r\n    getCities(stateIds: number[]) {\r\n        this.IsLoading = true;\r\n        this.carrierService.getCities(stateIds).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.CityList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    getTerminals() {\r\n        var selectedStates = this.ProductMappingForm.get('States').value as DropdownItem[];\r\n        var selectedCities = this.ProductMappingForm.get('Cities').value as DropdownItem[];\r\n\r\n        if (selectedStates.length == 0) {\r\n            this.ProductMappingForm.get('States').patchValue([]);\r\n            this.TerminalList = [];\r\n            return;\r\n        }\r\n\r\n        this.IsLoading = true;\r\n        var input = new ProductMappingModel();\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(s => s.Id);\r\n            input.StateIds = stateIds.join(',');\r\n        }\r\n        if (selectedCities != null && selectedCities != undefined && selectedCities.length > 0) {\r\n            var cityIds = selectedCities.map(s => s.Name);\r\n            input.CityIds = cityIds.join(',');\r\n        }\r\n        input.CompanyId = this.CurrentCompanyId;\r\n        this.carrierService.getTerminals(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    getServingFuelTypesByCompany() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getServingFuelTypesByCompany(this.CurrentCompanyId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.FuelTypeList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        var myProductId = this.ProductMappingForm.get('MyProductId').value;\r\n        var backOfficeProductId = this.ProductMappingForm.get('BackOfficeProductId').value;\r\n        var driverProductId = this.ProductMappingForm.get('DriverProductId').value;\r\n      //  var terminalItemCode = this.ProductMappingForm.get('TerminalItemCode').value;\r\n        if ((myProductId == undefined || myProductId == null || myProductId == '') &&\r\n            (backOfficeProductId == undefined || backOfficeProductId == null || backOfficeProductId == '') &&\r\n            (driverProductId == undefined || driverProductId == null || driverProductId == ''))\r\n            /*&& (terminalItemCode == undefined || terminalItemCode == null || terminalItemCode ==''))*/ {\r\n            Declarations.msgerror('Please provide My Product ID or Back Office Product ID or Driver Product ID', undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        this.ProductMappingForm.get(\"CompanyId\").patchValue(this.CurrentCompanyId);\r\n        this.IsValidForm = true;\r\n        if (!this.ProductMappingForm.valid) {\r\n            this.IsValidForm = false;\r\n        }\r\n        else {\r\n            this.submitForm();\r\n        }\r\n    }\r\n\r\n    submitForm() {\r\n        this.IsLoading = true;\r\n        this.carrierService.saveProductMapping(this.ProductMappingForm.value).subscribe(data => {\r\n            if (data.StatusCode == 0) {  \r\n                this.IsLoading = false;\r\n                this.clearForm();    \r\n                this.MyProductId.nativeElement.click();\r\n                this.getProductMappingGridDetails();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateProductNames(mappingId: number) {\r\n        var rowToUpdate = this.UpdateProductMappingList.filter(map => map.Id === mappingId);\r\n        if (rowToUpdate.length == 0) {\r\n            Declarations.msgerror('No updated records found', undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        this.IsLoading = true;\r\n        this.carrierService.updateProductNames(rowToUpdate).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.UpdateProductMappingList = [];\r\n                this.filterGrid();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelUpdateProductNames() {\r\n        //this.filterGrid();\r\n    }\r\n\r\n    editProductNames(mapping: ProductMappingGridModel, key: string, $event: any) {\r\n        var nameToUpdate = $event.target.innerText;\r\n        var existingId = '';\r\n        switch (key) {\r\n            case 'MyProductId':\r\n                existingId = mapping.MyProductId;\r\n                break;\r\n            case 'DriverProductId':\r\n                existingId = mapping.DriverProductId;\r\n                break;\r\n            case 'BackOfficeProductId':\r\n                existingId = mapping.BackOfficeProductId;\r\n                break;\r\n            //case 'TerminalItemCode':\r\n            //    existingId = mapping.TerminalItemCode;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (nameToUpdate == undefined || nameToUpdate == null || nameToUpdate.trim() == '' || nameToUpdate == '--')\r\n            nameToUpdate = '';\r\n\r\n        if (existingId == undefined || existingId == null || existingId.trim() == '' || existingId == '--')\r\n            existingId = '';\r\n\r\n        if (nameToUpdate == existingId)\r\n            return;\r\n\r\n        mapping[key] = nameToUpdate.trim();\r\n        var obj = this.UpdateProductMappingList.filter(map => map.Id === mapping.Id);\r\n\r\n        if (this.UpdateProductMappingList.length == 0) {\r\n            this.UpdateProductMappingList.push(mapping);\r\n        }\r\n        else if (obj.length == 1) {\r\n            obj[key] = nameToUpdate.trim();\r\n        }\r\n        else {\r\n            this.UpdateProductMappingList.push(mapping);\r\n        }\r\n    }\r\n\r\n    deleteMapping(mappingId: number, companyId: number) {\r\n        if (mappingId == undefined || mappingId <= 0)\r\n            return;\r\n        var model = new ProductMappingGridModel();\r\n        model.Id = mappingId;\r\n        model.CompanyId = companyId;\r\n        this.IsLoading = true;\r\n        this.carrierService.postDeleteProductMapping(model).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.clearForm();\r\n                this.getProductMappingGridDetails();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#product-mapping-grid-datatable\").DataTable().clear().destroy();\r\n        this.getProductMappingGridDetails();\r\n    }\r\n\r\n    onStateSelect(state: any) {\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateDeSelect(state: any) {\r\n        this.ProductMappingForm.get('Cities').patchValue([]);\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateSelectAll(states: any) {\r\n        this.ProductMappingForm.get('States').patchValue(states);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateDeSelectAll() {\r\n        this.ProductMappingForm.get('Cities').patchValue([]);\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n    }\r\n\r\n    getCitiesByStateId() {\r\n        var selectedStates = this.ProductMappingForm.get('States').value as DropdownItem[];\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(m => m.Id);\r\n            this.getCities(stateIds);\r\n        }\r\n        else {\r\n            this.CityList = [];\r\n        }\r\n    }\r\n\r\n    clearForm() {\r\n        this.ProductMappingForm.reset();\r\n        this.ProductMappingForm.get('States').setValue([]);\r\n        this.ProductMappingForm.get('Cities').setValue([]);\r\n        this.ProductMappingForm.get('Terminals').setValue([]);\r\n        this.ProductMappingForm.get('FuelTypes').setValue([]);\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        $(\"#product-mapping-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getProductMappingGridDetails();\r\n    }\r\n\r\n    onCitySelect(city: any) {\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelect(city: any) {\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCitySelectAll(cities: any) {\r\n        this.ProductMappingForm.get('Cities').patchValue(cities);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelectAll() {\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.ProductMappingForm.get('Cities').patchValue([]);\r\n        this.getTerminals();\r\n        //this.CityList = [];\r\n    }\r\n\r\n    selectFiles(files: File[]) {\r\n        if (files != null && files != undefined && files.length > 0)\r\n            this.SelectedFiles = files;\r\n    }\r\n\r\n    uploadProductMappingFile() {\r\n        var files = this.SelectedFiles;\r\n        if (files.length === 0)\r\n            return;\r\n       \r\n        const formData = new FormData();\r\n        for (var file of files) {\r\n            if (!this.isValidFile(file)) {\r\n                return;\r\n            }\r\n            formData.append(file.name, file);\r\n        }\r\n        \r\n        this.IsLoading = true;\r\n        this.carrierService.postBulkUploadTemplate(formData).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.CloseBulkUploadPopup.nativeElement.click();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                this.SelectedFiles = [];\r\n                //$(\"#product-mapping-grid-datatable\").DataTable().clear().destroy();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    isValidFile(file: File) {\r\n        var isValid = true;\r\n\r\n        var extension = this.getExtension(file.name);\r\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\r\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        if (file.size > this.MaxFileUploadSize) {\r\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    downloadCsvTemplate() {\r\n        this.IsLoading = true;\r\n        var timestamp = new Date().getTime();\r\n        this.carrierService.downloadProductMappingTemplate(timestamp).subscribe(blob => {\r\n            const a = document.createElement('a')\r\n            const objectUrl = URL.createObjectURL(blob)\r\n            a.href = objectUrl\r\n            a.download = 'ProductMapping_Template.csv';\r\n            a.click();\r\n            URL.revokeObjectURL(objectUrl);\r\n\r\n            this.IsLoading = false;            \r\n        });\r\n    }\r\n\r\n    getExtension(fileName) {\r\n        // extract file name from full path ...\r\n        var basename = fileName.split(/[\\\\/]/).pop();\r\n\r\n        // (supports `\\\\` and `/` separators)\r\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\r\n\r\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\r\n            return \"\";                             //  `.` not found (-1) or comes first (0)\r\n\r\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\r\n    }\r\n\r\n    showBulkUploadPopup() {\r\n        this.IsShowBulkUploadPopup = true;\r\n    }\r\n\r\n    closePopup() {\r\n        this.IsShowBulkUploadPopup = false;\r\n    }\r\n\r\n    initializeProductMappingDatatableGrid() {\r\n        let exportColumns = { columns: [0, 1, 2, 3, 4, 5] };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Product Mapping', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Product Mapping', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n            //,\r\n            //rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n            //    const self = this;\r\n            //    // Unbind first in order to avoid any duplicate handler\r\n            //    // (see https://github.com/l-lin/angular-datatables/issues/87)\r\n            //    $('td', row).unbind('click');\r\n            //    $('td', row).bind('click', () => {\r\n            //        self.someClickHandler(data, event);\r\n            //    });\r\n            //    return row;\r\n            //}\r\n        };\r\n    }\r\n\r\n    //someClickHandler(info: any, $event: any): void {\r\n    //    console.log($event);\r\n    //    console.log($event.target.textContent);\r\n    //}\r\n}\r\n","<form [formGroup]=\"ProductMappingForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"well col-sm-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>State</label>\r\n                            <ng-multiselect-dropdown formControlName=\"States\"\r\n                                                     [placeholder]=\"'Select State(s)'\"\r\n                                                     [settings]=\"ddlSettingsById\"\r\n                                                     [data]=\"StateList\"\r\n                                                     (onSelect)=\"onStateSelect($event)\" (onDeSelect)=\"onStateDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onStateSelectAll($event)\" (onDeSelectAll)=\"onStateDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>City</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Cities\"\r\n                                                     [placeholder]=\"'Select City(s)'\"\r\n                                                     [settings]=\"ddlSettingsByCode\"\r\n                                                     [data]=\"CityList\"\r\n                                                     (onSelect)=\"onCitySelect($event)\" (onDeSelect)=\"onCityDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onCitySelectAll($event)\" (onDeSelectAll)=\"onCityDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal Name</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Terminals\"\r\n                                                     [placeholder]=\"'Select Terminal(s)'\"\r\n                                                     [settings]=\"ddlSettingsById\" [data]=\"TerminalList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"!IsValidForm && ProductMappingForm.get('Terminals').errors?.required\" class=\"color-maroon\">\r\n                                Terminal is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label>Fuel Type<span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"FuelTypes\"\r\n                                                     [placeholder]=\"'Select FuelType'\"\r\n                                                     [settings]=\"ddlSettingsByIdSingleSelect\" [data]=\"FuelTypeList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"!IsValidForm && ProductMappingForm.get('FuelTypes').errors?.required\" class=\"color-maroon\">\r\n                                Fuel Type is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 text-left form-buttons mt20 pt-1\">\r\n                        <button id=\"filter-product-mapping-grid\" type=\"button\" class=\"btn btn-primary mt3 valid mx-0\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid()\">Apply</button>\r\n                        <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 mx-0 px-1 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>My Product ID</label>\r\n                            <input type=\"text\" class=\"form-control\" #MyProductId formControlName=\"MyProductId\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Back Office Product ID</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BackOfficeProductId\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Driver Product ID</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"DriverProductId\" />\r\n                        </div>\r\n                    </div>\r\n                    <!--<div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal Item Code</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"TerminalItemCode\" />\r\n                        </div>\r\n                    </div>-->\r\n                    <div class=\"col-sm-2 text-left form-buttons mt20\">\r\n                        <button id=\"submit-product-mapping-form\" type=\"submit\" class=\"mt4 btn btn-lg btn-default valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\">Assign</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right form-buttons mb5\">\r\n            <button id=\"showBulkUploadPopupBtn\" type=\"button\" class=\"btn btn-primary valid\" (click)=\"showBulkUploadPopup()\" data-toggle=\"modal\" data-target=\"#bulkUploadModalPopup\">Bulk Upload</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-product-mapping-grid\" class=\"table-responsive\">\r\n                                <table id=\"product-mapping-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th data-key=\"FuelType\">Fuel Type</th>\r\n                                            <th data-key=\"TerminalName\">Terminal</th>\r\n                                            <th data-key=\"TerminalAddress\">Terminal Address</th>\r\n                                            <th data-key=\"BackOfficeProductId\">Back-Office Product ID</th>\r\n                                            <th data-key=\"DriverProductId\">Driver Product ID</th>\r\n                                            <th data-key=\"MyProductId\">My Product ID</th>\r\n                                            <!--<th data-key=\"TerminalItemCode\">Terminal Item Code</th>-->\r\n                                            <th data-key=\"Action\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let mapping of ProductMappingList\">\r\n                                            <td>\r\n                                                <span *ngIf=\"mapping.FuelType != null\">{{mapping.FuelType}}</span>\r\n                                                <span *ngIf=\"mapping.FuelType == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"mapping.TerminalName != null\">{{mapping.TerminalName}}</span>\r\n                                                <span *ngIf=\"mapping.TerminalName == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"mapping.TerminalAddress != null\">{{mapping.TerminalAddress}}</span>\r\n                                                <span *ngIf=\"mapping.TerminalAddress == null\">--</span>\r\n                                            </td>\r\n                                            <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'BackOfficeProductId', $event);\">\r\n                                                {{mapping.BackOfficeProductId == null ? \"--\" : mapping.BackOfficeProductId}}\r\n                                            </td>\r\n                                            <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'DriverProductId', $event)\">\r\n                                                {{mapping.DriverProductId == null ? \"--\" : mapping.DriverProductId}}\r\n                                            </td>\r\n                                            <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'MyProductId', $event)\">\r\n                                                {{mapping.MyProductId == null ? \"--\" : mapping.MyProductId}}\r\n                                            </td>\r\n                                            <!--<td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'TerminalItemCode', $event)\">\r\n                                                {{mapping.TerminalItemCode == null ? \"--\" : mapping.TerminalItemCode}}\r\n                                            </td>-->\r\n                                            <td class=\"text-center\">\r\n                                                <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"updateProductNames(mapping.Id)\" (cancel)=\"cancelUpdateProductNames()\"><i class=\"fs21 fas fa-save color-green\" alt=\"Update\" title=\"Update\"></i></button>\r\n                                                <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deleteMapping(mapping.Id, mapping.CompanyId)\"><i class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\" title=\"Delete\"></i></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n   \r\n    <div id=\"bulkUploadModalPopup\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowBulkUploadPopup\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt0 pb5\">\r\n                    <h4 class=\"modal-title\">Product Mapping</h4>\r\n                    <button type=\"button\" #btnCloseBulkUploadPopup class=\"close color-grey\" data-dismiss=\"modal\" (click)=\"closePopup()\"> <i class=\"fa fa-close fs21 mt15\"></i></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"mb10\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a role=\"button\" (click)=\"downloadCsvTemplate()\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                    <div class=\"mb5 mt5\">\r\n                        <input type=\"file\" id=\"bulkUploadFile\" (change)=\"selectFiles($event.target.files)\" accept=\".csv\">\r\n                    </div>\r\n                    <span class=\"color-maroon\">\r\n                       Note: A new version of template is available\r\n                    </span>\r\n                    <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsLoading\"><span class='spinner-dashboard pa'></span></div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"uploadProductMappingFile()\">Upload</button>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { ProductMappingComponent } from './product-mapping/product-mapping.component';\r\nimport { Country } from './models/location';\r\nimport { TerminalMappingComponent } from './terminal-mapping/terminal-mapping.component';\r\nimport { CarrierService } from '../carrier/service/carrier.service';\r\nimport { ExternalMappingsService } from '../self-service-alias/service/externalmappings.service';\r\ndeclare var defaultCountryId: any;\r\ndeclare var currentCompanyId: any;\r\ndeclare var carrierMappingVisible: any;\r\n\r\n@Component({\r\n    selector: 'app-self-service-alias',\r\n    templateUrl: './self-service-alias.component.html',\r\n    styleUrls: ['./self-service-alias.component.css']\r\n})\r\nexport class SelfServiceAliasComponent implements OnInit {\r\n    public locationViewType: any;\r\n    public CountryFilter: any;\r\n    public CountryEnum: typeof Country = Country;\r\n    public CountryType: any = [];\r\n    public isShow: boolean = false;\r\n    public isShowCarrier: boolean = false;\r\n    public isShowCountryDDL: boolean = true;\r\n    public SelectedCountryId: number;\r\n    public CurrentCompanyId: number;\r\n    public CountryList: DropdownItem[] = [];\r\n    public IsShowProductMappingComponent: boolean = true;\r\n    public IsShowCarrierMappingComponent: boolean = false;\r\n    isShowTerminalmappingCode = false;\r\n    public isShowFuelGroup = false;\r\n    public SelectedCompany: DropdownItem = new DropdownItem;\r\n    @ViewChild(ProductMappingComponent) ProductMappingComponent: ProductMappingComponent;\r\n    public ServingCountries: any = {};\r\n    public externalCompanies: DropdownItem[] = [];\r\n    public pdiTabName: string = 'CUSTOMERS';\r\n    constructor(private carrierService: CarrierService, private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.CurrentCompanyId = Number(currentCompanyId);\r\n        this.SelectedCountryId = Number(defaultCountryId);\r\n        this.getExternalCompanies();\r\n        this.getCountries();\r\n        if (!carrierMappingVisible) {\r\n            this.IsShowCarrierMappingComponent = false;\r\n        }\r\n        else {\r\n            this.IsShowCarrierMappingComponent = true;\r\n           // this.isShowCarrier = true;\r\n        }\r\n\r\n    }\r\n   \r\n    getExternalCompanies() {\r\n        this.externalMappingsService.getExternalCompanies().subscribe(data => {\r\n            if (data != null && data.length > 0) {\r\n               \r\n                this.externalCompanies = data;\r\n                this.SelectedCompany = this.externalCompanies[0];\r\n            }\r\n        });\r\n    }\r\n    public changeTab(currencyDdlHide: string): void\r\n    {\r\n        if (currencyDdlHide === \"Carrier\") {\r\n            this.isShowCarrier = true;\r\n            this.isShowTerminalmappingCode = false;\r\n        }\r\n        else if (currencyDdlHide === \"Customer\") {\r\n            this.isShow = true;\r\n            this.isShowTerminalmappingCode = false;\r\n            this.isShowCarrier = false;\r\n        }\r\n        else if (currencyDdlHide === \"TerminalCode\") {\r\n            this.isShowTerminalmappingCode = true;\r\n            this.isShowCarrier = false\r\n        }\r\n        else if (currencyDdlHide === \"FuelGroup\") {\r\n           // this.isShow = false;\r\n            this.isShowCarrier = false;\r\n            this.isShowTerminalmappingCode = false;\r\n            this.isShowFuelGroup = true;\r\n            \r\n        }\r\n        else {\r\n            this.isShow = !this.isShow;\r\n            this.isShowTerminalmappingCode = false;\r\n            this.isShowCarrier = false\r\n            this.isShowFuelGroup = false;\r\n\r\n        }\r\n    }\r\n\r\n    public onCountryChange() {\r\n    localStorage.setItem('countryFilterType', <string>this.CountryFilter);\r\n}\r\n\r\ncountryChanged(event: any) {\r\n    this.IsShowProductMappingComponent = false;\r\n    this.SelectedCountryId = (event.target.value == \"null\" || event.target.value == null) ? 1 : Number(event.target.value);\r\n    this.IsShowProductMappingComponent = true;\r\n}\r\n    companyChanged(event: any) {\r\n        if (event != null) {\r\n            this.SelectedCompany = this.externalCompanies.find(t => t.Id == event.target.value);\r\n        }     \r\n    }\r\n    private checkWindowSelection(): void {\r\n    this.locationViewType = (localStorage.getItem('locationViewType')) ? (localStorage.getItem('locationViewType')) : 1;\r\n    this.CountryFilter = (localStorage.getItem('countryFilterType')) ? (localStorage.getItem('countryFilterType')) : (localStorage.getItem('countryIdForDashboard') ? localStorage.getItem('countryIdForDashboard') : 1);\r\n}\r\n\r\ngetCountries() {\r\n    this.carrierService.GetCountries(this.CurrentCompanyId).subscribe(data => {\r\n        if (data != null) {\r\n            if (data.ServingCountries != null && data.ServingCountries.length > 1) {\r\n                this.ServingCountries = data.ServingCountries;\r\n                this.CountryList = data.CountryList as DropdownItem[];\r\n                if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n                    defaultCountryId = data.DefaultCountryId;\r\n                    this.SelectedCountryId = Number(data.DefaultCountryId);\r\n                }\r\n            }\r\n            else {\r\n                this.isShowCountryDDL = false;\r\n            }\r\n        }\r\n    });\r\n}\r\n}\r\n","<div class=\"small-tab\" id=\"self-service-alias-tab\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row mb10\">\r\n                <div class=\"col-2 text-right\">\r\n                    <select (change)=\"companyChanged($event)\" class=\"form-control\">\r\n                        <option *ngFor=\"let company of externalCompanies\" [value]=\"company.Id\" [selected]=\"SelectedCompany.Id==company.Id\">{{company.Name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-10\" *ngIf=\"SelectedCompany?.Id == 1\">\r\n                    <div class=\"float-right text-right\" *ngIf=\"isShowCountryDDL\">\r\n                        <div class=\"form-group mb0\">\r\n                            <select class=\"form-control\" (change)=\"countryChanged($event)\">\r\n                                <option *ngFor=\"let country of CountryList\" [value]=\"country.Id\" [selected]=\"SelectedCountryId==country.Id\">{{country.Code}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- Third party Mapping Start -->\r\n            <div class=\"value-mapping\" *ngIf=\"SelectedCompany?.Id == 1\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2\">\r\n                        <div class=\"float-left text-left mb10\" *ngIf=\"IsShowCarrierMappingComponent\">\r\n                            <ul class=\"nav nav-tabs mb5\" role=\"tablist\">\r\n                                <li class=\"nav-item\">\r\n                                    <a class=\"nav-link active fs16\" data-toggle=\"tab\" href=\"#carrier-mapping-container\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" (click)=\"changeTab('Carrier')\">Carrier Mapping</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"nav flex-column nav-pills\" *ngIf=\"!IsShowCarrierMappingComponent\">\r\n                            <a class=\"nav-link fs14 active\" id=\"home-tab\" data-toggle=\"pill\" href=\"#product-mapping-container\" (click)=\"changeTab('Product')\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Product</a>\r\n                            <a class=\"nav-link fs14\" id=\"profile-tab\" data-toggle=\"pill\" href=\"#customer-mapping-container\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\" (click)=\"changeTab('Customer')\">Customer</a>\r\n                            <a class=\"nav-link fs14\" id=\"contact-tab\" data-toggle=\"pill\" href=\"#carrier-mapping-container\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\" (click)=\"changeTab('Carrier')\">Carrier</a>\r\n                            <a class=\"nav-link fs14\" id=\"contact-tab\" data-toggle=\"pill\" href=\"#terminal-mapping-container\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\" (click)=\"changeTab('Terminal')\">Terminal</a>\r\n                            <a class=\"nav-link fs14\" id=\"contact-tab\" data-toggle=\"pill\" href=\"#terminal-code-mapping-container\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\" (click)=\"changeTab('TerminalCode')\">Terminal Item Code</a>\r\n                        </div>\r\n                    </div>\r\n                    <!--Start: Show only carrier mapping tab for buyer user/company only-->\r\n                    <div class=\"tab-content col-sm-10\" *ngIf=\"IsShowCarrierMappingComponent\">\r\n                        <div id=\"carrier-mapping-container\" class=\"tab-pane fade show active\">\r\n                            <div *ngIf=\"isShowCarrier\">\r\n                                <app-company-carrier-mapping [countryId]=\"SelectedCountryId\"></app-company-carrier-mapping>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--End-->\r\n                    <div class=\"tab-content col-sm-10\" *ngIf=\"!IsShowCarrierMappingComponent\">\r\n                        <div id=\"product-mapping-container\" class=\"tab-pane fade show active\">\r\n                            <div>\r\n                                <!--<*ngIf=\"!isShow\">-->\r\n                                <app-product-mapping *ngIf=\"IsShowProductMappingComponent\" [countryId]=\"SelectedCountryId\"></app-product-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"customer-mapping-container\" class=\"tab-pane fade\">\r\n                            <div>\r\n                                <app-customer-mapping></app-customer-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"carrier-mapping-container\" class=\"tab-pane fade\">\r\n                            <div *ngIf=\"isShowCarrier\">\r\n                                <app-company-carrier-mapping [countryId]=\"SelectedCountryId\"></app-company-carrier-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"terminal-mapping-container\" class=\"tab-pane fade\">\r\n                            <div>\r\n                                <app-terminal-mapping [countryId]=\"SelectedCountryId\"></app-terminal-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"terminal-code-mapping-container\" class=\"tab-pane fade\">\r\n                            <div *ngIf=\"isShowTerminalmappingCode\">\r\n                                <app-terminal-item-code-mapping [countryId]=\"SelectedCountryId\"></app-terminal-item-code-mapping>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- Third party Mapping End -->\r\n            <!-- PDI Mapping Start -->\r\n            <div class=\"pdi-entity-mapping mt10\" *ngIf=\"SelectedCompany?.Id == 2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2 \">\r\n                        <div class=\"nav flex-column nav-pills\" role=\"tablist\">\r\n                            <a class=\"nav-link fs14 active\" id=\"customer-tab\" data-toggle=\"pill\" href=\"#customer-container\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" (click)=\"pdiTabName = 'CUSTOMERS'\">Customer</a>\r\n                            <a class=\"nav-link fs14\" id=\"cust-location-tab\" data-toggle=\"pill\" href=\"#cust-location-container\" role=\"tab\" aria-controls=\"cust-location\" aria-selected=\"false\" (click)=\"pdiTabName = 'CUSTOMERLOCATIONS'\">Customer Location</a>\r\n                            <a class=\"nav-link fs14\" id=\"vendor-tab\" data-toggle=\"pill\" href=\"#vendor-container\" role=\"tab\" aria-controls=\"vendor\" aria-selected=\"false\" (click)=\"pdiTabName = 'VENDORS'\">Vendors</a>\r\n                            <a class=\"nav-link fs14\" id=\"products-tab\" data-toggle=\"pill\" href=\"#products-container\" role=\"tab\" aria-controls=\"products\" aria-selected=\"false\" (click)=\"pdiTabName = 'PRODUCTS'\">Products</a>\r\n                            <a class=\"nav-link fs14\" id=\"terminals-tab\" data-toggle=\"pill\" href=\"#terminals-container\" role=\"tab\" aria-controls=\"terminals\" aria-selected=\"false\" (click)=\"pdiTabName = 'TERMINALS'\">Terminals</a>\r\n                            <a class=\"nav-link fs14\" id=\"sites-tab\" data-toggle=\"pill\" href=\"#sites-container\" role=\"tab\" aria-controls=\"sites\" aria-selected=\"false\" (click)=\"pdiTabName = 'SITES'\">Sites</a>\r\n                            <a class=\"nav-link fs14\" id=\"carriers-tab\" data-toggle=\"pill\" href=\"#carriers-container\" role=\"tab\" aria-controls=\"carriers\" aria-selected=\"false\" (click)=\"pdiTabName = 'CARRIERS'\">Carriers</a>\r\n                            <a class=\"nav-link fs14\" id=\"driver-tab\" data-toggle=\"pill\" href=\"#driver-container\" role=\"tab\" aria-controls=\"driver\" aria-selected=\"false\" (click)=\"pdiTabName = 'DRIVERS'\">Driver</a>\r\n                            <a class=\"nav-link fs14\" id=\"vehical-tab\" data-toggle=\"pill\" href=\"#vehical-container\" role=\"tab\" aria-controls=\"vehical\" aria-selected=\"false\" (click)=\"pdiTabName = 'VEHICLE'\">Vehicle</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-10\">\r\n                        <div class=\"tab-content\">\r\n                            <div id=\"customer-container\" *ngIf=\"pdiTabName == 'CUSTOMERS'\" class=\"tab-pane fade show active\">\r\n                                <app-external-customer-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-customer-mappings>\r\n                            </div>\r\n                            <div id=\"cust-location-container\" *ngIf=\"pdiTabName == 'CUSTOMERLOCATIONS'\" class=\"tab-pane fade\">\r\n                                <app-external-customerlocation-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-customerlocation-mappings>\r\n                            </div>\r\n                            <div id=\"sites-container\" *ngIf=\"pdiTabName == 'SITES'\" class=\"tab-pane fade\">\r\n                                <app-external-bulk-plant-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-bulk-plant-mappings>\r\n                            </div>\r\n                            <div id=\"carriers-container\" *ngIf=\"pdiTabName == 'CARRIERS'\" class=\"tab-pane fade\">\r\n                                <app-external-carrier-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-carrier-mappings>\r\n                            </div>\r\n                            <div id=\"terminals-container\" *ngIf=\"pdiTabName == 'TERMINALS'\" class=\"tab-pane fade\">\r\n                                <app-external-terminal-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-terminal-mappings>\r\n                            </div>\r\n                            <div id=\"products-container\" *ngIf=\"pdiTabName == 'PRODUCTS'\" class=\"tab-pane fade\">\r\n                                <app-external-product-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-product-mappings>\r\n                            </div>\r\n                            <div id=\"driver-container\" *ngIf=\"pdiTabName == 'DRIVERS'\" class=\"tab-pane fade\">\r\n                                <app-external-driver-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-driver-mappings>\r\n                            </div>\r\n                            <div id=\"vehical-container\" *ngIf=\"pdiTabName == 'VEHICLE'\" class=\"tab-pane fade\">\r\n                                <app-external-vehicle-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-vehicle-mappings>\r\n                            </div>\r\n                            <div id=\"vendor-container\" *ngIf=\"pdiTabName == 'VENDORS'\" class=\"tab-pane fade\">\r\n                                <app-external-supplier-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-supplier-mappings>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- PDI Mapping End -->\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { SelfServiceAliasComponent } from './self-service-alias.component';\r\nimport { ProductMappingComponent } from './product-mapping/product-mapping.component';\r\nimport { CustomerMappingComponent } from './customer-mapping/customer-mapping.component';\r\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\r\nimport { CompanyCarrierMappingComponent } from './company-carrier-mapping/company-carrier-mapping.component';\r\nimport { EditCarrierMappingComponent } from './edit-carrier-mapping/edit-carrier-mapping.component';\r\nimport { TerminalMappingComponent } from './terminal-mapping/terminal-mapping.component';\nimport { TerminalItemCodeMappingComponent } from './terminal-item-code-mapping/terminal-item-code-mapping.component';\nimport { CreateTerminalItemCodeComponent } from './create-terminal-item-code/create-terminal-item-code.component';\r\nimport { ExternalCustomerMappingsComponent } from './external-entity-mappings/external-customer-mappings/external-customer-mappings.component';\nimport { ExternalCustomerlocationMappingsComponent } from './external-entity-mappings/external-customerlocation-mappings/external-customerlocation-mappings.component';\nimport { ExternalProductMappingsComponent } from './external-entity-mappings/external-product-mappings/external-product-mappings.component';\nimport { ExternalSupplierMappingsComponent } from './external-entity-mappings/external-supplier-mappings/external-supplier-mappings.component';\nimport { ExternalTerminalMappingsComponent } from './external-entity-mappings/external-terminal-mappings/external-terminal-mappings.component';\nimport { ExternalDriverMappingsComponent } from './external-entity-mappings/external-driver-mappings/external-driver-mappings.component';\nimport { ExternalCarrierMappingsComponent } from './external-entity-mappings/external-carrier-mappings/external-carrier-mappings.component';\nimport { ExternalBulkPlantMappingsComponent } from './external-entity-mappings/external-bulk-plant-mappings/external-bulk-plant-mappings.component';\nimport { ExternalVehicleMappingsComponent } from './external-entity-mappings/external-vehicle-mappings/external-vehicle-mappings.component';\r\n\r\nconst routeSelfService: Routes = [\r\n    {\r\n        path: '',\r\n        component: SelfServiceAliasComponent\r\n    },\r\n\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SelfServiceAliasComponent,\r\n        ProductMappingComponent,\r\n        CustomerMappingComponent,\r\n        EditCustomerComponent,\r\n        CompanyCarrierMappingComponent,\r\n        EditCarrierMappingComponent,\r\n        TerminalMappingComponent,\r\n        TerminalItemCodeMappingComponent,\r\n        CreateTerminalItemCodeComponent,\r\n        ExternalCustomerMappingsComponent,\r\n        ExternalCustomerlocationMappingsComponent,\r\n        ExternalProductMappingsComponent,\r\n        ExternalSupplierMappingsComponent,\r\n        ExternalTerminalMappingsComponent,\r\n        ExternalDriverMappingsComponent,\r\n        ExternalCarrierMappingsComponent,\r\n        ExternalBulkPlantMappingsComponent,\r\n        ExternalVehicleMappingsComponent,\r\n    ],\r\n    imports: [\r\n        SharedModule,\r\n        DirectiveModule,\r\n        DataTablesModule,\r\n        RouterModule.forChild(routeSelfService)\r\n    ]\r\n})\r\nexport class SelfServiceAliasModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject, from } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Declarations } from 'src/app/declarations.module';\nimport { HttpGenericService } from 'src/app/http-generic.service';\nimport { CreateTerminalItemCodeComponent } from '../create-terminal-item-code/create-terminal-item-code.component';\nimport { TerminalItemCodeMappingModel } from '../models/TerminalItemCodeMappingModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\n\n@Component({\n    selector: 'app-terminal-item-code-mapping',\n    templateUrl: './terminal-item-code-mapping.component.html',\n    styleUrls: ['./terminal-item-code-mapping.component.css']\n})\nexport class TerminalItemCodeMappingComponent implements OnInit, AfterViewInit, OnChanges {\n    @Input() countryId: any;\n    title = 'Create';\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @ViewChild('openSidePannel') public openSidePannel: ElementRef;\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\n    @ViewChild(CreateTerminalItemCodeComponent) public createTerminalItemCodeComponent: CreateTerminalItemCodeComponent;\n    terminalMappingList: TerminalItemCodeMappingModel[] = [];\n\n    public dtOptions: any = {};\n    public dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean;\n    public IsValidForm: boolean = true;\n    public popoverSaveTitle: string = 'Save the change(s)?';\n    public popoverDeleteTitle: string = 'Are you sure, want to delete?';\n    public confirmButtonText: string = 'Yes';\n    public cancelButtonText: string = 'No';\n    public IsShowBulkUploadPopup: boolean = false;\n    public SelectedFiles: File[] = [];\n    public MaxFileUploadSize: number = 1048576; // 1MB\n    GetTerminalSupplierUrl = '/Carrier/SelfServiceAlias/GetTerminalItemCodeMappings'\n    DeleteTerminalItemCodeMappingUrl = '/Carrier/SelfServiceAlias/DeleteTerminalItemCodeMapping'\n\n    constructor(private httpService: HttpGenericService, private carrierService: CarrierService) { }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            aaSorting: [],\n            orderable: false,\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Terminal Item Code Mapping', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Terminal Item Code Mapping', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n\n        this.getTerminalItemCodeMapping();\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        if (change.countryId && change.countryId.currentValue) {\n            this.countryId = change.countryId.currentValue;\n            if (change.countryId.previousValue && change.countryId.currentValue != change.countryId.previousValue) {\n                this.getTerminalItemCodeMapping();\n            }\n        }\n\n    }\n\n\n    filterGrid() {\n        $(\"#terminal-item-code-datatable\").DataTable().clear().destroy();\n    }\n    ngAfterViewInit(): void {\n        this.dtTrigger.next();\n    }\n\n    private getTerminalItemCodeMapping() {\n        this.IsLoading = true;\n        this.httpService.postData(`${this.GetTerminalSupplierUrl}`, { CountryId: this.countryId }).pipe(first()).subscribe(result => {\n            this.IsLoading = false;\n            this.terminalMappingList = result;\n            this.datatableRerender();\n        });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                dtInstance.destroy();\n                this.dtTrigger.next();\n            });\n        }\n    }\n\n    public editTerminalMapping(item: TerminalItemCodeMappingModel) {\n        this.title = 'Edit';\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.id.setValue(item.Id);\n        var obj = this.createTerminalItemCodeComponent.TerminalSupplierList.filter(f => f.Id == item.TerminalSupplierId)\n            .map(m => { delete m.Code; return m; });\n        if (obj) {\n\n            this.createTerminalItemCodeComponent.selectedTerminalSupplier = [];\n            this.createTerminalItemCodeComponent.selectedTerminalSupplier.push(obj);\n            this.createTerminalItemCodeComponent.terminalmappingForm.controls.terminalSupplierId.setValue(obj);\n        }\n        var obj1 = this.createTerminalItemCodeComponent.TerminalSupplierDescList.filter(f => f.Id == item.ItemDescriptionId)\n            .map(m => { delete m.Code; return m; });;\n\n        if (obj1) {\n            this.createTerminalItemCodeComponent.selectedItemDesc = [];\n            this.createTerminalItemCodeComponent.selectedItemDesc.push(obj1);\n            this.createTerminalItemCodeComponent.terminalmappingForm.controls.itemDescriptionId.setValue(obj1);\n        }\n\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.effectiveDate.setValue(item.EffectiveDate);\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.expiryDate.setValue(item.ExpiryDate);\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.itemCode.setValue(item.ItemCode);\n    }\n\n    public addTerminalItemCode() {\n        this.title = 'Create';\n        this.createTerminalItemCodeComponent.terminalmappingForm.reset();\n    }\n\n    getOutput($event) {\n        if ($event) {\n            this.openSidePannel.nativeElement.click();\n            this.getTerminalItemCodeMapping();\n        }\n    }\n\n    deleteTerminalItemCode(item: TerminalItemCodeMappingModel) {\n        this.IsLoading = true;\n        this.httpService.postData(`${this.DeleteTerminalItemCodeMappingUrl}`, { id: item.Id }).pipe(first()).subscribe(result => {\n            this.IsLoading = false;\n            if (result.StatusCode == 0) {\n                Declarations.msgsuccess(result.StatusMessage, undefined, undefined);\n                this.getTerminalItemCodeMapping();\n            } else\n                Declarations.msgerror(result.StatusMessage, undefined, undefined);\n        });\n    }\n    showBulkUploadPopup() {\n        this.IsShowBulkUploadPopup = true;\n    }\n\n    closePopup() {\n        this.IsShowBulkUploadPopup = false;\n    }\n\n    selectFiles(files: File[]) {\n        if (files != null && files != undefined && files.length > 0)\n            this.SelectedFiles = files;\n    }\n\n    uploadTerminalItemCodeMappingFile() {\n        var files = this.SelectedFiles;\n        if (files.length === 0)\n            return;\n\n        const formData = new FormData();\n        for (var file of files) {\n            if (!this.isValidFile(file)) {\n                return;\n            }\n            formData.append(file.name, file);\n        }\n\n        this.IsLoading = true;\n        this.carrierService.postBulkUploadTerminalItemCodeMappingTemplate(formData).subscribe(data => {\n            this.IsLoading = false;\n            if (data.StatusCode == 0) {\n                this.CloseBulkUploadPopup.nativeElement.click();\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                this.SelectedFiles = [];\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    isValidFile(file: File) {\n        var isValid = true;\n        var extension = this.getExtension(file.name);\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        if (file.size > this.MaxFileUploadSize) {\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        return isValid;\n    }\n\n    downloadCsvTemplate() {\n        this.IsLoading = true;\n        var timestamp = new Date().getTime();\n        this.carrierService.downloadTerminalItemCodeMappingTemplate(timestamp).subscribe(blob => {\n            const a = document.createElement('a')\n            const objectUrl = URL.createObjectURL(blob)\n            a.href = objectUrl\n            a.download = 'TerminalItemCodeMapping_Template.csv';\n            a.click();\n            URL.revokeObjectURL(objectUrl);\n\n            this.IsLoading = false;\n        });\n    }\n\n    getExtension(fileName) {\n        // extract file name from full path ...\n        var basename = fileName.split(/[\\\\/]/).pop();\n\n        // (supports `\\\\` and `/` separators)\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\n\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\n            return \"\";                             //  `.` not found (-1) or comes first (0)\n\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\n    }\n}\n","<div class=\"row\">\r\n    <!-- <div class=\"col-sm-12\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-right pa0\" data-target=\"raisedr\"\r\n            onclick=\"slidePanel('#terminal_i_code_map','40%')\" (click)=\"addTerminalItemCode()\"><i\r\n                class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Terminal Item Code</button>\r\n    </div> -->\r\n    <div class=\"col-sm-6\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-left pa0 mt10\" data-target=\"raisedr\"\r\n            onclick=\"slidePanel('#terminal_i_code_map','45%')\" (click)=\"addTerminalItemCode()\">\r\n            <i class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Terminal Item Code\r\n        </button>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <button id=\"showBulkUploadPopupBtn\" type=\"button\" class=\"btn btn-primary float-right mb5 valid\"\r\n            (click)=\"showBulkUploadPopup()\" data-toggle=\"modal\" data-target=\"#bulkUploadTerminalModalPopup\">Bulk\r\n            Upload</button>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-terminal-item-code\" class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"tSName\">Terminal Supplier</th>\r\n                                    <th data-key=\"tItem\">Terminal Item</th>\r\n                                    <th data-key=\"tItemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"tEffectiveDate\">Effective Date</th>\r\n                                    <th data-key=\"tExpiryDate\">Expiry Date</th>\r\n                                    <th data-key=\"Action\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let terminal of terminalMappingList\">\r\n                                    <td>{{terminal.TerminalSupplier}}</td>\r\n                                    <td>{{terminal.ItemDescription}}</td>\r\n                                    <td> {{terminal.ItemCode}} </td>\r\n                                    <td>{{terminal.EffectiveDate}}</td>\r\n                                    <td>{{terminal.ExpiryDate}}</td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\"\r\n                                            onclick=\"slidePanel('#terminal_i_code_map','40%')\"\r\n                                            (click)=\"editTerminalMapping(terminal)\"><i\r\n                                                class=\"fas fa-pencil-square-o color-blue fs16\" alt=\"Update\"\r\n                                                title=\"Update\"></i></button>\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                            [popoverTitle]=\"popoverDeleteTitle\" [confirmText]=\"confirmButtonText\"\r\n                                            [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                            (confirm)=\"deleteTerminalItemCode(terminal)\"><i\r\n                                                class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\"\r\n                                                title=\"Delete\"></i></button>\r\n                                        <!-- <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                            [popoverTitle]=\"popoverSaveTitle\" [confirmText]=\"confirmButtonText\"\r\n                                            [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                            (confirm)=\"updateTerminalId(terminal)\"\r\n                                            (cancel)=\"cancelUpdateTerminalNames(terminal)\"><i\r\n                                                class=\"fs21 fas fa-save color-green\" alt=\"Update\"\r\n                                                title=\"Update\"></i></button>\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                            [popoverTitle]=\"popoverDeleteTitle\" [confirmText]=\"confirmButtonText\"\r\n                                            [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                            (confirm)=\"deleteMapping(terminal.Id, terminal.CreatedByCompanyId)\"><i\r\n                                                class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\"\r\n                                                title=\"Delete\"></i></button> -->\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<div class=\"side-panel\" id=\"terminal_i_code_map\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt10 pb0\">\r\n            <a class=\"ml20 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{title}} Terminal Item Code Mapping</h3>\r\n        </div>\r\n        <div class=\"pt10 pb10 pl20 pr20\">\r\n            <app-create-terminal-item-code [countryId]=\"countryId\" (result)=\"getOutput($event)\">\r\n            </app-create-terminal-item-code>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"bulkUploadTerminalModalPopup\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowBulkUploadPopup\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header pt0 pb5\">\r\n                <h4 class=\"modal-title\">Item Code Mapping Bulk Upload</h4>\r\n                <button type=\"button\" #btnCloseBulkUploadPopup class=\"close color-grey\" data-dismiss=\"modal\"\r\n                    aria-label=\"Close\" (click)=\"closePopup()\">\r\n                    <i class=\"fa fa-close fs21 mt15\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"mb10\">\r\n                    <span class=\"fa fa-download mr10 mt10\"></span>\r\n                    <a role=\"button\" (click)=\"downloadCsvTemplate()\" class=\"mb5 btn-download\">Download Template</a>\r\n                </div>\r\n                <div class=\"mb5 mt5\">\r\n                    <input type=\"file\" id=\"bulkUploadFile\" (change)=\"selectFiles($event.target.files)\" accept=\".csv\">\r\n                </div>\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsLoading\"><span\r\n                        class='spinner-dashboard pa'></span></div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\"\r\n                    (click)=\"uploadTerminalItemCodeMappingFile()\">Upload</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { LocationDetailsModel, TerminalMappingModel } from 'src/app/carrier/models/location';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { LocationService } from 'src/app/location/services/location.service';\r\nimport { DropDownItem } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\r\ndeclare var currentCompanyId: any;\r\ndeclare var IsLiftFileValidationEnabled: any;\r\n\r\n@Component({\r\n  selector: 'app-terminal-mapping',\r\n  templateUrl: './terminal-mapping.component.html',\r\n  styleUrls: ['./terminal-mapping.component.css']\r\n})\r\nexport class TerminalMappingComponent implements OnInit, AfterViewInit  {\r\n    public TerminalMappingForm: FormGroup;\r\n    public dtOptions: any = {};\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    public selected: number = 0;\r\n    public TerminalsList: LocationDetailsModel[] = [];\r\n    public StateList: DropdownItem[] = [];\r\n    public CityList: DropdownItem[] = [];\r\n    public TerminalList: DropdownItem[] = [];\r\n    public IsLoading: boolean;\r\n    public SelectedCountryId: number;\r\n    public SelectedTerminalId: DropdownItem[] = [];\r\n    public CurrentCompanyId: any;\r\n    public ddlSettingsById = {};\r\n    public ddlSettingsByIdSingleSelect = {};\r\n    public ddlSettingsByCode = {};\r\n    public ddlSettingsForTerminal = {};\r\n    public IsValidForm: boolean = true;\r\n    public existingAssignedTerminalId: string = '';\r\n    public nameToUpdate: string = '';\r\n    public existingId: number = 0;\r\n    public popoverSaveTitle: string = 'Save the change(s)?';\r\n    public popoverDeleteTitle: string = 'Are you sure, want to delete?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    @Input() countryId: number;\r\n\r\n    public TerminalSupplierList: DropDownItem[];\r\n    public IsLiftFileValidationEnabled: boolean = false;\r\n\r\n    constructor(private fb: FormBuilder,private carrierService: CarrierService, private locationService: LocationService) {\r\n\r\n        this.TerminalMappingForm = this.fb.group({\r\n            States: this.fb.control([], [Validators.required]),\r\n            Cities: this.fb.control([]),\r\n            SelectedTerminal: this.fb.control([], [Validators.required]),\r\n            MyTerminalId: this.fb.control('', [Validators.required]),\r\n            CompanyId: this.fb.control(0),\r\n            Terminals: this.fb.control(0),\r\n            SelectedTerminalSupplier: this.fb.control([]),\r\n        });\r\n    };\r\n\r\n    ngOnInit() {\r\n\r\n        this.ddlSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsForTerminal = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByCode = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByIdSingleSelect = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        this.initializeUserTerminalData();\r\n       // this.loadData();\r\n        this.CurrentCompanyId = Number(currentCompanyId);\r\n        this.IsLiftFileValidationEnabled = IsLiftFileValidationEnabled;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.clearForm();\r\n    }\r\n   \r\n    \r\n    loadData() {\r\n        this.SelectedCountryId = Number(this.countryId);\r\n\r\n        if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n            this.getDefaultServingCountry();\r\n        }\r\n        else {\r\n            this.getStates();\r\n            this.getAllUserTerminalData();\r\n        }\r\n    }\r\n\r\n\r\n    getDefaultServingCountry() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n            this.getStates();\r\n            this.getAllUserTerminalData();\r\n        });\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#terminal-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    onStateSelect(state: any) {\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateDeSelect(state: any) {\r\n        this.TerminalMappingForm.get('Cities').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminalSupplier').patchValue([]);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateSelectAll(states: any) {\r\n        this.TerminalMappingForm.get('States').patchValue(states);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    getTerminals() {\r\n        var selectedStates = this.TerminalMappingForm.get('States').value as DropdownItem[];\r\n        var selectedCities = this.TerminalMappingForm.get('Cities').value as DropdownItem[];\r\n\r\n        if (selectedStates.length == 0) {\r\n            this.TerminalMappingForm.get('States').patchValue([]);\r\n            this.TerminalList = [];\r\n            this.TerminalSupplierList = [];\r\n            return;\r\n        }\r\n\r\n        var input = new TerminalMappingModel();\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(s => s.Id);\r\n            input.StateIds = stateIds.join(',');\r\n        }\r\n        if (selectedCities != null && selectedCities != undefined && selectedCities.length > 0) {\r\n            var cityIds = selectedCities.map(s => s.Name);\r\n            input.CityIds = cityIds.join(',');\r\n        }\r\n        input.CountryId = this.SelectedCountryId;\r\n        this.IsLoading = true;\r\n        this.carrierService.getTerminalsForMapping(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalList = data as DropdownItem[];\r\n        });\r\n        this.getTerminalSuppliers();\r\n    }\r\n\r\n    onStateDeSelectAll() {\r\n        this.TerminalMappingForm.get('Cities').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminalSupplier').patchValue([]);\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        this.TerminalSupplierList = [];\r\n        \r\n    }\r\n\r\n    getCitiesByStateId() {\r\n        var selectedStates = this.TerminalMappingForm.get('States').value as DropdownItem[];\r\n\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(m => m.Id);\r\n            this.getCities(stateIds);\r\n        }\r\n        else {\r\n            this.CityList = [];\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getCountryFilter(): any {\r\n        return (localStorage.getItem('countryFilterType')) ? (localStorage.getItem('countryFilterType')) : (localStorage.getItem('countryIdForDashboard') ? localStorage.getItem('countryIdForDashboard') : 1);\r\n    }\r\n\r\n    getStates() {\r\n        this.IsLoading = true;\r\n        if (this.SelectedCountryId != undefined && this.SelectedCountryId > 0) {\r\n            this.carrierService.getStates(this.SelectedCountryId).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.StateList = data as DropdownItem[];\r\n            });\r\n        }\r\n    }\r\n\r\n    getCities(stateId: number[]) {\r\n        \r\n        this.IsLoading = true;\r\n        this.carrierService.getCities(stateId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.CityList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    onCitySelect(city: any) {\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelect(city: any) {\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCitySelectAll(cities: any) {\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.TerminalMappingForm.get('Cities').patchValue(cities);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelectAll() {\r\n        this.TerminalMappingForm.get('SelectedTerminal').setValue([]);\r\n        this.getTerminals();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n    }\r\n\r\n    clearForm() {\r\n        this.TerminalMappingForm.reset();\r\n        this.TerminalMappingForm.get('States').setValue([]);\r\n        this.TerminalMappingForm.get('Cities').setValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminal').setValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminalSupplier').setValue([]);\r\n\r\n        this.existingAssignedTerminalId = '';\r\n        this.nameToUpdate = '';\r\n        this.TerminalList = [];\r\n        this.CityList = [];\r\n        this.TerminalSupplierList = [];\r\n        $(\"#terminal-grid-datatable\").DataTable().clear().destroy();\r\n        this.loadData();\r\n    }\r\n\r\n    selectchange(args) {\r\n        this.SelectedTerminalId = args.target.value;\r\n    } \r\n\r\n    onSubmit() {\r\n        let TermSupplierId = 0;\r\n        let TerminalId = 0;\r\n        var AssignedTerminalId = this.TerminalMappingForm.get('MyTerminalId').value;\r\n        var objTerminalId = this.TerminalMappingForm.get('SelectedTerminal').value as DropdownItem[];\r\n        var SelectedTermSupplier = this.TerminalMappingForm.get('SelectedTerminalSupplier').value as DropDownItem[];\r\n\r\n        if (SelectedTermSupplier != null && SelectedTermSupplier.length> 0) {\r\n            TermSupplierId = SelectedTermSupplier[0].Id;\r\n        }\r\n        if (objTerminalId.length) {\r\n             TerminalId = objTerminalId[0].Id;\r\n        }\r\n        if ((AssignedTerminalId == undefined || AssignedTerminalId == null || AssignedTerminalId.trim() == '' || TerminalId == 0)\n        ) {\n            if (TerminalId == 0) {\n                Declarations.msgerror('Please provide Terminal Name', undefined, undefined);\n                return;\n            } else {\n                Declarations.msgerror('Please provide Terminal ID', undefined, undefined);\n                return;\n            }\n\n        } else {\n            this.IsValidForm = true;\r\n        }\r\n        var TerminalMappingViewModel =\r\n        {\r\n            Id: 0,\r\n            AssignedTerminalId: AssignedTerminalId,\r\n            TerminalId: TerminalId,\r\n            IsBulkPlant: this.TerminalList.find(f => f.Id == TerminalId).Code == '1' ? true : false,           \r\n            TerminalSupplierId: TermSupplierId\r\n        }\r\n\r\n        this.TerminalMappingForm.get(\"CompanyId\").patchValue(this.CurrentCompanyId);\r\n        \r\n        if (!this.IsValidForm) {\r\n            this.IsValidForm = false;\r\n        }\r\n        else {\r\n            this.checkDuplicateTerminalId(TerminalMappingViewModel);\r\n        }\r\n    }\r\n\r\n    submitForm(TerminalMappingViewModel) {\r\n        this.IsLoading = true;\r\n        this.carrierService.saveTerminalMapping(TerminalMappingViewModel).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                this.IsLoading = false;\r\n                this.clearForm();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                \r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n               \r\n            }\r\n        });\r\n    }\r\n\r\n    editTerminalId(mapping: LocationDetailsModel, key: string, $event: any) {\r\n        this.nameToUpdate = $event.target.innerText;\r\n        this.existingAssignedTerminalId = mapping.AssignedTerminalId;\r\n        this.existingId = mapping.Id;\r\n    }\r\n\r\n    updateTerminalId(mapping: LocationDetailsModel) {\r\n        if (mapping.Id == this.existingId) {\r\n            mapping.AssignedTerminalId = this.nameToUpdate;\r\n        }\r\n\r\n        if (mapping.AssignedTerminalId.trim() == '') {\r\n            Declarations.msgerror('Please provide My Terminal ID', undefined, undefined);\r\n            return;\r\n        }\r\n        this.checkDuplicateTerminalId(mapping);\r\n    }\r\n\r\n    updateTerminal(mapping: LocationDetailsModel) {\r\n\r\n        this.IsLoading = true;\r\n        this.carrierService.updateTerminalId(mapping).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                \r\n                this.clearForm();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    checkDuplicateTerminalId(TerminalMappingViewModel) {\r\n        this.carrierService.checkDuplicateTerminalId(TerminalMappingViewModel).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n\r\n                if (TerminalMappingViewModel.Id == 0) {\r\n                    this.submitForm(TerminalMappingViewModel);\r\n                } else {\r\n                    this.updateTerminal(TerminalMappingViewModel);\r\n                }\r\n            }\r\n\r\n            if (data.StatusCode == 2) {\r\n                this.existingAssignedTerminalId = '';\r\n                this.nameToUpdate = '';\r\n                $(\"#terminal-grid-datatable\").DataTable().clear().destroy();\r\n                this.getAllUserTerminalData();\r\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteMapping(mappingId: number, companyId: number) {\r\n        if (mappingId == undefined || mappingId <= 0)\r\n            return;\r\n        var model = new LocationDetailsModel();\r\n        model.Id = mappingId;\r\n        this.IsLoading = true;\r\n        this.carrierService.postDeleteTerminalMappingById(model).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.clearForm();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelUpdateTerminalNames(mapping: LocationDetailsModel) {\r\n        //mapping.AssignedTerminalId = this.existingAssignedTerminalId;\r\n        this.clearForm();\r\n    }\r\n\r\n\r\n    initializeUserTerminalData() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Terminal Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Terminal Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            aaSorting: [],\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    getAllUserTerminalData() {\r\n        this.IsLoading = true;\r\n        var SelectedCountryId = this.SelectedCountryId;\r\n        this.carrierService.getTerminalMappingGrid(SelectedCountryId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalsList = data as LocationDetailsModel[];\r\n            this.dtTrigger.next();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n      //  this.dtTrigger.next();\r\n    }\r\n\r\n    public getTerminalSuppliers() {\r\n        this.IsLoading = true;\r\n        var selectedCountryId = this.SelectedCountryId;\r\n        this.carrierService.getTerminalSupplier(selectedCountryId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalSupplierList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"TerminalMappingForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"well col-sm-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>State</label>\r\n                            <ng-multiselect-dropdown formControlName=\"States\"\r\n                                                     [placeholder]=\"'Select State(s)'\"\r\n                                                     [settings]=\"ddlSettingsById\"\r\n                                                     [data]=\"StateList\"\r\n                                                     (onSelect)=\"onStateSelect($event)\" (onDeSelect)=\"onStateDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onStateSelectAll($event)\" (onDeSelectAll)=\"onStateDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>City</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Cities\"\r\n                                                     [placeholder]=\"'Select City(s)'\"\r\n                                                     [settings]=\"ddlSettingsByCode\"\r\n                                                     [data]=\"CityList\"\r\n                                                     (onSelect)=\"onCitySelect($event)\" (onDeSelect)=\"onCityDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onCitySelectAll($event)\" (onDeSelectAll)=\"onCityDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal/Bulk Plant Name<span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedTerminal\"\r\n                                                     [placeholder]=\"'Select Terminal(s)'\"\r\n                                                     [settings]=\"ddlSettingsForTerminal\"\r\n                                                     [data]=\"TerminalList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"!IsValidForm && TerminalMappingForm.get('SelectedTerminal').errors?.required\" class=\"color-maroon\">\r\n                                Terminal is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\" [ngClass]=\"{'pntr-none subSectionOpacity': !IsLiftFileValidationEnabled}\">\r\n                            <label>Terminal Suppliers</label>\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedTerminalSupplier\"\r\n                                                     [placeholder]=\"'Select Terminal Suppliers'\"\r\n                                                     [settings]=\"ddlSettingsForTerminal\" [data]=\"TerminalSupplierList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal ID<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" #MyTerminalId formControlName=\"MyTerminalId\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                <div class=\"d-flex flex-row-reverse\">\r\n                    <button id=\"submit-terminal-mapping-form\" type=\"submit\" class=\"mt4 btn btn-default valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\">Assign</button>\r\n                    <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n\r\n                </div>\r\n                </div>\r\n        </div>\r\n        \r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadow-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-terminal-grid\" class=\"table-responsive\">\r\n                            <table id=\"terminal-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Id\">Id</th> -->\r\n                                        <th data-key=\"tName\">Terminal/Bulk Plant Name</th>\r\n                                        <th data-key=\"tControlNumber\">Control Number</th>\r\n                                        <th data-key=\"AssignedTermSupplierName\">Terminal Supplier Name</th>\r\n                                        <th data-key=\"tAssignedTerminalId\">Terminal Id</th>\r\n\r\n                                        <th data-key=\"Action\">Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let terminal of TerminalsList\">\r\n                                        <!-- <td>{{terminal.Id}}</td> -->\r\n                                        <td>{{terminal.TerminalName}}</td>\r\n                                        <td>{{terminal.ControlNumber == '-' ? \"--\":terminal.ControlNumber}}</td>\r\n                                        <td>\r\n                                            {{terminal.TerminalSupplierName}}\r\n                                        </td>\r\n                                        <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editTerminalId(terminal, 'AssignedTerminalId', $event)\">\r\n                                            {{terminal.AssignedTerminalId == '' ? \"--\" : terminal.AssignedTerminalId}}\r\n                                        </td>\r\n                                        <td class=\"text-center\">\r\n                                            <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverSaveTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"updateTerminalId(terminal)\" (cancel)=\"cancelUpdateTerminalNames(terminal)\"><i class=\"fs21 fas fa-save color-green\" alt=\"Update\" title=\"Update\"></i></button>\r\n                                            <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverDeleteTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deleteMapping(terminal.Id, terminal.CreatedByCompanyId)\"><i class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\" title=\"Delete\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>"]}