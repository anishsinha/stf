{"version":3,"sources":["./src/app/accessorial-fees/accessorial-fees.module.ts","./src/app/accessorial-fees/create/child-components/fee-list.component.ts","./src/app/accessorial-fees/create/child-components/fee-list.component.html","./src/app/accessorial-fees/create/child-components/fee-type.component.ts","./src/app/accessorial-fees/create/child-components/fee-type.component.html","./src/app/accessorial-fees/create/create-accessorial-fees.component.ts","./src/app/accessorial-fees/create/create-accessorial-fees.component.html","./src/app/accessorial-fees/master/master.component.ts","./src/app/accessorial-fees/master/master.component.html","./src/app/accessorial-fees/model/accessorial-fees.ts","./src/app/accessorial-fees/service/accessorialfees.service.ts","./src/app/accessorial-fees/view/view-accessorial-fees.component.ts","./src/app/accessorial-fees/view/view-accessorial-fees.component.html","./src/app/accessorial-fees/view/view-fees-details/view-fees-details.component.ts","./src/app/company-addresses/region/service/region.service.ts","./src/app/invoice/services/fee.service.ts"],"names":[],"mappings":"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","file":"accessorial-fees-accessorial-fees-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MasterComponent } from './master/master.component';\r\nimport { ViewAccessorialFeesComponent } from './view/view-accessorial-fees.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateAccessorialFeesComponent } from './create/create-accessorial-fees.component';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { FeeListComponent } from './create/child-components/fee-list.component';\r\nimport { FeeTypeComponent } from './create/child-components/fee-type.component';\r\nimport { ViewFeesDetailsComponent } from './view/view-fees-details/view-fees-details.component';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\n\r\nconst route: Routes = [\r\n    { path: '', component: MasterComponent },\r\n    { path: 'Create', component: MasterComponent }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MasterComponent,\r\n        ViewAccessorialFeesComponent,\r\n        CreateAccessorialFeesComponent,\r\n        FeeListComponent,\r\n        FeeTypeComponent,\r\n        ViewFeesDetailsComponent\r\n    ],\r\n  imports: [\r\n      CommonModule, \r\n      SharedModule, \r\n      FormsModule, \r\n      DataTablesModule, \r\n      DirectiveModule, \r\n      RouterModule.forChild(route),\r\n      AngularMultiSelectModule\r\n  ]\r\n})\r\nexport class AccessorialFeesModule { }\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, Pipe, PipeTransform } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { FeeModel } from '../../../invoice/models/DropDetail';\r\nimport { DropdownItem, DropdownItemExt, FeeSubType } from 'src/app/statelist.service';\r\nimport { FeeService } from '../../../invoice/services/fee.service';\r\nimport * as moment from 'moment';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../../../carrier/service/data.service';\r\n\r\n@Component({\r\n  selector: 'app-fee-list',\r\n  templateUrl: './fee-list.component.html',\r\n  styleUrls: ['./fee-list.component.css']\r\n})\r\nexport class FeeListComponent implements OnInit {\r\n    @Input() Parent: FormGroup;\r\n    @Input() CountryId: any;\r\n    @Input() public Fees: FeeModel[];\r\n\r\n    //---------------Fees GROUP -----------\r\n\r\n    public CommonFees: FormGroup[];\r\n    public OtherFees: FormGroup[];\r\n    public SpCommonFees: FormGroup[];\r\n    public SpOtherFees: FormGroup[];\r\n\r\n    public FeeTypes: DropdownItemExt[];\r\n    public FeeSubTypes: FeeSubType[];\r\n    public FeeConstraintTypes: DropdownItem[];\r\n\r\n    public IsLoading: boolean = false; \r\n    public DisplayCurrency: any;\r\n    //public OrderId: number;\r\n    constructor(private fb: FormBuilder, private feeService: FeeService, private route: ActivatedRoute, private dataService: DataService) {\r\n        this.CommonFees = [];\r\n        this.OtherFees = [];\r\n        this.SpCommonFees = [];\r\n        this.SpOtherFees = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);\r\n        this.Parent.addControl('Fees', this.fb.array([]));\r\n\r\n\r\n        this.IsLoading = true\r\n        this.feeService.getFeeTypes(0, true).subscribe(data => {\r\n            this.IsLoading = false\r\n            this.FeeTypes = data;\r\n\r\n        });\r\n\r\n        this.feeService.getFeeConstraintTypes()\r\n            .subscribe((data: DropdownItem[]) => { this.FeeConstraintTypes = data; });\r\n\r\n        this.feeService.getFeeSubTypes(0)\r\n            .subscribe((data: FeeSubType[]) => {\r\n                this.FeeSubTypes = data.filter(function (elem: FeeSubType) { return elem.FeeSubTypeId != 1 });\r\n            });\r\n\r\n        this.dataService.RemoveFeesSubject.subscribe(x => {\r\n            this.removeFeesOnCreateNew();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.CountryId && change.CountryId.currentValue) {\r\n            var currency = change.CountryId.currentValue;\r\n            if (currency == 1) {\r\n                this.DisplayCurrency = \"USD\";\r\n            } else if (currency == 2) {\r\n                this.DisplayCurrency = \"CAD\";\r\n            }           \r\n        }\r\n\r\n        if (change.Fees && change.Fees.currentValue) {\r\n            this.CommonFees = [];\r\n            this.OtherFees = [];\r\n            this.SpCommonFees = [];\r\n            this.SpOtherFees = [];\r\n          \r\n            let fees = this.Parent.get('Fees') as FormArray;\r\n            if (fees) {\r\n                fees.clear();\r\n            }\r\n            var currValues = change.Fees.currentValue as FeeModel[];\r\n            currValues.forEach((x: FeeModel) => {\r\n                if (x.FeeConstraintTypeId == null) {\r\n                    this.addGeneralFee(x.CommonFee, x);\r\n                } else {\r\n                    this.addSpecialFee(x.CommonFee, x.FeeConstraintTypeId, x);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getForm(model: FeeModel): FormGroup {\r\n        var byQtyModel = model.DeliveryFeeByQuantity;\r\n        var byQuantity = []; var _fb = this.fb;\r\n        if (byQtyModel != undefined && byQtyModel != null) {\r\n            byQtyModel.forEach(function (elem, idx) {\r\n                byQuantity.push(_fb.group({\r\n                    Currency: _fb.control(elem.Currency),\r\n                    MinQuantity: _fb.control(elem.MinQuantity, [Validators.required]),\r\n                    MaxQuantity: _fb.control(elem.MaxQuantity, [Validators.required]),\r\n                    Fee: _fb.control(elem.Fee, [Validators.required])\r\n                }));\r\n            });\r\n        }\r\n\r\n        var _specialDate = '';\r\n        if (model.SpecialDate != null && model.SpecialDate != undefined) {\r\n            _specialDate = moment(model.SpecialDate).format('MM/DD/YYYY');\r\n            _specialDate = _specialDate == '01/01/0001' ? '' : _specialDate;\r\n        }\r\n        var group = this.fb.group({\r\n            OrderId: this.fb.control(model.OrderId),\r\n            Currency: this.fb.control(this.DisplayCurrency),\r\n            TruckLoadType: this.fb.control(model.TruckLoadType),\r\n            TruckLoadCategoryId: this.fb.control(model.TruckLoadCategoryId),\r\n            IncludeInPPG: this.fb.control(model.IncludeInPPG),\r\n            CommonFee: this.fb.control(model.CommonFee),\r\n            FeeConstraintTypeId: this.fb.control(model.FeeConstraintTypeId),\r\n            SpecialDate: this.fb.control(_specialDate),\r\n            FeeTypeId: this.fb.control(model.FeeTypeId, [Validators.required]),\r\n            FeeSubTypeId: this.fb.control(model.FeeSubTypeId, [Validators.required]),\r\n            OtherFeeDescription: this.fb.control(model.OtherFeeDescription),\r\n            MinimumGallons: this.fb.control(model.MinimumGallons),\r\n            Fee: this.fb.control(model.Fee, [Validators.required]),\r\n            DeliveryFeeByQuantity: this.fb.array(byQuantity),\r\n        });\r\n        return group;\r\n    }\r\n\r\n    addGeneralFee(_commonFee: boolean, feeObj: FeeModel): void {\r\n        if (feeObj == null) {\r\n            feeObj = new FeeModel();\r\n            feeObj.CommonFee = _commonFee;\r\n        }\r\n        if (!_commonFee && (feeObj.FeeTypeId == undefined || feeObj.FeeTypeId == null || feeObj.FeeTypeId.indexOf('14') < 0)) {\r\n            feeObj.FeeTypeId = '14';\r\n        }\r\n        var feeGroup = this.getForm(feeObj);\r\n        if (_commonFee) {\r\n            this.CommonFees.push(feeGroup);\r\n        } else {\r\n            this.OtherFees.push(feeGroup);\r\n        }\r\n        (this.Parent.get('Fees') as FormArray).push(feeGroup);\r\n    }\r\n\r\n    removeGeneralFee(_commonFee: boolean, fee: FormGroup): void {\r\n        var _fees = this.Parent.get('Fees') as FormArray;\r\n        _fees.removeAt(_fees.controls.indexOf(fee));\r\n        if (_commonFee) {\r\n            this.CommonFees.splice(this.CommonFees.indexOf(fee), 1);\r\n        } else {\r\n            this.OtherFees.splice(this.OtherFees.indexOf(fee), 1);\r\n        }\r\n    }\r\n\r\n    addSpecialFee(_commonFee: boolean, typeId: number, feeObj: FeeModel): void {\r\n        if (feeObj == null) {\r\n            feeObj = new FeeModel();\r\n            feeObj.CommonFee = _commonFee;\r\n        }\r\n        if (!_commonFee && (feeObj.FeeTypeId == undefined || feeObj.FeeTypeId == null || feeObj.FeeTypeId.indexOf('14') < 0)) {\r\n            feeObj.FeeTypeId = '14';\r\n        }\r\n        feeObj.FeeConstraintTypeId = typeId;\r\n        var feeGroup = this.getForm(feeObj);\r\n        if (_commonFee) {\r\n            this.SpCommonFees.push(feeGroup);\r\n        } else {\r\n            this.SpOtherFees.push(feeGroup);\r\n        }\r\n        (this.Parent.get('Fees') as FormArray).push(feeGroup);\r\n    }\r\n\r\n    removeSpecialFee(_commonFee: boolean, fee: FormGroup): void {\r\n        var _fees = this.Parent.get('Fees') as FormArray;\r\n        _fees.removeAt(_fees.controls.indexOf(fee));\r\n        if (_commonFee) {\r\n            this.SpCommonFees.splice(this.SpCommonFees.indexOf(fee), 1);\r\n        } else {\r\n            this.SpOtherFees.splice(this.SpOtherFees.indexOf(fee), 1);\r\n        }\r\n    }\r\n\r\n    addByQtyFee(fee: FormGroup): void {\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        var lastFee = _fees.controls[_fees.controls.length - 1].get('Fee').value;\r\n        var feeObj = new FeeModel(); feeObj.Fee = lastFee;\r\n        _fees.push(this.getForm(feeObj));\r\n    }\r\n\r\n    removeByQtyFee(fee: FormGroup, index: number): void {\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        _fees.removeAt(index);\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n\r\n    isInvalid(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).invalid &&\r\n            (drop.get(name).dirty || drop.get(name).touched);\r\n    }\r\n\r\n    isRequired(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).errors.required;\r\n    }\r\n\r\n    isMin(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).errors.min;\r\n    }\r\n     requiredIfValidator(predicate) {\r\n        return (formControl => {\r\n            if (!formControl.parent) {\r\n                return null;\r\n            }\r\n            if (predicate()) {\r\n                return Validators.required(formControl);\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n    removeFeesOnCreateNew() {\r\n        this.CommonFees.forEach(commonFee => {\r\n            this.removeGeneralFee(true, commonFee);\r\n        })\r\n        this.OtherFees.forEach(OtherFee => {\r\n            this.removeGeneralFee(false, OtherFee);\r\n        })\r\n        this.SpCommonFees.forEach(SpCommonFee => {\r\n            this.removeSpecialFee(true, SpCommonFee);\r\n        })\r\n        this.SpOtherFees.forEach(SpOtherFee => {\r\n            this.removeSpecialFee(false, SpOtherFee);\r\n        })\r\n    }\r\n}\r\n","<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading</div>\r\n    </div>\r\n</div>\r\n<div [formGroup]=\"Parent\" class=\"well box-shadow\">\r\n    <div formArrayName=\"Fees\">\r\n        <h4>Fees</h4>\r\n        <div class=\"mt10 mb5\">\r\n            <b>General</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let commonFee of CommonFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"commonFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">                    \r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeGeneralFee(true, commonFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addGeneralFee(true, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n        <div class=\"mt10\">\r\n            <b>Other</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let otherFee of OtherFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"otherFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeGeneralFee(false, otherFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addGeneralFee(false, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n        <div class=\"mt10\">\r\n            <h4>Weekend / Holiday Fee(s)</h4>\r\n        </div>\r\n        <div class=\"mt10 mb5\">\r\n            <b>General</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let spCommonFee of SpCommonFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"spCommonFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon\" (click)=\"removeSpecialFee(true, spCommonFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addSpecialFee(true, 1, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n        <div class=\"mt10 mb5\">\r\n            <b>Other</b>\r\n        </div>\r\n        <ng-container *ngFor=\"let spOtherFee of SpOtherFees; let i = index; let isLast = last\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10\">\r\n                    <app-fee-type [Parent]=\"Parent\" [FeeGroup]=\"spOtherFee\" [FeeTypes]=\"FeeTypes\" [Currency]=\"DisplayCurrency\"\r\n                                  [FeeConstraintTypes]=\"FeeConstraintTypes\" [FeeSubTypes]=\"FeeSubTypes\"></app-fee-type>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeSpecialFee(false, spOtherFee)\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"addSpecialFee(false, 1, null)\"><i class=\"fa fa-plus-circle\"></i> Add Fee</button>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { DropdownItem, DropdownItemExt, FeeSubType } from 'src/app/statelist.service';\r\nimport { FeeService } from '../../../invoice/services/fee.service';\r\nimport { ByQuantityModel } from '../../../invoice/models/DropDetail';\r\n\r\n@Component({\r\n  selector: 'app-fee-type',\r\n  templateUrl: './fee-type.component.html',\r\n  styleUrls: ['./fee-type.component.css']\r\n})\r\nexport class FeeTypeComponent implements OnInit {\r\n\r\n    @Input() Parent: FormGroup;\r\n    @Input() FeeGroup: FormGroup;\r\n\r\n    @Input() Currency: string; // Input property from fee-list component \r\n\r\n    public DisplayCurrency: any;\r\n\r\n    //----------------DDL------------------\r\n\r\n    @Input() public FeeTypes: DropdownItemExt[];\r\n    @Input() public FeeSubTypes: FeeSubType[];\r\n    @Input() public FeeConstraintTypes: DropdownItem[];\r\n    public DisplayFeeTypes: FeeSubType[];\r\n\r\n    public maxDate = new Date();\r\n    public minDate = new Date();\r\n\r\n\r\n    constructor(private fb: FormBuilder, private feeService: FeeService) {\r\n        this.DisplayFeeTypes = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.FeeGroup.setValidators(this.feeNameRequired('FeeTypeId', 'OtherFeeDescription', 'CommonFee'));\r\n        if (this.FeeSubTypes != null && this.FeeSubTypes != undefined)\r\n            this.DisplayFeeTypes = this.FeeSubTypes.slice();\r\n        this.DisplayCurrency = this.Currency;\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.FeeSubTypes && change.FeeSubTypes.currentValue != null) {\r\n            var subTypes = change.FeeSubTypes.currentValue as FeeSubType[];\r\n            this.DisplayFeeTypes = subTypes;\r\n        }\r\n    }\r\n\r\n    updateSubType(feeTypeId: string): void {\r\n        this.DisplayFeeTypes = this.FeeSubTypes.slice().filter(function (elem) { return elem.FeeTypeId == feeTypeId; });\r\n    }\r\n\r\n    getForm(_fee: ByQuantityModel): FormGroup {\r\n        return this.fb.group({\r\n            Currency: this.fb.control(_fee.Currency),\r\n            MinQuantity: this.fb.control(_fee.MinQuantity, [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\r\n            MaxQuantity: this.fb.control(_fee.MaxQuantity, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.required]),\r\n            Fee: this.fb.control(_fee.Fee, [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)])\r\n        });\r\n    }\r\n\r\n    addByQtyFee(fee: FormGroup, feeObj: ByQuantityModel): void {\r\n        if (feeObj == null) {\r\n            feeObj = new ByQuantityModel();\r\n        }\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        if (_fees.controls.length > 0) {\r\n            var lastMax = _fees.controls[_fees.controls.length - 1].get('MaxQuantity');\r\n            lastMax.setValidators([Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]);\r\n            feeObj.MinQuantity = lastMax.value;\r\n        }\r\n        var _form = this.getForm(feeObj);\r\n\r\n        _fees.push(_form);\r\n    }\r\n\r\n    removeByQtyFee(fee: FormGroup, index: number): void {\r\n        var _fees = fee.get('DeliveryFeeByQuantity') as FormArray;\r\n        _fees.removeAt(index);\r\n        if (_fees.controls.length > 0) {\r\n            var lastMax = _fees.controls[_fees.controls.length - 1].get('MaxQuantity');\r\n            lastMax.setValidators([Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.required]);\r\n        }\r\n    }\r\n\r\n    isInvalid(group: FormGroup, name: string): boolean {\r\n        return group.get(name).invalid &&\r\n            (group.get(name).dirty || group.get(name).touched || group.get(name).invalid);\r\n    }\r\n\r\n    isRequired(group: FormGroup, name: string): boolean {\r\n        return group.get(name).errors.required;\r\n    }\r\n\r\n    isFeeNameRequired(group: FormGroup, name: string): boolean {\r\n        return group.get(name).errors.required;\r\n    }\r\n\r\n    handleByQuantity(group: FormGroup, subTypeId: number): void {\r\n        var fee = group.get('Fee');\r\n        if (subTypeId == 3) {\r\n            fee.setValue(0);\r\n        } else {\r\n            if (fee.value == 0) {\r\n                fee.setValue('');\r\n            }\r\n            (group.get('DeliveryFeeByQuantity') as FormArray).clear();\r\n        }\r\n    }\r\n\r\n    feeNameRequired(field1Name: string, field2Name: string, field3Name: string): any {\r\n        let field1 = this.FeeGroup.controls[field1Name];\r\n        let field2 = this.FeeGroup.controls[field2Name];\r\n        let field3 = this.FeeGroup.controls[field3Name];\r\n        if (field3.value && (field1.value == null || field1.value == '')) {\r\n            return Validators.required(field1);\r\n        } else if (!field3.value && (field2.value == null || field2.value.replace(/\\s/g, '') == '')) {\r\n            return Validators.required(field2);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"row\" [formGroup]=\"FeeGroup\">\r\n    <div class=\"col-sm-3\">\r\n        <select formControlName=\"FeeTypeId\" class=\"form-control\"\r\n                [style.display]=\"FeeGroup.get('CommonFee').value ? 'block' : 'none'\"\r\n                #feeTypeId (change)=\"updateSubType(FeeGroup.get('FeeTypeId').value)\">\r\n            <option [value]=\"null\">Select Fee</option>\r\n            <option *ngFor=\"let ft of FeeTypes\" [value]=\"ft.Code\" [selected]=\"ft.Code==FeeGroup.get('FeeTypeId').value\">{{ft.Name}}</option>\r\n        </select>\r\n        <div class=\"mb15 form-group\">\r\n            <input type=\"text\" formControlName=\"OtherFeeDescription\" [style.display]=\"FeeGroup.get('CommonFee').value ? 'none' : 'block'\" class=\"form-control\" placeholder=\"Fee Name\" />\r\n            <span *ngIf=\"isInvalid(FeeGroup, 'FeeTypeId') || isInvalid(FeeGroup, 'OtherFeeDescription')\" class=\"color-maroon\">\r\n                <span *ngIf=\"isRequired(FeeGroup, 'FeeTypeId') || isFeeNameRequired(FeeGroup, 'OtherFeeDescription')\">\r\n                    Required.\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"form-group\">\r\n            <select formControlName=\"FeeSubTypeId\" class=\"form-control\" (focus)=\"updateSubType(FeeGroup.get('FeeTypeId').value)\"\r\n                    (change)=\"handleByQuantity(FeeGroup, FeeGroup.get('FeeSubTypeId').value)\">\r\n                <option [value]=\"null\">Select Fee Type</option>\r\n                <option *ngFor=\"let fst of DisplayFeeTypes\" [value]=\"fst.FeeSubTypeId\"\r\n                        [selected]=\"fst.FeeSubTypeId==FeeGroup.get('FeeSubTypeId').value\">\r\n                    {{fst.SubTypeName}}\r\n                </option>\r\n            </select>\r\n            <span *ngIf=\"isInvalid(FeeGroup, 'FeeSubTypeId')\" class=\"color-maroon pa\">\r\n                <span *ngIf=\"isRequired(FeeGroup, 'FeeSubTypeId')\">\r\n                    Required.\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"FeeGroup.get('FeeConstraintTypeId').value!=null\">\r\n        <div class=\"form-group\">\r\n            <select formControlName=\"FeeConstraintTypeId\" *ngIf=\"FeeGroup.get('FeeConstraintTypeId').value\" class=\"form-control\">\r\n                <option *ngFor=\"let fc of FeeConstraintTypes\" [value]=\"fc.Id\"\r\n                        [selected]=\"fc.Id==FeeGroup.get('FeeConstraintTypeId').value\">\r\n                    {{fc.Name}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"FeeGroup.get('FeeConstraintTypeId').value==2\">\r\n        <div class=\"form-group\">\r\n            <input type=\"text\" formControlName=\"SpecialDate\" class=\"form-control datepicker\" placeholder=\"Date\" \r\n                   [maxDate]=\"maxDate\"   [minDate]=\"minDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" \r\n                   (onDateChange)=\"FeeGroup.get('SpecialDate').setValue($event)\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"FeeGroup.get('FeeTypeId').value == '8'\">\r\n        <input type=\"text\" formControlName=\"MinimumGallons\" class=\"form-control\" placeholder=\"Min Quantity\" />\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n        <div class=\"form-group\">\r\n            <div class=\"input-group\">\r\n                <input type=\"number\" formControlName=\"Fee\" class=\"form-control\" *ngIf=\"FeeGroup.get('FeeSubTypeId').value != 3\" placeholder=\"Fee\" />\r\n                <div class=\"input-group-addon fs12\" *ngIf=\"FeeGroup.get('FeeSubTypeId').value != 3\">{{DisplayCurrency}}</div>\r\n            </div>\r\n            <span *ngIf=\"isInvalid(FeeGroup, 'Fee')\" class=\"color-maroon\">\r\n                <span *ngIf=\"isRequired(FeeGroup, 'Fee')\">\r\n                    Required.\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-9\" *ngIf=\"FeeGroup.get('FeeSubTypeId').value == 3\">\r\n        <div formArrayName=\"DeliveryFeeByQuantity\">\r\n            <div *ngFor=\"let byQty of FeeGroup.get('DeliveryFeeByQuantity')['controls'];  let i = index;\">\r\n                <div class=\"row\" [formGroupName]=\"i\">\r\n                    <div class=\"col-sm-3 pr0 mb5\">\r\n                        <input type=\"hidden\" formControlName=\"Currency\" />\r\n                        <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" readonly=\"readonly\" placeholder=\"Min Quantity\" />\r\n                    </div>\r\n                    <div class=\"col-sm-3 pr0 mb5\">\r\n                        <input type=\"text\" formControlName=\"MaxQuantity\" class=\"form-control\" placeholder=\"Max Quantity\" />\r\n                        <span *ngIf=\"isInvalid(byQty, 'MaxQuantity')\" class=\"color-maroon\">\r\n                            <span *ngIf=\"isRequired(byQty, 'MaxQuantity')\">\r\n                                Required.\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-3 pr0 mb5\">\r\n                        <input type=\"text\" formControlName=\"Fee\" class=\"form-control\" placeholder=\"Fee\" />\r\n                        <span *ngIf=\"isInvalid(byQty, 'Fee')\" class=\"color-maroon\">\r\n                            <span *ngIf=\"isRequired(byQty, 'Fee')\">\r\n                                Required.\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-1\">\r\n                        <a (click)=\"removeByQtyFee(FeeGroup, i)\"><i class=\"fa fa-trash-alt color-maroon mt10\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb10\">\r\n                <div class=\"col-sm-12\">\r\n                    <a (click)=\"addByQtyFee(FeeGroup, null)\"><i class=\"fa fa-plus-circle\"></i> Add Quantity Range</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-2 text-lg-right mt-2\">\r\n        <input type=\"checkbox\" formControlName=\"IncludeInPPG\">\r\n        <label class=\"ml-2\">Include In PPG </label>\r\n        <input type=\"hidden\" formControlName=\"Currency\" />\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CreateAccessorialFeeModel } from '../model/accessorial-fees';\r\nimport * as moment from 'moment';\r\nimport { from, forkJoin, merge } from 'rxjs';\r\nimport { FeeModel } from 'src/app/invoice/models/DropDetail';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport {AccessorialFeesService } from '../service/accessorialfees.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { map, mergeMap, pairwise, startWith } from 'rxjs/operators';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { FreightTableStatus, SourceRegionInputModel, TableType } from 'src/app/app.enum';\r\nimport { DataService } from '../../carrier/service/data.service';\r\ndeclare var currentUserCompanyId: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-accessorial-fees',\r\n  templateUrl: './create-accessorial-fees.component.html',\r\n  styleUrls: ['./create-accessorial-fees.component.css']\r\n})\r\nexport class CreateAccessorialFeesComponent implements OnInit {\r\n    public rcForm: FormGroup;\r\n    public minDate = new Date();\r\n    public maxDate = new Date();\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n\r\n    public IsLoading: boolean = false;\r\n    public SelectedCountryId: number = -1;\r\n    public CurrentCompanyId: number;\r\n    public AccessorialFeeId?: number;\r\n    public AccessorialFeeMode: string = \"CREATE\";\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n\r\n    public Fees: FeeModel[] = [];\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    \r\n    public decimalSupportedRegx = /^[0-9]\\d{0,9}(\\.\\d{0,5})?%?$/;\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    public Afmodel: CreateAccessorialFeeModel;\r\n    public disableInputControls: boolean = false;\r\n    public ServiceResponse: any;\r\n    public IsEditable: boolean = true;\r\n    public IsLoaded: boolean = true;\r\n    @Output() onPageSubmit = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService, private dataService: DataService,\r\n        private regionService: RegionService, private carrierService: CarrierService, private accesorialFeeService: AccessorialFeesService, private http: HttpClient,\r\n        @Inject(DOCUMENT) private _document: Document) { }\r\n\r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n\r\n        this.CurrentCompanyId = Number(currentUserCompanyId);\r\n        this.getDefaultServingCountry();\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select Terminals or Bulk Plants\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.rcForm = this.createForm();\r\n        this.getTableTypes();\r\n        this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Master, Name: \"Master\" }]);// default will master\r\n        this.IsMasterSelected = true;\r\n        \r\n        this.getSourceRegions(TableType.Master.toString());\r\n\r\n        this.accesorialFeeService.onSelectedAccessorialFeeId.subscribe(s => {\r\n            if (s) {\r\n                let stringify = JSON.parse(s);\r\n                this.AccessorialFeeId = stringify.AccessorialFeeId;\r\n                this.AccessorialFeeMode = stringify.Mode;\r\n            }\r\n        })\r\n\r\n        let id = localStorage.getItem(\"AccessorialFeeId\");\r\n        if (id && +id > 0) {\r\n            this.AccessorialFeeId = Number(id);\r\n            this.AccessorialFeeMode = \"VIEW\";\r\n            localStorage.removeItem(\"AccessorialFeeId\");\r\n        }\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.SourceRegionChange(prev, next);\r\n            });\r\n    }\r\n\r\n\r\n    getDefaultServingCountry() {\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n        });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await (data);\r\n            this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == TableType.Master));// default will master\r\n            this.rcForm.controls['TableTypeId'].setValue(TableType.Master);\r\n            this.IsMasterSelected = true;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(async (data) => {\r\n            this.SourceRegionList = await (data);\r\n        });\r\n    }\r\n\r\n    private createForm() {\r\n        return this.fb.group({\r\n            AccessorialFeeId: new FormControl(''),\r\n            TableTypeId: new FormControl(),\r\n            TableName: new FormControl('', [Validators.required]),\r\n            TableTypes: new FormControl('', [Validators.required]),\r\n            Customers: new FormControl(''),\r\n            Carriers: new FormControl(''),\r\n            SourceRegions: new FormControl('', [Validators.required]),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            StartDate: new FormControl(\"\", [Validators.required]),\r\n            EndDate: new FormControl(\"\"),\r\n            StatusId: new FormControl(''),\r\n        })\r\n    }\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n\r\n    }\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.rcForm.get('Carriers').patchValue([]);\r\n        this.rcForm.get('Customers').patchValue([]);\r\n        this.rcForm.controls['TableTypeId'].setValue(item.Id);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]); //\"Carriers,Customers\"\r\n                break;\r\n            case 2: // customer\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                this.IsCustomerSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Customers')], [this.rcForm.get('Carriers')]);\r\n                break;\r\n            case 3: //carrier\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                this.IsCarrierSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers')], [this.rcForm.get('Customers')]);\r\n                break;\r\n        }\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n    \r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        var sr = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        this.IsSourceRegionSelected = sr.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await (data);\r\n        });\r\n    }\r\n\r\n    public SourceRegionChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n      \r\n        this.IsSourceRegionSelected = false\r\n        var ids = [];\r\n        \r\n        let selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions.length > 0) {\r\n            selectedSourceRegions.forEach(s => ids.push(s.Id));\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(ids.join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList);\r\n                this.IsSourceRegionSelected = true;\r\n            });\r\n        }\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n            });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        var selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.IsSourceRegionSelected = true;\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {             \r\n                this.TerminalsAndBulkPlantList = await (data);\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSubmit(status: any): void {\r\n        let accessorialFeeName = this.rcForm.get('TableName').value;\r\n        if (accessorialFeeName == null || accessorialFeeName == undefined || accessorialFeeName == \"\")\r\n        {\r\n            Declarations.msgerror(\" Table Name is required\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        let AccessorialDate = this.rcForm.get('StartDate').value;\r\n        if (AccessorialDate == null || AccessorialDate == undefined || AccessorialDate == \"\")\r\n        {\r\n            Declarations.msgerror(\" Date is required\", undefined, undefined);\r\n            return;\r\n\r\n        }\r\n\r\n        let feeModel = this.createPostObject(status);\r\n        if (feeModel.Status == FreightTableStatus.Draft && +this.rcForm.controls['StatusId'].value == FreightTableStatus.Published) {\r\n            if (this.rcForm.get('AccessorialFeeId').value != \"\") {\r\n                Declarations.msgerror(\"Not allowed. \" + this.rcForm.get('TableName').value + \" is in published mode.\", undefined, undefined);\r\n                this.IsLoading = false;\r\n                return;\r\n            }\r\n        }\r\n        else if (feeModel.Status == FreightTableStatus.Published) {\r\n            this.rcForm.markAllAsTouched();\r\n            if (this.rcForm.valid) {\r\n                let fees = this.rcForm.get('Fees').value as DropdownItem[];\r\n                if (fees == null || fees == undefined || fees.length == 0) {\r\n                    Declarations.msgerror(\"Please add Fee(s)\", undefined, undefined);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.rcForm.get('AccessorialFeeId').value != \"\") {\r\n            this.accesorialFeeService.updateAccessorialFee(feeModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \" edited\";\r\n                        if (feeModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(feeModel.Name + message + \" successfully.\", undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeViewType(2);\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        } else {\r\n            this.accesorialFeeService.createAccessorialFee(feeModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \"\";\r\n                        if (feeModel.Status == FreightTableStatus.Published) {\r\n                            message = \" created\"\r\n                        }\r\n                        else if (feeModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(feeModel.Name + message + \" successfully.\", undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeViewType(2);\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    public clearForm() {\r\n        this.rcForm.get('TableName').patchValue([]);\r\n        this.rcForm.get('TableTypes').patchValue([]);\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.rcForm.get('TerminalsAndBulkPlants').patchValue([]);\r\n        this.rcForm.get('StartDate').patchValue([]);\r\n        this.rcForm.get('EndDate').patchValue([]);\r\n        this.rcForm.controls['Fees'].reset();\r\n\r\n        this.disableInputControls = false;\r\n        this.dataService.removeFeesOnCreateNewSubject();\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.AccessorialFeeMode == \"VIEW\") {\r\n            this.disableInputControls = false;\r\n            this.AccessorialFeeId = null;\r\n        }\r\n       \r\n        if (this.AccessorialFeeMode == \"EDIT\") {\r\n            this.AccessorialFeeId = null;\r\n        }\r\n\r\n        if (this.AccessorialFeeId != null) {\r\n            this.changeToViewTab();\r\n        }\r\n        else {\r\n            this._document.defaultView.location.reload();\r\n        } \r\n    }\r\n\r\n    public changeToViewTab() {\r\n        this.accesorialFeeService.onSelectedTabChanged.next(1);\r\n\r\n    }\r\n\r\n    public removeValidators(form: FormGroup) {\r\n        for (const key in form.controls) {\r\n            if (key == 'TableName') {\r\n                continue;\r\n            }\r\n            else {\r\n                form.get(key).clearValidators();\r\n                form.get(key).updateValueAndValidity();\r\n            }            \r\n        }\r\n    }\r\n\r\n    public changeViewType(viewType: any): void {\r\n        this.onPageSubmit.emit(viewType);\r\n    }\r\n\r\n\r\n    public createPostObject(status: any): CreateAccessorialFeeModel {\r\n        let feeModel = new CreateAccessorialFeeModel();\r\n        feeModel.Id = this.rcForm.get('AccessorialFeeId').value;\r\n        feeModel.Name = this.rcForm.get('TableName').value;\r\n        feeModel.Status = status;\r\n        let selectedTerminalBulkplant = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n        if (selectedTerminalBulkplant != null && selectedTerminalBulkplant != undefined && selectedTerminalBulkplant.length > 0)\r\n        {\r\n            feeModel.TerminalsAndBulkPlants = this.rcForm.get('TerminalsAndBulkPlants').value;\r\n        }\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0)\r\n        {\r\n            selectedCustomers.forEach(t => feeModel.CustomerIds.push(t.Id));\r\n        }\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0)\r\n        {\r\n            selectedCarriers.forEach(t => feeModel.CarrierIds.push(t.Id));\r\n        }\r\n        let endDate = this.rcForm.get('EndDate').value;\r\n        let startDate = this.rcForm.get('StartDate').value;\r\n        if (endDate == \"\" || endDate == undefined || endDate == null)\r\n        {\r\n            endDate = null;\r\n        }\r\n        if (startDate == \"\" || startDate == undefined || startDate == null)\r\n        {\r\n            startDate = null;\r\n        }\r\n        feeModel.StartDate = startDate;\r\n        feeModel.EndDate = endDate;        \r\n        feeModel.Fees = this.rcForm.get('Fees').value;\r\n        let sourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (sourceRegions != null && sourceRegions != undefined && sourceRegions.length > 0) {\r\n            sourceRegions.forEach(t => feeModel.SourceRegionIds.push(t.Id));\r\n        }\r\n        let tableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        if (tableType != null && tableType != undefined && tableType.length > 0)\r\n        {\r\n            feeModel.TableType = tableType[0].Id;\r\n        }\r\n        feeModel.CountryId = this.SelectedCountryId;\r\n        \r\n        return feeModel;\r\n    }\r\n\r\n    public getBulkPlantTerminalIds(type: string): number[] {\r\n        let Ids = [];\r\n        if (type === 'Terminals') {\r\n            let selectedTerminalBulkplant = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n            let selectedTerminals = selectedTerminalBulkplant.filter(t => t.Code === 'Terminals');\r\n            if (selectedTerminals != null && selectedTerminals != undefined && selectedTerminals.length > 0) {\r\n                selectedTerminals.forEach(function (terminal) {\r\n                    let terminalId = parseInt(terminal.Id.replace(\"Terminals_\", \"\"));\r\n                    if (!isNaN(terminalId)) {\r\n                        Ids.push(terminalId);\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n        else if (type === 'BulkPlants') {\r\n            let selectedTerminalBulkplant = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n            let selectedBulkPlants = selectedTerminalBulkplant.filter(t => t.Code === 'BulkPlants');\r\n            if (selectedBulkPlants != null && selectedBulkPlants != undefined && selectedBulkPlants.length > 0) {\r\n                selectedBulkPlants.forEach(function (bulkplant) {\r\n                    let bulkplantId = parseInt(bulkplant.Id.replace(\"BulkPlants_\", \"\"));\r\n                    if (!isNaN(bulkplantId)) {\r\n                        Ids.push(bulkplantId);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return Ids;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.AccessorialFeeId != null && this.AccessorialFeeId != undefined) {\r\n            this.getAccessorialFee(this.AccessorialFeeId); //existing Accessorial Fee.\r\n        }\r\n    }\r\n\r\n    //GET\r\n    private getAccessorialFee(accessorialFeeId: number): void {\r\n        this.IsLoading = true;\r\n        this.IsLoaded = false;\r\n        let sorceRegionIds: string = \"\";\r\n        this.http.get(this.accesorialFeeService.getAccessorialFeeUrl + accessorialFeeId).pipe(\r\n            map(af => {\r\n                const afModel = af as CreateAccessorialFeeModel;\r\n                return afModel;\r\n            }),\r\n            mergeMap(afModel => {\r\n                this.Afmodel = afModel;\r\n                let companyIds: number[] = [];\r\n                if (this.AccessorialFeeId != null && this.AccessorialFeeMode.toUpperCase() == \"COPY\") { // on copy \r\n                    this.Afmodel.Id = null;\r\n                    this.Afmodel.Name = \"\";\r\n                }\r\n                const customers = this.http.get(this.fuelsurchargeService.getSupplierCustomersUrl);\r\n                const carriers = this.http.get(this.regionService.getCarriersUrl);\r\n\r\n                if (this.Afmodel.TableType == TableType.Customer && this.Afmodel.CustomerIds.length > 0) {\r\n                    this.Afmodel.CustomerIds.forEach(s => companyIds.push(s));\r\n                }\r\n                if (this.Afmodel.TableType == TableType.Carrier && this.Afmodel.CarrierIds.length > 0) {\r\n                    this.Afmodel.CarrierIds.forEach(s => companyIds.push(s));\r\n                }\r\n\r\n                var sourceRegionInput = new SourceRegionInputModel();\r\n                sourceRegionInput.TableType = this.Afmodel.TableType.toString();\r\n                sourceRegionInput.CustomerId = this.Afmodel.CustomerIds;\r\n                sourceRegionInput.CarrierId = this.Afmodel.CarrierIds;\r\n\r\n                const sourceRegions = this.http.post(this.fuelsurchargeService.getSourceRegionsUrl, sourceRegionInput);\r\n                const tableTypes = this.http.get(this.fuelsurchargeService.getTableTypesUrl);\r\n\r\n                if (this.Afmodel.SourceRegionIds != null && this.Afmodel.SourceRegionIds != undefined && this.Afmodel.SourceRegionIds.length > 0) {\r\n                    sorceRegionIds = this.Afmodel.SourceRegionIds.map(s => s).join(',');\r\n                    this.IsSourceRegionSelected = true;\r\n                }\r\n                const terminalAndBulkPlans = this.http.get(this.fuelsurchargeService.getTerminalsAndBulkPlantsUrl + sorceRegionIds)\r\n                return forkJoin([customers, carriers, sourceRegions, terminalAndBulkPlans, tableTypes]);\r\n            })).subscribe(result => {\r\n                this.IsLoading = false;\r\n                this.IsMasterSelected = false;\r\n                this.IsCustomerSelected = false;\r\n                this.IsCarrierSelected = false;\r\n\r\n                if (this.Afmodel.TableType == TableType.Master) {\r\n                    this.IsMasterSelected = true;\r\n                }\r\n                else if (this.Afmodel.TableType == TableType.Customer) {\r\n                    this.IsCustomerSelected = true;\r\n                }\r\n                else if (this.Afmodel.TableType == TableType.Carrier) {\r\n                    this.IsCarrierSelected = true;\r\n                }\r\n\r\n                if (this.Afmodel.TableType != TableType.Master) {\r\n                    this.CustomerList = result[0] as DropdownItem[];\r\n                    this.CarrierList = result[1] as DropdownItem[];\r\n                }\r\n\r\n                this.SourceRegionList = result[2] as DropdownItem[];\r\n                if (this.Afmodel.TerminalsAndBulkPlants != null && this.Afmodel.TerminalsAndBulkPlants != undefined && this.Afmodel.TerminalsAndBulkPlants.length > 0) {\r\n                    this.TerminalsAndBulkPlantList = result[3] as DropdownItemExt[];\r\n                }\r\n                this.TableTypeList = result[4] as DropdownItem[];\r\n                this.Edit(this.Afmodel);\r\n\r\n            });\r\n    }\r\n\r\n    //Edit\r\n    private Edit(_af: CreateAccessorialFeeModel) {\r\n      if (this.rcForm) {\r\n\r\n            if (this.AccessorialFeeMode != \"COPY\") {\r\n                this.rcForm.controls['AccessorialFeeId'].setValue(_af.Id);\r\n                this.rcForm.controls['TableTypes'].setValue(_af.TableType);\r\n                this.rcForm.controls['TableName'].setValue(_af.Name);\r\n                this.IsEditable = false;\r\n            } else {\r\n                this.AccessorialFeeId = null;\r\n            }\r\n           \r\n          this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == _af.TableType));\r\n\r\n            if (_af.TableType != TableType.Master) this.IsMasterSelected = false;\r\n\r\n            if (_af.CustomerIds != null && _af.CustomerIds != undefined && _af.CustomerIds.length > 0) {\r\n                if (this.CustomerList.length > 0 && _af.CustomerIds.length > 0) this.rcForm.controls['Customers'].setValue(this.CustomerList.filter(this.IdInComparer(_af.CustomerIds)));\r\n            }\r\n\r\n            if (_af.CarrierIds != null && _af.CarrierIds != undefined && _af.CarrierIds.length > 0) {\r\n                if (this.CarrierList.length > 0 && _af.CarrierIds.length > 0) this.rcForm.controls['Carriers'].setValue(this.CarrierList.filter(this.IdInComparer(_af.CarrierIds)));\r\n            }\r\n\r\n            if (this.SourceRegionList != null && this.SourceRegionList != undefined && _af.SourceRegionIds != null && _af.SourceRegionIds != undefined && _af.SourceRegionIds.length > 0) {\r\n                if (this.SourceRegionList.length > 0 && _af.SourceRegionIds.length > 0)\r\n                    this.rcForm.controls['SourceRegions'].setValue(this.SourceRegionList.filter(this.IdInComparer(_af.SourceRegionIds)));\r\n            }\r\n            if (this.TerminalsAndBulkPlantList != null && this.TerminalsAndBulkPlantList != undefined && _af.TerminalsAndBulkPlants != null && _af.TerminalsAndBulkPlants != undefined && _af.TerminalsAndBulkPlants.length > 0) {\r\n                if (this.TerminalsAndBulkPlantList.length > 0 && _af.TerminalsAndBulkPlants.length > 0) {\r\n                    this.rcForm.controls['TerminalsAndBulkPlants'].setValue(this.TerminalsAndBulkPlantList.filter(this.ComparerWithId(_af.TerminalsAndBulkPlants)));\r\n                }\r\n            }\r\n\r\n            this.rcForm.get('StartDate').setValue(moment(_af.StartDate).format('MM/DD/YYYY'));\r\n\r\n            if (_af.EndDate != null && _af.EndDate != undefined) {\r\n                this.rcForm.get('EndDate').setValue(moment(_af.EndDate).format('MM/DD/YYYY'));\r\n            }\r\n\r\n            this.Fees = _af.Fees;\r\n            \r\n            this.rcForm.controls['StatusId'].setValue(_af.Status);\r\n            this.IsLoading = false;\r\n            this.IsLoaded = true;\r\n        }\r\n\r\n        if (this.AccessorialFeeMode == \"VIEW\") {\r\n            this.disableInputControls = true;\r\n        }\r\n    }\r\n\r\n    private IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n              \r\n                return other == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n\r\n    private ComparerWithId(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                //console.log(other + \" : \" + current.Id);\r\n                return other.Id == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n}\r\n","<form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit(2)\">\r\n\r\n    <div>\r\n        <div *ngIf=\"AccessorialFeeMode!='CREATE'\">\r\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm()\"><i class=\"fa fa-plus-circle\"></i>Create New</button>\r\n        </div>\r\n        <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n            <div class=\"well bg-white\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Table Name <span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"TableName\" class=\"form-control\" />\r\n                        <div *ngIf=\"rcForm.get('TableName').invalid && rcForm.get('TableName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('TableName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TableTypes\">Table Type <span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                     class=\"single-select\"\r\n                                                     id=\"TableTypes\"\r\n                                                     [settings]=\"SingleSelectSettingsById\"\r\n                                                     [data]=\"TableTypeList\"\r\n                                                     [placeholder]=\"'Select Type'\"\r\n                                                     (onSelect)=\"onTableTypeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('TableTypes').invalid && rcForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('TableTypes').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Customers\">Select Customer(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                         id=\"Customers\"\r\n                                                         [settings]=\"MultiSelectSettingsById\"\r\n                                                         [data]=\"CustomerList\"\r\n                                                         (onSelect)=\"onCustomersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCustomersDeSelect($event)\"\r\n                                                         [placeholder]=\"'Select Customers'\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"IsCustomerSelected && rcForm.get('Customers').invalid && rcForm.get('Customers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Customers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Carriers\">Select Carrier(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                         id=\"Carriers\"\r\n                                                         [settings]=\"MultiSelectSettingsById\"\r\n                                                         [data]=\"CarrierList\"\r\n                                                         (onSelect)=\"onCarriersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCarriersDeSelect($event)\"\r\n                                                         [placeholder]=\"'Select Carriers'\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"IsCarrierSelected && rcForm.get('Carriers').invalid && rcForm.get('Carriers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Carriers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"SourceRegions\">Select Source Region(s)<span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                     id=\"SourceRegions\"\r\n                                                     [settings]=\"MultiSelectSettingsById\"\r\n                                                     [data]=\"SourceRegionList\"\r\n                                                     [placeholder]=\"'Select Source Regions'\"\r\n                                                     (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('SourceRegions').invalid && rcForm.get('SourceRegions').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('SourceRegions').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsSourceRegionSelected}\">\r\n                                <label for=\"TerminalsAndBulkPlants\">Select Terminal(s)/BulkPlant(s)</label>\r\n                                <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                      [data]=\"TerminalsAndBulkPlantList\"\r\n                                                      formControlName=\"TerminalsAndBulkPlants\"\r\n                                                      [settings]=\"MultiSelectSettingsByGroup\">\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Effective Start Date <span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\"\r\n                               placeholder=\"Effective Start Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                               [maxDate]=\"maxDate\"\r\n                               (onDateChange)=\"rcForm.get('StartDate').setValue($event)\" />\r\n                        <div *ngIf=\"rcForm.get('StartDate').invalid && rcForm.get('StartDate').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('StartDate').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Effective End Date </label>\r\n                        <input type=\"text\" formControlName=\"EndDate\" class=\"form-control datepicker\"\r\n                               placeholder=\"Effective End Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                               [minDate]=\"minDate\" [maxDate]=\"maxDate\"\r\n                               (onDateChange)=\"rcForm.get('EndDate').setValue($event)\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <app-fee-list [Parent]=\"rcForm\" [CountryId]=\"SelectedCountryId\" [Fees]=\"Fees\"></app-fee-list>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"text-right \">\r\n                <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n                <input type=\"button\" class=\"btn btn-lg btn-light\" [disabled]=\"disableInputControls ? true : null\" value=\"Draft\" (click)=\"onSubmit(1)\">\r\n                <input type=\"button\" class=\"btn btn-lg btn-primary\" [disabled]=\"disableInputControls ? true : null\" value=\"Submit\" (click)=\"onSubmit(2)\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading</div>\r\n    </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { AccessorialFeesService } from '../service/accessorialfees.service';\r\n@Component({\r\n    selector: 'app-master',\r\n    templateUrl: './master.component.html',\r\n    styleUrls: ['./master.component.css']\r\n})\r\nexport class MasterComponent implements OnInit, AfterViewInit {\r\n    viewType = 0\r\n    constructor(private accessorialFeeService: AccessorialFeesService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        let _viewType = localStorage.getItem(\"fuelSurchargeTabId\");\r\n        if (_viewType && +_viewType > 0) {\r\n            this.viewType = +_viewType;\r\n        }\r\n\r\n        this.accessorialFeeService.onSelectedTabChanged.subscribe(s => {\r\n            if (s == 2) {\r\n                this.viewType = 2;\r\n\r\n            }\r\n            else {\r\n                this.viewType = 1;\r\n            }\r\n        })\r\n        this.viewType = +_viewType;\r\n\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        this.changeViewType(this.viewType)\r\n    }\r\n\r\n    public changeViewType(value: number) {\r\n\r\n        localStorage.setItem(\"fuelSurchargeTabId\", value.toString());\r\n\r\n        this.viewType = value;\r\n        this.accessorialFeeService.onSelectedAccessorialFeeId.next(null);\r\n        this.accessorialFeeService.onSelectedTabChanged.next(value);   \r\n    }\r\n    public onCreateFees(viewType) {\r\n        this.changeViewType(viewType);\r\n    }\r\n}\r\n","        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block border bg-white p-1 radius-capsule shadow-b mb-2\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Create Accessorial Fees</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">View Accessorial Fees</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-create-accessorial-fees *ngIf=\"viewType==1\" (onPageSubmit)=\"onCreateFees($event)\"></app-create-accessorial-fees>\r\n\r\n                <app-view-accessorial-fees *ngIf=\"viewType==2\"></app-view-accessorial-fees>\r\n            </div>\r\n        </div>\r\n","import { FreightTableStatus, TableType } from 'src/app/app.enum';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FeeModel } from '../../invoice/models/DropDetail';\r\n\r\nexport class ViewAccessorialFeeModel {\r\n    AccessorialFeeId?: number;\r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];\r\n    Carriers: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n}\r\n\r\nexport class AccessorialFeeInputModel {\r\n    public TableTypeIds: string;\r\n    public CustomerIds: string;\r\n    public CarrierIds: string;\r\n    public SourceRegionIds: string;\r\n    public TerminalIds: string;\r\n    public BulkPlantIds: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public IsArchived: boolean;\r\n}\r\n\r\nexport class AccessorialFeeGridModel {\r\n    public Id: number;\r\n    public DateRange: string;\r\n    public TableType: string;\r\n    public TableName: number;\r\n    public Customer: string;\r\n    public Carrier: string;\r\n    public SourceRegion: string;\r\n    public Terminal: string;\r\n    public BulkPlant: string;\r\n    public StatusName: string;\r\n    public IsArchived: boolean;\r\n     // For UI Dropdown\r\n    public IsShowMore : boolean;\r\n}\r\n\r\nexport class CreateAccessorialFeeModel\r\n{\r\n    constructor() {\r\n        this.CustomerIds = [];\r\n        this.CarrierIds = [];\r\n        this.SourceRegionIds = [];\r\n        this.Fees = [];\r\n    }\r\n    public Id?: number;\r\n    public Name: string;\r\n    public Status: FreightTableStatus;\r\n    public StartDate: Date;\r\n    public EndDate: Date;\r\n    public TableType :TableType\r\n    public CustomerIds: number[] = [];\r\n    public CarrierIds: number[] = [];\r\n    public SourceRegionIds: number[] = [];\r\n    public TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    public Fees: FeeModel[] = [];\r\n    public CountryId: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AccessorialFeesService extends HandleError {\r\n    public onSelectedTabChanged: BehaviorSubject<any>;\r\n    public onSelectedAccessorialFeeId: BehaviorSubject<any>;\r\n\r\n    public archiveAccessorialFeeUrl = '/AccessorialFees/ArchiveAccessorialFee';\r\n    public getViewAccessorialFeeSummaryUrl = '/AccessorialFees/GetViewAccessorialFeeSummary';\r\n    public getAccessorialFeeUrl = '/AccessorialFees/GetAccessorialFee?accessorialFeeId=';\r\n    public postCreateAccesorialFeesUrl = '/AccessorialFees/CreateAccessorialFee'\r\n    public postUpdateAccesorialFeesUrl = '/AccessorialFees/UpdateAccessorialFee'\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onSelectedTabChanged = new BehaviorSubject(1);\r\n        this.onSelectedAccessorialFeeId = new BehaviorSubject(null);\r\n    }\r\n\r\n    getAccessorialFeeGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.getViewAccessorialFeeSummaryUrl, filter)\r\n            .pipe(catchError(this.handleError<any>('getAccessorialFeeGridDetails', null)));\r\n    }\r\n\r\n    archiveAccessorialFee(accessorialFeeId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.archiveAccessorialFeeUrl, { accessorialFeeId: accessorialFeeId })\r\n            .pipe(catchError(this.handleError<any>('archiveAccessorialFee', null)));\r\n    }\r\n\r\n    createAccessorialFee(accessorialFeeModel: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postCreateAccesorialFeesUrl, { model: accessorialFeeModel })\r\n            .pipe(catchError(this.handleError<any>('createAccessorialFee', null)));\r\n    }\r\n\r\n    updateAccessorialFee(accessorialFeeModel: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postUpdateAccesorialFeesUrl, { model: accessorialFeeModel })\r\n            .pipe(catchError(this.handleError<any>('updateAccessorialFee', null)));\r\n    }\r\n\r\n    getAccessorialFee(accessorialFeeId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAccessorialFeeUrl + accessorialFeeId)\r\n            .pipe(catchError(this.handleError<any>('getAccessorialFee', null)));\r\n    }\r\n}","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { AccessorialFeesService } from '../service/accessorialfees.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\r\nimport { ViewAccessorialFeeModel, AccessorialFeeInputModel, AccessorialFeeGridModel } from '../model/accessorial-fees';\r\nimport { ViewFeesDetailsComponent } from './view-fees-details/view-fees-details.component';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n    selector: 'app-view-accessorial-fees',\r\n    templateUrl: './view-accessorial-fees.component.html',\r\n    styleUrls: ['./view-accessorial-fees.component.css']\r\n})\r\nexport class ViewAccessorialFeesComponent implements OnInit {\r\n\r\n    public IsLoading: boolean = false;\r\n    public viewAccessorialFeeForm: FormGroup;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public SinlgeselectSettingsById = {};\r\n    public MultiselectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n    public CounrtyId: any;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    public Afmodel: ViewAccessorialFeeModel;\r\n    public AccessorialFeeList: AccessorialFeeGridModel[] = [];\r\n    public AccessorialFeeInput: AccessorialFeeInputModel;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    constructor(private fb: FormBuilder, private regionService: RegionService, private fuelsurchargeService: FuelSurchargeService,\r\n        private accessorialFeeService: AccessorialFeesService,private cdr : ChangeDetectorRef) {\r\n    }\r\n\r\n    minDate = new Date();\r\n    maxDate = new Date();\r\n    public popoverTitle: string = 'Archive Confirmation';\r\n    public popoverMessage: string = 'Do you want to archive?';\r\n    public cancelClicked: boolean = false;\r\n    public confirmClicked: boolean = false;\r\n    @ViewChild(ViewFeesDetailsComponent) accessorialFeeComponent: ViewFeesDetailsComponent;\r\n    ngOnInit() {\r\n        \r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.minDate.setFullYear(this.minDate.getFullYear() - 20);\r\n        this.CounrtyId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SinlgeselectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.getTableTypes();\r\n        this.viewAccessorialFeeForm = this.createForm();\r\n        this.initializeAccessorialFeeDatatableGrid();\r\n       \r\n    }\r\n    ngOnDestroy() {\r\n        this.rerender_destroy();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.getAccessorialFeeGridDetails();\r\n    }\r\n    private createForm() {\r\n        if (this.Afmodel == undefined || this.Afmodel == null) {\r\n            this.Afmodel = new ViewAccessorialFeeModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            TableTypes: new FormControl(this.Afmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Afmodel.Customers),\r\n            Carriers: new FormControl(this.Afmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Afmodel.SourceRegions),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            fromDate: [''],\r\n            toDate: [''],\r\n            isArchived: false\r\n        });\r\n    }\r\n\r\n    archiveAccessorialFee(accessorialFeeId: number) {\r\n        this.IsLoading = true;\r\n        this.accessorialFeeService.archiveAccessorialFee(accessorialFeeId)\r\n            .subscribe((response: any) => {\r\n                this.IsLoading = false;\r\n                //this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Selected accessorial fee archived successfully', undefined, undefined);\r\n                    this.filterGrid();\r\n                }\r\n            });\r\n    }\r\n   \r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.viewAccessorialFeeForm.get('Carriers').patchValue([]);\r\n        this.viewAccessorialFeeForm.get('Customers').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                break;\r\n            case 2: // customer\r\n                this.IsCustomerSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n            case 3: //carrier\r\n                this.IsCarrierSelected = true;\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                break;\r\n        }\r\n        this.viewAccessorialFeeForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.viewAccessorialFeeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.viewAccessorialFeeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.viewAccessorialFeeForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.SourceRegionList = null;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {\r\n        this.IsLoading = true;\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.viewAccessorialFeeForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.viewAccessorialFeeForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(data => {\r\n            this.SourceRegionList = data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.viewAccessorialFeeForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        this.IsSourceRegionSelected = this.Afmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    public onSourceRegionsSelect(item: any): void {\r\n        this.getTerminalsBulkPlant();\r\n        this.IsSourceRegionSelected = this.Afmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n        $(\"#accessorial-fee-grid-datatable\").DataTable().clear().destroy();\r\n        this.getAccessorialFeeGridDetails();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getAccessorialFeeGridDetails();\r\n    }\r\n    \r\n    clearForm() {\r\n        this.viewAccessorialFeeForm.reset();\r\n        $(\"#accessorial-fee-grid-datatable\").DataTable().clear().destroy();\r\n        this.CustomerList = [];\r\n        this.CarrierList = [];\r\n        this.SourceRegionList = [];\r\n    }\r\n    \r\n    getAccessorialFeeGridDetails() {\r\n        this.cdr.detectChanges()\r\n        var input = new AccessorialFeeInputModel();\r\n\r\n        var selectedTableTypes = this.viewAccessorialFeeForm.get('TableTypes').value as DropdownItem[];\r\n        var selectedCustomers = this.viewAccessorialFeeForm.get('Customers').value as DropdownItem[];\r\n        var selectedCarriers = this.viewAccessorialFeeForm.get('Carriers').value as DropdownItem[];\r\n        var selectedSourceRegions = this.viewAccessorialFeeForm.get('SourceRegions').value as DropdownItem[];\r\n        var selectedTerminalAndBulkPlants = this.viewAccessorialFeeForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n\r\n        input.StartDate = this.viewAccessorialFeeForm.controls.fromDate.value;\r\n        input.EndDate = this.viewAccessorialFeeForm.controls.toDate.value;\r\n        input.IsArchived = this.viewAccessorialFeeForm.controls.isArchived.value;\r\n\r\n        if (selectedTableTypes != null && selectedTableTypes != undefined && selectedTableTypes.length > 0) {\r\n            var tableTypeIds = selectedTableTypes.map(s => s.Id);\r\n            input.TableTypeIds = tableTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            var customerIds = selectedCustomers.map(s => s.Id);\r\n            input.CustomerIds = customerIds.join(',');\r\n        }\r\n\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            var carrierIds = selectedCarriers.map(s => s.Id);\r\n            input.CarrierIds = carrierIds.join(',');\r\n        }\r\n\r\n        if (selectedSourceRegions != null && selectedSourceRegions != undefined && selectedSourceRegions.length > 0) {\r\n            var sourceRegionIds = selectedSourceRegions.map(s => s.Id);\r\n            input.SourceRegionIds = sourceRegionIds.join(',');\r\n        }\r\n\r\n        if (selectedTerminalAndBulkPlants != null && selectedTerminalAndBulkPlants != undefined && selectedTerminalAndBulkPlants.length > 0) {\r\n            var selectedTerminalIds = selectedTerminalAndBulkPlants.filter(c => c.Code == \"Terminals\");\r\n            var terminalIds = selectedTerminalIds.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n\r\n            var selectedBulkPlants = selectedTerminalAndBulkPlants.filter(c => c.Code == \"BulkPlants\");\r\n            var bulkPlantIds = selectedBulkPlants.map(s => s.Id);\r\n            input.BulkPlantIds = bulkPlantIds.join(',');\r\n        }\r\n        this.IsLoading = true;\r\n        this.accessorialFeeService.getAccessorialFeeGridDetails(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if(data && data.length>0){\r\n                this.AccessorialFeeList = data as AccessorialFeeGridModel[];\r\n            }\r\n            this.dtTrigger.next();\r\n        });\r\n    }\r\n   \r\n    rerender_destroy(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n            });\r\n        }\r\n    }\r\n      rerender_trigger(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                this.dtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    public viewAccessorialFee(accessorialFeeId: number, mode: string) {\r\n        let operation = { AccessorialFeeId: accessorialFeeId, Mode: mode };\r\n        this.accessorialFeeService.onSelectedAccessorialFeeId.next(JSON.stringify(operation));\r\n        this.accessorialFeeService.onSelectedTabChanged.next(1);\r\n    }\r\n\r\n    setfromDate($event) {\r\n        this.viewAccessorialFeeForm.controls.fromDate.setValue($event);\r\n    }\r\n\r\n    settoDate($event) {\r\n        this.viewAccessorialFeeForm.controls.toDate.setValue($event);\r\n    }\r\n\r\n    initializeAccessorialFeeDatatableGrid() {\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Accessorial Fee', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Accessorial Fee', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n       \r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"viewAccessorialFeeForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-left\">\r\n            <a class=\"fs16 mr10 filter-link pa\" [ngbPopover]=\"popContent\" placement=\"bottom\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-accessorial-fee-grid\" class=\"table-responsive\">\r\n                                <table id=\"accessorial-fee-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                         \r\n                                            <th data-key=\"DateRange\">Date Range</th>\r\n                                            <th data-key=\"TableType\">Table Type</th>\r\n                                            <th data-key=\"TableName\">Table Name</th>\r\n                                            <th data-key=\"StatusName\">Status</th>\r\n                                            <th data-key=\"Customer\">Customer(s)</th>\r\n                                            <th data-key=\"Carrier\">Carrier(s)</th>\r\n                                            <th data-key=\"SourceRegion\">Source Region(s)</th>\r\n                                            <th data-key=\"Terminal\">Terminal(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Bulk Plant(s)</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let fee of AccessorialFeeList, let i = index\">\r\n \r\n                                            <td class=\"text-center\">{{fee.DateRange}}</td>\r\n                                            <td>{{fee.TableType}}</td>\r\n                                            <td>{{fee.TableName}}</td>\r\n                                            <td>{{fee.StatusName}}</td>\r\n                                            <td>{{fee.Customer}}</td>\r\n                                            <td>{{fee.Carrier}}</td>\r\n                                            <td>{{fee.SourceRegion}}</td>\r\n                                            <td *ngIf=\"fee.Terminal.length>40\">\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': fee.IsShowMore}\">{{fee.Terminal}}</div>\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': !fee.IsShowMore}\" *ngIf=\"(fee.Terminal.length>40)\">{{fee.Terminal | slice :0:40}}...</div>\r\n                                                <a (click)=\"fee.IsShowMore = !fee.IsShowMore\">View More/Less</a>\r\n                                            </td>\r\n                                            <td *ngIf=\"fee.Terminal.length<=40\">{{fee.Terminal}}</td>\r\n                                            <td>{{fee.BulkPlant}}</td>\r\n                                            <td class=\"text-center text-nowrap\">\r\n                                                <a *ngIf=\"!fee.IsArchived\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                                   [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                                   (cancel)=\"cancelClicked = true\" (confirm)=\"archiveAccessorialFee(fee.Id)\"><i class=\"fa fa-trash-alt color-maroon \" placement=\"bottom\" ngbTooltip=\"Archive\"></i></a>\r\n\r\n                                                <a *ngIf=\"!fee.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewAccessorialFee(fee.Id,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\"><i class=\"fas fa-edit\"></i></a>\r\n\r\n                                                <a class=\"btn btn-link fs16 ml-0\" (click)=\"viewAccessorialFee(fee.Id,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">\r\n                                                    <i class=\"fas fa-street-view\"></i>\r\n                                                </a>\r\n\r\n                                                <a *ngIf=\"!fee.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewAccessorialFee(fee.Id,'COPY');\" placement=\"bottom\" ngbTooltip=\"Copy\"><i class=\"fas fa-copy\"></i></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"fee-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Fee Details</h3>\r\n            </div>\r\n            <div>\r\n                <app-view-fees-details></app-view-fees-details>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #popContent>\r\n        <div class=\"popover-details\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TableTypes\">Table Type</label>\r\n                        <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                 id=\"TableTypes\"\r\n                                                 [settings]=\"SinlgeselectSettingsById\"\r\n                                                 [data]=\"TableTypeList\"\r\n                                                 [placeholder]=\"'Select Type (Required)'\"\r\n                                                 (onSelect)=\"onTableTypeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"viewAccessorialFeeForm.get('TableTypes').invalid && viewAccessorialFeeForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"viewAccessorialFeeForm.get('TableTypes').errors.required\">\r\n                                Table Type is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customers\">Customer(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     id=\"Customers\"\r\n                                                     [settings]=\"MultiselectSettingsById\"\r\n                                                     [data]=\"CustomerList\"\r\n                                                     [placeholder]=\"'Select Customers'\"\r\n                                                     (onSelect)=\"onCustomersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCustomersDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Carriers\">Carrier(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                     id=\"Carriers\"\r\n                                                     [settings]=\"MultiselectSettingsById\"\r\n                                                     [data]=\"CarrierList\"\r\n                                                     [placeholder]=\"'Select Carriers'\"\r\n                                                     (onSelect)=\"onCarriersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCarriersDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"SourceRegions\">Source Region(s)</label>\r\n                        <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                 id=\"SourceRegions\"\r\n                                                 [data]=\"SourceRegionList\"\r\n                                                 [settings]=\"MultiselectSettingsById\"\r\n                                                 [placeholder]=\"'Select Source Regions'\"\r\n                                                 (onSelect)=\"onSourceRegionsSelect($event)\"\r\n                                                 (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                 (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\">\r\n                        </ng-multiselect-dropdown>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                        <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                              [data]=\"TerminalsAndBulkPlantList\"\r\n                                              formControlName=\"TerminalsAndBulkPlants\"\r\n                                              [settings]=\"MultiSelectSettingsByGroup\">\r\n                        </angular2-multiselect>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>From</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"fromDate\"\r\n                               (onDateChange)=\"setfromDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>To</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"toDate\" [minDate]=\"minDate\"\r\n                               [maxDate]=\"maxDate\" (onDateChange)=\"settoDate($event);\" class=\"form-control datepicker\"\r\n                               myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-6 form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" formControlName=\"isArchived\" type=\"checkbox\" value=\"\" id=\"ckb-isArchived\">\r\n                        <label class=\"form-check-label\" for=\"ckb-isArchived\">\r\n                            Show Archived\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6 text-right form-buttons mt20\">\r\n                    <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                    <button id=\"filter-accessorial-fee-grid\" type=\"button\" class=\"btn btn-lg btn-primary mt3 valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid();p.close()\">Apply</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </ng-template>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { AccessorialFeesService } from '../../service/accessorialfees.service';\r\n//import { FeesDetailModel, AccessorialFuelFeeModel } from '../../model/accessorial-fees';\r\n\n@Component({\n    selector: 'app-view-fees-details',\n    templateUrl: './view-fees-details.component.html',\n    styleUrls: ['./view-fees-details.component.css']\n})\nexport class ViewFeesDetailsComponent implements OnInit {\n\n    constructor(private fb: FormBuilder, private accessorialFeeService: AccessorialFeesService) { }\n    //public AccessorialFuelFee: AccessorialFuelFeeModel;\n    //public FeesDetailList: FeesDetailModel[]\n    ngOnInit() {\n    }\n\n    getAccessorialFeesDetails(accessorialFeeId: number) {\r\n        //this.accessorialFeeService.getAccessorialFee(accessorialFeeId).subscribe(data => {\r\n        //    this.AccessorialFuelFee = data as AccessorialFuelFeeModel;\r\n        //    this.FeesDetailList = this.AccessorialFuelFee.FuelFees;\r\n        //});\r\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, ObservableLike } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HandleError } from '../../errors/HandleError';\r\nimport { DropdownItem, DropdownItemExt, FeeSubType } from '../../statelist.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeeService extends HandleError {\r\n\r\n    private getFeeTypesUrl = '/Supplier/Invoice/GetFeeTypes?orderId=';\r\n    private getFeeSubTypesUrl = '/Supplier/Invoice/GetFeeSubTypes?orderId=';\r\n    private getFeeConstraintTypesUrl = '/Supplier/Invoice/GetFeeConstraintTypes';\r\n    private getEiaPriceUrl = '/Supplier/Invoice/GetEIAPrice';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getFeeTypes(orderId: number, isFromAccesorialFees?: boolean): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getFeeTypesUrl + orderId + '&isFromAccesorialFees=' + isFromAccesorialFees)\r\n            .pipe(catchError(this.handleError<DropdownItemExt[]>('getFeeTypes', [])));\r\n    }\r\n\r\n    getFeeSubTypes(orderId: number): Observable<FeeSubType[]> {\r\n        return this.httpClient.get<FeeSubType[]>(this.getFeeSubTypesUrl + orderId)\r\n            .pipe(catchError(this.handleError<FeeSubType[]>('getFeeSubTypes', [])));\r\n    }\r\n\r\n    getFeeConstraintTypes(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getFeeConstraintTypesUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getFeeConstraintTypes', [])));\r\n    }\r\n\r\n    getEiaPrice(data: any): Observable<any> {\r\n        return this.httpClient.post(this.getEiaPriceUrl, data)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getEiaPrice', [])));\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}