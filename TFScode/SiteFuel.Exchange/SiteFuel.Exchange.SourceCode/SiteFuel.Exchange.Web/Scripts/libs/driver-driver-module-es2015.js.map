{"version":3,"sources":["./src/app/driver/create-driver-schedule/create-driver-schedule.component.ts","./src/app/driver/create-driver-schedule/create-driver-schedule.component.html","./src/app/driver/create-region-schedule/create-region.component.ts","./src/app/driver/create-region-schedule/create-region.component.html","./src/app/driver/create-trailer-schedule/create-trailer-schedule.component.ts","./src/app/driver/create-trailer-schedule/create-trailer-schedule.component.html","./src/app/driver/driver-management/create-driver/create-driver.component.ts","./src/app/driver/driver-management/create-driver/create-driver.component.html","./src/app/driver/driver-management/driver-management.component.ts","./src/app/driver/driver-management/driver-management.component.html","./src/app/driver/driver-management/view-driver/view-driver.component.ts","./src/app/driver/driver-management/view-driver/view-driver.component.html","./src/app/driver/driver-routing.module.ts","./src/app/driver/driver-schedule-calender/driver-schedule-calender.component.ts","./src/app/driver/driver-schedule-calender/driver-schedule-calender.component.html","./src/app/driver/driver.module.ts","./src/app/driver/driver/driver.component.ts","./src/app/driver/driver/driver.component.html","./src/app/driver/models/DriverManagementModel.ts","./src/app/driver/models/DriverSchedule.ts","./src/app/driver/models/TrailerSchedule.ts","./src/app/driver/models/regionSchedule.ts","./src/app/driver/services/driver.service.ts"],"names":[],"mappings":"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","file":"driver-driver-module-es2015.js","sourcesContent":["import { Component, OnInit, Input, ViewChild, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { RegionService } from '../../company-addresses/region/service/region.service';\nimport { DropdownItem } from '../../statelist.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { FormGroup, FormBuilder, Validators, NgForm } from '@angular/forms';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DriverScheduleMapping } from 'src/app/driver/models/DriverSchedule';\nimport * as moment from 'moment';\nimport { RegionModel } from '../../company-addresses/region/model/region';\n@Component({\n    selector: 'create-driver-schedule',\n    templateUrl: './create-driver-schedule.component.html',\n    styleUrls: ['./create-driver-schedule.component.css']\n})\nexport class CreateDriverScheduleComponent implements OnInit {\n    //@ViewChild('DriverScheduleForm') public form: NgForm;\n    @Output() OnScheduleAdded = new EventEmitter();\n    DriverList = [];\n    public regionList = [];\n    DriverScheduleForm: FormGroup;\n    isLoading = false;\n    //sidebar variables\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 1;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n    SelectedShiftList = [];\n    ShiftList = [];\n    SelectedScheduleDriverList = [];\n    RepeatList = [];\n    DateList = [];\n    //end\n    public multiselectShiftSettingsById: IDropdownSettings;\n    public multiselectRepeatSettingsById: IDropdownSettings;\n    public multiselectDateSettingsById: IDropdownSettings;\n    public multiselectDriverSettingsById: IDropdownSettings;\n\n    //min max date\n    MinStartDate = new Date();\n    MaxStartDate = new Date();\n\n    //end\n    constructor(public regionService: RegionService, private _fb: FormBuilder) { }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    ngAfterViewInit(): void {\n        this.isLoading = false;\n    }\n\n    \n\n   \n\n\n    init() {\n        this.getRegions();\n        this.createScheduleForm();\n        \n        this.MaxStartDate.setMonth(this.MaxStartDate.getMonth() + 2);\n        // this.getDrivers();\n        //  this.getShifts();\n       \n        // this.getDateList();\n        this.multiselectDriverSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n        this.multiselectShiftSettingsById = {\n            singleSelection: true,\n            idField: 'Code',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n\n        this.multiselectRepeatSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n        this.multiselectDateSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: true\n        }\n    }\n\n\n\n    private createScheduleForm(): void {\n        this.DriverScheduleForm = this._fb.group({\n            id: [''],\n            shiftId: ['', Validators.required],\n            regionId: ['', Validators.required],\n            type: ['1', Validators.required],\n            driverId: ['', Validators.required],\n            fromDate: ['', Validators.required],\n            toDate: ['', Validators.required],\n            repeat: [1],\n            customDates: [[]],\n\n        });\n        var dt = moment(new Date()).toDate();\n        //alert(moment(dt).format('MM/DD/YYYY'));\n        this.DriverScheduleForm.controls.fromDate.setValue(moment(dt).format('MM/DD/YYYY'));\n    }\n\n\n  \n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n\n\n    private getRegions(): void {\n        this.regionService.getRegions()\n            .subscribe((region: RegionModel) => {\n                this.getRegionDropDwn(region.Regions);\n            });\n    }\n\n    public onRegionSelect($event) {\n        var region = this.regionList.find(f => f.Id == $event.Id);\n        this.DriverScheduleForm.controls.driverId.setValue('');\n        this.DriverScheduleForm.controls.shiftId.setValue('');\n        let tDate = new Date()\n        this.DriverScheduleForm.controls.fromDate.setValue(moment(tDate).format('MM/DD/YYYY'));\n        this.setFromDate(moment(tDate).format('MM/DD/YYYY'));\n        this.DriverList = region.Drivers;\n        this.ShiftList = region.Shifts.map(res => { return { Id: res.Id, Name: `${res.StartTime} - ${res.EndTime}` } });\n    }\n\n    public onRegionDeSelect($event) {\n        this.DriverList = [];\n        this.DriverScheduleForm.controls.driverId.setValue('');\n        this.ShiftList = [];\n        this.DriverScheduleForm.controls.shiftId.setValue('');\n    }\n\n    private getRegionDropDwn(regionList): void {\n        this.regionList = regionList;\n\n    }\n\n   \n\n\n    isInvalid(name: string): boolean {\n        var result = this.DriverScheduleForm.get(name).invalid && (this.DriverScheduleForm.get(name).dirty || this.DriverScheduleForm.get(name).touched)\n        return result;\n    }\n\n    isRequired(name: string): boolean {\n        return this.DriverScheduleForm.get(name).errors.required;\n    }\n    setFromDate(event: any): void {\n        this.DriverScheduleForm.controls.fromDate.setValue(event);\n\n        //let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 2))).toDate();\n        !this.DriverScheduleForm.controls.toDate.value ? this.DriverScheduleForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\n        if (this.DriverScheduleForm.controls.fromDate.value != '' && this.DriverScheduleForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.DriverScheduleForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.DriverScheduleForm.controls.toDate.value).toDate();\n            if (_toDate < _fromDate) {\n                this.DriverScheduleForm.controls.toDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n         this.validateShiftForDriver(false);\n    }\n\n    async  setToDate(event: any) {\n        this.DriverScheduleForm.controls.toDate.setValue(event);\n        if (this.DriverScheduleForm.controls.fromDate.value != '' && this.DriverScheduleForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.DriverScheduleForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.DriverScheduleForm.controls.toDate.value).toDate();\n            if (_fromDate > _toDate) {\n                this.DriverScheduleForm.controls.fromDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n        await this.validateShiftForDriver(false);\n    }\n\n    async InitializeDates(type?: number, repeat?: number) {\n        this.DriverScheduleForm.controls.customDates.setValue([]);\n        this.DateList = [];\n        !repeat ? repeat = 0 : '';\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        // alert(this.DriverScheduleForm.controls.fromDate.value);\n        // alert(this.DriverScheduleForm.controls.toDate.value);\n        if (this.DriverScheduleForm.controls.fromDate.value && this.DriverScheduleForm.controls.toDate.value) {\n\n            for (var dt = new Date(this.DriverScheduleForm.controls.fromDate.value); dt <= new Date(this.DriverScheduleForm.controls.toDate.value); dt.setDate(dt.getDate() + repeat + 1)) {\n                if (type && type == 2) //weekend\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` }) : '';\n                else\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` });\n            }\n\n            return this.DateList;\n        }\n    }\n\n    async onSubmit() {\n        //this.DriverScheduleForm.controls.repeat.value &&  this.DriverScheduleForm.controls.repeat.value[0].Id == '1' ? await this.DriverScheduleForm.controls.customDates.setValue(this.DateList) : '';\n        if (this.DriverScheduleForm.invalid) {\n            this.DriverScheduleForm.markAllAsTouched();\n            return false;\n        } else if (this.DriverScheduleForm.controls.type.value == '3') {\n            if (!(this.DriverScheduleForm.controls.repeat.value && this.DriverScheduleForm.controls.repeat.value > 0)) {\n                Declarations.msgerror('Repeat field is greater than 0', undefined, undefined);\n                return false;\n            }\n        } else if (this.DriverScheduleForm.controls.type.value == '4') {\n            if (!(this.DriverScheduleForm.controls.customDates.value.length > 0)) {\n                Declarations.msgerror('Select custom dates', undefined, undefined);\n                return false;\n            }\n        }\n        if (await this.validateShiftForDriver(true) == 1) { return false;}\n        //this.DriverScheduleForm.controls.customDates.setValue([]);\n        if (this.DriverScheduleForm.controls.type.value == '2') { this.DriverScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.DriverScheduleForm.controls.type.value)); }\n        else if (this.DriverScheduleForm.controls.type.value == '3') { this.DriverScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.DriverScheduleForm.controls.type.value, this.DriverScheduleForm.controls.repeat.value)); }\n        else if (this.DriverScheduleForm.controls.type.value == '1') { this.DriverScheduleForm.controls.customDates.setValue(await this.InitializeDates()) }\n        let dates = [];\n\n        //let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\n        //!this.DriverScheduleForm.controls.toDate.value ? this.DriverScheduleForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\n\n        await this.DriverScheduleForm.controls.customDates.value.map(res => { dates.push(res.Id) });\n        let model = new DriverScheduleMapping();\n        this.DriverScheduleForm.controls.id.value ? model.Id = this.DriverScheduleForm.controls.id.value : '';\n        model.DriverId = this.DriverScheduleForm.controls.driverId.value[0].Id;\n       var repeatDayListString = [];\n        dates.forEach(x => {\n            repeatDayListString.push(moment(x).format('MM/DD/YYYY'));\n        })\n        model.ScheduleList.push({ Id: `${model.DriverId}_${new Date().getTime()}`, IsActive: true, StartDate: this.DriverScheduleForm.controls.fromDate.value, EndDate: this.DriverScheduleForm.controls.toDate.value, RepeatDayList: dates, RepeatDayStringList: repeatDayListString, ShiftId: this.DriverScheduleForm.controls.shiftId.value[0].Id, Type: this.DriverScheduleForm.controls.type.value, RepeatEveryDay :this.DriverScheduleForm.controls.repeat.value ,TypeId : this.DriverScheduleForm.controls.type.value });\n       \n        this.addDriverSchedule(model);\n    }\n\n    private addDriverSchedule(model): void {\n        this.isLoading = true;\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.addDriverSchedule(model)\n            .subscribe((response: any) => {\n\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Driver Schedule created successfully', undefined, undefined);\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    this._toggleOpened(false);\n                    let driver = this.DriverScheduleForm.controls.driverId.value;\n                    this.DriverScheduleForm.reset();\n                    this.OnScheduleAdded.emit(driver);\n                    this.DriverScheduleForm.controls.type.setValue('1');\n\n                }\n                else {\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                }\n            });\n    }\n\n    public closedSideBar(): void { this._opened = false; }\n\n   \n    //public getDateList() {\n    //    this.DateList=  this.regionService.getDateList();\n    //}\n\n    //public onRepeatSelect($event): void {\n    //    if ($event.Id == '1')\n    //        this.DriverScheduleForm.controls.customDates.setValue(this.DateList);\n    //    else\n    //        this.DriverScheduleForm.controls.customDates.setValue([]);\n    //}\n\n    //public onRepeatDeSelect($event): void {\n    //       this.DriverScheduleForm.controls.customDates.setValue([]);\n\n    //}\n\n    DriverShiftDetailList: any[] = [];\n\n    async onDriverSelect($event) {\n        this.regionService.onLoadingChanged.next(true);\n\n        let driverIds = [];\n        this.DriverScheduleForm.controls.driverId.value.forEach(res => { driverIds.push(res.Id) });\n        let drivers = driverIds.join();\n        if (driverIds.length > 0) {\n            this.regionService.getShiftByDrivers(drivers,0) // schedule type\n                .subscribe((data) => {\n                    if (data.Result)\n                        this.DriverShiftDetailList = data.Result;\n                });\n        }\n\n        this.regionService.onLoadingChanged.next(false);\n\n    }\n\n    async onDriverDeSelect($event) {\n    }\n\n    \n\n    async validateShiftForDriver(isSubmit:boolean) {       \n        var i = 0;           \n        let rpDayList = [];\n        if (this.DriverScheduleForm.controls.type.value == 4)\n            rpDayList = this.DriverScheduleForm.controls.customDates.value;\n        else\n            rpDayList = this.DateList;\n        if (this.DriverScheduleForm.controls.fromDate.value && this.DriverScheduleForm.controls.toDate.value && this.DriverScheduleForm.controls.shiftId.value && this.DriverScheduleForm.controls.shiftId.value.length > 0) {\n            for await (let item of this.DriverShiftDetailList) {\n                for await (let shift of item.ScheduleList) {\n                    if (shift.RepeatDayList !=null &&  (moment(this.DriverScheduleForm.controls.fromDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                        moment(this.DriverScheduleForm.controls.fromDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY')) ||\n                        (moment(this.DriverScheduleForm.controls.toDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                            moment(this.DriverScheduleForm.controls.toDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY'))) {\n                        if (this.DriverScheduleForm.controls.shiftId.value[0].Id == shift.ShiftId) {\n                            shift.RepeatDayList.forEach(ele => {\n                                let idx = rpDayList.findIndex(x => moment(x.Id).format('MM/DD/YYYY') == moment(ele).format('MM/DD/YYYY'));\n                                if (idx >= 0) {\n                                    if (i != 1) {\n                                        Declarations.msgerror(\"Shift is already assigned to the driver\", undefined, undefined);\n                                        i = 1;\n                                    }\n                                }\n                            });\n\n                            if (i == 1)\n                                break;\n                           \n                        } else {\n                            !isSubmit ? Declarations.msgwarning(\"Another shift is already assigned to the driver\", undefined, undefined):'';\n                            //i = 1;\n                            //break;\n                        }\n                    }\n                }\n                if (i == 1)\n                    break;\n            }\n            return i;\n        }\n        return i;\n    }\n}","<button id=\"driverSchedule\" type=\"button\" class=\"btn btn-default float-right\" (click)=\"_toggleOpened(false)\">Add Schedule   <span> <i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span></button>\r\n<!--side bar menu-->\r\n\r\n<ng-sidebar-container style=\"z-index: 99999;\">\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                style=\"height: 100vh\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Schedule Driver </h3>\r\n\r\n        <content class=\"pr30\" [formGroup]=\"DriverScheduleForm\" name=\"DriverScheduleForm\" autocomplete=\"off\" (keydown.enter)=\"$event.preventDefault()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Region\">Region:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\"\r\n                                                 [settings]=\"multiselectDriverSettingsById\" [data]=\"regionList\" (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionDeSelect($event)\"\r\n                                                 formControlName=\"regionId\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('regionId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('regionId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Drivers\">Driver:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\"\r\n                                                 [settings]=\"multiselectDriverSettingsById\" [data]=\"DriverList\" (onSelect)=\"onDriverSelect($event)\" (onDeSelect)=\"onDriverDeSelect($event)\"\r\n                                                 formControlName=\"driverId\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('driverId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('driverId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Shift\">Shift:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Shift(s)'\"\r\n                                                 [settings]=\"multiselectDriverSettingsById\" [data]=\"ShiftList\" (onSelect)=\"validateShiftForDriver(false)\"\r\n                                                 formControlName=\"shiftId\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('shiftId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('shiftId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">From Date:</label>\r\n                        <input type=\"text\" formControlName=\"fromDate\" #fromDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('fromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">To Date:</label>\r\n                        <input type=\"text\" formControlName=\"toDate\" #EndDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('toDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('toDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\" id=\"inlineRadioDaily\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\" id=\"inlineRadioWdays\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\" id=\"inlineRadioEvery\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\"  *ngIf=\"DriverScheduleForm.get('fromDate').value && DriverScheduleForm.get('toDate').value\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" (change)=\"InitializeDates()\" value=\"4\" id=\"inlineRadioCustom\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                        </div>\r\n\r\n                        <!--<div class=\"radio-inline\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\">Daily</label>\r\n                        </div>\r\n                        <div class=\"radio-inline\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"radio-inline\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\">Repeat Every</label>\r\n                        </div>\r\n                        <div class=\"radio-inline\" *ngIf=\"DriverScheduleForm.get('fromDate').value && DriverScheduleForm.get('toDate').value\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" (change)=\"InitializeDates()\" value=\"4\">Custom</label>\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('type')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('type')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>-->\r\n                    </div>\r\n\r\n                </div>\r\n             \r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\" *ngIf=\"DriverScheduleForm.get('type').value=='4'\">\r\n                        <label for=\"Dates\"> Dates:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Date (s)'\"\r\n                                                 [settings]=\"multiselectDateSettingsById\" [data]=\"DateList\"\r\n                                                 (onSelect)=\"validateShiftForDriver(false)\"\r\n                                                 formControlName=\"customDates\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\"  *ngIf=\"DriverScheduleForm.get('type').value=='3'\">\r\n                        <label for=\"Days\">Days:</label>\r\n                        <input type=\"number\" placeholder=\"days\"  min=\"1\" class=\"form-control\" formControlName=\"repeat\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 text-right form-buttons\">\r\n                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"closedSideBar()\">\r\n                <button id=\"Submit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n<!--end side bar menu-->\r\n\r\n\r\n\r\n<!--<div *ngIf=\"(regionService.onLoadingChanged | async)\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>-->","import { Component, OnInit, Input, ViewChild, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { RegionService } from '../../company-addresses/region/service/region.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { FormGroup, FormBuilder, Validators, NgForm, FormArray } from '@angular/forms';\nimport { RegionModel } from '../../company-addresses/region/model/region';\nimport * as moment from 'moment';\nimport { DropdownItem } from '../../statelist.service';\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\nimport { Declarations } from 'src/app/declarations.module';\nimport { RegionScheduleViewModel, ShiftSchedule } from 'src/app/driver/models/regionSchedule';\nimport { el } from 'date-fns/locale';\nimport { NullVisitor } from '@angular/compiler/src/render3/r3_ast';\n\n@Component({\n    selector: 'app-create-region',\n    templateUrl: './create-region.component.html',\n    styleUrls: ['./create-region.component.css']\n})\n\nexport class CreateRegionComponent implements OnInit {\n\n\n    @Output() OnScheduleAdded = new EventEmitter();\n    constructor(public regionService: RegionService, private _fb: FormBuilder) { }\n    public regionList = [];\n    DriverList = [];\n    RouteList = [];\n    ShiftList = [];\n    RepeatList = [];\n    DateList = [];\n    ColumnsList = [];\n    ShiftScheduleList: any[] = [];\n    CreateRegionForm: FormGroup;\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 1;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n    SelectedShiftList = [];\n    isLoading = false;\n    IsDuplicateShift = false;\n\n    public multiselectRouteSettingsById: IDropdownSettings;\n    public multiselectRepeatSettingsById: IDropdownSettings;\n    public multiselectDateSettingsById: IDropdownSettings;\n    public multiselectRegionSettingsById: IDropdownSettings;\n\n    MinStartDate = new Date();\n    MaxStartDate = new Date();\n    ngOnInit() {\n\n        this.Init();\n    }\n    Init() {\n      \n        this.createScheduleForm();\n        this.clear();\n        this.getRegions();\n        this.multiselectRegionSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.multiselectRouteSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n    }\n\n    ngAfterViewInit() {\n        this.isLoading = false;\n    }\n\n    //#region  Page Load Functions\n\n    private createScheduleForm(): void {\n        this.CreateRegionForm = this._fb.group({\n            id: this._fb.control[''],\n            RegionId:['', Validators.required],\n            RouteId: ['', Validators.required],\n            ShiftId: [''],\n            ColumnIndex: [''],\n            type: ['1', Validators.required],\n            RegionShiftDetail: this._fb.array([this.getShift()]),\n            fromDate: ['', Validators.required],\n            toDate: ['', Validators.required],\n            repeat: [1],\n            customDates: [[]]            \n        });\n        var dt = (moment(new Date()).toDate())\n    }\n\n    private getRegions(): void {\n        this.regionService.getRegions()\n            .subscribe((region: RegionModel) => {\n                this.getRegionDropDwn(region.Regions);\n            });\n    }\n\n    getShift() {\n        return this._fb.group({\n            ShiftId: this._fb.control('', Validators.required),\n            ColumnIndex: this._fb.control('', Validators.required)\n        })\n }\n    //#endregion\n\n   \n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n\n//#region Multiselect events \n\npublic onRegionSelect($event) {\n\n    this.ColumnsList = [];\n    var region = this.regionList.find(f => f.Id == $event.Id);       \n    this.getRoutes(region.Id);\n    this.ShiftList = region.Shifts.map(res => { return { Id: res.Id, Name: `${res.Name} ( ${res.StartTime} - ${res.EndTime})` } });\n    this.createColumnList(region);\n}\n\npublic onRegionDeSelect($event) {\n    this.clear();\n}\n\n\npublic clear(){\n    this.DriverList = [];\n    this.ShiftList = [];\n    this.ColumnsList = [];\n    this.RouteList = [];\n    this.CreateRegionForm.controls.RegionShiftDetail =  this._fb.array([]);\n    this.CreateRegionForm.controls.RegionShiftDetail =  this._fb.array([this.getShift()]),\n    this.CreateRegionForm.reset();\n}\n\npublic onRouteSelect($event) {\n    var regionId = this.CreateRegionForm.controls.RegionId.value[0].Id;\n    this.getShiftSchedules(regionId, $event.Id)\n}  \n\npublic onShiftSelect($event) {\n   \n    var shift = this.ShiftList.find(f => f.Id == $event.Id);\n    this.IsDuplicateShift = false;\n    this.CheckDuplicateShits(shift);\n}\npublic onShiftDeSelect($event) {\n\n}\n\n//#endregion\n      \n    //#region   Date\n    setFromDate(event: any): void {\n        this.CreateRegionForm.controls.fromDate.setValue(event);\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 2))).toDate();\n        !this.CreateRegionForm.controls.toDate.value ? this.CreateRegionForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\n        if (this.CreateRegionForm.controls.fromDate.value != '' && this.CreateRegionForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.CreateRegionForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.CreateRegionForm.controls.toDate.value).toDate();\n            if (_toDate < _fromDate) {\n                this.CreateRegionForm.controls.toDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n        this.validateShiftForRegion(false);\n\n    }\n\n    async setToDate(event: any) {\n        this.CreateRegionForm.controls.toDate.setValue(event);\n        if (this.CreateRegionForm.controls.fromDate.value != '' && this.CreateRegionForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.CreateRegionForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.CreateRegionForm.controls.toDate.value).toDate();\n            if (_fromDate > _toDate) {\n                this.CreateRegionForm.controls.fromDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n       this.validateShiftForRegion(false);\n\n    }\n\n    async InitializeDates(type?: number, repeat?: number) {\n        this.CreateRegionForm.controls.customDates.setValue([]);\n        this.DateList = [];\n        !repeat ? repeat = 0 : '';\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        if (this.CreateRegionForm.controls.fromDate.value && this.CreateRegionForm.controls.toDate.value) {\n\n            for (var dt = new Date(this.CreateRegionForm.controls.fromDate.value); dt <= new Date(this.CreateRegionForm.controls.toDate.value); dt.setDate(dt.getDate() + repeat + 1)) {\n                if (type && type == 2) //weekend\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} ` }) : '';//(${days[new Date(dt).getDay()]})\n                else\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')}` }); //(${days[new Date(dt).getDay()]})\n            }\n\n            return this.DateList;\n        }\n    }\n\n    isInvalid(name: string): boolean {\n        var result = this.CreateRegionForm.get(name).invalid && (this.CreateRegionForm.get(name).dirty || this.CreateRegionForm.get(name).touched)\n        return result;\n    }\n\n    isRequired(name: string): boolean {\n        return this.CreateRegionForm.get(name).errors.required;\n    }\n //#endregion\n\n    \n   //#region  Button Events \n   public closedSideBar(): void { \n       this.clear();\n       this._opened = false; \n    }\n\n   addShift() {\n    let _shifts = this.CreateRegionForm.get('RegionShiftDetail') as FormArray;\n            _shifts.push(this.getShift());\n}\n\nremoveShift(index: number) {\n    let _shifts = this.CreateRegionForm.get('RegionShiftDetail') as FormArray;\n    _shifts.removeAt(index);\n    this.IsDuplicateShift = false;\n}\nasync onSubmit() {\n      \n    if (this.CreateRegionForm.invalid) {\n        this.CreateRegionForm.markAllAsTouched();\n        Declarations.msgerror('All fields are mandatory', undefined, undefined);\n        return false;\n    } else if (this.CreateRegionForm.controls.type.value == '3') {\n        if (!(this.CreateRegionForm.controls.repeat.value && this.CreateRegionForm.controls.repeat.value > 0)) {\n            Declarations.msgerror('Repeat field is greater than 0', undefined, undefined);\n            return false;\n        }\n    } else if (this.CreateRegionForm.controls.type.value == '4') {\n        if (!(this.CreateRegionForm.controls.customDates.value.length > 0)) {\n            Declarations.msgerror('Select custom dates', undefined, undefined);\n            return false;\n        }\n    }\n    var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n    if(ScheduleList !=null && ScheduleList.length > 0){\n       \n       if(this.CheckDuplicateShitsOnSubmit()) {\n        Declarations.msgerror(\"Same selection of shift will not work\", undefined, undefined);\n        return false;\n       }\n    }\n    else{\n        Declarations.msgerror('Atlease one schedule is required, please select Shift and column', undefined, undefined);\n        return false;\n    }\n\n    if (await this.validateShiftForRegion(true) == 1) { return false;}\n\n    if (this.CreateRegionForm.controls.type.value == '2') { this.CreateRegionForm.controls.customDates.setValue(await this.InitializeDates(this.CreateRegionForm.controls.type.value)); }\n    else if (this.CreateRegionForm.controls.type.value == '3') { this.CreateRegionForm.controls.customDates.setValue(await this.InitializeDates(this.CreateRegionForm.controls.type.value, this.CreateRegionForm.controls.repeat.value)); }\n    else if (this.CreateRegionForm.controls.type.value == '1') { this.CreateRegionForm.controls.customDates.setValue(await this.InitializeDates()) }\n    let dates = [];\n    await this.CreateRegionForm.controls.customDates.value.map(res => { dates.push(res.Name) });\n    let model = new RegionScheduleViewModel();\n    this.CreateRegionForm.controls.id.value ? model.Id = this.CreateRegionForm.controls.id.value : '';\n    model.RegionId = this.CreateRegionForm.controls.RegionId.value[0].Id;\n    model.RouteId = this.CreateRegionForm.controls.RouteId.value[0].Id;\n    model.StartDate = this.CreateRegionForm.controls.fromDate.value;\n    model.EndDate = this.CreateRegionForm.controls.toDate.value;\n\n    ScheduleList.forEach(element => {\n        var objShiftModel = new ShiftSchedule();\n        objShiftModel.ShiftId = element['ShiftId'][0]['Id'];\n        objShiftModel.ColumnIndex = parseInt(element['ColumnIndex'][0]['Id']);\n        model.RegionShiftDetail.push(objShiftModel);\n    });\n    \n    model.Repeat = this.CreateRegionForm.controls.repeat.value\n    model.RepeatDayList = dates;\n    model.IsActive = true;\n    this.addRouteSchedule(model);\n}\n   //#endregion\n\n    //#region private functions \n\n    async validateShiftForRegion(isSubmit:boolean) {\n        var k = 0;\n        if (this.CreateRegionForm.controls.fromDate.value && this.CreateRegionForm.controls.toDate.value && this.CreateRegionForm.controls.RegionId.value && this.CreateRegionForm.controls.RouteId.value) {\n            var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n            for (let shift of this.ShiftScheduleList) {\n                //for await (let shift of item) {\n                    if ((moment(this.CreateRegionForm.controls.fromDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                        moment(this.CreateRegionForm.controls.fromDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY')) ||\n                        (moment(this.CreateRegionForm.controls.toDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                            moment(this.CreateRegionForm.controls.toDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY'))) {                            \n                               \n                        if (ScheduleList != null && ScheduleList.length > 0) {\n                            for (var i = 0; i < ScheduleList.length; i++) {\n                                var iShift = ScheduleList[i];\n                                for (var j = 0; j < shift.RegionShiftDetail.length; j++) {\n                                    var jShift = shift.RegionShiftDetail[j]\n                                    if(iShift.ShiftId != null && iShift.ShiftId[0].Id==  jShift.ShiftId)\n                                    {\n                                        Declarations.msgerror(\"Shift is already assigned to the Region\", undefined, undefined);\n                                        k = 1;\n                                        return false;                                        \n                                    }\n                                    else\n                                    {\n                                        !isSubmit ? Declarations.msgwarning(\"Another shift is already assigned to the Region\", undefined, undefined):'';\n                                    }\n                                }\n                            }\n\n                        }\n                    }\n              //  }\n                if (k == 1)\n                    break;\n            }\n            return k;\n        }\n        return k;\n    }\n\n    private addRouteSchedule(model): void {\n        this.isLoading = true;\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.addRegionSchedule(model)\n            .subscribe((response: any) => {\n\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Region Schedule created successfully', undefined, undefined);\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    this._toggleOpened(false);\n                    let driver = this.CreateRegionForm.controls.driverId.value;\n                    this.CreateRegionForm.reset();\n                    this.OnScheduleAdded.emit(driver);\n\n                }\n                else {\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                }\n            });\n    }\n\n    private createColumnList(region) {\n        this.DriverList = region.Drivers;\n        if (region.Drivers.length > 0) {\n            var num = 0;\n            this.DriverList.forEach(obj => {\n                var col = {\n                    Id: 0,\n                    Name: \"\"\n                }\n                col.Id = num;\n                col.Name = \"C\" + num;\n                this.ColumnsList.push(col)\n                num++\n            })\n        }\n    }\n\n    private CheckDuplicateShits(shift) {\n        var cnt = 1;\n        var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n        if (ScheduleList.length > 1) {\n            for (var i = 0; i < ScheduleList.length; i++) {\n                var iShift = ScheduleList[i];\n                if (iShift.ShiftId !=\"\"  && iShift.ShiftId[0].Id == shift.Id) {\n                    if (cnt > 1)\n                        this.IsDuplicateShift = true;\n                    cnt++\n                }\n            }\n        }\n        if (this.IsDuplicateShift) {\n            Declarations.msgerror(\"Same selection of shift will not work\", undefined, undefined);\n        }\n    }\n\n    private CheckDuplicateShitsOnSubmit() {        \n        var checkDuplicate= false;\n        var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n        if (ScheduleList.length > 1) {\n            for (var j = 0; j < ScheduleList.length; j++) {\n             var   shift = ScheduleList[j];\n             var cnt = 1;\n            for (var i = 0; i < ScheduleList.length; i++) {\n                var iShift = ScheduleList[i];\n                if (iShift.ShiftId !=\"\" && shift.ShiftId !=\"\" && iShift.ShiftId[0].Id == shift.ShiftId[0].Id) {\n                    if (cnt > 1){                                        \n                        return checkDuplicate = true;\n                    }  \n                    cnt++\n                }\n            }\n        }\n        }\n        \n        return checkDuplicate;\n    }\n\n\n    private getShiftSchedules(regionId, routeId): void {\n        this.regionService.getRegionSchedule(regionId, routeId)\n            .subscribe((schedules: RegionScheduleViewModel[]) => {\n                this.pushRegionShiftDetail(schedules);\n            });\n    }\n\n    public pushRegionShiftDetail(schedules) {   \n\n        this.ShiftScheduleList = schedules;\n    }\n\n    private getRoutes(id): void {\n        this.regionService.getRoutesByRegion(id)\n            .subscribe((routes: RouteInformationModel[]) => {\n                this.getRouteDropDown(routes);\n            });\n    }\n\n    private getRouteDropDown(routeList): void {\n        this.RouteList = routeList.ResponseData\n    }\n    private getRegionDropDwn(regionList): void {\n        this.regionList = regionList;\n    }\n\n    //#endregion\n}","<button id=\"CreateRoute\" type=\"button\" class=\"btn btn-default float-right\" (click)=\"_toggleOpened(false)\"> Add Route\r\n    <span> <i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span></button>\r\n<!--side bar menu-->\r\n\r\n\r\n<ng-sidebar-container style=\"z-index: 99999;\">\r\n    <ng-sidebar [opened]=\"_opened\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh;\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Create Route</h3>\r\n\r\n        <!-- <pre>\r\n            {{CreateRegionForm.value | json}}\r\n        </pre> -->\r\n\r\n        <content class=\"pr30\" [formGroup]=\"CreateRegionForm\" autocomplete=\"off\"\r\n            (keydown.enter)=\"$event.preventDefault()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Region\">Region</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\" \r\n                            formControlName=\"RegionId\" [settings]=\"multiselectRegionSettingsById\" [data]=\"regionList\"\r\n                            (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('RegionId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('RegionId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Route\">Route</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Route(s)'\" formControlName=\"RouteId\"\r\n                            [settings]=\"multiselectRegionSettingsById\" [data]=\"RouteList\" \r\n                            (onSelect)=\"onRouteSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('RouteId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('RouteId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n<div class=\"row\">\r\n    <div class=\"col-sm-6\" style=\"padding-left: 90%;\" >\r\n        <a href=\"javascript:void(0)\" (click)=\"addShift()\"><i class=\"fa fa-plus  \"> Add Shift</i></a>  \r\n        <!-- <link id=\"addShift\" (click)=\"addShift()\"  [disabled]= \"IsDuplicateShift\">\r\n        <button (click)=\"addShift()\"  [disabled]= \"IsDuplicateShift\" ><span> <i class=\"fa fa-plus\"\r\n                    aria-placeholder=\"Add\"></i></span></button> -->\r\n    </div>\r\n</div>\r\n            <div formArrayName=\"RegionShiftDetail\" *ngFor=\"let shift of CreateRegionForm.get('RegionShiftDetail')['controls']; let i = index;\">              \r\n                <div [formGroupName]=\"i\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"RegionShiftDetail\">Shift <span class=\"Required\">*</span> </label>\r\n                                <ng-multiselect-dropdown [placeholder]=\"'Select Shift(s)'\" formControlName=\"ShiftId\"\r\n                                    [settings]=\"multiselectRegionSettingsById\" [data]=\"ShiftList\" \r\n                                    (onSelect)=\"onShiftSelect($event)\" (onDeSelect)=\"onShiftDeSelect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"isInvalid('ShiftId')\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"isRequired('ShiftId')\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"columns\">Column<span class=\"Required\">*</span></label>\r\n                                <ng-multiselect-dropdown [placeholder]=\"'Columns'\" formControlName=\"ColumnIndex\"\r\n                                    [settings]=\"multiselectRegionSettingsById\" [data]=\"ColumnsList\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"isInvalid('ColumnIndex')\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"isRequired('ColumnIndex')\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>                       \r\n                        <div class=\"col-sm-1\">\r\n                            <label for=\"columns\"></label>\r\n                            <!-- <button (click)=\"removeShift(i)\"><span> <i class=\"fa fa-remove\"\r\n                                        aria-placeholder=\"Remove\"></i></span></button> -->\r\n\r\n                                        <a href=\"javascript:void(0)\" (click)=\"removeShift(i)\" style=\"padding-top: 50%;\"><i class=\"fa fa-remove\">Remove</i></a>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">From Date<span class=\"Required\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"fromDate\" #fromDate class=\"form-control datepicker\"\r\n                            placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                            (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('fromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">To Date<span class=\"Required\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"toDate\" #EndDate class=\"form-control datepicker\"\r\n                            placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\"\r\n                            [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('toDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('toDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\"\r\n                                id=\"inlineRadioDaily\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\"\r\n                                id=\"inlineRadioWdays\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\"\r\n                                id=\"inlineRadioEvery\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                        </div>\r\n                        <!-- <div class=\"form-check form-check-inline\"  *ngIf=\"CreateRegionForm.get('fromDate').value && CreateRegionForm.get('toDate').value\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" (change)=\"InitializeDates()\" value=\"4\" id=\"inlineRadioCustom\">\r\n                    <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                </div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\"  *ngIf=\"CreateRegionForm.get('type').value=='3'\">\r\n                        <label for=\"Days\">Days:</label>\r\n                        <input type=\"number\" placeholder=\"days\"  min=\"1\" class=\"form-control\" formControlName=\"repeat\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 text-right form-buttons\">\r\n                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"closedSideBar()\">\r\n                <button id=\"Submit\" [disabled]= \"IsDuplicateShift\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-lg btn-primary valid\"\r\n                    aria-invalid=\"false\">Submit</button>\r\n            </div>\r\n\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { RegionModel } from 'src/app/company-addresses/region/model/region';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { TrailerSchedule } from 'src/app/driver/models/TrailerSchedule';\r\nimport { DriverService } from '../services/driver.service';\r\n\r\n@Component({\r\n    selector: 'app-create-trailer-schedule',\r\n    templateUrl: './create-trailer-schedule.component.html',\r\n    styleUrls: ['./create-trailer-schedule.component.css']\r\n})\r\nexport class CreateTrailerScheduleComponent implements OnInit {\r\n    @Output() OnScheduleAdded = new EventEmitter();\r\n    public regionList = [];\r\n    ShiftList = [];\r\n    TrailerList = [];\r\n    DriverList = [];\r\n    ColumnList = [];\r\n    isLoading = false;\r\n    TrailerScheduleForm: FormGroup;\r\n    public SelectedRegionId: string = '';\r\n    //sidebar variables\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n    public multiselectDropDownSettingsById: IDropdownSettings;\r\n    public multiselectDateSettingsById: IDropdownSettings;\r\n    DateList = [];\r\n\r\n    //min max date\r\n    MinStartDate = new Date();\r\n    MaxStartDate = new Date();\r\n\r\n    constructor(private regionService: RegionService,private driverService:DriverService, private _fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.getRegions();\r\n        this.createTrailerForm();\r\n        this.MaxStartDate.setMonth(this.MaxStartDate.getMonth() + 2);\r\n\r\n        this.multiselectDropDownSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: false,\r\n            enableCheckAll: false\r\n        }\r\n        this.multiselectDateSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: true\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.isLoading = false;\r\n    }\r\n\r\n    public _toggleOpened(shouldOpen: boolean): void {\r\n        if (shouldOpen) {\r\n            this._opened = true;\r\n        }\r\n        else {\r\n            this._opened = !this._opened;\r\n        }\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.TrailerScheduleForm.get(name).invalid && (this.TrailerScheduleForm.get(name).dirty || this.TrailerScheduleForm.get(name).touched)\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.TrailerScheduleForm.get(name).errors.required;\r\n    }\r\n\r\n    private getRegions(): void {\r\n        this.regionService.getRegions()\r\n            .subscribe((region: RegionModel) => {\r\n                this.getRegionDropDwn(region.Regions);\r\n            });\r\n    }\r\n\r\n    public closedSideBar(): void { this._opened = false; }\r\n\r\n    public onRegionSelect($event) {\r\n        var region = this.regionList.find(f => f.Id == $event.Id);\r\n        //this.TrailerScheduleForm.controls.shiftId.setValue('');\r\n        this.ShiftList = region.Shifts.map(res => { return { Id: res.Id, Name: `${res.StartTime} - ${res.EndTime}` } });\r\n        this.TrailerList = region.Trailers.map(res => { return { Id: res.Code, Name: `${res.Name}` } });\r\n        this.SelectedRegionId = region.Id;\r\n        this.createColumnList(region);\r\n    }\r\n\r\n    private createColumnList(region) {\r\n        this.DriverList = region.Drivers;\r\n        if (region.Drivers.length > 0) {\r\n            var num = 1;\r\n            this.DriverList.forEach(obj => {\r\n                var col = {\r\n                    Id: 0,\r\n                    Name: \"\"\r\n                }\r\n                col.Id = num;\r\n                col.Name = \"C\" + num;\r\n                this.ColumnList.push(col);\r\n                num++;\r\n            })\r\n        }\r\n    }\r\n\r\n    private getRegionDropDwn(regionList): void {\r\n        this.regionList = regionList;\r\n    }\r\n\r\n    public onRegionDeSelect($event) {\r\n        //var region = this.regionList.find(f => f.Id == $event.Id);\r\n        //this.ShiftList = [];\r\n        //this.TrailerScheduleForm.controls.trailerId.setValue('');\r\n    }\r\n\r\n    public createTrailerForm(): void {\r\n        this.TrailerScheduleForm = this._fb.group({\r\n            id: this._fb.control(null),\r\n            regionId: this._fb.control('', Validators.required),\r\n            trailerId: this._fb.control('', Validators.required),\r\n            shifts: this._fb.array([this.getShift()]),\r\n            fromDate: this._fb.control('', Validators.required),\r\n            toDate: this._fb.control('', Validators.required),\r\n            //type: this._fb.control(''),\r\n            type: ['1', Validators.required],\r\n            repeat: [1],\r\n            customDates: [[]],\r\n        });\r\n        var dt = moment(new Date()).toDate();\r\n        this.TrailerScheduleForm.controls.fromDate.setValue(moment(dt).format('MM/DD/YYYY'));\r\n    }\r\n\r\n    addShift() {\r\n        let _shifts = this.TrailerScheduleForm.get('shifts') as FormArray;\r\n        _shifts.push(this.getShift());\r\n    }\r\n\r\n    getShift() {\r\n        return this._fb.group({\r\n            shiftId: this._fb.control('', Validators.required),\r\n            columnId: this._fb.control('', Validators.required)\r\n        })\r\n    }\r\n\r\n    removeShift(index: number) {\r\n        let _shifts = this.TrailerScheduleForm.get('shifts') as FormArray;\r\n        _shifts.removeAt(index);\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        this.TrailerScheduleForm.controls.fromDate.setValue(event);\r\n\r\n        //let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\r\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 2))).toDate();\r\n        !this.TrailerScheduleForm.controls.toDate.value ? this.TrailerScheduleForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\r\n        if (this.TrailerScheduleForm.controls.fromDate.value != '' && this.TrailerScheduleForm.controls.toDate.value != '') {\r\n            let _fromDate = moment(this.TrailerScheduleForm.controls.fromDate.value).toDate();\r\n            let _toDate = moment(this.TrailerScheduleForm.controls.toDate.value).toDate();\r\n            if (_toDate < _fromDate) {\r\n                this.TrailerScheduleForm.controls.toDate.setValue(event);\r\n            }\r\n        }\r\n        this.InitializeDates();\r\n    }\r\n\r\n    async  setToDate(event: any) {\r\n        this.TrailerScheduleForm.controls.toDate.setValue(event);\r\n        if (this.TrailerScheduleForm.controls.fromDate.value != '' && this.TrailerScheduleForm.controls.toDate.value != '') {\r\n            let _fromDate = moment(this.TrailerScheduleForm.controls.fromDate.value).toDate();\r\n            let _toDate = moment(this.TrailerScheduleForm.controls.toDate.value).toDate();\r\n            if (_fromDate > _toDate) {\r\n                this.TrailerScheduleForm.controls.fromDate.setValue(event);\r\n            }\r\n        }\r\n        this.InitializeDates();\r\n    }\r\n\r\n    async InitializeDates(type?: number, repeat?: number) {\r\n        this.TrailerScheduleForm.controls.customDates.setValue([]);\r\n        this.DateList = [];\r\n        !repeat ? repeat = 0 : '';\r\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        if (this.TrailerScheduleForm.controls.fromDate.value && this.TrailerScheduleForm.controls.toDate.value) {\r\n\r\n            for (var dt = new Date(this.TrailerScheduleForm.controls.fromDate.value); dt <= new Date(this.TrailerScheduleForm.controls.toDate.value); dt.setDate(dt.getDate() + repeat + 1)) {\r\n                if (type && type == 2) //weekend\r\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` }) : '';\r\n                else\r\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` });\r\n            }\r\n\r\n            return this.DateList;\r\n        }\r\n    }\r\n\r\n    async onSubmit() {\r\n        if (this.TrailerScheduleForm.invalid) {\r\n            this.TrailerScheduleForm.markAllAsTouched();\r\n            return false;\r\n        } else if (this.TrailerScheduleForm.controls.type.value == '3') {\r\n            if (!(this.TrailerScheduleForm.controls.repeat.value && this.TrailerScheduleForm.controls.repeat.value > 0)) {\r\n                Declarations.msgerror('Repeat field is greater than 0', undefined, undefined);\r\n                return false;\r\n            }\r\n        } else if (this.TrailerScheduleForm.controls.type.value == '4') {\r\n            if (!(this.TrailerScheduleForm.controls.customDates.value.length > 0)) {\r\n                Declarations.msgerror('Select custom dates', undefined, undefined);\r\n                return false;\r\n            }\r\n        }\r\n       \r\n        if (this.TrailerScheduleForm.controls.type.value == '2') { this.TrailerScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.TrailerScheduleForm.controls.type.value)); }\r\n        else if (this.TrailerScheduleForm.controls.type.value == '3') { this.TrailerScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.TrailerScheduleForm.controls.type.value, this.TrailerScheduleForm.controls.repeat.value)); }\r\n        else if (this.TrailerScheduleForm.controls.type.value == '1') { this.TrailerScheduleForm.controls.customDates.setValue(await this.InitializeDates()) }\r\n        let dates = [];\r\n\r\n        await this.TrailerScheduleForm.controls.customDates.value.map(res => { dates.push(res.Id) });\r\n        let model = new TrailerSchedule();\r\n        this.TrailerScheduleForm.controls.id.value ? model.Id = this.TrailerScheduleForm.controls.id.value : '';\r\n        model.RegionId = this.TrailerScheduleForm.controls.regionId.value[0].Id;\r\n        model.TrailerId = this.TrailerScheduleForm.controls.trailerId.value[0].Id;\r\n        model.StartDate = this.TrailerScheduleForm.controls.fromDate.value;\r\n        model.EndDate = this.TrailerScheduleForm.controls.toDate.value;\r\n        model.IsActive = true;\r\n        model.RepeatDayList = dates;\r\n        model.Type = this.TrailerScheduleForm.controls.type.value;\r\n        model.TrailerShiftDetail = this.TrailerScheduleForm.controls.shifts.value.map(item => ({ ShiftId: item.shiftId[0].Id, ColumnId: item.columnId[0].Id }));\r\n        this.addTrailerSchedule(model);\r\n    }\r\n\r\n    private addTrailerSchedule(model): void {\r\n        this.isLoading = true;\r\n        this.driverService.onLoadingChanged.next(true);\r\n        this.driverService.addTrailerSchedule(model)\r\n            .subscribe((response: any) => {\r\n\r\n                if (response != null && response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Trailer Schedule created successfully', undefined, undefined);\r\n                    this.isLoading = false;\r\n                    this.driverService.onLoadingChanged.next(false);\r\n                    this._toggleOpened(false);\r\n                    //let driver = this.TrailerScheduleForm.controls.driverId.value;\r\n                    this.TrailerScheduleForm.reset();\r\n                    //this.OnScheduleAdded.emit(driver);\r\n                }\r\n                else {\r\n                    this.isLoading = false;\r\n                    this.driverService.onLoadingChanged.next(false);\r\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n    }\r\n}\r\n","<button id=\"trailerSchedule\" type=\"button\" class=\"btn btn-default float-right\" (click)=\"_toggleOpened(false)\"><i class=\"fa fa-plus mr5\" aria-hidden=\"true\"></i>Add Trailer</button>\r\n<!--side bar menu-->\r\n\r\n<ng-sidebar-container style=\"z-index: 99999;\">\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                style=\"height: 100vh\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Schedule Trailer </h3>\r\n        <content class=\"pr30\" [formGroup]=\"TrailerScheduleForm\" name=\"TrailerScheduleForm\" autocomplete=\"off\" (keydown.enter)=\"$event.preventDefault()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Region\">Region:</label>\r\n                    </div>\r\n\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\"\r\n                                             [settings]=\"multiselectDropDownSettingsById\" [data]=\"regionList\"\r\n                                             (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionDeSelect($event)\"\r\n                                             formControlName=\"regionId\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"isInvalid('regionId')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('regionId')\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Trailer\">Trailer:</label>\r\n                    </div>\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Trailer(s)'\"\r\n                                             [settings]=\"multiselectDropDownSettingsById\" [data]=\"TrailerList\"\r\n                                             formControlName=\"trailerId\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"isInvalid('trailerId')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('trailerId')\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\" formArrayName=\"shifts\" *ngFor=\"let shift of TrailerScheduleForm.get('shifts')['controls'];  let j = index;\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"row\" [formGroupName]=\"j\">\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Shift\">Shift:</label>\r\n                                <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':TrailerScheduleForm.get('shifts').touched && TrailerScheduleForm.get('shifts').invalid}\"\r\n                                                         formControlName=\"shiftId\" [placeholder]=\"'Select Shifts'\"\r\n                                                          [settings]=\"multiselectDropDownSettingsById\" [data]=\"ShiftList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Column\">Column:</label>\r\n                                <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':TrailerScheduleForm.get('shifts').touched && TrailerScheduleForm.get('shifts').invalid}\"\r\n                                                         formControlName=\"columnId\" [placeholder]=\"'Select Columns'\"\r\n                                                         [settings]=\"multiselectDropDownSettingsById\" [data]=\"ColumnList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2 text-right\">\r\n                            <a class=\"ml20\" (click)=\"removeShift(j);\">\r\n                                <i class=\"fa fa-trash-alt mt14 color-maroon mt8\"></i>\r\n                            </a>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <table width=\"100%\">\r\n                        <tr>\r\n                            <td width=\"15%\">&nbsp;</td>\r\n                            <td colspan=\"2\">\r\n                                <div class=\"form-group\">\r\n                                    <a (click)=\"addShift();\">\r\n                                        <i class=\"fa fa-plus-circle fs14\"></i> Add Shift\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">From Date:</label>\r\n                        <input type=\"text\" formControlName=\"fromDate\" #fromDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('fromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">To Date:</label>\r\n                        <input type=\"text\" formControlName=\"toDate\" #EndDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('toDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('toDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\" id=\"inlineRadioDaily\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\" id=\"inlineRadioWdays\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\" id=\"inlineRadioEvery\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\" *ngIf=\"TrailerScheduleForm.get('fromDate').value && TrailerScheduleForm.get('toDate').value\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"4\" id=\"inlineRadioCustom\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\" *ngIf=\"TrailerScheduleForm.get('type').value=='4'\">\r\n                        <label for=\"Dates\"> Dates:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Date (s)'\"\r\n                                                 [settings]=\"multiselectDateSettingsById\"\r\n                                                 formControlName=\"customDates\" [data]=\"DateList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\" *ngIf=\"TrailerScheduleForm.get('type').value=='3'\">\r\n                        <label for=\"Days\">Days:</label>\r\n                        <input type=\"number\" placeholder=\"days\" min=\"1\" class=\"form-control\" formControlName=\"repeat\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 text-right form-buttons\">\r\n                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"closedSideBar()\">\r\n                <button id=\"Submit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DriverViewModel } from '../../models/DriverManagementModel';\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\nimport { DriverService } from '../../services/driver.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { LicenceRequirement, TrailerType } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-create-driver',\n    templateUrl: './create-driver.component.html',\n    styleUrls: ['./create-driver.component.css']\n})\nexport class CreateDriverComponent implements OnInit {\n    public DriverModel: DriverViewModel;\n    public MinDate: Date = new Date();\n    public MaxDate: Date = new Date();\n    public DriverForm: FormGroup;\n    public TrailerTypeEnum: typeof TrailerType = TrailerType;\n    public TrailerTypeList: DropdownItem[] = [];\n    public LicenceTypeEnum: typeof LicenceRequirement = LicenceRequirement;\n    public LicenceTypes: DropdownItemExt[] = [];\n    //public DriverStatusEnum: typeof Status = Status;\n    //public Statuses: DropdownItem[] = [];\n    public RegionList: DropdownItem[] = [];\n    public ContactNumberValidationMessage: string = \"Invalid Contact number\";\n    public IsOnboarded: boolean = false;\n    public IsLoading: boolean = false;\n    public trailerDdlSettings = {};\n    public regionDdlSettings = {};\n    @Output() onSaveDriverData: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private fb: FormBuilder, private driverService: DriverService) {\n        this.DriverForm = this.fb.group({\n            DriverId: this.fb.control(0),\n            FirstName: this.fb.control('', [Validators.required]),\n            LastName: this.fb.control('', [Validators.required]),\n            CompanyName: this.fb.control(''),\n            Email: this.fb.control('', [Validators.required, Validators.pattern(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$\")]),\n            LicenseNumber: this.fb.control('', [Validators.required]),\n            ExpiryDate: this.fb.control('', [Validators.required]),\n            LicenseTypeId: this.fb.control(null),\n            SelectedLicenseTypes: this.fb.control(null, [Validators.required]),\n            TrailerType: this.fb.control(null),\n            SelectedTrailerTypes: this.fb.control(null),\n            ContactNumber: this.fb.control(''),\n            //DriverStatus: this.fb.control(Status.Active),\n            InvitedBy: this.fb.control(''),\n            UserId: this.fb.control(0),\n            //IsActive: this.fb.control(true),\n            Regions: this.fb.control(null),\n            SelectedRegions: this.fb.control(null),\n            IsFilldAuthorized: this.fb.control(false),\n        });\n    }\n\n    ngOnInit() {\n        this.trailerDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 5,\n            allowSearchFilter: true\n        };\n\n        this.regionDdlSettings = {\n            singleSelection: true,\n            idField: 'Code',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: true\n        };\n\n        // load regions\n        this.getRegions();\n\n        this.TrailerTypeList = (Object.keys(this.TrailerTypeEnum).filter(k => typeof this.TrailerTypeEnum[k] === \"number\") as string[]).map(x => { return { Id: this.TrailerTypeEnum[x], Name: x, Code: \"\" } as DropdownItem });\n        this.LicenceTypes = (Object.keys(this.LicenceTypeEnum).filter(k => typeof this.LicenceTypeEnum[k] === \"number\") as string[]).map(x => { return { Id: x, Name: x == \"Class1\" ? \"Class 1\" : x == \"Class3\" ? \"Class 3\" : x, Code: \"\" } as DropdownItemExt });\n        //this.Statuses = (Object.keys(this.DriverStatusEnum).filter(k => typeof this.DriverStatusEnum[k] === \"number\") as string[]).map(x => { return { Id: this.DriverStatusEnum[x], Name: x == \"InActive\" ? \"In-Active\" : x, Code: \"\" } as DropdownItem });\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\n    }\n\n    onSubmit() {\n        // validate contact number     \n        var contactNumber = this.DriverForm.get('ContactNumber').value;\n        var licenseType = this.DriverForm.get('SelectedLicenseTypes').value;\n\n        this.formatContactNumber(contactNumber);\n        this.onLicenseTypeChange(licenseType);\n\n        if (this.DriverForm.valid) {\n            var driverForm = this.DriverForm.value;\n\n            var driverId = (driverForm.DriverId == \"\" || driverForm.DriverId == null) ? 0 : driverForm.DriverId;\n            this.DriverForm.get(\"DriverId\").patchValue(driverId);\n\n            var userId = (driverForm.UserId == \"\" || driverForm.UserId == null) ? 0 : driverForm.UserId;\n            this.DriverForm.get(\"UserId\").patchValue(userId);\n\n\n            if (driverForm.SelectedTrailerTypes != null && driverForm.SelectedTrailerTypes.length > 0) {\n                var trailerTypeIds = [];\n                driverForm.SelectedTrailerTypes.forEach(t => { trailerTypeIds.push(this.TrailerTypeEnum[t.Name]); });\n                this.DriverForm.get(\"TrailerType\").patchValue(trailerTypeIds);\n            }\n\n            if (driverForm.SelectedRegions != null && driverForm.SelectedRegions.length > 0) {\n                var regionIds = [];\n                driverForm.SelectedRegions.forEach(t => { regionIds.push(t.Code) });\n                this.DriverForm.get(\"Regions\").patchValue(regionIds);\n            }\n\n            if (driverForm.SelectedLicenseTypes != null) {\n                this.DriverForm.get(\"LicenseTypeId\").patchValue(driverForm.SelectedLicenseTypes);\n            }\n\n            //if (driverForm.IsActive == undefined || driverForm.IsActive == null) {\n            //    var isActive = driverForm.DriverStatus == 1 ? true : false;\n            //    this.DriverForm.get(\"IsActive\").patchValue(isActive);\n            //}\n           if(!driverForm.IsFilldAuthorized)\n           { \n            this.DriverForm.get(\"IsFilldAuthorized\").patchValue(false);\n           }\n            this.submitForm();\n        }\n        else {\n            this.DriverForm.markAllAsTouched();\n        }\n    }\n\n    loadDriverDetail(driver: DriverViewModel) {\n        this.clearForm();\n        if (driver.ContactNumber == 'NA') { driver.ContactNumber = null; }\n        this.DriverForm.patchValue(driver);\n\n        if (driver.UserId && driver.UserId > 0) {\n            this.DriverForm.get(\"FirstName\").disable();\n            this.DriverForm.get(\"LastName\").disable();\n            this.DriverForm.get(\"Email\").disable();\n        }\n        if (driver.TrailerType != null) {\n            var trailerTypesToBind = this.TrailerTypeList.filter(t => driver.TrailerType.indexOf(t.Id) != -1);\n            this.DriverForm.controls.SelectedTrailerTypes.setValue(trailerTypesToBind);\n        }\n\n        if (driver.Regions != null) {\n            var regionsToBind = this.RegionList.filter(t => driver.Regions.indexOf(t.Code) != -1);\n            this.DriverForm.controls.SelectedRegions.setValue(regionsToBind);\n        }\n\n        if (driver.LicenseTypeId != null)\n            this.DriverForm.controls.SelectedLicenseTypes.setValue(driver.LicenseTypeId);\n    }\n\n    submitForm() {\n        this.IsLoading = true;\n        this.driverService.postAddDriver(this.DriverForm.getRawValue()).subscribe(data => {\n            this.IsLoading = false;\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                closeSlidePanel();\n                this.clearForm();\n                this.onSaveDriverData.emit();\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    getRegions() {\n        this.IsLoading = true;\n        this.driverService.getRegions().subscribe(data => {\n            this.IsLoading = false;\n            this.RegionList = data as DropdownItem[];\n        });\n    }\n\n    clearForm() {\n        this.DriverForm.reset();\n        this.setDefaultValue();\n        this.DriverForm.get(\"FirstName\").enable();\n        this.DriverForm.get(\"LastName\").enable();\n        this.DriverForm.get(\"Email\").enable();\n    }\n\n    setDefaultValue() {\n        // this.DriverForm.get(\"DriverStatus\").patchValue(Status.Active);\n        this.DriverForm.get(\"Regions\").patchValue(null);\n        this.DriverForm.get(\"TrailerType\").patchValue(null);\n\n        this.IsOnboarded = false;\n    }\n\n    setSelectedDate(date: string) {\n        var _date = this.DriverForm.get('ExpiryDate');\n        if (_date.value != date) {\n            _date.setValue(date);\n        }\n    }\n\n    onLicenseTypeChange(licenseType: any) {\n        if (licenseType == null || licenseType == \"null\")\n            this.DriverForm.controls['SelectedLicenseTypes'].setErrors({ 'required': true });\n        else\n            this.DriverForm.controls['SelectedLicenseTypes'].setErrors(null);\n    }\n\n    formatContactNumber(contactNumber: string) {\n        if (contactNumber != null && contactNumber != '') {\n            contactNumber = contactNumber.split('-').join(\"\");\n            if (contactNumber.length == 10) {\n                contactNumber = contactNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\")\n\n                this.DriverForm.controls['ContactNumber'].setErrors(null);\n                this.DriverForm.get(\"ContactNumber\").patchValue(contactNumber);\n            }\n            else {\n                this.DriverForm.controls['ContactNumber'].setErrors({ 'incorrect': true });\n            }\n        }\n        else {\n            this.DriverForm.controls['ContactNumber'].setErrors(null);\n        }\n    }\n}\n","<form [formGroup]=\"DriverForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"sidePanel_overflow\">\r\n        <div class=\"col-sm-12\" id=\"driver-Form\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"hidden\" formControlName=\"DriverId\" /> <!--User table Id-->\r\n                        <input type=\"hidden\" formControlName=\"InvitedBy\" />\r\n                        <input type=\"hidden\" formControlName=\"UserId\" /> <!--Invited User table Id-->\r\n\r\n                        <label>First Name<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"FirstName\" />\r\n                        <div *ngIf=\"DriverForm.get('FirstName').invalid && DriverForm.get('FirstName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('FirstName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Last Name<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"LastName\" />\r\n                        <div *ngIf=\"DriverForm.get('LastName').invalid && DriverForm.get('LastName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('LastName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Company Name</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"CompanyName\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>E-mail<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" [ngClass]=\"{'pntr-none subSectionOpacity' : IsOnboarded}\" formControlName=\"Email\" />\r\n                        <div *ngIf=\"DriverForm.get('Email').invalid && DriverForm.get('Email').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('Email').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                            <div *ngIf=\"DriverForm.get('Email').errors.pattern\">\r\n                                Invalid email.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Contact Number</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"ContactNumber\" (change)=\"formatContactNumber($event.target.value)\" />\r\n                        <div *ngIf=\"DriverForm.get('ContactNumber').invalid && DriverForm.get('ContactNumber').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"!DriverForm.get('ContactNumber').valid || DriverForm.get('ContactNumber').errors?.pattern\">\r\n                                {{ContactNumberValidationMessage}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Licence Expiry Date<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control datepicker\" formControlName=\"ExpiryDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" (onDateChange)=\"setSelectedDate($event);\" />\r\n                        <div *ngIf=\"DriverForm.get('ExpiryDate').invalid && DriverForm.get('ExpiryDate').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('ExpiryDate').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Licence Number<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"LicenseNumber\" />\r\n                        <div *ngIf=\"DriverForm.get('LicenseNumber').invalid && DriverForm.get('LicenseNumber').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('LicenseNumber').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Licence Type<span class=\"color-maroon\">*</span></label>\r\n                        <select class=\"form-control\" formControlName=\"SelectedLicenseTypes\">\r\n                            <option [value]=\"null\">Select</option>\r\n                            <option *ngFor=\"let key of LicenceTypes\" [value]=\"key.Id\">{{key.Name}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"DriverForm.get('SelectedLicenseTypes').invalid && DriverForm.get('SelectedLicenseTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('SelectedLicenseTypes').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Trailer Type</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Type'\"\r\n                                                 [settings]=\"trailerDdlSettings\"\r\n                                                 formControlName=\"SelectedTrailerTypes\" [data]=\"TrailerTypeList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Region</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Region'\"\r\n                                                 [settings]=\"regionDdlSettings\" [data]=\"RegionList\"\r\n                                                 formControlName=\"SelectedRegions\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"IsFilldAuthorized\" formControlName=\"IsFilldAuthorized\">\r\n                            <label class=\"form-check-label\" for=\"IsFilldAuthorized\">TrueFill Inc. Compatible</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\"col-sm-12 text-right form-buttons\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearForm()\">\r\n            <button id=\"submit-driver-form\" type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-driver-management',\n  templateUrl: './driver-management.component.html',\n  styleUrls: ['./driver-management.component.css']\n})\nexport class DriverManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\r\n    <app-view-driver #viewDriver></app-view-driver>\r\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CreateDriverComponent } from '../create-driver/create-driver.component';\r\nimport { DriverViewModel, DriverShiftModel, ShiftDetailModel } from '../../models/DriverManagementModel';\r\nimport { DriverService } from '../../services/driver.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport * as moment from 'moment';\r\nimport { Driver } from '../../../shared-components/sendbird/sendbirdCommon';\r\n\r\n@Component({\r\n    selector: 'app-view-driver',\r\n    templateUrl: './view-driver.component.html',\r\n    styleUrls: ['./view-driver.component.css']\r\n})\r\nexport class ViewDriverComponent implements OnInit {\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptionsOnboarded: any = {};\r\n    dtTriggerOnboarded: Subject<any> = new Subject();\r\n    public InvitedDrivers: DriverViewModel[] = [];\r\n    public OnboardedDrivers: DriverViewModel[] = [];\r\n    public HeaderText: string;\r\n    public IsLoading: boolean = false;\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    public ShiftInfo: DriverShiftModel = new DriverShiftModel();\r\n    public IsShowShiftInfoPopup: boolean = false;\r\n    public setDeleteDriverInfo: DriverViewModel;\r\n    public IsLoadingdriverDelete: boolean = false;\r\n    public IsScheduleExists: boolean = false;\r\n    DriverShiftDetailList: any[] = [];\r\n\r\n    constructor(private driverService: DriverService, private regionService: RegionService) {\r\n    }\r\n    @ViewChild(CreateDriverComponent) CreateDriver: CreateDriverComponent;\r\n\r\n    ngOnInit() {\r\n        this.HeaderText = 'Create Driver';\r\n        this.initializeInvitedDrivers();\r\n        this.initializeOnboardedDrivers();\r\n        this.getAllDrivers();\r\n    }\r\n\r\n    initializeInvitedDrivers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Driver Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Driver Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    initializeOnboardedDrivers() {\r\n        let exportOnboardedColumns = { columns: ':visible' };\r\n        this.dtOptionsOnboarded = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportOnboardedColumns },\r\n                { extend: 'csv', title: 'Driver Details', exportOptions: exportOnboardedColumns },\r\n                { extend: 'pdf', title: 'Driver Details', orientation: 'landscape', exportOptions: exportOnboardedColumns },\r\n                { extend: 'print', exportOptions: exportOnboardedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    getAllDrivers() {\r\n        this.IsLoading = true;\r\n        this.driverService.getAllDrivers().subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.InvitedDrivers = data.InvitedDrivers as DriverViewModel[];\r\n            this.OnboardedDrivers = data.OnboardedDrivers as DriverViewModel[];\r\n            this.dtTrigger.next();\r\n            this.dtTriggerOnboarded.next();\r\n        });\r\n    }\r\n\r\n    editDriver(driver: DriverViewModel, isOnboarded: boolean) {\r\n        if (this.CreateDriver != undefined) {\r\n            this.CreateDriver.IsOnboarded = isOnboarded;\r\n            this.CreateDriver.loadDriverDetail(driver);\r\n        }\r\n    }\r\n\r\n    deleteDriver() {\r\n        if (this.setDeleteDriverInfo != null) {\r\n            this.IsLoadingdriverDelete = true;\r\n            this.IsLoading = true;\r\n            this.driverService.postDeleteDriver(this.setDeleteDriverInfo).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.IsLoadingdriverDelete = false;\r\n                this.getDriverDetails();\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n                $(\"#btnDriverCancel\").click();\r\n            });\r\n        }\r\n    }\r\n\r\n    changeDriverStatus(driver: any) {\r\n        var isActive = driver.IsActive;\r\n        var userId = driver.UserId;\r\n        this.IsLoading = true;\r\n        this.driverService.changeDriverStatus(userId, isActive).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    async showDriverShifts(driver: DriverViewModel) {\r\n        var driverIds = driver.DriverId.toString();\r\n        this.IsShowShiftInfoPopup = true;\r\n        this.IsLoading = true;\r\n        this.regionService.getShiftByDrivers(driverIds, 0).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data != null && data.Result) {\r\n                this.ShiftInfo.DriverName = driver.FirstName + \" \" + driver.LastName;\r\n                this.DriverShiftDetailList = data.Result;\r\n                this.setShiftInfo();\r\n            }\r\n            else {\r\n                this.ShiftInfo = new DriverShiftModel();\r\n            }\r\n        });\r\n    }\r\n\r\n    closeDriverShiftsPopup() {\r\n        this.IsShowShiftInfoPopup = false;\r\n        this.ShiftInfo = new DriverShiftModel();\r\n    }\r\n\r\n    clearPanelControls() {\r\n        if (this.CreateDriver != undefined) {\r\n            this.CreateDriver.clearForm();\r\n        }\r\n    }\r\n\r\n    setPanelHeader(headerText: string) {\r\n        this.HeaderText = headerText;\r\n    }\r\n\r\n    getDriverDetails() {\r\n        this.getAllDrivers();\r\n        $(\"#invited-driver-grid-datatable\").DataTable().clear().destroy();\r\n        $(\"#onboarded-driver-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    async setShiftInfo() {\r\n        this.DriverShiftDetailList.forEach(async (driver) => {\r\n            for await (let shift of driver.ScheduleList) {\r\n                var shiftDetail = new ShiftDetailModel();\r\n                shiftDetail.FromDate = moment(shift.StartDate).format('MM/DD/YYYY');\r\n                shiftDetail.ToDate = moment(shift.EndDate).format('MM/DD/YYYY');\r\n                shiftDetail.ShiftFrom = shift.ShiftDetail.StartTime;\r\n                shiftDetail.ShiftTo = shift.ShiftDetail.EndTime;\r\n                this.ShiftInfo.Shifts.push(shiftDetail);\r\n            }\r\n        });\r\n    }\r\n    setdeleteDriver(driverInfo: DriverViewModel) {\r\n        this.IsScheduleExists = false;\r\n        this.setDeleteDriverInfo = driverInfo;\r\n        if (driverInfo.IsScheduleExists) {\r\n            this.IsScheduleExists = true;\r\n        }\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12 col-sm-12\" id=\"addDriver\">\r\n        <h4 class=\"pt0 pull-left mb5\">Invited</h4>\r\n        <a (click)=\"setPanelHeader('Add Driver')\" onclick=\"slidePanel('#driver-panel','35%')\" class=\"fs18 pull-left ml15\">\r\n            <i class=\"fa fa-plus-circle fs18 mt2 pull-left\"></i><span class=\"fs14 pull-left\">Add Driver</span>\r\n        </a>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-invited-driver-grid\" class=\"table-responsive\">\r\n                        <!--Enum - GridName.InvitedDriverSummaryGrid - 17-->\r\n                        <table id=\"invited-driver-grid-datatable\" data-gridname=\"17\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"InvitedDriverName\">Driver Name</th>\r\n                                    <th data-key=\"InvitedEmail\">Email</th>\r\n                                    <th data-key=\"InvitedContactNumber\">Contact Number</th>\r\n                                    <th data-key=\"InvitedCompanyName\">Company Name</th>\r\n                                    <th data-key=\"InvitedLicenseNumber\">Licence Number</th>\r\n                                    <th data-key=\"InvitedLicenseType\">Licence Type</th>\r\n                                    <th data-key=\"InvitedExpiryDate\">Expiration Date</th>\r\n                                    <th data-key=\"InvitedTrailerTypes\">Trailer Type(s)</th>\r\n                                    <th data-key=\"InvitedFilldAuthorized\">TrueFill Inc.Compatible</th>\r\n                                    <th data-key=\"InvitedShiftInfo\">Shift Info</th>\r\n                                    <th data-key=\"InvitedAction\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let driver of InvitedDrivers\">\r\n                                    <td>\r\n                                        <a (click)=\"setPanelHeader('Edit Driver');editDriver(driver, false);\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','30%')\">\r\n                                            <span>{{driver.FirstName}} {{driver.LastName}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{{driver.Email}}</td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ContactNumber != null\">{{driver.ContactNumber}}</span>\r\n                                        <span *ngIf=\"driver.ContactNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.CompanyName != null\">{{driver.CompanyName}}</span>\r\n                                        <span *ngIf=\"driver.CompanyName == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.LicenseNumber != null\">{{driver.LicenseNumber}}</span>\r\n                                        <span *ngIf=\"driver.LicenseNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType != null\">{{driver.DisplayLicenseType}}</span>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ExpiryDate != null\">{{driver.ExpiryDate}}</span>\r\n                                        <span *ngIf=\"driver.ExpiryDate == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes != null\">{{driver.DisplayTrailerTypes}}</span>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized != null\">{{driver.IsFilldAuthorized?'Yes':'No'}}</span>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized == null\">No</span>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" (click)=\"showDriverShifts(driver)\" data-toggle=\"modal\" data-target=\"#driverShiftsModal\">\r\n                                            <i class=\"far fa-clock-o color-blue fs16\" alt=\"Shifts\" title=\"Shifts\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" data-toggle=\"modal\" data-target=\"#confirm-delete-driver\" (click)=\"setdeleteDriver(driver)\"><i class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\" title=\"Delete\"></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt15\">\r\n    <div class=\"col-md-12 mt10\">\r\n        <h4 class=\"pt0 pull-left mb5\">Onboarded</h4>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-onboarded-driver-grid\" class=\"table-responsive\">\r\n                        <!--Enum - GridName.OnboardedDriverSummaryGrid - 22-->\r\n                        <table id=\"onboarded-driver-grid-datatable\" data-gridname=\"22\" datatable [dtOptions]=\"dtOptionsOnboarded\" [dtTrigger]=\"dtTriggerOnboarded\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"OnboardedDriverName\">Driver Name</th>\r\n                                    <th data-key=\"OnboardedEmail\">Email</th>\r\n                                    <th data-key=\"OnboardedContactNumber\">Contact Number</th>\r\n                                    <th data-key=\"OnboardedCompanyName\">Company Name</th>\r\n                                    <th data-key=\"OnboardedLicenseNumber\">Licence Number</th>\r\n                                    <th data-key=\"OnboardedLicenseType\">Licence Type</th>\r\n                                    <th data-key=\"OnboardedExpiryDate\">Expiration Date</th>\r\n                                    <th data-key=\"OnboardedTrailerTypes\">Trailer Type</th>\r\n                                    <th data-key=\"InvitedFilldAuthorized\">TrueFill Inc.Compatible</th>\r\n                                    <th data-key=\"OnboardedShiftInfo\">Shift Info</th>\r\n                                    <th data-key=\"OnboardedAction\">Active</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let driver of OnboardedDrivers\">\r\n                                    <td>\r\n                                        <a (click)=\"setPanelHeader('Edit Driver');editDriver(driver, true);\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','30%')\">\r\n                                            <span>{{driver.FirstName}} {{driver.LastName}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{{driver.Email}}</td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ContactNumber != null\">{{driver.ContactNumber}}</span>\r\n                                        <span *ngIf=\"driver.ContactNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.CompanyName != null\">{{driver.CompanyName}}</span>\r\n                                        <span *ngIf=\"driver.CompanyName == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.LicenseNumber != null\">{{driver.LicenseNumber}}</span>\r\n                                        <span *ngIf=\"driver.LicenseNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType != null\">{{driver.DisplayLicenseType}}</span>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ExpiryDate != null\">{{driver.ExpiryDate}}</span>\r\n                                        <span *ngIf=\"driver.ExpiryDate == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes != null\">{{driver.DisplayTrailerTypes}}</span>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized != null\">{{driver.IsFilldAuthorized?'Yes':'No'}}</span>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized == null\">No</span>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" (click)=\"showDriverShifts(driver)\" data-toggle=\"modal\" data-target=\"#driverShiftsModal\">\r\n                                            <i class=\"far fa-clock-o color-blue fs16\" alt=\"Shifts\" title=\"Shifts\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <input type=\"checkbox\" (confirm)=\"changeDriverStatus(driver)\" [(ngModel)]=\"driver.IsActive\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"driver-panel\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15 pb0 mb10\">\r\n            <a class=\"ml15 close-panel\" (click)=\"clearPanelControls()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div>\r\n            <app-create-driver #createDriver (onSaveDriverData)=\"getDriverDetails()\"></app-create-driver>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"driverShiftsModal\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowShiftInfoPopup\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header pt10 pb5\">\r\n                <h4 class=\"modal-title pt0\">{{ShiftInfo.DriverName}}</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"closeDriverShiftsPopup();\">&times;</button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Shift</th>\r\n                            <th>From Date</th>\r\n                            <th>To Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let shift of ShiftInfo.Shifts\">\r\n                            <td>{{shift.ShiftFrom}} - {{shift.ShiftTo}}</td>\r\n                            <td>{{shift.FromDate}}</td>\r\n                            <td>{{shift.ToDate}}</td>\r\n                        </tr>\r\n                        <tr *ngIf=\"ShiftInfo.Shifts == null || ShiftInfo.Shifts.length == 0\">\r\n                            <td colspan=\"3\" class=\"text-center pa5\">No schedule found</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"closeDriverShiftsPopup()\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-driver\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"IsLoadingdriverDelete\" id=\"deleteDriverLoading\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\" *ngIf=\"IsScheduleExists\">Driver schedule exists.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg btnDriverYes\" (click)=\"deleteDriver()\">Confirm</button>\r\n                    <button type=\"button\" id=\"btnDriverCancel\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DriverScheduleCalenderComponent } from './driver-schedule-calender/driver-schedule-calender.component';\nimport { DriverManagementComponent } from './driver-management/driver-management.component';\nimport { DriverComponent } from './driver/driver.component';\n\nconst routeDriver: Routes = [\n  {\n    path: '',\n    component: DriverComponent\n  },\n  {\n    path: 'View',\n    component: DriverManagementComponent\n  },\n  {\n    path: 'schedule',\n    component: DriverScheduleCalenderComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routeDriver)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class DriverScheduleRoutingModule { }\n","import { Component, ViewChild, TemplateRef, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours } from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarView } from 'angular-calendar';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport * as moment from 'moment';\nimport { DriverSchedule, DriverScheduleMapping, ConflictDates } from '../models/DriverSchedule';\nimport { Declarations } from '../../declarations.module';\nimport { RegionModel } from '../../company-addresses/region/model/region';\nimport { RouteInfoService } from 'src/app/carrier/service/route-info.service';\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\nimport { RegionScheduleMappingViewModel } from '../models/regionSchedule';\nimport { DeleteDriverSchedule } from 'src/app/app.enum';\n\n@Component({\n    selector: 'app-driver-schedule-calender',\n    templateUrl: './driver-schedule-calender.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./driver-schedule-calender.component.css']\n})\nexport class DriverScheduleCalenderComponent implements OnInit {\n\n    public CalendarView = CalendarView;\n    public isShowCalender = true;\n    public IsLoading = false;\n    public DriverList: DropdownItem[];\n    public RegionList: DropdownItem[];\n    public DriverRegionList: any = [];\n    driverIds = '';\n    public SelectedDriverList = [];\n    public multiselectSettingsById: IDropdownSettings;\n    public multiselectDateSettingsById: IDropdownSettings;\n    public multiselectShiftById: IDropdownSettings;\n    public singleselectSettingsById: IDropdownSettings;\n    isShowEditPannel = false;\n    isApplyAll = false; //edit schedule\n    DriverShiftDetailList: any[] = [];\n    RepeatList: any[] = [];\n    DateList: any[] = [];\n    ShiftList: any[] = [];\n    regionList: any[] = [];\n    TrailerList: any[] = [];\n    RouteList: any[] = [];\n    driverSchedule: DriverSchedule = {};\n    driverScheduleMapping: DriverScheduleMapping = {};\n    repeat: number = 1\n    customDates: any = [];\n    CurrentScheduleId: '';\n    //min max date\n    MinStartDate = new Date();\n    MaxStartDate = new Date();\n    startDateEnable: boolean;\n    view: CalendarView = CalendarView.Month;\n    viewDate: Date = new Date();\n    //view \n    Selectedevent = [];\n    SelectedDate: any;\n    //end      \n    IsUpdateForMultiple: any = false;\n    scheduleType = 0;\n    refresh: Subject<any> = new Subject();\n    //evt: CalendarEvent[] = [];\n    evt: any = [];\n    activeDayIsOpen: boolean = false;\n    RegionShiftDetailList: any[] = []\n\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 1;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n\n    //#region  Edit & Delete\n    public _openedEditPanel: boolean = false;\n    IsSheduleEdit = false;\n    eFromDate: any;\n    eToDate: any;\n    public Selectedregion?: any = [];\n    public SelectedDriver?: any = [];\n    public IsShiftRepeted: boolean = false;\n    selectedType: any = 0;\n    public IsConfirmDelete: boolean = false;\n    public deleteOption: any = 1;\n    public eventDelete: any;\n    public DriverId: string;\n    public hideDeleteRange: boolean = false;\n    public ConflictDateList = [];\n    public conflictDates: any;\n    public IsShowConflictTable: boolean = false;\n    //#endregion\n\n    constructor(public regionService: RegionService, private routeService: RouteInfoService) {\n\n    }\n    ngOnInit() {\n        this.getDrivers();\n        //  this.getShifts();\n        this.getRegions();\n        this.init();\n        this.MaxStartDate.setMonth(this.MaxStartDate.getMonth() + 2);\n        //this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 10);\n    }\n\n    ngAfterViewInit(): void {\n        this.IsLoading = false;\n    }\n\n    init() {\n        this.multiselectSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n\n        this.singleselectSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false,\n            disabledField: \"true\"\n        }\n\n        this.multiselectShiftById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n        this.multiselectDateSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: true\n        }\n    }\n\n    public dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n\n        if (isSameMonth(date, this.viewDate)) {\n            if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\n                this.activeDayIsOpen = false;\n            } else {\n\n                this.Selectedevent = events;\n                this.SelectedDate = moment(date).format('MM/DD/YYYY');\n                let element: HTMLElement = document.getElementById('idViewDay') as HTMLElement;\n                element.click();\n                //this.activeDayIsOpen = true;\n\n            }\n            this.viewDate = date;\n        }\n    }\n\n    async setView(view: CalendarView) {\n        this.view = view;\n        this.setNextMonthEvents(this.viewDate, this.view);\n    }\n\n    public closeOpenMonthViewDay() {\n        this.activeDayIsOpen = false;\n    }\n    private getDrivers(): void {\n        this.regionService.getDrivers()\n            .subscribe((drivers: DropdownItem[]) => {\n                this.DriverList = drivers;\n            });\n    }\n\n    // public onRegionSelect($event) {\n\n    //     var region = this.regionList.find(f => f.Id == $event.Id);\n    //     this.TrailerList = region.Trailers.map(res => { return { Id: res.Code, Name: `${res.Name}` } });\n    //     this.DriverList = region.Drivers.map(res => { return { Id: res.Id, Name: `${res.Name}` } });\n    //     this.getRoutes(region.Id);\n\n    //     this.getRegionScheduls(region) \n\n    // }\n\n    private getRegionScheduls(region) {\n        this.regionService.getSchedulesByRegion(region.Id, this.scheduleType)\n            .subscribe((regions: RegionScheduleMappingViewModel[]) => {\n                this.RegionShiftDetailList = regions;\n            });\n    }\n\n\n    private getRoutes(regionId): void {\n        this.routeService.getRoutesByRegion(regionId)\n            .subscribe((routes: RouteInformationModel[]) => {\n                this.getRouteDropDown(routes);\n            });\n    }\n\n    private getRouteDropDown(routeList): void {\n        this.RouteList = routeList.ResponseData\n    }\n\n    async onDriverSelect($event?) {\n        this.regionService.onLoadingChanged.next(true);\n        this.evt = [];\n        let driverIds = [];\n        this.SelectedDriverList.forEach(res => { driverIds.push(res.Id) });\n        let drivers = driverIds.join();\n        if (driverIds.length > 0) {\n            this.regionService.getShiftByDrivers(drivers, this.scheduleType)\n                .subscribe((data) => {\n                    if (data.Result) {\n                        this.DriverShiftDetailList = [];\n                        this.DriverShiftDetailList = data.Result;\n                        this.setNextMonthEvents(this.viewDate, 'Today');\n                    }\n                    //let element: HTMLElement = document.getElementById('idToday') as HTMLElement;\n                    // element.click();\n                    this.IsLoading = false;\n                });\n        }\n        this.regionService.onLoadingChanged.next(false);\n    }\n\n\n\n    async onDriverDeSelect($event) {\n        this.isShowCalender = false;\n        this.evt = await this.evt.filter(f => f.driverId != $event.Id);\n        //  this.DriverShiftDetailList = await this.DriverShiftDetailList.filter(f => f.DriverId != $event.Id);\n        this.isShowCalender = true;\n    }\n\n    async setEvents(mnth?, year?) {\n        this.regionService.onLoadingChanged.next(true);\n        this.DriverShiftDetailList.forEach(async (driver) => {\n            let color = await this.getRandomColor();\n            let driverShortName = this.getShortDriverName(driver.DriverName);\n\n            for await (let shift of driver.ScheduleList) {\n                let startDate = this.changeTimeFormat(shift.ShiftDetail.StartTime);\n                let endDate = this.changeTimeFormat(shift.ShiftDetail.EndTime);\n                //previous and next logic\n                if (year) {\n                    startDate = new Date(new Date(new Date(new Date(startDate).setMonth(mnth))).setFullYear(year)).getTime();\n                    endDate = new Date(new Date(new Date(new Date(endDate).setMonth(mnth))).setFullYear(year)).getTime();\n                }\n                //end\n\n                if (this.view != CalendarView.Month && startDate > endDate) // if start time is greater than end time then add 1 day in end time\n                {\n                    endDate = addDays(new Date(endDate), 1).getTime();\n                }\n\n                // creating template for event schedule\n                var event = {\n                    mappingId: driver.Id,\n                    repeatEvery: shift.RepeatEveryDay,\n                    typeId: shift.TypeId,\n                    id: shift.Id,\n                    repeatDayList: shift.RepeatDayList,\n                    shiftId: shift.ShiftId,\n                    regionName: shift.ShiftDetail.RegionName,\n                    driverId: driver.DriverId,\n                    driverName: driver.DriverName,\n                    driverShortName: driverShortName,\n                    shiftFrom: shift.ShiftDetail.StartTime,\n                    shiftTo: shift.ShiftDetail.EndTime,\n                    fromDate: moment(shift.StrStartDate).format('MM/DD/YYYY'),\n                    toDate: moment(shift.StrEndDate).format('MM/DD/YYYY'),\n                    start: new Date(startDate),  // day wise start date time\n                    end: new Date(endDate),       // day wise end date time\n                    title: `<table class=\"table \"> <tr><td> Driver - <strong>${driver.DriverName}</strong></td> <td><strong>${shift.ShiftDetail.StartTime} - ${shift.ShiftDetail.EndTime}</strong></td></tr></table> `,\n                    color: color,\n                    resizable: {\n                        beforeStart: true,\n                        afterEnd: true\n                    },\n                    draggable: false,\n                    isUnplanedSchedule: driver.IsUnplanedSchedule,\n                    description: shift.Description,\n                }\n                //end\n                //this.evt.push(event)\n                let currentDate = new Date().getDate();\n                let eDate = new Date((moment(shift.StrEndDate).toLocaleString())).setHours(23, 59, 59, 0);\n                let sDate = new Date((moment(shift.StrStartDate).toLocaleString())).setHours(0, 0, 0, 0);\n                let date = new Date(new Date().setMonth(mnth)).setFullYear(year);\n                let currentMonthLastDate = await this.daysInMonth(mnth + 1, year);\n\n                for (let i = -currentDate; i < ((currentMonthLastDate + 1) - currentDate); i++) {\n                    if (new Date(sDate).getTime() <= addDays(new Date(date), i).getTime() && new Date(eDate).getTime() >= addDays(new Date(date), i).getTime() && shift.RepeatDayList && shift.RepeatDayStringList.filter(dt => moment(dt).format('MM/DD/YYYY') == moment(addDays(new Date(event.start), i)).format('MM/DD/YYYY')).length > 0)\n                        await this.addEventShift(event, i);\n                }\n            }\n\n        })\n        this.regionService.onLoadingChanged.next(false);\n    }\n\n\n\n\n    async addEventShift(event, i) {\n        let evt = { ...event };\n        evt.start = addDays(new Date(event.start), i);\n        evt.end = addDays(new Date(event.end), i);\n        this.evt.push(evt);\n    }\n\n    async daysInMonth(month, year) {\n        return new Date(year, month, 0).getDate();\n    }\n    private changeTimeFormat(time) {\n        //var time = '06:30 PM';\n        var hours = Number(time.match(/^(\\d+)/)[1]);\n        var minutes = Number(time.match(/:(\\d+)/)[1]);\n        var AMPM = time.match(/\\s(.*)$/)[1];\n        if (AMPM == \"PM\" && hours < 12) hours = hours + 12;\n        if (AMPM == \"AM\" && hours == 12) hours = hours - 12;\n        var sHours = hours.toString();\n        var sMinutes = minutes.toString();\n        if (hours < 10) sHours = \"0\" + sHours;\n        if (minutes < 10) sMinutes = \"0\" + sMinutes;\n        var date = (new Date(new Date().setHours(+sHours)).setMinutes(+sMinutes));\n        return date;\n    }\n\n    async getRandomColor() {\n        var letters = 'BCDEF'.split('');\n        var color = '#';\n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * letters.length)];\n        }\n        return { primary: color, secondary: color };\n    }\n\n    async setNextMonthEvents(date, event) {\n        this.evt = [];\n        await this.setEvents(new Date(date).getMonth(), new Date(date).getFullYear());\n    }\n\n    async OnScheduleAdded($event) {\n        this.regionService.onLoadingChanged.next(false);\n        this.IsLoading = false;\n        if ($event) {\n            this.scheduleType = 0;\n            this.SelectedDriverList.forEach(res => {\n                let cnt = $event.findIndex(x => x.Id == res.Id)\n                if (cnt < 0)\n                    $event.push(res)\n            });\n            this.SelectedDriverList = $event.slice();\n            this.onDriverSelect();\n        }\n    }\n    //edit\n\n    async rmvSchedule(event) {\n        this.eventDelete = event;\n        this.AssignVeriables(event);\n        this.IsConfirmDelete = true;\n    }\n\n    async updateCurrentSchedule() {\n        if (this.driverSchedule.selectedShifts.length == 0) {\n            Declarations.msgerror('Select shift', undefined, undefined);\n            return false;\n        }\n        //rmv todays\n\n        this.driverScheduleMapping = await this.DriverShiftDetailList.find(f => f.Id == this.driverScheduleMapping.Id);\n        if (this.driverScheduleMapping != null && this.driverScheduleMapping.ScheduleList.length > 0) {\n            this.driverScheduleMapping.ScheduleList.forEach(f => {\n                if (f.IsActive = true && f.Id == this.driverSchedule.Id && f.ShiftId == this.driverSchedule.ShiftId) {\n                    if (f.RepeatDayList != null && f.RepeatDayList.length > 0) {\n                        if (f.RepeatDayList.length == 1) {\n                            delete f.RepeatDayList[0];\n                            f.RepeatDayList = [];\n                        } else {\n                            let indexof = f.RepeatDayList.findIndex(x => moment(x).format('MM/DD/YYYY') == moment(this.sdate).format('MM/DD/YYYY'));\n                            delete f.RepeatDayList[indexof];\n                            let reOrder = []\n                            f.RepeatDayList.forEach(r => { reOrder.push(r) });\n                            f.RepeatDayList = reOrder;\n                        }\n                    }\n                }\n            });\n\n            let getCurrentSelectedShift = this.driverSchedule.selectedShifts[0].Id;\n            let checkShift = this.driverScheduleMapping.ScheduleList.filter(x => x.IsActive = true && x.ShiftId == getCurrentSelectedShift && x.RepeatDayList == null);\n            if (checkShift != null && checkShift.length > 0) {\n                let index = this.driverScheduleMapping.ScheduleList.findIndex(x => x.IsActive = true && x.ShiftId == getCurrentSelectedShift && x.RepeatDayList == null);\n                this.driverScheduleMapping.ScheduleList[index].RepeatDayList = [];\n                this.driverScheduleMapping.ScheduleList[index].RepeatDayList.push(moment(this.sdate).toDate());\n                this.driverScheduleMapping.ScheduleList[index].StartDate = moment(this.sdate).toDate();\n                this.driverScheduleMapping.ScheduleList[index].EndDate = moment(this.sdate).toDate();\n            }\n            else {\n                this.driverSchedule.RepeatDayList = [];\n                this.driverSchedule.RepeatDayList.push(moment(this.SelectedDate).toDate());\n                this.driverScheduleMapping.ScheduleList.push({ Id: `${this.driverScheduleMapping.DriverId}_${new Date().getTime()}`, IsActive: true, StartDate: moment(this.SelectedDate).toDate(), EndDate: moment(this.SelectedDate).toDate(), RepeatDayList: this.driverSchedule.RepeatDayList, ShiftId: getCurrentSelectedShift })\n            }\n        }\n        for await (let item of this.driverScheduleMapping.ScheduleList) {\n            if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                var list = [];\n                for await (let repeat of item.RepeatDayList) {\n                    list.push(moment(repeat).toDate());\n                }\n                item.RepeatDayList = list;\n            }\n\n        }\n        this.update(this.driverScheduleMapping);\n    }\n\n    sdate: any;\n    edate: any;\n    async editSchedule(event) {\n        this.DriverRegionList = [];\n        let currentDate = new Date((moment().toLocaleString())).setHours(0, 0, 0, 0);\n        if (new Date(event.toDate).getTime() < new Date(currentDate).getTime()) {\n            Declarations.msgerror('You cannot edit past records.', undefined, undefined);\n        } else {\n            this._editToggleOpened(true);\n            this.TypeCheck(event);\n            this.AssignVeriables(event);\n        }\n    }\n\n    async AssignVeriables(event) {\n        this.deleteOption = this.deleteOption ? this.deleteOption : 1;\n        this.DriverRegionList = [];\n        let currentDate = new Date((moment().toLocaleString())).setHours(0, 0, 0, 0);\n        for await (let item of this.regionList) {\n            if (item.Drivers.find(f => f.Id == event.driverId)) {\n                var dRegion = { Id: 0, Name: \"\" };\n                dRegion.Id = item.Id;\n                dRegion.Name = item.Name;\n                this.DriverRegionList.push(dRegion)\n                this.Selectedregion = this.DriverRegionList;\n                this.SelectedDriver = item.Drivers.filter(f => f.Id == event.driverId);\n                this.ShiftList = item.Shifts.map(res => { return { Id: res.Id, Name: `${res.StartTime} - ${res.EndTime}` } });\n            }\n        }\n        this.driverSchedule.selectedShifts = this.ShiftList.filter(f => f.Id == event.shiftId);           // this.isShowEditPannel = true;\n        this.eFromDate = moment(event.start).format('MM/DD/YYYY');\n        this.eToDate = moment(event.toDate).format('MM/DD/YYYY');\n        this.driverScheduleMapping.Id = event.mappingId;\n        this.driverSchedule.Id = event.Id;\n        this.driverSchedule.ShiftId = event.shiftId;\n        this.driverScheduleMapping.DriverId = event.driverId;\n        this.DriverId = event.driverId;\n        this.driverScheduleMapping.DriverName = event.driverName;\n        this.sdate = moment(event.start).format('MM/DD/YYYY');//this.SelectedDate;\n        this.edate = moment(event.toDate).format('MM/DD/YYYY');\n        this.IsSheduleEdit = true;\n        //this.SelectedDate = moment(this.sdate).format('MM/DD/YYYY');\n        this.IsUpdateForMultiple = false;\n        if (this.eFromDate < this.eToDate) {\n            this.IsUpdateForMultiple = true;\n        }\n        this.hideDeleteRange = false;\n        if (new Date(this.sdate).getTime() == new Date(this.eToDate).getTime()) {\n\n            this.hideDeleteRange = true;\n        }\n        if (new Date(this.sdate).getTime() < new Date(currentDate).getTime()) {\n\n            this.startDateEnable = true;\n        }\n        this.driverSchedule.Id = event.id;\n        this.driverSchedule.RepeatDayList = event.repeatDayList;\n        this.ConflictDateList = [];\n        this.IsShowConflictTable = false;\n\n        this.InitializeDates();\n        if (this.selectedType == 4\n            && event.repeatDayList != null\n            && event.repeatDayList.length > 0) {\n\n            this.customDates = [];\n            let chCustomDates = [];\n            let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n            event.repeatDayList.forEach(x => {\n                let xdate = moment(x).toDate();\n                let dt = `${moment(xdate).format('MM/DD/YYYY')} (${days[new Date(xdate).getDay()]})`;\n                let sdt = this.DateList.find(x => x.Name == dt);\n                if (sdt != null)\n                    chCustomDates.push({ Id: sdt.Id, Name: sdt.Name });\n            })\n            this.customDates = chCustomDates;\n        }\n    }\n    private TypeCheck(event: any) {\n        this.selectedType = event.typeId ? event.typeId : \"1\";\n        this.repeat = event.repeatEvery ? event.repeatEvery : \"1\";\n    }\n    async UpdateSchedule() {\n\n        if (this.sdate && this.edate) {\n            this.driverSchedule.StartDate = new Date(moment(this.sdate).toDate().getTime());\n            this.driverSchedule.EndDate = new Date(moment(this.edate).toDate().getTime());\n        } else {\n            Declarations.msgerror('Select valid dates', undefined, undefined);\n            return false;\n        }\n        if (moment(this.sdate) > moment(this.edate)) {\n            Declarations.msgerror('From date cannot less than end date', undefined, undefined);\n            return false;\n        }\n        if (this.driverSchedule.selectedShifts.length < 0) {\n            Declarations.msgerror('Please select shift', undefined, undefined);\n            return false;\n        }\n        this.InitializeDates();\n        if (this.driverSchedule.selectedShifts.length == 0 || !this.driverSchedule.StartDate || !this.driverSchedule.EndDate || this.DateList.length == 0) { return false; }\n        //update logic\n        else {\n            let selectedDates = []\n            if (this.selectedType == 4)\n                selectedDates = this.customDates;\n            else\n                selectedDates = this.DateList;\n\n            let ShiftId = this.driverSchedule.selectedShifts[0].Id;\n            let scheduleList = {};\n            let newScheduleId = null;\n            this.driverScheduleMapping = this.DriverShiftDetailList.find(f => f.Id == this.driverScheduleMapping.Id);\n\n            let CurrentDriverShiftDetailList = this.DriverShiftDetailList.filter(f => f.DriverId == this.SelectedDriver[0].Id);\n            let driverScheduleMappingIndex = CurrentDriverShiftDetailList.findIndex(f => f.Id == this.driverScheduleMapping.Id);\n\n            if (this.driverScheduleMapping != null && this.driverScheduleMapping.ScheduleList != null && this.driverScheduleMapping.ScheduleList.length > 0) {\n\n                let getCurrent = this.driverScheduleMapping.ScheduleList.find(x => x.Id == this.driverSchedule.Id && x.ShiftId == this.driverSchedule.ShiftId && x.IsActive);\n                let getIndex = this.driverScheduleMapping.ScheduleList.findIndex(x => x.Id == this.driverSchedule.Id && x.ShiftId == this.driverSchedule.ShiftId && x.IsActive)\n                //Update current one\n\n                if (this.driverSchedule.ShiftId != ShiftId && getCurrent != null && getCurrent.RepeatDayList != null) {\n\n                    // \n\n                    let rpDayList = [];\n                    getCurrent.RepeatDayList.forEach(pre => {\n                        let idx = selectedDates.findIndex(x => moment(x.Id).format('MM/DD/YYYY') == moment(pre).format('MM/DD/YYYY'));\n                        if (idx < 0)\n                            rpDayList.push(pre);\n                    })\n                    getCurrent.RepeatDayList = [];\n                    getCurrent.RepeatDayList = rpDayList;\n                }\n                else {\n                    if (getCurrent != null && getCurrent.RepeatDayList != null) {\n                        let rpDayList = [];\n                        var loop = new Date(this.driverSchedule.StartDate);\n                        let cnt = 0\n                        while (loop <= this.driverSchedule.EndDate) {\n                            var newDate = loop.setDate(loop.getDate() + cnt);\n                            if (!(newDate > this.driverSchedule.EndDate.setDate(this.driverSchedule.EndDate.getDate()))) {\n                                getCurrent.RepeatDayList = getCurrent.RepeatDayList.filter(x => moment(x).format('MM/DD/YYYY') != moment(newDate).format('MM/DD/YYYY'));\n                                if (cnt != 1) {\n                                    cnt++\n                                }\n                            }\n                        }\n                        selectedDates.forEach(element => getCurrent.RepeatDayList.push(\"/Date(\" + element.Id.setDate(element.Id.getDate()) + \")\"));\n                        let olst = [];\n                        getCurrent.RepeatDayList.forEach(x => olst.push(moment(x).format('DD/MM/YYYY')));\n                        olst.sort(); getCurrent.RepeatDayList = []; getCurrent.RepeatDayList = olst;\n                        olst = []; getCurrent.RepeatDayList.forEach(x => {\n                            var dt = x.split('/');\n                            let oDt = dt[1] + '/' + dt[0] + '/' + dt[2];\n                            let eDt = moment(oDt).toDate()\n                            olst.push(eDt.setDate(eDt.getDate()));\n                        });\n                        getCurrent.RepeatDayList = olst;\n                        olst = []; getCurrent.RepeatDayList.forEach(x => olst.push(moment(x).toDate()));\n                        getCurrent.RepeatDayList = olst;\n                    }\n                    else {\n                        getCurrent.RepeatDayList = [];\n                        selectedDates.forEach(element => getCurrent.RepeatDayList.push(element.Id));\n                    }\n                }\n                getCurrent.StartDate = getCurrent.RepeatDayList[0];\n                getCurrent.RepeatDayStringList = [];\n                getCurrent.RepeatDayList.forEach(x => {\n                    getCurrent.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                });\n                getCurrent.EndDate = getCurrent.RepeatDayList[getCurrent.RepeatDayList.length - 1];\n                delete this.driverScheduleMapping.ScheduleList[getIndex];\n                this.driverScheduleMapping.ScheduleList.splice(getIndex, 0, getCurrent);\n                //Update current done\n                //start add new logic    \n\n                if (this.driverSchedule.ShiftId != ShiftId) {\n                    let oDateList = []\n                    let oDateListString = []\n                    if (this.selectedType == 4) {\n                        this.customDates.forEach(x => {\n                            if (!this.ConflictDateList.some((item) => moment(item).format('MM/DD/YYYY') == moment(x.Id).format('MM/DD/YYYY'))) {\n                                oDateList.push(new Date(x.Id).getTime())\n                            }\n                        });\n                    }\n                    else {\n                        this.DateList.forEach(x => {\n                            if (!this.ConflictDateList.some((item) => moment(item).format('MM/DD/YYYY') == moment(x.Id).format('MM/DD/YYYY'))) {\n                                oDateList.push(new Date(x.Id).getTime());\n                            }\n                        });\n                    }\n                    this.DateList.forEach(x => { oDateListString.push(moment(x.Id).format('MM/DD/YYYY')) });\n                    newScheduleId = `${this.driverScheduleMapping.DriverId}_${new Date().getTime()}`;\n                    scheduleList = { Id: `${this.driverScheduleMapping.DriverId}_${new Date().getTime()}`, IsActive: true, StartDate: new Date(oDateList[0]).getTime(), EndDate: new Date(oDateList[oDateList.length - 1]).getTime(), RepeatDayList: oDateList, RepeatDayStringList: oDateListString, ShiftId: ShiftId, RepeatEveryDay: this.repeat, TypeId: this.selectedType };\n                    this.driverScheduleMapping.ScheduleList.push(scheduleList)\n                }\n            }\n\n            // reset index\n\n            let oScheduleList = [];\n            this.driverScheduleMapping.ScheduleList.forEach(e => { oScheduleList.push(e) });\n            this.driverScheduleMapping.ScheduleList = [];\n            this.driverScheduleMapping.ScheduleList = oScheduleList;\n\n            //Check previous records exist or not for same shift with conflict dates \n            this.driverScheduleMapping.ScheduleList.forEach(x => {\n                if (x.IsActive && x.ShiftId == ShiftId && newScheduleId != x.Id) {\n                    let newList = [];\n                    if (x.RepeatDayList != null && x.RepeatDayList.length > 0) {\n                        x.RepeatDayList.forEach(y => {\n                            if (!this.ConflictDateList.some((item) => moment(item).format('MM/DD/YYYY') == moment(y).format('MM/DD/YYYY'))) {\n                                newList.push(moment(y).toDate())\n                            }\n                        });\n                        x.RepeatDayList = newList;\n                        if (x.RepeatDayList.length > 0) {\n                            x.StartDate = x.RepeatDayList[0];\n                            x.EndDate = x.RepeatDayList[x.RepeatDayList.length - 1];\n                            x.RepeatDayStringList = [];\n                            x.RepeatDayList.forEach(t => x.RepeatDayStringList.push(moment(t).format('MM/DD/YYYY')));\n                        }\n                        else {\n                            x.IsActive = false;\n                        }\n                    }\n                }\n            });\n\n            for await (let item of this.driverScheduleMapping.ScheduleList) {\n                if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                    item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                    item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                    var list = [];\n                    var stringList = [];\n                    item.RepeatDayStringList = [];\n                    for await (let repeat of item.RepeatDayList) {\n                        list.push(moment(repeat).toDate());\n                        if (item.RepeatDayStringList == null || item.RepeatDayStringList.length == 0) {\n                            stringList.push(moment(repeat).format('MM/DD/YYYY'))\n                        }\n                    }\n                    item.RepeatDayList = list;\n                    item.RepeatDayStringList = stringList;\n                }\n            }\n\n            //reset Index of \n            delete CurrentDriverShiftDetailList[driverScheduleMappingIndex];\n            CurrentDriverShiftDetailList.splice(driverScheduleMappingIndex, 0, this.driverScheduleMapping);\n            let oShifScheduleList = [];\n            CurrentDriverShiftDetailList.forEach(e => { oShifScheduleList.push(e) });\n            CurrentDriverShiftDetailList = [];\n            CurrentDriverShiftDetailList = oShifScheduleList;\n            //End Reset Index of \n\n            CurrentDriverShiftDetailList.forEach(ele => {\n                if (ele.Id != this.driverScheduleMapping.Id) {\n                    ele.ScheduleList.forEach(pop => {\n                        if (pop.IsActive && pop.ShiftId == ShiftId && pop.RepeatDayList != null && pop.RepeatDayList.length > 0) {\n\n                            let rpDayList = [];\n                            pop.RepeatDayList.forEach(pre => {\n                                let idx = selectedDates.findIndex(x => moment(x.Id).format('MM/DD/YYYY') == moment(pre).format('MM/DD/YYYY'));\n                                if (idx < 0)\n                                    rpDayList.push(pre);\n                            })\n                            pop.RepeatDayList = [];\n                            pop.RepeatDayList = rpDayList;\n\n\n                            pop.StartDate = moment(pop.RepeatDayList[0]).toDate();\n                            pop.EndDate = moment(pop.RepeatDayList[pop.RepeatDayList.length - 1]).toDate();\n                            pop.RepeatDayStringList = [];\n                            pop.RepeatDayList.forEach(ab => pop.RepeatDayStringList.push(moment(ab).format('MM/DD/YYYY')));\n                        }\n                        if (pop.RepeatDayList == null || pop.RepeatDayList.length == 0)\n                            pop.IsActive = false;\n                        else {\n                            pop.StartDate = moment(pop.RepeatDayList[0]).toDate();\n                            pop.EndDate = moment(pop.RepeatDayList[pop.RepeatDayList.length - 1]).toDate();\n                            pop.RepeatDayStringList = [];\n                            pop.RepeatDayList.forEach(ab => pop.RepeatDayStringList.push(moment(ab).format('MM/DD/YYYY')));\n                        }\n\n                    });\n                }\n            });\n            //end\n            this.update(CurrentDriverShiftDetailList);\n        }\n\n    }\n    async delete(model, sDate) {\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.deleteDriverSchedule(model, sDate)\n            .subscribe((response: any) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Driver Schedule deleted successfully', undefined, undefined);\n                    setTimeout(function () {\n                        let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n                        element.click();\n                    }, 2000);\n                    this.regionService.onLoadingChanged.next(false);\n                    this.refresh.next();\n                    this.onDriverSelect();\n                    this.setView(CalendarView.Month);\n                    this.deleteOption = 1;\n                }\n                else {\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                    setTimeout(function () {\n                        let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n                        element.click();\n                    }, 1500);\n                    this.regionService.onLoadingChanged.next(false);\n                    this.refresh.next();\n                    this.deleteOption = 1;\n                    this.onDriverSelect();\n                    this.setView(CalendarView.Month);\n                }\n                this.clearEditForm();\n            });\n\n        this.hideDeleteRange = false;\n        this.IsConfirmDelete = false;\n    }\n    async update(model, Isdelete?: boolean) {\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.updateDriverSchedule(model, this.SelectedDate)\n            .subscribe((response: any) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Driver Schedule updated successfully', undefined, undefined);\n                    if (!Isdelete) {\n                        this.regionService.onLoadingChanged.next(false);\n                        this.closeViewDayDetailModel();\n                        this.onDriverSelect();\n                        this.refresh.next();\n                        this.deleteOption = 1;\n                    }\n                    else {\n                        this.IsConfirmDelete = false;\n                        setTimeout(function () {\n                            let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n                            element.click();\n                        }, 1500);\n                        this.regionService.onLoadingChanged.next(false);\n                        this.onDriverSelect();\n                        this.refresh.next();\n                        this.deleteOption = 1;\n                    }\n                }\n                else {\n                    this.closeViewDayDetailModel();\n                    this.regionService.onLoadingChanged.next(false);\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                    this.refresh.next();\n                }\n                this.clearEditForm();\n            });\n    }\n\n    private getRegions(): void {\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.getRegions()\n            .subscribe((region: RegionModel) => {\n                this.regionList = region.Regions;\n                this.regionService.onLoadingChanged.next(false);\n            });\n    }\n\n    async InitializeDates(sdate?, end?) {\n        this.driverSchedule.RepeatDayList = [];\n        this.DateList = [];\n        this.repeat = this.selectedType == 3 ? this.repeat : 0;\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        if (this.sdate && this.edate) {\n            for (var dt = new Date(this.sdate); dt <= new Date(this.edate); dt.setDate(dt.getDate() + this.repeat + 1)) {\n                if (this.selectedType && this.selectedType == 2) {\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` }) : '';\n                }\n                else {\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` });\n                }\n            }\n        }\n        for (var dt = new Date(sdate); dt <= new Date(end); dt.setDate(dt.getDate() + 1)) {\n            this.driverSchedule.RepeatDayList.push(new Date(dt));\n        }\n        //this.customDates = this.DateList;\n        this.validateShiftForDriver(this.driverSchedule.selectedShifts[0]);\n        return this.DateList;\n    }\n\n    setFromDate(event: any): void {\n        this.sdate = (event);\n        let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\n        !this.edate ? this.edate = (moment(d).format('MM/DD/YYYY')) : '';\n        if (this.sdate != '' && this.edate != '') {\n            let _fromDate = moment(this.sdate).toDate();\n            let _toDate = moment(this.edate).toDate();\n            if (_toDate < _fromDate) {\n                this.edate = (event);\n            }\n        }\n    }\n\n    async setToDate(event: any) {\n\n        this.IsUpdateForMultiple = false;\n        this.edate = (event);\n        if (this.sdate != '' && this.edate != '') {\n            let _fromDate = moment(this.sdate).toDate();\n            let _toDate = moment(this.edate).toDate();\n            if (_fromDate > _toDate) {\n                this.sdate = (event);\n            }\n            if (_toDate > _fromDate) {\n                this.IsUpdateForMultiple = true;\n            }\n        }\n        this.InitializeDates();\n    }\n\n    public closeViewDayDetailModel(): void {\n        this.isShowEditPannel = false;\n        this.startDateEnable = false;  // validate from date if it is less than current date.\n        this.isApplyAll = false;\n        this.driverScheduleMapping = {};\n        this.driverSchedule = {};\n        this._openedEditPanel = false;\n        let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n        element.click();\n    }\n\n    private getShortDriverName(name): any {\n        const fullName = name.split(' ');\n        const lastName = fullName.pop();\n        const firstName = fullName.join(' ');\n        return firstName.substring(0, 1) + \" \" + lastName;\n\n    }\n\n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n    public _editToggleOpened(shouldOpen: boolean): void {\n\n        if (shouldOpen) {\n            this._openedEditPanel = true;\n        }\n        else {\n            this._openedEditPanel = !this._openedEditPanel;\n        }\n        this.clearEditForm();\n    }\n\n    public clearEditForm() {\n        this.Selectedregion = [];\n        this.SelectedDriver = [];\n        this.driverSchedule.selectedShifts = [];\n        this.startDateEnable = false;\n        this.eToDate = null;\n        this.eFromDate = null;\n        this.IsUpdateForMultiple = false;\n        this.selectedType = 0;\n        this.customDates = [];\n        this.repeat = 0;\n        this.IsShiftRepeted = false\n        this.IsSheduleEdit = false;\n        this.SelectedDate = new Date();\n        this.ConflictDateList = [];\n        this.IsShowConflictTable = false;\n    }\n\n    public changeIsApplyAll() {\n        this.isApplyAll = !this.isApplyAll;\n        this.selectedType = 1;\n        this.InitializeDates();\n    }\n\n    public validateShiftForDriver(event) {\n        let DaysRepeateCount = 1;\n        this.ConflictDateList = [];\n        this.IsShowConflictTable = false;\n        this.IsShiftRepeted = false;\n        if (this.sdate && this.edate) {\n\n            let CheckConflictDays = this.DriverShiftDetailList.filter(f => f.DriverId == this.DriverId);\n            if (CheckConflictDays != null && CheckConflictDays.length > 0) {\n                let selecteddateList = [];\n                if (this.selectedType == 4) {\n                    selecteddateList = this.customDates;\n                }\n                else {\n                    selecteddateList = this.DateList;\n                }\n                CheckConflictDays.forEach(ShiftDetails => {\n                    if (ShiftDetails.ScheduleList != null) {\n                        if (selecteddateList.length > 0) {\n                            ShiftDetails.ScheduleList.forEach(elm => {\n                                if (elm.ShiftId == event.Id && elm.ShiftId != this.driverSchedule.ShiftId) {\n                                    if (elm.RepeatDayList != null && elm.RepeatDayList.length > 0) {\n                                        elm.RepeatDayList.forEach(dte => {\n                                            selecteddateList.forEach(slDate => {\n                                                if (moment(slDate.Id).format('MM/DD/YYYY') == moment(dte).format('MM/DD/YYYY')) {\n                                                    this.ConflictDateList.push(moment(slDate.Id).format('MM/DD/YYYY'));\n                                                    DaysRepeateCount++;\n                                                }\n                                            });\n                                        });\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            Declarations.msgwarning('Please select dates first', undefined, undefined);\n            return true;\n        }\n        if (this.ConflictDateList.length > 0) {\n            Declarations.msgwarning(\"Following shifts are already assigned to the drive\", undefined, undefined);\n        }\n\n\n    }\n\n    public isRequired(name) {\n        if (name == \"\" || name == null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    public closeDeleteModel() {\n        this.IsConfirmDelete = false;\n    }\n    async RemoveSchedule(event) {\n        let currentDelete: DriverSchedule;\n        this.driverScheduleMapping = await this.DriverShiftDetailList.find(f => f.Id == event.mappingId);\n\n        let currentDriverShiftDetailList = await this.DriverShiftDetailList.filter(f => f.DriverId == this.DriverId);\n        let driverScheduleMappingIndex = await currentDriverShiftDetailList.findIndex(f => f.Id == event.mappingId);\n\n        let driverShiftMapping = await this.DriverShiftDetailList.filter(f => f.DriverId == this.DriverId);\n        if (this.deleteOption != \"\" && this.deleteOption != null) {\n            if (this.deleteOption == DeleteDriverSchedule.Single) {\n                this.driverScheduleMapping.ScheduleList.forEach(f => {\n                    if (f.IsActive = true && f.Id == this.driverSchedule.Id && f.ShiftId == this.driverSchedule.ShiftId) {\n                        if (f.RepeatDayList != null && f.RepeatDayList.length > 0) {\n                            currentDelete = f;\n                            if (f.RepeatDayList.length == 1) {\n                                delete f.RepeatDayList[0];\n                                f.RepeatDayList = null;\n                            } else {\n                                let indexof = f.RepeatDayList.findIndex(x => moment(x).format('MM/DD/YYYY') == moment(this.sdate).format('MM/DD/YYYY'));\n                                delete f.RepeatDayList[indexof];\n                                let reOrder = []\n                                f.RepeatDayList.forEach(r => { reOrder.push(r) });\n                                f.RepeatDayList = reOrder;\n                                f.StartDate = f.RepeatDayList[0];\n                                f.EndDate = f.RepeatDayList[f.RepeatDayList.length - 1];\n                                f.RepeatDayStringList = [];\n                                f.RepeatDayList.forEach(x => {\n                                    f.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                                });\n                            }\n                        }\n                    }\n                });\n                this.IsConfirmDelete = false;\n            }\n            if (this.deleteOption == DeleteDriverSchedule.Range) {\n                if (this.driverScheduleMapping.ScheduleList.length > 0) {\n                    let sList = this.driverScheduleMapping.ScheduleList.forEach(res => {\n                        if (res.Id == this.driverSchedule.Id) {\n                            let reOrder = [] = res.RepeatDayList.filter(x => moment(x).format('MM/DD/YYYY') < moment(this.sdate).format('MM/DD/YYYY'));\n                            res.RepeatDayList = reOrder;\n                            res.StartDate = res.RepeatDayList[0];\n                            res.EndDate = res.RepeatDayList[res.RepeatDayList.length - 1];\n                            res.RepeatDayStringList = [];\n                            res.RepeatDayList.forEach(x => {\n                                res.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                            });\n                        }\n                    });\n                }\n                this.IsConfirmDelete = false;\n            }\n\n            if (this.deleteOption == DeleteDriverSchedule.Whole) {\n                if (driverShiftMapping.length > 0) {\n                    for await (let oSchedule of driverShiftMapping) {\n                        if (oSchedule.ScheduleList.length > 0) {\n                            oSchedule.ScheduleList.forEach(ele => {\n                                if (ele.RepeatDayList != null) {\n                                    let reOrder = [] = ele.RepeatDayList.filter(x => moment(x).format('MM/DD/YYYY') < moment(this.sdate).format('MM/DD/YYYY'));\n                                    ele.RepeatDayList = reOrder;\n                                    ele.StartDate = ele.RepeatDayList[0];\n                                    ele.EndDate = ele.RepeatDayList[ele.RepeatDayList.length - 1];\n                                    ele.RepeatDayStringList = [];\n                                    ele.RepeatDayList.forEach(x => {\n                                        ele.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                                    });\n                                }\n                            });\n                        }\n                    }\n\n                    await driverShiftMapping.forEach(element => {\n                        for (let item of element.ScheduleList) {\n                            if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                                item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                                item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                                var list = [];\n                                for (let repeat of item.RepeatDayList) {\n                                    list.push(moment(repeat).toDate());\n                                }\n                                item.RepeatDayList = list;\n                            }\n                        }\n                    });\n                    this.delete(driverShiftMapping, this.SelectedDate);\n                }\n            }\n\n            if (this.deleteOption == DeleteDriverSchedule.Range || this.deleteOption == DeleteDriverSchedule.Single) {\n\n                for await (let item of this.driverScheduleMapping.ScheduleList) {\n                    if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                        item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                        item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                        var list = [];\n                        for await (let repeat of item.RepeatDayList) {\n                            list.push(moment(repeat).toDate());\n                        }\n                        item.RepeatDayList = list;\n                    }\n                }\n\n                delete currentDriverShiftDetailList[driverScheduleMappingIndex];\n                currentDriverShiftDetailList.splice(driverScheduleMappingIndex, 0, this.driverScheduleMapping);\n                let oShifScheduleList = [];\n                currentDriverShiftDetailList.forEach(e => { oShifScheduleList.push(e) });\n                this.DriverShiftDetailList = [];\n                currentDriverShiftDetailList = oShifScheduleList;\n                //End Reset Index of \n\n                currentDriverShiftDetailList.forEach(ele => {\n                    if (ele.Id != this.driverScheduleMapping.Id) {\n                        ele.ScheduleList.forEach(pop => {\n                            if (pop.IsActive && pop.RepeatDayList != null && pop.RepeatDayList.length > 0) {\n                                pop.StartDate = moment(pop.RepeatDayList[0]).toDate();\n                                pop.EndDate = moment(pop.RepeatDayList[pop.RepeatDayList.length - 1]).toDate();\n                                pop.RepeatDayStringList = [];\n                                pop.RepeatDayList.forEach(ab => pop.RepeatDayStringList.push(moment(ab).format('MM/DD/YYYY')));\n                            }\n                            else\n                                pop.IsActive = false;\n                        });\n                    }\n                });\n                this.update(currentDriverShiftDetailList, true);\n                return true;\n            }\n\n        } else {\n            Declarations.msgwarning('Please select delete option', undefined, undefined);\n            return false;\n        }\n    }\n\n    public showDriverConflictSchedules() {\n        this.IsShowConflictTable = !this.IsShowConflictTable;\n    }\n}\n","<div>\r\n    <!--<div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <img src=\"src/assets/trailer.png\" class=\"pull-left mr10\" width=\"40\" />\r\n            <h4 class=\"pt0 pull-left\">Driver  Schedule</h4>\r\n        </div>\r\n    </div>-->\r\n    <div class=\"row justify-content-between\">\r\n        <!--<div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\"\r\n                                         [settings]=\"multiselectShiftById\" [data]=\"regionList\"\r\n                                         (onSelect)=\"onRegionSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\" \r\n                    [settings]=\"multiselectSettingsById\" [data]=\"DriverList\" (onSelect)=\"onDriverSelect($event)\"\r\n                    (onDeSelect)=\"onDriverDeSelect($event)\" [(ngModel)]=\"SelectedDriverList\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Trailer(s)'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"TrailerList\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>-->\r\n\r\n        <!--<div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Route(s)'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"RouteList\"\r\n                                         (onSelect)=\"onRouteSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-6\" style=\"display:none\">\r\n            <div class=\"form-group\">\r\n                <div class=\"radio-inline\">\r\n                    <label><input type=\"radio\" name=\"scheduleType\" ng-control=\"scheduleType\" [(ngModel)]=\"scheduleType\"\r\n                            (change)=\"onDriverSelect()\" [value]=\"0\">All</label>\r\n                </div>\r\n                <div class=\"radio-inline\">\r\n                    <label><input type=\"radio\" name=\"scheduleType\" ng-control=\"scheduleType\" [(ngModel)]=\"scheduleType\"\r\n                            (change)=\"onDriverSelect()\" [value]=\"1\">Planned Schedule</label>\r\n                </div>\r\n                <div class=\"radio-inline\">\r\n                    <label><input type=\"radio\" name=\"scheduleType\" ng-control=\"scheduleType\" [(ngModel)]=\"scheduleType\"\r\n                            (change)=\"onDriverSelect()\" value=\"2\">UnPlanned Schedule </label>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!--<div class=\"col-sm-3 float-right\">\r\n            <app-create-trailer-schedule></app-create-trailer-schedule>\r\n        </div>-->\r\n        <div class=\"col-sm-3 float-right\">\r\n            <create-driver-schedule (OnScheduleAdded)=\"OnScheduleAdded($event)\"></create-driver-schedule>\r\n        </div>\r\n        <!--<div class=\"col-sm-3 float-right\">\r\n            <app-create-region (OnScheduleAdded)=\"OnScheduleAdded($event)\"></app-create-region>\r\n        </div>-->\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"isShowCalender\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n\r\n                        <!--start-->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 text-center\">\r\n\r\n                            </div>\r\n                            <div class=\"col-md-5 text-center\">\r\n                                <div>\r\n                                    <div class=\"btn btn-default btn-xs\" mwlCalendarPreviousView [view]=\"view\"\r\n                                        [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\"\r\n                                        (click)=\"setNextMonthEvents(viewDate,'Previous')\">\r\n                                        <i class=\"fas fa-arrow-left\"></i>\r\n                                    </div>\r\n\r\n                                    <div class=\"btn\tbtn-default btn-xs\" id=\"idToday\" mwlCalendarToday\r\n                                        [(viewDate)]=\"viewDate\" (click)=\"setNextMonthEvents(viewDate,'Today')\">\r\n                                        {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\r\n                                    </div>\r\n                                    <div class=\"btn\tbtn-default btn-xs\" mwlCalendarNextView [view]=\"view\"\r\n                                        [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\"\r\n                                        (click)=\"setNextMonthEvents(viewDate,'Next')\">\r\n                                        <i class=\"fas fa-arrow-right\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--<div class=\"col-md-4 text-center\">\r\n        <h3 class=\"mt5\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n    </div>-->\r\n                            <div class=\"col-md-4 text-right\">\r\n                                <div>\r\n                                    <a  class=\"btn\"  [ngClass]=\"view === CalendarView.Month ? 'btn-primary': 'btn-default'\"\r\n                                         (click)=\"setView(CalendarView.Month)\"\r\n                                         [class.active]=\"view === CalendarView.Month\" id=\"idMonth\">\r\n                                         <label for=\"idMonth\" >Month</label>\r\n                                    </a>\r\n                                    <a  class=\"btn\" [ngClass]=\"view === CalendarView.Week ? 'btn-primary': 'btn-default'\"\r\n                                         (click)=\"setView(CalendarView.Week)\"\r\n                                         [class.active]=\"view === CalendarView.Week\" id=\"idWeek\">\r\n                                         <label for=\"idWeek\" >Week </label>\r\n                                        \r\n                                </a>\r\n                                    <a  class=\"btn\" [ngClass]=\"view === CalendarView.Day ? 'btn-primary': 'btn-default'\"\r\n                                         (click)=\"setView(CalendarView.Day)\"\r\n                                         [class.active]=\"view === CalendarView.Day\" id=\"idDay\">\r\n                                         <label for=\"idDay\">Day</label>\r\n                                        \r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div [ngSwitch]=\"view\">                          \r\n                            <button type=\"button\" id=\"idViewDay\" hidden data-toggle=\"modal\"\r\n                                data-target=\"#idViewDayDetail\">Open Modal</button>                           \r\n                            <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\"\r\n                                [events]=\"evt\" [cellTemplate]=\"customCellTemplate\" [refresh]=\"refresh\"\r\n                                [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\">\r\n                            </mwl-calendar-month-view>\r\n                            <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\"\r\n                                [events]=\"evt\" [refresh]=\"refresh\">\r\n                            </mwl-calendar-week-view>\r\n                            <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"evt\"\r\n                                [refresh]=\"refresh\">\r\n                            </mwl-calendar-day-view>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--custom template for the month view-->\r\n<ng-template #customCellTemplate let-day=\"day\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <!--<span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>-->\r\n        <div>\r\n            <table class=\"table table-hover\">\r\n\r\n                <tr *ngFor=\"let item of day.events let i = index;\">\r\n                    <td [ngStyle]=\"{'background-color': item.color.primary}\" style=\"color:black\"\r\n                        class=\"label  calender-grid\" *ngIf=\"i<2\"> <span><strong>{{item.driverShortName }} </strong>\r\n                            <strong>{{item.shiftFrom}}</strong> - <strong>{{item.shiftTo}}</strong></span></td>\r\n                    <!--<td [ngStyle]=\"{'background-color': item.color.primary}\" class=\"cal-day-badge\" *ngIf=\"i<2\"><span><strong>{{item.shiftFrom}}</strong> - <strong>{{item.shiftTo}}</strong></span> </td>-->\r\n                </tr>\r\n                <tr *ngIf=\"day.events.length>2\">\r\n                    <td><strong>...</strong></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n        <span class=\"cal-day-number\"><strong>{{ day.date | calendarDate:'monthViewDayNumber':locale }}</strong> </span>\r\n\r\n    </div>\r\n\r\n    <div class=\"cell-totals\">\r\n        <span *ngFor=\"let group of day.eventGroups\" class=\"badge badge-{{ group[0] }}\">\r\n            {{ group[1].length }}\r\n        </span>\r\n    </div>\r\n</ng-template>\r\n\r\n<!--view shifts-->\r\n\r\n<div id=\"idViewDayDetail\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n                <h4 class=\"modal-title\">{{SelectedDate}} <span\r\n                        class=\"pull-right\">{{driverScheduleMapping.DriverName}}</span></h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <table class=\"table table-bordered\" *ngIf=\"!isShowEditPannel && !IsConfirmDelete\">\r\n                    <thead>\r\n                        <tr>\r\n\r\n                            <td>Driver</td>\r\n                            <td>Shift</td>\r\n                            <td> From Date </td>\r\n                            <td>To Date</td>\r\n                            <td>Total Days</td>\r\n                            <!--<td>Schedule Type</td>-->\r\n                            <td>Action</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let event of Selectedevent\">\r\n\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.driverName}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\"> {{event.shiftFrom}} -\r\n                                {{event.shiftTo}} {{event.description}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.fromDate}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.toDate}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.repeatDayList?.length}}\r\n                            </td>\r\n                            <!--<td [ngStyle]=\"{'background-color': event.color.primary}\"><span class=\"label-font label\" [ngClass]=\"event.isUnplanedSchedule ? 'label-warning': 'label-primary'\"> {{event.isUnplanedSchedule ? 'UnPlaned Schedule':'Planed Schedule'}}</span></td>-->\r\n                            <td *ngIf=\"!event.isUnplanedSchedule\">\r\n                                <i class=\"fas fa-edit  icon-zoom btn-primary label-font\"\r\n                                    (click)=\"editSchedule(event)\"></i> &nbsp;&nbsp;&nbsp;\r\n                                <i class=\"fas fa-trash-alt color-maroon icon-zoom label-font\"\r\n                                    (click)=\"rmvSchedule(event)\"></i> &nbsp;&nbsp;\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n                <!--edit--> \r\n\r\n                <!-- delete -->\r\n\r\n                <div class=\"form-group col-md-12\" *ngIf=\"IsConfirmDelete\">                   \r\n                        <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n                        <h4 class=\"modal-title\"><span>Do you wish to :</span></h4>\r\n                    \r\n                    <div class=\"row col-md-12\">\r\n                        <div class=\"form-control\">\r\n                            <input  class=\"form-check-input\" type=\"radio\" name=\"deleteOptions\"\r\n                                [value]=\"1\" id=\"deleteOptionsSingle\" [(ngModel)]=\"deleteOption\">                               \r\n                            <label class=\"form-check-label\" for=\"deleteOptionsSingle\">Delete only this day's\r\n                                schedule</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row col-md-12\" *ngIf=\"!hideDeleteRange\">\r\n                        <div class=\"form-control\">\r\n                            <input class=\"form-check-input\"  type=\"radio\" name=\"deleteOptions\"\r\n                                [value]=\"2\" id=\"deleteOptionsRange\" [(ngModel)]=\"deleteOption\">\r\n                            <label class=\"form-check-label\" for=\"deleteOptionsRange\">Delete the entire range of this\r\n                                schedule</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row col-md-12\" >\r\n                        <div class=\"form-control\">\r\n                            <input class=\"form-check-input\"  type=\"radio\" name=\"deleteOptions\"\r\n                                [value]=\"3\" id=\"deleteOptionsEntire\" [(ngModel)]=\"deleteOption\">\r\n                            <label class=\"form-check-label\" for=\"deleteOptionsEntire\">Delete the whole schedule for this\r\n                                driver</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-default\" id=\"closeDelete\" (click)=\"closeDeleteModel()\" data-dismiss=\"modal\" >Close</button>\r\n                        <button type=\"button\" class=\"btn btn-default\" id=\"deleteSchedule\" (click)=\"RemoveSchedule(eventDelete)\">Submit</button>                \r\n                    </div>\r\n                </div>\r\n\r\n                <!-- End Delete -->\r\n                         \r\n            <div class=\"modal-footer\" *ngIf=\"!IsConfirmDelete\">\r\n                <!-- <button type=\"button\" class=\"btn btn-default\" *ngIf=\"isShowEditPannel && !isApplyAll\" (click)=\"updateCurrentSchedule()\">Submit</button>\r\n                <button type=\"button\" class=\"btn btn-default\" *ngIf=\"isShowEditPannel && isApplyAll\" (click)=\"UpdateSchedule()\">Submit</button> -->\r\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"closeViewDayDetailModel()\" id=\"idCloseModel\"\r\n                    data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<!--end view Shift-->\r\n<div class=\"loader\" *ngIf=\"(regionService.onLoadingChanged | async)\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"IsSheduleEdit\">\r\n    <ng-sidebar-container style=\"z-index: 99999;\">\r\n        <ng-sidebar [(opened)]=\"_openedEditPanel\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\"\r\n            style=\"height: 100vh\">\r\n            <a (click)=\"_editToggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib ml10 mt10 mb10\">Modify Driver Schedule</h3>\r\n\r\n            <content class=\"pr30\" autocomplete=\"off\" (keydown.enter)=\"$event.preventDefault()\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group readonly\">\r\n                            <label for=\"Region\">Region:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\" \r\n                                [settings]=\"singleselectSettingsById\" [data]=\"DriverRegionList\" [(ngModel)]=\"Selectedregion\"\r\n                                [disabled]=\"true\">\r\n                            </ng-multiselect-dropdown>                         \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group readonly\">\r\n                            <label for=\"Drivers\">Driver:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\" \r\n                                [settings]=\"singleselectSettingsById\" [data]=\"SelectedDriverList\" [(ngModel)]=\"SelectedDriver\"\r\n                                [disabled]=\"true\" >\r\n                            </ng-multiselect-dropdown>                          \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Shift\">Shift:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Select Shift(s)'\" \r\n                                [settings]=\"multiselectShiftById\" [data]=\"ShiftList\" [(ngModel)]=\"driverSchedule.selectedShifts\"\r\n                                (onSelect)=\"validateShiftForDriver($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\" *ngIf=\"!startDateEnable\">\r\n                            <label for=\"fromDate\">From Date:</label>\r\n                            <input type=\"text\" [readonly]=\"true\" [(ngModel)]=\"eFromDate\" class=\"form-control datepicker\"\r\n                                placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\"\r\n                                [maxDate]=\"MaxStartDate\" />                          \r\n                        <!-- </div> -->\r\n                        </div>\r\n                        <div class=\"form-group\" *ngIf=\"startDateEnable\">\r\n                            <label for=\"fromDate\">From Date:</label>\r\n                            <input type=\"text\" [(ngModel)]=\"eFromDate\" class=\"form-control datepicker\"\r\n                                placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\"\r\n                                [maxDate]=\"MaxStartDate\" />\r\n                            <!-- <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\"> -->\r\n                            <div *ngIf=\"isRequired('eFromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        <!-- </div> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">                      \r\n                        <div class=\"form-group\">\r\n                            <label for=\"ToDate\">To Date:</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"eToDate\" class=\"form-control datepicker\" placeholder=\"Date\"\r\n                                myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\"\r\n                                [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\" *ngIf=\"IsUpdateForMultiple\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input type=\"radio\" class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\"\r\n                                    [value]=\"1\" id=\"inlineRadioDaily\" [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\" [value]=\"2\"\r\n                                    id=\"inlineRadioWdays\" [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\" [value]=\"3\"\r\n                                    id=\"inlineRadioEvery\" [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\" *ngIf=\"eToDate && eFromDate\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\"\r\n                                    (change)=\"InitializeDates()\" [value]=\"4\" id=\"inlineRadioCustom\"\r\n                                    [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\" *ngIf=\"IsUpdateForMultiple && selectedType=='4'\">\r\n                            <label for=\"Dates\"> Dates:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Date (s)'\" \r\n                                [settings]=\"multiselectDateSettingsById\" [data]=\"DateList\" [(ngModel)]=\"customDates\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\" *ngIf=\"IsUpdateForMultiple && selectedType=='3'\">\r\n                            <label for=\"Days\">Days:</label>\r\n                            <input type=\"number\" placeholder=\"days\" min=\"1\" class=\"form-control\" [(ngModel)]=\"repeat\" />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row form-group\">\r\n                    <div class=\"col-sm-12\" *ngIf=\"ConflictDateList.length > 0\">\r\n                        <div class=\"alert alert-warning fs12 mt10 mb0 radius-10\">\r\n                            <i class=\"fas fa-exclamation-circle mr5\"></i> <strong>Warning:</strong> Driver Schedule(s) exists <a\r\n                                (click)=\"showDriverConflictSchedules()\">Show Details</a>\r\n                            <table class=\"table table-striped table-bordered table-hover\" *ngIf=\"IsShowConflictTable\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Shift</th>\r\n                                        <th> Conflict Dates</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let event of ConflictDateList\">\r\n                                        <td>{{driverSchedule.selectedShifts[0].Name}}</td>\r\n                                        <td>{{event}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n                <div class=\"col-sm-12 row-fluid text-right form-buttons\">\r\n                    <div class=\"text-right\" >\r\n                        <input type=\"button\" value=\"Cancel\" class=\"btn btn-default\" (click)=\"_editToggleOpened(false)\">\r\n                        <button type=\"button\" id=\"Submit\" class=\"btn btn-primary\"\r\n                        (click)=\"UpdateSchedule()\">Submit</button>\r\n                    </div>                    \r\n                </div>\r\n            </content>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>","import { NgModule } from '@angular/core';\nimport { DriverScheduleRoutingModule } from './driver-routing.module';\nimport { DriverScheduleCalenderComponent } from './driver-schedule-calender/driver-schedule-calender.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from 'src/app/modules/shared.module';\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { DriverManagementComponent } from './driver-management/driver-management.component';\nimport { CreateDriverScheduleComponent } from './create-driver-schedule/create-driver-schedule.component';\nimport { DriverComponent } from './driver/driver.component';\nimport { ViewDriverComponent } from './driver-management/view-driver/view-driver.component';\nimport { CreateDriverComponent } from './driver-management/create-driver/create-driver.component';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { CreateTrailerScheduleComponent } from './create-trailer-schedule/create-trailer-schedule.component';\nimport { CreateRegionComponent } from './create-region-schedule/create-region.component';\n\n\n@NgModule({\n    declarations: [DriverScheduleCalenderComponent, DriverManagementComponent, CreateDriverScheduleComponent, DriverComponent, ViewDriverComponent, CreateDriverComponent, CreateTrailerScheduleComponent, CreateRegionComponent],\n    \n  imports: [\n      DriverScheduleRoutingModule,\n      SharedModule,\n      DirectiveModule,\n      NgbModalModule,\n      DataTablesModule,\n      FlatpickrModule.forRoot(),\n      CalendarModule.forRoot({\n          provide: DateAdapter,\n          useFactory: adapterFactory\n      }),\n     \n  ]\n})\nexport class DriverModule { }\n","import { Component, OnInit} from '@angular/core';\nimport { RegionService } from '../../company-addresses/region/service/region.service';\n\n@Component({\n  selector: 'app-driver',\n  templateUrl: './driver.component.html',\n  styleUrls: ['./driver.component.css']\n})\nexport class DriverComponent implements OnInit {\n    \n    isDriverShow = true;\n    isProfileShow=false;\n    constructor(public regionService: RegionService) { }\n\n  ngOnInit() {\n  }\n\n    public changeTab(tabClick:string): void {\n      this.isDriverShow = false;\n      this. isProfileShow=false;\n       if(tabClick===\"DriverShow\")\n       {\n        this.isDriverShow = true;\n       }\n       if(tabClick==\"ProfileShow\")\n       {\n        this.isProfileShow = true;\n       }\n    }\n}\n","<div class=\"small-tab\" id=\"driverManagement-Tab\">\r\n    <!--<ul class=\"nav nav-tabs mb15\">\r\n        <li class=\"active\"><a data-toggle=\"tab\" href=\"#driver\" class=\"fs16 mr15\" (click)=\"changeTab()\">Drivers</a></li>\r\n        <li><a data-toggle=\"tab\" href=\"#schedule\" class=\"fs16\" (click)=\"changeTab()\">Schedules</a></li>\r\n    </ul>-->\r\n    <ul class=\"nav nav-tabs mb15\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link active fs16 mr15\" id=\"home-tab\" data-toggle=\"tab\" href=\"#driver\"(click)=\"changeTab('DriverShow')\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Drivers</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link fs16 mr15\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#schedule\"  (click)=\"changeTab('ProfileShow')\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Profile</a>\r\n        </li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n        <div id=\"driver\" class=\"tab-pane fade show active\">\r\n            <div *ngIf=\"isDriverShow\">\r\n                <app-driver-management></app-driver-management>\r\n            </div>\r\n\r\n        </div>\r\n        <div id=\"schedule\" class=\"tab-pane fade\">\r\n            <div *ngIf=\"isProfileShow\">\r\n                <app-driver-schedule-calender></app-driver-schedule-calender>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"(regionService.onLoadingChanged | async)\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class DriverManagementModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.LicenseTypes = [];\r\n        this.TrailerTypes = [];\r\n    }\r\n\r\n    public Drivers: DriverViewModel[];\r\n    public LicenseTypes: DropdownItem[];\r\n    public TrailerTypes: DropdownItem[];\r\n}\r\n\r\nexport class DriverViewModel {\r\n    constructor() {\r\n        this.LicenseType = new DropdownItem();\r\n        this.TrailerType = {};\r\n        this.Status = new DropdownItem();\r\n        this.ShiftId = [];\r\n    }\r\n\r\n    public DriverId: string;\r\n    public FirstName: string;\r\n    public LastName: string;\r\n    public CompanyName: string;\r\n    public Email: string;\r\n    public LicenseNumber: string;\r\n    public ExpiryDate: string;\r\n    public ContactNumber: string;\r\n    public DisplayTrailerTypes: string;\r\n    public DisplayLicenseType: string;\r\n    public LicenseTypeId: string;\r\n    public LicenseType: DropdownItem;\r\n    public TrailerType: any;\r\n    public TrailerTypeId: number[] = []; \r\n    public ShiftId: string[];\r\n    public Regions: string[];\r\n    public InvitedBy: string;\r\n    public UserId: number;\r\n    public Status: DropdownItem;\r\n    public IsActive: boolean;\r\n    public IsScheduleExists: boolean;\r\n    public ScheduleBuilderIdInfo : string; \r\n}\r\n\r\nexport class DriverShiftModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n    }\r\n    public DriverName: string;\r\n    public Shifts: ShiftDetailModel[];\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public FromDate: string;\r\n    public ToDate: string;\r\n    public ShiftFrom: any;\r\n    public ShiftTo: any;\r\n}\r\n","export class DriverScheduleMapping {\r\n    Id?: string;\r\n    DriverId?: number;    \r\n    DriverName?: string;    \r\n    ScheduleList?: DriverSchedule[]=[];\r\n}\r\n\r\nexport class  DriverSchedule {\r\n\r\n    Id?: string;\r\n    ShiftId? : string;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    RepeatDayList?: any[] = [];\r\n    RepeatDayStringList?: any[] = [];\r\n    Type?: number;\r\n    IsActive?: boolean;\r\n    Repeat?: number;  //daily or custom\r\n    selectedShifts?: any[] = [];\r\n    selectedRepeatList?: any[] = [];\r\n    TypeId?:number;\r\n    RepeatEveryDay?: number; \r\n    }\r\n\r\n    export class ConflictDates {      \r\n        Date: string;        \r\n      }","\r\nexport class TrailerSchedule {\r\n\r\n    Id: string;\r\n    RegionId: string;\r\n    TrailerId: string;\r\n    TrailerShiftDetail: TrailerShiftDetail[] = [];\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    RepeatDayList: any[] = [];\r\n    Type: number;\r\n    IsActive: boolean;\r\n}\r\n\r\nexport class TrailerShiftDetail {\r\n    ShiftId: string;\r\n    ColumnId: number;\r\n}\r\n\r\n\r\n","export class RegionScheduleViewModel {\r\n    Id?: string;\r\n    RegionId?: string;\r\n    RouteId?: string;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    IsActive: boolean;\r\n    Repeat?: number;\r\n    RepeatDayList?: any[] = [];\r\n    Type?: number;\r\n    RegionShiftDetail?: ShiftSchedule[] = [];\r\n}\r\n\r\nexport class ShiftSchedule {\r\n    ShiftId?: string;\r\n    ColumnIndex?: number;\r\n}\r\n\r\nexport class RegionScheduleMappingViewModel {\r\n    Id?: String;\r\n    RegionId?: String;\r\n    RouteId?: String;\r\n    RegionName?: String;\r\n    RouteName?: String;\r\n    IsUnplanedSchedule?: boolean;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    Description?: String;\r\n    RepeatDayList?: any[] = [];\r\n    ShiftDetail?: ShiftDetailViewModel[] = []\r\n}\r\n\r\nexport class ShiftDetailViewModel {\r\n    ShiftId?: string;\r\n    ShiftName: string;\r\n    ColumnIndex: string;\r\n    ColumnName: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { DriverViewModel } from '../models/DriverManagementModel';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService extends HandleError {\n    private getShiftUrl: string = '/Settings/Profile/GetShifts';\r\n    private getAllDriversUrl: string = '/Settings/Profile/GetAllDrivers';\r\n    private postAddDriverUrl: string = '/Settings/Profile/AddDriver';\r\n    private postDeleteDriverUrl: string = '/Settings/Profile/DeleteInvitedUser';\r\n    private changeDriverStatusUrl: string = '/Settings/Profile/ChangeUserStatus?id=';\r\n    private getRegionsUrl: string = '/Supplier/Region/GetRegionsDdl';\r\n    private addTrailerScheduleUrl: string = '/Supplier/Dispatch/AddTrailerSchedule';\n    onLoadingChanged: BehaviorSubject<any>;\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\n\n    getShifts(): Observable<any> {\r\n        return this.httpClient.get(this.getShiftUrl)\r\n            .pipe(catchError(this.handleError<any>('getShifts', null)));\r\n    }\n\n    getAllDrivers(): Observable<any> {\r\n        return this.httpClient.get(this.getAllDriversUrl)\r\n            .pipe(catchError(this.handleError<any>('getAllDrivers', null)));\r\n    }\n\n    postAddDriver(driverModel: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postAddDriverUrl, driverModel)\r\n            .pipe(catchError(this.handleError<any>('postAddDriver', null)));\r\n    }\n\n    postDeleteDriver(driverdelteInfo: DriverViewModel): Observable<any> {\r\n        var data = { Id: driverdelteInfo.UserId, IsScheduleExists: driverdelteInfo.IsScheduleExists, ScheduleBuilderIdInfo: driverdelteInfo.ScheduleBuilderIdInfo };\r\n        return this.httpClient.post<any>(this.postDeleteDriverUrl, data)\r\n            .pipe(catchError(this.handleError<any>('postDeleteDriver', null)));\r\n    }\n\n    changeDriverStatus(id: number, isActive: boolean): Observable<any> {\r\n        return this.httpClient.get(this.changeDriverStatusUrl + id + \"&isActive=\" + isActive)\r\n            .pipe(catchError(this.handleError<any>('changeDriverStatus', null)));\r\n    }\n\n    getRegions(): Observable<any> {\r\n        return this.httpClient.get(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getRegions', null)));\r\n    }\n\n    addTrailerSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addTrailerScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addTrailerSchedule', model)));\r\n    }\n}\n"],"sourceRoot":"webpack:///"}