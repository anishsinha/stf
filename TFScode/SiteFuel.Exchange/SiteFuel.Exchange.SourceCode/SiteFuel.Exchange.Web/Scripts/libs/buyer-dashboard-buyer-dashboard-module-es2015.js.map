{"version":3,"sources":["./src/app/buyer-dashboard/Model/DashboardModel.ts","./src/app/buyer-dashboard/buyer-dashboard.module.ts","./src/app/buyer-dashboard/dashboard.service.ts","./src/app/buyer-dashboard/delivery/delivery.component.ts","./src/app/buyer-dashboard/delivery/delivery.component.html","./src/app/buyer-dashboard/home/home.component.ts","./src/app/buyer-dashboard/home/home.component.html","./src/app/buyer-dashboard/inventory/inventory.component.ts","./src/app/buyer-dashboard/inventory/inventory.component.html","./src/app/buyer-dashboard/invoice/invoice.component.ts","./src/app/buyer-dashboard/invoice/invoice.component.html","./src/app/buyer-dashboard/loads-map/loads-map.component.ts","./src/app/buyer-dashboard/loads-map/loads-map.component.html","./src/app/buyer-dashboard/location-map/location-map.component.ts","./src/app/buyer-dashboard/location-map/location-map.component.html","./src/app/buyer-dashboard/map-view/map-view.component.ts","./src/app/buyer-dashboard/map-view/map-view.component.html","./src/app/buyer-dashboard/message/message.component.ts","./src/app/buyer-dashboard/message/message.component.html"],"names":[],"mappings":"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","file":"buyer-dashboard-buyer-dashboard-module-es2015.js","sourcesContent":["export class JobBuyerDashboardViewModel {\r\n    CustomerName?: string;\r\n    CustomerId?: number;\r\n    CountryId?: number;\r\n    CountryCode?: string;\r\n    JobID?: number;\r\n    JobName?: string;\r\n    Latitude?: string;\r\n    Longitude?: string;\r\n    Address?: string;\r\n    City?: string;\r\n    CityId?: number;\r\n    State?: string;\r\n    StateID?: number;\r\n    ZipCode?: string;\r\n    ContactPersonName?: string;\r\n    ContactPhoneNumber?: string;\r\n    jobDeliveryRequests?: JobDRDetailsModel[];\r\n}\r\n\r\nexport class JobDRDetailsModel {\r\n    JobId?: number;\r\n    Priority?: number;\r\n}\r\n\r\nexport class BuyerLoadsForDashboardInputModel {\r\n    CountryId?: number;\r\n    FromDate?: Date;\r\n    ToDate?: Date;\r\n}\r\nexport class InventoryForDashboardInputModel {\r\n    CountryId?: number;\r\n    FromDate?: Date;\r\n    ToDate?: Date;\r\n}\r\n\r\nexport class BuyerLoadsForDashboardViewModel {\r\n    PoNumber?: string; // PoNumber\r\n    Location?: string; // Drop location\r\n    Product?: string; // Product name\r\n    Quantity?: string; // Drop quantity\r\n    Dispatcher?: string; // Dispatcher name\r\n    Status?: string; // Delivery current status\r\n    Priority?: number; // Load priority\r\n}\r\n\r\nexport interface InventoryViewModel {\r\n    SiteId?: string;\r\n    Location?: string;\r\n    TankName?: string;\r\n    AvgSale?: string;\r\n    Inventory?: string;\r\n    DaysRemaining?: string;\r\n    Priority?: number;\r\n}\r\n\r\nexport class InvoiceGridBuyerDashboardInputModel {\r\n    UserId?: number;\r\n    CompanyId?: number;\r\n    IsBuyerAdmin?: boolean;\r\n    CountryId?: number;\r\n    CurrencyTypeId?: number;\r\n    GroupIds?: string;\r\n    InvoiceTypeId?: number;\r\n    BrandedCompanyId?: number;\r\n\r\n}\r\n\r\n\r\nexport class InvoiceGridBuyerDashboardModel {\r\n    Id?: number;\r\n    InvoiceNumber?: string;\r\n    Supplier?: string;\r\n    PoNumber?: string;\r\n    DropDate?: string;\r\n    DropTime?: string;\r\n    Status?: string;\r\n    CreatedDate?: Date | string;\r\n    IsSupressOrderPricing?: boolean;\r\n}\r\n\r\nexport class DashboardTileViewModel {\r\n        TileName?: string;\r\n\r\n        RowIdx?: number;\r\n\r\n        ColIdx?: number;\r\n\r\n        IsCollapsed?: boolean;\r\n\r\n        IsClosed?: boolean;\r\n\r\n        TileDisplayName?: string;\r\n    }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { LocationMapComponent } from './location-map/location-map.component';\nimport { LoadsMapComponent } from './loads-map/loads-map.component';\nimport { DeliveryComponent } from './delivery/delivery.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { MessageComponent } from './message/message.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { FormsModule } from '@angular/forms';\n\n\nconst route:Routes=[{path:'',component:HomeComponent}]\n\n\n@NgModule({\n  declarations: [HomeComponent, MapViewComponent, LocationMapComponent, LoadsMapComponent, DeliveryComponent, InventoryComponent, InvoiceComponent, MessageComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DirectiveModule,\n    DataTablesModule,\n    AgmDirectionModule,\n    FormsModule,\n    RouterModule.forChild(route)\n  ]\n})\nexport class BuyerDashboardModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { HandleError } from 'src/app/errors/HandleError';\nimport { BuyerLoadsForDashboardInputModel, DashboardTileViewModel, InventoryForDashboardInputModel, InvoiceGridBuyerDashboardInputModel } from './Model/DashboardModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService extends HandleError {\n  private getJobDetailsForBuyerDashboardUrl = \"/Buyer/Dashboard/GetJobDetailsForBuyerDashboard\";\n  private GetBuyerLoadsForDashboard = \"/Buyer/Dashboard/GetBuyerLoadsForDashboard\"\n  private GetLocationInventoryURl = \"/Buyer/Dashboard/GetLocationInventory\"\n  private GetInvoiceGridForBuyerDashboardURL = \"/Buyer/Dashboard/GetInvoiceGridForBuyerDashboardAsync\";\n  private GetNewBuyerDashboardTileSettingsURL = \"/Buyer/Dashboard/GetNewBuyerDashboardTileSettings\";\n  private SaveDBTileSettingsURL = \"/Buyer/Dashboard/SaveDBTileSettings\";\n  private GetMessagesForBuyerDashboardURL = \"/Messages/Mailbox/GetMessagesForBuyerDashboard\";\n  constructor(private httpClient: HttpClient) { super(); }\n\n  public getJobDetailsForBuyerDashboard(countryId: any): Observable<any> {\n    return timer(0, 60 * 60 * 1000).pipe(\n      switchMap(() => {\n        //return this.httpClient.get<any>(`${this.getJobDetailsForBuyerDashboardUrl}`)\n        return this.httpClient.get<any>(`${this.getJobDetailsForBuyerDashboardUrl}?countryId=${countryId}`)\n      })).pipe(catchError(this.handleError<any>('getJobDetailsForBuyerDashboardUrl', null)));\n  }\n\n  public getDeliveries(input: BuyerLoadsForDashboardInputModel): Observable<any> {\n    return this.httpClient.post<any>(this.GetBuyerLoadsForDashboard, input)\n      .pipe(catchError(this.handleError<any>('getDeliveries', null)));\n  }\n  public GetLocationInventory(input: InventoryForDashboardInputModel): Observable<any> {\n    return this.httpClient.get<any>(this.GetLocationInventoryURl + \"?CountryId=\" + input.CountryId)\n      .pipe(catchError(this.handleError<any>('GetLocationInventory', null)));\n  }\n\n  public GetInvoices(input: InvoiceGridBuyerDashboardInputModel): Observable<any> {\n    return this.httpClient.post<any>(this.GetInvoiceGridForBuyerDashboardURL, input)\n      .pipe(catchError(this.handleError<any>('GetInvoiceGridForBuyerDashboardURL', null)));\n  }\n\n  public GetNewBuyerDashboardTileSettings(): Observable<any> {\n    return this.httpClient.get<any>(this.GetNewBuyerDashboardTileSettingsURL)\n      .pipe(catchError(this.handleError<any>('GetNewBuyerDashboardTileSettings', null)));\n  }\n\n  public SaveDBTileSettings(pageId: string, input: DashboardTileViewModel[]): Observable<any> {\n    return this.httpClient.post<any>(this.SaveDBTileSettingsURL, { pageId: pageId, isMultipleTilesUpdated: true, settingsModel: input })\n      .pipe(catchError(this.handleError<any>('SaveDBTileSettings', null)));\n  }\n  public GetMessages(): Observable<any> {\n    return this.httpClient.get<any>(this.GetMessagesForBuyerDashboardURL)\n      .pipe(catchError(this.handleError<any>('GetMessagesForBuyerDashboard', null)));\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DeliveryReqPriority } from 'src/app/app.enum';\nimport { DashboardService } from '../dashboard.service';\nimport { BuyerLoadsForDashboardInputModel, BuyerLoadsForDashboardViewModel } from '../Model/DashboardModel';\ndeclare var currentCompanyId: any;\n\n@Component({\n    selector: 'app-delivery',\n    templateUrl: './delivery.component.html',\n    styleUrls: ['./delivery.component.scss']\n})\nexport class DeliveryComponent implements OnInit, OnChanges {\n    @Input() SelectedCountryId: any;\n    dtOptions: any = {};\n    dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean = false;\n    currentCompanyId: any;\n    deliveries: BuyerLoadsForDashboardViewModel[] = [];\n    public type = 1;\n    private cloneDeliveries: BuyerLoadsForDashboardViewModel[] = [];\n    maxDate: Date;\n    minDate: Date;\n    fromDate: string;\n    toDate: string;\n    activePriorityTab = DeliveryReqPriority.MustGo;\n    public DeliveryReqPriority = DeliveryReqPriority;\n    //min max date\n\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n    constructor(private dashbpardSer: DashboardService, private router: Router) {\n        this.toDate = moment().format('MM/DD/YYYY');\n        this.minDate = new Date(new Date().setMonth(new Date().getMonth() - 10));\n        this.maxDate = new Date(new Date().setMonth(new Date().getMonth() + 10));\n        //this.fromDate = moment(new Date(new Date().setDate(new Date().getDate() - 1))).format('MM/DD/YYYY');\n    }\n\n    ngOnInit() {\n        this.currentCompanyId = currentCompanyId;\n        this.initializeGrid();\n\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n            this.getDeliveries();\n        }\n\n    }\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            paging: false,\n            bSort: false,\n            bInfo: false,\n            searching: true,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n    public initializeDate(type): void {\n        this.type = type;\n        if (type == 1)//today\n        {\n            this.toDate = moment().format('MM/DD/YYYY');\n            //  this.fromDate = moment(new Date(new Date().setDate(new Date().getDate() - 1))).format('MM/DD/YYYY');\n        } else {\n            this.toDate = moment(new Date(new Date().setDate(new Date().getDate() + 1))).format('MM/DD/YYYY');\n            // this.fromDate = moment().format('MM/DD/YYYY');\n        }\n        this.getDeliveries();\n    }\n    public getDeliveries() {\n        this.IsLoading = true;\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n        }\n        var input = new BuyerLoadsForDashboardInputModel();\n        input.CountryId = this.SelectedCountryId;\n        input.FromDate = new Date(this.toDate);\n        input.ToDate = new Date(this.toDate);\n        this.cloneDeliveries = [];\n        this.dashbpardSer.getDeliveries(input).subscribe(data => {\n            this.IsLoading = false;\n            this.cloneDeliveries = data;\n            this.FilterDate(DeliveryReqPriority.MustGo); // Default must go\n        });\n    }\n\n    private FilterDate(priority): void {\n        if (this.cloneDeliveries)\n            this.deliveries = this.cloneDeliveries.filter(f => f.Priority == priority);\n        else\n            this.deliveries = [];\n        this.dtTrigger.next();\n\n    }\n\n    public changeActiveTab(priority) {\n        this.activePriorityTab = priority;\n        this.FilterDate(priority);\n    }\n\n    public navigate(): void {\n        this.router.navigate([]).then(result => { window.open('/Buyer/Job/BuyerWallyBoard?viewTypeFromDashboard=2', '_blank'); });\n    }\n\n    setFromDate(event: any): void {\n        if (event) {\n            this.type = 0;//not today and tomorrow\n            this.toDate = (event);\n            if (moment().format('MM/DD/YYYY') == moment(this.toDate).format('MM/DD/YYYY'))\n                this.type = 1;\n            else if (moment(new Date().setDate(new Date().getDate() + 1)).format('MM/DD/YYYY') == moment(this.toDate).format('MM/DD/YYYY'))\n                this.type = 2;\n            // this.fromDate = moment(new Date(new Date().setDate(new Date().getDate() - 1))).format('MM/DD/YYYY');\n            this.getDeliveries();\n        }\n\n    }\n}\n\n\n\n\n","<div class=\"delivary-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Deliveries</h4>\n                    </div>\n               </div>\n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body padding-8\">\n            <div class=\"row\">\n                <div class=\"col-6\">\r\n                    <div class=\"dib border radius-capsule shadow-b\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"type==1\">\r\n                            <label class=\"btn ml0\" (click)=\"initializeDate(1)\">Today</label>\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"type==2\">\r\n                            <label class=\"btn\" (click)=\"initializeDate(2)\">Tomorrow</label>\r\n                            <input type=\"text\" [(ngModel)]=\"toDate\" [minDate]=\"minDate\" [maxDate]=\"maxDate\" #fromDate1\r\n                                   class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                   (onDateChange)=\"setFromDate($event);\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"d-inline-block text-right prority-pills float-right mb10\">\n                        <ul class=\"nav nav-pills float-right\">\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\n                                <a class=\"nav-link mustgo active\"\n                                    [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\n                                <a class=\"nav-link shouldgo\"\n                                    [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should\n                                    Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\n                                <a class=\"nav-link couldgo\"\n                                    [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could\n                                    Go</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"table-wrapper\">\n                        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\n                                class=\"spinner-dashboard pa\"></span></div>\n        \n                        <table\n                            class=\"table bg-white table-hover\">\n                            <thead>\n                                <tr>\n                                    <th data-key=\"po_no\">PO Number</th>\n                                    <th data-key=\"loc\">Location</th>\n                                    <th data-key=\"product\">Product</th>\n                                    <th data-key=\"qty\">Quantity</th>\n                                    <th data-key=\"dispacher\">Dispatcher</th>\n                                    <th data-key=\"status\">Status</th>\n                                    <th data-key=\"on_time\">On Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of deliveries\">\n                                        <td>{{item?.PoNumber}}</td>\n                                        <td>{{item?.Location}}</td>\n                                        <td>{{item?.Product}}</td>\n                                        <td>{{item?.Quantity}}</td>\n                                        <td>{{item?.Dispatcher}}</td>\n                                        <td>\n                                            <!-- {{item?.Status}} -->\n                                            <span class=\"badge badge-pill badge-primary\" [ngClass]=\"{'badge-success': item?.Status=='Completed','badge-danger': item?.Status=='Accepted','badge-warning': item?.Status.length>8 }\"\n                                                placement=\"left\"\n                                                ngbTooltip=\"{{item?.Status}}\"> \n                                                {{ (item?.Status.length>10)? (item?.Status | slice:0:10)+'..':(item?.Status) }}\n                                            </span>\n                                        </td>\n                                        <td>--</td>\n                                    </tr>\n                                    <tr *ngIf=\"deliveries && deliveries.length==0\">\n                                        <td colspan=\"7\"> \n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Data Found</h4>\n                                                </div>\n                                            </div>\n                                            \n                                        </td>  \n                                   </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                    </div>\n            </div>\n         \n       \n            <!-- <div class=\"well bg-white shadow-b pr\">\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span\n                        class='spinner-dashboard pa'></span></div>\n                <div class=\"ibox mb0\">\n                    <div class=\"ibox-content no-padding no-border location_table\">\n                    \n                    </div>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { DashboardService } from '../dashboard.service';\nimport { DashboardTileViewModel } from '../Model/DashboardModel';\nimport { Declarations } from 'src/app/declarations.module';\ndeclare var currentUserCompanyId: any;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  public isShowCountryDDL: boolean = true;\n  CountryList: DropdownItem[] = [];\n  public SelectedCountryId: number;\n  public tiles: Tiles = {};\n  IsLoading = false;\n  public DashboardTileViewModelList: DashboardTileViewModel[] = [];\n  pageID: string;\n  constructor(private carrierService: CarrierService, private router: Router, private _dashboardSer: DashboardService) { }\n\n  ngOnInit() {\n    this.getCountries();\n    this.getTiles();\n  }\n\n  getTiles() {\n    this.IsLoading = true;\n    this._dashboardSer.GetNewBuyerDashboardTileSettings().subscribe(data => {\n      if (data) {\n        this.pageID = data.PageId;\n        this.DashboardTileViewModelList = data.TileDetails;\n        this.initializeTiles();\n        this.IsLoading = false;\n      } else\n        this.IsLoading = false;\n    });\n  }\n\n  private getCountries() {\n    this.carrierService.GetCountries(currentUserCompanyId).subscribe(data => {\n      if (data != null) {\n        if (data.ServingCountries != null && data.ServingCountries.length > 1) {\n          //this.ServingCountries = data.ServingCountries;\n          this.CountryList = data.CountryList as DropdownItem[];\n\n          if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\n            let countryId = localStorage.getItem('countryIdForDashboard');\n            if (countryId)\n              this.SelectedCountryId = +countryId;\n            else {\n              this.SelectedCountryId = Number(data.DefaultCountryId);\n              localStorage.setItem('countryIdForDashboard', data.DefaultCountryId);\n              localStorage.setItem('currencyTypeForDashboard', data.DefaultCountryId);\n            }\n          }\n        }\n        else {\n          this.SelectedCountryId = Number(data.DefaultCountryId);\n          this.isShowCountryDDL = false;\n        }\n      }\n    });\n  }\n\n  public onCountryChange(event) {\n    this.SelectedCountryId = (event.target.value == \"null\" || event.target.value == null) ? 1 : Number(event.target.value);\n    // localStorage.setItem('countryFilterType', <string>this.CountryFilter);\n    localStorage.setItem('countryIdForDashboard', this.SelectedCountryId.toString());\n    localStorage.setItem('currencyTypeForDashboard', this.SelectedCountryId.toString());\n  }\n\n  navigate() {\n    this.router.navigate([]).then(result => { window.open('/Buyer/Dashboard/Index', '_blank'); });\n  }\n\n  public ApplySettings(): void {\n\n    this._dashboardSer.SaveDBTileSettings(this.pageID, this.DashboardTileViewModelList).subscribe(data => {\n      if (data.StatusCode == 0) {\n        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n        this.initializeTiles();\n      }\n      else {\n        Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n      }\n    });\n  }\n\n  initializeTiles() {\n    this.tiles.IsDelivery = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Deliveries\").IsClosed;\n    this.tiles.IsInventory = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Location Inventory\").IsClosed;\n    this.tiles.IsInvoice = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Invoices\").IsClosed;\n    this.tiles.IsMessage = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Messages\").IsClosed;\n  }\n\n\n}\n\n\nexport class Tiles {\n  IsWallyBoard?: boolean\n  IsInvoice?: boolean\n  IsDelivery?: boolean\n  IsInventory?: boolean\nIsMessage?:boolean\n}\n\n","<div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"icon-wrapper2\">\r\n\r\n            <div class=\"right0 z-index5 mb10 btn-db-preferences\">\r\n                <span data-toggle=\"modal\" data-target=\"#tile-preferences\">\r\n                    <a href=\"javascript:void(0)\" class=\"btn yellow-bg btn-circle btn-sm color-white\"\r\n                        data-toggle=\"modal\" data-target=\"#myModal\" data-placement=\"bottom\"\r\n                        title=\"Dashboard Preferences\">\r\n                        <i class=\"fa fa-th fs16\"></i>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- <div class=\"float-right text-right\">\r\n            <button class=\"btn btn-outline btn-primary btn-rnd\" data-toggle=\"modal\" data-target=\"#myModal\">More</button>\r\n        </div> -->\r\n        <div class=\"float-right text-right mb10\" *ngIf=\"isShowCountryDDL\">\r\n            <div class=\"form-group mb0\">\r\n                <select class=\"form-control\" (change)=\"onCountryChange($event)\">\r\n                    <option *ngFor=\"let country of CountryList\" [value]=\"country.Id\"\r\n                        [selected]=\"SelectedCountryId==country.Id\"><i class=\"fa fa-airbnb fa-2x\"></i> {{country.Code}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n    <span class=\"spinner-dashboard pa\"></span>\r\n</div>\r\n<div class=\"buyerdashboard-home-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\" *ngIf=\"!tiles.IsWallyBoard\">\r\n            <app-map-view [SelectedCountryId]=\"SelectedCountryId\"></app-map-view>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" >  \r\n        <div class=\"col-lg-6\" *ngIf=\"!tiles.IsDelivery\">\r\n            <app-delivery [SelectedCountryId]=\"SelectedCountryId\"></app-delivery>\r\n        </div>\r\n        <div class=\"col-lg-6\" *ngIf=\"!tiles.IsInventory\"> \r\n            <app-inventory [SelectedCountryId]=\"SelectedCountryId\"></app-inventory>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-6\" *ngIf=\"!tiles.IsInvoice\">\r\n            <app-invoice [SelectedCountryId]=\"SelectedCountryId\"></app-invoice>\r\n        </div>\r\n        <div class=\"col-lg-6\" *ngIf = \"!tiles.IsMessage\">\r\n            <app-message></app-message>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal\" id=\"myModal\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Tiles you want to see on dashboard</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            </div>\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div  class=\"col-sm-4\" *ngFor=\"let item of DashboardTileViewModelList\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input type=\"checkbox\" [checked]=\"!item.IsClosed\" id=\"inlineCheckbox-board_{{item.TileName}}\"\r\n                                    (change)=\"item.IsClosed = !item.IsClosed\">\r\n                                <label class=\"form-check-label ml-2\" for=\"inlineCheckbox-board\"> {{item.TileDisplayName}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <!-- Modal footer -->\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"ApplySettings()\"\r\n                        data-dismiss=\"modal\">Apply</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DeliveryReqPriority } from 'src/app/app.enum';\nimport { DashboardService } from '../dashboard.service';\nimport { BuyerLoadsForDashboardInputModel, BuyerLoadsForDashboardViewModel, InventoryForDashboardInputModel, InventoryViewModel } from '../Model/DashboardModel';\ndeclare var currentCompanyId: any;\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\n\nexport class InventoryComponent implements OnInit {\n  @Input() SelectedCountryId: any;\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  public IsLoading: boolean = false;\n  currentCompanyId: any;\n  inventories: InventoryViewModel[] = [];\n\n  private cloneInventories: InventoryViewModel[] = [];\n  activePriorityTab = DeliveryReqPriority.MustGo;\n  public DeliveryReqPriority = DeliveryReqPriority;\n  //min max date\n  MinStartDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n  MaxStartDate = new Date();\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n  constructor(private dashbpardSer: DashboardService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.currentCompanyId = currentCompanyId;\n    this.initializeGrid();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n      this.getDeliveries();\n    }\n\n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':invisible' };\n    this.dtOptions = {\n      paging: false,\n      bSort: false,\n      bInfo : false,\n      searching: true,\n      pagingType: 'first_last_numbers',\n      pageLength: 10,\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n  };\n  }\n\n  public getDeliveries() {\n    this.IsLoading = true;\n    if ((this.datatableElement && this.datatableElement.dtInstance)) {\n      this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n    }\n    var input = new InventoryForDashboardInputModel();\n    input.CountryId = this.SelectedCountryId;\n    this.cloneInventories = [];\n    this.dashbpardSer.GetLocationInventory(input).subscribe(data => {\n      this.IsLoading = false;\n      this.cloneInventories = data;\n      this.FilterDate(DeliveryReqPriority.MustGo); // Default must go\n    });\n  }\n\n  private FilterDate(priority): void {\n    if (this.cloneInventories)\n      this.inventories = this.cloneInventories.filter(f => f.Priority == priority);\n    else\n      this.inventories = [];\n      if ((this.datatableElement && this.datatableElement.dtInstance)) {\n        this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); this.dtTrigger.next();});\n      }\n  }\n\n  public changeActiveTab(priority) {\n    this.activePriorityTab = priority;\n    this.FilterDate(priority);\n  }\n\n  public navigate(): void {\n    this.router.navigate([]).then(result => { window.open('/Buyer/Job/BuyerWallyBoard?viewTypeFromDashboard=3', '_blank'); });\n  }\n}\n\n\n","<div class=\"inventory-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Location Inventory</h4>\n                    </div>\n                    <!-- <div class=\"d-inline-block text-right prority-pills ml-2\">\n                        <ul class=\"nav nav-pills float-right\">\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\n                                <a class=\"nav-link mustgo active\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\n                                <a class=\"nav-link shouldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\n                                <a class=\"nav-link couldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could Go</a>\n                            </li>\n                        </ul>\n                    </div> -->\n\n                </div>\n                \n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body padding-8\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"d-block text-right prority-pills float-right mb10\">\n                        <ul class=\"nav nav-pills float-right\">\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\n                                <a class=\"nav-link mustgo active\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\n                                <a class=\"nav-link shouldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\n                                <a class=\"nav-link couldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could Go</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"table-wrapper\">\n                        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\n                                class=\"spinner-dashboard pa\"></span></div>\n\n                        <table \n                            class=\"table bg-white table-hover\">\n                            <thead>\n                                <tr>\n                                    <th data-key=\"site_ID\">Location ID</th>\n                                    <th data-key=\"loc\">Location</th>\n                                    <th data-key=\"tank_name\">Tank Name</th>\n                                    <th data-key=\"qty\">Trailing 7 Days Average</th>\n                                    <th data-key=\"inv\">Current Inventory</th>\n                                    <th data-key=\"days\">Days Remaining</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of inventories\">\n                                        <td>{{item?.SiteId }}</td>\n                                        <td>{{item?.Location }}</td>\n                                        <td>{{item?.TankName }}</td>\n                                        <td>{{item?.AvgSale}}</td>\n                                        <td>{{item?.Inventory  }}</td>\n                                        <td>{{item?.DaysRemaining=='--'? 'NA':item?.DaysRemaining }}</td>\n                                    \n                                    </tr>\n                                    <tr *ngIf=\"inventories && inventories.length==0\">\n                                     <td colspan=\"6\"> \n                                          <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                        <div class=\"col-12 align-items-center text-center\">\n                                            <i class=\"fab fa-searchengin fa-5x\"></i>\n                                            <h4>No Data Found</h4>\n                                        </div>\n                                    </div>\n                                </td> \n                                </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            \n            \n            <!-- <div class=\"well bg-white shadow-b pr\">\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span\n                        class='spinner-dashboard pa'></span></div>\n                <div class=\"ibox mb0\">\n                    <div class=\"ibox-content no-padding no-border location_table\">\n                      \n                    </div>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</div>\n\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DashboardService } from '../dashboard.service';\nimport { InvoiceGridBuyerDashboardModel, InvoiceGridBuyerDashboardInputModel } from '../Model/DashboardModel';\ndeclare var currentCompanyId: any;\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.scss']\n})\nexport class InvoiceComponent implements OnInit {\n\n  @Input() SelectedCountryId: any;\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  public IsLoading: boolean = false;\n  currentCompanyId: any;\n  Invoices: InvoiceGridBuyerDashboardModel[] = [];\n  temp_string: string =`DDTs`\n\n  activeInvoiceDDTTab = 0;\n\n  //min max date\n  MinStartDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n  MaxStartDate = new Date();\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n  constructor(private dashbpardSer: DashboardService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.currentCompanyId = currentCompanyId;\n    this.initializeGrid();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n      this.getInvoices();\n    }\n\n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':invisible' };\n    this.dtOptions = {\n      paging: false,\n      bSort: false,\n      bInfo : false,\n      pagingType: 'first_last_numbers',\n      pageLength: 10,\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n  }\n\n  public getInvoices() {\n    this.IsLoading = true;\n    if ((this.datatableElement && this.datatableElement.dtInstance)) {\n      this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n    }\n    var input = new InvoiceGridBuyerDashboardInputModel();\n    input.CountryId = this.SelectedCountryId;\n    input.InvoiceTypeId = this.activeInvoiceDDTTab;\n    let CurrencyTypeId = localStorage.getItem(\"currencyTypeForDashboard\");\n    if (CurrencyTypeId)\n      input.CurrencyTypeId = +CurrencyTypeId;\n    this.dashbpardSer.GetInvoices(input).subscribe(data => {\n      this.IsLoading = false;\n      this.Invoices = data;\n      this.FilterDate(this.activeInvoiceDDTTab); // Default must go\n    });\n  }\n\n  private FilterDate(type): void {\n    //this.Invoices = this.cloneInventories.filter(f => f.type == type);\n    this.dtTrigger.next();\n\n  }\n\n  public changeActiveTab(type) {\n    this.activeInvoiceDDTTab = type;\n    this.getInvoices();\n  }\n\n  public navigate(): void {\n    this.router.navigate([]).then(result => { window.open('/Buyer/Invoice/View', '_blank'); });\n  }\n\n}\n","<div class=\"invoices-view-contanier\">\r\n    <div class=\"well\">\r\n        <div class=\"well-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-9 form-row align-items-center\">\r\n                    <div class=\"d-inline-block\">\r\n                        <h4 class=\"well-title\">{{ (activeInvoiceDDTTab==6)? temp_string : 'Invoices' }}</h4>\r\n                    </div>\r\n                    <div class=\"dib border radius-capsule shadow-b ml20\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"0\" [checked]=\"activeInvoiceDDTTab==0\">\r\n                            <label class=\"btn ml0\" (click)=\"changeActiveTab(0)\">Invoices</label>\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"6\" [checked]=\"activeInvoiceDDTTab==6\">\r\n                            <label class=\"btn\" (click)=\"changeActiveTab(6)\">DDTs</label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"d-inline-block ml20\">\r\n                        <div class=\"form-group input-search\">\r\n                            <i class=\"fas fa-search form-control-search\"></i>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\r\n                    <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigate()\">View More</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"well-body  padding-8\">\r\n            <div class=\"table-wrapper\">\r\n                <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                    <span class=\"spinner-dashboard pa\"></span>\r\n                </div>\r\n                <table  class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th >Invoice Number</th>\r\n                            <th >PO Number</th>\r\n                            <th >Supplier Name</th>\r\n                            <th >Drop Date</th>\r\n                            <th >Drop Time</th>\r\n                            <th >Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container>\r\n                            <tr *ngFor=\"let item of Invoices\">\r\n                                <td>{{item?.InvoiceNumber }} <span class=\"fa fa-info-circle\" \r\n                                    placement=\"right\"\r\n                                    ngbTooltip=\"This invoice is not currently available. Please contact {{item?.Supplier}} for details.\" *ngIf=\"item?.IsSupressOrderPricing\"></span></td>\r\n                                <td>\r\n                                    <ng-container *ngFor=\"let po of item?.PoNumber.split(';')\">\r\n                                        <div style=\"display:inline-block;\">\r\n                                            {{po}}\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td>{{item?.Supplier }}</td>\r\n                                <td>{{item?.DropDate}}</td>\r\n                                <td>\r\n                                    <ng-container *ngFor=\"let time of item?.DropTime.split(';')\">\r\n                                        <div class=\"text-nowrap\" style=\"display:inline-block;\">\r\n                                            {{time}}\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td> <span class=\"badge badge-pill badge-primary\" [ngClass]=\"{'badge-success': item?.Status=='Received','badge-danger': item?.Status=='Rejected','badge-warning': item?.Status.length>8 }\"\r\n                                    placement=\"left\"\r\n                                    ngbTooltip=\"{{item?.Status}}\"> \r\n                                    {{ (item?.Status.length>8)? (item?.Status | slice:0:8)+'..':(item?.Status) }}\r\n                                </span> </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"Invoices && Invoices.length==0\">\r\n                                 <td colspan=\"6\">\r\n                                    <div class=\"row align-items-center\" style=\"height: 175px;\">\r\n                                        <div class=\"col-12 align-items-center text-center\">\r\n                                            <i class=\"fab fa-searchengin fa-5x\"></i>\r\n                                            <h4>No Data Found</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                 </td>  \r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n             <!-- <div class=\"well bg-white shadow-b pr\">\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border location_table\">\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, QueryList, SimpleChanges, ViewChild, ViewChildren } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DriverAdditionalDetails, routesColor, WhereIsMyDriverModel } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\nimport { BuyerwallyboardService } from 'src/app/buyer-wally-board/services/buyerwallyboard.service';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\ndeclare function IsUserActive(): boolean;\n\nexport declare var google: any;\n@Component({\n  selector: 'app-loads-map',\n  templateUrl: './loads-map.component.html',\n  styleUrls: ['./loads-map.component.scss']\n})\nexport class LoadsMapComponent implements OnInit {\n  @Input() SelectedCountryId: any;\n  public toogleMap: boolean = true;\n  public selectedMaplable: any;\n  public previousInfowindow: any = null;\n  public previousInfowindowIndex: number = null\n  public FuelUnit: string;\n  public googleMap: any;\n  public zoomLevel = 5;\n  public centerLoactionLat = 39.1175;\n  public centerLoactionLng = -103.8784;\n  public MaxInputDate: Date = moment().add(1, 'year').toDate();\n  public TodaysDate: string = moment().format('MM/DD/YYYY');\n\n\n  private AUTO_REFRESH_TIME: number = 300; // seconds\n  public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\n\n  public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n\n  private UserCountry = \"\";\n  private CountryCentre = {\n    USA: { lat: 39.11757961, lng: -103.8784 },\n    CAN: { lat: 57.88251631, lng: -98.54842922 }\n  };\n  public screenOptions = {\n    position: 6\n  };\n\n  private searchLoadInterval: any;\n  private autoRefreshInterval: any;\n  private autoRefreshTimerInterval: any;\n  private setCountryCenterInterval: any;\n\n  public Drivers: WhereIsMyDriverModel[] = [];\n  public OfflineDrivers: WhereIsMyDriverModel[] = [];\n  public allLoads: WhereIsMyDriverModel[] = [];\n  public OnGoingLoads: WhereIsMyDriverModel[] = [];\n  public selectedDriverLoads: WhereIsMyDriverModel[] = [];\n  public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\n\n  public SearchedKeyword: string;\n\n  public toogleFilter: Boolean = false;\n  public toogleDriver: Boolean = false;\n  public toogleGrid: Boolean = false;\n  public toogleExpandMap: Boolean = false;\n\n  public selectedDriverLoadsdtOptions: any = {};\n  public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\n\n  @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n  @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\n  public loadingData: boolean = true;\n  public modalData: boolean = true;\n  public IsShouldGoLoading: boolean;\n  public IsCouldGoLoading: boolean;\n  public IsMustGoLoading: boolean;\n  public backgroudchatDefault = [];\n  public memberInfo: MemberInfo[] = [];\n  public disableControl: boolean = false;\n  changeFilterValueIntervalForMultiWindow: any;\n\n  constructor(private dispatcherService: BuyerwallyboardService, private carrierService: CarrierService) {\n  }\n\n  ngOnInit() {\n    // this.filterDriverData();\n    // this.dispatcherService.getDispatcherCountry().subscribe(data => {\n    //   this.UserCountry = data;\n    //   this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\n    //   this.setMapCenter();\n    // });\n  }\n\n  clickOutsideDropdown() {\n    if (this.toogleFilter) {\n      this.toogleFilter = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n      this.filterDriverData();\n      this.dispatcherService.getDispatcherCountry().subscribe(data => {\n        this.UserCountry = data;\n        this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\n        this.setMapCenter();\n      });\n    }\n  }\n  ngAfterViewInit(): void {\n    this.getDispatcherLoads();\n    this.autoRefreshLoads();\n  }\n\n  ngOnDestroy(): void {\n    this.clearAllIntervals();\n    if (this.changeFilterValueIntervalForMultiWindow)\n      clearInterval(this.changeFilterValueIntervalForMultiWindow);\n  }\n\n  setMapCenter(): void {\n    if (this.UserCountry != \"\") {\n      this.setCountryCenterInterval = window.setTimeout(() => {\n        this.centerLoactionLat = this.CountryCentre[this.UserCountry].lat;\n        this.centerLoactionLng = this.CountryCentre[this.UserCountry].lng;\n        if (this.googleMap && this.OnGoingLoads.length == 0) {\n          const bounds = new google.maps.LatLngBounds();\n          bounds.extend(new google.maps.LatLng(this.centerLoactionLat, this.centerLoactionLng));\n          this.googleMap.fitBounds(bounds);\n          this.googleMap.setZoom(5);\n        } else {\n          const bounds = new google.maps.LatLngBounds();\n          this.OnGoingLoads.filter(t => t.Lat != null && t.Lng != null).forEach(x => {\n            x.statusColor = routesColor[x.SttsId];\n            bounds.extend(new google.maps.LatLng(x.Lat, x.Lng));\n          });\n          this.googleMap.fitBounds(bounds);\n\n          const locationbounds = new google.maps.LatLngBounds();\n          this.OnGoingLoads.forEach(x => {\n              locationbounds.extend(new google.maps.LatLng(x.dLat, x.dLng));\n          });\n          if (this.googleMap && locationbounds) {\n              this.googleMap.setCenter(locationbounds.getCenter());         \n          }\n          this.googleMap.setZoom(5);\n        }\n      }, 500);\n    }\n  }\n\n  searchDrivers(event: any): void {\n    this.SearchedKeyword = event.target.value;\n    this.filterDriverData();\n  }\n\n\n  refreshDatatable(): void {\n    if (this.driverModal.modalDetails.display === \"block\") {\n      this.showDriverDetails(this.driverModal.modalDetails.data);\n    }\n  }\n\n  filterDriverData(): void {\n    this.clearAllIntervals();\n    this.searchLoadInterval = window.setTimeout(() => {\n      this.getDispatcherLoads();\n      this.autoRefreshLoads();\n    }, 2000);\n  }\n\n  clearAllIntervals(): void {\n    if (this.searchLoadInterval) {\n      clearInterval(this.searchLoadInterval);\n    }\n    if (this.autoRefreshInterval) {\n      clearInterval(this.autoRefreshInterval);\n    }\n    if (this.setCountryCenterInterval) {\n      clearInterval(this.setCountryCenterInterval);\n    }\n    if (this.autoRefreshTimerInterval) {\n      clearInterval(this.autoRefreshTimerInterval);\n    }\n  }\n\n  getDispatcherLoads(statusId?): void {\n\n    let inputs = {\n      // FromDate: moment().format('MM/DD/YYYY'),\n      // ToDate: moment().format('MM/DD/YYYY'),\n      DriverSearch: this.SearchedKeyword,\n      IsRequestFromDashboard: true,\n      CountryId:this.SelectedCountryId,\n    };\n    this.loadingData = true;\n    this.dispatcherService.getOnGoingLoadsForMap(inputs).subscribe((data) => {\n      this.initailizeOnGoingLoad(data);\n    });\n\n  }\n\n  private initailizeOnGoingLoad(data) {\n    this.OnGoingLoads = data;// data.filter(x => x.Lat != null && x.Lng != null);\n\n    this.Drivers = this.OnGoingLoads.filter((thing, i, arr) => {\n      return arr.indexOf(arr.find(t => t.Id === thing.Id)) === i;\n    });\n    this.Drivers = this.Drivers.filter(x => x.Name != null && x.Name != undefined && x.Name.trim() != '');\n    //last location not available\n    this.OfflineDrivers = [];\n    var driverFilter = [];\n    data && data.map(m => {\n      if (!driverFilter.find(f => f && f.Name == m.Name)) {\n        driverFilter.push(m);\n        if (m.Lat == null && m.Lng == null && m.Name != null && m.Name != undefined && m.Name.trim() != '')\n          (this.Drivers && this.Drivers.filter(f => f.Name == m.Name).length > 0) ? '' : this.OfflineDrivers.push(m);\n      }\n    })\n    this.setMapCenter();\n    this.startAutoRefreshTimer();\n    this.loadingData = false;\n  }\n\n\n\n  autoRefreshLoads(): void {\n    this.autoRefreshInterval = window.setInterval(() => {\n      if (IsUserActive()) {\n        this.getDispatcherLoads();\n      }\n    }, this.AUTO_REFRESH_TIME * 1000);\n  }\n\n  startAutoRefreshTimer(): void {\n    this.stopAutoRefreshTimer();\n    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n    this.autoRefreshTimerInterval = window.setInterval(() => {\n      if (IsUserActive()) {\n        if (this.autoRefreshTicks == 0) {\n          this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n          this.stopAutoRefreshTimer();\n        } else {\n          this.autoRefreshTicks--;\n        }\n      }\n    }, 1000);\n  }\n\n  stopAutoRefreshTimer(): void {\n    if (this.autoRefreshTimerInterval) {\n      clearInterval(this.autoRefreshTimerInterval);\n    }\n  }\n\n  mapReady(map: any): void {\n    this.googleMap = map;\n    this.setMapCenter();\n  }\n\n  setZoomLevel(): void {\n    if (this.OnGoingLoads.length == 0) {\n      this.setMapCenter();\n    } else {\n      this.zoomLevel = 8; // default zoom level\n    }\n  }\n\n  public toggleExpandMapView() {\n    this.toogleExpandMap = !this.toogleExpandMap;\n  }\n\n  public toggleMapView() {\n    this.toogleMap = !this.toogleMap;\n  }\n\n  public toggleGrids() {\n    this.toogleGrid = !this.toogleGrid;\n  }\n\n  public toggleFilterView() {\n    this.toogleFilter = !this.toogleFilter;\n  }\n  public toggleDriverView() {\n    this.toogleDriver = !this.toogleDriver;\n  }\n\n\n  public mouseHoverMarker(infoWindow, event: MouseEvent): void {\n    if (this.previousInfowindow && this.previousInfowindow.isOpen) {\n      this.previousInfowindow.close();\n    }\n    if (infoWindow) {\n      this.previousInfowindow = infoWindow;\n      this.previousInfowindow.isOpen = true;\n      infoWindow.open();\n    }\n  }\n\n  public mouseHoveOutMarker(infoWindow, event: MouseEvent, index: number = null): void {\n    if (this.previousInfowindow && this.previousInfowindow.isOpen && infoWindow) {\n      this.previousInfowindow.close();\n      this.previousInfowindow.isOpen = false;\n    }\n    if (infoWindow) {\n      infoWindow.close();\n    }\n  }\n\n  public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\n    window.scrollTo(0, 0);\n    this.driverModal = { modalDetails: { display: 'block', data: driver } };\n    if (infoWindow && infoWindow.isOpen) {\n      infoWindow.close();\n    }\n    this.selectedDriverDetails = new DriverAdditionalDetails();\n    this.modalData = true;\n    this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\n      if (data) {\n        this.selectedDriverDetails = new DriverAdditionalDetails(data);\n        this.modalData = false;\n      }\n      else {\n        this.selectedDriverDetails = new DriverAdditionalDetails();\n        Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\n        this.modalData = false;\n      }\n    });\n  }\n\n  public modalClose(): void {\n    this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n  }\n\n\n  private closePreviousWindow(index: number): void {\n    if (this.previousInfowindowIndex != null && this.previousInfowindow != null) {\n      this.OnGoingLoads[this.previousInfowindowIndex].routeShow = false;\n      if (this.previousInfowindow && this.previousInfowindow.isOpen)\n        this.previousInfowindow.close();\n      this.setMapCenter();\n    }\n  }\n  public showHideRoutes(index: number): void {\n    if (index == this.previousInfowindowIndex || this.previousInfowindowIndex == null) {\n      this.OnGoingLoads[index].routeShow = !this.OnGoingLoads[index].routeShow;\n      if (!this.OnGoingLoads[index].routeShow)\n        this.setMapCenter();\n    } else {\n      this.closePreviousWindow(index);\n    }\n    this.previousInfowindowIndex = index;\n  }\n\n  filterMapByStatus(statusId) {\n    this.selectedMaplable = statusId;\n    this.getDispatcherLoads(statusId)\n\n  }\n\n  isArrayEqual(value, other) {\n    var type = Object.prototype.toString.call(value);\n    if (type !== Object.prototype.toString.call(other)) return false;\n    if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n    var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\n    var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\n    if (valueLen !== otherLen) return false;\n    var compare = function (item1, item2) {\n    };\n    var match;\n    if (type === '[object Array]') {\n      for (var i = 0; i < valueLen; i++) {\n        compare(value[i], other[i]);\n      }\n    } else {\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          compare(value[key], other[key]);\n        }\n      }\n    }\n    return true;\n\n  }\n\n}\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\n    <span class='spinner-dashboard pa'></span>\n</div>\n\n<div class=\"row animated\">\n    <div class=\"\" [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap ,'col-sm-9': !toogleExpandMap , 'col-sm-12':toogleExpandMap === true  }\">\n        <div class=\"expand_map_btn\">\n            <a class=\"\" (click)=\"toggleExpandMapView()\">\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !toogleExpandMap, 'fa-arrow-circle-left': toogleExpandMap}\"></i>\n            </a>\n        </div>\n        <div id=\"map-view\" class=\"\">\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; top: -5px; left: 10px; font-size: 11px;\">\n                <div id=\"status-legends\" class=\"well pa0\">\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(11)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==11}\">\n                            <img src=\"src/assets/truck-11.svg\" data-statusid=\"11\">\n                            On the way to terminal\n                        </a>\n\n                    </div>\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(12)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==12}\">\n                            <img src=\"src/assets/truck-12.svg\" data-statusid=\"12\">\n                            Arrived at terminal\n                        </a>\n\n                    </div>\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(1)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==1}\">\n                            <img src=\"src/assets/truck-1.svg\" data-statusid=\"1\">\n                            On the way to location\n                        </a>\n\n                    </div>\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(18)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==18}\">\n                            <img src=\"src/assets/truck-18.svg\" data-statusid=\"18\">\n                            Arrived at location\n                        </a>\n\n                    </div>\n                </div>\n            </div>\n            <div style=\"z-index: 1; position: absolute; top: 0; right: 65px; font-size: 11px; opacity:0.9\">\n                <div class=\"well pa5\">Auto Refresh in: <b>{{autoRefreshTicks * 1000 | date:'mm:ss':'UTC'}}</b> minutes</div>\n            </div>\n            <agm-map style=\"height:60vh\"   [zoom]=\"zoomLevel\" [maxZoom]=\"16\"  [minZoom]=\"2\"\n                (mapReady)=\"mapReady($event)\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\">\n                <ng-container *ngFor=\"let driver of OnGoingLoads let indx=index\">\n                    <agm-marker *ngIf=\"driver.Lat!= null &&driver.Lng!= null\" [latitude]=\"driver.Lat\" [longitude]=\"driver.Lng\"\n                                [iconUrl]=\"{'url':'src/assets/truck-'+driver.SttsId+'.svg','scaledSize':{'height':40,'width':50}}\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (markerClick)=\"showHideRoutes(indx)\" (mouseOut)=\"mouseHoveOutMarker(null,$event,indx)\">\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\n                            <div>\n                                <p><strong>Driver Name: </strong> {{ driver.Name}}</p>\n                                <p><strong>Contact Number: </strong><a href=\"tel:{{driver.PhNo}}\" target=\"_blank\" title=\"Call {{driver.Name}}\">{{driver.PhNo}}</a></p>\n                                <p><strong>Last UpdatedAt: </strong> {{ driver.AppLastUpdatedDate}}</p>\n                                <!--<p class=\"pull-right\" *ngIf=\"driver.AllowCustomerDriverChat==true\">\n                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs21 far fa-comment\"></span></a>\n                </p>-->\n\n                                <p style=\"font-size:11px;padding-top: 10px;\" *ngIf=\"driver.routeShow else showRouteTemplate\"><strong>Note:</strong> Click truck to hide routes.</p>\n                                <ng-template #showRouteTemplate>\n                                    <p style=\"font-size:11px;padding-top: 10px;\"><strong>Note:</strong>  Click truck to view routes</p>\n                                </ng-template>\n                            </div>\n                        </agm-info-window>\n                    </agm-marker>\n                    <agm-marker [latitude]=\"driver.dLat\" [longitude]=\"driver.dLng\" [iconUrl]='{ \"url\": \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", \"scaledSize\": { \"height\": 25, \"width\": 25 } }' (mouseOver)=\"mouseHoverMarker(infoWindow2,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow2,$event,null)\">\n                        <agm-info-window [disableAutoPan]=\"false\" [maxWidth]=\"200\" #infoWindow2>\n                            <div>\n                                <p><b>Engaged Driver : </b> {{ driver.Name}}</p>\n                                <p><b>Drop Location: </b>{{ driver.Loc}}</p>\n                            </div>\n                        </agm-info-window>\n                    </agm-marker>\n                    <agm-direction *ngIf=\"driver.dLat && driver.dLng && driver.Lat!= null && driver.Lng!= null\" [origin]=\"{lat:driver.Lat, lng: driver.Lng}\" [destination]=\"{lat:driver.dLat, lng: driver.dLng}\"\n                                   [visible]=\"driver.routeShow\" [renderOptions]=\"{ suppressMarkers: true , polylineOptions: { strokeColor: driver.statusColor }}\"></agm-direction>\n                </ng-container>\n            </agm-map>\n        </div>\n    </div>\n\n    <div class=\"pl0\" [ngClass]=\"{'col-sm-3': (toogleExpandMap === false && toogleMap === true), 'absolute_driver': toogleMap===false, 'hide_absolute_driver': (toogleDriver === true && toogleMap === false), 'display_hide': (toogleExpandMap === true && toogleMap===true) }\">\n        <div class=\"driver_btn\" *ngIf=\"!toogleMap\">\n            <a class=\"\" (click)=\"toggleDriverView()\">\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !toogleDriver, 'fa-arrow-circle-left': toogleDriver}\"></i>\n            </a>\n        </div>\n        <div class=\"mt10\">\n            <!-- <h3 class=\"pull-left mt6 pb0 dib\">Drivers</h3> -->\n            <div class=\"inner-addon left-addon pull-left ml10\">\n                <i class=\"glyphicon glyphicon-search\"></i>\n                <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Driver\" type=\"text\" (input)=\"searchDrivers($event)\" autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"driver-list dib full-width\">\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of Drivers let indx=index;\">\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\"><span [ngClass]=\"driver.IsOnline ? 'live':''\"></span>{{driver.Intl}}</div>\n                <div class=\"pull-left\" [ngClass]=\"{'activeRoute':driver.routeShow}\" [ngStyle]=\"{ 'color': (driver.routeShow ? driver.statusColor : '#2b2b2b') }\" title=\"Click to {{driver.routeShow ? 'hide':'show'}} routes\" (click)=\"showHideRoutes(indx)\">\n                    <span class=\"fs15\">{{driver.Name}}</span>\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\n                </div>\n                <!--<div class=\"pull-right mt10\" *ngIf=\"driver.AllowCustomerDriverChat==true\">\n                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs18 far fa-comment\"></span></a>\n                </div>-->\n            </div>\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of OfflineDrivers let indx=index;\">\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\">{{driver.Intl}}</div>\n                <div class=\"pull-left\" title=\"Last location is not available\">\n                    <span class=\"fs15\">{{driver.Name}}</span>\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Status</th>\n                            <th>LastSeenAt</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let member of memberInfo\">\n                            <td>{{member.nickname}}</td>\n                            <td>{{member.userId}}</td>\n                            <td>{{member.connectionStatus}}</td>\n                            <td>{{member.lastSeenAt}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"text-right\">\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"invoice\" class=\"hide-element\">\n</div>\n\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { JobLocationDetailsModal } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\nimport { DashboardService } from '../dashboard.service';\nimport { JobBuyerDashboardViewModel } from '../Model/DashboardModel';\nexport declare var google: any;\ndeclare var currentCompanyId: any;\n\n@Component({\n    selector: 'app-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\nexport class LocationMapComponent implements OnDestroy, OnChanges {\n    //@ViewChild(DataTableDirective)\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @Input() SelectedCountryId: any\n    public Map: any;\n    public isLoading = false;\n    public zoomLevel = 5;\n    public dtOptions: any = {};\n    public jobLocationData: JobBuyerDashboardViewModel[] = [];\n    public jobLocationDataForMap: JobBuyerDashboardViewModel[] = [];\n    public opendedJobDetails: JobBuyerDashboardViewModel;\n    private setCountryCenterInterval: any;\n    public UoM: string = '';\n    public clickViewActive: Boolean = false;\n    public toogleMap: Boolean = true;\n    public centerLocationLat = 47.1853106;\n    public centerLocationLog = -125.36955;\n    private UserCountry = \"USA\";\n    private CountryCentre = {\n        USA: { lat: 39.11757961, lng: -103.8784 },\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\n    };\n    public screenOptions = {\n        position: 3\n    };\n    public mustGoUrl = \"src/assets/marker-mustgo.svg\";\n    public shouldGoUrl = \"src/assets/marker-shouldgo.svg\";\n    public couldGoUrl = \"src/assets/marker-couldgo.svg\";\n    public noDlrUrl = \"src/assets/marker-nodr.svg\";\n    public noImageUrl = \"Content/images/no-image.png\";\n\n    public CurrentCompanyId: any;\n    constructor(private _dashboard: DashboardService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n            this.fetchJobLocationData();\n        }\n    }\n    ngOnDestroy(): void {\n\n    }\n    private fetchJobLocationData(): void {\n        this.isLoading = true;\n        this._dashboard.getJobDetailsForBuyerDashboard(this.SelectedCountryId).subscribe(res => {\n            if (res) {\n                this.jobLocationData = this.checkMostPriorityJob(res);\n                this.jobLocationDataForMap = this.jobLocationData;\n            }\n            this.setCountryCentre();\n            this.isLoading = false;\n        });\n    }\n\n    private checkMostPriorityJob(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\n        const jobLocationLength = jobLocationData.length;\n        for (let i = 0; i < jobLocationLength; i++) {\n            let deliveryRequests = jobLocationData[i].jobDeliveryRequests;\n            if (deliveryRequests.length) {\n                let filteredMustGoDRs = deliveryRequests.filter((data) => data.Priority === 1);\n                let filteredShoudGoDRs = deliveryRequests.filter((data) => data.Priority === 2);\n                let filteredCouldGoDRs = deliveryRequests.filter((data) => data.Priority === 3);\n                if (filteredMustGoDRs.length > 0) {\n                    jobLocationData[i].highestPriority = 1;\n                    jobLocationData[i].iconUrl = this.mustGoUrl;\n                }\n                else if (filteredShoudGoDRs.length > 0) {\n                    jobLocationData[i].highestPriority = 2;\n                    jobLocationData[i].iconUrl = this.shouldGoUrl;\n                }\n                else {\n                    jobLocationData[i].highestPriority = 3;\n                    jobLocationData[i].iconUrl = this.couldGoUrl;\n                }\n            } else {\n                jobLocationData[i].highestPriority = 4;\n                jobLocationData[i].iconUrl = this.noDlrUrl;\n            }\n        }\n        return jobLocationData;\n    }\n\n    private setCountryCentre(): void {\n        if (this.UserCountry != \"\") {\n            this.setCountryCenterInterval = window.setTimeout(() => {\n                this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\n                this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\n                if (this.Map && this.jobLocationData.length == 0) {\n                    this.Map.setCenter(new google.maps.LatLng(this.centerLocationLat, this.centerLocationLog));\n                    this.Map.setZoom(5);\n                } else {\n                    const bounds = new google.maps.LatLngBounds();\n                    this.jobLocationData.forEach((x: JobLocationDetailsModal) => {\n                        bounds.extend(new google.maps.LatLng(x.Latitude, x.Longitude));\n                    });\n                    if (this.Map && bounds) {\n                        this.Map.fitBounds(bounds);\n                        this.Map.setCenter(bounds.getCenter()); \n                        this.Map.setZoom(5);        \n                    }\n            \n                }\n            }, 500);\n        }\n    }\n\n    private setZoomLevel(): void {\n        if (this.jobLocationData.length == 0) {\n            this.setCountryCentre();\n        } else {\n            //this.zoomLevel = 10;\n        }\n    }\n\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\n        infoWindow.open();\n    }\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\n        infoWindow.close();\n    }\n\n    public closeViewClicked(): void {\n        this.clickViewActive = false;\n    }\n\n    public toggleMapView(): void {\n        this.toogleMap = !this.toogleMap;\n    }\n\n    public onInfoViewClick(jobLocation: JobLocationDetailsModal): void {\n        window.scrollTo(0, 0);\n        this.opendedJobDetails = jobLocation;\n        if ((this.opendedJobDetails.CountryCode === 'USA') || ((this.opendedJobDetails.CountryCode === 'US'))) {\n            this.UoM = 'Gallons';\n        }\n        else {\n            this.UoM = 'Litres';\n        }\n        this.clickViewActive = true;\n        this.toogleMap = true;\n    }\n\n    public mapReady(map: any): void {\n        this.Map = map;\n        this.setCountryCentre();\n    }\n\n    public setCenterMap($event): void {\n        if (this.UserCountry && !this.jobLocationData.length) {\n            this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\n            this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\n            if (this.Map) {\n                this.Map.setCenter({ lat: this.centerLocationLat, lng: this.centerLocationLog });\n                this.Map.setZoom(5);\n            }\n        }\n    }\n}","\n\n<div class=\"animated clearboth row\" [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap}\">\n    <div [ngClass]=\"clickViewActive  ? 'col-sm-8 ' : 'col-sm-12'\">\n       \n        <div class=\"pr\">\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; bottom:0; left: 10px; font-size: 11px;\">\n            <div id=\"status-legends\" class=\"well pa0\">\n                <div class=\"border-b\">\n                    <div class=\"db pl5 pr5 pt8 pb5 radius-10 no-b-radius\">\n                        <img [src]=\"mustGoUrl\" data-statusid=\"11\">\n                        Must Go\n                    </div>\n                </div>\n                <div class=\"border-b\">\n                    <div class=\"db pa5\">\n                        <img [src]=\"shouldGoUrl\" data-statusid=\"12\">\n                        Should Go\n                    </div>\n                </div>\n                <div class=\"border-b\">\n                    <div class=\"db pa5\">\n                        <img [src]=\"couldGoUrl\" data-statusid=\"1\">\n                        Could Go\n                    </div>\n                </div>\n                <div class=\"border-b\">\n                    <div class=\"db pa5\">\n                        <img [src]=\"noDlrUrl\" data-statusid=\"1\">\n                        Unplanned\n                    </div>\n                </div>\n            </div>\n        </div>\n            <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\n            <agm-map [zoom]=\"zoomLevel\" style=\"height: 60vh;\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\">\n                <ng-container *ngFor=\"let jobLocation of jobLocationDataForMap\">\n                    <agm-marker [latitude]=\"jobLocation.Latitude\" [longitude]=\"jobLocation.Longitude\" [iconUrl]='{ \"url\": jobLocation.iconUrl, \"scaledSize\": { \"height\": 24, \"width\": 24 } }' (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\" (markerClick)=\"onInfoViewClick(jobLocation)\">\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\n                            <div>\n                                <p><strong>{{ jobLocation.JobName}}</strong></p>\n                                <!--<p>{{jobLocation.CustomerName}}</p>-->\n                            </div>\n                        </agm-info-window>\n                    </agm-marker>\n                </ng-container>\n            </agm-map>\n        </div>\n\n    </div>\n    <div class=\"col-sm-4 pl0 right_side_panel\" *ngIf=\"clickViewActive\">\n        <div class=\"dib full-width pr well pa15 pt10\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                  \n                    <a (click)=\"closeViewClicked()\" class=\"pull-right\"><i class=\"far fa-times-circle fa-lg\"></i> </a>\n                </div>\n            </div>\n           \n            <div class=\"row\">\n                <div class=\" col-sm-12 driver_details\">\n                    <div class=\"job-location\">\n                        <p class=\"mb0\">\n                            <span class=\"address1\">\n                                <i class=\"fas fa-briefcase\"></i> {{this.opendedJobDetails.JobName}}\n                            </span>\n                        </p>\n                    </div>\n                    <div class=\"job-location\">\n                        <p class=\"mb0\">\n                            <span class=\"address1\">\n                            </span>\n                        </p>\n                    </div>\n                    <div class=\"job-location\">\n                        <p class=\"mb0\">\n                            <span class=\"address1\">\n                                <i class=\"fas fa-map-marker-alt\"></i>  {{this.opendedJobDetails.Address}}, {{this.opendedJobDetails.City}}, {{this.opendedJobDetails.State}}, {{this.opendedJobDetails.ZipCode}}\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapViewComponent implements OnInit {\n  @Input() SelectedCountryId: any\n  public viewType = 1;\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n  }\n  public changeViewType(type: any): void {\n    localStorage.setItem('viewType', <string>type);\n    this.viewType = type;\n  }\n\n  public navigate(): void {\n    this.router.navigate([]).then(result => {  window.open('/Buyer/Job/BuyerWallyBoard?viewTypeFromDashboard='+ this.viewType, '_blank'); });\n  }\n}\n","<div class=\"map-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Wally Board</h4>\n                    </div>\n                    <div class=\"dib border radius-capsule shadow-b ml20\" >\n                        <div class=\"btn-group btn-filter\">\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"1\" [checked]=\"viewType==1\">\n                            <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Location</label>\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"2\" [checked]=\"viewType==2\">\n                            <label class=\"btn\" (click)=\"changeViewType(2)\">Loads</label>\n                        </div>\n                    </div>\n                    <!-- <div class=\"d-inline-block ml20\">\n                          <div class=\"form-group input-search\">\n                            <i class=\"fas fa-search form-control-search\"></i>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n                          </div>\n                    </div> -->\n                </div>\n                \n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body\">\n            <app-location-map *ngIf=\"viewType==1\" [SelectedCountryId]=\"SelectedCountryId\"></app-location-map>\n            <app-loads-map *ngIf=\"viewType==2\" [SelectedCountryId]=\"SelectedCountryId\"></app-loads-map>\n        </div>\n    </div>\n</div>\n\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { DashboardService } from '../dashboard.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  public IsLoading: boolean = false;\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n  Messages: any;\n  constructor(private dashbpardSer: DashboardService, private router: Router) { }\n\n  ngOnInit() {\n    this.initializeGrid();\n    this.getMessages();\n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':invisible' };\n    this.dtOptions = {\n      paging: false,\n      bSort: false,\n      bInfo : false,\n      pagingType: 'first_last_numbers',\n      pageLength: 10,\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n  }\n  public getMessages() {\n    this.IsLoading = true;\n    if ((this.datatableElement && this.datatableElement.dtInstance)) {\n      this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n    }\n    this.dashbpardSer.GetMessages().subscribe(data => {\n      this.IsLoading = false;\n      this.Messages = data;\n    });\n  }\n  public navigate(): void {\n    this.router.navigate([]).then(result => { window.open('/Messages/Mailbox', '_blank'); });\n  }\n}\n","<div class=\"message-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Messages</h4>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body padding-8\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"table-wrapper\">\n                        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\n                            <span class=\"spinner-dashboard pa\"></span>\n                        </div>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>From</th>\n                                    <th>Message</th>\n                                    <th>Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of Messages\">\n                                        <td>{{item?.SenderName }}</td>\n                                        <td>{{item?.Subject}}</td>\n                                        <td>{{item?.MessageDeliveredTime}}</td>\n                                    </tr>\n                                    <tr *ngIf=\"Messages && Messages.length==0\">\n                                        <td colspan=\"3\">\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Message to show</h4>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}