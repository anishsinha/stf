{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/address.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constants.ts","webpack:///src/app/app.enum.ts","webpack:///src/app/app.module.ts","webpack:///src/app/carrier-companies/search-filter.ts","webpack:///src/app/carrier/model.ts","webpack:///src/app/carrier/models/DispatchSchedulerModels.ts","webpack:///src/app/carrier/models/location.ts","webpack:///src/app/carrier/service/carrier.service.ts","webpack:///src/app/carrier/service/data.service.ts","webpack:///src/app/carrier/service/dispatcher.service.ts","webpack:///src/app/carrier/service/schedule-builder.service.ts","webpack:///src/app/carrier/service/util.service.ts","webpack:///src/app/carrier/service/wally-utility.service.ts","webpack:///src/app/declarations.module.ts","webpack:///src/app/directives/click-outside.directive.ts","webpack:///src/app/directives/copy.directive.ts","webpack:///src/app/directives/disable-control.directive.ts","webpack:///src/app/directives/myDateTimePicker.ts","webpack:///src/app/directives/numberWithDecimal.ts","webpack:///src/app/directives/numbersAlphaOnly.ts","webpack:///src/app/directives/numbersOnly.ts","webpack:///src/app/directives/required-if-not-empty.directive.ts","webpack:///src/app/directives/required-if-true.directive.ts","webpack:///src/app/directives/sorting.pipe.ts","webpack:///src/app/directives/time-greater-than-or-equal-to-validator.ts","webpack:///src/app/directives/time-smaller-than-or-equal-to-validator.ts","webpack:///src/app/dispatcher/dispatcher.model.ts","webpack:///src/app/errors/HandleError.ts","webpack:///src/app/http-generic.service.ts","webpack:///src/app/invoice/models/DropDetail.ts","webpack:///src/app/marine-ports-vessels/marine-ports-vessels.module.ts","webpack:///src/app/marine-ports-vessels/marine-ports/marine-ports-map/marine-ports-map.component.ts","webpack:///src/app/marine-ports-vessels/marine-ports/marine-ports-map/marine-ports-map.component.html","webpack:///src/app/marine-ports-vessels/marine-ports/marineports.component.ts","webpack:///src/app/marine-ports-vessels/marine-ports/marineports.component.html","webpack:///src/app/marine-ports-vessels/marine-portsandvessels.service.ts","webpack:///src/app/marine-ports-vessels/marine-vessels/marinevessels.component.ts","webpack:///src/app/marine-ports-vessels/marine-vessels/marinevessels.component.html","webpack:///src/app/marine-ports-vessels/master/master.component.ts","webpack:///src/app/marine-ports-vessels/master/master.component.html","webpack:///src/app/marine-ports-vessels/models.ts","webpack:///src/app/modules/directive.module.ts","webpack:///src/app/modules/global.module.ts","webpack:///src/app/modules/shared.module.ts","webpack:///src/app/my.functions.ts","webpack:///src/app/sales-user/sales-user.service.ts","webpack:///src/app/self-service-alias/models/location.ts","webpack:///src/app/shared-components/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/shared-components/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/shared-components/confirmation-dialog/confirmation-dialog.service.ts","webpack:///src/app/shared-components/create-trailer/create-trailer.component.ts","webpack:///src/app/shared-components/create-trailer/create-trailer.component.html","webpack:///src/app/shared-components/demand-capture-chart/demand-capture-chart.component.html","webpack:///src/app/shared-components/demand-capture-chart/demand-capture-chart.component.ts","webpack:///src/app/shared-components/dip-test/dip-test.component.ts","webpack:///src/app/shared-components/dip-test/dip-test.component.html","webpack:///src/app/shared-components/forcasting/tank-view-component.ts","webpack:///src/app/shared-components/forcasting/tank-view-component.html","webpack:///src/app/shared-components/sendbird/buyer-sendbird/buyer-sendbird.component.html","webpack:///src/app/shared-components/sendbird/buyer-sendbird/buyer-sendbird.component.ts","webpack:///src/app/shared-components/sendbird/common/sendbird.common.component.ts","webpack:///src/app/shared-components/sendbird/sendbird.component.html","webpack:///src/app/shared-components/sendbird/sendbird.component.ts","webpack:///src/app/shared-components/sendbird/sendbirdCommon.ts","webpack:///src/app/shared-components/sendbird/services/sendbird.service.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/statelist.service.ts","webpack:///src/app/tank-chart/forcasting/tank-chart.component.ts","webpack:///src/app/tank-chart/forcasting/tank-chart.component.html","webpack:///src/app/tank-chart/tank-chart.component.html","webpack:///src/app/tank-chart/tank-chart.component.ts","webpack:///src/app/tank-chart/tank-chart.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AddressService","httpClient","getAddressUrl","getBulkPlantsUrl","getBulkPlantsForAutoFreightMethodUrl","getBulkPlantDetailsUrl","getBulkplantAddressUrl","zipCode","get","pipe","handleError","prfix","orderId","_orderId","_bulkPlant","name","scheduleId","providedIn","routes","path","loadChildren","mod","CompanyAddressesModule","InvoiceModule","OrderModule","CarrierModule","DeliveryRequestDisplayModule","SelfServiceAliasModule","TractorModule","TrailerModule","DispatcherModule","CarrierCompaniesModule","DriverModule","TpdApiDashboardModule","LocationModule","BuyerWallyBoardModule","TerminalSupplierMasterModule","BuyerDashboardModule","DeliveryRequestReportModule","LfvDashboardModule","FuelsurchargeModule","FreightRateRulesModule","SalesUserModule","AccessorialFeesModule","m","MarinePortsVesselsModule","InvitationModule","ThirdPartyNetworkModule","TfcalendarModule","SuperadminCreateTerminalModule","CreateFuelGroupModule","AppRoutingModule","forRoot","enableTracing","imports","AppComponent","title","selector","templateUrl","styleUrls","RegExConstants","UsaZip","CanZip","Phone","Email","DateFormat","RegExp","Integer","Float","Quantity","MinMaxQuantity","Fee","Date","SBConstants","CompletedScheduleStatuses","OnTheWayScheduleStatuses","DraggableScheduleStatuses","CancelledScheduleStatuses","SubDrOtherThanCancellStatus","CancelCompletedDraftStatus","RackAvgTypes","Id","Name","Code","NumberConstants","MinQuantity","MaxQuantity","MinPercent","MaxPercent","allowedFileSizeInMB","additiveProductTypeId","loginURL","IsValidFileSize","sizeInBytes","Math","round","ColorConstants","LoadPriorities","InventoryDataCaptureList","ScheduleTypes","ScheduleDays","text","ScheduleQuantityType","DisplayName","DRNote","DeliveryLevelPO","SelectedTabEnum","DeliveryReqPriority","DeliveryReqStatus","DeliveryGroupStatus","DeliveryRequestTypes","DSBMethodd","TripStatus","ObjectFilter","WindowModeFilter","QueueFilter","RegionFilter","DateFilter","UoM","DeliveryRequestFor","PickupLocationType","BrokeredDrCarrierStatus","TfxModule","TruckStatus","TrailerType","LicenceRequirement","SelectedMapLabelEnum","TrailerTypeEnum","DeliveryShiftEnum","DrFilterPreferencesModel","OrderType","CumulationType","WeekDay","TierPricingType","PricingType","ColumnStatusEnum","DSBLoadQueueStatus","PanelStatus","Exception","WeekDays","Status","DeleteDriverSchedule","FreightRateRuleType","FuelGroupType","FreightPricingMethod","FreightRateCalcPreferenceType","TableType","PeriodEnum","WeekEnum","MonthEnum","AnnualyEnum","SourceRegionInputModel","CustomerId","CarrierId","FreightTableStatus","ServiceOfferingType","WizardTabEnum","WaitingAction","LFVRecordStatus","OrderGroupType","SourcingRequestStatus","TractorStatus","ApiResultType","ReqResType","DefTrailerAssetType","FuelTrailerAssetType","Country","SourcingRequestDisplayStatus","SalesTabViewType","AppModule","declarations","providers","bootstrap","startsWithPipe","value","term","filter","x","Carrier","undefined","toLowerCase","indexOf","startsWithJobPipe","Job","Compartment","TruckDetailsModel","BlendedRequest","isAdditive","IsDispatcherDragDrop","IsBlendedRequest","IsCommonPickupForBlend","BlendedGroupId","Terminal","BulkPlant","DropAddressModel","IsAdditive","SelectedDate","format","DipTestViewModel","ExistingDR","IsReAssignToCarrier","RecurringDRScheduleDetails","CompatibleProductModel","TankDipTestViewModel","IsShowMore","TankCapacityForDR","ModifiedTripInfo","CreateDeliveryRequestViewModel","CustomerJobsForCarrier","PartialDRDetails","DelRequestByTimeModel","DeliveryRequests","DelRequestsByJobModel","SplitBlendDRModel","DeliveryRequestViewModel","IsAcceptNightDeliveries","IsJobFilter","IsMaxFillAllowed","IsBrokeredCarrierDR","TBDLocations","IsSpiltDRAdded","SpiltDRs","IsMarine","IsFutureDR","IsCalendarView","WindowMode","QueueMode","Compartments","IsRetainFuelLoaded","CompartmentModel","RegionDetailModel","Drivers","Trailers","Shifts","ShiftModel","ScheduleBuilderModel","DSBSaveModel","PreloadedDRs","PostloadedDRs","Trips","CalendarScheduleModel","DRDragDropModel","SbDriverViewModel","SbTrailerViewModel","TrailerViewModel","TrailerShiftModel","ScheduleShiftModel","IsVisible","Schedules","IsCollapsed","ShiftDetailModel","FiltersData","TrailerModel","DriverAdditionalDetailModel","TripModel","IsPreLoadInfo","IsPreloadDisable","IsDispatcherDragDropSequence","IsDispatcherDragDropSequenceModified","State","CountryGroup","OrderPickupDetailModel","OrderPickupLocationModel","orderPickupDetail","location","TerminalId","TerminalName","Address","City","StateId","StateCode","CountryCode","ZipCode","CountyName","Latitude","Longitude","SiteName","BulkplantName","SiteId","WhereIsMyDriverModel","routeShow","DistatcherRegionModel","Filter","SbFilterModel","Pickups","SelectedDrivers","SelectedPickups","SelectedTrailers","TrailerViewFilterModel","DriverViewFilterModel","CompanyUsers","TankMinMaxFill","TankChartHeight","DipTest","TrailerFuelRetainViewModel","DriverAdditionalDetails","data","License","ContactNumnber","routesColor","DemandModel","isRecurringSchedule","IsEndSupplier","IsDispatchRetained","PartialDRDetail","LoadInfo","PreLoadDrViewModel","PreLoadDrResponseViewModel","PreLoadDrModel","RecurringDRSchedule","UnAssignDriverFromShiftModel","SalesDataModel","DeliveryDetailsModel","DeliveryRequestBrokerInfoViewModel","BrokerDrModel","IsBlendedGroupProduct","CompartmentInfo","TrailerCompartment","RetainInfo","TrailerRetainCompartment","ForecastingTankViewModel","ForecastingInventoryViewModel","ForecastingEstimatedUsageViewModel","ForecastingDeliveryViewModel","ForecastingExistingScheduleViewModel","ForecastingTankChartViewModel","TankDetailsForChartModel","TankLevelModel","OttoDeliveryRequests","OttoScheduleDetails","OttoBuilder","Loads","OttoTripModel","ShiftViewModel","OttoNotifications","SplitDeliveryRequestModel","RequiredQtyDetails","BlendDRDetails","ProductDeliveryScheduleInfo","isPreload","isPostload","DrInfo","ShiftColumnInfo","ShiftLoadInfo","TransferDSInfo","DragDSInfo","DRQueueAttributes","LoadQueueAttributes","SbGridViewFilterModel","SearchLocation","DRReportFilterViewModel","Regions","Locations","DeliveryRequestReportGridModel","DRReportFilterInputViewModel","OrderPartialDetailModel","OptionalPickupDetailModel","DriverId","DSBPickupLocationInfo","OptionalPickupLocationInfo","OrderFuelInfo","OrderFuelDetails","FuelTypeDetails","TfxTerminal","TfxBulkPlant","RaiseTBDDeliveryRequest","TBDRaiseDRDeliveryRequests","DelReqSource","IsTBD","RegionDSBModel","SpiltDRsModel","CancelDeliverySchedule","CancelDSDeliveryScheduleInfo","CancelDSDeliverySchedules","CancelDSDeliverySchedule","IsSubDR","IsPreLoadDR","CancelDSDeliveryScheduleViewModel","IsChecked","IsPreLoadDS","SubDRStatus","ResetDeliveryGroupScheduleModel","DispatcherMapSeq","LocationDetailsModel","TerminalMappingModel","StateList","CityList","TerminalList","TerminalMappingGridModel","RouteInformationModel","RouteInfoDetails","ShiftInfoViewModel","RouteTfxJobsList","JobWithSequence","JobRegionModel","CarrierService","GetTerminalsUrl","postTruckData","urlGetAllCustomerData","urlSaveAndUpdateCustomerMapping","urlCustomerIdNotTaken","postCheckDuplicateTerminalId","urlGetBlendCompatibleProductTypes","urlGetHeldDrCount","urlCheckAndLockDr","urlCheckAndReleaseDr","urlDeleteTruckData","getDipTestData","urlIsTankNotAvailableForOrderProducts","getSiteList","getJobListForCarrierUrl","urlGetTrucks","postRaiseRequestData","postSingleRaiseRequestData","updateDeliveryRequestData","addSubDeliveryRequestUrl","changeBrokeredDrStatusUrl","getDeliveryRequestsUrl","getBrokeredDrAssignedToMeUrl","getBrokeredDrAssignedByMeUrl","getDeliveryRequestByIdUrl","getCalendarDeliveryRequestsUrl","urlGetCompantDrivers","urlGetFuelTypes","getDemandCaptureChartdata","getOrdersForJobUrl","urlGetStates","urlGetCities","urlGetTerminals","urlGetBulkPlants","urlGetTerminalsForMapping","urlDeleteTerminalMappingById","urlTerminalMappingGrid","urlGetServingFuelTypesByCompany","postSaveProductMapping","postSaveTerminalMapping","urlGetProductMappingDetails","urlDownloadProductMappingTemplate","urlBulkUploadTemplate","urlDefaultCountry","urlDefaultServingCountry","urlDeleteProductMappingById","urlUpdateProductNames","urlUpdateTerminalId","urlCheckLocationAssignedToCarrier","urlCheckDuplicateCarrierId","urlSaveAndUpdateCarrierMapping","deleteRecurringSchedule","urlgetDefaultScheduleData","getRecurringScheduleDetailsUrl","getCreateLoadJobListForCarrierUrl","getGetBrokerJobOrderDetails","urlDownloadTerminalItemCodeMappingTemplate","urlBulkUploadTerminalItemCodeMappingFile","urlsplitDeliveryRequestData","urlsplitBlendDeliveryRequestData","urlGetDRReportDropDownFilters","urlGetDRReportFilteredData","urlGetTerminalSuppliers","urlGetDefaultUOM","urlgetDefaultTBDScheduleData","urlGetAssignedTerminalIdsForMapping","urlSaveCarrierMapping","urlGetCarrierData","urlDeleteCarrierIDMappings","urlGetCreateDrSetting","urlGetAdditiveOrders","getGetSheduleBuilderUrl","getSheduleCalendarDataUrl","saveDriverViewUrl","urlFilterDataForDsbCalenderView","customerDetail","post","TerminalMappingViewModel","regionId","date","sbViewId","sbDsbView","sbModel","customerMapping","drIds","inputData","_jobId","buyerCompanyId","requestFromBuyerWallyBoard","isShowForm","jobId","customerId","productTypeIds","endSupplier","isShowCarrierManaged","SelectedCarrierId","skipMarineConversion","productsToExclude","products","length","join","selectedDate","match","deliveryRequestId","inputModel","days","tfxJobId","companyId","countryId","stateIds","SelectedCountryId","productMapping","timestamp","responseType","files","model","carrierDetail","carrierMapping","recurringId","JobId","PoNumb","JOBSiteId","productTypeId","PoNumber","JobSiteId","drId","blendedGroupId","status","selectedCountryId","mappingId","DataService","FormChangeSubscription","drQueueChangesForFilter","DsbQueueChangesForNotification","DriverColumnChangeDetect","OpenOnTheFlyLocationFormSubject","getOnTheFlyLocationDetailsSubject","OnTheFlyDetectSubject","LoadLocationSequenceSubject","DropTerminalSelectedSubject","RemoveFeesSubject","ShowDeliveryGroupSubject","ShowOpenedDeliveryGroupSubject","EditDeliveryGroupSubject","DraftDeliveryGroupSubject","SaveModifiedLoadsSubject","PublishDeliveryGroupSubject","CancelDeliveryGroupSubject","RestoreDeletedRequestSubject","DrUpdatedSubject","RemoveDroppedRequestSubject","DeleteDeliveryGroupSubject","AcceptRejectDRSubject","UnsavedChangesSubject","SavedChangesSubject","EmptyUnsavedChangesSubject","TrailerShiftsSubject","IsLoadingButtonSubject","DeleteDRRequestSubject","DisableDSBControlsSubject","EditDriverTrailerSubject","UpdateDriverTrailerSubject","SaveDriverAssignmentSubject","AllShiftsSubject","AllTrailersSubject","AllDeliveryRequestsSubject","PublishEntireRowSubject","GroupChangeDetectSubject","ScheduleChangeDetectSubject","DragDropItemSubject","CreateLoadChangeSubject","CreateLoadCancelSubject","CreateLoadSuccessSubject","CreatePreloadSubject","UpdatePostloadSubject","DeletePostloadSubject","DeliveryPreloadOption","ResetDrByRoutesSubject","EditCompartmentAssigmentSubject","SaveEditCompartmentAssigmentSubject","OpenDsbOttoBuilderSubject","OpenDsbOttoNotificationSubject","DsbOttoNotificationCountSubject","SplitDrsInfoSubject","TransferDSInfoSubject","TrailerDSInfoSubject","UnAssignTrailerFromShift","RouteDetailsSubject","DeleteRouteDetailsSubject","HideDeliveryGroupSubject","GridViewSearchGroupSubject","RemoveTrailerGroupSubject","ShiftVisibility","RouteResetGroupSubject","RouteDeleteDeliveryGroupSubject","OptionalPickupSubject","IsScheduleBuilderSubject","CancelEntireRowSubject","CancelDSDeliveryGroupSubject","CancelDSDeliveryGroupNormalGroupDSSubject","CancelDSLocationSubject","DeliveryScheduleRemoveSubject","DispatcherLoadDragDropSubject","DispatcherLoadDragDropMapSubject","RefreshDsbOttoBuilderSubject","next","removeDuplicates","item","index","array","findIndex","find","isOpen","isRefresh","DispatcherService","getDispatcherLoadsUrl","getOnGoingLoadsUrl","getDispatcherCountryUrl","getDispatcherRegionUrl","getStatesUrl","getCountryUrl","getCityUrl","getProductTypeUrl","getJobLocationDetailsUrl","getDipTestDetailsUrl","getDriverAdditionalDetailsUrl","getDropTicketDetailsUrl","getSalesDataUrl","getBuyerSalesDataUrl","getDeliveryDetailsUrl","getScheduleQtyTypeUrl","getBuyerScheduleQtyTypeUrl","postRaiseDeliveryRequestUrl","getBuyerDeliveryDetailsUrl","postBuyerRaiseDeliveryRequestUrl","getRaisedExceptionsUrl","getRaisedExceptionsBuyerUrl","getBuyerForcastingSettingUrl","getForcastingSettingUrl","getBuyerForcastingTankDetailsUrl","getForcastingTankDetailsUrl","getBuyerForcastingTankInventoryDetailsUrl","getForcastingTankInventoryDetailsUrl","getBuyerForcastingTankEstimatedUsageDetailsUrl","getForcastingTankEstimatedUsageDetailsUrl","getBuyerForcastingTankDeliveryDetailsUrl","getForcastingTankDeliveryDetailsUrl","getBuyerForcastingTankScheduleUrl","getForcastingTankScheduleUrl","getBuyerForcastingTankChartDetailsUrl","getForcastingTankChartDetailsUrl","postForcastingCalculateTankRetainWindowInfoUrl","postForcastingCalculateTankDetailsRetainWindowInfoUrl","postForcastingBuyerCalculateTankRetainWindowInfoUrl","postForcastingBuyerCalculateTankDetailsRetainWindowInfoUrl","getCarriersForSupplierUrl","postSupplierFilters","getFiltersUrl","getDSBShiftFiltersUrl","getSupplierLocationTanksInfoUrl","getBuyerLocationTanksInfoUrl","postForcastingCalculateProductRetainWindowInfoUrl","SingleMultiWindowSubject","inputs","jobIds","selectedLocAttributeId","jobList","inventoryCaptureTypeIds","stateId","siteId","tankId","noOfDays","driverId","invoiceHeaderId","RegionId","LocationId","SelectedTab","Carriers","InventoryCaptureType","Priority","IsShowCarrierManaged","IsShowRetailJobs","Suppliers","InventoryCaptureTypeIds","UnKnowDelivery","MissingDelivery","JobIds","TankIds","StorageIds","TankId","StorageId","StartDate","EndDate","startDate","endDate","currentDateTime","currentDate","moduleId","filterInput","ScheduleBuilderService","getRegionListUrl","getRegionDetailsUrl","getOrdersUrl","getPickupTerminalsUrl","getOrderBadgesByTerminalUrl","getDeliveryReqDemandsUrl","publishDriverViewUrl","saveTrailerViewUrl","publishTrailerViewUrl","deleteGroupUrl","deleteGroupTrailerViewUrl","urlGetCompanyDrivers","urlAssignDriverAndTrailer","checkDelReqStatusUrl","getScheduleStatusUrl","getRegionDispatcherDetails","getSelectedDateDriverScheduleByDriverIdUrl","getSelectedDateDriverScheduleByDriverIdGridViewUrl","validateTrailerJobCompatibilityUrl","validateFilldOrderCompatibilityUrl","getCustomerLocationProductUrl","reCreateDeliveryRequestsUrl","cloneDrsForPreloadUrl","CreatePreloadForAcrossTheDateUrl","postUrlUnAssignDriverFromShift","getAssignCarrierDetailsUrl","getOrdersByDeliveryRequestsUrl","BrokerDeliveryRequestToCarrierUrl","BrokerDeliveryRequestsToCarriersUrl","getGetRegionsOfCompanyUrl","recallDrFromCarrierUrl","getChildOrdersURL","getTrailerComaprtmentsURL","getTrailerFuelRetainURL","getOttoSettingURL","getOttoScheduleDetailsURL","GetShiftsURL","getOttoNotificationURL","getOttoNotificationCountURL","updateOttoNotificationStatusURL","scheduleOttoDRsURL","urlGetShiftCompanyDrivers","urlGetDriversShiftsURL","getOptionalPickupTerminalsUrl","getOrderFuelTypeUrl","postUrladdOptionalPickup","postUrlgetOptionalPickupDetails","postUrlDeleteOptionalPickupDetails","getTBDPickupTerminalsUrl","getJobWithOrdersUrl","cancelDriverViewUrl","cancelDeliveryGroupSchedule","getSubDRInfoCancelDS","getSubDRsStatus","deleteRemoveDeliveryScheduleUrl","urlGetJobCoordinates","urlPostValidateDRMaxFill","carrierStatus","isBlendReq","url","selectedRegionId","tfxProductId","terminalId","bulkplantId","orders","terminalName","OrderList","_orderIds","_pickupLocationType","_pickupLocationId","OrderIds","PickupLocationId","input","currentTimeStamp","delReqId","groupDRParentIds","trackableScheduleIds","trailerIds","regionIds","trailerId","enrouteStatus","jQuery","html","array1","list","isScheduleStatus","i","ScheduleStatusId","t","ScheduleEnrouteStatusId","StatusArray","isTrackableStatus","TrackScheduleStatus","DeliveryScheduleStatusId","trailers","deliveryRequests","orderIds","_data","FuelTypeId","OrderId","shiftStartTime","shiftEndTime","regionid","response","ottoBuilder","otherRegion","shiftId","fuelType","OptionalPickupDetails","opId","UtilService","fb","trailer","selectedShifts","group","control","TrailerId","StartTime","EndTime","SelectedShifts","shifts","_sArray","forEach","push","getShiftFormGroup","_sForm","ShiftId","SlotPeriod","getTripsFormArray","trips","_tArray","getTripFormGroup","_tForm","TripId","GroupId","getDeliveryRequestFormArray","IsCommonPickup","required","LoadCode","RouteInfo","SupplierSource","TripPrevStatus","DeliveryGroupPrevStatus","getTerminalForm","getBulkPlantForm","ShiftIndex","DriverRowIndex","DriverColIndex","TrailerRowIndex","TrailerColIndex","IsEditable","TimeStamp","ShiftStartTime","ShiftEndTime","DriverScheduleMappingId","BadgeNo1","BadgeNo2","BadgeNo3","IsCommonBadge","RecurringScheduleId","ScheduleQuantityTypeText","IsTrailerExists","IsDriverScheduleExists","drivers","_dArray","IsFilldCompatible","delReqs","isCommonPickup","isShiftTrailerChange","sourceTrip","drs","some","g","blendDrs","b","IsBlendedDrParent","p","_drArray","_form","getDeliveryRequestForm","getDispatcherDeliveryRequestForm","_deliveryRequests","trip","controls","j","deliveryRequest","delReq","isTerminalPickup","isBulkplantPickup","tripFromPickupLocationType","pickupLocation","quantityValidators","min","pattern","TankMaxFill","max","orderIdValidators","_drForm","JobAddress","JobCity","JobName","ProductType","ProductTypeId","RequiredQuantity","AssignedToCompanyId","CreatedByCompanyId","SupplierCompanyId","PreviousStatus","ScheduleStatus","SchedulePreviousStatus","CreatedByRegionId","AssignedToRegionId","Sap_OrderNo","UniqueOrderNo","ParentId","DeliveryGroupId","DeliveryScheduleId","TrackableScheduleId","CustomerCompany","TrackScheduleEnrouteStatus","ProductSequence","TrackScheduleStatusName","StatusClassId","IsNotCompatible","IsBlinkDR","IsAutoCreatedDR","SourceTripId","DispactherNote","Notes","CarrierStatus","getCompartments","IsFilldInvoke","TruckLoadType","IsSpiltDRIconVisible","GroupParentDRId","GroupChildDRs","DeliveryWindow","TrailerTypes","HoursToCoverDistance","CustomerBrandId","IsSelectedForAssignment","TBDGroupId","FuelType","DeliveryDateStartTime","Vessel","Berth","BlendParentProductTypeId","TotalBlendedQuantity","BlendDrScheduleStatus","BlendedProductName","AdditiveProductName","DispatcherDragDropSequence","IndicativePrice","ScheduleStartTime","ScheduleEndTime","PreLoadedFor","addControl","PostLoadedFor","PreLoadInfo","ScheduleIndex","TripIndex","DrId","PostLoadInfo","patchValue","RecurringScheduleInfo","getTerminalFormNew","Bulkplant","getBulkPlantNew","IsBrokered","compartments","_cArray","getCompartmentsFormGroupForDR","terminal","_tform","isDemandForm","driver","_dtForm","Driver","Index1","Index2","IsIncludeAllRegionDriver","bulkPlant","_bform","isLocationPickup","startTime","slotPeriod","endTime","add","toDate","Demands","formArray","demandModels","clear","getDemandForm","demandModel","BuyerCompanyName","TankMinFill","TankCapacity","TankName","ProductName","Level","NetVolume","Ullage","IsDRExists","IsDRMissed","DeliveryReqId","firstTrailerId","tripsArray","idx","getCompartmentViewLoadFormGroup","commonPickupName","getCompartmentViewDRArray","getCompartmentViewDRForm","pickupName","disabledControl","PickupName","DrQuantity","getCompartmentsFormArray","getCompTerminalForm","getCompBulkPlantForm","comp","getCompartmentsFormGroup","disabled","CompartmentId","models","_blendedDrArray","getBlendRequestFormGroup","QuantityInPercent","WallyUtilService","RateOfConsumption","SalesViewType","SelectedCarriers","SelectedRegions","SelectedCustomerList","SelectedlocationList","SelectedPriorities","SelectedLocAttributeList","IsApplyFilter","IsApplyFilterOnPageLoad","responseString","ids","res","CompanyId","LocationTankDetailsModel","TankDetailModel","Declarations","msgsuccess","msgerror","msgwarning","msginfo","closeDG","showDG","showOpenDG","hideModal","showModal","showSliderPanel","hideSliderLoader","appendHTMLSliderContent","slidePanel","closeSlidePanel","ShiftVisibleRows","ClickOutsideDirective","elementRef","clickOutside","target","clickedInside","nativeElement","contains","emit","CopyDirective","_el","_renderer","copy_icon","createElement","addClass","setStyle","simple","listen","evt","copy","appendChild","parentNode","event","select","document","execCommand","setSelectionRange","DisableControlDirective","ngControl","condition","action","DatePicker","el","renderer","maxDate","onDateChange","currentObject","minDate","toString","todayDate","getDate","setDate","datetimepicker","setHours","useCurrent","on","dateTimePicker","CustomDatePicker","mode","daysOfWeekEnable","dateOfMonthEnable","dateOfYearEnable","daysOfWeekDisabled","enabledDates","toUpperCase","source","split","filterArray","filtered","start","startOf","subtract","getFullYear","end","isBefore","clone","keepInvalid","TimePicker","onTimeChange","NumberWithDecimal","formControl","regex","specialKeys","current","concat","key","ctrlKey","metaKey","keyCode","String","setErrors","invalidinput","preventDefault","OnlynumberAlphaDirective","specialCopyKeys","setValue","OnlynumberDirective","initalValue","replace","stopPropagation","RequiredIfNotEmptyValidator","requiredIfNotEmpty","secondControl","baseControl","errors","updateValueAndValidity","provide","useExisting","multi","RequiredIfTrueValidator","cdr","pastControl","requiredIfTrue","change","firstChange","currentValue","detectChanges","SortingPipe","filterArgs","sort","t1","t2","a","asc","DatatableCustomSortingService","extend","fn","dataTable","ext","oSort","_a","_b","Number","parseFloat","TimeGreaterThanOrEqualToValidator","startTimeControl","endTimeControl","_startTime","ConvertTime12to24","_endTime","timeSmallerThanOrEqualTo","timeGreaterThanOrEqualTo","time12h","time","modifier","hours","minutes","seconds","parseInt","TimeSmallerThanOrEqualToValidator","ForecastingLocationFilter","LocationFilterModal","SalesFilterModal","SalesTankFilterModal","SelectedRegionsData","SelectedCustomerListData","selectedLocAttributeData","HandleError","operation","result","error","console","log","message","includes","window","href","HttpGenericService","http","resourceName","JSON","stringify","put","obj","str","hasOwnProperty","encodeURIComponent","InvoiceDetailModel","BolDetails","TicketDetails","InvoiceImages","AdditionalImages","SignatureImages","TaxAffidavitImages","BDNImages","CoastGuardInspectionImages","InspectionRequestVoucherImages","FuelDropLocation","AddressModel","AccessorialFeeDetails","BlendedScheduleDetail","BlendedSchedules","ImageModel","FilePath","Data","DropDetailModel","FreightTableNameModel","AccessorialFeeInvoiceInputViewModel","AssetDropModel","IsNewAsset","PaymentTermModel","CustomerModel","LocationModel","IsMarineLocation","BolDetail","ImageList","BolProductModel","LiftTicketDetail","Products","LiftProductModel","FeeModel","ByQuantityModel","BulkPlantAddress","OtherProductTaxModel","SurchargeModel","IsFeeByDistance","FreightCostInputViewModel","AccessorialFeeTableDetailViewModel","BDRModel","IsEngineerInvitedToWitnessSample","IsNoticeToProtestIssued","IsDuplicate","y","FeeTypeId","FeeSubTypeId","CommonFee","FeeConstraintTypeId","DeDuplicateFees","existingFees","newFees","_combined","f1","getHigherFromFirst","f2","getUnmatchedFromFirst","f3","f4","compare","IsMatched","array2","_highers","first","_higher","second","isFlatFee","isPerHourFee","isPercentFee","isPerAssetFee","isPerGallonFee","_unmatched","_unmatch","QuantityInfo","DropQuantityByPrePostDipRequestModel","DropQuantityByPrePostDipResponseModel","MFNConversionResponseViewModel","MFNConversionRequestViewModel","route","component","forChild","MarinePortsMapComponent","marineService","IsLoading","marinePortsData","mapConstants","MapConstants","screenOptions","position","zoomLevel","changes","getMarinePortsData","getMarinePorts","subscribe","CenterLat","CenterLon","subscribeReloadMapSubject","infoWindow","open","close","Map","subs","reloadPortMapsSubject","mapReady","ZoomArea","IconUrl","scaledSize","width","height","MapIconUrl","MapIconSize","MarineportsComponent","salesService","confirmationdialogueservice","MarinePortsData","MarinePort","dtOptions","dtTrigger","popoverTitle","confirmButtonText","cancelButtonText","countryList","currucyList","statesList","filteredStatesList","countryGroupList","ModalText","exportColumns","columns","dom","buttons","exportOptions","orientation","pagingType","pageLength","ordering","lengthMenu","getCountryList","getcountryGroupList","getStatesOfAllCountries","CountryId","initializePortCreationForm","val","setMapCenter","setAddressValidators","header","s","portCreateForm","setLatLongValidator","DataTable","destroy","port","JobID","StateID","StateName","IsGeocodeUsed","IsGeoCoded","deletePort","StatusCode","StatusMessage","setReloadMapSubject","reset","getCountryGroupList","selectedCountryGroupId","countryGroup","CountryGroupId","GetStatesOfAllCountries","GetAddressByZip","country","confirm","confirmed","updateGeoCode","coords","lat","lng","previousLatLon","GetAddressByLongLat","updateAddressData","address","stateName","CountryName","state","st","states","isGeoCoded","setValidators","clearValidators","long","unsubscribe","invalid","dirty","touched","validator","markAllAsTouched","valid","saveMarinePort","clearPanelData","dismissSlider","getElementById","click","createPort","onSubmit","countryChanged","getAddressByZip","getAddressByLatLong","markerDragEnd","MarinePortsandvesselsService","urlGetAllCountries","urlGetMarinePorts","urlGetCountryList","urlGetCountryGroupList","urlGetStatesOfAllCountrieslist","urlGetAddressByZip","urlGetaddressbyLatLong","urlSaveMarinePort","urlDeletePort","urlGetMarineVessels","urlDeleteVessel","urlSaveMarineVessel","latitude","longitude","vessel","MarinevesselsComponent","MarineVesselsData","MarineVessel","initializeVesselCreationForm","getMarineVesselsData","vesselCreateForm","getMarineVessels","IMONumber","Flag","deleteVessel","saveMarineVessel","createVessel","MasterComponent","viewType","CountryList","getCountries","USA","GetAllCountries","changeViewType","onCountryChange","MarinePortModel","Geocode","MarineVesselsModel","DirectiveModule","GlobalModule","withConfig","warnOnNgModelWithFormControl","googleMapAPIKey","googleMapApiKey","SharedModule","apiKey","confirmButtonType","entryComponents","sum","reduce","thisObject","thisNumber","MAX_VALUE","MIN_VALUE","groupBy","sortBy","value1","value2","sortByDesc","sortArrayTwice","key1","key2","localeCompare","sortByKeyAsc","groupDrsByProduct","groupedDrs","productWiseDrs","groupItems","productDr","parse","getExistingValue","groupDrsByMultipleKey","f","groups","thisValue","getUniqueId","now","random","substr","getRecurringUniqueId","slice","SalesUserService","getTruckLoadTypeUrl","getFreightOnBoardTypesUrl","getJoblistUrl","isSourcingCompanyExistUrl","getJobDetailsUrl","getCountrylistUrl","getCurrancylistUrl","getUOMlistUrl","getStatesOfAllCountrieslistUrl","getFuelProductslistUrl","getFuelProductsByZiplistUrl","getQuantityIndicatorTypeslistUrl","getRackAvgPricingTypelistUrl","getAllFeeTypeslistUrl","getAllFeeSubTypeslistUrl","getAllFeeConstraintTypeslistUrl","getPaymentMethodslistUrl","getSourcingRequestsUrl","getAllBuyerCompaniesUrl","getGetSourcingCompanyContactPersonsUrl","getGetSourcingContactPersonDetailsUrl","postSourcingRequestUrl","postSourcingRequestEditUrl","getSourcingRequestUrl","getPreferencesSettingsUrl","postCreateOrderFromSourcingRequestUrl","ChangesSourcingRequestStatusUrl","getSourcingCityGroupTerminalsUrl","getIsCitySourcingGroupTerminalPriceAvailableUrl","getClosedTerminalUrl","getOpisTerminalslUrl","getaddressByZipUrl","UrlGetJobDetailsFrom","UrlGetCreateDREntryForm","UrlGetValidateDREntryFormUrl","UrlGetAllBuyersForAllRegions","UrlGetProductsForSalesDR","GetPricingCodesUrl","GetUserContextUrl","GetSalesUserOrdersUrl","IsPhoneNumberValidUrl","UpdateViewedStatusUrl","GetaddressbyLatLongUrl","GetAddressUrl","getDispatchRegionsUrl","getSourcingDetailUrl","GetSalesUserInvoiceUrl","GetValidTPOCompanyUrl","userId","companyName","isFtl","foAsTerminal","jobName","productDisplayGroupId","Currency","truckLoadType","feeTypeId","RequestStatus","isFromDashboard","sourcingRequestModel","requestStatus","sourcingRequestStatus","IsNewCompany","CompanyName","sourceId","fueltypeId","selectedCityRackId","lattitude","countryCode","fuelTypeId","pricingCodeId","pricingSourceId","cityRackId","filterModel","PricingTypeId","PricingSourceId","feedTypeId","fuelClassTypeId","tfxProdId","Prefix","phoneNumber","isViewed","IsViewed","type","ConfirmationDialogComponent","activeModal","dismiss","decline","accept","ConfirmationDialogService","modalService","btnOkText","btnCancelText","dialogSize","modalRef","size","componentInstance","CreateTrailerComponent","carrierService","MinDate","MaxDate","IsCompartments","StatusEnum","TrailerTypeStatusEnum","LicenceRequirementEnum","Statuses","FuelTypes","LicenceRequirements","DdlSettings","onSubmitGroupData","FreightForm","Owner","LicencePlate","TruckId","FuelCapacity","ContractNumber","Active","Lead","ExpirationDate","IsPump","SmartDeviceId","singleSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","k","setFullYear","getDefaultUOM","getFuelType","Capacity","PumpId","getFuelTypes","DefaultUoM","buildCompartment","removeAt","isTrusted","AddCompartment","isFilldCompatible","truck","clearTrailerForm","zero","setValidationForIsValidFilldCompatible","totalCapacity","sumCompartmentCapacity","postCreateTruck","_date","setDefaultValue","Class1","setSelectedDate","toggleCompartment","DemandCaptureChartComponent","showChart","showCustomDateText","customDays","dateFilterList","noChartData","isLoadingSubject","loadTrends","demandCapChart","render","getDemandCapChartData","getDateList","Value","$event","op","Result","rendor","mapList","filterkeys","tankid","storageid","re","CaptureTime","getTime","toFixed","previousDate","options","series","chart","zoom","enabled","autoScaleYaxis","zoomedArea","fill","color","opacity","stroke","toolbar","show","offsetX","offsetY","tools","download","selection","zoomin","zoomout","pan","customIcons","autoSelected","annotations","yaxis","borderColor","style","tooltip","axisTicks","axisBorder","label","background","xaxis","yAxisIndex","dataLabels","markers","labels","datetimeUTC","tickAmount","curve","lineCap","colors","dashArray","gradient","shadeIntensity","opacityFrom","opacityTo","stops","ApexCharts","querySelector","PickupForm","DipTestComponent","utilService","stateService","addresService","sbService","dispatcherService","changeDetectorRef","dataService","DipTestsForEachTank","OtherProductDipTestsForEachTank","selectedLocation","SiteList","selectedCustomer","companySiteList","SiteddlSettings","CustomerSettings","DaySetting","DelReqPriority","dipTestLoader","showForm","IsDrFromMultiWindow","selectedOrder","isTankExists","OrderDetails","disableControl","loadingCustomers","CompatibleProductTypeList","IsSalesPage","onRaiseDR","OnRaiseDRFromMultiWindow","FormValidationMessage","ScheduleQuantityTypeDetails","MaxInputDate","ScheduleDaysDetails","failedMessageIdentification","messageSplitTag","IsRetainButtonClick","SalesData","CountryGroupList","ChangePickupForOrders","DGSubscription","LocationType","Terminals","TBDTerminals","isReadOnly","CountryBasedZipcodeLabel","_loadingTerminals","minCharRequired","_loadingAddress","noTerminalFound","searchError","activePriorityTab","MustGo","isUserSubmit","FuelTypeDdlSettings","OtherFuelTypeDetails","TBDDeliveryRequestViewModel","isTBDUserSubmit","TBDdipTestLoader","DrForEditBlendedRequestIndex","BlendDrIndex","IsPickupForBlendRequest","blendRequestForm","BlendedRequests","additiveOrders","preferenceSetting","LocationManagedType","fmGroup","IsTankNotAvailableForOrderProducts","isChartDataExistSubject","currentdate","fmTBDGroup","ScheduleTBDForm","IsThisFromDrDisplay","subscribeDisableControlsSubject","unsubscribeAllSubscriptions_","closeDropDownOnSelection","multiDropdownSettings","element","height_Panel","calHeight","initPickupForm_","PickupLocationTypeChange_","getMonth","recurringSchedule","isSelected","bulkPlantName","GetBulkPlantDetails","markAsDirty","drIndex","selectedOptions","order","OrderPickupDetails","Badge1","Badge2","Badge3","ToLocation","setPickupLocation_","findDrWithSameProductAndJob","selectedDrForm","seletedOrderId","_delReqs","selectedDrObj","_drObj","BulkPlants","BulkplantList","getBulkPlantAddress_","keyword","elem","form","tdr","SelectedDRForEditPickupIndex","SelectedDRForEditPickup","_pickupType","_terminal","c","countryGroupCode","getRequiredDataForPickupDetails","blendRequests","blend","existingOrders","lastIndex","lastIndexOf","SearchTerminalFuelType","orderForBulkPlant","getBulkPlants","getPickupTerminals","setBulkPlantAddressValidators","getCountryIdFromCode","pickupType","setBulkPlantValidators_","setTerminalValidators_","_pForm","valueChanges","SearchTerminalKey","searchKeyword$","err","_address","regexUsa","regexCan","test","getAddress","addressModel","addressMapper_","isCommon","pickupLoc","selectedFormValue","getOrderBadgesByTerminal","badgeInfo","disableDeliveryGroupPickups_","enableDeliveryGroupPickups_","setCommonPickupFlag_","setPickupValidators_","commonPickup","disable","enable","subscribeCommonPickupLocationChange_","SelectedRegionId","getJobListForCarrier","ele","loadDefaultLocations","clearRaiseRequests","SelectedCustomerId","getDipTests","RequestFromBuyerWallyBoard","getCustomerForJob","getOrdersForJob","fillRaiseDrForm","_regionId","productIds","getProductExcludedOrdersForJob","SelectedLocationId","_customerId","DeliveryReqInput","request","blendedRequest","fillOtherProductRaiseDrForm","prods","currentObj","buildRaiseDRForm","getAllDipTest","getCreateDrSetting","sales","TfxJobId","job","getDipTestForSite","orderPickupDetailsExist","blendOrderPickupDetailsExist","BlendOrderPickupDetails","tanks","Tanks","IsTankAndAssetAvailableForJob","toLocaleString","CurrentThreshold","BuyerCompanyId","RecurringSchdule","isRetainInfo","SupplierCompanies","DisplayCaptureTime","ReorderQuantity","DisplayDRDetails","selected","WeekDayId","ScheduleType","TempWeekDayId","MonthDayId","IsBlendedProduct","RecurringBlendedGroupId","chartdata","checkLocationAssignedToCarrier","ResponseData","IsLocationAssignedToCarrier","priority","checkLocationAssignment","setLocationManagedType","viewportToPixels","elementFilter","offsetHeight","parts","q","side","onOrderChange","Jobs","onSiteDeSelect","cj","customerCompanyId","company","updateHeldDrCount","$","removeClass","isSapRequest","_requests","delRequests","_invalidQuantityRequests","_validRequests","_rsInvalidDays","_rsInvalidDate","_rsInvalidQuantity","rcs","postValidateDRMaxFill","CreditCheckType","isValid","getRawValue","drList","dr","blendDr","day","postRaiseRequests","displayMessage","clearForm","emitDataForDRDisplay","UpdateHeldDrCount","statusMessage","dataMessage","_rsInvalidQuantityMaxFill","postRaiseRequest","formIndex","DisableControlsSubscription","product","getDefaultRecurringScheduleDetails","totalQty","blendedRequests","requiredQty","deliveryReqControl","prop","getRecurringSchedule","hide","deleteRecurringScheduleDetails","recurringScheduleControls","getRecurringScheduleDetails","dataLength","buildRecurringSchedule","exportInvitedColumns","datatableElement","dtInstance","initializeSalesGrid","None","getSalesData","resp","tankinfo","tank","AssetId","storageId","IsBuyerCompany","calculateTankDetailsRetainWindowInfo","updateRetainInfo","calculateBuyerTankDetailsRetainWindowInfo","_product","Qty","updateRetainSingleInfo","productForm","productObj","assetIds","tankDetails","top","buildRetailInfoForm","RetainTime","RetainDate","WindowStartTime","WindowStartDate","WindowEndTime","WindowEndDate","_this","TBDGroupID","getUTCMilliseconds","SelectedFuelType","SelectedOtherFuelType","productType","FuelTypeName","DRScheduleQuantityType","ProductTypeName","RequiredQty","getTBDPickupTerminals","getDefaultTBDScheduleData","MstProductTypes","companyUoM","OtherProducts","otherProductTypeId","getDefaultTBDForm","getTBDDefaultData","isOtherProduct","getProductType","prodDeliveryRequests","prodDeliveryRequestsFormArray","prodExists","getTBDDeliveryRequestForm","x1","items","selectedDrs","removeFuel","SelectedTBDForEditPickupIndex","SelectedTBDForEditPickup","tempPickupLocationType","selectedProductIds","selectedOtherFuelType","xf1","selectedFuelType","tbdForm","prodDeliveryReq","pickupLocationType","prodDR","deliveryReq","fuelTypeExists","inputdata","clearTBDForm","terminalInfo","eventData","selectedCountryCode","isCarribean","tr","currentOrder","currentDrForm","drValue","isTank","orderList","compatibleProductTypesModel","compatibleProductTypes","MappedToProductTypeIds","ordersToRemove","productToRemove","s2","copyBlendForm","parentDr","setPickupLocationForBlendRequest","getCompatibleProductTypes","getAdditiveOrders","getCompatibleProducts","getCountryGroup","getStates","blendDrIndex","DrForEditBlendedRequest","addNewRow","_blendedRequests","_model","additiveCount","getAdditiveCountInBlend","insert","enteredQuantity","blendIndex","parentQuantity","percent","totalQuantity","abs","clearQuantityAndPercentage","formA","formB","scheduleDate","SetFutureDR","tomorrowDate","getTomorrowsDate","isCalendarDr","addTBDDR","SubmitTBDData","updatePickupLocation_","updateTBDPickupLocation_","changeDetection","OnPush","encapsulation","ForcastingTankViewComponent","wallyUtilService","LocationSchedules","LocationDrpDwnList","FilterLocationDrpDwnList","ForecastingTankDetails","ForecastingTankInventoryDetails","ForecastingTankEstimatedUsageDetails","ForecastingTankDeliveryDetails","ForecastingTankScheduleDetails","dtInventoryTrigger","dtInventoryOptions","dtEstimatedTrigger","dtEstimatedOptions","dtDeliveryTrigger","dtDeliveryOptions","dtScheduleTrigger","dtScheduleOptions","MinInputDate","IsInventoryLoading","IsEstimatedLoading","IsDeliveryLoading","IsScheduleLoading","IstankLoading","SelectedTankRegionId","IsLocDrpDwnLoading","applyFilterSubscription","intializeTableDetails","salesTabFilterForm","initLocationDropDown","subscription","isLocationLoad","CustomerIds","getIdsByList","IsRateOfConsumption","getCompanyIdsByList","getSupplierLocationTanks","intializeLocationDetails","getBuyerLocationTanks","inputName","trim","searchWord","LocationName","SelectedTankId","SelectedSiteId","SelectedTankIds","SelectedStorageId","getTankDetails","getTankInventoryDetails","getTankDeliveryDetails","getTankScheduleDetails","getForcastingTankDetails","TankInventoryDiffinHrs","getBuyerForcastingTankDetails","getForcastingTankInventoryDetails","datatableInventoryRerender","getBuyerForcastingTankInventoryDetails","getForcastingTankEstimatedUsageDetails","datatableEstimatedRerender","getBuyerForcastingTankEstimatedUsageDetails","getForcastingTankDeliveryDetails","datatableDeliveryRerender","getBuyerForcastingTankDeliveryDetails","getForcastingTankScheduleDetails","datatableScheduleRerender","getBuyerForcastingTankScheduleDetails","intializeInventoryTable","intializeEstimatedUsageTable","intializeDeliveryTable","intializeScheduleTable","Partsfiltering","locationChange","loc","TankDetail","IsUnknowDeliveryOrMissDelivery","getTankEstimatedUsageDetails","row","salesDataModel","dipTestComponent","loadTankDR","setFromDate","setToDate","searchEstimatedData","closeSidePanel","BuyerSendbirdComponent","chatService","sb","appKey","chatCollection","sbGetUserDetails","userIds","applicationUserListQueryByIds","createApplicationUserListQuery","userIdsFilter","user","statusCode","object","sbConnect","reject","connect","sbUpdateCurrentUserInfo","nickname","profileUrl","updateCurrentUserInfo","sbIntializeGroupChannel","companyUserDetails","groupChannelInfo","userDetails","comItem","EmailAddress","filteredQuery","GroupChannel","createMyGroupChannelListQuery","channelNameContainsFilter","groupChannelName","includeEmpty","limit","groupChannels","object1","sbCreateGroupChannel","regionName","regionDecription","groupChannelparams","GroupChannelParams","isPublic","isEphemeral","isDistinct","addUserIds","customType","createChannel","groupChannel","sbLoadChatHistroy","chatting_groupChannel","carrierObj","chatObj","messageListQuery","createPreviousMessageListQuery","messageLoadLimit","reverse","load","messages","chatData","createdAt","hourDate","formatAMPM","monthName","getMonthName","monthDName","substring","year","_sender","driverInfo","FullName","dispatcherDetails","companyUserInfo","userName","chatItem","messageId","channelURL","channelUrl","channelType","messageType","dateTime","fulldateTime","headerText","sbChannelMemberDetails","driverObj","memberName","memberInfos","refresh","memberdetails","members","xItem","compInfo","memberId","connectionStatus","lastSeenAt","lastSeen","getLastSeen","sbJoinGroupChannel","chatMessage","driverinfo","joinmemberdetails","leavememberdetails","currentGroupMemberDetails","currentCompanyMemberDetails","diffMembers","arr_diff","totalMember","dmember","companyUsers","userExists","connectCompanyUser","connectUsers","groupChannelObj","co","leave","checkUserOnline","applicationUserListQuery","users","sbLoadMoreMessage","showsmallLoder","currentLoginUserInfo","messageID","memberInfo","sbGetPreviousMessage","finalData","onTypingStatusUpdated","xitem","TypingIndicator","objectFound","getTypingMembers","ConnectionStatus","TypingMemberName","onMessageReceived","channel","chatMesage","loadsendMessage","messageFound","divId","dvObj","hasClass","channelMember","currentDriverDetails","groupMemberDetails","backgrounddriverDetails","commonElements","getCommon","commonelement","driverDetails","IntializeDriverChat","splice","onReadReceiptUpdated","sbSendbird","initSendbirdForm","getAPPKey","intervalTime","clearInterval","removeChannelHandler","textMessage","regionID","currentChatWidgetIndex","chatUserDetails","getDriverDetails","loadmore","firstMessage","chatLoading","companyUser","RegionDescription","RegionID","SendBirdRegionID","userEmail","RegionName","regionDescription","fullregionId","currentUserCompanyId","userIntialName","createAccount","currentUserLoginInfo","connectDispatcher","carrierObjResult","connectDriver","driverObjResult","sbjoinResponse","updateGroupChannelInfo","messageHistory","updateChatData","setTimeout","scrollBottomDiv","companyUserCount","companyUserResponse","ProfileURL","createdChannel","chatObjIndex","companyUserObj","companyObjResult","companyObjData","updateCarrierInfo","carrierObjData","driverdetails","userAvailable","driverObjData","connectionStatusResponse","templastSeenAt","updateDriverInfo","groupChannelURL","chatReponse","getSendBirdAPIKey","SendBird","appId","IntializeChannelHandler","setInterval","IsUserActive","sbCheckUserOnline","ChannelHandler","addChannelHandler","email","drItem","bkindex","backobj","iconId","iconObj","chatChannel","sendMessage","UserMessageParams","mentionType","metaArrayKeys","sbSendMessage","endTyping","sendPushNotification","sendUserMessage","chatMessageObj","startTyping","which","getPreviousMessagesByID","userDetailsArray","userCollection","IntializeSendbird","getDriversDetails","chatdefault","records","loaderElement","sendMemberInfo","arr1","arr2","common","a1","a2","diff","scrollTop","scrollHeight","getHours","getMinutes","ampm","strTime","monthNames","currentUserInfo","SendBirdCommonComponent","startDateTime","results","toTime","fromTime","datediff","floor","weeks","months","years","getSeconds","getTense","tense","singular","SendbirdComponent","getRegionDispacther","BackgroupChatIntialize","ChatMessage","unreadCount","Carriar","GroupChannelInfo","MemberInfo","ChatData","chatResponse","Roles","getDriverDetailsURL","getSendBirdAPIKeyURL","sendPushNotificationTODriver","getDriversDetailsURL","loaderDetails","loader","memberInfoDetails","defaultdriverChatDetails","defaultdriverChat","memberData","driverObjDetails","msgData","driverIds","SidebarComponent","StatelistService","stateUrl","countryUrl","countryGroupUrl","DropdownItem","ShiftLoadQueueDropdownItem","StateDropdownExtendedItem","DropdownCustomItem","DropdownItemExt","FeeSubType","TBDDropdownItem","LocationDropdownItem","AdditiveOrderViewModel","ForcastingTankChartComponent","IsChartLoading","previousValue","selectedJobId","selectedSiteId","selectedTankId","selectedStorageId","getForcastingTankChartDetails","updateChartData","getBuyerForcastingTankChartDetails","_labels","XAxisTimeSpan","_lineChartData","TankDetailsForChart","ctx","datasets","scales","xAxes","TankChartComponent","httpSer","NoOfDays","cData","toogleMap","GetSalesDataForGraphUrl","isSupplierView","loadChart","getTankChartData","fetchAll","CreatedDate","valueOf","Sale","TankChartModule","ngModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddressService extends HandleError {\r\n\r\n    private getAddressUrl = '/Validation/GetAddressByZip?zipCode=';\r\n    private getBulkPlantsUrl = '/Supplier/SupplierBase/GetBulkPlants?Prefix=';\r\n    private getBulkPlantsForAutoFreightMethodUrl: string = 'Supplier/Invoice/GetBulkPlantsForAutoFreightMethod?orderId=';\r\n    private getBulkPlantDetailsUrl = '/Supplier/SupplierBase/GetBulkPlantDetails?name=';\r\n    private getBulkplantAddressUrl = '/Supplier/Invoice/GetBulkplantAddress?trackableScheduleId=';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getAddress(zipCode: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAddressUrl + zipCode)\r\n            .pipe(catchError(this.handleError<any>('getAddress', null)));\r\n    }\r\n\r\n    getBulkPlants(prfix: string, orderId: number = 0): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getBulkPlantsUrl + prfix + '&orderId=' + orderId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getBulkPlants', null)));\r\n    }\r\n    getBulkPlantsForAutoFreightMethod(_orderId: number, _bulkPlant?: string): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getBulkPlantsForAutoFreightMethodUrl + _orderId + '&bulkPlant=' + _bulkPlant)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getBulkPlantsForAutoInvoice', null)));\r\n    }\r\n    GetBulkPlantDetails(name: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getBulkPlantDetailsUrl + name)\r\n            .pipe(catchError(this.handleError<any>('GetBulkPlantDetails', null)));\r\n    }\r\n\r\n    getBulkplantAddress(scheduleId: number, orderId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getBulkplantAddressUrl + scheduleId + '&orderId=' + orderId)\r\n            .pipe(catchError(this.handleError<any>('getBulkplantAddress', null)));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"Settings/Profile\",\r\n        loadChildren: () => import('./company-addresses/lazy-loading/company-addresses.module').then(mod => mod.CompanyAddressesModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Region\",\r\n        loadChildren: () => import('./company-addresses/lazy-loading/company-addresses.module').then(mod => mod.CompanyAddressesModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin\",\r\n        loadChildren: () => import('./company-addresses/lazy-loading/company-addresses.module').then(mod => mod.CompanyAddressesModule)\r\n    },\r\n    {\r\n        path: 'Supplier/Invoice',\r\n        loadChildren: () => import('./invoice/lazy-loading/invoice.module').then(mod => mod.InvoiceModule)\r\n    },\r\n    {\r\n        path: \"Supplier/OrderGroup/View\",\r\n        loadChildren: () => import('./order/lazy-loading/order.module').then(mod => mod.OrderModule)\r\n    },\r\n    {\r\n        path: \"Buyer/OrderGroup/View\",\r\n        loadChildren: () => import('./order/lazy-loading/order.module').then(mod => mod.OrderModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Dashboard\",\r\n        loadChildren: () => import('./carrier/carrier.module').then(mod => mod.CarrierModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder\",\r\n        loadChildren: () => import('./carrier/carrier.module').then(mod => mod.CarrierModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder/Index\",\r\n        loadChildren: () => import('./carrier/carrier.module').then(mod => mod.CarrierModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder/DeliveryRequests\",\r\n        loadChildren: () => import('./delivery-request-display/delivery-request-display.module').then(mod => mod.DeliveryRequestDisplayModule)\r\n    },\r\n    {\r\n        path: \"Carrier/SelfServiceAlias/View\",\r\n        loadChildren: () => import('./self-service-alias/self-service-alias.module').then(mod => mod.SelfServiceAliasModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Tractor/View\",\r\n        loadChildren: () => import('./tractor/tractor.module').then(mod => mod.TractorModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Freight/View\",\r\n        loadChildren: () => import('./trailer/trailer.module').then(mod => mod.TrailerModule)\r\n    },\r\n    {\r\n        path: \"Dispatcher\",\r\n        loadChildren: () => import('./dispatcher/dispatcher.module').then(mod => mod.DispatcherModule)\r\n    },\r\n    {\r\n        path: \"Settings/Profile/CarrierCompanies\",\r\n        loadChildren: () => import('./carrier-companies/lazy-loading/carrier-companies.module').then(mod => mod.CarrierCompaniesModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Job/View\",\r\n        loadChildren: () => import('./carrier-companies/lazy-loading/carrier-companies.module').then(mod => mod.CarrierCompaniesModule)\r\n    },\r\n    //driver Schedule  \r\n    {\r\n        path: \"Settings/Profile/DriverManagement\",\r\n        loadChildren: () => import('./driver/driver.module').then(mod => mod.DriverModule)\r\n    },\r\n    {\r\n        path: \"Home/TPDAPIDashboard\",\r\n        loadChildren: () => import('./tpd-api-dashboard/tpd-api-dashboard.module').then(mod => mod.TpdApiDashboardModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Location\",\r\n        loadChildren: () => import('./location/lazy-loading/location.module').then(mod => mod.LocationModule)\r\n    },\r\n    {\r\n        path: \"Buyer/Job/BuyerWallyBoard\",\r\n        loadChildren: () => import('./buyer-wally-board/buyer-wally-board.module').then(mod => mod.BuyerWallyBoardModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin/GetTerminalSupplier\",\r\n        loadChildren: () => import('./terminalSupplierMaster/terminal-supplier-master.module').then(mod => mod.TerminalSupplierMasterModule)\r\n    },\r\n    {\r\n        path: \"Buyer/Dashboard\",\r\n        loadChildren: () => import('./buyer-dashboard/buyer-dashboard.module').then(mod => mod.BuyerDashboardModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder/DeliveryRequestsReport\",\r\n        loadChildren: () => import('./carrier/delivery-request-report/delivery-request-report.module').then(mod => mod.DeliveryRequestReportModule)\r\n    },\r\n    {\r\n        path: \"Supplier/LiftFile\",\r\n        loadChildren: () => import('./lfv-dashboard/lfv-dashboard.module').then(mod => mod.LfvDashboardModule)\r\n    },\r\n    {\r\n        path: \"Supplier/FuelSurcharge\",\r\n        loadChildren: () => import('./fuelsurcharge/fuelsurcharge.module').then(mod => mod.FuelsurchargeModule)\r\n    },\r\n    {\r\n        path: \"Supplier/FreightRate\",\r\n        loadChildren: () => import('./freightRates/freight.rate.module').then(mod => mod.FreightRateRulesModule)\r\n    },\r\n    {\r\n        path: \"SalesUser\",\r\n        loadChildren: () => import('./sales-user/sales-user.module').then(mod => mod.SalesUserModule)\r\n    },   \r\n    {\r\n        path: \"Supplier/AccessorialFees\",\r\n        loadChildren: () => import('./accessorial-fees/accessorial-fees.module').then(mod => mod.AccessorialFeesModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin/MarinePortsAndVessels\",\r\n        loadChildren: () => import('./marine-ports-vessels/marine-ports-vessels.module').then(m => m.MarinePortsVesselsModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Job/MarinePortsAndVessels\",\r\n        loadChildren: () => import('./marine-ports-vessels/marine-ports-vessels.module').then(m => m.MarinePortsVesselsModule)\r\n    },\r\n    {\r\n        path: \"Invitation\",\r\n        loadChildren: () => import('./invitation/invitation.module').then(mod => mod.InvitationModule)\r\n    },\r\n    {\r\n        path: \"Supplier/ThirdPartyNetwork\",\r\n        loadChildren: () => import('./third-party-network/third-party-network.module').then(mod => mod.ThirdPartyNetworkModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Calendar\",\r\n        loadChildren: () => import('./calendar/tfcalendar.module').then(mod => mod.TfcalendarModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin/CreateTerminals\",\r\n        loadChildren: () => import('./superadmin-create-terminals/superadmin-create-terminal.module').then(m => m.SuperadminCreateTerminalModule)\r\n    },\r\n    {\r\n        path: \"Supplier/FuelGroup/Create\",\r\n        loadChildren: () => import('./create-fuel-group/create-fuel-group.module').then(mod => mod.CreateFuelGroupModule)\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes, { enableTracing: false })\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TrueFill';\n}\n","<router-outlet>\r\n   \r\n</router-outlet>","import { DropdownItem } from \"src/app/statelist.service\";\r\nimport { DropDownItem } from \"./buyer-wally-board/Models/BuyerWallyBoard\";\r\n\r\n//REGULAR EXPRESSION CONSTANTS\r\nexport const RegExConstants = {\r\n    UsaZip: /^\\d{5}(?:[-\\s]\\d{4})?$/,\r\n    CanZip: /^[A-Za-z]\\d[A-Za-z][ ]\\d[A-Za-z]\\d$/,\r\n    Phone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\r\n    Email: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n    DateFormat: new RegExp(\"^((0?[1-9]|1[012])[-/.](0?[1-9]|[12][0-9]|3[01])[-/.](20)?[0-9]{4})*$\"),\r\n    Integer: /^\\d+$/,\r\n    Float: /^((\\d+(\\.\\d *)?)|((\\d*\\.)?\\d+))$/,\r\n    Quantity: \"^(\\0*[1-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]*\\.[0-9]*[1-9][0-9]*)$\",// Use for Net, Gross, lift quantity\r\n    MinMaxQuantity: \"/^([0-9]\\d*(\\.\\d+)?)$/\",\r\n    Fee : \"/^[0-9]\\d*(\\.\\d+)?$/\",\r\n    Date: new RegExp(/^(0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])[\\/\\-]\\d{4}$/),\r\n}\r\n\r\n//CONSTANTS FOR SCHEDULE BUILDER MODULE\r\nexport const SBConstants = {\r\n    CompletedScheduleStatuses: [7, 8, 9, 10, 24],\r\n    OnTheWayScheduleStatuses: [1, 3, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20],\r\n    DraggableScheduleStatuses: [0, 1, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 23],\r\n    CancelledScheduleStatuses: [5],\r\n    SubDrOtherThanCancellStatus: [3, 23, 17, 11, 20, 15, 14, 1, 16, 6, 12],\r\n    CancelCompletedDraftStatus: [7, 8, 5, 0]\r\n}\r\n\r\n//RACK AVG TYPE\r\nexport const RackAvgTypes: DropdownItem[] = [\r\n    { Id: 1, Name: '+$', Code: '' },\r\n    { Id: 2, Name: '-$', Code: '' },\r\n    { Id: 3, Name: '+%', Code: '' },\r\n    { Id: 4, Name: '-%', Code: '' }\r\n]\r\n\r\nexport interface DropDown {\r\n    id: string;\r\n    text: string;\r\n    disabled?: boolean;\r\n    children?: Array<DropDown>;\r\n    additional?: any;\r\n}\r\n\r\nexport const NumberConstants = {\r\n    MinQuantity: 0.00001,\r\n    MaxQuantity: 9999999999,\r\n\r\n    MinPercent: 0.00001,\r\n    MaxPercent: 100,\r\n}\r\n\r\nexport const allowedFileSizeInMB: number = 5; //MB\r\n\r\nexport const additiveProductTypeId: number = 26;\r\n\r\nexport const loginURL: string = \"/Account/Login\";\r\n\r\nexport function IsValidFileSize(sizeInBytes: number) {\r\n    if (sizeInBytes) {\r\n        return (Math.round(sizeInBytes / 1024) / 1024) <= allowedFileSizeInMB;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const ColorConstants = ['HotPink', 'CornflowerBlue', 'Olive', 'SteelBlue', 'Gray', 'Tomato', 'Orange', 'Gold', 'DarkCyan', 'ForestGreen', 'FireBrick', 'YellowGreen', 'SkyBlue', 'Orchid', 'Wheat', 'DarkTurquoise', 'Crimson', 'Chocolate', 'LightBlue', 'Lime', 'Maroon', 'Teal',];\r\n\r\n\r\nexport const LoadPriorities: DropDownItem[] =\r\n    [\r\n        { Id: 1, Name: 'Must Go' },\r\n        { Id: 2, Name: 'Should Go' },\r\n        { Id: 3, Name: 'Could Go' }\r\n    ];\r\n\r\nexport const InventoryDataCaptureList: DropDownItem[] =\r\n    [\r\n        { Id: 0, Name: 'Not specified' },\r\n        { Id: 1, Name: 'Connected' },\r\n        { Id: 2, Name: 'Manual' },\r\n        { Id: 3, Name: 'Call-In' },\r\n        { Id: 4, Name: 'Mixed' }\r\n    ];\r\n\r\nexport const ScheduleTypes : DropDownItem[] = [\r\n    { Id: 1, Name: \"Weekly\" },\r\n    { Id: 2, Name: \"Bi-Weekly\" },\r\n    { Id: 3, Name: \"Monthly\" },\r\n    { Id: 4, Name: \"Specific Date(s)\" },\r\n]\r\n\r\nexport const ScheduleDays = [\r\n    { id: \"1\", text: \"Mon\" },\r\n    { id: \"2\", text: \"Tue\" },\r\n    { id: \"3\", text: \"Wed\" },\r\n    { id: \"4\", text: \"Thu\" },\r\n    { id: \"5\", text: \"Fri\" },\r\n    { id: \"6\", text: \"Sat\" },\r\n    { id: \"7\", text: \"Sun\" }\r\n]\r\n\r\nexport const ScheduleQuantityType = [\r\n    {\r\n        Id: 1, Code: \"1\", Name: \"Quantity\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 2, Code: \"2\", Name: \"Balance\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 3, Code: \"3\", Name: \"Full Load\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 4, Code: \"4\", Name: \"Small Compartment\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 5, Code: \"5\", Name: \"Not Specified\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    }\r\n]\r\n","\r\nexport enum SelectedTabEnum {\r\n    Priority = 1,\r\n    Tanks = 2,\r\n    Location = 3\r\n}\r\n\r\nexport enum DeliveryReqPriority {\r\n    None = 0,\r\n    MustGo = 1,\r\n    ShouldGo = 2,\r\n    CouldGo = 3,\r\n}\r\n\r\nexport enum DeliveryReqStatus {\r\n    None = 0,\r\n    Pending = 1,\r\n    Assigned = 2,\r\n    ScheduleCreated = 3,\r\n    Deleted = 4,\r\n    Draft = 5,\r\n    InUse = 6\r\n}\r\n\r\nexport enum DeliveryGroupStatus {\r\n    None = 0,\r\n    Draft = 1,\r\n    Published = 2,\r\n    Deleted = 3\r\n}\r\n\r\nexport enum DeliveryRequestTypes {\r\n    None = 0,\r\n    MustGo = 1,\r\n    ShouldGo = 2,\r\n    CouldGo = 3,\r\n    Missed = 4,\r\n    AssignedToMe = 5,\r\n    AssignedByMe = 6,\r\n}\r\n\r\nexport enum DSBMethodd {\r\n    None = 0,\r\n    Save = 1,\r\n    DriverAssignment = 2,\r\n    Publish = 3,\r\n    Delete = 4,\r\n    DragDrop = 5\r\n}\r\n\r\nexport enum TripStatus {\r\n    None = 0,\r\n    Added = 1,\r\n    Modified = 2,\r\n    Deleted = 3\r\n}\r\n\r\nexport enum ObjectFilter {\r\n    None = 0,\r\n    Driver = 1,\r\n    Trailer = 2\r\n}\r\nexport enum WindowModeFilter {\r\n    None = 0,\r\n    Single = 1,\r\n    Multi = 2\r\n}\r\nexport enum QueueFilter {\r\n    DRs = 1,\r\n    Queued = 2\r\n}\r\nexport enum RegionFilter {\r\n    None = 0,\r\n    MyRegion = 1,\r\n    OtherRegion = 2\r\n}\r\n\r\nexport enum DateFilter {\r\n    None = 0,\r\n    Today = 1,\r\n    Tomorrow = 2,\r\n    Date = 3,\r\n    YesterDay = 4\r\n}\r\n\r\nexport enum UoM {\r\n    None = 0,\r\n    Gallons = 1,\r\n    Litres = 2,\r\n    Barrels = 3,\r\n    MetricTons = 4\r\n}\r\n\r\nexport enum DeliveryRequestFor {\r\n    UnKnown = 0,\r\n    Tank = 1,\r\n    Order = 2,\r\n    ProductType = 3\r\n}\r\n\r\nexport enum PickupLocationType {\r\n    None = 0,\r\n    Terminal = 1,\r\n    BulkPlant = 2\r\n}\r\n\r\nexport enum BrokeredDrCarrierStatus {\r\n    None = 0,\r\n    Pending = 1,\r\n    Accepted = 2,\r\n    Rejected = 3,\r\n    Recalled = 4\r\n}\r\n\r\nexport enum TfxModule {\r\n    None,\r\n    SupplierWallyboardLocation,\r\n    SupplierWallyboardLoads,\r\n    SupplierWallyboardSales,\r\n    SupplierWallyboardSalesPriority,\r\n    SupplierWallyboardSalesTanks,\r\n    BuyerWallyboardLocation,\r\n    BuyerWallyboardLoads,\r\n    BuyerWallyboardSales,\r\n    BuyerWallyboardSalesPriority,\r\n    BuyerWallyboardSalesTanks,\r\n    BuyerWallyboardSalesLocation,\r\n    AssignedByMeDeliveryRequests\r\n}\r\n\r\nexport enum TruckStatus {\r\n    Active = 1,\r\n    InActive = 2,\r\n    UnderMaintenance = 3\r\n}\r\n\r\nexport enum TrailerType {\r\n    Lead = 1,\r\n    Pup = 2,\r\n    Quad = 3,\r\n    Tandem = 4,\r\n    Tridem = 5\r\n}\r\n\r\nexport enum LicenceRequirement {\r\n    Class1 = 1,\r\n    Class3 = 2,\r\n}\r\n\r\nexport enum SelectedMapLabelEnum {\r\n    OnTheWayToTerminal = 11,\r\n    ArrivedAtTerminal = 12,\r\n    OnTheWayToLocation = 1,\r\n    ArrivedAtLocation = 18\r\n}\r\n\r\nexport enum TrailerTypeEnum {\r\n    Lead = 1,\r\n    Pup = 2,\r\n    Quad = 3,\r\n    Tandem = 4,\r\n    Tridem = 5\r\n}\r\n\r\nexport enum DeliveryShiftEnum {\r\n    None = 0,\r\n    Morning = 1,\r\n    Evening = 2\r\n}\r\n\r\nexport class DrFilterPreferencesModel {\r\n    Id: string;\r\n    UserId: number;\r\n    CompanyId: number;\r\n    Date: Date;\r\n    FilterData: string;\r\n    StatusCode: number;\r\n    StatusMessage: string;\r\n    RegionId: string;\r\n}\r\n\r\nexport enum OrderType {\r\n    ALL = 0,\r\n    FTL = 1,\r\n    LTL = 2,\r\n}\r\n\r\nexport enum CumulationType {\r\n    Unknown = 0,\r\n    Weekly = 1,\r\n    BiWeekly = 2,\r\n    Monthly = 3,\r\n    SpecificDates = 4\r\n}\r\n\r\nexport enum WeekDay {\r\n    Monday = 1,\r\n    Tuesday = 2,\r\n    Wednesday = 3,\r\n    Thursday = 4,\r\n    Friday = 5,\r\n    Saturday = 6,\r\n    Sunday = 7\r\n}\r\n\r\nexport enum TierPricingType {\r\n    Unknown = 0,\r\n    VolumeBased = 1,\r\n    DeliveryQuantityBased = 2\r\n}\r\n\r\nexport enum PricingType {\r\n    RackAverage = 1,\r\n    PricePerGallon = 2,\r\n    Tier = 3,\r\n    Suppliercost = 4,\r\n    RackLow = 5,\r\n    RackHigh = 6\r\n}\r\n\r\nexport enum ColumnStatusEnum {\r\n    None = 0,\r\n    Completed = 1,\r\n    Partial = 2,\r\n    Empty = 3,\r\n    Published = 4,\r\n}\r\n\r\nexport enum DSBLoadQueueStatus {\r\n    New = 0,\r\n    InProgress,\r\n    Success,\r\n    Failed\r\n}\r\n\r\nexport enum PanelStatus {\r\n    ShowRouteList = 1,\r\n    ShowForm = 2\r\n}\r\n\r\nexport enum Exception {\r\n    UnKnowDelivery = 4,\r\n    MissingDelivery = 5\r\n}\r\n\r\nexport enum WeekDays {\r\n    SUN = 0,\r\n    MON = 1,\r\n    TUE = 2,\r\n    WED = 3,\r\n    THU = 4,\r\n    FRI = 5,\r\n    SAT = 6\r\n}\r\n\r\nexport enum Status {\r\n    InActive = 0,\r\n    Active = 1\r\n}\r\n\r\nexport enum DeleteDriverSchedule {\r\n    Single = 1,\r\n    Range = 2,\r\n    Whole = 3\r\n}\r\n\r\nexport enum FreightRateRuleType {\r\n    Unknown = 0,\r\n    P2P = 1,\r\n    Range = 2,\r\n    Route = 3\r\n}\r\n\r\nexport enum FuelGroupType {\r\n    Unknown = 0,\r\n    Standard = 1,\r\n    Custom = 2\r\n}\r\n\r\nexport enum FreightPricingMethod {\r\n        Manual = 1,\r\n        Auto = 2,\r\n}\r\n\r\nexport enum FreightRateCalcPreferenceType {\r\n    Unknown = 0,\r\n    Round = 1,\r\n    Proportion = 2\r\n}\r\n\r\nexport enum TableType {\r\n    Unknown = 0,\r\n    Master = 1,\r\n    Customer = 2,\r\n    Carrier = 3\r\n}\r\n\r\nexport enum PeriodEnum {\r\n    WEEKLY = \"WEEKLY\",\r\n    MONTHLY = \"MONTHLY\",\r\n    ANNUALY = \"ANNUALY\"\r\n}\r\n\r\nexport enum WeekDays {\r\n    Sun = 0,\r\n    Mon = 1,\r\n    Tue = 2,\r\n    Wed = 3,\r\n    Thu = 4,\r\n    Fri = 5,\r\n    Sat = 6\r\n}\r\n\r\nexport enum WeekEnum {\r\n    Same_Week = \"Same Week\",\r\n    Week_Later_1 = \"1 Week Later\",\r\n    Week_Later_2 = \"2 Weeks Later\",\r\n    Week_Later_3 = \"3 Weeks Later\"\r\n}\r\n\r\nexport enum MonthEnum {\r\n    Month_Later_1 = \"1 Month Later\",\r\n    Month_Later_2 = \"2 Months Later\",\r\n    Month_Later_3 = \"3 Months Later\"\r\n}\r\n\r\nexport enum AnnualyEnum {\r\n    Year_Later_1 = \"1 Year Later\",\r\n    Year_Later_2 = \"2 Years Later\",\r\n    Year_Later_3 = \"3 Years Later\"\r\n}\r\n\r\nexport class SourceRegionInputModel {\r\n    TableType: string;\r\n    CustomerId: number[] = [];\r\n    CarrierId: number[] = [];\r\n}\r\n\r\nexport enum FreightTableStatus {\r\n    Draft = 1,\r\n    Published = 2,\r\n    Archived = 3\r\n}\r\n\r\nexport enum ServiceOfferingType {\r\n    FTL = 1,\r\n    LTL,\r\n    LTLWetHosing,\r\n    DEF,\r\n    DEFWetHosing\r\n}\r\n\r\nexport enum WizardTabEnum {\r\n    None = 0,\r\n    ContactInfo,\r\n    CompanyInfo,\r\n    FleetInfo,\r\n    ServiceOfferings\r\n}\r\n\r\nexport enum WaitingAction {\r\n    Nothing = 0,\r\n    UpdatedPrice = 1,\r\n    AvalaraTax = 2,\r\n    CustomerApproval = 3,\r\n    BolDetails = 4,\r\n    ExceptionApproval = 5,\r\n    Images = 6,\r\n    PrePostDipData = 7\r\n}\r\n\r\nexport enum LFVRecordStatus {\r\n    None = 0,\r\n    Clean, //Matched Records\r\n    PendingMatch,\r\n    NoMatch,\r\n    IgnoreMatch,\r\n    UnMatched,\r\n    ActiveExceptions,\r\n    ReprocessSubmitted,\r\n    Duplicate,\r\n    PartialMatch,\r\n    ForcedIgnore\r\n}\r\n\r\nexport enum OrderGroupType {\r\n    MultiProducts = 1,\r\n    Tier = 2,\r\n    Blend = 3\r\n}\r\n\r\nexport enum SourcingRequestStatus {\r\n    Submitted = 1,\r\n    Modified = 2,\r\n    Accepted = 3,\r\n    AcceptedAndModified = 4,\r\n    OrderCreated = 5,\r\n    Lost = 6\r\n}\r\n\r\nexport enum TractorStatus {\r\n    Active = 1,\r\n    InActive = 2,\r\n    UnderMaintenance = 3\r\n}\r\n\r\nexport enum ApiResultType {\r\n    Total = 3,\r\n    Success = 0,\r\n    Exception = 1,\r\n}\r\n\r\nexport enum ReqResType {\r\n    Response = 1,\r\n    Request = 2,\r\n}\r\n\r\nexport enum DefTrailerAssetType {\r\n    \"Box Truck\" = 1,\r\n    \"Tank Wagon\" = 2,\r\n    \"Stake Bed\" = 3,\r\n    \"Transport\" = 4,\r\n}\r\n\r\nexport enum FuelTrailerAssetType {\r\n    FTL = 1,\r\n    LTL = 2\r\n}\r\n\r\nexport enum Country {\r\n    All = 0,\r\n    USA = 1,\r\n    CAN = 2,\r\n    CAR = 4\r\n}\r\nexport enum SourcingRequestDisplayStatus {\r\n    All = 1,\r\n    New = 2,\r\n    WIP = 3,\r\n    Sourced = 4,\r\n    Lost = 5\r\n}\r\nexport enum SalesTabViewType {\r\n    PriorityTab = 1,\r\n    TanksTab = 2,\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { GlobalModule } from './modules/global.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MarinePortsVesselsModule } from './marine-ports-vessels/marine-ports-vessels.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SidebarComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        //modules for lazy loading\r\n        GlobalModule,\r\n        NgbModule,\r\n        MarinePortsVesselsModule\r\n    ],\r\n\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({ name: 'startsWith' })\r\nexport class startsWithPipe implements PipeTransform {\r\n    transform(value: any[], term: string): any[] {\r\n        return value.filter((x: any) => x.Carrier != null && x.Carrier != undefined && x.Carrier.Name.toLowerCase().indexOf(term.toLowerCase()) >= 0)\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'startsWithJob' })\r\nexport class startsWithJobPipe implements PipeTransform {\r\n    transform(value: any[], term: string): any[] {\r\n        return value.filter((x: any) => x.Job.Name != null && x.Job.Name != undefined && x.Job.Name.toLowerCase().indexOf(term.toLowerCase()) >= 0)\r\n    }\r\n}\r\n","import { LicenceRequirement, TrailerType, TruckStatus } from 'src/app/app.enum';\r\nimport { DropdownItem } from '../carrier-companies/service/assigncarrier.service';\r\n\r\nexport class Compartment {\r\n    public CompartmentId: string;\r\n    public FuelType: number;\r\n    public Capacity: number;\r\n    public PumpId: string;\r\n}\r\n\r\nexport class TruckDetailsModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public TruckId: string;\r\n    public Owner: string;\r\n    public FuelCapacity: number;\r\n    public ContractNumber: string;\r\n    public Compartments: Compartment[];\r\n    public CreatedBy: number;\r\n    public CompanyId: number;\r\n    public CreatedDate: Date;\r\n    public Status: TruckStatus;\r\n    public TrailerType: TrailerType;\r\n    public LicenceRequirement: LicenceRequirement;\r\n    public LicencePlate: string;\r\n    public ExpirationDate: string;\r\n    public IsDeleted: boolean;\r\n    public Drivers: DropdownItem[];\r\n    public IsPump: string;\r\n    public IsFilldCompatible: boolean;\r\n}\r\n\r\n","import * as moment from 'moment';\r\nimport { DateFilter, DeliveryGroupStatus, DeliveryReqPriority, DeliveryRequestFor, DeliveryRequestTypes, ObjectFilter, PickupLocationType, QueueFilter, RegionFilter, TripStatus, WindowModeFilter } from 'src/app/app.enum';\r\nimport { TfxCarrierDropdownDisplayItem } from 'src/app/company-addresses/region/model/region';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { JobRegionModel, RouteInfoDetails } from './location';\r\n\r\n\r\nexport class BlendedRequest {\r\n    public Berth: string;\r\n    public Id: string;\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public ProductType: string;\r\n    public ProductTypeId: number;\r\n    public RequiredQuantity: number;\r\n    public QuantityInPercent: number;\r\n    public PickupLocationType: number;\r\n    public StatusClassId: number;\r\n    public ScheduleStatus: number;\r\n    public SchedulePreviousStatus: number;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public IsAdditive: boolean;\r\n    public DeliveryScheduleId: number;\r\n    public TrackableScheduleId: number;\r\n    public TrackScheduleStatus: number;\r\n    public TrackScheduleStatusName: string;\r\n    public TrackScheduleEnrouteStatus: number;\r\n    public UoM: number;\r\n    public JobId: number;\r\n    public CarrierStatus: number;\r\n    public IsBlendedRequest: boolean;\r\n    public IsCommonPickupForBlend: boolean;\r\n    public BlendedGroupId: string;\r\n    public BlendedProductName: string;\r\n    public AdditiveProductName: string;\r\n    public IsBlendedDrParent: boolean;\r\n    public TotalBlendedQuantity: number;\r\n    public BlendParentProductTypeId: number;\r\n    public SelectedDate: string;\r\n    public IsFutureDR: boolean;\r\n    public IsCalendarView: boolean\r\n    public IsDispatcherDragDrop: boolean = false;\r\n    public DispatcherDragDropSequence: number;\r\n    public DeliveryLevelPO: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n    public IndicativePrice: number;\r\n\r\n    constructor(isAdditive: boolean) {\r\n        this.IsBlendedRequest = false;\r\n        this.IsCommonPickupForBlend = false;\r\n        this.BlendedGroupId = null;\r\n        this.PickupLocationType = 1;\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.IsAdditive = isAdditive;\r\n        this.SelectedDate =  moment(new Date()).format('DD/MM/YYYY')\r\n    }\r\n}\r\n\r\nexport class DipTestViewModel {\r\n    //public SiteName: string;\r\n    //public CompanyName: string;\r\n    //public AssetId: number;\r\n    public Id: number;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    //public Level: number;\r\n    public Ullage: number;\r\n    public ScheduleQuantityType: number;\r\n    //public GrossVolume: number;\r\n    public NetVolume: number;\r\n    //public WaterNetLevel: number;\r\n    //public WaterGrossLevel: number;\r\n    //public CaptureTime: string;\r\n    public FuelTypeId: number;\r\n    public ProductName: string;\r\n    public ProductTypeId: number;\r\n    //public DataSourceTypeId: number;\r\n    public BuyerCompanyId: number;\r\n    public BuyerCompanyName: string;\r\n    public JobName: string;\r\n    public UoM: string;\r\n    public JobId: number;\r\n    public CreatedByRegionId: string;\r\n    public IsDRExists: boolean;\r\n    public ExistingDR: PartialDRDetails[] = [];\r\n    public DisplayDRDetails: boolean;\r\n    public TankCapacity: number;\r\n    //public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public IsReAssignToCarrier: boolean = false;\r\n    public IsTankAndAssetAvailableForJob: boolean;\r\n    public CurrentThreshold: number;\r\n    //public FillType: number;\r\n    public ReorderPercent: number;\r\n    public OrderId: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n    public RecurringDRScheduleDetails: RecurringDRSchedule[] = [];\r\n    public isRecurringSchedule: boolean;\r\n    public PoNumber: string;\r\n    public DisplayCaptureTime: string;\r\n    public SupplierCompanyId: number;\r\n    public SupplierCompanies: DropdownItem[];\r\n    public DispactherNote: string;\r\n    public IsCommonBadge: string;\r\n    public Badge1: string;\r\n    public Badge2: string;\r\n    public Badge3: string;\r\n    //public FuelTypeId: string;\r\n    public OrderPickupDetails: OrderPickupDetailModel[];\r\n    public BlendOrderPickupDetails: OrderPickupDetailModel[];\r\n    public Tanks: TankDipTestViewModel[];\r\n    // BLENDED DR\r\n    // public IsBlendedRequest: boolean;\r\n    // public BlendedRequests: BlendedRequest[] = [];\r\n    // public IsCommonPickupForBlend: boolean;\r\n    // public BlendedGroupId: string;\r\n    public SelectedDate: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n}\r\n\r\nexport class CompatibleProductModel {\r\n    public ProductTypeId: number;\r\n    public MappedToProductTypeIds: number[];\r\n}\r\n\r\nexport class TankDipTestViewModel {\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    // public Level: number;\r\n    public Ullage: number;\r\n    //public GrossVolume: number;\r\n    public NetVolume: number;\r\n    public WaterLevel: number;\r\n    // public WaterGrossLevel: number;\r\n    // public CaptureTime: string;\r\n    // public DataSourceTypeId: number;\r\n    public TankCapacity: number;\r\n    //public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public CurrentThreshold: number;\r\n    // public FillType: number;\r\n    public ReorderPercent: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n    public DisplayCaptureTime: string;\r\n    // for UI dropdown\r\n    public IsShowMore: boolean = false;\r\n}\r\n\r\nexport class TankCapacityForDR {\r\n    public Priority: DeliveryReqPriority;\r\n    public MaxPercent: number;\r\n    public MinPercent: number;\r\n}\r\n\r\nexport class ModifiedTripInfo {\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n\r\nexport class CreateDeliveryRequestViewModel {\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public RequiredQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class CustomerJobsForCarrier {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    RegionIds: string[];\r\n    Jobs: JobRegionModel[];\r\n}\r\n\r\nexport class PartialDRDetails {\r\n    public Priority: DeliveryReqPriority;\r\n    public ScheduleStatusName: string;\r\n    public RequiredQuantity: number;\r\n    public CreatedOn: string;\r\n    public ScheduleQuantityType: number;\r\n    public ScheduleQuantityTypeName: string;\r\n    public IsMissedDr: boolean;\r\n}\r\n\r\nexport class DelRequestByTimeModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n    }\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: number;\r\n    public EndTime: number;\r\n}\r\n\r\nexport class DelRequestsByJobModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.IsBlendedRequest = false;\r\n        this.IsCommonPickupForBlend = false;\r\n        this.BlendedGroupId = null;\r\n    }\r\n    public JobId: number;\r\n    public JobAddress: string;\r\n    public JobName: string;\r\n    public CustomerCompany: string;\r\n    public TrailerCompatibility: string;\r\n    public HoursToCoverDistance: string;\r\n    public _HoursToCoverDistance: number;\r\n    public IsOnlyNightDelivery: boolean;\r\n    public DeliveryRequestType: DeliveryRequestTypes;\r\n    public Priority: DeliveryReqPriority;\r\n    public CarrierStatus: number;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public LoadQueueAttributes: LoadQueueAttributes;\r\n    public DRQueueAttributes: DRQueueAttributes;\r\n    public DeliveryWindow: any\r\n    public JobCity: string;\r\n    public CustomerBrandId: string;\r\n    public IsTBD: boolean;\r\n    public TBDGroupId: string;\r\n    public ProductType: string;\r\n    public ProductTypeId: number;\r\n    public UoM: number;\r\n    public RequiredQuantity: number;\r\n    public ScheduleQuantityTypeText: string;\r\n    public DeliveryDateStartTime: string;\r\n    public Vessel: string;\r\n    public Berth: string;\r\n    public IsMarine: boolean;\r\n    //BLENDED DR\r\n    public IsBlendedRequest: boolean;\r\n    public IsCommonPickupForBlend: boolean;\r\n    public BlendedGroupId: string;\r\n}\r\n\r\nexport class SplitBlendDRModel {\r\n    public OrderId: number;\r\n    public RequiredQuantity: number;\r\n    public ParentDrId: string;\r\n    public ProductType: string;\r\n    public FuelType: string;\r\n    public UoM: number;\r\n}\r\n\r\nexport class DeliveryRequestViewModel extends BlendedRequest {\r\n    constructor(isAdditive: boolean) {\r\n        super(isAdditive);\r\n        this.WindowMode = 1;\r\n        this.QueueMode = 1;\r\n        this.Compartments = [];\r\n        this.IsRetainFuelLoaded = false;\r\n    };\r\n    public JobAddress: string;\r\n    public JobCity: string;\r\n    public JobName: string;\r\n    public SiteId: string;\r\n    public Priority: number;\r\n    public AssignedToCompanyId: number;\r\n    public CreatedByCompanyId: number;\r\n    public SupplierCompanyId: number;\r\n    public Status: number;\r\n    public PreviousStatus: number;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public IsDeleted: boolean;\r\n    public DeliveryGroupId: number;\r\n    public ParentId: string;\r\n    public CustomerCompany: string;\r\n    public WindowMode: number;\r\n    public QueueMode: number;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public TankMaxFill: number;\r\n    public IsNotCompatible: boolean;\r\n    public IsAutoCreatedDR: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public SourceTripId: string;\r\n    public IsCommonBadge: boolean;\r\n    public DispactherNote: string;\r\n    public PreLoadedFor: string;\r\n    public PreLoadInfo: LoadInfo;\r\n    public PostLoadedFor: string;\r\n    public PostLoadInfo: LoadInfo;\r\n    public IsDRExists: boolean;\r\n    public IsDRMissed: boolean;\r\n    public isRecurringSchedule: boolean;\r\n    public RecurringScheduleId: string;\r\n    public ScheduleQuantityType: number;\r\n    public RecurringScheduleInfo: string;\r\n    public ScheduleQuantityTypeText: string;\r\n    public RouteInfo: RouteInfoDetails;\r\n    public Compartments: CompartmentInfo[];\r\n    public DeliveryRequestFor: DeliveryRequestFor\r\n    public IsFilldInvoke: boolean;\r\n    public Notes: string;\r\n    public IsRetainFuelLoaded: boolean;\r\n    public DeliveryWindow: string;\r\n    public DelReqSource: number;\r\n    public IsPreloadDisable: boolean;\r\n    public IsSpiltDRIconVisible: boolean;\r\n    public GroupParentDRId: string;\r\n    public BlendParentProductTypeId: number;\r\n    public GroupChildDRs: string[];\r\n    public ProductSequence: number;\r\n    public IsBrokered: boolean;\r\n    public TrailerTypes: DropdownItem[];\r\n    public IsAcceptNightDeliveries: boolean = false;\r\n    public LoadQueueAttributes: LoadQueueAttributes;\r\n    public DRQueueAttributes: DRQueueAttributes;\r\n    public HoursToCoverDistance: string;\r\n    public CustomerBrandId: string;\r\n    public IsJobFilter: boolean = false;\r\n    public IsMaxFillAllowed: boolean = false;\r\n    public CarrierRejected: string;\r\n    public CurrentCarrier: string;\r\n    public UpcomingCarrier: string;\r\n    public IsBrokeredCarrierDR: boolean = false;\r\n    public CurrentInventory: string;\r\n    public Ullage: string;\r\n    public AssignedOn: Date;\r\n    public StringAssignedOn: string;\r\n    public IsTBD: boolean;\r\n    public TBDGroupId: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TBDLocations: any[] = [];\r\n    public IsSpiltDRAdded: boolean = false;\r\n    public SpiltDRs: SpiltDRsModel[] = [];\r\n    public OrderType: number = 0;\r\n    public DeliveryDateStartTime: string;\r\n    public Vessel: string;\r\n    public IsMarine: boolean = false;\r\n    public BlendDrScheduleStatus: number;\r\n    public SelectedDate: string;\r\n    public IsFutureDR: boolean = false;\r\n    public IsCalendarView: boolean = false;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n    public Sap_OrderNo: string;\r\n    public UniqueOrderNo: string;\r\n}\r\n\r\nexport class CompartmentModel {\r\n    public TrailerId: string;\r\n    public CompartmentId: string;\r\n    public Quantity: number;\r\n}\r\n\r\nexport class RegionDetailModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Shifts = [];\r\n    }\r\n    public Id: string;\r\n    public Drivers: DriverAdditionalDetailModel[]\r\n    public Trailers: TrailerViewModel[]\r\n    public Shifts: ShiftModel[]\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public StartTime: string;\r\n    public DisplayStartTime: string;\r\n    public EndTime: string;\r\n    public DisplayEndTime: string;\r\n    public CreatedOn: string;\r\n    public CreatedBy: number;\r\n    public IsDeleted: boolean;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ScheduleBuilderModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n        this.Trailers = [];\r\n    }\r\n    public Id: string;\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ObjectFilter: ObjectFilter;\r\n    public RegionFilter: RegionFilter;\r\n    public DateFilter: DateFilter;\r\n    public DSBFilter: number;\r\n    public IsNoDriverShiftFound: number;\r\n    public Shifts: ScheduleShiftModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public Status: DeliveryGroupStatus;\r\n    public DeletedTripId: string;\r\n    public DeletedGroupId: number;\r\n    public IsLoadReset: boolean;\r\n    public WindowMode: WindowModeFilter;\r\n    public ToggleRequestMode: QueueFilter;\r\n    public IsDsbDriverSchedule: boolean;\r\n}\r\n\r\nexport class DSBSaveModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public PreloadedDRs: any[] = [];\r\n    public PostloadedDRs: any[] = [];\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\nexport class CalendarScheduleModel {\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ShiftId: string;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n}\r\nexport class DRDragDropModel extends ScheduleBuilderModel {\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public SourceTrip: TripModel;\r\n    public DestinationTrip: TripModel;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class SbDriverViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Shifts = [];\r\n    }\r\n    public Shifts: ScheduleShiftModel[];\r\n}\r\n\r\nexport class SbTrailerViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trailers = [];\r\n    }\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewModel {\r\n    public Id: string;\r\n    public TrailerId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Compartments: number;\r\n    public FuelCapacity: number;\r\n    public TrailerType: string;\r\n    public Shifts: TrailerShiftModel[];\r\n    public IsCollapsed: boolean;\r\n    public IsFilldCompatible: boolean;\r\n    public RetainFuel: any[];\r\n}\r\n\r\nexport class TrailerShiftModel {\r\n    public ShiftId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Trips: TripModel[];\r\n}\r\n\r\nexport class ScheduleShiftModel {\r\n    constructor() {\r\n        this.Schedules = [];\r\n        this.IsCollapsed = false;\r\n    }\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Schedules: TrailerModel[];\r\n    public IsCollapsed: boolean;\r\n    public IsVisible: boolean = true;\r\n    public OrderNo: number;\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n}\r\n\r\nexport class FiltersData {\r\n    constructor() { }\r\n    public IsShowCarrierManaged: boolean;\r\n    public SelectedTab: number;\r\n    public SelectedCarrierId: string;\r\n    public SelectedRegionId: string;\r\n    public SelectedCustomerId: string;\r\n    public SelectedLocationId: string;\r\n    public SelectedPrioritiesId: string;\r\n}\r\n\r\nexport class TrailerModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Trips = [];\r\n    }\r\n    public AllowDriverChange: boolean;\r\n    public Trips: TripModel[];\r\n    public Drivers: DriverAdditionalDetailModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public LoadQueueId: string;//mongo object id\r\n    public IsLoadQueueCollapsed: boolean;//is moved to load queue\r\n    public IsColumnSelected: boolean;//in load queue panel\r\n    public IsLoadQueueColumnBlocked: boolean;\r\n    public IsIncludeAllRegionDriver: boolean;\r\n    public LoadQueueColumnStatus: boolean;\r\n    public IsDriverScheduleExists: boolean;\r\n    public DriverRowIndex: number;\r\n}\r\n\r\nexport class DriverAdditionalDetailModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public IsFilldCompatible: boolean;\r\n    public Shifts: string;\r\n}\r\n\r\nexport class TripModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n    }\r\n    public TripId: string;\r\n    public GroupId: number;\r\n    public StartDate: string;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public LoadCode: string;\r\n    public RouteInfo: string;\r\n    public SupplierSource: string;\r\n    public Carrier: string;\r\n    public TimeStamp: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public TrailerRowIndex: number;\r\n    public TrailerColIndex: number;\r\n    public ShiftIndex: number;\r\n    public TripStatus: TripStatus;\r\n    public ShiftId: string;\r\n    public ShiftStartTime: string;\r\n    public ShiftEndTime: string;\r\n    public SlotPeriod: number;\r\n    public TripPrevStatus: TripStatus;\r\n    public DeliveryGroupStatus: DeliveryGroupStatus;\r\n    public DeliveryGroupPrevStatus: DeliveryGroupStatus;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsCommonPickup: boolean;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public IsEditable: boolean;\r\n    public DriverScheduleMappingId?: string;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public IsCommonBadge: boolean;\r\n    public isRecurringSchedule: boolean;\r\n    public RecurringScheduleId: string;\r\n    public ScheduleQuantityType: number;\r\n    public ScheduleQuantityTypeText: string;\r\n    public IsTrailerExists: boolean;\r\n    public IsPreLoadInfo: boolean = false;\r\n    public IsPreloadDisable: boolean = false;\r\n    public IsDriverScheduleExists: boolean;\r\n    public IsIncludeAllRegionDriver: boolean;\r\n    public IsDispatcherDragDropSequence: boolean = false;\r\n    public IsDispatcherDragDropSequenceModified: boolean = false;\r\n}\r\n\r\nexport class DropAddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n        this.CountryGroup = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public City: string;\r\n    public State: DropdownItem;\r\n    public Country: DropdownItem;\r\n    public CountryGroup: DropdownItem;\r\n    public ZipCode: string;\r\n    public CountyName: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OrderPickupDetailModel {\r\n    public OrderId: number;\r\n    public OrderName: string;\r\n    public PoNumber: string;\r\n    public TerminalName: string;\r\n    public TerminalId: number;\r\n    public PickupLocationType: number = 1;\r\n    public BulkplantName: string;\r\n    public SiteId: number;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public StateId: number;\r\n    public CountryCode: string;\r\n    public ZipCode: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public TimeZoneName: string;\r\n    public TruckLoadType: number;\r\n    public DRNote: string;\r\n    public UoM: string;\r\n    public Badge1: string;\r\n    public Badge2: string;\r\n    public Badge3: string;\r\n}\r\n\r\nexport class OrderPickupLocationModel {\r\n    public PickupLocationType: PickupLocationType;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public static ToLocation(orderPickupDetail: OrderPickupDetailModel): OrderPickupLocationModel {\r\n        let location = new OrderPickupLocationModel();\r\n        location.PickupLocationType = orderPickupDetail.PickupLocationType;\r\n        location.Terminal = {\r\n            Id: orderPickupDetail.TerminalId,\r\n            Name: orderPickupDetail.TerminalName,\r\n            Code: ''\r\n        };\r\n        location.BulkPlant = {\r\n            Address: orderPickupDetail.Address,\r\n            City: orderPickupDetail.City,\r\n            State: { Id: orderPickupDetail.StateId, Code: orderPickupDetail.StateCode, Name: null },\r\n            Country: { Id: 0, Code: orderPickupDetail.CountryCode, Name: null },\r\n            CountryGroup: { Id: 0, Code: \"\", Name: null },\r\n            ZipCode: orderPickupDetail.ZipCode,\r\n            CountyName: orderPickupDetail.CountyName,\r\n            Latitude: orderPickupDetail.Latitude,\r\n            Longitude: orderPickupDetail.Longitude,\r\n            SiteName: orderPickupDetail.BulkplantName,\r\n            SiteId: null\r\n        };\r\n        return location;\r\n    }\r\n}\r\n\r\nexport class WhereIsMyDriverModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public Intl: string;\r\n    public PhNo: string;\r\n    public Lat: number;\r\n    public Lng: number;\r\n    public LicNo: string;\r\n    public LdPri: number;\r\n    public RgId: string;\r\n    public RgName: string;\r\n    public RgStates: DropdownItem[];\r\n    public StId: number;\r\n    public StName: string;\r\n    public PoNum: string;\r\n    public Pckup: string;\r\n    public Loc: string;\r\n    public dLat: number\r\n    public dLng: number\r\n    public PrdtNm: string;\r\n    public Qty: string;\r\n    public LdDate: string;\r\n    public SttsId: number;\r\n    public Status: string;\r\n    public DrId: string;\r\n    public statusColor: string;\r\n    public DROPTicketNum: string;\r\n    public ListDROPTicketNum: [];\r\n    public TrailerDisplayId: string;\r\n    public routeShow: boolean = false;\r\n    public AppLastUpdatedDate: string;\r\n    public IsOnline: number;\r\n    public AllowCustomerDriverChat: boolean;\r\n    InventoryDataCaptureTypeName?: string;\r\n    public FuelRetainCount: number;\r\n}\r\n\r\nexport class DistatcherRegionModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Dispatchers: DropdownItem[];\r\n\r\n}\r\n\r\nexport interface JobDeliveryRequest {\r\n    Id: string;\r\n    TfxProductType: string;\r\n    TfxUoM: number;\r\n    RequiredQuantity: number;\r\n    Priority: number;\r\n    DeliveryReqPriority: string;\r\n    Status: number;\r\n    DeliveryReqStatus: string;\r\n    StorageTypeId: string;\r\n    StorageId: string;\r\n    CreatedRegionId?: any;\r\n    TfxJobId: number;\r\n}\r\n\r\nexport interface Country {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport interface State {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface City {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Priority {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Product {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface SelectedItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Customer {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport interface vessel {\r\n    Name: string;\r\n    Id: number;\r\n}\r\nexport class Filter {\r\n    'state': State[] = [];\r\n    'city': City[] = [];\r\n    'product': SelectedItem[] = [];\r\n    'priority': Priority[] = [];\r\n    'customer': Customer[] = [];\r\n    'supplier': SelectedItem[] = [];\r\n    'carrier': SelectedItem[] = [];\r\n    'fuelType': SelectedItem[] = [];\r\n}\r\n\r\nexport interface JobAssetDetail {\r\n    AssetId: number;\r\n    JobId: number;\r\n    AssetName: string;\r\n    AssetType: number;\r\n    AssetTypeName: string;\r\n    FuelCapacity: number;\r\n    ProductType: string;\r\n    TankType: number;\r\n    TankTypeName: string;\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    ThresholdDeliveryRequest: number;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    jobTankAdditionalDetails: JobTankAdditionalDetails[];\r\n    TfxProductTypeName: string;\r\n    LastReading: string;\r\n    CaptureTime: string;\r\n\r\n}\r\n\r\nexport interface JobTankAdditionalDetails {\r\n    TfxAssetId: number;\r\n    TankId: string;\r\n    TankName: string;\r\n    TankNumber: string;\r\n    StorageId: string;\r\n    ThresholdDeliveryRequest: number;\r\n    FillType: number;\r\n    MaxFill: number;\r\n    MinFill: number;\r\n    MaxFillPercent: number;\r\n    MinFillPercent: number;\r\n    FuelCapacity: number;\r\n    FillTypeStatus: string;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    ManiFolded: number;\r\n    ManiFoldedName: string;\r\n    TfxProductTypeName?: any;\r\n    SiteId: string;\r\n    LastReading: number;\r\n    CaptureTime: Date;\r\n    dipChartDetails: any[];\r\n    TankChartPath: string;\r\n}\r\n\r\n\r\nexport interface JobLocationDetailsModal {\r\n    CustomerName: string;\r\n    CustomerId: number;\r\n    JobID: number;\r\n    JobName: string;\r\n    JobLocationType: number;\r\n    JobLocationTypeName: string;\r\n    Latitude: string;\r\n    Longitude: string;\r\n    Address: string;\r\n    CountryCode: string;\r\n    City: string;\r\n    CityId: number;\r\n    State: string;\r\n    StateID: number;\r\n    ZipCode: string;\r\n    ContractNumber: string;\r\n    IsContactDetailsAvailable: number;\r\n    ContactPersonName: string;\r\n    ContactPhoneNumber: string;\r\n    IsPhoneNumberConfirmed: number;\r\n    SiteImageFilePath: string;\r\n    SiteAvailabilityArray: string[];\r\n    SiteAvailabilityTotalDays: number;\r\n    SiteAvailabilityTiming: string;\r\n    SiteInstructions: string;\r\n    TankCount: number;\r\n    AssetCount: number;\r\n    TotalCount: number;\r\n    jobDeliveryRequests: JobDeliveryRequest[];\r\n    jobAssetDetails: JobAssetDetail[];\r\n    FuleTypeID?: any;\r\n    FuelTypeName: string;\r\n    FuelTypeNameList: string[];\r\n    ScheduleStatus: string;\r\n    highestPriority: number,\r\n    iconUrl: string;\r\n    RegionId: string;\r\n    CarrierDetails: DropdownItem[];\r\n}\r\n\r\n\r\nexport interface JobDetailsWithOrders {\r\n    OrderId: number;\r\n    JobId: number;\r\n    FuelTypeId: number;\r\n    PoNumber: string;\r\n    DisplayJobID: string;\r\n    JobName: string;\r\n    Address: string;\r\n    City: string;\r\n    UoM: number;\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    BadgeNo1: string;\r\n    BadgeNo2: string;\r\n    BadgeNo3: string;\r\n}\r\n\r\nexport interface JobLocationData {\r\n    jobLocationDetails: JobLocationDetailsModal[];\r\n    citiesDetails: City[];\r\n    stateDetails: State[];\r\n    customerDetails: Customer[];\r\n    fuelTypeDetails: string[];\r\n}\r\n\r\nexport class SbFilterModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Pickups = [];\r\n\r\n        this.SelectedDrivers = [];\r\n        this.SelectedPickups = [];\r\n        this.SelectedTrailers = [];\r\n    }\r\n    public Drivers: DriverAdditionalDetailModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public Pickups: DropdownItem[];\r\n\r\n    public SelectedPickups?: DropdownItem[];\r\n    public SelectedDrivers?: DriverAdditionalDetailModel[];\r\n    public SelectedTrailers?: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewFilterModel {\r\n    public Shifts?: any = {};\r\n    public Trailers?: any = {};\r\n    public Pickups?: any = {};\r\n    public Drivers?: any = {};\r\n}\r\n\r\nexport class DriverViewFilterModel {\r\n    public Shifts?: any = {};\r\n}\r\nexport class CompanyUsers {\r\n    FirstName: string;\r\n    LastName: string;\r\n    FullName: string;\r\n    PhoneNumber: string;\r\n    IsPhoneNumberConfirmed: boolean;\r\n    EmailAddress: string;\r\n    SendbirdUserName: string;\r\n    UserName: string;\r\n    UserId: number;\r\n    Role: number;\r\n    RegionID: string;\r\n    SendBirdRegionID: string;\r\n    RegionName: string;\r\n    RegionDescription: string;\r\n    //sendbird propery\r\n    ProfileURL: string;\r\n\r\n}\r\n\r\nexport class TankMinMaxFill {\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    MinFillPercent: number;\r\n    MaxFillPercent: number;\r\n}\r\n\r\nexport class TankChartHeight {\r\n    ShouldBeEmptyPercent: number;\r\n    ShouldBeFilledPercent: number;\r\n    CurrentInventoryPercent: number;\r\n    sbf_percent: number;\r\n    ci_percent: number;\r\n}\r\n\r\nexport class DipTest {\r\n    TankId: string\r\n    SiteId: string\r\n    Ullage: number\r\n    GrossVolume: number\r\n    NetVolume: number\r\n    CaptureTime: string\r\n    CaptureTimeString: string\r\n}\r\n\r\nexport interface Compartment {\r\n    CompartmentId: string;\r\n    FuelType: number;\r\n    Capacity: number;\r\n}\r\n\r\nexport interface Trailer {\r\n    Id: string;\r\n    Name: string;\r\n    Owner?: any;\r\n    TruckId: string;\r\n    FuelCapacity: number;\r\n    ContractNumber: string;\r\n    Compartments: Compartment[];\r\n    TfxCreatedBy: number;\r\n    TfxCompanyId: number;\r\n    CreatedDate: Date;\r\n    Status: number;\r\n    LicenceRequirement: number;\r\n    LicencePlate: string;\r\n    ExpirationDate: string;\r\n    IsPump: string;\r\n    TrailerType: number;\r\n    DefaultUOM: number;\r\n    IsDeleted: boolean;\r\n    TrailerFuelRetains: TrailerFuelRetainViewModel[];\r\n    OngoingData: WhereIsMyDriverModel[];\r\n}\r\n\r\nexport class TrailerFuelRetainViewModel {\r\n    public Id: string\r\n    public TrailerId: string\r\n    public CompartmentId: string\r\n    public CompartmentCapacity: number;\r\n    public Quantity: number;\r\n    public UOM: number;\r\n    public DeliveryRequestId: string\r\n    public ProductType: string\r\n    public ProductId: number;\r\n    public OrderId: string\r\n    public CreatedDate: string\r\n    public UpdatedOn: string\r\n    public TfxDriverId: number;\r\n\r\n}\r\n\r\nexport interface IDriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n}\r\n\r\nexport class DriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n    constructor(data?: IDriverAdditionalDetails) {\r\n        this.Id = data && data['Id'] || null;\r\n        this.Name = data && data['Name'] || null;\r\n        this.License = data && data['License'] || null;\r\n        this.ContactNumnber = data && data['ContactNumnber'] || null;\r\n        this.Shifts = data && data['Shifts'] || [];\r\n        this.Trailers = data && data['Trailers'] || [];\r\n    }\r\n}\r\n\r\nexport const routesColor = {\r\n    1: '#5f4aa8',\r\n    11: '#c4c105',\r\n    12: '#d3950f',\r\n    18: '#19953f',\r\n    20: '#e3584d'\r\n}\r\n\r\nexport class DemandModel {\r\n    Id: number;\r\n    JobId: number;\r\n    JobName: string;\r\n    Level: number;\r\n    NetVolume: number;\r\n    OrderId: number\r\n    Priority: DeliveryReqPriority;\r\n    ProductName: string;\r\n    ProductType: string;\r\n    SiteId: string;\r\n    StorageId: string;\r\n    TankCapacity: number;\r\n    TankId: string;\r\n    TankMaxFill: number\r\n    IsMaxFillAllowed: boolean = false;\r\n    //IsReAssignToCarrier: boolean = false;\r\n    TankMinFill: number\r\n    TankName: string;\r\n    Ullage: number;\r\n    UoM: string;\r\n    RequiredQuantity: number;\r\n    IsDRExists: boolean;\r\n    IsDRMissed: boolean;\r\n    BuyerCompanyName: string;\r\n    ExistingDR: PartialDRDetail[];\r\n    RecurringDRSchedule: RecurringDRSchedule[];\r\n    isRecurringSchedule: boolean = false;\r\n    ScheduleQuantityType: number = 0;\r\n    ScheduleQuantityTypeText: string;\r\n    DeliveryReqId: string;\r\n    CarrierStatus: number;\r\n    DeliveryRequestFor: DeliveryRequestFor;\r\n    IsEndSupplier: boolean = false;\r\n    IsDispatchRetained: boolean = false;\r\n    Notes: string;\r\n    GroupParentDRId: string;\r\n    ProductSequence: number;\r\n    CurrentThreshold: number;\r\n    BadgeNo1: string;\r\n    BadgeNo2: string;\r\n    BadgeNo3: string;\r\n    DispatcherNote: string;\r\n    Terminal: DropdownItem;\r\n    BulkPlant: DropAddressModel;\r\n    PickupLocationType: number;\r\n    public TrailerTypes: DropdownItem[];\r\n    public IsAcceptNightDeliveries: boolean = false;\r\n    public LoadQueueAttributes: LoadQueueAttributes;\r\n    public DRQueueAttributes: DRQueueAttributes;\r\n    public HoursToCoverDistance: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n}\r\n\r\nexport class PartialDRDetail {\r\n    DeliveryReqPriority: DeliveryReqPriority;\r\n    ScheduleStatusName: string;\r\n    ScheduleStatusId: number;\r\n    RequiredQuantity: number;\r\n    CreatedOn: string;\r\n    CreatedDate: string;\r\n    Id: string;\r\n    IsRecurringSchedule: boolean;\r\n}\r\n\r\nexport class LoadInfo {\r\n    ShiftId: string;\r\n    ShiftIndex?: number;\r\n    ScheduleIndex: number;\r\n    TripIndex: number;\r\n    DrId: string;\r\n}\r\n\r\nexport class PreLoadDrViewModel {\r\n    public SbView: number;\r\n    public RegionId: string;\r\n    public ShiftEndDate: string\r\n    public ShiftId: string\r\n    public PreloadTrailers: TrailerModel[];\r\n    public PreloadDrivers: DropdownItem[];\r\n    public IsTrailerExists: boolean;\r\n    public PreloadDrs: any[];\r\n    public SbDsbView: number;\r\n}\r\n\r\nexport class PreLoadDrResponseViewModel {\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n    public PreloadDrs: PreLoadDrModel[];\r\n}\r\n\r\nexport class PreLoadDrModel {\r\n    public Id: string;\r\n    public PreLoadedForId: string;\r\n}\r\nexport class RecurringDRSchedule {\r\n    public Id: string;\r\n    public ScheduleType: number;\r\n    public WeekDayId: string[];\r\n    public MonthDayId: number;\r\n    public Date: string;\r\n    public ScheduleQuantityType: number;\r\n    public RequiredQuantity: number;\r\n    public OrderId: number;\r\n    public SiteId: number;\r\n    public JobId: number;\r\n    public TfxSupplierCompanyId: number;\r\n    public TfxCompanyName: string;\r\n    public TfxUserId: number;\r\n    public AssignedToCompanyId: number;\r\n}\r\n\r\nexport class UnAssignDriverFromShiftModel {\r\n    public sbId: string;\r\n    public DriverRowIdx: number;\r\n    public Trips: TripModel[];\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public shiftIdx: number;\r\n\r\n}\r\n\r\nexport class SalesDataModel {\r\n    public CompanyId?: number;\r\n    public CompanyName?: string;\r\n    public SiteId?: string;\r\n    public TankId?: string;\r\n    public StorageId?: string;\r\n    public TankName?: string;\r\n    public AvgSale?: string;\r\n    public PrevSale?: string;\r\n    public WeekAgoSale?: string;\r\n    public Inventory?: string;\r\n    public Ullage?: string;\r\n    public LastDeliveryDate?: string;\r\n    public LastDeliveredQuantity?: string;\r\n    public DaysRemaining?: string;\r\n    public Status?: string;\r\n    public Priority: DeliveryReqPriority;\r\n    public TfxJobId: number;\r\n    public ProductTypeId: number;\r\n    public MaxFillQuantity?: number;\r\n    public IsUnknownOrMissing?: boolean;\r\n    public RegionId: string;\r\n    public LastReadingTime: string;\r\n    public LocationManagedType: number;\r\n    public UOM: number;\r\n}\r\n\r\nexport class DeliveryDetailsModel {\r\n    public TrackableScheduleId: number;\r\n    public ScheduleDate: string;\r\n    public ScheduleTime: string;\r\n    public Driver: string;\r\n    public Carrier: string;\r\n    public Quantity: number;\r\n    public QuantityTypeId: number;\r\n    public QuantityTypeName: string;\r\n}\r\n\r\nexport class DeliveryRequestBrokerInfoViewModel {\r\n    //single DR\r\n    public OrderId: number;\r\n    public CarrierCompanyId: number;\r\n    public DispatcherNote: string;\r\n    public CarrierRegionId: string;\r\n    public DeliveryRequest: DeliveryRequestViewModel;\r\n    public IsDispatchRetainedByCustomer: boolean;\r\n    //multiple dr\r\n    public BrokerDrModel: BrokerDrModel[];\r\n    public ScheduleBuilderId: string;\r\n    //carriers\r\n    public CarrierInfo: TfxCarrierDropdownDisplayItem[];\r\n    public CarrierInfoJson: string;\r\n    public BlendedGroupId: string;\r\n}\r\n\r\nexport class BrokerDrModel {\r\n    public OrderId: number;\r\n    public CarrierCompanyId: number;\r\n    public CarrierRegionId: string;\r\n    public DeliveryRequest: DeliveryRequestViewModel;\r\n    public IsDispatchRetainedByCustomer: boolean;\r\n    public BlendedGroupId: string;\r\n    public IsBlendedGroupProduct: boolean = false;\r\n}\r\n\r\nexport class CompartmentInfo {\r\n    public TrailerId: string;\r\n    public CompartmentId: string;\r\n    public Quantity: number;\r\n    public RetainInfo: RetainInfo\r\n}\r\n\r\nexport class TrailerCompartment {\r\n    constructor() {\r\n        this.Compartments = [];\r\n    }\r\n    public TrailerId: string;\r\n    public IsFuelRetain: boolean;\r\n    public IsCompartmentAvailable: boolean;\r\n    public Compartments: CompartmentInfo[];\r\n}\r\n\r\nexport class RetainInfo {\r\n    public OrderId: number;\r\n    public ProductId: number;\r\n    public DeliveryReqId: string;\r\n    public TfxTerminal: DropdownItem;\r\n    public TfxBulkPlant: DropAddressModel;\r\n    public PickupLocationType: PickupLocationType;\r\n    public Quantity: number;\r\n}\r\n\r\nexport class TrailerRetainCompartment {\r\n    public TrailerId: string;\r\n    public CompartmentId: string;\r\n    public Qty: number;\r\n}\r\n\r\nexport class ForecastingTankViewModel {\r\n    public TankName: string;\r\n    public TankFill: number;\r\n    public TankFillRemaining: number;\r\n    public LastInventoryReading: string;\r\n    public UllageSinceLastReading: string;\r\n    public LastReadingTime: string;\r\n    public EstimatedCurrentInventory: string;\r\n    public DeliverySinceLastReading: string;\r\n    public DaysLeft: number;\r\n    public ProductType: string;\r\n    public RegionId: string;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    TankInventoryDiffinHrs?: number;\r\n    public TfxProductTypeId: number;\r\n    public Status: string;\r\n    public MaxFillQuantity: string;\r\n    public AvgSale: string;\r\n    public PrevSale: string;\r\n    public WeekAgoSale: string;\r\n    public SiteInstructions: string;\r\n    public LocationManagedType: number;\r\n}\r\n\r\nexport class ForecastingInventoryViewModel {\r\n    public TankName: string;\r\n    public InventoryLevel: number;\r\n    public InventoryLevelQty: string;\r\n    public Ullage: string;\r\n    public PrevInventoryReading: string;\r\n    public SafetyStockQty: string;\r\n    public SafetyStock: number;\r\n    public RunOutLevel: number;\r\n    public RunOutLevelQty: string;\r\n    public PhysicalPumpStop: number;\r\n    public PhysicalPumpStopQty: string;\r\n}\r\n\r\nexport class ForecastingEstimatedUsageViewModel {\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public TankName: string;\r\n    public UsagePeriod: string;\r\n    public AverageBusinessDayUsage: string;\r\n    public TotalExceptedUsage: string;\r\n    public MaximumBusinessdayUsage: string;\r\n}\r\n\r\nexport class ForecastingDeliveryViewModel {\r\n    public TankName: string;\r\n    public NoOfDeliveries: number;\r\n    public LastDeliveredQty: string;\r\n    public LastDeliveredDate: string;\r\n}\r\n\r\nexport class ForecastingExistingScheduleViewModel {\r\n    public TankName: string;\r\n    public ExistingDeliverySchedule: number;\r\n    public DeliveryRequest: number;\r\n}\r\n\r\nexport class ForecastingTankChartViewModel {\r\n    public XAxisTimeSpan: string[];\r\n    public TankDetailsForChart: TankDetailsForChartModel[];\r\n    public TankLevels: TankLevelModel[];\r\n}\r\n\r\nexport class TankDetailsForChartModel {\r\n    public TankName: string;\r\n    public Data: number[];\r\n}\r\n\r\nexport class TankLevelModel {\r\n    public Time: string;\r\n    public Quantity: number;\r\n    public Type: number;\r\n}\r\n\r\nexport class OttoDeliveryRequests {\r\n    public Date: string;\r\n    public ShiftTime: string;\r\n    public Priority: number;\r\n    public CustomerName: string;\r\n    public ProductName: string;\r\n    public Quantity: string;\r\n    public QuantityUOM: string;\r\n    public TankName: string;\r\n    public LocationName: string;\r\n    public TankCapacity: string;\r\n}\r\n\r\nexport class OttoScheduleDetails {\r\n    public ShiftId: string;\r\n    public ShiftName: string;\r\n    public OttoDeliveryRequests: OttoDeliveryRequests[];\r\n}\r\n\r\nexport class OttoBuilder {\r\n    constructor() {\r\n        this.Loads = [];\r\n    }\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ShiftId: string;\r\n    public Loads: OttoTripModel[];\r\n}\r\n\r\nexport class OttoTripModel {\r\n    public StartTime: string;\r\n    public EndTime: string\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n}\r\n\r\nexport class ShiftViewModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public RegionId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public RegionName: string;\r\n    public ShiftInfo: string;\r\n    public StartTimespan: number;\r\n}\r\n\r\nexport class OttoNotifications {\r\n    public Id: string;\r\n    public TfxJobId: number;\r\n    public Message: string;\r\n    public ScheduleBuilderId: string;\r\n    public Status: string;\r\n}\r\nexport class SplitDeliveryRequestModel {\r\n    public ParentDRId: string;\r\n    public RequiredQtyDetails: [];\r\n}\r\nexport class RequiredQtyDetails {\r\n    public RequiredQty: number;\r\n}\r\nexport class BlendDRDetails {\r\n    //Marine Nomination\r\n    public DeliveryDateStartTime: string;\r\n    public TrackScheduleStatusName: string;\r\n    public Vessel: string;\r\n    public Berth: string;\r\n    //added for dr carrier assignment\r\n    public Id: string;\r\n    public ProductName: string;\r\n    public RequiredQuantity: number;\r\n    public PickupLocationType: number;\r\n    public Address: string;\r\n    public City: string;\r\n    public Code: string;\r\n    public ZipCode: string;\r\n    public PickupLocationName: string;\r\n    public IsAdditive: boolean;\r\n    public IsBlendedRequest: boolean;\r\n    public Priority: number;\r\n    public StatusClassId: number;\r\n    public IsBlinkDR: boolean;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n\r\n\r\n}\r\nexport class ProductDeliveryScheduleInfo  {\r\n    public LocationName: string;\r\n    public CustomerName: string;\r\n    public Status: number;\r\n    public StatusClassId: number;\r\n    public Priority: number;\r\n    public IsBlinkDR: boolean;\r\n    public BlendGroupId: string;\r\n    public ScheduleQuantityType: number;\r\n    public UoM: number;\r\n    public IsAutoCreatedDR: boolean;\r\n    public DelReqSource: number;\r\n    public isRecurringSchedule: boolean;\r\n    public IsCommonPickup: boolean;\r\n    public CommonPickupLocationType: number;\r\n    public IsFilldInvoke: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public BadgeNoInfo: string;\r\n    public TankMaxFill: number;\r\n    public RouteName: string;\r\n    public isPreload: boolean = false;\r\n    public isPostload: boolean = false;\r\n    public TripIndex: number;\r\n    public IsSelectedForAssignment: boolean;\r\n    public ScheduleQuantityTypeText: string;\r\n    public IsMarine: boolean = false;\r\n    public DrInfo: BlendDRDetails[] = [];\r\n    public Address: string;\r\n    public City: string;\r\n    public Code: string;\r\n    public ZipCode: string;\r\n    public PickupLocationName: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n}\r\n\r\nexport class ShiftColumnInfo {\r\n    public ColIndex: number;\r\n    public ColIndexName: string;\r\n}\r\nexport class ShiftLoadInfo {\r\n    public LoadIndex: number;\r\n    public LoadName: string;\r\n}\r\nexport class TransferDSInfo {\r\n    public dragData: DragDSInfo;\r\n}\r\nexport class DragDSInfo {\r\n    public Data: any;\r\n    public TripFrom: any;\r\n    public DrIndex: any;\r\n    public ShiftIndex: any;\r\n    public RowIndex: any;\r\n    public ColIndex: any;\r\n    public Schedule: any;\r\n    public DropTrip: any;\r\n    public DropSchedule: any;\r\n}\r\nexport class DRQueueAttributes {\r\n    public CustomerName: boolean;\r\n    public DeliveryShift: boolean;\r\n    public TrailerCompatibility: boolean;\r\n    public HoursToCoverDistance: boolean\r\n}\r\nexport class LoadQueueAttributes {\r\n    public LocationName: boolean;\r\n    public CustomerName: boolean\r\n    public Driver: boolean\r\n    public TrailerName: boolean;\r\n}\r\nexport class SbGridViewFilterModel {\r\n    public SearchLocation: string = \"\";\r\n}\r\n\r\nexport class DRReportFilterViewModel {\r\n    public Regions: DropdownItemExt[] = [];\r\n    public Locations: DropdownItem[] = [];\r\n}\r\n\r\nexport class DeliveryRequestReportGridModel {\r\n\r\n    public Location: string;\r\n    public RegionName: string;\r\n    public CustomerName: string;\r\n    public CustomerBrandID: string;\r\n    public ProductType: string;\r\n    public RequestedQuantity: number;\r\n    public LocationId: string;\r\n    public PoNumber: string;\r\n    public DrId: string;\r\n    public TfxJobId: number;\r\n    public Priority: number;\r\n    public RegionId: string;\r\n    public IsRecurringSchedule: boolean;\r\n    public IsAutoDR: boolean;\r\n    public UoM: string;\r\n\r\n}\r\n\r\nexport class DRReportFilterInputViewModel {\r\n    RegionIds: string;\r\n    LocationIds: string;\r\n    FromDate: string;\r\n    ToDate: string;\r\n}\r\n\r\nexport class OrderPartialDetailModel {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n    FuelTypeId: number;\r\n    JobId: number;\r\n    DRNote: string;\r\n}\r\nexport class OptionalPickupDetailModel {\r\n    public incId: number;\r\n    public Id: string;\r\n    public RegionId: string;\r\n    public ScheduleBuilderId: string;\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public ShiftOrderNumber: number;\r\n    public DriverColIndex: number;\r\n    public TfxFuelTypeId: number;\r\n    public TfxFuelTypeName: string;\r\n    public isAdded: number;\r\n    public DriverId: number = 0;\r\n    public DSBPickupLocationInfo: OptionalPickupLocationInfo = new OptionalPickupLocationInfo();\r\n\r\n}\r\nexport class OrderFuelInfo {\r\n    public StatusCode: number;\r\n    public OrderFuelDetails: OrderFuelDetails[] = [];\r\n}\r\nexport class OrderFuelDetails {\r\n    public OrderId: number;\r\n    public FuelTypeDetails: DropdownItem[] = [];\r\n}\r\nexport class OptionalPickupLocationInfo {\r\n    public PickupLocationType: number;\r\n    public TfxTerminal: DropdownItem = new DropdownItem();\r\n    public TfxBulkPlant: DropAddressModel = new DropAddressModel();\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public BadgeNoInfo: string;\r\n}\r\nexport class RaiseTBDDeliveryRequest {\r\n    public DeliveryRequests: TBDRaiseDRDeliveryRequests[] = [];\r\n}\r\nexport class TBDRaiseDRDeliveryRequests {\r\n    public ScheduleQuantityType: number;\r\n    public RequiredQuantity: number;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public Priority: number;\r\n    public DelReqSource: number = 1;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public DispactherNote: string;\r\n    public Notes: string;\r\n    public PickupLocationType: number;\r\n    public Terminal: DropdownItem;\r\n    public Bulkplant: DropAddressModel;\r\n    public IsTBD: boolean = true;\r\n    public TBDGroupId: string;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public ProductTypeId: number;\r\n    public ProductType: string;\r\n    public UoM: number;\r\n    public DeliveryLevelPO: string;\r\n}\r\nexport class RegionDSBModel {\r\n    RegionId: string;\r\n    DSBShiftInfo: ShiftViewModel[];\r\n}\r\nexport class SpiltDRsModel {\r\n    public ScheduleQuantityType: number;\r\n    public RequiredQuantity: number;\r\n}\r\nexport class CancelDeliverySchedule {\r\n    ScheduleBuilderId: string;\r\n    DriverId: number;\r\n    ShiftIndex: number;\r\n    ShiftId: string;\r\n    DriverRowIndex: number;\r\n    DriverColIndex: number;\r\n    DeliveryReqId: string;\r\n    TrackableScheduleId: number;\r\n    ScheduleStatus: number;\r\n    TrackScheduleStatus: number;\r\n    TrackScheduleStatusName: string;\r\n    StatusClassId: number;\r\n}\r\nexport class CancelDSDeliveryScheduleInfo {\r\n    TfxCompanyId: number;\r\n    RegionId: string;\r\n    CancelDSDeliverySchedules: CancelDSDeliverySchedule[] = [];\r\n}\r\nexport class CancelDSDeliverySchedule {\r\n    DeliveryReqId: string;\r\n    IsSubDR: boolean = false;\r\n    IsPreLoadDR: boolean = false;\r\n}\r\nexport class CancelDSDeliveryScheduleViewModel {\r\n    IsChecked: boolean = false;\r\n    ScheduleBuilderDate: string;\r\n    ScheduleBuilderId: string;\r\n    DriverId: number;\r\n    DriverName: string;\r\n    Quantity: string;\r\n    FuelType: string;\r\n    CurrentState: string;\r\n    ShiftId: string;\r\n    ShiftIndex: number;\r\n    DriverRowIndex: number;\r\n    DriverColIndex: number;\r\n    DeliveryReqId: string;\r\n    TrackableScheduleId: number;\r\n    IsPreLoadDS: boolean = false;\r\n}\r\n\r\nexport class SubDRStatus {\r\n    GroupParentDRId: string;\r\n    DeliveryScheduleStatusId: number\r\n}\r\nexport class ResetDeliveryGroupScheduleModel {\r\n    public ScheduleBuilderId: string;\r\n    public DeliveryRequestIds: string[];\r\n}\r\nexport class DispatcherMapSeq {\r\n    JobId: number;\r\n    IsTBD: boolean = false;\r\n    TBDGroupId: string;\r\n}\r\n","import { DropdownItem, LocationDropdownItem } from 'src/app/statelist.service';\r\nimport { DropDownItem } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\r\n\r\nexport class LocationDetailsModel {\r\n    public Id: number;\r\n    public ControlNumber: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public AssignedTerminalId: string;\r\n    public CreatedByCompanyId: number;\r\n    public IsBulkPlant: boolean;\r\n    public TerminalSupplierId: number;\r\n    public TerminalSupplierName: string;\r\n}\r\n\r\nexport enum Country {\r\n    \"USA\" = 1,\r\n    \"CAN\" = 2,\r\n    \"CAR\" = 4\r\n}\r\n\r\n\r\n\r\n\r\nexport class TerminalMappingModel {\r\n    constructor() {\r\n        this.StateList = [];\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public CountryId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n    public StateList: DropdownItem[];\r\n    public CityList: DropdownItem[];\r\n    public TerminalList: DropdownItem[];\r\n    public FuelType: DropdownItem;\r\n    public StateIds: string;\r\n    public CityIds: string;\r\n    public TerminalIds: string;\r\n    public FuelTypeIds: string;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class TerminalMappingGridModel {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public TerminalItemCode: string;\r\n\r\n    public StateId: number;\r\n    public StateCode: string;\r\n    public CityId: number;\r\n    public City: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public TerminalAddress: string;\r\n    public CountryCode: string;\r\n}\r\n\r\nexport class RouteInformationModel {\r\n    Id: string;\r\n    Name: string;\r\n    TfxJobs: RouteTfxJobsList[];\r\n    RegionId: string;\r\n    TfxCompanyId: number;\r\n    CreatedBy: number;\r\n    ShiftInfoDetails: string;\r\n}\r\nexport class RouteInfoDetails {\r\n    Id: string;\r\n    Name: string;\r\n    LocationSeqNo: number;\r\n}\r\nexport class ShiftInfoViewModel {\r\n    Id: string;\r\n    TripId: string;\r\n    DriverRowIndex: number;\r\n    DriverColIndex: number;\r\n    ShiftIndex: number;\r\n}\r\nexport class RouteTfxJobsList {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n    SequenceNo: number;\r\n}\r\nexport class JobWithSequence {\r\n    JobDetails: DropDownItem;\r\n    SequenceNo: number;\r\n}\r\nexport class JobRegionModel extends LocationDropdownItem{\r\n    RegionId: string;\r\n    LocationManagedType: number;\r\n}","import { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { DipTestViewModel, DeliveryRequestViewModel, CustomerJobsForCarrier, SplitDeliveryRequestModel, DRReportFilterViewModel, DRReportFilterInputViewModel, DeliveryRequestReportGridModel, SplitBlendDRModel, ScheduleBuilderModel } from '../models/DispatchSchedulerModels';\r\nimport { CustomerDetailsViewModel } from '../models/CustomerDetailsViewModel';\r\nimport { LocationDetailsModel } from '../models/location';\r\nimport { AdditiveOrderViewModel, DropdownItem } from 'src/app/statelist.service';\r\nimport { TruckDetailsModel } from '../model';\r\nimport { ProductMappingGridModel } from 'src/app/self-service-alias/models/ProductMappingModel';\r\nimport { CarrierDetailsViewModel } from '../models/CarrierDetailsViewModel';\r\nimport { ShiftModel } from '../../calendar/model';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CarrierService extends HandleError {\r\n    private GetTerminalsUrl = '/Location/GetTerminals';\r\n    private postTruckData = '/Carrier/Freight/Create';\r\n    private urlGetAllCustomerData = '/Carrier/Order/GetAllCustomerData';\r\n    private urlSaveAndUpdateCustomerMapping = '/Carrier/Order/SaveCarrierCustomerMapping';\r\n    private urlCustomerIdNotTaken = '/Carrier/Order/CheckDuplicateCustomerId';\r\n    private postCheckDuplicateTerminalId = 'Carrier/SelfServiceAlias/CheckDuplicateTerminalId';\r\n    private urlGetBlendCompatibleProductTypes = 'Carrier/ScheduleBuilder/GetBlendProductTypeMapping';\r\n\r\n    private urlGetHeldDrCount = '/Carrier/Freight/GetHeldDeliveryRequestCount';\r\n    private urlCheckAndLockDr = 'Carrier/ScheduleBuilder/CheckAndLockDRs';\r\n    private urlCheckAndReleaseDr = 'Carrier/ScheduleBuilder/CheckAndReleaseDRs';\r\n    private urlDeleteTruckData = '/Carrier/Freight/DeleteTruck';\r\n    private getDipTestData = '/Freight/GetDipTestData?jobId=';\r\n    private urlIsTankNotAvailableForOrderProducts = '/Freight/IsTankNotAvailableForOrderProducts?jobId=';\r\n    private getSiteList = '/Freight/GetSiteList?regionId=';\r\n    private getJobListForCarrierUrl = '/Freight/GetJobListForCarrier?regionId=';\r\n    private urlGetTrucks = '/Carrier/Freight/GetAllTruckDetails';\r\n    private postRaiseRequestData = '/Freight/RaiseRequests';\r\n    private postSingleRaiseRequestData = '/Freight/RaiseRequest';\r\n    private updateDeliveryRequestData = '/Freight/UpdateDeliveryRequest';\r\n    private addSubDeliveryRequestUrl = '/Freight/AddSubDrs';\r\n    private changeBrokeredDrStatusUrl = '/Freight/ChangeBrokeredDrStatus?drId=';\r\n    private getDeliveryRequestsUrl = '/Freight/GetDeliveryRequests?regionId=';\r\n    private getBrokeredDrAssignedToMeUrl = '/Freight/GetBrokeredDrRequestedToMe?regionId=';\r\n    private getBrokeredDrAssignedByMeUrl = '/Freight/GetBrokeredDrRequestedByMe?regionId=';\r\n    private getDeliveryRequestByIdUrl = '/Freight/GetDeliveryRequestById?deliveryRequestId=';\r\n    private getCalendarDeliveryRequestsUrl = '/Freight/GetCalendarDeliveryRequests';\r\n    private urlGetCompantDrivers = '/Freight/GetCompantDrivers';\r\n    private urlGetFuelTypes = '/Freight/GetFuelTypes';\r\n    private getDemandCaptureChartdata = '/Driver/Dashboard/GetDemandCaptureChartdata?SiteId='; // to use in both buyer and supplier side\r\n    private getOrdersForJobUrl = '/Carrier/ScheduleBuilder/GetOrdersForJobOfCustomerAndSupplier?jobId=';\r\n    private urlGetStates = '/Carrier/SelfServiceAlias/GetStates?countryId=';\r\n    public urlGetCities = '/Carrier/SelfServiceAlias/GetCities';\r\n    public urlGetTerminals = '/Carrier/SelfServiceAlias/GetTerminals';\r\n    private urlGetBulkPlants = '/Carrier/SelfServiceAlias/GetBulkPlants';\r\n    private urlGetTerminalsForMapping = '/Carrier/SelfServiceAlias/GetTerminalsForMapping';\r\n    private urlDeleteTerminalMappingById = '/Carrier/SelfServiceAlias/DeleteTerminalMappingById';\r\n    private urlTerminalMappingGrid = '/Carrier/SelfServiceAlias/GetTerminalMappingGrid?SelectedCountryId=';\r\n\r\n    private urlGetServingFuelTypesByCompany = '/Carrier/SelfServiceAlias/GetServingFuelTypesByCompany?companyId=';\r\n    private postSaveProductMapping = 'Carrier/SelfServiceAlias/SaveProductMapping';\r\n    private postSaveTerminalMapping = 'Carrier/SelfServiceAlias/SaveTerminalMapping';\r\n    private urlGetProductMappingDetails = '/Carrier/SelfServiceAlias/GetProductMappingDetails';\r\n    private urlDownloadProductMappingTemplate = '/Carrier/SelfServiceAlias/DownloadProductMappingTemplate?id=';\r\n    private urlBulkUploadTemplate = '/Carrier/SelfServiceAlias/UploadProductMappingTemplate';\r\n    private urlDefaultCountry = '/Carrier/SelfServiceAlias/GetCountries?companyId=';\r\n    private urlDefaultServingCountry = '/Carrier/SelfServiceAlias/GetDefaultServingCountry?companyId=';\r\n    private urlDeleteProductMappingById = '/Carrier/SelfServiceAlias/DeleteProductMappingById';\r\n    private urlUpdateProductNames = '/Carrier/SelfServiceAlias/UpdateProductNames';\r\n    private urlUpdateTerminalId = '/Carrier/SelfServiceAlias/UpdateTerminalId';\r\n    private urlCheckLocationAssignedToCarrier = '/Freight/CheckLocationAssignedToCarrier?jobId=';\r\n    //private urlGetCarrierData = '/Carrier/Order/GetCarrierData';\r\n    private urlCheckDuplicateCarrierId = '/Carrier/Order/CheckDuplicateCarrierId';\r\n    private urlSaveAndUpdateCarrierMapping = '/Carrier/Order/SaveAndUpdateCarrierMapping';\r\n    private deleteRecurringSchedule = '/Freight/DeleteRecurringSchedule';\r\n    private urlgetDefaultScheduleData = '/ScheduleBuilder/GetDefaultScheduleData';\r\n    private getRecurringScheduleDetailsUrl = '/Carrier/ScheduleBuilder/GetRecurringScheduleDetails';\r\n    private getCreateLoadJobListForCarrierUrl = '/Freight/GetCreateLoadJobListForCarrier?regionId=';\r\n    private getGetBrokerJobOrderDetails = '/Freight/GetBrokerJobOrderDetails';\r\n    private urlDownloadTerminalItemCodeMappingTemplate = '/Carrier/SelfServiceAlias/DownloadTerminalItemCodeMappingTemplate?id=';\r\n    private urlBulkUploadTerminalItemCodeMappingFile = '/Carrier/SelfServiceAlias/BulkUploadTerminalItemCodeMappingFile';\r\n    private urlsplitDeliveryRequestData = '/Freight/CreateSplitDeliveryRequests';\r\n    private urlsplitBlendDeliveryRequestData = '/Freight/CreateSplitBlendDeliveryRequests';\r\n    private urlGetDRReportDropDownFilters = '/Freight/GetDRReportDropDownFilters'; // API is in base controller\r\n    private urlGetDRReportFilteredData = '/Freight/GetDRReportData';\r\n\r\n    private urlGetTerminalSuppliers = 'Carrier/SelfServiceAlias/GetTerminalSuppliers?countryId=';\r\n\r\n    private urlGetDefaultUOM = 'Carrier/Tractor/GetDefaultUOM';\r\n\r\n    private urlgetDefaultTBDScheduleData = '/ScheduleBuilder/GetDefaultTBDScheduleData';\r\n\r\n    //CarrierId mapping Urls \r\n    private urlGetAssignedTerminalIdsForMapping = '/Carrier/SelfServiceAlias/GetAssignedTerminalIdsForMapping';\r\n    private urlSaveCarrierMapping = '/Carrier/SelfServiceAlias/SaveCarrierMapping';\r\n    private urlGetCarrierData = '/Carrier/SelfServiceAlias/GetCarrierIDMappings';\r\n    private urlDeleteCarrierIDMappings = '/Carrier/SelfServiceAlias/DeleteCarrierIDMapping?mappingId=';\r\n    private urlGetCreateDrSetting = '/ScheduleBuilder/GetCreateDrSetting';\r\n    private urlGetAdditiveOrders = '/ScheduleBuilder/GetAdditiveOrders?regionId=';\r\n    //calendar sb data\r\n    private getGetSheduleBuilderUrl = '/Carrier/ScheduleBuilder/GetSheduleBuilder?regionId=';\r\n    private getSheduleCalendarDataUrl = '/Carrier/ScheduleBuilder/GetSheduleCalendarData?regionId=';\r\n    private saveDriverViewUrl = '/Carrier/ScheduleBuilder/SaveCalendarDeliveryRequest';\r\n\r\n    //Filter\r\n    private urlFilterDataForDsbCalenderView = '/Carrier/Order/GetFilterDataForCalenderView';\r\n\r\n    constructor(private httpClient: HttpClient) { super(); }\r\n\r\n    getAllTrucks(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetTrucks)\r\n            .pipe(catchError(this.handleError<any>('getAllTrucks', null)));\r\n    }\r\n\r\n    updateHeldDrCount(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetHeldDrCount)\r\n            .pipe(catchError(this.handleError<any>('updateHeldDrCount', null)));\r\n    }\r\n\r\n\r\n    CustomerIdNotTaken(customerDetail: CustomerDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCustomerIdNotTaken, customerDetail)\r\n            .pipe(catchError(this.handleError<any>('CustomerIdNotTaken', null)));\r\n    }\r\n\r\n    checkDuplicateTerminalId(TerminalMappingViewModel: LocationDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.postCheckDuplicateTerminalId, TerminalMappingViewModel)\r\n            .pipe(catchError(this.handleError<any>('checkDuplicateTerminalId', null)));\r\n    }\r\n    getSheduleCalendarData(regionId: string, date: string): Observable<ShiftModel[]> {\r\n        return this.httpClient.get<ShiftModel[]>(this.getSheduleCalendarDataUrl + regionId + '&date=' + date)\r\n            .pipe(catchError(this.handleError<ShiftModel[]>('getSheduleCalendarData', null)));\r\n    }\r\n    getScheduleBuilder(regionId: string, date: string, sbViewId: number, sbDsbView: number): Observable<ScheduleBuilderModel> {\r\n        return this.httpClient.get<ScheduleBuilderModel>(this.getGetSheduleBuilderUrl + regionId + '&date=' + date + '&sbView=' + sbViewId + '&sbDsbView=' + sbDsbView)\r\n            .pipe(catchError(this.handleError<ScheduleBuilderModel>('getScheduleBuilder', null)));\r\n    }\r\n    saveDriverView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.saveDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('saveDriverView', null)));\r\n    }\r\n\r\n    getCompatibleProductTypes(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetBlendCompatibleProductTypes)\r\n            .pipe(catchError(this.handleError<any>('getCompatibleProductTypes', null)));\r\n    }\r\n\r\n    getAllCustomerData(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetAllCustomerData)\r\n            .pipe(catchError(this.handleError<any>('getAllCustomerData', null)));\r\n    }\r\n\r\n    saveAndUpdateCustomerMapping(customerMapping: CustomerDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlSaveAndUpdateCustomerMapping, customerMapping)\r\n            .pipe(catchError(this.handleError<any>('saveAndUpdateCustomerMapping', null)));\r\n    }\r\n\r\n    checkAndLockDr(drIds: string[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCheckAndLockDr, drIds)\r\n            .pipe(catchError(this.handleError<any>('checkAndLockDr', null)));\r\n    }\r\n\r\n    checkAndReleaseDr(drIds: string[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCheckAndReleaseDr, drIds)\r\n            .pipe(catchError(this.handleError<any>('checkAndReleaseDr', null)));\r\n    }\r\n\r\n    getCompanyDrivers(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetCompantDrivers)\r\n            .pipe(catchError(this.handleError<any>('getCompanyDrivers', null)));\r\n    }\r\n\r\n    postCreateTruck(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postTruckData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postCreateTruck', null)));\r\n    }\r\n    postDeleteTruck(inputData: TruckDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlDeleteTruckData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postDeleteTruck', null)));\r\n    }\r\n\r\n    getDipTests(_jobId: string, regionId: string, buyerCompanyId: number, requestFromBuyerWallyBoard: boolean, isShowForm: boolean): Observable<DipTestViewModel[]> {\r\n        return this.httpClient.get<DipTestViewModel[]>(this.getDipTestData + _jobId + \"&regionId=\" + regionId + \"&buyerCompanyId=\" + buyerCompanyId + \"&requestFromBuyerWallyBoard=\" + requestFromBuyerWallyBoard + \"&isCreateDR=\" + isShowForm)\r\n            .pipe(catchError(this.handleError<DipTestViewModel[]>('getDipTests', null)));\r\n    }\r\n\r\n    isTankNotAvailableForOrderProducts(jobId: number, customerId: number, regionId: any, productTypeIds: number[], endSupplier: number = 0): Observable<any> {\r\n        if (endSupplier == 1) {\r\n            return this.httpClient.get<any>(this.urlIsTankNotAvailableForOrderProducts + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&endSupplier=\" + endSupplier + \"&skipMarineConversion=\" + productTypeIds)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n        else {\r\n            return this.httpClient.get<any>(this.urlIsTankNotAvailableForOrderProducts + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&productTypeIds=\" + productTypeIds)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n    }\r\n\r\n    getSites(regionId: string): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getSiteList + regionId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getSites', null)));\r\n    }\r\n\r\n    getJobListForCarrier(regionId: string, isShowCarrierManaged?: boolean, SelectedCarrierId?: string): Observable<CustomerJobsForCarrier[]> {\r\n        if (isShowCarrierManaged == undefined || isShowCarrierManaged == null) {\r\n            isShowCarrierManaged = false;\r\n        }\r\n        if (SelectedCarrierId == undefined) {\r\n            SelectedCarrierId = \"\";\r\n        }\r\n        return this.httpClient.get<CustomerJobsForCarrier[]>(this.getJobListForCarrierUrl + regionId + \"&isShowCarrierManaged=\" + isShowCarrierManaged + \"&carriers=\" + SelectedCarrierId)\r\n            .pipe(catchError(this.handleError<CustomerJobsForCarrier[]>('getJobListForCarrier', null)));\r\n    }\r\n    getCreateLoadJobListForCarrier(regionId: string): Observable<CustomerJobsForCarrier[]> {\r\n        return this.httpClient.get<CustomerJobsForCarrier[]>(this.getCreateLoadJobListForCarrierUrl + regionId)\r\n            .pipe(catchError(this.handleError<CustomerJobsForCarrier[]>('getJobListForCarrier', null)));\r\n    }\r\n    getOrdersForJob(jobId: number, customerId: number, regionId: any, skipMarineConversion: boolean, endSupplier: number = 0, productsToExclude: number[] = []): Observable<any> {\r\n        let products = '';\r\n        if (productsToExclude && productsToExclude.length > 0) {\r\n            products = productsToExclude.join(',');\r\n        }\r\n\r\n        if (endSupplier == 1) {\r\n            return this.httpClient.get<any>(this.getOrdersForJobUrl + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&endSupplier=\" + endSupplier + \"&skipMarineConversion=\" + skipMarineConversion + \"&productsToExclude=\" + products)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n        else {\r\n            return this.httpClient.get<any>(this.getOrdersForJobUrl + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&endSupplier=\" + 0 + \"&skipMarineConversion=\" + skipMarineConversion + \"&productsToExclude=\" + products)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n    }\r\n\r\n    postRaiseRequests(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postRaiseRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postRaiseRequests', null)));\r\n    }\r\n\r\n    postRaiseRequest(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postSingleRaiseRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postRaiseRequest', null)));\r\n    }\r\n\r\n    getDeliveryRequests(regionId: string, selectedDate?: string): Observable<DeliveryRequestViewModel[]> {\r\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getDeliveryRequestsUrl + regionId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getDeliveryRequests', null)));\r\n    }\r\n\r\n    getBrokeredDrAssignedToMe(regionId: string, selectedDate?: string): Observable<DeliveryRequestViewModel[]> {\r\n        if (regionId != null && !regionId.match(/^[0-9a-fA-F]{24}$/)) { regionId = null; }\r\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getBrokeredDrAssignedToMeUrl + regionId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getBrokeredDrAssignedToMe', null)));\r\n    }\r\n\r\n    getBrokeredDrAssignedByMe(regionId: string, selectedDate?: string): Observable<DeliveryRequestViewModel[]> {\r\n        if (regionId != null && !regionId.match(/^[0-9a-fA-F]{24}$/)) { regionId = null; }\r\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getBrokeredDrAssignedByMeUrl + regionId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getBrokeredDrAssignedByMe', null)));\r\n    }\r\n    getDeliveryRequestById(deliveryRequestId: string): Observable<DeliveryRequestViewModel> {\r\n        return this.httpClient.get<DeliveryRequestViewModel>(this.getDeliveryRequestByIdUrl + deliveryRequestId)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel>('getDeliveryRequestById', null)));\r\n    }\r\n    getCalendarDeliveryRequests(inputModel): Observable<DeliveryRequestViewModel[]> {\r\n        return this.httpClient.post<DeliveryRequestViewModel[]>(this.getCalendarDeliveryRequestsUrl, inputModel)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getCalendarDeliveryRequests', null)));\r\n    }\r\n    updateDeliveryRequest(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.updateDeliveryRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('updateDeliveryRequest', null)));\r\n    }\r\n    addSubDrs(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addSubDeliveryRequestUrl, inputData)\r\n            .pipe(catchError(this.handleError<any>('addSubDrs', null)));\r\n    }\r\n\r\n    getFuelTypes(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetFuelTypes)\r\n            .pipe(catchError(this.handleError<any>('getFuelTypes', null)));\r\n    }\r\n\r\n    public getDemandCapChartData(SiteId, days, tfxJobId): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getDemandCaptureChartdata}${SiteId}&noOfDays=${days}&tfxJobId=${tfxJobId}`)\r\n            .pipe(catchError(this.handleError<any>('getDemandCapChartData', null)));\r\n    }\r\n\r\n    GetCountries(companyId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlDefaultCountry + companyId)\r\n            .pipe(catchError(this.handleError<any>('GetCountries', null)));\r\n    }\r\n\r\n    getDefaultServingCountry(companyId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlDefaultServingCountry + companyId)\r\n            .pipe(catchError(this.handleError<any>('getDefaultServingCountry', null)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetStates + countryId)\r\n            .pipe(catchError(this.handleError<any>('getStates', null)));\r\n    }\r\n\r\n    getCities(stateIds: number[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetCities, stateIds)\r\n            .pipe(catchError(this.handleError<any>('getCities', null)));\r\n    }\r\n\r\n    getTerminals(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetTerminals, filter)\r\n            .pipe(catchError(this.handleError<any>('getTerminals', null)));\r\n    }\r\n\r\n    getBulkPlants(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetBulkPlants, filter)\r\n            .pipe(catchError(this.handleError<any>('getBulkPlants', null)));\r\n    }\r\n\r\n    getTerminalMappingGrid(SelectedCountryId: number): Observable<any> {\r\n        return this.httpClient.get(this.urlTerminalMappingGrid + SelectedCountryId)\r\n            .pipe(catchError(this.handleError<any>('getTerminalsForMapping', null)));\r\n    }\r\n    getTerminalsForMapping(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetTerminalsForMapping, filter)\r\n            .pipe(catchError(this.handleError<any>('getTerminalsForMapping', null)));\r\n    }\r\n\r\n    getServingFuelTypesByCompany(companyId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetServingFuelTypesByCompany + companyId)\r\n            .pipe(catchError(this.handleError<any>('getServingFuelTypesByCompany', null)));\r\n    }\r\n\r\n    saveProductMapping(productMapping: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postSaveProductMapping, productMapping)\r\n            .pipe(catchError(this.handleError<any>('saveProductMapping', null)));\r\n    }\r\n    saveTerminalMapping(productMapping: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postSaveTerminalMapping, productMapping)\r\n            .pipe(catchError(this.handleError<any>('saveTerminalMapping', null)));\r\n    }\r\n\r\n    getProductMappingGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetProductMappingDetails, filter)\r\n            .pipe(catchError(this.handleError<any>('getProductMappingGridDetails', null)));\r\n    }\r\n\r\n    downloadProductMappingTemplate(timestamp: number): Observable<Blob> {\r\n        return this.httpClient.get(this.urlDownloadProductMappingTemplate + timestamp, {\r\n            responseType: 'blob'\r\n        }).pipe(catchError(this.handleError<any>('downloadProductMappingTemplate', null)));\r\n    }\r\n\r\n    postBulkUploadTemplate(files: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlBulkUploadTemplate, files)\r\n            .pipe(catchError(this.handleError<any>('postBulkUploadTemplate', null)));\r\n    }\r\n\r\n    postDeleteProductMapping(model: ProductMappingGridModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlDeleteProductMappingById, model)\r\n            .pipe(catchError(this.handleError<any>('postDeleteProductMapping', null)));\r\n    }\r\n\r\n    postDeleteTerminalMappingById(model: LocationDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlDeleteTerminalMappingById, model)\r\n            .pipe(catchError(this.handleError<any>('postDeleteProductMapping', null)));\r\n    }\r\n\r\n\r\n    updateProductNames(model: ProductMappingGridModel[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlUpdateProductNames, model)\r\n            .pipe(catchError(this.handleError<any>('updateProductNames', null)));\r\n    }\r\n\r\n    updateTerminalId(model: LocationDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlUpdateTerminalId, model)\r\n            .pipe(catchError(this.handleError<any>('updateProductNames', null)));\r\n    }\r\n\r\n\r\n    checkLocationAssignedToCarrier(jobId: number): Observable<any> {\r\n        return this.httpClient.get(this.urlCheckLocationAssignedToCarrier + jobId)\r\n            .pipe(catchError(this.handleError<any>('checkLocationAssignedToCarrier', null)));\r\n    }\r\n\r\n    getCarrierData(countryId): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetCarrierData + \"?countryId=\" + countryId)\r\n            .pipe(catchError(this.handleError<any>('getCarrierData', null)));\r\n    }\r\n\r\n    checkDuplicateCarrierId(carrierDetail: CarrierDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCheckDuplicateCarrierId, carrierDetail)\r\n            .pipe(catchError(this.handleError<any>('CheckDuplicateCarrierId', null)));\r\n    }\r\n\r\n    saveAndUpdateCarrierMapping(carrierMapping: CarrierDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlSaveAndUpdateCarrierMapping, carrierMapping)\r\n            .pipe(catchError(this.handleError<any>('saveAndUpdateCarrierMapping', null)));\r\n    }\r\n\r\n    deleteRecurringScheduleDetails(recurringId: string): Observable<any> {\r\n        var data = { Id: recurringId };\r\n        return this.httpClient.post<any>(this.deleteRecurringSchedule, data)\r\n            .pipe(catchError(this.handleError<any>('deleteRecurringScheduleDetails', null)));\r\n    }\r\n\r\n    getDefaultScheduleData(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlgetDefaultScheduleData)\r\n            .pipe(catchError(this.handleError<any>('getDefaultScheduleData', null)));\r\n    }\r\n\r\n    getRecurringScheduleDetails(JobId: number, PoNumb: string, JOBSiteId: string, productTypeId: number): Observable<any> {\r\n        var data = { jobId: JobId, PoNumber: PoNumb, JobSiteId: JOBSiteId, productTypeId: productTypeId };\r\n        return this.httpClient.post<any>(this.getRecurringScheduleDetailsUrl, data)\r\n            .pipe(catchError(this.handleError<any>('getRecurringScheduleDetails', null)));\r\n    }\r\n\r\n    changeBrokeredDrStatus(drId: string, blendedGroupId: string, status: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.changeBrokeredDrStatusUrl + drId + '&blendedGroupId=' + blendedGroupId + '&status=' + status, {})\r\n            .pipe(catchError(this.handleError<any>('changeBrokeredDrStatus', null)));\r\n    }\r\n\r\n    downloadTerminalItemCodeMappingTemplate(timestamp: number): Observable<Blob> {\r\n        return this.httpClient.get(this.urlDownloadTerminalItemCodeMappingTemplate + timestamp, {\r\n            responseType: 'blob'\r\n        }).pipe(catchError(this.handleError<any>('downloadTerminalItemCodeMappingTemplate', null)));\r\n    }\r\n\r\n    postBulkUploadTerminalItemCodeMappingTemplate(files: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlBulkUploadTerminalItemCodeMappingFile, files)\r\n            .pipe(catchError(this.handleError<any>('postBulkUploadTerminalItemCodeMappingTemplate', null)));\r\n    }\r\n    splitDeliveryRequests(inputData: SplitDeliveryRequestModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlsplitDeliveryRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('splitDeliveryRequests', null)));\r\n    }\r\n    splitBlendDeliveryRequests(inputData: SplitBlendDRModel[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlsplitBlendDeliveryRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('splitBlendDeliveryRequests', null)));\r\n    }\r\n    getDRReportFilters(): Observable<DRReportFilterViewModel> {\r\n        return this.httpClient.get<DRReportFilterViewModel>(this.urlGetDRReportDropDownFilters)\r\n            .pipe(catchError(this.handleError<DRReportFilterViewModel>('getDRReportFilterData', null)));\r\n    }\r\n\r\n    getDRReportGridData(inputData: DRReportFilterInputViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetDRReportFilteredData, inputData)\r\n            .pipe(catchError(this.handleError<DeliveryRequestReportGridModel>('getDRReportGridData', null)));\r\n    }\r\n    getTerminalSupplier(selectedCountryId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetTerminalSuppliers + selectedCountryId)\r\n            .pipe(catchError(this.handleError<DropdownItem>('getTerminalSupplier', null)));\r\n    }\r\n    getDefaultUOM(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetDefaultUOM)\r\n            .pipe(catchError(this.handleError<any>('getDefaultUOM', null)));\r\n    }\r\n    getDefaultTBDScheduleData(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlgetDefaultTBDScheduleData)\r\n            .pipe(catchError(this.handleError<any>('getDefaultTBDScheduleData', null)));\r\n    }\r\n    getAssignedTerminalIdsForMapping(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetAssignedTerminalIdsForMapping)\r\n            .pipe(catchError(this.handleError<any>('getAssignedTerminalIdsForMapping', null)));\r\n    }\r\n    SaveCarrierMapping(carrierMapping: CarrierDetailsViewModel) {\r\n        return this.httpClient.post(this.urlSaveCarrierMapping, carrierMapping).\r\n            pipe(catchError(this.handleError<any>('SaveCarrierMapping', null)))\r\n    }\r\n    deleteCarrierMapping(mappingId: number) {\r\n        return this.httpClient.get<any>(this.urlDeleteCarrierIDMappings + mappingId)\r\n            .pipe(catchError(this.handleError<any>('deleteCarrierMapping', null)));\r\n    }\r\n    getCreateDrSetting(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetCreateDrSetting)\r\n            .pipe(catchError(this.handleError<any>('getCreateDrSetting', null)));\r\n    }\r\n    getAdditiveOrders(regionId?: string): Observable<AdditiveOrderViewModel[]> {\r\n        return this.httpClient.get<any>(this.urlGetAdditiveOrders + regionId)\r\n            .pipe(catchError(this.handleError<AdditiveOrderViewModel[]>('getAdditiveOrders', null)));\r\n    }\r\n    getFilterDataForDsbCalenderView(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlFilterDataForDsbCalenderView)\r\n            .pipe(catchError(this.handleError<any>('getFilterDataForDsbCalenderView', null)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n    public ShowDeliveryGroupSubject: Subject<boolean>;\r\n    public ShowOpenedDeliveryGroupSubject: Subject<boolean>;\r\n    public EditDeliveryGroupSubject: Subject<any>;\r\n    public DraftDeliveryGroupSubject: Subject<any>;\r\n    public SaveModifiedLoadsSubject: Subject<any>;\r\n    public PublishDeliveryGroupSubject: Subject<any>;\r\n    public CancelDeliveryGroupSubject: Subject<any>;\r\n    public DeleteDeliveryGroupSubject: Subject<any>;\r\n    public AcceptRejectDRSubject: Subject<any>;\r\n\r\n    public RestoreDeletedRequestSubject: Subject<any>;\r\n    public DrUpdatedSubject: Subject<any>;\r\n    public RemoveDroppedRequestSubject: Subject<any>;\r\n    public UnsavedChangesSubject: Subject<any>;\r\n    public SavedChangesSubject: Subject<any>;\r\n    public EmptyUnsavedChangesSubject: Subject<any>;\r\n    public TrailerShiftsSubject: BehaviorSubject<any>;\r\n    public IsLoadingButtonSubject: BehaviorSubject<boolean>;\r\n    public FormChangeSubscription: Subscription[] = [];\r\n    public DeleteDRRequestSubject: Subject<any>;\r\n    public DisableDSBControlsSubject: BehaviorSubject<boolean>;\r\n    public EditDriverTrailerSubject: Subject<any>;\r\n    public UpdateDriverTrailerSubject: Subject<any>;\r\n    public SaveDriverAssignmentSubject: Subject<any>;\r\n\r\n    public AllShiftsSubject: BehaviorSubject<any>;\r\n    public AllTrailersSubject: BehaviorSubject<any>;\r\n    public AllDeliveryRequestsSubject: BehaviorSubject<any>;\r\n\r\n    public PublishEntireRowSubject: Subject<any>;\r\n    public GroupChangeDetectSubject: Subject<any>;\r\n    public ScheduleChangeDetectSubject: Subject<any>;\r\n    public DragDropItemSubject: Subject<any>;\r\n\r\n    public CreateLoadChangeSubject: Subject<any>;\r\n    public CreateLoadCancelSubject: BehaviorSubject<any>;\r\n    public CreateLoadSuccessSubject: Subject<any>;\r\n\r\n    public CreatePreloadSubject: Subject<any>;\r\n    public UpdatePostloadSubject: Subject<any>;\r\n    public DeletePostloadSubject: Subject<any>;\r\n    public DeliveryPreloadOption: Subject<any>;\r\n    public ResetDrByRoutesSubject: Subject<any>;\r\n\r\n    public EditCompartmentAssigmentSubject: Subject<any>;\r\n    public SaveEditCompartmentAssigmentSubject: Subject<any>;\r\n    public OpenDsbOttoBuilderSubject: Subject<any>;\r\n    public OpenDsbOttoNotificationSubject: Subject<any>;\r\n    public DsbOttoNotificationCountSubject: Subject<any>;\r\n    public SplitDrsInfoSubject: Subject<any>;\r\n    public TransferDSInfoSubject: Subject<any>;\r\n    public TrailerDSInfoSubject: Subject<any>;\r\n    public UnAssignTrailerFromShift: Subject<any>;\r\n    public RouteDetailsSubject: Subject<any>;\r\n    public DeleteRouteDetailsSubject: Subject<any>;\r\n    public HideDeliveryGroupSubject: Subject<any>;\r\n    public GridViewSearchGroupSubject: Subject<any>;\r\n    public RemoveTrailerGroupSubject: Subject<any>;\r\n    public ShiftVisibility: Subject<any>;\r\n    public RouteResetGroupSubject: Subject<any>;\r\n    public RouteDeleteDeliveryGroupSubject: Subject<any>;\r\n    public drQueueChangesForFilter: Subject<boolean> = new Subject<boolean>();\r\n    public DsbQueueChangesForNotification: Subject<boolean> = new Subject<boolean>();\r\n    public DriverColumnChangeDetect: Subject<boolean> = new Subject<boolean>();\r\n    public OptionalPickupSubject: Subject<any>;\r\n    public IsScheduleBuilderSubject: BehaviorSubject<boolean>;\r\n    public OpenOnTheFlyLocationFormSubject: Subject<any> = new Subject<any>();\r\n    public getOnTheFlyLocationDetailsSubject: Subject<any> = new Subject<any>();\r\n    public OnTheFlyDetectSubject: Subject<any> = new Subject<any>();\r\n    public CancelEntireRowSubject: Subject<any>;\r\n    public CancelDSDeliveryGroupSubject: Subject<any>;\r\n    public CancelDSDeliveryGroupNormalGroupDSSubject: Subject<any>;\r\n    public CancelDSLocationSubject: Subject<any>;\r\n    public DeliveryScheduleRemoveSubject: Subject<any>;\r\n    public DispatcherLoadDragDropSubject: Subject<any>;\r\n    public DispatcherLoadDragDropMapSubject: Subject<any>;\r\n    public LoadLocationSequenceSubject: Subject<FormGroup> = new Subject<FormGroup>();\r\n    public RefreshDsbOttoBuilderSubject: Subject<any>;\r\n    public DropTerminalSelectedSubject: Subject<number> = new Subject<number>();\r\n    public RemoveFeesSubject: Subject<boolean> = new Subject<boolean>();\r\n    constructor() {\r\n        this.ShowDeliveryGroupSubject = new Subject<boolean>();\r\n        this.ShowOpenedDeliveryGroupSubject = new Subject<boolean>();\r\n        this.EditDeliveryGroupSubject = new Subject<any>();\r\n        this.DraftDeliveryGroupSubject = new Subject<any>();\r\n        this.SaveModifiedLoadsSubject = new Subject<any>();\r\n        this.PublishDeliveryGroupSubject = new Subject<any>();\r\n        this.CancelDeliveryGroupSubject = new Subject<any>();\r\n        this.RestoreDeletedRequestSubject = new Subject<any>();\r\n        this.DrUpdatedSubject = new Subject<any>();\r\n        this.RemoveDroppedRequestSubject = new Subject<any>();\r\n        this.DeleteDeliveryGroupSubject = new Subject<any>();\r\n        this.AcceptRejectDRSubject = new Subject<any>();\r\n        this.UnsavedChangesSubject = new Subject<any>();\r\n        this.SavedChangesSubject = new Subject<any>();\r\n        this.EmptyUnsavedChangesSubject = new Subject<any>();\r\n        this.TrailerShiftsSubject = new BehaviorSubject<any>(null);\r\n        this.IsLoadingButtonSubject = new BehaviorSubject<any>(false);\r\n        this.DeleteDRRequestSubject = new Subject<any>();\r\n        this.DisableDSBControlsSubject = new BehaviorSubject<any>(false);\r\n        this.EditDriverTrailerSubject = new Subject<any>();\r\n        this.UpdateDriverTrailerSubject = new Subject<any>();\r\n        this.SaveDriverAssignmentSubject = new Subject<any>();\r\n        this.AllShiftsSubject = new BehaviorSubject<any>([]);\r\n        this.AllTrailersSubject = new BehaviorSubject<any>([]);\r\n        this.AllDeliveryRequestsSubject = new BehaviorSubject<any>([]);\r\n        this.PublishEntireRowSubject = new Subject<any>();\r\n        this.GroupChangeDetectSubject = new Subject<any>();\r\n        this.ScheduleChangeDetectSubject = new Subject<any>();\r\n        this.DragDropItemSubject = new Subject<any>();\r\n        this.CreateLoadChangeSubject = new Subject<any>();\r\n        this.CreateLoadCancelSubject = new BehaviorSubject<any>({});\r\n        this.CreateLoadSuccessSubject = new Subject<any>();\r\n        this.CreatePreloadSubject = new Subject<any>();\r\n        this.UpdatePostloadSubject = new Subject<any>();\r\n        this.DeletePostloadSubject = new Subject<any>();\r\n        this.DeliveryPreloadOption = new Subject<any>();\r\n        this.ResetDrByRoutesSubject = new Subject<any>();\r\n        this.EditCompartmentAssigmentSubject = new Subject<any>();\r\n        this.SaveEditCompartmentAssigmentSubject = new Subject<any>();\r\n        this.OpenDsbOttoBuilderSubject = new Subject<any>();\r\n        this.OpenDsbOttoNotificationSubject = new Subject<any>();\r\n        this.DsbOttoNotificationCountSubject = new Subject<any>();\r\n        this.SplitDrsInfoSubject = new Subject<any>();\r\n        this.TransferDSInfoSubject = new Subject<any>();\r\n        this.TrailerDSInfoSubject = new Subject<any>();\r\n        this.UnAssignTrailerFromShift = new Subject<any>();\r\n        this.RouteDetailsSubject = new Subject<any>();\r\n        this.DeleteRouteDetailsSubject = new Subject<any>();\r\n        this.HideDeliveryGroupSubject = new Subject<any>();\r\n        this.GridViewSearchGroupSubject = new Subject<any>();\r\n        this.RemoveTrailerGroupSubject = new Subject<any>();\r\n        this.ShiftVisibility = new Subject<any>();\r\n        this.RouteResetGroupSubject = new Subject<any>();\r\n        this.RouteDeleteDeliveryGroupSubject = new Subject<any>();\r\n        this.DsbQueueChangesForNotification = new Subject<boolean>();\r\n        this.OptionalPickupSubject = new Subject<any>();\r\n        this.IsScheduleBuilderSubject = new BehaviorSubject<any>(false);\r\n        this.CancelEntireRowSubject = new Subject<any>();\r\n        this.CancelDSDeliveryGroupSubject = new Subject<any>();\r\n        this.CancelDSDeliveryGroupNormalGroupDSSubject = new Subject<any>();\r\n        this.CancelDSLocationSubject = new Subject<any>();\r\n        this.DeliveryScheduleRemoveSubject = new Subject<any>();\r\n        this.DispatcherLoadDragDropSubject = new Subject<any>();\r\n        this.DispatcherLoadDragDropMapSubject = new Subject<any>();\r\n        this.RefreshDsbOttoBuilderSubject = new Subject<any>();\r\n    }\r\n\r\n    public setShowDeliveryGroupSubject(data: boolean): void {\r\n        this.ShowDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setShowOpenedDeliveryGroupSubject(data: boolean) {\r\n        this.ShowOpenedDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setEditDeliveryGroupSubject(data: any): void {\r\n        this.EditDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setDraftDeliveryGroupSubject(data: any): void {\r\n        this.DraftDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setSaveModifiedLoadsSubject(data: any): void {\r\n        this.SaveModifiedLoadsSubject.next(data);\r\n    }\r\n\r\n    public setPublishDeliveryGroupSubject(data: any): void {\r\n        this.PublishDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setCancelDeliveryGroupSubject(data: any): void {\r\n        this.CancelDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setDeleteDeliveryGroupSubject(data: any): void {\r\n        this.DeleteDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setAcceptRejectDRSubject(data: any): void {\r\n        this.AcceptRejectDRSubject.next(data);\r\n    }\r\n     \r\n    public setRestoreDeletedRequestSubject(data: any): void {\r\n        this.RestoreDeletedRequestSubject.next(data);\r\n    }\r\n\r\n    public setDrUpdatedSubject(data: any): void {\r\n        this.DrUpdatedSubject.next(data);\r\n    }\r\n\r\n    public setRemoveDroppedRequestSubject(data: any): void {\r\n        this.RemoveDroppedRequestSubject.next(data);\r\n    }\r\n\r\n    public setUnsavedChangesSubject(data: any): void {\r\n        this.UnsavedChangesSubject.next(data);\r\n    }\r\n\r\n    public setSavedChangesSubject(data: any): void {\r\n        this.SavedChangesSubject.next(data);\r\n    }\r\n\r\n    public setUnsavedChangesAsEmptySubject(): void {\r\n        this.EmptyUnsavedChangesSubject.next();\r\n    }\r\n\r\n    public setTrailerShiftsSubject(data: any): void {\r\n        this.TrailerShiftsSubject.next(data);\r\n    }\r\n\r\n    public setDeleteDRRequestSubject(data: any): void {\r\n        this.DeleteDRRequestSubject.next(data);\r\n    }\r\n    public setDisableDSBControls(data: any): void {\r\n        this.DisableDSBControlsSubject.next(data);\r\n    }\r\n\r\n    public setEditDriverTrailerSubject(data: any): void {\r\n        this.EditDriverTrailerSubject.next(data);\r\n    }\r\n\r\n    public setUpdateDriverTrailerSubject(data: any): void {\r\n        this.UpdateDriverTrailerSubject.next(data);\r\n    }\r\n\r\n    public setAllShiftsSubject(data: any): void {\r\n        this.AllShiftsSubject.next(data);\r\n    }\r\n\r\n    public setAllTrailersSubject(data: any): void {\r\n        this.AllTrailersSubject.next(data);\r\n    }\r\n\r\n    public setAllDeliveryRequestsSubject(data: any): void {\r\n        data = this.removeDuplicates(data);\r\n        this.AllDeliveryRequestsSubject.next(data);\r\n    }\r\n\r\n    private removeDuplicates(data: any): any {\r\n        data = data.filter((item, index, array) =>\r\n            index === array.findIndex((find) =>\r\n                find.Id === item.Id\r\n            )\r\n        );\r\n        return data;\r\n    }\r\n\r\n    public setSaveDriverAssignmentSubject(data: any): void {\r\n        this.SaveDriverAssignmentSubject.next(data);\r\n    }\r\n\r\n    public setPublishEntireRowSubject(data: any): void {\r\n        this.PublishEntireRowSubject.next(data);\r\n    }\r\n\r\n    public setGroupChangeDetectSubject(data: any): void {\r\n        this.GroupChangeDetectSubject.next(data);\r\n    }\r\n\r\n    public setScheduleChangeDetectSubject(data: any): void {\r\n        this.ScheduleChangeDetectSubject.next(data);\r\n    }\r\n\r\n    public setDragDropItemSubject(data: any): void {\r\n        this.DragDropItemSubject.next(data);\r\n    }\r\n\r\n    public setCreateLoadChangeSubject(data: any): void {\r\n        this.CreateLoadChangeSubject.next(data);\r\n    }\r\n\r\n    public setCreateLoadCancelSubject(data: any): void {\r\n        this.CreateLoadCancelSubject.next(data);\r\n    }\r\n\r\n    public setCreateLoadSuccessSubject(data: any): void {\r\n        this.CreateLoadSuccessSubject.next(data);\r\n    }\r\n\r\n    public setCreatePreloadSubject(data: any): void {\r\n        this.CreatePreloadSubject.next(data);\r\n    }\r\n\r\n    public setUpdatePostloadSubject(data: any): void {\r\n        this.UpdatePostloadSubject.next(data);\r\n    }\r\n\r\n    public setDeletePostloadSubject(data: any): void {\r\n        this.DeletePostloadSubject.next(data);\r\n    }\r\n\r\n    public setDeliveryPreloadOption(data: any): void {\r\n        this.DeliveryPreloadOption.next(data);\r\n    }\r\n\r\n    public setResetDrByRoutesSubject(data: any): void {\r\n        this.ResetDrByRoutesSubject.next(data);\r\n    }\r\n\r\n    public setEditCompartmentAssigmentSubject(data: any): void {\r\n        this.EditCompartmentAssigmentSubject.next(data);\r\n    }\r\n\r\n    public setSaveEditCompartmentAssigmentSubject(data: any): void {\r\n        this.SaveEditCompartmentAssigmentSubject.next(data);\r\n    }\r\n\r\n    public setOpenDsbOttoBuilderSubject(isOpen: boolean): void {\r\n        this.OpenDsbOttoBuilderSubject.next(isOpen);\r\n    }\r\n    public setOpenDsbOttoNotificationSubject(isOpen: boolean): void {\r\n        this.OpenDsbOttoNotificationSubject.next(isOpen);\r\n    }\r\n    public setDsbOttoNotificationCountSubject(isOpen: number): void {\r\n        this.DsbOttoNotificationCountSubject.next(isOpen);\r\n    }\r\n    public setSplitDRsInfoSubject(inputData: any): void {\r\n        this.SplitDrsInfoSubject.next(inputData);\r\n    }\r\n    public setTransferDSSubject(data: any): void {\r\n        this.TransferDSInfoSubject.next(data);\r\n    }\r\n    public setTrailerInformationSubject(data: any): void {\r\n        this.TrailerDSInfoSubject.next(data);\r\n    }\r\n    public unassignTrailerInformationSubject(data: any): void {\r\n        this.UnAssignTrailerFromShift.next(data);\r\n    }\r\n    public setRouteDetailsSubject(data: any): void {\r\n        this.RouteDetailsSubject.next(data);\r\n    }\r\n    public setDeleteRouteDetailsSubject(data: any): void {\r\n        this.DeleteRouteDetailsSubject.next(data);\r\n    }\r\n    public setHideDeliveryGroupSubject(data: any): void {\r\n        this.HideDeliveryGroupSubject.next(data);\r\n    }\r\n    public setGridViewSearch(data: any): void {\r\n        this.GridViewSearchGroupSubject.next(data);\r\n    }\r\n    public setRemoveTrailer(data: any): void {\r\n        this.RemoveTrailerGroupSubject.next(data);\r\n    }\r\n    public setShiftVisibility(data: any): void {\r\n        this.ShiftVisibility.next(data);\r\n    }\r\n    public setRouteResetGroupSubject(data: any): void {\r\n        this.RouteResetGroupSubject.next(data);\r\n    }\r\n    public setRouteDeleteDeliveryGroupSubject(data: any): void {\r\n        this.RouteDeleteDeliveryGroupSubject.next(data);\r\n    }\r\n    public setDrQueueChangesForFilter(data: boolean): void {\r\n        this.drQueueChangesForFilter.next(data);\r\n    }\r\n    public setDsbQueueChangesForNotification(data: boolean): void {\r\n        this.DsbQueueChangesForNotification.next(data);\r\n    }\r\n    public setDriverColumnChangeDetect(data: boolean): void {\r\n        this.DriverColumnChangeDetect.next(data);\r\n    }\r\n    public setOptionalPickupInfo(data: any): void {\r\n        this.OptionalPickupSubject.next(data);\r\n    }\r\n    public setScheduleLoaderSubject(data: any): void {\r\n        this.IsScheduleBuilderSubject.next(data);\r\n    }\r\n    public setOpenOnTheFlyLocationFormSubject(data: any): void {\r\n        this.OpenOnTheFlyLocationFormSubject.next(data);\r\n    }\r\n    public setGetOnTheFlyLocationDetailsSubject(data: any): void {\r\n        this.getOnTheFlyLocationDetailsSubject.next(data);\r\n    }\r\n    public setOnTheFlyDetectSubject(data: boolean): void {\r\n        this.OnTheFlyDetectSubject.next(data);\r\n    }\r\n    public setCancelEntireRowSubject(data: any): void {\r\n        this.CancelEntireRowSubject.next(data);\r\n    }\r\n    public setCancelDSDeliveryGroupSubject(data: any): void {\r\n        this.CancelDSDeliveryGroupSubject.next(data);\r\n    }\r\n    public setCancelDSGroupNormalSubDSSubject(data: any): void {\r\n        this.CancelDSDeliveryGroupNormalGroupDSSubject.next(data);\r\n    }\r\n    public setCancelDSLocationDSSubject(data: any): void {\r\n        this.CancelDSLocationSubject.next(data);\r\n    }\r\n    public setDeliveryScheduleRemoveSubject(data: any): void {\r\n        this.DeliveryScheduleRemoveSubject.next(data);\r\n    }\r\n    public setDispatcherLoadDragDropSubject(data: any): void {\r\n        this.DispatcherLoadDragDropSubject.next(data);\r\n    }\r\n    public setDispatcherLoadDragDropMapSubject(data: any): void {\r\n        this.DispatcherLoadDragDropMapSubject.next(data);\r\n    }\r\n    public setLoadLocationSequenceSubject(data: FormGroup): void {\r\n        this.LoadLocationSequenceSubject.next(data);\r\n    }\r\n    public refreshDsbOttoBuilderSubject(isRefresh: boolean): void {\r\n        this.RefreshDsbOttoBuilderSubject.next(isRefresh);\r\n    }\r\n    public setDropTerminalSelectedSubject(data: number): void {\r\n        this.DropTerminalSelectedSubject.next(data);\r\n    }\r\n    public removeFeesOnCreateNewSubject(): void {\r\n        this.RemoveFeesSubject.next();\r\n    }\r\n}\r\n","import { HandleError } from 'src/app/errors/HandleError';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, timer, BehaviorSubject } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { DipTestViewModel, DeliveryRequestViewModel, CustomerJobsForCarrier, ForecastingTankViewModel, ForecastingInventoryViewModel, ForecastingEstimatedUsageViewModel, ForecastingDeliveryViewModel, ForecastingExistingScheduleViewModel, ForecastingTankChartViewModel } from '../models/DispatchSchedulerModels';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { TruckDetailsModel } from '../model';\nimport { ForecastingLocationFilter } from 'src/app/dispatcher/dispatcher.model';\nimport { Exception } from 'src/app/app.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DispatcherService extends HandleError {\n    private postTruckData = '/Carrier/Freight/Create';\n    private urlDeleteTruckData = '/Carrier/Freight/DeleteTruck';\n    private getDipTestData = '/Freight/GetDipTestData?jobId=';\n    private getSiteList = '/Freight/GetSiteList?regionId=';\n    private getJobListForCarrierUrl = '/Freight/GetJobListForCarrier?regionId=';\n    private urlGetTrucks = '/Carrier/Freight/GetAllTruckDetails';\n    private postRaiseRequestData = '/Freight/RaiseRequests';\n    private postSingleRaiseRequestData = '/Freight/RaiseRequest';\n    private updateDeliveryRequestData = '/Freight/UpdateDeliveryRequest';\n    private getDeliveryRequestsUrl = '/Freight/GetDeliveryRequests?regionId=';\n    private urlGetCompantDrivers = '/Freight/GetCompantDrivers';\n    private urlGetFuelTypes = '/Freight/GetFuelTypes';\n    private getDemandCaptureChartdata = '/Freight/GetDemandCaptureChartdata?SiteId=';\n    private getDispatcherLoadsUrl = '/Dispatcher/Dashboard/GetDispatcherLoads';\n    private getOnGoingLoadsUrl = '/Dispatcher/Dashboard/GetOnGoingLoads';\n    private getDispatcherCountryUrl = '/Dispatcher/Dashboard/GetUserCountry';\n    private getDispatcherRegionUrl = '/Dispatcher/Dashboard/GetRegions';\n    private getStatesUrl = '/Dispatcher/Dashboard/GetStateDetails/?countryId=';\n    private getCountryUrl = '/Dispatcher/Dashboard/GetCountryDetails';\n    private getCityUrl = '/Dispatcher/Dashboard/GetCities/?stateId=';\n    private getProductTypeUrl = '/Dispatcher/Dashboard/GetProductTypes';\n    private getJobLocationDetailsUrl = '/Dispatcher/Dashboard/GetJobLocationDetails';\n    private getDipTestDetailsUrl = '/Dispatcher/Dashboard/GetDipTestDetails?';\n    private getDriverAdditionalDetailsUrl = '/Dispatcher/Dashboard/GetDriverAdditionalDetails?driverId=';\n    private getDropTicketDetailsUrl = '/Dispatcher/Dashboard/DDTInvoiceDetails?invoiceHeaderId=';\n    public SingleMultiWindowSubject: BehaviorSubject<number>;\n    private getSalesDataUrl = '/Supplier/Sales/GetSalesData?regionId=';\n    private getBuyerSalesDataUrl = '/Buyer/Sales/GetSalesData?jobId=';\n    private getDeliveryDetailsUrl = '/Supplier/Sales/GetExistingSchedules?jobId=';\n    private getScheduleQtyTypeUrl = '/Supplier/DeliveryGroup/GetScheduleQtyType';\n    private getBuyerScheduleQtyTypeUrl = '/Buyer/Sales/GetBuyerScheduleQtyType';\n    private postRaiseDeliveryRequestUrl = '/Supplier/Sales/RaiseDeliveryRequest';\n\n    private getBuyerDeliveryDetailsUrl = '/Buyer/Sales/GetExistingSchedules?jobId=';\n    private postBuyerRaiseDeliveryRequestUrl = '/Buyer/Sales/RaiseDeliveryRequest';\n    private getRaisedExceptionsUrl = 'Supplier/Sales/getRaisedExceptions?ExceptionTypes='\n    private getRaisedExceptionsBuyerUrl = 'Buyer/Sales/getRaisedExceptions?ExceptionTypes='\n    private getBuyerForcastingSettingUrl = '/Buyer/Sales/GetForecastingSetting';\n    private getForcastingSettingUrl = '/Supplier/Sales/GetForecastingSetting';\n    //private getBuyerForcastingLocationDetailsUrl = '/Buyer/Sales/GetFilteredLocations?regionId=';\n    //private getForcastingLocationDetailsUrl = '/Supplier/Sales/GetFilteredLocations?regionId=';\n    private getBuyerForcastingTankDetailsUrl = '/Buyer/Sales/GetForecastingTankDetails';\n    private getForcastingTankDetailsUrl = '/Supplier/Sales/GetForecastingTankDetails';\n    private getBuyerForcastingTankInventoryDetailsUrl = '/Buyer/Sales/GetForecastingTankInventoryDetails';\n    private getForcastingTankInventoryDetailsUrl = '/Supplier/Sales/GetForecastingTankInventoryDetails';\n    private getBuyerForcastingTankEstimatedUsageDetailsUrl = '/Buyer/Sales/GetForecastingTankEstimatedUsageDetails';\n    private getForcastingTankEstimatedUsageDetailsUrl = '/Supplier/Sales/GetForecastingTankEstimatedUsageDetails';\n    private getBuyerForcastingTankDeliveryDetailsUrl = '/Buyer/Sales/GetForecastingTankDeliveryDetails';\n    private getForcastingTankDeliveryDetailsUrl = '/Supplier/Sales/GetForecastingTankDeliveryDetails';\n    private getBuyerForcastingTankScheduleUrl = '/Buyer/Sales/GetForecastingTankScheduleDetails';\n    private getForcastingTankScheduleUrl = '/Supplier/Sales/GetForecastingTankScheduleDetails';\n    private getBuyerForcastingTankChartDetailsUrl = '/Buyer/Sales/GetForecastingTankDataForChart';\n    private getForcastingTankChartDetailsUrl = '/Supplier/Sales/GetForecastingTankDataForChart';\n    private postForcastingCalculateTankRetainWindowInfoUrl = '/Supplier/Sales/CalculateTankRetainWindowInfo';\n    private postForcastingCalculateTankDetailsRetainWindowInfoUrl = '/Supplier/Sales/CalculateTankDetailsRetainWindowInfo';\n    private postForcastingBuyerCalculateTankRetainWindowInfoUrl = '/Buyer/Dashboard/CalculateTankRetainWindowInfo';\n    private postForcastingBuyerCalculateTankDetailsRetainWindowInfoUrl = '/Buyer/Dashboard/CalculateTankDetailsRetainWindowInfo';\n    private getCarriersForSupplierUrl = '/Dispatcher/Dashboard/GetCarriersForSupplierDashboard';\n    private postSupplierFilters = '/Dispatcher/Dashboard/SaveFilters';\n    private getFiltersUrl = '/Dispatcher/Dashboard/GetFilters?moduleId=';\n    private getDSBShiftFiltersUrl = '/Dispatcher/Dashboard/GetDSBShiftFilters?moduleId=';\n    private getSupplierLocationTanksInfoUrl = \"/Supplier/Sales/GetLocationTanksInfo\";\n    private getBuyerLocationTanksInfoUrl = \"/Buyer/Sales/GetLocationTanksInfo\";\n    private postForcastingCalculateProductRetainWindowInfoUrl = '/Supplier/Sales/CalculateProductRetainWindowInfo';\n\n    constructor(private httpClient: HttpClient) {\n        super();\n        this.SingleMultiWindowSubject = new BehaviorSubject<any>(1); //singlemulti window screen 1\n    }\n\n    getAllTrucks(): Observable<any> {\n        return this.httpClient.get<any>(this.urlGetTrucks)\n            .pipe(catchError(this.handleError<any>('getAllTrucks', null)));\n    }\n\n    getCompanyDrivers(): Observable<any> {\n        return this.httpClient.get<any>(this.urlGetCompantDrivers)\n            .pipe(catchError(this.handleError<any>('getCompanyDrivers', null)));\n    }\n\n    postCreateTruck(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postTruckData, inputData)\n            .pipe(catchError(this.handleError<any>('postCreateTruck', null)));\n    }\n    postDeleteTruck(inputData: TruckDetailsModel): Observable<any> {\n        return this.httpClient.post<any>(this.urlDeleteTruckData, inputData)\n            .pipe(catchError(this.handleError<any>('postDeleteTruck', null)));\n    }\n\n    getDipTests(_jobId: string, regionId: string): Observable<DipTestViewModel[]> {\n        return this.httpClient.get<DipTestViewModel[]>(this.getDipTestData + _jobId + \"&regionId=\" + regionId)\n            .pipe(catchError(this.handleError<DipTestViewModel[]>('getDipTests', null)));\n    }\n\n    getSites(regionId: string): Observable<DropdownItem[]> {\n        return this.httpClient.get<DropdownItem[]>(this.getSiteList + regionId)\n            .pipe(catchError(this.handleError<DropdownItem[]>('getSites', null)));\n    }\n\n    getJobListForCarrier(regionId: string): Observable<CustomerJobsForCarrier[]> {\n        return this.httpClient.get<CustomerJobsForCarrier[]>(this.getJobListForCarrierUrl + regionId)\n            .pipe(catchError(this.handleError<CustomerJobsForCarrier[]>('getJobListForCarrier', null)));\n    }\n\n    postRaiseRequests(inputData: any[]): Observable<any> {\n        return this.httpClient.post<any>(this.postRaiseRequestData, inputData)\n            .pipe(catchError(this.handleError<any>('postRaiseRequests', null)));\n    }\n\n    postRaiseRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postSingleRaiseRequestData, inputData)\n            .pipe(catchError(this.handleError<any>('postRaiseRequest', null)));\n    }\n\n    getDeliveryRequests(regionId: string): Observable<DeliveryRequestViewModel[]> {\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getDeliveryRequestsUrl + regionId)\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getDeliveryRequests', null)));\n    }\n\n    updateDeliveryRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.updateDeliveryRequestData, inputData)\n            .pipe(catchError(this.handleError<any>('updateDeliveryRequest', null)));\n    }\n\n    getFuelTypes(): Observable<any> {\n        return this.httpClient.get<any>(this.urlGetFuelTypes)\n            .pipe(catchError(this.handleError<any>('getFuelTypes', null)));\n    }\n\n    public getDemandCapChartData(SiteId, days): Observable<any> {\n        return this.httpClient.get<any>(`${this.getDemandCaptureChartdata}${SiteId}&noOfDays=${days}`)\n            .pipe(catchError(this.handleError<any>('getDemandCapChartData', null)));\n    }\n\n    public GetDispatcherRegions(): Observable<any> {\n        return this.httpClient.get<any>(this.getDispatcherRegionUrl)\n            .pipe(catchError(this.handleError<any>('GetDispatcherRegions', null)));\n    }\n\n    public getDispatcherLoads(inputs: any): Observable<any> {\n        return this.httpClient.post<any>(this.getDispatcherLoadsUrl, inputs)\n            .pipe(catchError(this.handleError<any>('getDispatcherLoads', null)));\n    }\n\n    public getOnGoingLoads(inputs: any): Observable<any> {\n        return this.httpClient.post<any>(this.getOnGoingLoadsUrl, inputs)\n            .pipe(catchError(this.handleError<any>('getOnGoingLoads', null)));\n    }\n\n    public getDispatcherCountry(): Observable<any> {\n        return this.httpClient.get<any>(this.getDispatcherCountryUrl)\n            .pipe(catchError(this.handleError<any>('getDispatcherCountry', null)));\n    }\n\n    public getJobLocationDetails(jobIds, selectedLocAttributeId): Observable<any> {\n        var data = { jobList: jobIds, inventoryCaptureTypeIds: selectedLocAttributeId };\n        return timer(0, 60 * 60 * 1000).pipe(\n            switchMap(() => {\n                return this.httpClient.post<any>(this.getJobLocationDetailsUrl, data)\n            })).pipe(catchError(this.handleError<any>('getJobLocationDetails', null)));\n    }\n\n    public getStateList(countryId = '1,2,3'): Observable<any> {\n        return this.httpClient.get<any>(this.getStatesUrl + countryId)\n            .pipe(catchError(this.handleError<any>('getStateList', null)));\n    }\n\n    public getCountryList(): Observable<any> {\n        return this.httpClient.get<any>(this.getCountryUrl)\n            .pipe(catchError(this.handleError<any>('getCountryList', null)));\n    }\n\n    public getCityList(stateId = '1'): Observable<any> {\n        return this.httpClient.get<any>(this.getCityUrl + stateId)\n            .pipe(catchError(this.handleError<any>('getCityList', null)));\n    }\n\n    public getProductTypeList(): Observable<any> {\n        return this.httpClient.get<any>(this.getProductTypeUrl)\n            .pipe(catchError(this.handleError<any>('getProductTypeList', null)));\n    }\n    public getDipTestDetails(siteId, tankId, noOfDays): Observable<any> {\n        return this.httpClient.get<any>(this.getDipTestDetailsUrl + 'siteId=' + siteId + '&' + 'tankId=' + tankId + '&' + 'noOfDays=' + noOfDays)\n            .pipe(catchError(this.handleError<any>('getDipTestDetails', null)));\n    }\n    public getDriverAdditionalDetails(driverId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getDriverAdditionalDetailsUrl + driverId)\n            .pipe(catchError(this.handleError<any>('getDriverAdditionalDetails', null)));\n    }\n    public GetDropTicketDetails(invoiceHeaderId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getDropTicketDetailsUrl + invoiceHeaderId)\n            .pipe(catchError(this.handleError<any>('GetDropTicketDetails', null)));\n    }\n\n    public getSalesData(inputs: any): Observable<any> {\n        !inputs.RegionId ? inputs.RegionId = '' : '';\n        !inputs.CustomerId ? inputs.CustomerId = '' : '';\n        !inputs.LocationId ? inputs.LocationId = '' : '';\n        !inputs.SelectedTab ? inputs.SelectedTab = '' : 0;\n        !inputs.Carriers ? inputs.Carriers = '' : '';\n        !inputs.InventoryCaptureType ? inputs.InventoryCaptureType = '' : '';\n        return this.httpClient.get<any>(`${this.getSalesDataUrl}${inputs.RegionId}&customerId=${inputs.CustomerId}&jobId=${inputs.LocationId}&priority=${inputs.Priority}&SelectedTab=${inputs.SelectedTab}&isShowCarrierManaged=${inputs.IsShowCarrierManaged}&carriers=${inputs.Carriers}&isRetailJob=${inputs.IsShowRetailJobs}&inventoryCaptureType=${inputs.InventoryCaptureType}`)\n            .pipe(catchError(this.handleError<any>('getSalesData', null)));\n    }\n\n    public getBuyerSalesData(inputs: any): Observable<any> {\n        !inputs.LocationId ? inputs.LocationId = '' : '';\n        !inputs.Carriers ? inputs.Carriers = '' : '';\n        !inputs.Suppliers ? inputs.Suppliers = '' : '';\n        return this.httpClient.get<any>(`${this.getBuyerSalesDataUrl}${inputs.LocationId}&priority=${inputs.Priority}&SelectedTab=${inputs.SelectedTab}&isShowCarrierManaged=${inputs.IsShowCarrierManaged}&carriers=${inputs.Carriers}&isRetailJob=${inputs.IsShowRetailJobs}&supplierIds=${inputs.Suppliers}&InventoryCaptureTypeIds=${inputs.InventoryCaptureTypeIds}`)\n            .pipe(catchError(this.handleError<any>('getBuyerSalesDataUrl', null)));\n    }\n    public GetDeliveryDetails(jobId: number, productTypeId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getDeliveryDetailsUrl + jobId + \"&productTypeId=\" + productTypeId)\n            .pipe(catchError(this.handleError<any>('GetDeliveryDetails', null)));\n    }\n\n    public GetScheduleQtyType(): Observable<any> {\n        return this.httpClient.get<any>(this.getScheduleQtyTypeUrl)\n            .pipe(catchError(this.handleError<any>('GetScheduleQtyType', null)));\n    }\n    public PostRaiseDeliveryRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postRaiseDeliveryRequestUrl, inputData)\n            .pipe(catchError(this.handleError<any>('PostRaiseDeliveryRequest', null)));\n    }\n    public GetBuyerDeliveryDetails(jobId: number, productTypeId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getBuyerDeliveryDetailsUrl + jobId + \"&productTypeId=\" + productTypeId)\n            .pipe(catchError(this.handleError<any>('GetBuyerDeliveryDetails', null)));\n    }\n\n    public PostBuyerRaiseDeliveryRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postBuyerRaiseDeliveryRequestUrl, inputData)\n            .pipe(catchError(this.handleError<any>('PostBuyerRaiseDeliveryRequest', null)));\n    }\n\n\n    public GetRaisedExceptions(): Observable<any> {\n\n        return this.httpClient.get<any>(`${this.getRaisedExceptionsUrl}${Exception.UnKnowDelivery},${Exception.MissingDelivery}`)\n            .pipe(catchError(this.handleError<any>('getRaisedExceptionsUrl', null)));\n    }\n\n    public GetRaisedBuyerExceptions(): Observable<any> {\n        return this.httpClient.get<any>(`${this.getRaisedExceptionsBuyerUrl}${Exception.UnKnowDelivery},${Exception.MissingDelivery}`)\n            .pipe(catchError(this.handleError<any>('getRaisedExceptionsBuyerUrl', null)));\n    }\n    public GetBuyerScheduleQtyType(): Observable<any> {\n        return this.httpClient.get<any>(this.getBuyerScheduleQtyTypeUrl)\n            .pipe(catchError(this.handleError<any>('GetScheduleQtyType', null)));\n    }\n    public getForcastingSetting(): Observable<any> {\n        return this.httpClient.get<any>(this.getForcastingSettingUrl)\n            .pipe(catchError(this.handleError<any>('getForcastingSetting', null)));\n    }\n    public getBuyerForcastingSetting(): Observable<any> {\n        return this.httpClient.get<any>(this.getBuyerForcastingSettingUrl)\n            .pipe(catchError(this.handleError<any>('getBuyerForcastingSetting', null)));\n    }\n    // public getForcastingLocationDetails(regionId, customerIds, IsShowCarrierManaged?, Carriers?,selectedLocAttributeIds?): Observable<any> {\n    //     return this.httpClient.get<any>(this.getForcastingLocationDetailsUrl + regionId + \"&customerIds=\" + customerIds + \"&isShowCarrierManaged=\" + IsShowCarrierManaged + \"&carriers=\" + Carriers+\"&inventoryCaptureType=\"+selectedLocAttributeIds)\n    //         .pipe(catchError(this.handleError<any>('getForcastingLocationDetails', null)));\n    // }\n    // public getBuyerForcastingLocationDetails(regionId, customerIds,selectedLocAttributeIds): Observable<ForecastingTankViewModel[]> {\n    //     return this.httpClient.get<any>(this.getBuyerForcastingLocationDetailsUrl + regionId + \"&customerIds=\" + customerIds+\"&inventoryCaptureType=\"+selectedLocAttributeIds)\n    //         .pipe(catchError(this.handleError<any>('getBuyerForcastingLocationDetails', null)));\n    // }\n    public getForcastingTankDetails(JobIds, TankIds, StorageIds): Observable<ForecastingTankViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingTankViewModel[]>(this.getForcastingTankDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankViewModel[]>('getForcastingTankDetails', null)));\n    }\n    public getBuyerForcastingTankDetails(JobIds, TankIds, StorageIds): Observable<ForecastingTankViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingTankViewModel[]>(this.getBuyerForcastingTankDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankViewModel[]>('getBuyerForcastingTankDetails', null)));\n    }\n    public getForcastingTankInventoryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingInventoryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingInventoryViewModel[]>(this.getForcastingTankInventoryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingInventoryViewModel[]>('getForcastingTankInventoryDetails', null)));\n    }\n    public getBuyerForcastingTankInventoryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingInventoryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingInventoryViewModel[]>(this.getBuyerForcastingTankInventoryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingInventoryViewModel[]>('getBuyerForcastingTankInventoryDetails', null)));\n    }\n    public getForcastingTankEstimatedUsageDetails(JobIds, TankIds, StorageIds, StartDate, EndDate): Observable<ForecastingEstimatedUsageViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, startDate: StartDate, endDate: EndDate, };\n        return this.httpClient.post<ForecastingEstimatedUsageViewModel[]>(this.getForcastingTankEstimatedUsageDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingEstimatedUsageViewModel[]>('getForcastingTankEstimatedUsageDetails', null)));\n    }\n    public getBuyerForcastingTankEstimatedUsageDetails(JobIds, TankIds, StorageIds, StartDate, EndDate): Observable<ForecastingEstimatedUsageViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, startDate: StartDate, endDate: EndDate };\n        return this.httpClient.post<ForecastingEstimatedUsageViewModel[]>(this.getBuyerForcastingTankEstimatedUsageDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingEstimatedUsageViewModel[]>('getBuyerForcastingTankEstimatedUsageDetails', null)));\n    }\n    public getForcastingTankDeliveryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingDeliveryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingDeliveryViewModel[]>(this.getForcastingTankDeliveryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingDeliveryViewModel[]>('getForcastingTankDeliveryDetails', null)));\n    }\n    public getBuyerForcastingTankDeliveryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingDeliveryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingDeliveryViewModel[]>(this.getBuyerForcastingTankDeliveryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingDeliveryViewModel[]>('getBuyerForcastingTankDeliveryDetails', null)));\n    }\n    public getForcastingTankScheduleDetails(JobIds, TankIds, StorageIds): Observable<ForecastingExistingScheduleViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingExistingScheduleViewModel[]>(this.getForcastingTankScheduleUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingExistingScheduleViewModel[]>('getForcastingTankScheduleDetails', null)));\n    }\n    public getBuyerForcastingTankScheduleDetails(JobIds, TankIds, StorageIds): Observable<ForecastingExistingScheduleViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingExistingScheduleViewModel[]>(this.getBuyerForcastingTankScheduleUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingExistingScheduleViewModel[]>('getBuyerForcastingTankScheduleDetails', null)));\n    }\n    public getForcastingTankChartDetails(JobIds, TankIds, StorageIds, currentDateTime): Observable<ForecastingTankChartViewModel> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, currentDate: currentDateTime };\n        return this.httpClient.post<ForecastingTankChartViewModel>(this.getForcastingTankChartDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankChartViewModel>('getForcastingTankChartDetails', null)));\n    }\n    public getBuyerForcastingTankChartDetails(JobIds, TankIds, StorageIds, currentDateTime): Observable<ForecastingTankChartViewModel> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, currentDate: currentDateTime };\n        return this.httpClient.post<ForecastingTankChartViewModel>(this.getBuyerForcastingTankChartDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankChartViewModel>('getBuyerForcastingTankChartDetails', null)));\n    }\n    public calculateTankRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingCalculateTankRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('CalculateTankRetainWindowInfo', null)));\n    }\n    public calculateBuyerTankRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingBuyerCalculateTankRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('calculateBuyerTankRetainWindowInfo', null)));\n    }\n    public calculateBuyerTankDetailsRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingBuyerCalculateTankDetailsRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('calculateBuyerTankRetainWindowInfo', null)));\n    }\n    public calculateTankDetailsRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingCalculateTankDetailsRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('calculateTankDetailsRetainWindowInfo', null)));\n    }\n    public GetCarriersForSupplier(): Observable<any> {\n        return this.httpClient.get<any>(this.getCarriersForSupplierUrl)\n            .pipe(catchError(this.handleError<any>('getCarriersForSupplier', null)));\n    }\n\n    public postFiltersData(moduleId: any, inputData: any): Observable<any> {\n        var data = { moduleId: moduleId, filterInput: inputData };\n        return this.httpClient.post<any>(this.postSupplierFilters, data)\n            .pipe(catchError(this.handleError<any>('postFiltersData', null)));\n    }\n    public getFilters(moduleId: any): Observable<any> {\n        return this.httpClient.get<any>(this.getFiltersUrl + moduleId)\n            .pipe(catchError(this.handleError<any>('getFilters', null)));\n    }\n    public getDSBShiftFilters(moduleId: any, regionId): Observable<any> {\n        return this.httpClient.get<any>(this.getDSBShiftFiltersUrl + moduleId + '&' + 'regionId=' + regionId)\n            .pipe(catchError(this.handleError<any>('getFilters', null)));\n    }\n    public getSupplierLocationTanks(filter: ForecastingLocationFilter): Observable<any> {\n        return this.httpClient.post<any>(this.getSupplierLocationTanksInfoUrl, filter)\n            .pipe(catchError(this.handleError<any>('getSupplierLocationTanks', null)));\n    }\n    public getBuyerLocationTanks(filter: ForecastingLocationFilter): Observable<any> {\n        return this.httpClient.post<any>(this.getBuyerLocationTanksInfoUrl, filter)\n            .pipe(catchError(this.handleError<any>('getBuyerLocationTanks', null)));\n    }\n    public getInventoryDataCaptureList() {\n        return [{ Id: 0, Name: 'Not specified' }, { Id: 1, Name: 'Connected' }, { Id: 2, Name: 'Manual' }, { Id: 3, Name: 'Call-In' }, { Id: 4, Name: 'Mixed' }];\n    }\n\n    public calculateProductRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingCalculateProductRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('CalculateProductRetainWindowInfo', null)));\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { DropdownItemExt } from 'src/app/statelist.service';\r\nimport { RegionDetailModel, ScheduleBuilderModel, OrderPickupDetailModel, CompanyUsers, DemandModel, PreLoadDrViewModel, PreLoadDrResponseViewModel, UnAssignDriverFromShiftModel, DeliveryRequestBrokerInfoViewModel, TrailerCompartment, ShiftViewModel, OttoTripModel, OttoNotifications, OttoBuilder, OrderFuelInfo, OptionalPickupDetailModel, JobDetailsWithOrders, SubDRStatus } from '../models/DispatchSchedulerModels';\r\nimport { DeliveryRequestViewModel } from '../../buyer-wally-board/Models/BuyerWallyBoard';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ScheduleBuilderService extends HandleError {\r\n\r\n    private getRegionListUrl = '/Carrier/ScheduleBuilder/GetRegions';\r\n    private getRegionDetailsUrl = '/Carrier/ScheduleBuilder/GetRegionDetails?regionId=';\r\n    private getGetSheduleBuilderUrl = '/Carrier/ScheduleBuilder/GetSheduleBuilder?regionId=';\r\n    private getOrdersUrl = '/Carrier/ScheduleBuilder/GetOrderDetailsForEditDeliveryGroup?jobId=';\r\n    private getPickupTerminalsUrl = '/Carrier/ScheduleBuilder/GetTerminalsForOrders';\r\n    private getOrderBadgesByTerminalUrl = '/Carrier/ScheduleBuilder/GetOrderBadgesByTerminal';\r\n    private saveDriverViewUrl = '/Carrier/ScheduleBuilder/SaveDriverView';\r\n    private getDeliveryReqDemandsUrl = '/Carrier/ScheduleBuilder/GetDeliveryReqDemands';\r\n    private publishDriverViewUrl = '/Carrier/ScheduleBuilder/PublishDriverView';\r\n    private saveTrailerViewUrl = '/Carrier/ScheduleBuilder/SaveTrailerView';\r\n    private publishTrailerViewUrl = '/Carrier/ScheduleBuilder/PublishTrailerView';\r\n    private deleteGroupUrl = '/Carrier/ScheduleBuilder/DeleteLoadDriverView';\r\n    private deleteGroupTrailerViewUrl = '/Carrier/ScheduleBuilder/DeleteLoadTrailerView';\r\n    private urlGetCompanyDrivers = 'Carrier/ScheduleBuilder/GetCompanyDrivers';\r\n    private urlAssignDriverAndTrailer = 'Carrier/ScheduleBuilder/AssignDriverAndTrailer';\r\n    private checkDelReqStatusUrl = 'Carrier/ScheduleBuilder/CheckDelReqStatus?delReqId=';\r\n    private getScheduleStatusUrl = 'Carrier/ScheduleBuilder/GetScheduleStatus';\r\n    private getRegionDispatcherDetails = '/Carrier/ScheduleBuilder/GetRegionDispactherDetails?regionId=';\r\n    private getSelectedDateDriverScheduleByDriverIdUrl = '/Carrier/ScheduleBuilder/getSelectedDateDriverScheduleByDriverId?driverId=';\r\n    private getSelectedDateDriverScheduleByDriverIdGridViewUrl = '/Carrier/ScheduleBuilder/getSelectedDateDriverScheduleByDriverIdGridView?driverId=';\r\n    private validateTrailerJobCompatibilityUrl = '/Carrier/ScheduleBuilder/ValidateTrailerJobCompatibility';\r\n    private validateFilldOrderCompatibilityUrl = '/Carrier/ScheduleBuilder/IsFilldCompatibleOrder?orderId=';\r\n    private getCustomerLocationProductUrl = '/Carrier/ScheduleBuilder/GetCustomerLocationProducts?jobId=';\r\n    private reCreateDeliveryRequestsUrl = '/Carrier/ScheduleBuilder/ReCreateDeliveryRequests';\r\n    private cloneDrsForPreloadUrl = '/Carrier/ScheduleBuilder/CloneDrsForPreload';\r\n    private CreatePreloadForAcrossTheDateUrl = '/Carrier/ScheduleBuilder/CreatePreloadForAcrossTheDate';\r\n    private postUrlUnAssignDriverFromShift = '/Carrier/ScheduleBuilder/UnAssignDriverFromShift';\r\n    private getAssignCarrierDetailsUrl = '/Carrier/ScheduleBuilder/GetAssignCarrierDetails?regionId=';\r\n    private getOrdersByDeliveryRequestsUrl = '/Carrier/ScheduleBuilder/GetOrdersByDeliveryRequests';\r\n    private BrokerDeliveryRequestToCarrierUrl = '/Carrier/ScheduleBuilder/BrokerDeliveryRequestToCarrier';\r\n    private BrokerDeliveryRequestsToCarriersUrl = '/Carrier/ScheduleBuilder/BrokerDeliveryRequestsToCarriers';\r\n    private getGetRegionsOfCompanyUrl = '/Carrier/ScheduleBuilder/GetRegionsOfCompany?companyId=';\r\n    private recallDrFromCarrierUrl = '/Carrier/ScheduleBuilder/RecallDrFromCarrier';\r\n    private getChildOrdersURL = '/Carrier/ScheduleBuilder/GetSupplierChildOrders?OrderId=';\r\n    private getTrailerComaprtmentsURL = '/Carrier/ScheduleBuilder/GetTrailerCompartmentDetails';\r\n    private getTrailerFuelRetainURL = '/Carrier/ScheduleBuilder/GetTrailerFuelRetainDetails';\r\n    private getOttoSettingURL = '/Carrier/ScheduleBuilder/GetOttoSetting';\r\n    private getOttoScheduleDetailsURL = '/Carrier/ScheduleBuilder/GetOttoScheduleDetails?regionId=';\r\n    private GetShiftsURL = '/Carrier/ScheduleBuilder/GetShifts?regionId=';\r\n    private getOttoNotificationURL = '/Carrier/ScheduleBuilder/GetOttoNotifications?regionId=';\r\n    private getOttoNotificationCountURL = '/Carrier/ScheduleBuilder/GetDsbNotificationCount?regionId=';\r\n    private updateOttoNotificationStatusURL = '/Carrier/ScheduleBuilder/UpdateDsbNotificationStatus';\r\n    private scheduleOttoDRsURL = '/Carrier/ScheduleBuilder/ScheduleOttoDRs';\r\n    private urlGetShiftCompanyDrivers = 'Carrier/ScheduleBuilder/GetShiftCompanyDrivers';\r\n    private urlGetDriversShiftsURL = '/Carrier/ScheduleBuilder/GetDriversShiftsURL?regionId=';\r\n    private getOptionalPickupTerminalsUrl = '/Carrier/ScheduleBuilder/GetTerminalsForOptionalPickup';\r\n    private getOrderFuelTypeUrl = '/Carrier/ScheduleBuilder/GetOrderFuelType';\r\n    private postUrladdOptionalPickup = '/Carrier/ScheduleBuilder/AddOptionalPickup';\r\n    private postUrlgetOptionalPickupDetails = '/Carrier/ScheduleBuilder/GetOptionalPickupDetails';\r\n    private postUrlDeleteOptionalPickupDetails = '/Carrier/ScheduleBuilder/DeleteOptionalPickupDetails';\r\n    private getTBDPickupTerminalsUrl = '/Carrier/ScheduleBuilder/GetTBDTerminals';\r\n    private getJobWithOrdersUrl = '/Carrier/ScheduleBuilder/GetJobWithOrders?regionId='\r\n    private cancelDriverViewUrl = '/Carrier/ScheduleBuilder/CancelDriverSchedule';\r\n    private cancelDeliveryGroupSchedule = '/Carrier/ScheduleBuilder/CancelDeliverySchedule';\r\n    private getSubDRInfoCancelDS = '/Carrier/ScheduleBuilder/GetSubDRInfoCancelDS';\r\n    private getSubDRsStatus = '/Carrier/ScheduleBuilder/getSubDrsStatus';\r\n    private deleteRemoveDeliveryScheduleUrl = '/Carrier/ScheduleBuilder/RemoveDeliverySchedule';\r\n    private urlGetJobCoordinates = '/Carrier/ScheduleBuilder/GetJobCoordinates';\r\n    private urlPostValidateDRMaxFill = '/Carrier/ScheduleBuilder/ValidateTankMaxFill';\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getRegions(): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getRegionListUrl)\r\n            .pipe(catchError(this.handleError<any>('getRegions', null)));\r\n    }\r\n\r\n    getRegionsOfCompany(companyId: any): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getGetRegionsOfCompanyUrl + companyId)\r\n            .pipe(catchError(this.handleError<any>('getRegionsOfCompany', null)));\r\n    }\r\n\r\n    getRegionDetails(regionId: string): Observable<RegionDetailModel> {\r\n        return this.httpClient.get<RegionDetailModel>(this.getRegionDetailsUrl + regionId)\r\n            .pipe(catchError(this.handleError<RegionDetailModel>('getRegionDetails', null)));\r\n    }\r\n\r\n    getScheduleBuilder(regionId: string, date: string, sbViewId: number, sbDsbView: number): Observable<ScheduleBuilderModel> {\r\n        return this.httpClient.get<ScheduleBuilderModel>(this.getGetSheduleBuilderUrl + regionId + '&date=' + date + '&sbView=' + sbViewId + '&sbDsbView=' + sbDsbView)\r\n            .pipe(catchError(this.handleError<ScheduleBuilderModel>('getScheduleBuilder', null)));\r\n    }\r\n\r\n    getOrders(jobId: number, productTypeId: string, startDate: string, carrierStatus: number = -1, isBlendReq: boolean = false): Observable<OrderPickupDetailModel[]> {\r\n        var url = this.getOrdersUrl + jobId + '&productTypeId=' + productTypeId + '&carrierStatus=' + carrierStatus + '&isBlendReq=' + isBlendReq;\r\n        if (startDate != null) {\r\n            url = url + '&startDate=' + startDate;\r\n        }\r\n        return this.httpClient.get<OrderPickupDetailModel[]>(url)\r\n            .pipe(catchError(this.handleError<OrderPickupDetailModel[]>('getOrders', null)));\r\n    }\r\n\r\n    getJobDetailsWithOrders(selectedRegionId: string, tfxProductId: number, productTypeId: number, terminalId: number, bulkplantId: number, startDate: string): Observable<JobDetailsWithOrders[]> {\r\n        var url = this.getJobWithOrdersUrl + selectedRegionId + '&tfxProductId=' + tfxProductId + '&productTypeId=' + productTypeId + '&terminalId=' + terminalId + '&bulkplantId=' + bulkplantId;\r\n        if (startDate != null) {\r\n            url = url + '&startDate=' + startDate;\r\n        }\r\n        return this.httpClient.get<JobDetailsWithOrders[]>(url)\r\n            .pipe(catchError(this.handleError<JobDetailsWithOrders[]>('getJobDetailsWithOrders', null)));\r\n    }\r\n\r\n    getPickupTerminals(orders: number[], terminalName = ''): Observable<any> {\r\n        var data = { OrderList: orders, Terminal: terminalName };\r\n        return this.httpClient.post(this.getPickupTerminalsUrl, data);\r\n    }\r\n\r\n    getOrderBadgesByTerminal(_orderIds, _pickupLocationType, _pickupLocationId): Observable<any> {\r\n        var model = { OrderIds: _orderIds, PickupLocationType: _pickupLocationType, PickupLocationId: _pickupLocationId };\r\n        return this.httpClient.post(this.getOrderBadgesByTerminalUrl, model).pipe(catchError(this.handleError<any>('getOrderBadgesByTerminal', null)));\r\n    }\r\n\r\n    saveDriverView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.saveDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('saveDriverView', null)));\r\n    }\r\n\r\n    getDeliveryReqDemands(input: any): Observable<any> {\r\n        return this.httpClient.post(this.getDeliveryReqDemandsUrl, input).pipe(catchError(this.handleError<any>('getDeliveryReqDemands', null)));\r\n    }\r\n\r\n    publishDriverView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.publishDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('publishDriverView', null)));\r\n    }\r\n\r\n    saveTrailerView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.saveTrailerViewUrl, sbModel).pipe(catchError(this.handleError<any>('saveTrailerView', null)));\r\n    }\r\n\r\n    publishTrailerView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.publishTrailerViewUrl, sbModel).pipe(catchError(this.handleError<any>('publishTrailerView', null)));\r\n    }\r\n\r\n    assignDriverAndTrailer(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.urlAssignDriverAndTrailer, sbModel);\r\n    }\r\n\r\n    deleteGroup(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.deleteGroupUrl, sbModel).pipe(catchError(this.handleError<any>('deleteGroup', null)));\r\n    }\r\n\r\n    deleteGroupTrailerView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.deleteGroupTrailerViewUrl, sbModel).pipe(catchError(this.handleError<any>('deleteGroupTrailerView', null)));\r\n    }\r\n\r\n    checkDelReqStatus(selectedDate: string, selectedRegionId: string, currentTimeStamp: any, delReqId: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.checkDelReqStatusUrl + delReqId + '&selectedDate=' + selectedDate + '&selectedRegionId=' + selectedRegionId + '&currentTimeStamp=' + currentTimeStamp)\r\n            .pipe(catchError(this.handleError<any>('checkDelReqStatus', null)));\r\n    }\r\n\r\n    getSubDRStatus(groupDRParentIds: SubDRStatus[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.getSubDRsStatus, groupDRParentIds).pipe(catchError(this.handleError<any>('getSubDRStatus', null)));\r\n    }\r\n\r\n    getScheduleStatus(trackableScheduleIds: number[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.getScheduleStatusUrl, trackableScheduleIds).pipe(catchError(this.handleError<any>('getScheduleStatus', null)));\r\n    }\r\n\r\n    getCompanyDrivers(trailerIds, regionIds, selectedDate): Observable<any> {\r\n        var data = { trailerId: trailerIds, regionId: regionIds, selectedDate: selectedDate };\r\n        return this.httpClient.post<any>(this.urlGetCompanyDrivers, data)\r\n            .pipe(catchError(this.handleError<any>('getCompanyDrivers', null)));\r\n    }\r\n\r\n    setConfirmationHeadingForDeleteGroup(enrouteStatus: number) {\r\n        switch (enrouteStatus) {\r\n            case 1:\r\n            case 3:\r\n            case 9:\r\n                jQuery('#deleteDrHeading').html('Driver has started to fuel drop location for one or more schedule(s).');\r\n                break;\r\n            case 11:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel pickup location for one or more schedule(s).');\r\n                break;\r\n            case 12:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel pickup location for one or more schedule(s).');\r\n                break;\r\n            case 17:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel pickup location for one or more schedule(s).');\r\n                break;\r\n            case 15:\r\n                jQuery('#deleteDrHeading').html('Driver has started picking up fuel for one or more schedule(s).');\r\n                break;\r\n            case 16:\r\n                jQuery('#deleteDrHeading').html('Driver has already picked fuel for one or more schedule(s).');\r\n                break;\r\n            case 13:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel drop location for one or more schedule(s).');\r\n                break;\r\n            case 18:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel drop location for one or more schedule(s).');\r\n                break;\r\n            default:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel drop location for one or more schedule(s).');\r\n                break;\r\n        }\r\n    }\r\n\r\n    setConfirmationHeadingForDR(enrouteStatus: number) {\r\n        switch (enrouteStatus) {\r\n            case 1:\r\n            case 3:\r\n            case 9:\r\n                jQuery('#deleteDrHeading').html('Driver has started to fuel drop location.');\r\n                break;\r\n            case 11:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel pickup location.');\r\n                break;\r\n            case 12:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel pickup location.');\r\n                break;\r\n            case 17:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel pickup location.');\r\n                break;\r\n            case 15:\r\n                jQuery('#deleteDrHeading').html('Driver has started picking up fuel.');\r\n                break;\r\n            case 16:\r\n                jQuery('#deleteDrHeading').html('Driver has already picked fuel.');\r\n                break;\r\n            case 13:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel drop location.');\r\n                break;\r\n            case 18:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel drop location.');\r\n                break;\r\n            default:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel drop location.');\r\n                break;\r\n        }\r\n    }\r\n\r\n    returnCommonElements(array1, list: any, isScheduleStatus: boolean) {\r\n        if (isScheduleStatus) {\r\n            return list.filter(i =>\r\n                array1.indexOf(i.ScheduleStatusId) != -1\r\n            ).map(t => t.ScheduleStatusId);\r\n        }\r\n        else {\r\n            return list.filter(i =>\r\n                array1.indexOf(i.ScheduleEnrouteStatusId) != -1).map(t => t.ScheduleEnrouteStatusId);\r\n        }\r\n    }\r\n\r\n    returnCommonTracableElements(StatusArray, list: any, isTrackableStatus: boolean) {\r\n        if (isTrackableStatus) {\r\n            return list.filter(i =>\r\n                StatusArray.indexOf(i.TrackScheduleStatus) != -1\r\n            ).map(t => t.TrackScheduleStatus);\r\n        }\r\n        else {\r\n            return list.filter(i =>\r\n                StatusArray.indexOf(i.TrackScheduleStatus) != -1).map(t => t.TrackScheduleStatus);\r\n        }\r\n    }\r\n\r\n    returnSubDrStatusOtherthaCancel(StatusArray: any, list: any) {\r\n        return list.filter(i =>\r\n            StatusArray.indexOf(i.DeliveryScheduleStatusId) != -1\r\n        ).map(t => t.DeliveryScheduleStatusId);\r\n\r\n    }\r\n\r\n    getRegionDispacther(regionId, driverId): Observable<CompanyUsers[]> {\r\n        return this.httpClient.get<CompanyUsers[]>(this.getRegionDispatcherDetails + regionId + '&driverId=' + driverId)\r\n            .pipe(catchError(this.handleError<any>('getCompanyUsersDetails', null)));\r\n    }\r\n\r\n    getSelectedDateDriverScheduleByDriverId(driverId, selectedDate): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSelectedDateDriverScheduleByDriverIdUrl + driverId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<any>('getSelectedDateDriverScheduleByDriverId', null)));\r\n    }\r\n\r\n    validateTrailerJobCompatibility(trailers: any, deliveryRequests: any): Observable<any> {\r\n        var data = { trailers: trailers, deliveryRequests: deliveryRequests };\r\n        return this.httpClient.post(this.validateTrailerJobCompatibilityUrl, data).pipe(catchError(this.handleError<any>('validateTrailerJobCompatibility', null)));\r\n    }\r\n\r\n    validateFilldOrderCompatibility(orderIds: any): Observable<any> {\r\n        var data = { orderIds: orderIds };\r\n        return this.httpClient.post(this.validateFilldOrderCompatibilityUrl, data).pipe(catchError(this.handleError<any>('validateFilldOrderCompatibility', null)));\r\n    }\r\n\r\n    getCustomerLocationDemands(jobId: number, regionId: string): Observable<DemandModel[]> {\r\n        return this.httpClient.get<any>(this.getCustomerLocationProductUrl + jobId + \"&regionId=\" + regionId)\r\n            .pipe(catchError(this.handleError<any>('getCustomerLocationProducts', null)));\r\n    }\r\n\r\n    reCreateDeliveryRequests(inputData: any): Observable<any> {\r\n        return this.httpClient.post(this.reCreateDeliveryRequestsUrl, inputData)\r\n            .pipe(catchError(this.handleError<any>('reCreateDeliveryRequests', null)));\r\n    }\r\n\r\n    cloneDrsForPreload(drIds: any): Observable<any> {\r\n        return this.httpClient.post(this.cloneDrsForPreloadUrl, drIds)\r\n            .pipe(catchError(this.handleError<any>('cloneDrsForPreload', null)));\r\n    }\r\n\r\n    createPreloadForAcrossTheDate(data: PreLoadDrViewModel): Observable<PreLoadDrResponseViewModel> {\r\n        return this.httpClient.post(this.CreatePreloadForAcrossTheDateUrl, data)\r\n            .pipe(catchError(this.handleError<any>('CreatePreloadForAcrossTheDate', null)));\r\n    }\r\n\r\n    UnAssignDriverTrailerFromShift(_data: UnAssignDriverFromShiftModel): Observable<any> {\r\n        return this.httpClient.post(this.postUrlUnAssignDriverFromShift, _data).pipe(catchError(this.handleError<any>('UnAssignDriverFromShift', null)));\r\n    }\r\n    getAssignCarrierDetails(regionId: string, JobId: number, FuelTypeId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAssignCarrierDetailsUrl + regionId + \"&jobId=\" + JobId + \"&fuelTypeId=\" + FuelTypeId)\r\n            .pipe(catchError(this.handleError<any>('getAssignCarrierDetails', null)));\r\n    }\r\n\r\n    getOrdersByDeliveryRequests(data: any[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.getOrdersByDeliveryRequestsUrl, data)\r\n            .pipe(catchError(this.handleError<any>('getOrdersByDeliveryRequests', null)));\r\n    }\r\n\r\n    BrokerDeliveryRequestToCarrier(_data: DeliveryRequestBrokerInfoViewModel): Observable<any> {\r\n        return this.httpClient.post(this.BrokerDeliveryRequestToCarrierUrl, _data)\r\n            .pipe(catchError(this.handleError<any>('BrokerDeliveryRequestToCarrier', null)));\r\n    }\r\n\r\n    BrokerDeliveryRequestsToCarriers(_data: DeliveryRequestBrokerInfoViewModel): Observable<any> {\r\n        return this.httpClient.post(this.BrokerDeliveryRequestsToCarriersUrl, _data)\r\n            .pipe(catchError(this.handleError<any>('BrokerDeliveryRequestsToCarriers', null)));\r\n    }\r\n\r\n    recallDrFromCarrier(_data: any): Observable<any> {\r\n        return this.httpClient.post(this.recallDrFromCarrierUrl, _data)\r\n            .pipe(catchError(this.handleError<any>('recallDrFromCarrier', null)));\r\n    }\r\n\r\n    getChildOrderDetails(OrderId: any): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getChildOrdersURL + OrderId)\r\n            .pipe(catchError(this.handleError<any>('getChildOrderDetails', null)));\r\n    }\r\n\r\n    getTrailerCompartments(data: any[]): Observable<TrailerCompartment[]> {\r\n        return this.httpClient.post(this.getTrailerComaprtmentsURL, data)\r\n            .pipe(catchError(this.handleError<any>('getTrailerCompartments', null)));\r\n    }\r\n    getTrailerFuelRetain(data: any[]): Observable<any> {\r\n        return this.httpClient.post(this.getTrailerFuelRetainURL, data)\r\n            .pipe(catchError(this.handleError<any>('getTrailerFuelRetain', null)));\r\n    }\r\n    getOttoSetting(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getOttoSettingURL)\r\n            .pipe(catchError(this.handleError<any>('getOttoSetting', null)));\r\n    }\r\n    getOttoScheduleDetails(regionId: string, shiftStartTime: string, shiftEndTime: string, date: string): Observable<OttoTripModel[]> {\r\n        return this.httpClient.get<OttoTripModel[]>(this.getOttoScheduleDetailsURL + regionId + '&shiftStartTime=' + shiftStartTime + '&shiftEndTime=' + shiftEndTime + '&date=' + date)\r\n            .pipe(catchError(this.handleError<OttoTripModel[]>('getOttoScheduleDetails', null)));\r\n    }\r\n    getShifts(regionid): Observable<ShiftViewModel[]> {\r\n        return this.httpClient.get<ShiftViewModel[]>(this.GetShiftsURL + regionid)\r\n            .pipe(catchError(this.handleError<ShiftViewModel[]>('getShifts', null)));\r\n    }\r\n    getOttoNotificationDetails(regionId: string): Observable<OttoNotifications[]> {\r\n        return this.httpClient.get<OttoNotifications[]>(this.getOttoNotificationURL + regionId)\r\n            .pipe(catchError(this.handleError<OttoNotifications[]>('getOttoNotificationDetails', null)));\r\n    }\r\n    getOttoNotificationCount(regionId: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getOttoNotificationCountURL + regionId)\r\n            .pipe(catchError(this.handleError<any>('getOttoNotificationCount', null)));\r\n    }\r\n    updateNotificationStatus(data: any): Observable<any> {\r\n        var response = { Id: data };\r\n        return this.httpClient.post(this.updateOttoNotificationStatusURL, response)\r\n            .pipe(catchError(this.handleError<any>('updateNotificationStatus', null)));\r\n    }\r\n    scheduleOttoDRs(ottoBuilder: OttoBuilder): Observable<any> {\r\n        return this.httpClient.post(this.scheduleOttoDRsURL, ottoBuilder)\r\n            .pipe(catchError(this.handleError<any>('scheduleOttoDRs', null)));\r\n    }\r\n    getShiftCompanyDrivers(regionIds, otherRegion, selectedDate, shiftId): Observable<any> {\r\n        var data = { regionId: regionIds, otherRegion: otherRegion, selectedDate: selectedDate, shiftId: shiftId };\r\n        return this.httpClient.post<any>(this.urlGetShiftCompanyDrivers, data)\r\n            .pipe(catchError(this.handleError<any>('getShiftCompanyDrivers', null)));\r\n    }\r\n    getDriversShifts(regionid, date: string): Observable<ShiftViewModel[]> {\r\n        return this.httpClient.get<ShiftViewModel[]>(this.urlGetDriversShiftsURL + regionid + '&SelectedDate=' + date)\r\n            .pipe(catchError(this.handleError<ShiftViewModel[]>('getDriversShifts', null)));\r\n    }\r\n    getSelectedDateDriverScheduleByDriverIdGridView(driverId, selectedDate, shiftId): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSelectedDateDriverScheduleByDriverIdGridViewUrl + driverId + \"&selectedDate=\" + selectedDate + \"&shiftId=\" + shiftId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedDateDriverScheduleByDriverId', null)));\r\n    }\r\n    getOptioanlPickupTerminals(orders: number[], fuelType: number[], terminalName = ''): Observable<any> {\r\n        var data = { OrderList: orders, FuelTypeId: fuelType, Terminal: terminalName };\r\n        return this.httpClient.post(this.getOptionalPickupTerminalsUrl, data);\r\n    }\r\n    getOrderFuelTypes(orders: number[]): Observable<OrderFuelInfo> {\r\n        var data = { OrderList: orders };\r\n        return this.httpClient.post<OrderFuelInfo>(this.getOrderFuelTypeUrl, data);\r\n    }\r\n    addOptionalPickup(OptionalPickupDetails: OptionalPickupDetailModel[]) {\r\n        var data = { OptionalPickupDetails };\r\n        return this.httpClient.post<any>(this.postUrladdOptionalPickup, data);\r\n    }\r\n\r\n    getOptionalPickup(OptionalPickupDetails: OptionalPickupDetailModel) {\r\n        var data = { OptionalPickupDetails };\r\n        return this.httpClient.post<OptionalPickupDetailModel[]>(this.postUrlgetOptionalPickupDetails, data);\r\n    }\r\n    deleteOptionalPickup(opId: string, DriverId: number) {\r\n        var data = { Id: opId, driverId: DriverId };\r\n        return this.httpClient.post<any>(this.postUrlDeleteOptionalPickupDetails, data);\r\n    }\r\n    getTBDPickupTerminals(terminalName = ''): Observable<any> {\r\n        var data = { Terminal: terminalName };\r\n        return this.httpClient.post(this.getTBDPickupTerminalsUrl, data);\r\n    }\r\n    CancelDriverSchedule(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.cancelDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('cancelDriverSchedule', null)));\r\n    }\r\n    CancelDeliveryGroupSchedule(CancelDeliverySchedule: any): Observable<any> {\r\n        return this.httpClient.post(this.cancelDeliveryGroupSchedule, CancelDeliverySchedule).pipe(catchError(this.handleError<any>('CancelDeliveryGroupSchedule', null)));\r\n    }\r\n    GetSubDRInfoCancelDS(inputModel: any): Observable<any> {\r\n        return this.httpClient.post(this.getSubDRInfoCancelDS, inputModel).pipe(catchError(this.handleError<any>('GetSubDRInfoCancelDS', null)));\r\n    }\r\n    deleteDeliverySchedule(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.deleteRemoveDeliveryScheduleUrl, sbModel).pipe(catchError(this.handleError<any>('deleteDeliverySchedule', null)));\r\n    }\r\n    getJobCoordinates(jobIds: number[]): Observable<any[]> {\r\n        return this.httpClient.post<any[]>(this.urlGetJobCoordinates, { jobIds: jobIds }).pipe(catchError(this.handleError<any>('getJobCoordinates', null)));\r\n    }\r\n    postValidateDRMaxFill(sbModel: DeliveryRequestViewModel[]): Observable<any> {\r\n        return this.httpClient.post(this.urlPostValidateDRMaxFill, sbModel).pipe(catchError(this.handleError<any>('postValidateDRMaxFill', null)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, Validators, FormGroup, FormArray } from '@angular/forms';\r\nimport { TrailerViewModel, TrailerShiftModel, TripModel, DeliveryRequestViewModel, DropAddressModel, DemandModel, LoadInfo, CompartmentModel, CompartmentInfo, DriverAdditionalDetailModel, BlendedRequest } from '../models/DispatchSchedulerModels';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport * as moment from 'moment';\r\nimport { min } from 'rxjs/operators';\r\nimport { sortArrayTwice, sortByKeyAsc } from 'src/app/my.functions';\r\nimport { NumberConstants } from 'src/app/app.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n\r\n    constructor(private readonly fb: FormBuilder) { }\r\n\r\n    public getTrailerForm(trailer: TrailerViewModel, selectedShifts: []): FormGroup {\r\n        return this.fb.group({\r\n            Id: this.fb.control(trailer.Id),\r\n            TrailerId: this.fb.control(trailer.TrailerId), // Rows in the shift \r\n            StartTime: this.fb.control(trailer.StartTime),\r\n            EndTime: this.fb.control(trailer.EndTime),\r\n            Compartments: this.fb.control(trailer.Compartments),\r\n            TrailerType: this.fb.control(trailer.TrailerType),\r\n            Shifts: this.fb.array([]), //this.getShiftsFormArray(trailer.Shifts || []),\r\n            SelectedShifts: this.fb.control(selectedShifts),\r\n            IsCollapsed: this.fb.control(trailer.IsCollapsed)\r\n        });\r\n    }\r\n\r\n    public getShiftsFormArray(shifts: TrailerShiftModel[]): FormArray {\r\n        var _sArray = this.fb.array([]);\r\n        shifts.forEach(x => {\r\n            _sArray.push(this.getShiftFormGroup(x));\r\n        });\r\n        return _sArray;\r\n    }\r\n\r\n    public getShiftFormGroup(x: TrailerShiftModel): FormGroup {\r\n        let _sForm = this.fb.group({\r\n            ShiftId: this.fb.control(x.ShiftId),\r\n            StartTime: this.fb.control(x.StartTime),\r\n            EndTime: this.fb.control(x.EndTime),\r\n            SlotPeriod: this.fb.control(x.SlotPeriod),\r\n            Trips: this.getTripsFormArray(x.Trips)\r\n        });\r\n        return _sForm;\r\n    }\r\n\r\n    public getTripsFormArray(trips: TripModel[]): FormArray {\r\n        var _tArray = this.fb.array([]);\r\n        trips.forEach(x => {\r\n            _tArray.push(this.getTripFormGroup(x));\r\n        });\r\n        return _tArray;\r\n    }\r\n\r\n    public getTripFormGroup(x: TripModel): FormGroup {\r\n        var _tForm = this.fb.group({\r\n            TripId: this.fb.control(x.TripId),\r\n            GroupId: this.fb.control(x.GroupId),\r\n            DeliveryRequests: this.getDeliveryRequestFormArray(x.DeliveryRequests, x.IsCommonPickup, x.IsDispatcherDragDropSequence, 0),\r\n            StartDate: this.fb.control(x.StartDate, Validators.required),\r\n            StartTime: this.fb.control(x.StartTime, Validators.required),\r\n            EndTime: this.fb.control(x.EndTime, Validators.required),\r\n            LoadCode: this.fb.control(x.LoadCode),\r\n            RouteInfo: this.fb.control(x.RouteInfo),\r\n            SupplierSource: this.fb.control(x.SupplierSource),\r\n            Carrier: this.fb.control(x.Carrier),\r\n            TripStatus: this.fb.control(x.TripStatus),\r\n            TripPrevStatus: this.fb.control(x.TripPrevStatus),\r\n            DeliveryGroupStatus: this.fb.control(x.DeliveryGroupStatus),\r\n            DeliveryGroupPrevStatus: this.fb.control(x.DeliveryGroupPrevStatus),\r\n            PickupLocationType: this.fb.control(x.PickupLocationType),\r\n            IsCommonPickup: this.fb.control(x.IsCommonPickup),\r\n            Terminal: this.getTerminalForm(x.Terminal, x.IsCommonPickup && x.PickupLocationType != 2),\r\n            BulkPlant: this.getBulkPlantForm(x.BulkPlant, x.IsCommonPickup && x.PickupLocationType == 2),\r\n            ShiftIndex: this.fb.control(x.ShiftIndex),\r\n            DriverRowIndex: this.fb.control(x.DriverRowIndex),\r\n            DriverColIndex: this.fb.control(x.DriverColIndex),\r\n            TrailerRowIndex: this.fb.control(x.TrailerRowIndex),\r\n            TrailerColIndex: this.fb.control(x.TrailerColIndex),\r\n            IsEditable: this.fb.control(x.IsEditable),\r\n            TimeStamp: this.fb.control(x.TimeStamp),\r\n            ShiftId: this.fb.control(x.ShiftId),\r\n            ShiftStartTime: this.fb.control(x.ShiftStartTime),\r\n            ShiftEndTime: this.fb.control(x.ShiftEndTime),\r\n            SlotPeriod: this.fb.control(x.SlotPeriod),\r\n            DriverScheduleMappingId: this.fb.control(x.DriverScheduleMappingId),\r\n            BadgeNo1: this.fb.control(x.BadgeNo1),\r\n            BadgeNo2: this.fb.control(x.BadgeNo2),\r\n            BadgeNo3: this.fb.control(x.BadgeNo3),\r\n            IsCommonBadge: this.fb.control(x.IsCommonBadge),\r\n            isRecurringSchedule: this.fb.control(x.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(x.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(x.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(x.ScheduleQuantityTypeText),\r\n            IsTrailerExists: this.fb.control(x.IsTrailerExists),\r\n            IsPreLoadInfo: this.fb.control(x.IsPreLoadInfo),\r\n            IsPreloadDisable: x.DeliveryRequests.filter(x => x.IsPreloadDisable == true).length > 0 ? this.fb.control(true) : this.fb.control(false),\r\n            IsDriverScheduleExists: (x.IsDriverScheduleExists),\r\n            IsDispatcherDragDropSequence: (x.IsDispatcherDragDropSequence),\r\n            IsDispatcherDragDropSequenceModified: (x.IsDispatcherDragDropSequenceModified),\r\n        });\r\n        return _tForm;\r\n    }\r\n\r\n    public getDriversFormArray(drivers: DriverAdditionalDetailModel[]): FormArray {\r\n        var _dArray = this.fb.array([]);\r\n        drivers.forEach(x => {\r\n            _dArray.push(this.fb.group({\r\n                Id: this.fb.control(x.Id),\r\n                Shifts: this.fb.control(x.Shifts),\r\n                Name: this.fb.control(x.Name),\r\n                IsFilldCompatible: this.fb.control(x.IsFilldCompatible)\r\n            }));\r\n        });\r\n        return _dArray;\r\n    }\r\n\r\n    public getTrailersFormArray(Trailers: TrailerViewModel[]): FormArray {\r\n        var _tArray = this.fb.array([]);\r\n        Trailers.forEach(x => {\r\n            _tArray.push(this.fb.group({\r\n                Id: this.fb.control(x.Id || ''),\r\n                TrailerId: this.fb.control(x.TrailerId || ''),\r\n                StartTime: this.fb.control(x.StartTime || ''),\r\n                EndTime: this.fb.control(x.EndTime || ''),\r\n                Compartments: this.fb.control(x.Compartments || ''),\r\n                TrailerType: this.fb.control(x.TrailerType)\r\n            }));\r\n        });\r\n        return _tArray;\r\n    }\r\n\r\n    public getDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[], isCommonPickup: boolean, IsDispatcherDragDropSequence: boolean = false, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormArray {\r\n        delReqs = sortArrayTwice(delReqs, 'JobId', 'ProductSequence');\r\n        if (IsDispatcherDragDropSequence) {\r\n            delReqs = sortByKeyAsc(delReqs, 'DispatcherDragDropSequence');\r\n        }\r\n        let drs = [] as DeliveryRequestViewModel[];\r\n        delReqs.forEach(x => {\r\n            if (!x.IsBlendedRequest) {\r\n                drs.push(x);\r\n            }\r\n            else if (!drs.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                var blendDrs = delReqs.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => b.IsAdditive && b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n            }\r\n        });\r\n        var _drArray = this.fb.array([], Validators.required);\r\n        drs.forEach(x => {\r\n            var _form = this.getDeliveryRequestForm(x, isCommonPickup, isShiftTrailerChange, sourceTrip);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n    public getDispatcherDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[], isCommonPickup: boolean, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormArray {\r\n\r\n        let drs = [] as DeliveryRequestViewModel[];\r\n        delReqs.forEach(x => {\r\n            if (!x.IsBlendedRequest) {\r\n                drs.push(x);\r\n            }\r\n            else if (!drs.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                var blendDrs = delReqs.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => b.IsAdditive).forEach(p => { drs.push(p); });\r\n            }\r\n        });\r\n        var _drArray = this.fb.array([], Validators.required);\r\n        drs.forEach(x => {\r\n            var _form = this.getDispatcherDeliveryRequestForm(x, isCommonPickup, isShiftTrailerChange, sourceTrip);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n    GetAllLoadsDR(trips: FormArray) {\r\n        var _deliveryRequests = [];\r\n        if (trips) {\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var trip = trips.controls[i] as FormGroup;\r\n                var deliveryRequests = trip.controls[\"DeliveryRequests\"].value;\r\n                if (deliveryRequests) {\r\n                    for (var j = 0; j < deliveryRequests.length; j++) {\r\n                        var deliveryRequest = deliveryRequests[j];\r\n                        if (deliveryRequest) {\r\n                            _deliveryRequests.push(deliveryRequest);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _deliveryRequests;\r\n    }\r\n\r\n    public getDeliveryRequestForm(delReq: DeliveryRequestViewModel, isCommonPickup: boolean, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormGroup {\r\n        var isTerminalPickup = false;\r\n        var isBulkplantPickup = false;\r\n        //dragged from left panel\r\n        if (!sourceTrip) {\r\n            isTerminalPickup = !isCommonPickup && delReq.PickupLocationType != 2;\r\n            isBulkplantPickup = !isCommonPickup && delReq.PickupLocationType == 2;\r\n        }\r\n        else { //dragged from a load\r\n            var tripFromPickupLocationType, pickupLocation;\r\n            if (sourceTrip.controls['IsCommonPickup'].value == true) {\r\n                tripFromPickupLocationType = sourceTrip.controls['PickupLocationType'].value;\r\n                if (tripFromPickupLocationType == 2) {\r\n                    isBulkplantPickup = true;\r\n                    pickupLocation = sourceTrip.controls['BulkPlant'].value;\r\n                    delReq.BulkPlant = pickupLocation;\r\n                    delReq.PickupLocationType = 2;\r\n                }\r\n                else {\r\n                    isTerminalPickup = true;\r\n                    pickupLocation = sourceTrip.controls['Terminal'].value;\r\n                    delReq.Terminal = pickupLocation;\r\n                    delReq.PickupLocationType = 1;\r\n                }\r\n            }\r\n            else {\r\n                isBulkplantPickup = delReq.PickupLocationType == 2;\r\n                isTerminalPickup = delReq.PickupLocationType != 2;\r\n            }\r\n        }\r\n        let quantityValidators = [];\r\n        if (delReq.ScheduleQuantityType == 1 || delReq.ScheduleQuantityType == 0) {\r\n            quantityValidators = [Validators.required, Validators.min(0.00001), Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)];\r\n            if (delReq.TankMaxFill > 0 && !delReq.IsMaxFillAllowed) {\r\n                quantityValidators.push(Validators.max(delReq.TankMaxFill));\r\n            }\r\n        }\r\n        let orderIdValidators = [];\r\n        if (!delReq.IsTBD) {\r\n            orderIdValidators.push(Validators.required);\r\n        }\r\n        var _drForm = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            JobId: this.fb.control(''),\r\n            JobAddress: this.fb.control(''),\r\n            JobCity: this.fb.control(''),\r\n            JobName: this.fb.control(''),\r\n            ProductType: this.fb.control(''),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            SiteId: this.fb.control(''),\r\n            RequiredQuantity: this.fb.control('', quantityValidators),\r\n            Priority: this.fb.control(''),\r\n            TankId: this.fb.control(''),\r\n            TankMaxFill: this.fb.control(0),\r\n            IsMaxFillAllowed: this.fb.control(delReq.IsMaxFillAllowed),\r\n            //IsReAssignToCarrier: this.fb.control(delReq.IsReAssignToCarrier),\r\n            StorageId: this.fb.control(''),\r\n            AssignedToCompanyId: this.fb.control(null),\r\n            CreatedByCompanyId: this.fb.control(null),\r\n            SupplierCompanyId: this.fb.control(null),\r\n            Status: this.fb.control(0),\r\n            PreviousStatus: this.fb.control(0),\r\n            ScheduleStatus: this.fb.control(0),\r\n            SchedulePreviousStatus: this.fb.control(0),\r\n            OrderId: this.fb.control('', orderIdValidators),\r\n            CreatedByRegionId: this.fb.control(''),\r\n            AssignedToRegionId: this.fb.control(''),\r\n            PickupLocationType: this.fb.control(0),\r\n            Sap_OrderNo: this.fb.control(delReq.Sap_OrderNo),\r\n            UniqueOrderNo: this.fb.control(delReq.UniqueOrderNo),\r\n            Terminal: this.getTerminalForm(delReq.Terminal, isTerminalPickup),\r\n            BulkPlant: this.getBulkPlantForm(delReq.BulkPlant, isBulkplantPickup),\r\n            UoM: this.fb.control(''),\r\n            ParentId: this.fb.control(null),\r\n            DeliveryGroupId: this.fb.control(null),\r\n            DeliveryScheduleId: this.fb.control(null),\r\n            TrackableScheduleId: this.fb.control(null),\r\n            CustomerCompany: this.fb.control(''),\r\n            TrackScheduleEnrouteStatus: this.fb.control(null),\r\n            ProductSequence: this.fb.control(delReq.ProductSequence),\r\n            TrackScheduleStatus: this.fb.control(null),\r\n            TrackScheduleStatusName: this.fb.control(null),\r\n            StatusClassId: this.fb.control(null),\r\n            IsNotCompatible: this.fb.control(false),\r\n            IsBlinkDR: this.fb.control(false),\r\n            IsAutoCreatedDR: this.fb.control(false),\r\n            BadgeNo1: this.fb.control(''),\r\n            BadgeNo2: this.fb.control(''),\r\n            BadgeNo3: this.fb.control(''),\r\n            IsCommonBadge: this.fb.control(true),\r\n            SourceTripId: this.fb.control(null),\r\n            DispactherNote: this.fb.control(''),\r\n            Notes: this.fb.control(delReq.Notes),\r\n            isRecurringSchedule: this.fb.control(delReq.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(delReq.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            RouteInfo: this.fb.control(null),\r\n            CarrierStatus: this.fb.control(0),\r\n            DeliveryRequestFor: this.fb.control(delReq.DeliveryRequestFor),\r\n            Compartments: isShiftTrailerChange == 0 ? this.getCompartments(delReq.Compartments) : this.fb.array([]),\r\n            IsFilldInvoke: this.fb.control(false),\r\n            TruckLoadType: this.fb.control(''),\r\n            IsRetainFuelLoaded: this.fb.control(false),\r\n            DelReqSource: this.fb.control(delReq.DelReqSource),\r\n            IsPreloadDisable: this.fb.control(delReq.IsPreloadDisable),\r\n            IsSpiltDRIconVisible: this.fb.control(delReq.IsSpiltDRIconVisible),\r\n            GroupParentDRId: this.fb.control(delReq.GroupParentDRId),\r\n            GroupChildDRs: this.fb.control(delReq.GroupChildDRs),\r\n            DeliveryWindow: this.fb.control(delReq.DeliveryWindow),\r\n            IsAcceptNightDeliveries: this.fb.control(delReq.IsAcceptNightDeliveries),\r\n            TrailerTypes: this.fb.control(delReq.TrailerTypes),\r\n            LoadQueueAttributes: this.fb.control(delReq.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(delReq.DRQueueAttributes),\r\n            HoursToCoverDistance: this.fb.control(delReq.HoursToCoverDistance),\r\n            CustomerBrandId: this.fb.control(delReq.CustomerBrandId),\r\n            IsJobFilter: this.fb.control(true),\r\n            IsSelectedForAssignment: this.fb.control(false),\r\n            IsTBD: this.fb.control(delReq.IsTBD),\r\n            TBDGroupId: this.fb.control(delReq.TBDGroupId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            FuelType: this.fb.control(delReq.FuelType),\r\n            TBDLocations: this.fb.control(delReq.TBDLocations),\r\n            DeliveryDateStartTime: this.fb.control(delReq.DeliveryDateStartTime),\r\n            Vessel: this.fb.control(delReq.Vessel),\r\n            Berth: this.fb.control(delReq.Berth),\r\n            IsMarine: this.fb.control(delReq.IsMarine),\r\n            //BLENDED DR\r\n            IsBlendedRequest: this.fb.control(delReq.IsBlendedRequest || false),\r\n            IsCommonPickupForBlend: this.fb.control(delReq.IsCommonPickupForBlend || false),\r\n            BlendedGroupId: this.fb.control(delReq.BlendedGroupId || null),\r\n            BlendParentProductTypeId: this.fb.control(delReq.BlendParentProductTypeId),\r\n            IsBlendedDrParent: this.fb.control(delReq.IsBlendedDrParent || false),\r\n            TotalBlendedQuantity: this.fb.control(delReq.TotalBlendedQuantity),\r\n            BlendDrScheduleStatus: this.fb.control(delReq.BlendDrScheduleStatus),\r\n            BlendedProductName: this.fb.control(delReq.BlendedProductName || null),\r\n            IsAdditive: this.fb.control(delReq.IsAdditive),\r\n            AdditiveProductName: this.fb.control(delReq.AdditiveProductName || null),\r\n            SelectedDate: this.fb.control(delReq.SelectedDate),\r\n            IsFutureDR: this.fb.control(delReq.IsFutureDR),\r\n            IsCalendarView: this.fb.control(delReq.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(delReq.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(delReq.DispatcherDragDropSequence),\r\n            DeliveryLevelPO: this.fb.control(delReq.DeliveryLevelPO),\r\n            IndicativePrice: this.fb.control(delReq.IndicativePrice),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(delReq.ScheduleEndTime),\r\n        });\r\n        if (delReq != null && delReq != undefined) {\r\n            if (delReq.PreLoadedFor) {\r\n                _drForm.addControl('PreLoadedFor', this.fb.control(delReq.PreLoadedFor));\r\n            }\r\n            if (delReq.PostLoadedFor) {\r\n                _drForm.addControl('PostLoadedFor', this.fb.control(delReq.PostLoadedFor));\r\n            }\r\n            if (delReq.PreLoadInfo) {\r\n                _drForm.addControl('PreLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PreLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PreLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PreLoadInfo.TripIndex,\r\n                    DrId: delReq.PreLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.PostLoadInfo) {\r\n                _drForm.addControl('PostLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PostLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PostLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PostLoadInfo.TripIndex,\r\n                    DrId: delReq.PostLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.BulkPlant == null) {\r\n                delReq.BulkPlant = new DropAddressModel();\r\n            }\r\n            if (delReq.Terminal == null) {\r\n                delReq.Terminal = new DropdownItem();\r\n            }\r\n            _drForm.patchValue(delReq);\r\n        }\r\n        return _drForm;\r\n    }\r\n    public getDispatcherDeliveryRequestForm(delReq: DeliveryRequestViewModel, isCommonPickup: boolean, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormGroup {\r\n        var isTerminalPickup = false;\r\n        var isBulkplantPickup = false;\r\n        //dragged from left panel\r\n        if (!sourceTrip) {\r\n            isTerminalPickup = !isCommonPickup && delReq.PickupLocationType != 2;\r\n            isBulkplantPickup = !isCommonPickup && delReq.PickupLocationType == 2;\r\n        }\r\n        else { //dragged from a load\r\n            var tripFromPickupLocationType, pickupLocation;\r\n            if (sourceTrip.controls['IsCommonPickup'].value == true) {\r\n                tripFromPickupLocationType = sourceTrip.controls['PickupLocationType'].value;\r\n                if (tripFromPickupLocationType == 2) {\r\n                    isBulkplantPickup = true;\r\n                    pickupLocation = sourceTrip.controls['BulkPlant'].value;\r\n                    delReq.BulkPlant = pickupLocation;\r\n                    delReq.PickupLocationType = 2;\r\n                }\r\n                else {\r\n                    isTerminalPickup = true;\r\n                    pickupLocation = sourceTrip.controls['Terminal'].value;\r\n                    delReq.Terminal = pickupLocation;\r\n                    delReq.PickupLocationType = 1;\r\n                }\r\n            }\r\n            else {\r\n                isBulkplantPickup = delReq.PickupLocationType == 2;\r\n                isTerminalPickup = delReq.PickupLocationType != 2;\r\n            }\r\n        }\r\n        let quantityValidators = [];\r\n        if (delReq.ScheduleQuantityType == 1 || delReq.ScheduleQuantityType == 0) {\r\n            quantityValidators = [Validators.required, Validators.min(0.00001), Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)];\r\n            if (delReq.TankMaxFill > 0 && !delReq.IsMaxFillAllowed) {\r\n                quantityValidators.push(Validators.max(delReq.TankMaxFill));\r\n            }\r\n        }\r\n        let orderIdValidators = [];\r\n        if (!delReq.IsTBD) {\r\n            orderIdValidators.push(Validators.required);\r\n        }\r\n        var _drForm = this.fb.group({\r\n            Id: this.fb.control(delReq.Id),\r\n            JobId: this.fb.control(delReq.JobId),\r\n            JobAddress: this.fb.control(delReq.JobAddress),\r\n            JobCity: this.fb.control(delReq.JobCity),\r\n            JobName: this.fb.control(delReq.JobName),\r\n            ProductType: this.fb.control(delReq.ProductType),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            SiteId: this.fb.control(delReq.SiteId),\r\n            RequiredQuantity: this.fb.control('', quantityValidators),\r\n            Priority: this.fb.control(delReq.Priority),\r\n            TankId: this.fb.control(delReq.TankId),\r\n            TankMaxFill: this.fb.control(delReq.TankMaxFill),\r\n            IsMaxFillAllowed: this.fb.control(delReq.IsMaxFillAllowed),\r\n            //IsReAssignToCarrier: this.fb.control(delReq.IsReAssignToCarrier),\r\n            StorageId: this.fb.control(delReq.StorageId),\r\n            AssignedToCompanyId: this.fb.control(delReq.AssignedToCompanyId),\r\n            CreatedByCompanyId: this.fb.control(delReq.CreatedByCompanyId),\r\n            SupplierCompanyId: this.fb.control(delReq.SupplierCompanyId),\r\n            Status: this.fb.control(delReq.Status),\r\n            PreviousStatus: this.fb.control(delReq.PreviousStatus),\r\n            ScheduleStatus: this.fb.control(delReq.ScheduleStatus),\r\n            SchedulePreviousStatus: this.fb.control(delReq.SchedulePreviousStatus),\r\n            OrderId: this.fb.control(delReq.OrderId, orderIdValidators),\r\n            CreatedByRegionId: this.fb.control(delReq.CreatedByRegionId),\r\n            AssignedToRegionId: this.fb.control(delReq.AssignedToRegionId),\r\n            PickupLocationType: this.fb.control(delReq.PickupLocationType),\r\n            Terminal: this.getTerminalForm(delReq.Terminal, isTerminalPickup),\r\n            BulkPlant: this.getBulkPlantForm(delReq.BulkPlant, isBulkplantPickup),\r\n            UoM: this.fb.control(delReq.UoM),\r\n            ParentId: this.fb.control(delReq.ParentId),\r\n            DeliveryGroupId: this.fb.control(delReq.DeliveryGroupId),\r\n            DeliveryScheduleId: this.fb.control(delReq.DeliveryScheduleId),\r\n            TrackableScheduleId: this.fb.control(delReq.TrackableScheduleId),\r\n            CustomerCompany: this.fb.control(delReq.CustomerCompany),\r\n            TrackScheduleEnrouteStatus: this.fb.control(delReq.TrackScheduleEnrouteStatus),\r\n            ProductSequence: this.fb.control(delReq.ProductSequence),\r\n            TrackScheduleStatus: this.fb.control(delReq.TrackScheduleStatus),\r\n            TrackScheduleStatusName: this.fb.control(delReq.TrackScheduleStatusName),\r\n            StatusClassId: this.fb.control(delReq.StatusClassId),\r\n            IsNotCompatible: this.fb.control(delReq.IsNotCompatible),\r\n            IsBlinkDR: this.fb.control(false),\r\n            IsAutoCreatedDR: this.fb.control(delReq.IsAutoCreatedDR),\r\n            BadgeNo1: this.fb.control(delReq.BadgeNo1),\r\n            BadgeNo2: this.fb.control(delReq.BadgeNo2),\r\n            BadgeNo3: this.fb.control(delReq.BadgeNo3),\r\n            IsCommonBadge: this.fb.control(delReq.IsCommonBadge),\r\n            SourceTripId: this.fb.control(delReq.SourceTripId),\r\n            DispactherNote: this.fb.control(delReq.DispactherNote),\r\n            Notes: this.fb.control(delReq.Notes),\r\n            isRecurringSchedule: this.fb.control(delReq.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(delReq.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            RouteInfo: this.fb.control(null),\r\n            CarrierStatus: this.fb.control(delReq.CarrierStatus),\r\n            DeliveryRequestFor: this.fb.control(delReq.DeliveryRequestFor),\r\n            Compartments: isShiftTrailerChange == 0 ? this.getCompartments(delReq.Compartments) : this.fb.array([]),\r\n            IsFilldInvoke: this.fb.control(false),\r\n            TruckLoadType: this.fb.control(''),\r\n            IsRetainFuelLoaded: this.fb.control(false),\r\n            DelReqSource: this.fb.control(delReq.DelReqSource),\r\n            IsPreloadDisable: this.fb.control(delReq.IsPreloadDisable),\r\n            IsSpiltDRIconVisible: this.fb.control(delReq.IsSpiltDRIconVisible),\r\n            GroupParentDRId: this.fb.control(delReq.GroupParentDRId),\r\n            GroupChildDRs: this.fb.control(delReq.GroupChildDRs),\r\n            DeliveryWindow: this.fb.control(delReq.DeliveryWindow),\r\n            IsAcceptNightDeliveries: this.fb.control(delReq.IsAcceptNightDeliveries),\r\n            TrailerTypes: this.fb.control(delReq.TrailerTypes),\r\n            LoadQueueAttributes: this.fb.control(delReq.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(delReq.DRQueueAttributes),\r\n            HoursToCoverDistance: this.fb.control(delReq.HoursToCoverDistance),\r\n            CustomerBrandId: this.fb.control(delReq.CustomerBrandId),\r\n            IsJobFilter: this.fb.control(true),\r\n            IsSelectedForAssignment: this.fb.control(false),\r\n            IsTBD: this.fb.control(delReq.IsTBD),\r\n            TBDGroupId: this.fb.control(delReq.TBDGroupId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            FuelType: this.fb.control(delReq.FuelType),\r\n            TBDLocations: this.fb.control(delReq.TBDLocations),\r\n            DeliveryDateStartTime: this.fb.control(delReq.DeliveryDateStartTime),\r\n            Vessel: this.fb.control(delReq.Vessel),\r\n            Berth: this.fb.control(delReq.Berth),\r\n            IsMarine: this.fb.control(delReq.IsMarine),\r\n            //BLENDED DR\r\n            IsBlendedRequest: this.fb.control(delReq.IsBlendedRequest || false),\r\n            IsCommonPickupForBlend: this.fb.control(delReq.IsCommonPickupForBlend || false),\r\n            BlendedGroupId: this.fb.control(delReq.BlendedGroupId || null),\r\n            BlendParentProductTypeId: this.fb.control(delReq.BlendParentProductTypeId),\r\n            IsBlendedDrParent: this.fb.control(delReq.IsBlendedDrParent || false),\r\n            TotalBlendedQuantity: this.fb.control(delReq.TotalBlendedQuantity),\r\n            BlendDrScheduleStatus: this.fb.control(delReq.BlendDrScheduleStatus),\r\n            BlendedProductName: this.fb.control(delReq.BlendedProductName || null),\r\n            IsAdditive: this.fb.control(delReq.IsAdditive),\r\n            AdditiveProductName: this.fb.control(delReq.AdditiveProductName || null),\r\n            SelectedDate: this.fb.control(delReq.SelectedDate),\r\n            IsFutureDR: this.fb.control(delReq.IsFutureDR),\r\n            IsCalendarView: this.fb.control(delReq.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(delReq.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(delReq.DispatcherDragDropSequence),\r\n            DeliveryLevelPO: this.fb.control(delReq.DeliveryLevelPO),\r\n            IndicativePrice: this.fb.control(delReq.IndicativePrice),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(delReq.ScheduleEndTime),\r\n        });\r\n        if (delReq != null && delReq != undefined) {\r\n            if (delReq.PreLoadedFor) {\r\n                _drForm.addControl('PreLoadedFor', this.fb.control(delReq.PreLoadedFor));\r\n            }\r\n            if (delReq.PostLoadedFor) {\r\n                _drForm.addControl('PostLoadedFor', this.fb.control(delReq.PostLoadedFor));\r\n            }\r\n            if (delReq.PreLoadInfo) {\r\n                _drForm.addControl('PreLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PreLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PreLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PreLoadInfo.TripIndex,\r\n                    DrId: delReq.PreLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.PostLoadInfo) {\r\n                _drForm.addControl('PostLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PostLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PostLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PostLoadInfo.TripIndex,\r\n                    DrId: delReq.PostLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.BulkPlant == null) {\r\n                delReq.BulkPlant = new DropAddressModel();\r\n            }\r\n            if (delReq.Terminal == null) {\r\n                delReq.Terminal = new DropdownItem();\r\n            }\r\n            _drForm.patchValue(delReq);\r\n        }\r\n        return _drForm;\r\n    }\r\n    getDeliveryRequestFormNew(delReq: DeliveryRequestViewModel): FormGroup {\r\n        let _drForm = this.fb.group({\r\n            Id: this.fb.control(delReq.Id),\r\n            JobId: this.fb.control(delReq.JobId),\r\n            JobAddress: this.fb.control(delReq.JobAddress),\r\n            JobCity: this.fb.control(delReq.JobCity),\r\n            JobName: this.fb.control(delReq.JobName),\r\n            ProductType: this.fb.control(delReq.ProductType),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            SiteId: this.fb.control(delReq.SiteId),\r\n            RequiredQuantity: this.fb.control(delReq.RequiredQuantity),\r\n            Priority: this.fb.control(delReq.Priority),\r\n            AssignedToCompanyId: this.fb.control(delReq.AssignedToCompanyId),\r\n            CreatedByCompanyId: this.fb.control(delReq.CreatedByCompanyId),\r\n            SupplierCompanyId: this.fb.control(delReq.SupplierCompanyId),\r\n            Status: this.fb.control(delReq.Status),\r\n            CreatedByRegionId: this.fb.control(delReq.CreatedByRegionId),\r\n            AssignedToRegionId: this.fb.control(delReq.AssignedToRegionId),\r\n            UoM: this.fb.control(delReq.UoM),\r\n            OrderId: this.fb.control(delReq.OrderId),\r\n            ParentId: this.fb.control(delReq.ParentId),\r\n            CustomerCompany: this.fb.control(delReq.CustomerCompany),\r\n            TankId: this.fb.control(delReq.TankId),\r\n            StorageId: this.fb.control(delReq.StorageId),\r\n            TankMaxFill: this.fb.control(delReq.TankMaxFill),\r\n            IsMaxFillAllowed: this.fb.control(delReq.IsMaxFillAllowed),\r\n            IsAutoCreatedDR: this.fb.control(delReq.IsAutoCreatedDR),\r\n            BadgeNo1: this.fb.control(delReq.BadgeNo1),\r\n            BadgeNo2: this.fb.control(delReq.BadgeNo2),\r\n            BadgeNo3: this.fb.control(delReq.BadgeNo3),\r\n            IsCommonBadge: this.fb.control(delReq.IsCommonBadge),\r\n            Notes: this.fb.control(delReq.Notes),\r\n            DispactherNote: this.fb.control(delReq.DispactherNote),\r\n            isRecurringSchedule: this.fb.control(delReq.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(delReq.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            RecurringScheduleInfo: this.fb.control(delReq.RecurringScheduleInfo),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            RouteInfo: this.fb.control(delReq.RouteInfo),\r\n            CarrierStatus: this.fb.control(delReq.CarrierStatus),\r\n            DeliveryRequestFor: this.fb.control(delReq.DeliveryRequestFor),\r\n            DeliveryWindow: this.fb.control(delReq.DeliveryWindow),\r\n            DelReqSource: this.fb.control(delReq.DelReqSource),\r\n            IsSpiltDRIconVisible: this.fb.control(delReq.IsSpiltDRIconVisible),\r\n            GroupParentDRId: this.fb.control(delReq.GroupParentDRId),\r\n            ProductSequence: this.fb.control(delReq.ProductSequence),\r\n            Terminal: this.getTerminalFormNew(delReq.Terminal),\r\n            Bulkplant: this.getBulkPlantNew(delReq.BulkPlant),\r\n            IsBrokered: this.fb.control(delReq.IsBrokered),\r\n            IsAcceptNightDeliveries: this.fb.control(delReq.IsAcceptNightDeliveries),\r\n            TrailerTypes: this.fb.control(delReq.TrailerTypes),\r\n            HoursToCoverDistance: this.fb.control(delReq.HoursToCoverDistance),\r\n            LoadQueueAttributes: this.fb.control(delReq.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(delReq.DRQueueAttributes),\r\n            CustomerBrandId: this.fb.control(delReq.CustomerBrandId),\r\n            IsSelectedForAssignment: this.fb.control(false),\r\n            IsTBD: this.fb.control(delReq.IsTBD),\r\n            TBDGroupId: this.fb.control(delReq.TBDGroupId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            FuelType: this.fb.control(delReq.FuelType),\r\n            OrderType: this.fb.control(delReq.OrderType),\r\n            DeliveryDateStartTime: this.fb.control(delReq.DeliveryDateStartTime),\r\n            Vessel: this.fb.control(delReq.Vessel),\r\n            Berth: this.fb.control(delReq.Berth),\r\n            IsMarine: this.fb.control(delReq.IsMarine),\r\n            //BLENDED DR\r\n            IsAdditive: this.fb.control(delReq.IsAdditive || false),\r\n            IsBlendedRequest: this.fb.control(delReq.IsBlendedRequest || false),\r\n            IsCommonPickupForBlend: this.fb.control(delReq.IsCommonPickupForBlend || false),\r\n            BlendedGroupId: this.fb.control(delReq.BlendedGroupId || null),\r\n            BlendParentProductTypeId: this.fb.control(delReq.BlendParentProductTypeId),\r\n            BlendDrScheduleStatus: this.fb.control(delReq.BlendDrScheduleStatus),\r\n            BlendedProductName: this.fb.control(delReq.BlendedProductName || null),\r\n            AdditiveProductName: this.fb.control(delReq.AdditiveProductName || null),\r\n            IsBlendedDrParent: this.fb.control(delReq.IsBlendedDrParent || false),\r\n            TotalBlendedQuantity: this.fb.control(delReq.TotalBlendedQuantity),\r\n            SelectedDate: this.fb.control(delReq.SelectedDate),\r\n            IsFutureDR: this.fb.control(delReq.IsFutureDR),\r\n            IsCalendarView: this.fb.control(delReq.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(delReq.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(delReq.DispatcherDragDropSequence),\r\n            DeliveryLevelPO: this.fb.control(delReq.DeliveryLevelPO),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime : this.fb.control(delReq.ScheduleEndTime),\r\n            IndicativePrice: this.fb.control(delReq.IndicativePrice),\r\n        });\r\n        return _drForm;\r\n    }\r\n\r\n    private getCompartments(compartments: CompartmentInfo[]): FormArray {\r\n        let _cArray = this.fb.array([]);\r\n        compartments.forEach(x => {\r\n            _cArray.push(this.getCompartmentsFormGroupForDR(x));\r\n        });\r\n        return _cArray;\r\n    }\r\n\r\n    public getCompTerminalForm(terminal: DropdownItem): FormGroup {\r\n        var _tform = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            Name: this.fb.control('')\r\n        });\r\n        if (terminal) {\r\n            _tform.patchValue(terminal);\r\n        }\r\n        return _tform;\r\n    }\r\n\r\n    public getTerminalForm(terminal: DropdownItem, isTerminalPickup: boolean, isDemandForm: boolean = false): FormGroup {\r\n        var _tform = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            // Name: this.fb.control('', (isTerminalPickup && !isDemandForm ? Validators.required : null))\r\n            Name: this.fb.control('')\r\n        });\r\n        // SelectedTerminal : this.fb.control('')\r\n        if (isTerminalPickup && terminal) {\r\n            _tform.patchValue(terminal);\r\n        }\r\n        return _tform;\r\n    }\r\n\r\n    public getDriverForm(driver: any): FormGroup {\r\n        return this.fb.group({\r\n            Id: this.fb.control(driver.Id),\r\n            Name: this.fb.control(driver.Name),\r\n            Shifts: this.fb.control(driver.Shifts),\r\n            IsFilldCompatible: this.fb.control(driver.IsFilldCompatible)\r\n        });\r\n    }\r\n\r\n    public getAssignedTrailerForm(x: TrailerViewModel): FormGroup {\r\n        return this.fb.group({\r\n            Id: this.fb.control(x.Id),\r\n            TrailerId: this.fb.control(x.TrailerId),\r\n            StartTime: this.fb.control(x.StartTime),\r\n            EndTime: this.fb.control(x.EndTime),\r\n            Compartments: this.fb.control(x.Compartments),\r\n            TrailerType: this.fb.control(x.TrailerType),\r\n            IsFilldCompatible: this.fb.control(x.IsFilldCompatible)\r\n        });\r\n    }\r\n\r\n    public getDriverTrailerForm() {\r\n        var _dtForm = this.fb.group({\r\n            Driver: this.fb.control(null, [Validators.required]),\r\n            Trailers: this.fb.control([]),\r\n            Index1: this.fb.control(0),\r\n            Index2: this.fb.control(0),\r\n            StartTime: this.fb.control(''),\r\n            EndTime: this.fb.control(''),\r\n            Compartments: this.fb.control(''),\r\n            TrailerType: this.fb.control(''),\r\n            IsFilldCompatible: this.fb.control(false),\r\n            IsIncludeAllRegionDriver: this.fb.control(false)\r\n        });\r\n        return _dtForm;\r\n    }\r\n\r\n    public getCompBulkPlantForm(bulkPlant: DropAddressModel) {\r\n        var _bform = this.fb.group({\r\n            Address: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            State: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            Country: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            CountryGroup: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            ZipCode: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            SiteName: this.fb.control(''),\r\n            SiteId: this.fb.control('')\r\n        });\r\n        if (bulkPlant) {\r\n            _bform.patchValue(bulkPlant);\r\n        }\r\n        return _bform;\r\n    }\r\n\r\n    public getBulkPlantForm(bulkPlant: DropAddressModel, isLocationPickup: boolean, isDemandForm: boolean = false) {\r\n        var _bform = this.fb.group({\r\n\r\n            Address: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            State: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            Country: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            CountryGroup: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            ZipCode: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            SiteName: this.fb.control(''),\r\n            SiteId: this.fb.control('')\r\n        });\r\n        if (isLocationPickup && bulkPlant) {\r\n            _bform.patchValue(bulkPlant);\r\n        }\r\n        return _bform;\r\n    }\r\n\r\n    public getTrailerTrip(startTime: Date, slotPeriod: number): TripModel {\r\n        if (slotPeriod <= 0) { slotPeriod = 3; }\r\n        let trip = new TripModel();\r\n        trip.StartDate = moment(startTime).format('MM/DD/YYYY');\r\n        trip.StartTime = moment(startTime).format('hh:mm A');\r\n        let endTime = moment(startTime).add(slotPeriod, 'hours').toDate();\r\n        trip.EndTime = moment(endTime).format('hh:mm A');\r\n        trip.IsEditable = true;\r\n        trip.IsPreloadDisable = false;\r\n        return trip;\r\n    }\r\n\r\n    public getLoadForm(): FormGroup {\r\n        return this.fb.group({\r\n            JobId: this.fb.control(null),\r\n            RegionId: this.fb.control(null),\r\n            OrderList: this.fb.control([]),\r\n            Demands: this.fb.array([])\r\n        });\r\n    }\r\n\r\n    public initCreateLoadFormArray(formArray: FormArray, demandModels: DemandModel[], regionId: string): void {\r\n        formArray.clear();\r\n        demandModels.forEach(x => {\r\n            formArray.push(this.getDemandForm(x, regionId));\r\n        });\r\n    }\r\n\r\n    private getDemandForm(demandModel: DemandModel, regionId: string): FormGroup {\r\n        let quantityValidators = [];\r\n        if (demandModel.ScheduleQuantityType == 1 || demandModel.ScheduleQuantityType == 0) {\r\n            quantityValidators = [Validators.required, Validators.min(0.00001), Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)];\r\n            //if (demandModel.TankMaxFill > 0) {\r\n            //    quantityValidators.push(Validators.max(demandModel.TankMaxFill));\r\n            //}\r\n        }\r\n        return this.fb.group({\r\n            Id: this.fb.control(demandModel.Id),\r\n            SiteId: this.fb.control(demandModel.SiteId),\r\n            JobId: this.fb.control(demandModel.JobId),\r\n            JobName: this.fb.control(demandModel.JobName),\r\n            OrderId: this.fb.control(demandModel.OrderId),\r\n            TankId: this.fb.control(demandModel.TankId),\r\n            StorageId: this.fb.control(demandModel.StorageId),\r\n            RequiredQuantity: this.fb.control(demandModel.RequiredQuantity || '', quantityValidators),\r\n            Priority: this.fb.control(demandModel.Priority),\r\n            CreatedByRegionId: this.fb.control(regionId),\r\n            CustomerCompany: this.fb.control(demandModel.BuyerCompanyName),\r\n            //CurrentThreshold: this.fb.control(demandModel.cu),\r\n            TankMaxFill: this.fb.control(demandModel.TankMaxFill),\r\n            IsMaxFillAllowed: this.fb.control(demandModel.IsMaxFillAllowed),\r\n            //IsReAssignToCarrier: this.fb.control(demandModel.IsReAssignToCarrier),\r\n            TankMinFill: this.fb.control(demandModel.TankMinFill),\r\n            TankCapacity: this.fb.control(demandModel.TankCapacity),\r\n            TankName: this.fb.control(demandModel.TankName),\r\n            ProductName: this.fb.control(demandModel.ProductName),\r\n            ProductType: this.fb.control(demandModel.ProductType),\r\n            Level: this.fb.control(demandModel.Level),\r\n            NetVolume: this.fb.control(demandModel.NetVolume),\r\n            Ullage: this.fb.control(demandModel.Ullage),\r\n            UoM: this.fb.control(demandModel.UoM),\r\n            IsDRExists: this.fb.control(demandModel.IsDRExists),\r\n            IsDRMissed: this.fb.control(demandModel.IsDRMissed),\r\n            isRecurringSchedule: this.fb.control(demandModel.isRecurringSchedule),\r\n            ScheduleQuantityType: this.fb.control(demandModel.ScheduleQuantityType || 1),\r\n            ScheduleQuantityTypeText: this.fb.control(demandModel.ScheduleQuantityTypeText || 'Quantity'),\r\n            DeliveryReqId: this.fb.control(demandModel.DeliveryReqId),\r\n            CarrierStatus: this.fb.control(demandModel.CarrierStatus),\r\n            DeliveryRequestFor: this.fb.control(demandModel.DeliveryRequestFor),\r\n            IsEndSupplier: this.fb.control(demandModel.IsEndSupplier),\r\n            IsDispatchRetained: this.fb.control(demandModel.IsDispatchRetained),\r\n            Notes: this.fb.control(demandModel.Notes),\r\n            IsRetainFuelLoaded: this.fb.control(false),\r\n            GroupParentDRId: this.fb.control(demandModel.GroupParentDRId),\r\n            ProductSequence: this.fb.control(demandModel.ProductSequence),\r\n            BadgeNo1: this.fb.control(demandModel.BadgeNo1 ? demandModel.BadgeNo1 : null),\r\n            BadgeNo2: this.fb.control(demandModel.BadgeNo2 ? demandModel.BadgeNo2 : null),\r\n            BadgeNo3: this.fb.control(demandModel.BadgeNo3 ? demandModel.BadgeNo3 : null),\r\n            PickupLocationType: this.fb.control(demandModel.PickupLocationType),\r\n            Terminal: this.getTerminalForm(demandModel.Terminal, demandModel.PickupLocationType != 2, true),\r\n            BulkPlant: this.getBulkPlantForm(demandModel.BulkPlant, demandModel.PickupLocationType == 2, true),\r\n            IsAcceptNightDeliveries: this.fb.control(demandModel.IsAcceptNightDeliveries),\r\n            LoadQueueAttributes: this.fb.control(demandModel.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(demandModel.DRQueueAttributes),\r\n            TrailerTypes: this.fb.control(demandModel.TrailerTypes),\r\n            HoursToCoverDistance: this.fb.control(demandModel.HoursToCoverDistance),\r\n            IsJobFilter: this.fb.control(true),\r\n            ScheduleStartTime: this.fb.control(demandModel.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(demandModel.ScheduleEndTime),\r\n        });\r\n    }\r\n\r\n    public getLoadInfoForm(data: LoadInfo): FormGroup {\r\n        return this.fb.group({\r\n            ShiftId: this.fb.control(data.ShiftId),\r\n            ScheduleIndex: this.fb.control(data.ScheduleIndex),\r\n            TripIndex: this.fb.control(data.TripIndex),\r\n            DrId: this.fb.control(data.DrId)\r\n        });\r\n    }\r\n\r\n    public getCompartmentViewForm(trips: TripModel[], firstTrailerId: string): FormGroup {\r\n        let tripsArray = this.fb.array([]);\r\n        for (var idx = 0; idx < trips.length; idx++) {\r\n            tripsArray.push(this.getCompartmentViewLoadFormGroup(trips[idx], firstTrailerId));\r\n        }\r\n        var _tForm = this.fb.group({\r\n            Trips: tripsArray\r\n        });\r\n        return _tForm;\r\n    }\r\n\r\n    private getCompartmentViewLoadFormGroup(x: TripModel, firstTrailerId: string): FormGroup {\r\n        let commonPickupName = x.IsCommonPickup ? (x.PickupLocationType == 2 ? x.BulkPlant.SiteName : x.Terminal.Name) : null;\r\n        var _tForm = this.fb.group({\r\n            DeliveryRequests: this.getCompartmentViewDRArray(x.DeliveryRequests, x.IsCommonPickup, commonPickupName, firstTrailerId),\r\n            ShiftIndex: this.fb.control(x.ShiftIndex),\r\n            DriverRowIndex: this.fb.control(x.DriverRowIndex),\r\n            DriverColIndex: this.fb.control(x.DriverColIndex),\r\n            IsEditable: this.fb.control(x.IsEditable),\r\n            StartTime: this.fb.control(x.StartTime)\r\n        });\r\n        return _tForm;\r\n    }\r\n\r\n    private getCompartmentViewDRArray(delReqs: DeliveryRequestViewModel[], isCommonPickup: boolean, commonPickupName: string, firstTrailerId: string): FormArray {\r\n        var _drArray = this.fb.array([]);\r\n        delReqs.forEach(x => {\r\n            var _form = this.getCompartmentViewDRForm(x, isCommonPickup, commonPickupName, firstTrailerId);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    private getCompartmentViewDRForm(delReq: DeliveryRequestViewModel, isCommonPickup: boolean, commonPickupName: string, firstTrailerId: string): FormGroup {\r\n        let pickupName = isCommonPickup ? commonPickupName : (delReq.PickupLocationType == 2 ? delReq.BulkPlant.SiteName : delReq.Terminal.Name);\r\n        let disabledControl = false;\r\n        if (delReq.TrackScheduleEnrouteStatus == 16 || delReq.TrackScheduleStatus == 7 || delReq.TrackScheduleStatus == 8 || delReq.TrackScheduleStatus == 9 || delReq.TrackScheduleEnrouteStatus == 21 || delReq.TrackScheduleStatus == 25) {\r\n            disabledControl = true;\r\n        }\r\n        else if (delReq.PreLoadInfo != null) {\r\n            disabledControl = true;\r\n        }\r\n        var _drForm = this.fb.group({\r\n            Id: this.fb.control(delReq.Id),\r\n            UoM: this.fb.control(delReq.UoM),\r\n            ProductType: this.fb.control(delReq.ProductType),\r\n            PickupName: this.fb.control(pickupName),\r\n            RequiredQuantity: this.fb.control(delReq.RequiredQuantity),\r\n            DrQuantity: this.fb.control(delReq.RequiredQuantity),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            disabledControl: this.fb.control(disabledControl),\r\n            Compartments: this.getCompartmentsFormArray(delReq, delReq.Compartments, firstTrailerId, disabledControl),\r\n            PickupLocationType: this.fb.control(0),\r\n            Terminal: this.getCompTerminalForm(delReq.Terminal),\r\n            BulkPlant: this.getCompBulkPlantForm(delReq.BulkPlant),\r\n            IsRetainFuelLoaded: this.fb.control(delReq.IsRetainFuelLoaded),\r\n            OrderId: this.fb.control(delReq.OrderId),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(delReq.ScheduleEndTime),\r\n            FuelType: this.fb.control(delReq.FuelType)\r\n        });\r\n        return _drForm;\r\n    }\r\n\r\n    private getCompartmentsFormArray(delReq: DeliveryRequestViewModel, compartments: CompartmentModel[], firstTrailerId: string, disabledControl: boolean): FormArray {\r\n        var _drArray = this.fb.array([]);\r\n        if (compartments.length == 0 && !disabledControl) {\r\n            let comp = new CompartmentInfo();\r\n            comp.TrailerId = firstTrailerId;\r\n            compartments.push(comp);\r\n        }\r\n        compartments.forEach(x => {\r\n            _drArray.push(this.getCompartmentsFormGroup(delReq, x, disabledControl));\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    public getCompartmentsFormGroup(delReq: DeliveryRequestViewModel, comp: CompartmentModel, disabledControl: boolean): FormGroup {\r\n        let quantityValidators = [];\r\n        if (delReq.ScheduleQuantityType <= 1) {\r\n            quantityValidators = [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.min(0.00000001), Validators.max(delReq.RequiredQuantity)];\r\n        }\r\n        if (disabledControl) {\r\n            return this.fb.group({\r\n                TrailerId: this.fb.control({ value: comp.TrailerId, disabled: disabledControl }),\r\n                CompartmentId: this.fb.control({ value: comp.CompartmentId, disabled: disabledControl }),\r\n                Quantity: this.fb.control(comp.Quantity)\r\n            });\r\n        }\r\n        else {\r\n            return this.fb.group({\r\n                TrailerId: this.fb.control(comp.TrailerId, [Validators.required]),\r\n                CompartmentId: this.fb.control(comp.CompartmentId, [Validators.required]),\r\n                Quantity: this.fb.control(comp.Quantity, quantityValidators)\r\n            });\r\n        }\r\n    }\r\n\r\n    public getCompartmentsFormGroupForDR(comp: CompartmentModel): FormGroup {\r\n        return this.fb.group({\r\n            TrailerId: this.fb.control(comp.TrailerId),\r\n            CompartmentId: this.fb.control(comp.CompartmentId),\r\n            Quantity: this.fb.control(comp.Quantity)\r\n        });\r\n    }\r\n\r\n    getBlendRequestFormArray(models?: BlendedRequest[]): FormArray {\r\n\r\n        var _blendedDrArray = this.fb.array([]);\r\n\r\n        if (models && models.length > 0) {\r\n            models.forEach(model => {\r\n                _blendedDrArray.push(this.getBlendRequestFormGroup(model));\r\n            });\r\n        }\r\n\r\n        return _blendedDrArray;\r\n    }\r\n\r\n    getBlendRequestFormGroup(model: BlendedRequest): FormGroup {\r\n\r\n        return this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            OrderId: this.fb.control(model.OrderId, [Validators.required]),\r\n            PoNumber: this.fb.control(model.PoNumber),\r\n            ProductType: this.fb.control(model.ProductType),\r\n            ProductTypeId: this.fb.control(model.ProductTypeId),\r\n            RequiredQuantity: this.fb.control(model.RequiredQuantity, [Validators.required, Validators.min(NumberConstants.MinQuantity)]),\r\n            QuantityInPercent: this.fb.control(model.QuantityInPercent, model.IsAdditive ? [] : [Validators.required, Validators.min(NumberConstants.MinPercent), Validators.max(NumberConstants.MaxPercent)]),\r\n            PickupLocationType: this.fb.control(model.PickupLocationType),\r\n            Terminal: this.getTerminalFormNew(model.Terminal),\r\n            BulkPlant: this.getBulkPlantNew(model.BulkPlant),\r\n            IsAdditive: this.fb.control(model.IsAdditive),\r\n            UoM: this.fb.control(model.UoM),\r\n            JobId: this.fb.control(model.JobId),\r\n            CarrierStatus: this.fb.control(model.CarrierStatus),\r\n            IsBlendedRequest: this.fb.control(model.IsBlendedRequest),\r\n            IsCommonPickupForBlend: this.fb.control(model.IsCommonPickupForBlend),\r\n            BlendedGroupId: this.fb.control(model.BlendedGroupId),\r\n            BlendParentProductTypeId: this.fb.control(model.BlendParentProductTypeId),\r\n            BlendedProductName: this.fb.control(model.BlendedProductName),\r\n            AdditiveProductName: this.fb.control(model.AdditiveProductName),\r\n            IsBlendedDrParent: this.fb.control(model.IsBlendedDrParent),\r\n            TotalBlendedQuantity: this.fb.control(model.TotalBlendedQuantity),\r\n            SchedulePreviousStatus: this.fb.control(model.SchedulePreviousStatus),\r\n            ScheduleStatus: this.fb.control(model.ScheduleStatus),\r\n            TrackScheduleStatus: this.fb.control(model.TrackScheduleStatus),\r\n            TrackableScheduleId: this.fb.control(model.TrackableScheduleId),\r\n            SelectedDate: this.fb.control(model.SelectedDate),\r\n            IsFutureDR: this.fb.control(model.IsFutureDR),\r\n            IsCalendarView: this.fb.control(model.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(model.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(model.DispatcherDragDropSequence),\r\n            ScheduleStartTime: this.fb.control(model.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(model.ScheduleEndTime),\r\n            DeliveryLevelPO: this.fb.control(model.DeliveryLevelPO)\r\n        });\r\n    }\r\n\r\n    public getTerminalFormNew(terminal: DropdownItem): FormGroup {\r\n        let _tform = this.fb.group({ Id: this.fb.control(''), Name: this.fb.control('') });\r\n        if (terminal) { _tform.patchValue(terminal); }\r\n        return _tform;\r\n    }\r\n\r\n    public getBulkPlantNew(bulkPlant: DropAddressModel) {\r\n\r\n        let _bform = this.fb.group({\r\n            Address: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            State: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            Country: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            CountryGroup: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            ZipCode: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            SiteName: this.fb.control(''),\r\n            SiteId: this.fb.control('')\r\n        });\r\n\r\n        if (bulkPlant) {\r\n            if (!bulkPlant.CountryGroup) {\r\n                bulkPlant.CountryGroup = new DropdownItem();\r\n            }\r\n            _bform.patchValue(bulkPlant);\r\n        }\r\n        return _bform;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WallyUtilService {\r\n\r\n    constructor(private readonly fb: FormBuilder) { }\r\n\r\n    getSalesTabFilterForm() {\r\n        return this.fb.group({\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            RateOfConsumption: this.fb.control(false),\r\n            SalesViewType: this.fb.control(1),\r\n            SelectedCarriers: this.fb.control([]),\r\n            SelectedRegions: this.fb.control([]),\r\n            SelectedCustomerList: this.fb.control([]),\r\n            SelectedlocationList: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([]),\r\n            SelectedLocAttributeList: this.fb.control([]),\r\n            //to triger apply filter \r\n            IsApplyFilter: this.fb.control(false),\r\n            IsApplyFilterOnPageLoad: this.fb.control(false),\r\n        })\r\n    }\r\n\r\n    getIdsByList(array: any[]) {\r\n        let responseString = '';\r\n        if (array && array.length > 0) {\r\n            let ids = [];\r\n            array.forEach(res => { ids.push(res.Id) });\r\n            if (ids && ids.length > 0) {\r\n                responseString = ids.join();\r\n            }\r\n        }\r\n        return responseString;\r\n    }\r\n    getCompanyIdsByList(array: any[]) {\r\n        let responseString = '';\r\n        if (array && array.length > 0) {\r\n            let ids = [];\r\n            array.forEach(res => { ids.push(res.CompanyId) });\r\n            if (ids && ids.length > 0) {\r\n                responseString = ids.join();\r\n            }\r\n        }\r\n        return responseString;\r\n    }\r\n}\r\n\r\nexport class LocationTankDetailsModel {\r\n    JobId?: number;\r\n    SiteId?: string;\r\n    SiteIdDetails?: string;\r\n    Tanks?: TankDetailModel[];\r\n    LocationName?: string;\r\n    Status: string;\r\n    DaysRemaining: number;\r\n    CustomerInfo?: string;\r\n}\r\n\r\nexport class TankDetailModel {\r\n    TankId?: string;\r\n    StorageId?: string;\r\n    Name?: string;\r\n    IsUnknowDeliveryOrMissDelivery?: boolean;\r\n    TankInventoryDiffinHrs?: number;\r\n    DaysRemaining: number\r\n    Status: string\r\n}\r\n","\r\ndeclare function msgsuccess(msgText, msgHeader, msgDuration): any;\r\ndeclare function msgerror(msgText, msgHeader, msgDuration, msgPosition?): any;\r\ndeclare function msgwarning(msgText, msgHeader, msgDuration): any;\r\ndeclare function msginfo(msgText, msgHeader, msgDuration): any;\r\n\r\ndeclare function closeDG(): any;\r\ndeclare function showDG(): any;\r\ndeclare function showOpenDG(): any;\r\n\r\ndeclare function hideModal(selector): any;\r\ndeclare function showModal(selector): any;\r\ndeclare function showSliderPanel(): any;\r\ndeclare function hideSliderLoader(): any;\r\ndeclare function appendHTMLSliderContent(htmlContent): any;\r\ndeclare function slidePanel(PanelId, PanelWidth): any;\r\ndeclare function closeSlidePanel(): any;\r\n\r\nexport class Declarations {\r\n    public static msgsuccess = msgsuccess;\r\n    public static msgerror = msgerror;\r\n    public static msgwarning = msgwarning;\r\n    public static msginfo = msginfo;\r\n    public static closeDG = closeDG;\r\n    public static showDG = showDG;\r\n    public static showOpenDG = showOpenDG;\r\n\r\n    public static hideModal = hideModal;\r\n    public static showModal = showModal;\r\n    public static showSliderPanel = showSliderPanel;\r\n    public static hideSliderLoader = hideSliderLoader;\r\n    public static appendHTMLSliderContent = appendHTMLSliderContent;\r\n    public static slidePanel = slidePanel;\r\n    public static closeSlidePanel = closeSlidePanel;\r\n    public static ShiftVisibleRows: number = 10;\r\n}\r\n","import { Directive, Input, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n\n    @Output() clickOutside = new EventEmitter<void>();\n\n    constructor(private elementRef: ElementRef) { }\n\n    @HostListener('document:click', ['$event.target'])\n    public onClick(target) {\n        const clickedInside = this.elementRef.nativeElement.contains(target);\n        if (!clickedInside) {\n            this.clickOutside.emit();\n        }\n    }\n\n}\n","import {\r\n    Directive,\r\n    HostListener,\r\n    HostBinding,\r\n    ElementRef,\r\n    Renderer2,\r\n    OnInit\r\n  } from \"@angular/core\";\r\nimport { Declarations } from \"../declarations.module\";\r\n  \r\n  @Directive({\r\n    selector: \"[appCopy]\"\r\n  })\r\n  export class CopyDirective implements OnInit {\r\n    constructor(private _el: ElementRef, private _renderer: Renderer2) {}\r\n  \r\n    ngOnInit() {\r\n      let copy_icon = this._renderer.createElement(\"i\");\r\n      this._renderer.addClass(copy_icon, \"fa\");\r\n      this._renderer.addClass(copy_icon, \"fa-copy\");\r\n      this._renderer.addClass(copy_icon, \"angular-copy-icon\");\r\n      this._renderer.setStyle(copy_icon, \"margin-left\", \"5px\");\r\n      let simple = this._renderer.listen(copy_icon, \"click\", evt => {\r\n        this.copy(this._el.nativeElement);\r\n      });\r\n  \r\n      this._renderer.appendChild(this._el.nativeElement.parentNode, copy_icon);\r\n    }\r\n  \r\n    copy(event) {\r\n      let input = event;\r\n      input.select();\r\n      document.execCommand(\"copy\");\r\n      input.setSelectionRange(-1, -1);\r\n      Declarations.msgsuccess(\"Text Copied.\", undefined, undefined);\r\n    }\r\n  }\r\n  ","import { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[disableControl]'\r\n})\r\nexport class DisableControlDirective {\r\n\r\n  @Input() set disableControl(condition: boolean) {\r\n\r\n    if (this.ngControl.control) {\r\n      const action = condition ? 'disable' : 'enable';\r\n      this.ngControl.control[action]();\r\n    }\r\n\r\n  }\r\n\r\n  constructor(private ngControl: NgControl) { }\r\n\r\n}","import { Input, Output, EventEmitter, ElementRef, Directive, Renderer2, SimpleChanges } from \"@angular/core\";\r\nimport * as moment from \"moment\";\r\nimport { WeekDays } from \"src/app/app.enum\";\r\n\r\ndeclare var jQuery: any;\r\n@Directive({\r\n    selector: \"[myDatePicker]\"\r\n})\r\nexport class DatePicker {\r\n    @Input() public value: string = \"\";\r\n    @Input() public format: string = \"MM/DD/YYYY\";\r\n    @Input() public minDate: Date;\r\n    @Input() public maxDate: Date = new Date();\r\n    @Output() public onDateChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\r\n    ngOnInit() {\r\n        var currentObject = this;\r\n        if (this.minDate == undefined || this.minDate == null || this.minDate.toString() == \"\") {\r\n            var todayDate = new Date().getDate();\r\n            this.minDate = new Date(new Date().setDate(todayDate - 365 * 10));\r\n        }\r\n\r\n        \r\n        jQuery(this.el.nativeElement).datetimepicker({\r\n            format: currentObject.format,\r\n            minDate: currentObject.minDate.setHours(0, 0, 0),\r\n            maxDate: currentObject.maxDate.setHours(23, 59, 59),\r\n            useCurrent: false\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.change\", function (e) {\r\n            if (e.date != false) {\r\n                currentObject.value = e.date.format(currentObject.format);\r\n                currentObject.onDateChange.emit(e.date.format(currentObject.format));\r\n            }\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.show\", function (e) {\r\n         \r\n            let dateTimePicker = jQuery(currentObject.el.nativeElement).data(\"DateTimePicker\");\r\n            try {\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n            } catch (e) {\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n            }\r\n            dateTimePicker.date(null);\r\n            currentObject.onDateChange.emit('');\r\n        });\r\n    }\r\n\r\n\r\n    //ngOnChanges(change: SimpleChanges): void {\r\n    //    if (change.minDate && change.minDate.currentValue) {\r\n    //        this.minDate.setHours(0, 0, 0);\r\n    //        let cal = jQuery(this.el.nativeElement).data(\"DateTimePicker\");\r\n    //        if (cal) { cal.minDate(this.minDate); }\r\n    //    }\r\n    //    if (change.maxDate && change.maxDate.currentValue) {\r\n    //        this.maxDate.setHours(23, 59, 59);\r\n    //        let cal = jQuery(this.el.nativeElement).data(\"DateTimePicker\");\r\n    //        if (cal) { cal.maxDate(this.maxDate); }\r\n    //    }\r\n    //}\r\n}\r\n\r\n\r\n@Directive({\r\n    selector: \"[CustomDatePicker]\"\r\n})\r\nexport class CustomDatePicker {\r\n    @Input() public value: string = \"\";\r\n    @Input() public format: string = \"MM/DD/YYYY\";\r\n    @Input() public minDate: Date;\r\n    @Input() public maxDate: Date = new Date();\r\n    @Input() public mode: string = \"\";\r\n    @Input() public daysOfWeekEnable: string = \"\";\r\n    @Input() public dateOfMonthEnable: string = \"\";\r\n    @Input() public dateOfYearEnable: string = \"\";\r\n    @Output() public onDateChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\r\n    ngOnInit() {\r\n\r\n        var currentObject = this;\r\n        if (this.minDate == undefined || this.minDate == null || this.minDate.toString() == \"\") {\r\n            var todayDate = new Date().getDate();\r\n            this.minDate = new Date(new Date().setDate(todayDate - 365 * 10));\r\n        }\r\n        let daysOfWeekDisabled = [];\r\n        let enabledDates = [];\r\n        if (this.mode != null && this.mode != \"\") {\r\n\r\n            if (this.mode.toUpperCase() == \"WEEKLY\") {\r\n                const source = [0, 1, 2, 3, 4, 5, 6];\r\n                let input = [];\r\n                currentObject.daysOfWeekEnable.split(',').forEach(res => { input.push(WeekDays[res]) });\r\n                const filterArray = (source, input) => {\r\n                    const filtered = source.filter(el => {\r\n                        return input.indexOf(el) === -1;\r\n                    });\r\n                    return filtered;\r\n                };\r\n                daysOfWeekDisabled = filterArray(source, input);\r\n            }\r\n            else if (this.mode.toUpperCase() == \"MONTHLY\") {\r\n\r\n                let start = moment().startOf('month').subtract(new Date().getFullYear() - this.minDate.getFullYear(), 'years');\r\n                let end = moment().startOf('month').add(this.maxDate.getFullYear() - new Date().getFullYear(), 'years');\r\n                while (start.isBefore(end)) {\r\n                    enabledDates.push(start.clone());\r\n                    start.add(1, 'month');\r\n                }\r\n            }\r\n\r\n            else if (this.mode.toUpperCase() == \"ANNUALY\") {\r\n                let start = moment().startOf('year').subtract(new Date().getFullYear() - this.minDate.getFullYear(), 'years');\r\n                let end = moment().startOf('year').add(this.maxDate.getFullYear() - new Date().getFullYear(), 'years');\r\n                while (start.isBefore(end)) {\r\n                    enabledDates.push(start.clone());\r\n                    start.add(1, 'year');\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        jQuery(this.el.nativeElement).datetimepicker({\r\n            format: currentObject.format,\r\n            minDate: currentObject.minDate.setHours(0, 0, 0),\r\n            maxDate: currentObject.maxDate.setHours(23, 59, 59),\r\n            daysOfWeekDisabled: daysOfWeekDisabled,\r\n            keepInvalid: true,\r\n            enabledDates: enabledDates\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.change\", function (e) {\r\n            if (e.date != false) {\r\n                currentObject.value = e.date.format(currentObject.format);\r\n                //console.log(\"current value: \" + currentObject.value);\r\n                currentObject.onDateChange.emit(e.date.format(currentObject.format));\r\n            }\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.show\", function (e) {\r\n\r\n            let dateTimePicker = jQuery(currentObject.el.nativeElement).data(\"DateTimePicker\");\r\n            try {\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n\r\n            } catch (e) {\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n            }\r\n            dateTimePicker.date(null);\r\n            currentObject.onDateChange.emit('');\r\n        });\r\n    }\r\n   \r\n}\r\n\r\n@Directive({\r\n    selector: \"[myTimePicker]\"\r\n})\r\nexport class TimePicker {\r\n    @Input() public value: string = \"\";\r\n    @Input() public format: string = \"hh:mm:ss A\";\r\n    @Output() public onTimeChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\r\n    ngOnInit() {\r\n        var currentObject = this;\r\n        // jQuery(this.el.nativeElement).keydown(function (e) {\r\n        //     return false;\r\n        // })\r\n        jQuery(this.el.nativeElement).datetimepicker({\r\n            format: currentObject.format,\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.change\", function (e) {\r\n            if (e.date != false) {\r\n                currentObject.value = e.date.format(currentObject.format);\r\n                currentObject.onTimeChange.emit(e.date.format(currentObject.format));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Input, Output, EventEmitter, ElementRef, Directive, HostListener } from \"@angular/core\";\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n    selector: \"[numberWithDecimal]\"\r\n})\r\nexport class NumberWithDecimal {\r\n\r\n    private regex: RegExp = new RegExp(/^[0-9]+(\\.[0-9]*){0,1}$/g);\r\n    private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', 'Delete', 'ArrowRight', 'ArrowLeft', 'Control', 'KeyC', 'KeyV', 'KeyZ', 'KeyX','Enter'];\r\n\r\n    constructor(public el: ElementRef, public formControl: NgControl) { }\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        //Allow copy event\r\n        if ((event.ctrlKey || event.metaKey) && (event.keyCode == 67)) {\r\n            return;\r\n        }\r\n        //Allow Cut event {\r\n        if ((event.ctrlKey || event.metaKey) && (event.keyCode == 88)) {\r\n            return;\r\n        }\r\n        //Allow paste event \r\n        if ((event.ctrlKey || event.metaKey) && (event.keyCode == 86)) {\r\n            return;\r\n        }\r\n        if (next && !String(next).match(this.regex)) {\r\n            this.formControl.control.setErrors({ invalidinput: true });\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n    selector: '[numbersAlphaOnly]'\r\n})\r\nexport class OnlynumberAlphaDirective {\r\n    private regex: RegExp = new RegExp(/^[a-zA-Z0-9]*$/);\r\n    private specialKeys: Array<string> = ['Backspace', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\r\n    private specialCopyKeys: Array<string> = ['KeyC', 'KeyV','Tab'];\r\n    constructor(public el: ElementRef, public formControl: NgControl) { }\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        if (next && !String(next).match(this.regex)) {\r\n            if (this.specialCopyKeys.indexOf(event.key) !== -1) {\r\n                this.el.nativeElement.value = '';\r\n                this.formControl.control.setValue('');\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n}","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n    selector: '[numbersOnly]'\r\n})\r\nexport class OnlynumberDirective {\r\n\r\n    constructor(private _el: ElementRef) { }\r\n\r\n    @HostListener('input', ['$event']) onInputChange(event) {\r\n        const initalValue = this._el.nativeElement.value;\r\n\r\n        this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n        if (initalValue !== this._el.nativeElement.value) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n}","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[requiredIfNotEmpty]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: RequiredIfNotEmptyValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class RequiredIfNotEmptyValidator {\r\n\r\n    @Input('requiredIfNotEmpty') public requiredIfNotEmpty: AbstractControl = null;\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n\r\n        let secondControl = this.requiredIfNotEmpty;\r\n        let baseControl = control;\r\n        //both controls has values or both controls are empty\r\n        if ((secondControl.value && baseControl.value) || (!secondControl.value && !baseControl.value)) {\r\n            //if already required validation ==> remove required validation\r\n            if (baseControl.errors && baseControl.errors.required) {\r\n                baseControl.setErrors({ required: null });\r\n                baseControl.updateValueAndValidity();\r\n            }\r\n            //if already required validation ==> remove required validation\r\n            if (secondControl.errors && secondControl.errors.required) {\r\n                secondControl.setErrors({ required: null });\r\n                secondControl.updateValueAndValidity();\r\n            }\r\n        }\r\n        //value && empty\r\n        else if (secondControl.value && !baseControl.value) {\r\n            //if already required validation ==> no need to set required validation\r\n            if (baseControl.errors && baseControl.errors.required) { return; }\r\n            else {\r\n                //set required validation\r\n                baseControl.setErrors({ required: true });\r\n                return { required: true };\r\n            }\r\n        }\r\n        //empty && value\r\n        else if (!secondControl.value && baseControl.value) {\r\n            //if already required ==> no need to set required\r\n            if (secondControl.errors && secondControl.errors.required) { return; }\r\n            else {\r\n                //set validation\r\n                secondControl.setErrors({ required: true });\r\n            }\r\n        }\r\n    }\r\n}","import { Directive, Input, OnChanges, SimpleChanges, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, Validators } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[requiredIfTrue]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: RequiredIfTrueValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class RequiredIfTrueValidator implements OnChanges {\r\n\r\n    pastControl: AbstractControl;\r\n\r\n    @Input('requiredIfTrue') public requiredIfTrue: boolean;\r\n\r\n    constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n\r\n        this.pastControl = control;\r\n        if (this.requiredIfTrue && (control.value == '' || control.value == undefined || control.value == null)) {\r\n            return { required: true };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        //not first change of requiredIfTrue\r\n        if (!change.requiredIfTrue.firstChange) {\r\n            if (change.requiredIfTrue && !change.requiredIfTrue.currentValue) {\r\n                this.pastControl.setErrors(null);\r\n                this.pastControl.updateValueAndValidity();\r\n                this.cdr.detectChanges();\r\n            }\r\n        }\r\n        //chnage in requiredIfTrue\r\n        if (change.requiredIfTrue && change.requiredIfTrue.currentValue) {\r\n            if (this.pastControl != undefined || this.pastControl != null) {\r\n                this.pastControl.updateValueAndValidity();\r\n                this.cdr.detectChanges();\r\n            }          \r\n        }\r\n    }\r\n}","import { Injectable, Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({ name: 'sortingPipe' })\r\n\r\nexport class SortingPipe implements PipeTransform {\r\n\r\n    transform(array: any[], filterArgs: any) {\r\n\r\n        if (filterArgs) {\r\n\r\n            return array.sort((t1, t2) => {\r\n\r\n                const a = t1[filterArgs.key];\r\n                const b = t2[filterArgs.key];\r\n\r\n                if (a === b)\r\n                    return 0;\r\n                // nulls sort after anything else\r\n                else if (a === null)\r\n                    return 1;\r\n                else if (b === null)\r\n                    return -1;\r\n                // otherwise, if we're ascending, lowest sorts first\r\n                else if (filterArgs.asc)\r\n                    return a < b ? -1 : 1;\r\n                // if descending, highest sorts first\r\n                else\r\n                    return a < b ? 1 : -1;\r\n            });\r\n        }\r\n        else\r\n            return array;\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class DatatableCustomSortingService {\r\n\r\n    configColumnDefsNullToBottom(){\r\n        jQuery.extend(jQuery.fn.dataTable.ext.oSort, {\r\n\r\n            // \"null-at-bottom-pre\": function (_a) {\r\n            //     _a = _a.replace(/\\,/g,'');\r\n            //     let _value = (_a == '' || _a == null || _a == '--' || _a == 'NA')? null: Number.parseFloat(_a);\r\n            //     return _value;\r\n            //     ////parseString(a);\r\n            // },\r\n\r\n            \"null-at-bottom-asc\": function(_a: any, _b: any) {\r\n\r\n                _a = _a.replace(/\\,/g,''); _b = _b.replace(/\\,/g,'');\r\n\r\n                const a = (_a == '' || _a == null || _a == '--'  || _a == 'NA')? null: Number.parseFloat(_a);\r\n                const b = (_b == '' || _b == null || _b == '--' || _b == 'NA')? null: Number.parseFloat(_b);\r\n                \r\n                if (a === b)\r\n                    return 0;\r\n                if (a === null)\r\n                    return 1;\r\n                if (b === null)\r\n                    return -1;\r\n                return a < b ? -1 : 1;\r\n            },\r\n\r\n            \"null-at-bottom-desc\": function(_a: any, _b: any) {\r\n\r\n                _a = _a.replace(/\\,/g,''); _b = _b.replace(/\\,/g,'');\r\n\r\n                const a = (_a == '' || _a == null || _a == '--'  || _a == 'NA')? null: Number.parseFloat(_a);\r\n                const b = (_b == '' || _b == null || _b == '--' || _b == 'NA')? null: Number.parseFloat(_b);\r\n\r\n                if (a === b)\r\n                    return 0;\r\n                if (a === null)\r\n                    return 1;\r\n                if (b === null)\r\n                    return -1;\r\n                return a < b ? 1 : -1;\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n    selector: '[timeGreaterThanOrEqualTo]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: TimeGreaterThanOrEqualToValidator,\n        multi: true\n    }]\n})\nexport class TimeGreaterThanOrEqualToValidator {\n\n    @Input(\"timeGreaterThanOrEqualTo\") public startTimeControl: AbstractControl = null;\n    @Input(\"startDate\") public startDate: AbstractControl = null;\n    @Input(\"endDate\") public endDate: AbstractControl = null;\n\n    validate(endTimeControl: AbstractControl): { [key: string]: any } | null {\n        //if end time is null, required validation already there\n        if (endTimeControl.value) {\n            //if start time is null, then no need to set validation\n            if (this.startTimeControl && this.startTimeControl.value) {\n                //convert 12 hrs time to 24 hrs integer\n                let _startTime = ConvertTime12to24(this.startTimeControl.value);\n                let _endTime = ConvertTime12to24(endTimeControl.value);\n                //if end time greater than start time, set error\n            \n                if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) > new Date(this.endDate.value)) {\n                    //if start time has already error, them remove it\n                    if (this.startTimeControl.errors && this.startTimeControl.errors.timeSmallerThanOrEqualTo) {\n                        this.startTimeControl.setErrors({ timeSmallerThanOrEqualTo: null });\n                    };\n                    //set error\n                    endTimeControl.setErrors({ timeGreaterThanOrEqualTo: true });\n                    return { timeGreaterThanOrEqualTo: true };\n                } else if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) < new Date(this.endDate.value)) {\n                    return;\n                }\n                else if (_startTime > _endTime) {\n                    //if start time has already error, them remove it\n                    if (this.startTimeControl.errors && this.startTimeControl.errors.timeSmallerThanOrEqualTo) {\n                        this.startTimeControl.setErrors({ timeSmallerThanOrEqualTo: null });\n                    };\n                    //set error\n                    endTimeControl.setErrors({ timeGreaterThanOrEqualTo: true });\n                    return { timeGreaterThanOrEqualTo: true };\n                }\n            }\n        }\n        return;\n    }\n}\n//convert 12 hrs time to 24 hrs integer\nfunction ConvertTime12to24(time12h: any) {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes, seconds] = time.split(':');\n    if (hours === '12') { hours = '00'; }\n    if (modifier === 'PM') { hours = parseInt(hours, 10) + 12; }\n    return `${hours || '00'}${minutes || '00'}${seconds || '00'}`;\n}\n","import { Directive, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[timeSmallerThanOrEqualTo]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: TimeSmallerThanOrEqualToValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class TimeSmallerThanOrEqualToValidator {\r\n\r\n    @Input(\"timeSmallerThanOrEqualTo\") public endTimeControl: AbstractControl = null;\r\n    @Input(\"startDate\") public startDate: AbstractControl = null;\r\n    @Input(\"endDate\") public endDate: AbstractControl = null;\r\n\r\n    validate(startTimeControl: AbstractControl): { [key: string]: any } | null {\r\n        //if start time is null, required validation already there\r\n        if (startTimeControl.value) {                \r\n            //if end time is null, then no need to set validation\r\n            if (this.endTimeControl && this.endTimeControl.value) {\r\n                //convert 12 hrs time to 24 hrs integer\r\n                let _startTime = ConvertTime12to24(startTimeControl.value);\r\n                let _endTime = ConvertTime12to24(this.endTimeControl.value);\r\n                //if start time greater tha end time, set error\r\n                if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) > new Date(this.endDate.value)) {\r\n                    if (this.endTimeControl.errors && this.endTimeControl.errors.timeGreaterThanOrEqualTo) {\r\n                        this.endTimeControl.setErrors({ timeGreaterThanOrEqualTo: null });\r\n                    };\r\n                    //set error\r\n                    startTimeControl.setErrors({ timeSmallerThanOrEqualTo: true });\r\n                    return { timeSmallerThanOrEqualTo: true };\r\n                } else if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) < new Date(this.endDate.value)) {\r\n                    return;\r\n                }\r\n                else if (_startTime > _endTime) {\r\n                    //if end time has already error, them remove it\r\n                    if (this.endTimeControl.errors && this.endTimeControl.errors.timeGreaterThanOrEqualTo) {\r\n                        this.endTimeControl.setErrors({ timeGreaterThanOrEqualTo: null });\r\n                    };\r\n                    //set error\r\n                    startTimeControl.setErrors({ timeSmallerThanOrEqualTo: true });\r\n                    return { timeSmallerThanOrEqualTo: true };\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n}\r\n//convert 12 hrs time to 24 hrs integer\r\nfunction ConvertTime12to24(time12h: any) {\r\n    const [time, modifier] = time12h.split(' ');\r\n    let [hours, minutes, seconds] = time.split(':');\r\n    if (hours === '12') { hours = '00'; }\r\n    if (modifier === 'PM') { hours = parseInt(hours, 10) + 12; }\r\n    return `${hours || '00'}${minutes || '00'}${seconds || '00'}`;\r\n}\r\n","export class ForecastingLocationFilter {\r\n    RegionId: string;\r\n    CustomerIds: string;\r\n    IsShowCarrierManaged: boolean;\r\n    Carriers: string;\r\n    InventoryCaptureType: string;\r\n    IsRateOfConsumption: boolean;\r\n}\r\n\r\nexport class LocationFilterModal {\r\n    public SelectedRegionId: string;\r\n    public SelectedStatusId: string;\r\n    public SelectedCustomerId: string;\r\n    public SelectedLocationId: string;\r\n    public SelectedPrioritiesId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\nexport class SalesFilterModal {\r\n    public SelectedRegionId: string;\r\n    public SelectedStatusId: string;\r\n    public SelectedCustomerId: string;\r\n    public SelectedLocationId: string;\r\n    public SelectedPrioritiesId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\nexport class SalesTankFilterModal {\r\n    public SelectedRegionsData: any = [];\r\n    public SelectedCustomerListData:any = [];\r\n    public selectedLocAttributeData:any = [];\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { loginURL } from '../app.constants';\r\n\r\nexport class HandleError {\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    public handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            if (error && error.url && error.url.includes(loginURL)) { //&& error.message && error.message.includes(loginURL) \r\n                window.location.href = loginURL\r\n            }\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HandleError } from 'src/app/errors/HandleError';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpGenericService extends HandleError {\n\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    fetchAll(resourceName: string) {\n        return this.http.get<any[]>(resourceName)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    fetchSingle(resourceName: string) {\n        return this.http.get<any>(resourceName)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    postData(resourceName: string, data: any) {\n        // data = JSON.stringify(data);\n        return this.http.post(resourceName, data)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    updateData(resourceName: string, data: any) {\n        data = JSON.stringify(data);\n        return this.http.put(resourceName, data)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    private objectToQueryString(obj: any): string {\n        var str = [];\n        for (var p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n            }\n        return str.join(\"&\");\n    }\n}\n","import { DropdownItem } from 'src/app/statelist.service';\r\nimport { FreightPricingMethod, FreightRateRuleType, TableType, WaitingAction } from 'src/app/app.enum';\r\n\r\nexport class InvoiceDetailModel {\r\n    constructor() {\r\n        this.FuelDropLocation = new AddressModel();\r\n        this.AccessorialFeeDetails = [];\r\n    }\r\n    public PaymentTerm: PaymentTermModel;\r\n    public Customer: CustomerModel;\r\n    public BolDetails: BolDetail[] = [];\r\n    public TicketDetails: LiftTicketDetail[] = [];\r\n    public Drops: DropDetailModel[];\r\n    public FuelDropLocation: AddressModel;\r\n    public Carrier: string;\r\n    public Driver: DropdownItem;\r\n    public SupplierInvoiceNumber: string;\r\n    public IsAssetTracked: boolean;\r\n    public InvoiceTypeId: number;\r\n    public IsVariousOrigin: boolean;\r\n    public InvoiceNotes: string;\r\n    public Fees: FeeModel[];\r\n    public InvoiceImage: ImageModel;\r\n    public InvoiceImages: ImageModel[] = [];\r\n    public AdditionalImage: ImageModel;\r\n    public AdditionalImages: ImageModel[] = [];\r\n    public SignatureImage: ImageModel;\r\n    public SignatureImages: ImageModel[] = [];\r\n    public TaxAffidavitImage:ImageModel;\r\n    public TaxAffidavitImages:ImageModel[] = [];\r\n    public BDNImage : ImageModel;\r\n    public BDNImages :ImageModel[] = [];\r\n    public CoastGuardInspectionImage:ImageModel;\r\n    public CoastGuardInspectionImages:ImageModel[] = [];\r\n    public InspectionRequestVoucherImage:ImageModel;\r\n    public InspectionRequestVoucherImages:ImageModel[] = [];\r\n    public OriginalInvoiceHeaderId: number;\r\n    public IsRebillInvoice: boolean;\r\n    public WaitingFor: WaitingAction;\r\n    public BrokerChainId: string;\r\n    public PreferencesSettingId: number;\r\n    public IsSupressOrderPricing: boolean;\r\n    public IsBadgeMandatory: boolean;\r\n    public ExistingHeaderId: number;\r\n    public AccessorialFeeDetails: AccessorialFeeTableDetailViewModel[];\r\n}\r\nexport class BlendedScheduleDetail {\r\n    public BlendId: string;\r\n    public Schedules: BlendedSchedules[] = [];\r\n}\r\nexport class BlendedSchedules {\r\n    public Id: number;\r\n    public OrderId: number;\r\n    public DeliveryLevelPO: string;\r\n}\r\n\r\nexport class ImageModel {\r\n    public Name: string;\r\n    public IsPdf: boolean;\r\n    public FilePath: string = \"\";\r\n    public Data: string = \"0x20\"\r\n    public ImageData: any\r\n    public AzurePath: string;\r\n\r\n}\r\n\r\nexport class DropDetailModel {\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public TypeOfFuel: number;\r\n    public FuelTypeId: number;\r\n    public FuelTypeName: string;\r\n    public ActualDropQuantity: number;\r\n    public DropDate: string;\r\n    public DisplayDropDate: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Allowance: number;\r\n    public MinDropDate: string;\r\n    public DisplayMinDropDate: string;\r\n    public MaxDropDate: string;\r\n    public TrackableScheduleId: number;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public IsAssetTracked: boolean;\r\n    public Assets: AssetDropModel[];\r\n    public PickupLocationType: number;\r\n    public PickUpAddress: BulkPlantAddress;\r\n    public Currency: string;\r\n    public UoM: string;\r\n    public Index: number;\r\n    public OtherTaxDetails: OtherProductTaxModel[];\r\n    public FuelSurchargeFreightFee: SurchargeModel;\r\n    public IsSignatureRequired: boolean;\r\n    public IsBOLImageRequired: boolean;\r\n    public IsDropImageRequired: boolean;\r\n    public IsBolDetailsRequired: boolean;\r\n    public IsFTL: boolean;\r\n    public QuantityIndicatorTypeId: number;\r\n    public BrokerChainId: string;\r\n    public IsDipDataRequired: boolean;\r\n    public IsFreightOnlyOrder: boolean;\r\n    public ExceptionId: number;\r\n    public DropEndDate: string;\r\n    public Gravity: number;\r\n    public ConversionFactor: number;\r\n    public ConvertedQuantity: number;\r\n    public JobCountryId: number;\r\n    public IsSupressOrderPricing: boolean;\r\n    public BdrDetails: BDRModel;\r\n    public IsMarineLocation: boolean;\r\n    public BlendedScheduleId: string;\r\n    public IsBdrDetailsAdded: boolean;// Used only for UI purpose\r\n    public FreightPricingMethod: FreightPricingMethod;\r\n    public DeliveryLevelPO: string;\r\n}\r\n\r\nexport class FreightTableNameModel {\r\n    public FreightRateRuleType: string;\r\n    public TableType: string;\r\n    public TerminalId: number;\r\n    public OrderId: number;\r\n}\r\n\r\nexport class AccessorialFeeInvoiceInputViewModel {\r\n    public OrderIds: number;\r\n    public TerminalId: number;\r\n    public BulkPlantId: number;\r\n    public SupplierId: number;\r\n    public CustomerId: number;\r\n}\r\n\r\nexport class AssetDropModel {\r\n    public Id: number;\r\n    public OrderId: number;\r\n    public InvoiceId: number;\r\n    public AssetName: string;\r\n    public JobXAssetId: number;\r\n    public DropGallons: number;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public IsNewAsset: boolean = false;\r\n    public PreDip: number;\r\n    public PostDip: number;\r\n    public TankMakeModel: string;\r\n    // public UoMType: number;\r\n    public TankScaleMeasurement: number;\r\n    public AssetType: number;\r\n\r\n}\r\n\r\nexport class PaymentTermModel {\r\n    public TermId: string;\r\n    public NetDays: number;\r\n}\r\n\r\nexport class CustomerModel {\r\n    public CompanyId: number;\r\n    public CompanyName: string;\r\n    public Location: LocationModel;\r\n    public ContactName: string;\r\n    public ContactPhone: string;\r\n    public ContactEmail: string;\r\n}\r\n\r\nexport class LocationModel {\r\n    public JobId: number;\r\n    public SiteName: string;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public ZipCode: string;\r\n    public CountryId: number;\r\n    public IsMarineLocation: boolean = false;\r\n}\r\n\r\nexport class BolDetail {\r\n    public Id: number;\r\n    public BolNumber: string;\r\n    public LiftDate: string;\r\n    public BadgeNumber: string;\r\n    public DisplayLiftDate: string;\r\n    public Products: BolProductModel[];\r\n    public Images: ImageModel;\r\n    public ImageList: ImageModel[] = [];\r\n}\r\n\r\nexport class BolProductModel {\r\n    public ProductId: number;\r\n    public ProductName: string;\r\n    public NetQuantity: number;\r\n    public GrossQuantity: number;\r\n    public Terminal: DropdownItem;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public QuantityIndicatorTypeId: number;\r\n    public DeliveredQuantity: number;\r\n\r\n}\r\n\r\nexport class LiftTicketDetail {\r\n    constructor() {\r\n        this.Products = [];\r\n    }\r\n    public Id: number;\r\n    public LiftTicketNumber: string;\r\n    public LiftDate: string;\r\n    public BadgeNumber: string;\r\n    public DisplayLiftDate: string;\r\n    public Products: LiftProductModel[];\r\n    public Images: ImageModel;\r\n    public ImageList: ImageModel[] = [];\r\n}\r\n\r\nexport class LiftProductModel {\r\n    public ProductId: number;\r\n    public ProductName: string;\r\n    public NetQuantity: number;\r\n    public GrossQuantity: number;\r\n    public BulkPlantId: number;\r\n    public BulkPlantName: string;\r\n    public Address: AddressModel;\r\n    public QuantityIndicatorTypeId: number;\r\n    public DeliveredQuantity: number;\r\n}\r\n\r\nexport class FeeModel {\r\n    public OrderId: number;\r\n    public Currency: number;\r\n    public TruckLoadType: number;\r\n    public TruckLoadCategoryId: number;\r\n    public CommonFee: boolean;\r\n    public FeeConstraintTypeId: number;\r\n    public SpecialDate: string;\r\n    public FeeTypeId: string;\r\n    public FeeSubTypeId: number;\r\n    public OtherFeeDescription: string;\r\n    public MinimumGallons: number;\r\n    public DeliveryFeeByQuantity: ByQuantityModel[];\r\n    public Fee: number;\r\n    public IncludeInPPG: boolean;\r\n}\r\n\r\nexport class ByQuantityModel {\r\n    Currency: number;\r\n    MinQuantity: number = 0;\r\n    MaxQuantity: number;\r\n    Fee: number;\r\n}\r\n\r\nexport class AddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n        this.CountryGroup = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public State: DropdownItem;\r\n    public City: string;\r\n    public Country: DropdownItem;\r\n    public CountryGroup: DropdownItem;\r\n    public ZipCode: string;\r\n}\r\n\r\nexport class BulkPlantAddress extends AddressModel {\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OtherProductTaxModel {\r\n    public OrderId: number;\r\n    public TaxId: number;\r\n    public TaxPricingTypeId: number;\r\n    public TaxDescription: string;\r\n    public TaxAmount: number;\r\n}\r\n\r\nexport class SurchargeModel {\r\n    public IsSurchargeApplicable: boolean;\r\n    public IsFreightCostApplicable: boolean;\r\n    public SurchargePricingType: number;\r\n    public SurchargeProductType: number;\r\n    public SurchargeFreightCost: number;\r\n    public SurchargePercentage: number;\r\n    public SurchargeEiaPrice: number;\r\n    public SurchargeTableRangeStart: number;\r\n    public SurchargeTableRangeEnd: number;\r\n    public IsFeeByDistance: boolean = false;\r\n    public Distance: number;\r\n    public TotalFuelSurchargeFee: number;\r\n    public DeliveryFeeByQuantity: ByQuantityModel[];\r\n    public BuyerCompanyId: number;\r\n    public FreightRateRuleType: FreightRateRuleType;\r\n    public FreightRateTableType: TableType;\r\n    public FreightRateRuleId: number;\r\n    public FuelSurchargeTableType: TableType;\r\n    public FuelSurchargeTableId: number;\r\n    public FreightPricingMethod: FreightPricingMethod;\r\n    public AutoSurchargeFreightCost: number;\r\n}\r\n\r\nexport class FreightCostInputViewModel {\r\n    public FreightRateRuleId: number;\r\n    public OrderId: number;\r\n    public TerminalId: number;\r\n    public BulkPlantId: number;\r\n    public SupplierId: number;       \r\n    public DeliveredQuantity: number;\r\n    public Distance: number;\r\n}\r\n\r\nexport class AccessorialFeeTableDetailViewModel {\r\n    public AccessorialFeeTableType: TableType;\r\n    public AccessorialFeeId: number;\r\n}\r\n\r\nexport class BDRModel {\r\n    //public Id: number;\r\n    public BDRNumber: string;\r\n    public PumpingStartTime: string;\r\n    public PumpingStopTime: string;\r\n    public OpenMeterReading: string;\r\n    public CloseMeterReading: string;\r\n    public Viscosity: string;\r\n    public SulphurContent: string;\r\n    public FlashPoint: string;\r\n    public DensityInVaccum: string;\r\n    public ObservedTemperature: string;\r\n    public MeasuredVolume: string;\r\n    public StandardVolume: string;\r\n    public MarpolSampleNumbers: string;\r\n    public IsEngineerInvitedToWitnessSample: boolean = false;\r\n    public IsNoticeToProtestIssued: boolean = false;\r\n}\r\n\r\nexport function IsDuplicate(x: FeeModel, y: FeeModel) {\r\n    return y.FeeTypeId == x.FeeTypeId\r\n        && y.FeeSubTypeId == x.FeeSubTypeId\r\n        && y.CommonFee == x.CommonFee\r\n        && y.FeeConstraintTypeId == x.FeeConstraintTypeId;\r\n};\r\n\r\nexport function DeDuplicateFees(existingFees: FeeModel[], newFees: FeeModel[]): FeeModel[] {\r\n    if ((existingFees == undefined || existingFees == null)\r\n        && (newFees == undefined || newFees == null)) {\r\n        return [];\r\n    }\r\n    if (existingFees == undefined || existingFees == null) {\r\n        return newFees;\r\n    }\r\n    if (newFees == undefined || newFees == null) {\r\n        return existingFees;\r\n    }\r\n    var _combined: FeeModel[] = [];\r\n    //1. Get higher from existing\r\n    var f1 = getHigherFromFirst(existingFees, newFees);\r\n    _combined = _combined.concat(f1);\r\n\r\n    //2. Get unmatched from existing\r\n    var f2 = getUnmatchedFromFirst(existingFees, newFees);\r\n    _combined = _combined.concat(f2);\r\n\r\n    //3. Take higher from new fees\r\n    var f3 = getHigherFromFirst(newFees, _combined);\r\n    _combined = _combined.concat(f3);\r\n\r\n    //4. Take unmatched from new fees\r\n    var f4 = getUnmatchedFromFirst(newFees, _combined);\r\n    _combined = _combined.concat(f4);\r\n\r\n    return _combined.sort(function (x, y) { return compare(x, y); });\r\n}\r\n\r\nexport function IsMatched(x: FeeModel, y: FeeModel) {\r\n    return y.FeeTypeId == x.FeeTypeId\r\n        && y.FeeSubTypeId == x.FeeSubTypeId\r\n        && y.CommonFee == x.CommonFee\r\n        && y.FeeConstraintTypeId == x.FeeConstraintTypeId;\r\n};\r\n\r\nfunction getHigherFromFirst(array1: FeeModel[], array2: FeeModel[]): FeeModel[] {\r\n    var _highers = [];\r\n    array1.forEach(function (first) {\r\n        var _higher = array2.find(function (second) {\r\n            //1. Flat Fee: Remove if duplicate or take higher fee\r\n            //2. Per Hour: Remove if duplicate or take higher fee\r\n            //3. Percent: Always take higher fee\r\n            //4. Per Asset: Don't allow duplicate, take higher fee\r\n            //5. Per Gallon: Apply product-wise : No need to check for duplicates\r\n            return IsMatched(first, second) && (\r\n                (isFlatFee(first, second) && first.Fee > second.Fee) ||\r\n                (isPerHourFee(first, second) /*&& first.Fee > second.Fee*/) ||\r\n                (isPercentFee(first, second) && first.Fee > second.Fee) ||\r\n                (isPerAssetFee(first, second) /*&& first.Fee > second.Fee*/) ||\r\n                isPerGallonFee(first, second));\r\n        });\r\n        if (_higher != undefined && _higher != null) {\r\n            _highers.push(first);\r\n        }\r\n    });\r\n    return _highers;\r\n}\r\n\r\nfunction getUnmatchedFromFirst(array1: FeeModel[], array2: FeeModel[]): FeeModel[] {\r\n    var _unmatched = [];\r\n    array1.forEach(function (first) {\r\n        var _unmatch = array2.find(function (second) {\r\n            return IsMatched(first, second);\r\n        });\r\n        if (_unmatch == undefined && _unmatch == null) {\r\n            _unmatched.push(first);\r\n        }\r\n    });\r\n    return _unmatched;\r\n}\r\n\r\nfunction isFlatFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 2 && y.FeeSubTypeId == 2;\r\n}\r\n\r\nfunction isPerAssetFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 4 && y.FeeSubTypeId == 4;\r\n}\r\n\r\nfunction isPerHourFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 5 && y.FeeSubTypeId == 5;\r\n}\r\n\r\nfunction isPerGallonFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 17 && y.FeeSubTypeId == 17;\r\n}\r\n\r\nfunction isPercentFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 18 && y.FeeSubTypeId == 18;\r\n}\r\n\r\nfunction compare(a: FeeModel, b: FeeModel) {\r\n    if (a.FeeTypeId > b.FeeTypeId) return 1;\r\n    if (b.FeeTypeId > a.FeeTypeId) return -1;\r\n    return 0;\r\n}\r\n\r\nexport class QuantityInfo {\r\n    ProductId: number;\r\n    TotalDroppedQuantity: number;\r\n}\r\n\r\nexport class DropQuantityByPrePostDipRequestModel\r\n{\r\n    public TankId: number;\r\n    public ScaleMeasurement: number;\r\n    public PreDipValue: number;\r\n    public PostDipValue: number;\r\n    public JobId: number;\r\n    public JobxAssetId: number;\r\n}\r\nexport class  DropQuantityByPrePostDipResponseModel\r\n{       \r\n        public DropQuantity: number;\r\n    public JobxAssetId: number;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class MFNConversionResponseViewModel {\r\n    public IsValidGravity: boolean;\r\n    public ConvertedQty: number;\r\n    public UoM: any;\r\n    }\r\n\r\nexport class MFNConversionRequestViewModel {\r\n    public DroppedGallons: number;\r\n    public UoM: any;\r\n    //Could be gravity or hardcoded 42 for barrel conversion\r\n    public ConversionFactor: number;\r\n    public JobCountryId: number;\r\n}\r\n//[Validators.pattern(/^(\\0*[1-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]*\\.[0-9]*[1-9][0-9]*)$/)]),\r\n//ActualDropQuantity: this.fb.control(quantity, [Validators.required, Validators.min(0.00000001), Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasterComponent } from './master/master.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MarineportsComponent } from './marine-ports/marineports.component';\nimport { MarinevesselsComponent } from './marine-vessels/marinevessels.component';\nimport { SharedModule } from '../modules/shared.module';\nimport { MarinePortsMapComponent } from './marine-ports/marine-ports-map/marine-ports-map.component';\nimport { DataTablesModule } from 'angular-datatables';\nconst route: Routes = [\n    { path: '', component: MasterComponent }\n]\n\n\n@NgModule({\n  declarations: [MasterComponent, MarineportsComponent, MarinevesselsComponent, MarinePortsMapComponent],\n  imports: [\n      CommonModule,\n      SharedModule,\n       DataTablesModule,\n      RouterModule.forChild(route),\n  ]\n})\nexport class MarinePortsVesselsModule { }\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, AfterViewInit } from '@angular/core';\r\nimport { MarinePortsandvesselsService } from '../../marine-portsandvessels.service'\r\nimport { MarinePortModel } from '../../models'\r\n@Component({\r\n  selector: 'app-marine-ports-map',\r\n  templateUrl: './marine-ports-map.component.html',\r\n  styleUrls: ['./marine-ports-map.component.css']\r\n})\r\nexport class MarinePortsMapComponent implements OnInit, OnChanges, AfterViewInit{\r\n    @Input() SelectedCountryId: any;\r\n    public IsLoading: boolean = false;\r\n    public marinePortsData: MarinePortModel[] = [];\r\n\r\n    mapConstants: MapConstants = new MapConstants();\r\n    public screenOptions = {\r\n        position: 3\r\n    };\r\n    public Map: any;\r\n    public zoomLevel = 5;\r\n\r\n    constructor(private marineService: MarinePortsandvesselsService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes.SelectedCountryId && changes.SelectedCountryId.currentValue){\r\n        //get call for location data based on selected country id\r\n        this.getMarinePortsData(changes.SelectedCountryId.currentValue);\r\n    }\r\n    }\r\n    getMarinePortsData(countryId: number) {\r\n        //let countryId = this.SelectedCountryId;\r\n        this.IsLoading = true;\r\n        this.marineService.getMarinePorts(countryId).subscribe((data) => {\r\n            if (data) {\r\n                this.IsLoading = false;\r\n                this.marinePortsData = data;\r\n                if (this.marinePortsData && this.marinePortsData.length == 0) {\r\n                    if (this.SelectedCountryId == 2) { //canada\r\n                        this.mapConstants.CenterLat = 56.14;\r\n                        this.mapConstants.CenterLon = -106.34;\r\n                    }        \r\n                }\r\n                \r\n            }\r\n        });\r\n    }\r\n    setMapCenter(countryId: number) {\r\n        if (countryId == 2) {\r\n            this.mapConstants.CenterLat = 56.14;\r\n            this.mapConstants.CenterLon = -106.34;\r\n        }\r\n        else if (countryId == 4) {\r\n            this.mapConstants.CenterLat = 13.193887;\r\n            this.mapConstants.CenterLon = -59.543198;\r\n        }\r\n        else {\r\n            this.mapConstants.CenterLat = 38;\r\n            this.mapConstants.CenterLon = -98.35;\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.subscribeReloadMapSubject();\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.open();\r\n    }\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.close();\r\n    }\r\n    public mapReady(map: any): void {\r\n        this.Map = map;\r\n        if (this.SelectedCountryId == 2) {\r\n            this.mapConstants.CenterLat = 57.88251631;\r\n            this.mapConstants.CenterLon = -98.54842922;\r\n        }\r\n    }\r\n    private subscribeReloadMapSubject(): void {\r\n        let subs = this.marineService.reloadPortMapsSubject.subscribe(countryId=> {\r\n            if (countryId) {\r\n                this.getMarinePortsData(countryId);\r\n            }\r\n        });       \r\n    }\r\n\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}","<div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n<agm-map [zoom]=\"zoomLevel\" style=\"height: 60vh;\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\" [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\">\r\n    <ng-container *ngFor=\"let port of marinePortsData\">\r\n        <agm-marker [latitude]=\"port.Latitude\" [longitude]=\"port.Longitude\" [iconUrl]=\"mapConstants.IconUrl\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\">\r\n            <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                <div>\r\n                    <p><strong>{{ port.JobName}}</strong></p>\r\n                </div>\r\n            </agm-info-window>\r\n        </agm-marker>\r\n    </ng-container>\r\n</agm-map>\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { MarinePortModel, Geocode } from '../models';\r\nimport { SalesUserService } from '../../sales-user/sales-user.service'\r\nimport { ConfirmationDialogService } from '../../shared-components/confirmation-dialog/confirmation-dialog.service';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { MarinePortsandvesselsService } from '../marine-portsandvessels.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Country } from 'src/app/self-service-alias/models/location';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport {  DropdownItem } from 'src/app/statelist.service';\r\n\r\n@Component({\r\n  selector: 'app-marineports',\r\n  templateUrl: './marineports.component.html',\r\n  styleUrls: ['./marineports.component.css']\r\n})\r\nexport class MarineportsComponent implements OnInit ,OnChanges,OnDestroy{\r\n    @Input() SelectedCountryId: any;\r\n\r\n  public ModalText: string;\r\n\r\n   public MarinePortsData: MarinePortModel[] = [];\r\n    public MarinePort: MarinePortModel = new MarinePortModel();\r\n  dtOptions: any = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  public popoverTitle: string = 'Are you sure?';\r\n  public confirmButtonText: string = 'Yes';\r\n  public cancelButtonText: string = 'No';\r\n\r\n    portCreateForm: FormGroup;\r\n\r\n    mapConstants: MapConstants = new MapConstants();\r\n\r\n  public countryList = [];\r\n  public currucyList = [];\r\n  public statesList = [];\r\n  public filteredStatesList = [];\r\n  public countryGroupList = [];\r\n    public currentCountryId: any;\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n   // public defaultCountryGroupDDLValue: DropdownItem = new DropdownItem;\r\n\r\n    constructor(private marineService: MarinePortsandvesselsService, private fb: FormBuilder,\r\n        private salesService: SalesUserService, private confirmationdialogueservice: ConfirmationDialogService) { }\r\n  ngOnInit(): void {\r\n    this.ModalText = 'Create Port';\r\n    var exportColumns = { columns: [0, 1, 2, 3, 4, 5, 6, 7] };\r\n    this.dtOptions = {\r\n      dom: '<\"html5buttons\"B>lTfgitp',\r\n      buttons: [\r\n          { extend: 'colvis' },\r\n          { extend: 'copy', exportOptions: exportColumns },\r\n          { extend: 'csv', title: 'Port Details', exportOptions: exportColumns },\r\n          { extend: 'pdf', title: 'Port Details', orientation: 'landscape', exportOptions: exportColumns },\r\n          { extend: 'print', exportOptions: exportColumns }\r\n      ],\r\n      pagingType: 'first_last_numbers',\r\n      pageLength: 10,\r\n      ordering: true,\r\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n    };\r\n      //this.getUoMList();\r\n      //this.getCurrecyList();\r\n      this.getCountryList();\r\n      this.getcountryGroupList();\r\n      this.getStatesOfAllCountries();\r\n      this.MarinePort.CountryId = this.SelectedCountryId;\r\n      if (this.SelectedCountryId == 2) { //canada\r\n          this.mapConstants.CenterLat = 56.14;\r\n          this.mapConstants.CenterLon = -106.34;\r\n      }\r\n      this.initializePortCreationForm(this.MarinePort);\r\n      //this.filterStateList(this.MarinePort.CountryId);\r\n     // this.defaultCountryGroupDDLValue.Id = 0;\r\n      jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes.SelectedCountryId && changes.SelectedCountryId.currentValue){\r\n       // get call for grid data\r\n        this.getMarinePortsData();\r\n        this.MarinePort.CountryId = this.SelectedCountryId;       \r\n        this.setMapCenter(this.SelectedCountryId);\r\n        this.setAddressValidators(this.SelectedCountryId);\r\n        jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n    }\r\n  }\r\n    createPort(header: string) {     \r\n        this.ModalText = header;\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.SelectedCountryId) || [];\r\n        this.portCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n        this.portCreateForm.get('IsGeocodeUsed').setValue(false);\r\n        this.setLatLongValidator(false);\r\n        this.setMapCenter(this.SelectedCountryId);\r\n        jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n    }\r\n    setMapCenter(countryId: number) {\r\n        if (countryId == 2) { \r\n            this.mapConstants.CenterLat = 56.14;\r\n            this.mapConstants.CenterLon = -106.34;\r\n        }\r\n        else if (countryId == 4) {\r\n            this.mapConstants.CenterLat = 13.193887;\r\n            this.mapConstants.CenterLon = -59.543198;\r\n        }\r\n        else {\r\n            this.mapConstants.CenterLat = 38;\r\n            this.mapConstants.CenterLon = -98.35;\r\n        }\r\n    }\r\n\r\n  getMarinePortsData(){\r\n      let countryId = this.SelectedCountryId;\r\n      this.IsLoading = true;\r\n    this.marineService.getMarinePorts(countryId).subscribe((data)=>{\r\n        if (data) {\r\n            jQuery(\"#port-datatable\").DataTable().clear().destroy();\r\n            this.MarinePortsData = data;\r\n            this.dtTrigger.next();\r\n            this.IsLoading = false;\r\n        }\r\n        \r\n    });\r\n  }\r\n    initializePortCreationForm(port: MarinePortModel): FormGroup {        \r\n         this.portCreateForm = this.fb.group({\r\n            JobID: this.fb.control(port.JobID),\r\n            JobName: this.fb.control(port.JobName, [Validators.required] ),       \r\n            Address: this.fb.control(port.Address),\r\n            City: this.fb.control(port.City),\r\n            CountyName: this.fb.control(port.CountyName),\r\n            StateId: this.fb.control(port.StateID, [Validators.required]),\r\n            CountryId: this.fb.control(port.CountryId, [Validators.required]),                       \r\n            StateName: this.fb.control(port.State),\r\n            ZipCode: this.fb.control(port.ZipCode),\r\n            IsGeocodeUsed: this.fb.control(port.IsGeoCoded),\r\n            Latitude: this.fb.control(port.Latitude, Validators.pattern('^[0-9.-]*$')),\r\n            Longitude: this.fb.control(port.Longitude, Validators.pattern('^[0-9.-]*$')), \r\n        })\r\n        this.setAddressValidators(port.CountryId);\r\n        return this.portCreateForm;\r\n        \r\n    }\r\n    editPort(port) {\r\n        if (port) {\r\n            this.portCreateForm.get('JobID').setValue(port.JobID);\r\n            this.portCreateForm.get('JobName').setValue(port.JobName);\r\n            this.portCreateForm.get('Address').setValue(port.Address);\r\n            this.portCreateForm.get('City').setValue(port.City);\r\n            this.portCreateForm.get('CountyName').setValue(port.CountyName);\r\n            this.portCreateForm.get('StateId').setValue(port.StateID);\r\n            this.portCreateForm.get('CountryId').setValue(port.CountryId);\r\n            this.portCreateForm.get('StateName').setValue(port.State);\r\n            this.portCreateForm.get('ZipCode').setValue(port.ZipCode);\r\n            this.portCreateForm.get('IsGeocodeUsed').setValue(port.IsGeocodeUsed);\r\n            this.portCreateForm.get('Latitude').setValue(port.Latitude);\r\n            this.portCreateForm.get('Longitude').setValue(port.Longitude);\r\n            if (port.Latitude) {\r\n                this.mapConstants.CenterLat = parseFloat(port.Latitude);\r\n                this.mapConstants.CenterLon = parseFloat(port.Longitude);\r\n            }\r\n            let countryId = this.portCreateForm.get('CountryId').value;\r\n            this.setAddressValidators(countryId);\r\n            jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n        }\r\n  }\r\n    deletePort(port) {\r\n        if (port && port.JobID) {\r\n            this.marineService.deletePort(port.JobID).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);                   \r\n                    this.getMarinePortsData();\r\n                    this.marineService.setReloadMapSubject(port.CountryId);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n         });\r\n        }\r\n    }\r\n    filterStateList(countryId: number) {\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.SelectedCountryId) || [];\r\n    }\r\n\r\n    clearPanelData() {\r\n        this.portCreateForm.reset();\r\n        this.portCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n        this.portCreateForm.get('StateId').setValue(null);\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.SelectedCountryId) || [];\r\n        this.setMapCenter(this.SelectedCountryId);\r\n        jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n        this.setLatLongValidator(false);\r\n\r\n  }\r\n    //public getUoMList() {\r\n    //  this.salesUserService.GetUoMList().subscribe(data => {\r\n    //        if (data && data.length > 0) {\r\n    //            this.UomList = data;\r\n    //        }\r\n    //    });\r\n    //}\r\n    //public getCurrecyList() {\r\n    //    this.salesUserService.GetCurrenyList().subscribe(data => {\r\n    //        if (data && data.length > 0) {\r\n    //            this.currucyList = data;\r\n    //        }\r\n    //    });\r\n    //}\r\n    public getCountryList() {\r\n        this.marineService.getCountryList().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.countryList = data;\r\n            }\r\n        });\r\n    }\r\n    public getcountryGroupList() {\r\n        this.marineService.getCountryGroupList(4).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.countryGroupList = data;\r\n            }\r\n        });\r\n    }\r\n    countryChanged() {\r\n        this.portCreateForm.get('StateId').setValue(null)\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.portCreateForm.get('CountryId').value) || [];\r\n        let countryId = this.portCreateForm.get('CountryId').value;\r\n        this.setAddressValidators(countryId);\r\n        this.setMapCenter(countryId);\r\n    }\r\n\r\n    countryGroupChanged(selectedCountryGroupId: any) {\r\n        if (selectedCountryGroupId) {\r\n            var countryGroup = selectedCountryGroupId.target.value;\r\n            if (countryGroup === '0') {\r\n                this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.portCreateForm.get('CountryId').value) || [];\r\n                this.portCreateForm.get('StateId').setValue(null)\r\n            }\r\n            else {\r\n                this.filteredStatesList = this.statesList.filter(s => s.CountryGroupId == countryGroup) || [];\r\n                this.portCreateForm.get('StateId').setValue(null)\r\n            }\r\n        }\r\n    }\r\n    public getStatesOfAllCountries(countryId?: number) {\r\n        this.marineService.GetStatesOfAllCountries(countryId).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.statesList = data;\r\n                this.filteredStatesList = this.statesList;\r\n            }\r\n        });\r\n    }\r\n    public getAddressByZip() {\r\n        var zipCode = this.portCreateForm.get('ZipCode').value;\r\n        if (zipCode) {\r\n            this.marineService.GetAddressByZip(zipCode).subscribe(data => {\r\n                if (data) {\r\n                    var country = this.countryList.find(t => t.Code.includes(data.CountryCode));\r\n                    if (country) {\r\n                        var countryId = country.Id;\r\n                        this.portCreateForm.get('CountryId').patchValue(countryId);\r\n                        //Commented below line for Impediment 30459-P2-Parkland US/MFN - Ports Address Misbehaves\r\n                        //this.portCreateForm.get('Address').patchValue(data.Address);\r\n                        this.portCreateForm.get('CountyName').patchValue(data.CountyName);\r\n                        this.portCreateForm.get('City').patchValue(data.City);\r\n                        var stateId = this.statesList.find(x => x.StateCode == data.StateCode).StateId;\r\n                        this.portCreateForm.get('StateId').patchValue(stateId);                       \r\n                        this.portCreateForm.get('Latitude').patchValue(data.Latitude);\r\n                        this.portCreateForm.get('Longitude').patchValue(data.Longitude);\r\n                        this.mapConstants.CenterLat = data.Latitude;\r\n                        this.mapConstants.CenterLon = data.Longitude;\r\n                        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    markerDragEnd(event) {\r\n        this.confirmationdialogueservice.confirm('Map update', 'Geo Codes shifted to a new location!')\r\n            .then((confirmed) => (confirmed == true) ? this.updateGeoCode(event.coords.lat, event.coords.lng) : this.previousLatLon())\r\n            .catch(() => this.previousLatLon());\r\n    }\r\n    updateGeoCode(lat, lng) {\r\n        this.salesService.GetAddressByLongLat(lat, lng).subscribe(data => {\r\n            if (data) {\r\n                data.Latitude = parseFloat(lat);\r\n                data.Longitude = parseFloat(lng);\r\n                this.updateAddressData(data);\r\n            }\r\n            else { // if no address fetched for lat-long then set only map marker on UI\r\n                this.mapConstants.CenterLat = lat;\r\n                this.mapConstants.CenterLon = lng;\r\n            }\r\n           \r\n        })\r\n    }\r\n    public previousLatLon() {\r\n        this.mapConstants.CenterLat = this.portCreateForm.get('Latitude').value;\r\n        this.mapConstants.CenterLon = this.portCreateForm.get('Longitude').value;\r\n    }\r\n\r\n    updateAddressData(address: Geocode) {\r\n        let countryId = (address.CountryCode == 'US' || address.CountryCode == 'USA') ? 1 : (address.CountryCode == 'CA' || address.CountryCode == 'CAN') ? 2 : this.portCreateForm.get('CountryId').value;\r\n        let stateName = (address.StateName != null && address.StateName != '' && address.StateName != undefined) ? address.StateName : address.CountryName;\r\n\r\n        if (stateName) {\r\n            let state = this.statesList.find(st => st.StateName.toLowerCase() == stateName.toLowerCase());\r\n            let stateId = (state && state.StateId) ? state.StateId : this.portCreateForm.get('StateId').value;\r\n            this.portCreateForm.get('StateId').patchValue(stateId);\r\n        }\r\n        else //set first state after filtering by countryID\r\n        {\r\n            let states = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n            if (states && states.length > 0) {\r\n                let stateId = states[0].StateId;\r\n                if (stateId) {\r\n                    this.portCreateForm.get('StateId').patchValue(stateId);\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.portCreateForm.get('Address').patchValue(address.Address);\r\n        this.portCreateForm.get('City').patchValue(address.City);\r\n        this.portCreateForm.get('ZipCode').patchValue(address.ZipCode);\r\n       \r\n        this.portCreateForm.get('CountryId').patchValue(countryId);\r\n\r\n        this.portCreateForm.get('CountyName').patchValue(address.CountyName);\r\n        //this.portCreateForm.get('CountryCode').patchValue(address.CountryCode);     \r\n        //this.portCreateForm.get('StateName').patchValue(address.StateName);\r\n        \r\n\r\n        if (address.Latitude) {\r\n            this.portCreateForm.get('Latitude').patchValue(address.Latitude);\r\n            this.portCreateForm.get('Longitude').patchValue(address.Longitude);\r\n            this.mapConstants.CenterLat = address.Latitude;\r\n            this.mapConstants.CenterLon = address.Longitude;\r\n        }\r\n\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n\r\n    }\r\n    setLatLongValidator(isGeoCoded: any) {\r\n        if (isGeoCoded) {\r\n            let val = [Validators.required];\r\n            this.portCreateForm.get('Latitude').setValidators(val);\r\n            this.portCreateForm.get('Longitude').setValidators(val);\r\n            this.portCreateForm.get('Latitude').updateValueAndValidity();\r\n            this.portCreateForm.get('Longitude').updateValueAndValidity();\r\n        }\r\n        else {\r\n            this.portCreateForm.get('Latitude').clearValidators();\r\n            this.portCreateForm.get('Latitude').updateValueAndValidity();\r\n            this.portCreateForm.get('Longitude').clearValidators();\r\n            this.portCreateForm.get('Longitude').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    getAddressByLatLong(lat: number, long: number) {\r\n        let isGeoCoded = this.portCreateForm.get('IsGeocodeUsed').value;\r\n        if (isGeoCoded && lat && long) {\r\n            this.updateGeoCode(lat, long);\r\n        }\r\n    }\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.portCreateForm.get(name).invalid\r\n            &&\r\n            (\r\n            this.portCreateForm.get(name).dirty\r\n                ||\r\n            this.portCreateForm.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.portCreateForm.get(name).errors.required;\r\n    }\r\n    setAddressValidators(countryId: number) {\r\n        if (countryId && this.portCreateForm)\r\n        {\r\n            let validator: any;\r\n            if (countryId && (countryId == 1 || countryId == 2)) {\r\n                validator = [Validators.required];\r\n            }\r\n            else {\r\n                validator = [];\r\n            }\r\n            this.portCreateForm.get('Address').setValidators(validator);\r\n            this.portCreateForm.get('Address').updateValueAndValidity();\r\n            this.portCreateForm.get('City').setValidators(validator);\r\n            this.portCreateForm.get('City').updateValueAndValidity();\r\n            //this.portCreateForm.get('CountyName').setValidators(validator);\r\n            //this.portCreateForm.get('CountyName').updateValueAndValidity();\r\n            this.portCreateForm.get('ZipCode').setValidators(validator);\r\n            this.portCreateForm.get('ZipCode').updateValueAndValidity();\r\n        }        \r\n    }\r\n\r\n    onSubmit() {      \r\n        this.portCreateForm.markAllAsTouched();\r\n        if (this.portCreateForm.valid) {\r\n            this.IsLoading = true;\r\n            // serverside api to save port\r\n            let port = this.portCreateForm.value;\r\n            this.marineService.saveMarinePort(port).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                    this.portCreateForm.reset();\r\n                    this.clearPanelData();\r\n                    let dismissSlider = document.getElementById('btnCancel') as HTMLElement;\r\n                    dismissSlider.click();\r\n                    this.getMarinePortsData();\r\n                    this.marineService.setReloadMapSubject(port.CountryId);\r\n                } else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    //updateGeoCode(lat: any, lng: any) {\r\n    //    this.addLocationService.GetAddressByLongLat(lat, lng).subscribe(response => {\r\n    //        if (response) {\r\n    //            this.updateAddress(response, true);\r\n    //            this.f.AddressDetails.get('Latitude').patchValue(lat.toFixed(8));\r\n    //            this.f.AddressDetails.get('Longitude').patchValue(lng.toFixed(8));\r\n    //            this.getTimeZoneUsingLatLng(lat, lng);\r\n    //        }\r\n    //    });\r\n    //}\r\n\r\n    \r\n  \r\n}\r\n\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\n","<div class=\"section-marine-ports-map mb-3\">\r\n    <app-marine-ports-map [SelectedCountryId]=\"SelectedCountryId\"></app-marine-ports-map>\r\n</div>\r\n<div class=\"section-marine-ports-grid\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <h4 class=\"pt0 pull-left\">Marine Ports</h4>\r\n                <a (click)=\"createPort('Create Port')\" onclick=\"slidePanel('#create-port','70%')\" class=\"fs18 pull-left ml10\">\r\n                    <i class=\"fa fa-plus-circle fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Add New</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"well bg-white shadowb-b\">\r\n                    <div class=\"ibox mb0\">\r\n                        <div class=\"ibox-content no-padding no-border\">\r\n                            <div id=\"port-details-grid\" class=\"table-responsive\">\r\n                                <table id=\"port-datatable\" data-gridname=\"35\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Address</th>\r\n                                            <th>City</th>\r\n                                            <th>State</th>\r\n                                            <th>Zip/Postal Code</th>\r\n                                            <th>Country</th>\r\n                                            <th>Latitude</th>\r\n                                            <th>Longitude</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let port of MarinePortsData\">\r\n                                            <td>{{port.JobName}}</td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.Address != null\">{{port.Address}}</span>\r\n                                                <span *ngIf=\"port.Address == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.City != null\">{{port.City}}</span>\r\n                                                <span *ngIf=\"port.City == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.State != null\">{{port.State}}</span>\r\n                                                <span *ngIf=\"port.State == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.ZipCode != null\">{{port.ZipCode}}</span>\r\n                                                <span *ngIf=\"port.ZipCode == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.CountryCode != null\">{{port.CountryCode}}</span>\r\n                                                <span *ngIf=\"port.CountryCode == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.Latitude !=null\">{{port.Latitude}}</span>\r\n                                                <span *ngIf=\"port.Latitude ==null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.Longitude !=null\">{{port.Longitude}}</span>\r\n                                                <span *ngIf=\"port.Longitude == null\">--</span>\r\n                                            </td>\r\n                                            <td class=\"text-center\">\r\n                                                <button type=\"button\" (click)=\"createPort('Edit Port');editPort(port);\" class=\"btn btn-link\" onclick=\"slidePanel('#create-port','70%')\"><i class=\"fas fa-edit fs16\"></i></button>\r\n                                                <button type=\"button\" class=\"btn btn-link ml10\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deletePort(port)\"><i class=\"fas fa-trash-alt color-maroon\"></i></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"create-port\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" (click)=\"clearPanelData()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">{{ModalText}}</h3>\r\n            </div>\r\n            <div class=\"mx-3\">\r\n                    <form [formGroup]=\"portCreateForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"create-marineports\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-4 form-group\">\r\n                                            <div class=\"new-job\">\r\n                                                <label class=\"port-info\">\r\n                                                    Name <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                </label>\r\n                                                <input class=\"form-control\" formControlName=\"JobName\" type=\"text\" value=\"\">\r\n                                                <div *ngIf=\"isInvalid('JobName')\" class=\"color-maroon\">\r\n                                                    <div *ngIf=\"isRequired('JobName')\">\r\n                                                        Required.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 form-group\">\r\n                                            <label>Country/Group</label>\r\n                                            <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                            <select class=\"form-control country addressInput\"\r\n                                                    formControlName=\"CountryId\" (change)=\"countryChanged()\">\r\n                                                <option id=\"{{item.Id}}\" [value]=\"item.Id\"\r\n                                                        *ngFor=\"let item of countryList\"\r\n                                                        [selected]=\"item.Id== portCreateForm.get('CountryId').value\">\r\n                                                    {{item.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <div *ngIf=\"isInvalid('CountryId')\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"isRequired('CountryId')\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4\" *ngIf=\"portCreateForm.get('CountryId').value == '4'\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Country</label>\r\n                                                <select class=\"form-control country-group\"\r\n                                                        id=\"AddressDetails_Country_Id\" (change)=\"countryGroupChanged($event)\">\r\n                                                    <option id=\"0\" [value]=\"0\">Select</option>\r\n                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\r\n                                                            *ngFor=\"let item of countryGroupList\">\r\n                                                        {{item.Name}}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row mt20\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-7\">\r\n                                                    <div class=\"wrapper-location\" style=\"display: block;\">\r\n                                                        <div class=\"address-wrapper\"\r\n                                                             [ngClass]=\"{'pntr-none subSectionOpacity': portCreateForm.controls['IsGeocodeUsed'].value == true && portCreateForm.get('CountryId').value != '4'}\">\r\n                                                            <div class=\"address-controls\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-sm-8\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label>Address</label>\r\n                                                                            <span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>\r\n                                                                            <input class=\"form-control address addressInput\"\r\n                                                                                   formControlName=\"Address\" value=\"\">\r\n                                                                            <div *ngIf=\"isInvalid('Address')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('Address')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label for=\"AddressDetails_ZipCode\">Zip</label>\r\n                                                                            <span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>\r\n                                                                            <input class=\"form-control\"\r\n                                                                                   formControlName=\"ZipCode\" type=\"text\" value=\"\"\r\n                                                                                   (change)=\"getAddressByZip()\">\r\n                                                                            <div *ngIf=\"isInvalid('ZipCode')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('ZipCode')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label>City</label>\r\n                                                                            <span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>\r\n                                                                            <input class=\"form-control city addressInput\"\r\n                                                                                   id=\"AddressDetails_City\" formControlName=\"City\"\r\n                                                                                   type=\"text\" value=\"\">\r\n                                                                            <div *ngIf=\"isInvalid('City')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('City')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label>County Name</label>\r\n                                                                            <!--<span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>-->\r\n                                                                            <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\r\n                                                                               data-placement=\"top\"\r\n                                                                               title=\"Correct County name is required by our Tax service to calculate taxes accurately.\"></i>\r\n                                                                            <input class=\"form-control county addressInput\"\r\n                                                                                   id=\"AddressDetails_CountyName\"\r\n                                                                                   formControlName=\"CountyName\" type=\"text\" value=\"\"\r\n                                                                                   autocomplete=\"off\">\r\n                                                                            <!--<div *ngIf=\"isInvalid('CountyName')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('CountyName')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>-->\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label for=\"AddressDetails_State_Id\">\r\n                                                                                State<span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                                            </label>\r\n                                                                            <select class=\"form-control state addressInput triggerTerminalChange\"\r\n                                                                                    id=\"AddressDetails_State_Id\"\r\n                                                                                    name=\"AddressDetails.State.Id\"\r\n                                                                                    formControlName=\"StateId\">\r\n                                                                                <option value=\"\">Select State</option>\r\n                                                                                <option id=\"{{item.StateId}}\" [value]=\"item.StateId\"\r\n                                                                                        *ngFor=\"let item of filteredStatesList\" [selected]=\"item.StateId== portCreateForm.get('StateId').value\">\r\n                                                                                    {{item.StateName}}\r\n                                                                                </option>\r\n                                                                            </select>\r\n                                                                            <div *ngIf=\"isInvalid('StateId')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('StateId')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-md-12\">\r\n                                                                <div class=\"form-check form-group form-check-inline\">\r\n                                                                    <input class=\"form-check-input\" id=\"checkbox-geocodes\"\r\n                                                                           formControlName=\"IsGeocodeUsed\" type=\"checkbox\"\r\n                                                                           [value]=\"false\" (change)=\"setLatLongValidator(portCreateForm.get('IsGeocodeUsed').value)\">\r\n                                                                    <label class=\"form-check-label\"\r\n                                                                           for=\"checkbox-geocodes\">Geo Codes</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-xs-6 col-md-4 combineDiv\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"AddressDetails_Latitude\">Latitude</label>\r\n                                                                    <input class=\"form-control latitude geoInput defaultDisabled\"\r\n                                                                           id=\"AddressDetails_Latitude\"\r\n                                                                           name=\"AddressDetails.Latitude\"\r\n                                                                           formControlName=\"Latitude\" type=\"text\" value=\"0\"\r\n                                                                           [readonly]=\"portCreateForm.get('IsGeocodeUsed').value == false\"\r\n                                                                           (change)=\"getAddressByLatLong(portCreateForm.get('Latitude').value,portCreateForm.get('Longitude').value)\">\r\n                                                                    <div *ngIf=\"isInvalid('Latitude')\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"isRequired('Latitude')\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-xs-6 col-md-4 combineDiv\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"AddressDetails_Longitude\">Longitude</label>\r\n                                                                    <input class=\"form-control longitude geoInput defaultDisabled\"\r\n                                                                           id=\"AddressDetails_Longitude\"\r\n                                                                           formControlName=\"Longitude\" type=\"text\" value=\"0\"\r\n                                                                           [readonly]=\"portCreateForm.get('IsGeocodeUsed').value == false\"\r\n                                                                           (change)=\"getAddressByLatLong(portCreateForm.get('Latitude').value,portCreateForm.get('Longitude').value)\">\r\n                                                                    <div *ngIf=\"isInvalid('Longitude')\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"isRequired('Longitude')\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <!--<div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"AddressDetails_TimeZoneName\">\r\n                                                Time\r\n                                                Zone\r\n                                            </label>\r\n                                            <input class=\"form-control timeZoneName defaultDisabled\"\r\n                                                   id=\"AddressDetails_TimeZoneName\"\r\n                                                   formControlName=\"TimeZoneName\" readonly=\"true\"\r\n                                                   type=\"text\" value=\"\"\r\n                                                   [disableControl]=\" portCreateForm.controls['IsGeocodeUsed'].value == false\">\r\n                                        </div>\r\n                                    </div>-->\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-5\">\r\n                                                <agm-map [zoom]=\"mapConstants.ZoomArea\" [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\">\r\n                                                    <agm-marker [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\" [markerDraggable]=\"true\"\r\n                                                                (dragEnd)=\"markerDragEnd($event)\"\r\n                                                                [iconUrl]=\"mapConstants.IconUrl\"></agm-marker>\r\n                                                </agm-map>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    <div class=\"row mt-3\">\r\n                                        <div class=\"col-sm-12 text-right form-buttons\">\r\n                                            <input type=\"button\" id=\"btnCancel\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearPanelData()\">\r\n                                            <input class=\"btn btn-primary btn-lg no-disable\" type=\"submit\" value=\"Submit\" />\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>        \r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { HandleError } from '../errors/HandleError';\nimport { DropdownCustomItem, DropdownItem } from '../statelist.service';\nimport { Observable, Subject } from 'rxjs';\r\nimport { Geocode } from './models';\r\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarinePortsandvesselsService extends HandleError {\n\n  private urlGetAllCountries = '/Settings/Profile/GetCountriesEx';\n    private urlGetMarinePorts = '/SuperAdmin/SuperAdmin/GetMarinePortsForSuperAdmin';\n    private urlGetCountryList = '/SuperAdmin/SuperAdmin/GetCountryList';\n    private urlGetCountryGroupList = '/SuperAdmin/SuperAdmin/GetCountryGroupList';\n    private urlGetStatesOfAllCountrieslist = \"/SuperAdmin/SuperAdmin/GetStatesOfAllCountries\";\n    private urlGetAddressByZip = \"Validation/GetAddressByZip\";\n    private urlGetaddressbyLatLong = \"/SuperAdmin/SuperAdmin/GetAddressByLongLat\";\n    private urlSaveMarinePort = '/SuperAdmin/SuperAdmin/SaveMarinePort'\n    private urlDeletePort = 'SuperAdmin/SuperAdmin/DeletePort';\n\n    private urlGetMarineVessels = '/SuperAdmin/SuperAdmin/GetMarineVesselsForSuperAdmin';\n    private urlDeleteVessel = 'SuperAdmin/SuperAdmin/DeleteVessel';\n    private urlSaveMarineVessel = '/SuperAdmin/SuperAdmin/SaveMarineVessel'\n\n    public reloadPortMapsSubject: Subject<any>;\n\n  constructor(private httpClient: HttpClient) {\n      super();\n      this.reloadPortMapsSubject = new Subject<any>();\n   }\n\n  public GetAllCountries(){\n    return this.httpClient.get<DropdownItem[]>(this.urlGetAllCountries)\n    .pipe(catchError(this.handleError<DropdownItem[]>('GetAllCountries', [])));\n    \n  }\n\n  public getMarinePorts(countryId:number){\n    return this.httpClient.get<any[]>(this.urlGetMarinePorts+'?countryId='+countryId)\n    .pipe(catchError(this.handleError<any[]>('getMarinePorts', [])));\n    }\n    public getCountryList() {\n        return this.httpClient.get<any[]>(this.urlGetCountryList)\r\n            .pipe(catchError(this.handleError<any[]>('getCountryList', [])));\r\n    }\n    public getCountryGroupList(countryId: number) {\n        return this.httpClient.get<any[]>(this.urlGetCountryGroupList + '?countryId=' + countryId)\r\n            .pipe(catchError(this.handleError<any[]>('getCountryGroupList', [])));\r\n    }\n    public GetStatesOfAllCountries(countryId?: number): Observable<any> {\n        return this.httpClient.get<any>(`${this.urlGetStatesOfAllCountrieslist}?countryId=${countryId}`)\n            .pipe(catchError(this.handleError<any>('GetStatesOfAllCountries', null)));\n    }\n\n    public GetAddressByZip(zipCode: string) {\n        return this.httpClient.get<any>(`${this.urlGetAddressByZip}?zipCode=${zipCode}`)\n            .pipe(catchError(this.handleError<any>('GetAddressByZip', null)));\n    }\n    GetAddressByLongLat(latitude: string, longitude: string): Observable<Geocode> {\n        return this.httpClient.get<any>(`${this.urlGetaddressbyLatLong}?latitude=${latitude}&longitude=${longitude}`)\n            .pipe(catchError(this.handleError<any>('GetAddressByLongLat', null)));\n    }\n    saveMarinePort(port: any) {\n        return this.httpClient.post<any>(this.urlSaveMarinePort, port)\r\n            .pipe(catchError(this.handleError<any>('saveMarinePort', null)));\r\n    }\n    deletePort(id: number) {\n        return this.httpClient.get<any>(`${this.urlDeletePort}?id=${id}`)\r\n            .pipe(catchError(this.handleError<any>('deletePort', null)));\r\n    }\n    public setReloadMapSubject(countryId: any): void {\r\n        this.reloadPortMapsSubject.next(countryId);\r\n    }\n    public getMarineVessels(countryId: number) {\n        return this.httpClient.get<any[]>(this.urlGetMarineVessels + '?countryId=' + countryId)\n            .pipe(catchError(this.handleError<any[]>('getMarineVessels', [])));\n    }\n\n    public deleteVessel(id: number) {\n        return this.httpClient.get<any>(`${this.urlDeleteVessel}?id=${id}`)\r\n            .pipe(catchError(this.handleError<any>('deleteVessel', null)));\r\n    }\n    saveMarineVessel(vessel: any) {\n        return this.httpClient.post<any>(this.urlSaveMarineVessel, vessel)\r\n            .pipe(catchError(this.handleError<any>('saveMarineVessel', null)));\r\n    }\n\n}\n","import { Component, OnInit ,Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport { MarineVesselsModel, MarinePortModel } from '../models';\r\nimport { Subject } from 'rxjs';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MarinePortsandvesselsService } from '../marine-portsandvessels.service';\r\nimport { ConfirmationDialogService } from 'src/app/shared-components/confirmation-dialog/confirmation-dialog.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n  selector: 'app-marinevessels',\r\n  templateUrl: './marinevessels.component.html',\r\n  styleUrls: ['./marinevessels.component.css']\r\n})\r\nexport class MarinevesselsComponent implements OnInit, OnChanges{\r\n    @Input() SelectedCountryId: any;\r\n\r\n    public ModalText: string;\r\n\r\n    public MarineVesselsData: MarineVesselsModel[] = [];\r\n    public MarineVessel: MarineVesselsModel = new MarineVesselsModel();\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n\r\n    vesselCreateForm: FormGroup;\r\n\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n    constructor(private marineService: MarinePortsandvesselsService, private fb: FormBuilder,\r\n        private confirmationdialogueservice: ConfirmationDialogService) { }\r\n    ngOnInit(): void {\r\n        this.ModalText = 'Create Vessel';\r\n        var exportColumns = { columns: [0, 1, 2] };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Vessel Details', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Vessel Details', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            ordering: true,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n\r\n        this.MarineVessel.CountryId = this.SelectedCountryId;\r\n\r\n        this.initializeVesselCreationForm(this.MarineVessel);\r\n        this.getMarineVesselsData();\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\r\n            // get call for grid data\r\n           // this.getMarineVesselsData();            \r\n        }\r\n    }\r\n    createVessel(header: string) {\r\n        this.ModalText = header;\r\n        this.vesselCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n    }\r\n\r\n    getMarineVesselsData() {\r\n        let countryId = this.SelectedCountryId;\r\n        this.IsLoading = true;\r\n        this.marineService.getMarineVessels(countryId).subscribe((data) => {\r\n            if (data) {\r\n                jQuery(\"#vessels-datatable\").DataTable().clear().destroy();\r\n                console.log(data);\r\n                this.MarineVesselsData = data;\r\n                this.dtTrigger.next();\r\n                this.IsLoading = false;\r\n            }\r\n\r\n        });\r\n    }\r\n    initializeVesselCreationForm(vessel: MarineVesselsModel): FormGroup {\r\n        this.vesselCreateForm = this.fb.group({\r\n            Id: this.fb.control(vessel.Id),\r\n            Name: this.fb.control(vessel.Name, [Validators.required]),\r\n            IMONumber: this.fb.control(vessel.IMONumber),\r\n            Flag: this.fb.control(vessel.Flag),\r\n            CountryId: this.fb.control(vessel.CountryId)\r\n            //Customers: this.fb.control(vessel.Customers),            \r\n        })\r\n        return this.vesselCreateForm;\r\n    }\r\n    editVessel(vessel: MarineVesselsModel) {\r\n        if (vessel && vessel.Id > 0) {\r\n            this.vesselCreateForm.get('Name').setValue(vessel.Name);\r\n            this.vesselCreateForm.get('Id').setValue(vessel.Id);\r\n            this.vesselCreateForm.get('CountryId').setValue(vessel.CountryId);\r\n            this.vesselCreateForm.get('IMONumber').setValue(vessel.IMONumber);\r\n            this.vesselCreateForm.get('Flag').setValue(vessel.Flag);\r\n            //this.vesselCreateForm.get('Customers').setValue(vessel.Customers);          \r\n        }\r\n    }\r\n    deleteVessel(vessel) {\r\n        if (vessel) {\r\n            this.marineService.deleteVessel(vessel.Id).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.getMarineVesselsData();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    clearPanelData() {\r\n        this.vesselCreateForm.reset();\r\n        this.vesselCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n    }\r\n   \r\n    \r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.vesselCreateForm.get(name).invalid\r\n            &&\r\n            (\r\n            this.vesselCreateForm.get(name).dirty\r\n                ||\r\n            this.vesselCreateForm.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.vesselCreateForm.get(name).errors.required;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.vesselCreateForm.markAllAsTouched();\r\n        if (this.vesselCreateForm.valid) {\r\n            this.IsLoading = true;\r\n            // serverside api to save port\r\n            let port = this.vesselCreateForm.value;\r\n            this.marineService.saveMarineVessel(port).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                    this.vesselCreateForm.reset();\r\n                    this.clearPanelData();\r\n                    let dismissSlider = document.getElementById('btnCancel') as HTMLElement;\r\n                    dismissSlider.click();\r\n                    this.getMarineVesselsData();\r\n                } else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n}\r\n","<div class=\"section-marine-vessels-grid\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <h4 class=\"pt0 pull-left\">Create Vessel</h4>\r\n                <a (click)=\"createVessel('Create Vessel')\" onclick=\"slidePanel('#create-vessels','70%')\" class=\"fs18 pull-left ml10\">\r\n                    <i class=\"fa fa-plus-circle fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Add New</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"well bg-white shadowb-b\">\r\n                    <div class=\"ibox mb0\">\r\n                        <div class=\"ibox-content no-padding no-border\">\r\n                            <div id=\"vessel-details-grid\" class=\"table-responsive\">\r\n                                <table id=\"vessels-datatable\" data-gridname=\"36\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>IMONumber</th>\r\n                                            <th>Flag</th>\r\n                                            <!--<th>Customers</th>-->                                          \r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let vessel of MarineVesselsData\">\r\n                                            <td>{{vessel.Name}}</td>\r\n                                            <td>\r\n                                                <span *ngIf=\"vessel.IMONumber != null\">{{vessel.IMONumber}}</span>\r\n                                                <span *ngIf=\"vessel.IMONumber == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"vessel.Flag != null\">{{vessel.Flag}}</span>\r\n                                                <span *ngIf=\"vessel.Flag == null\">--</span>\r\n                                            </td>\r\n                                            <!--<td>\r\n                                                <span *NgFor=\" let customer of vessel.Customers; let isLast = last\">\r\n                                                    {{ customer.Name}} <span *ngIf=\"!isLast\">,</span>\r\n                                                </span>\r\n                                            </td>-->                                                                                         \r\n                                            <td class=\"text-center\">\r\n                                                <button type=\"button\" (click)=\"createVessel('Edit Vessel');editVessel(vessel);\" class=\"btn btn-link\" onclick=\"slidePanel('#create-vessels','70%')\"><i class=\"fas fa-edit fs16\"></i></button>\r\n                                                <button type=\"button\" class=\"btn btn-link ml10\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deleteVessel(vessel)\"><i class=\"fas fa-trash-alt color-maroon\"></i></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"create-vessels\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" (click)=\"clearPanelData()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">{{ModalText}}</h3>\r\n            </div>\r\n            <div class=\"mx-3\">\r\n                <form [formGroup]=\"vesselCreateForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"create-marinevessels\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <div class=\"new-vessel\">\r\n                                            <label class=\"port-info\">\r\n                                                Name <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                            </label>\r\n                                            <input class=\"form-control\" formControlName=\"Name\" type=\"text\" value=\"\">\r\n                                            <div *ngIf=\"isInvalid('Name')\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"isRequired('Name')\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <label>IMO Number</label>\r\n                                        <input class=\"form-control\" formControlName=\"IMONumber\" type=\"text\" value=\"\">\r\n                                        <!--<span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                        <div *ngIf=\"isInvalid('IMONumber')\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"isRequired('IMONumber')\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>-->\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Flag</label>\r\n                                            <input class=\"form-control\" formControlName=\"Flag\" type=\"text\" value=\"\">\r\n                                        </div>\r\n                                        <!--div *ngIf=\"isInvalid('Flag')\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"isRequired('Flag')\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>-->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-sm-12 text-right form-buttons\">\r\n                                        <input type=\"button\" id=\"btnCancel\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearPanelData()\">\r\n                                        <input class=\"btn btn-primary btn-lg no-disable\" type=\"submit\" value=\"Submit\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MarinePortsandvesselsService } from '../marine-portsandvessels.service';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Country } from 'src/app/self-service-alias/models/location';\r\ndeclare var currentCompanyId: any;\r\ndeclare var defaultCountryId :any;\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styleUrls: ['./master.component.css']\r\n})\r\nexport class MasterComponent implements OnInit {\r\n    viewType = 1;\r\n    //country selection related variables\r\n    CountryList: DropdownItem[] = [];\r\n    public SelectedCountryId: number;\r\n\r\n    IsLoading = false;\r\n    constructor(private marineService: MarinePortsandvesselsService) { }\r\n\r\n   ngOnInit(): void {\r\n        this.getCountries();\r\n        this.SelectedCountryId = Country.USA;\r\n   }\r\n    public changeViewType(value) {\r\n        this.viewType = value;\r\n    }\r\n    private getCountries() {\r\n        this.marineService.GetAllCountries().subscribe((data)=>{\r\n         this.CountryList = data;\r\n        });\r\n    }\r\n\r\n    public onCountryChange(event) {\r\n      this.SelectedCountryId = event.target.value;\r\n    }\r\n\r\n}\r\n","<div class=\"row mb-3\">\r\n    <div class=\"col-sm-11\">\r\n        <div class=\"dib border pa5 radius-capsule shadow-b bg-white\">\r\n            <div class=\"btn-group btn-filter\">\r\n                <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"1\"\r\n                       [checked]=\"viewType==1\">\r\n                <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Ports</label>\r\n                <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"2\"\r\n                       [checked]=\"viewType==2\">\r\n                <label class=\"btn\" (click)=\"changeViewType(2)\">Vessels</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-1\">\r\n        <select class=\"form-control mt-1\" (change)=\"onCountryChange($event)\">\r\n            <option *ngFor=\"let country of CountryList\" [value]=\"country.Id\"\r\n                    [selected]=\"SelectedCountryId==country.Id\">\r\n                <i class=\"fa fa-airbnb fa-2x\"></i> {{country.Code}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <app-marineports *ngIf=\"viewType==1\" [SelectedCountryId]=\"SelectedCountryId\"></app-marineports>\r\n        <app-marinevessels *ngIf=\"viewType==2\" [SelectedCountryId]=\"SelectedCountryId\"></app-marinevessels>\r\n    </div>\r\n</div>\r\n\r\n","\r\n\r\nexport class MarinePortModel {\r\n    constructor() {\r\n        this.IsGeoCoded = false;\r\n        this.Latitude = null;\r\n        this.Longitude = null;\r\n    }\r\n    CustomerName?: string;\r\n    CustomerId?: number;\r\n    CountryId?: number;\r\n    CountryCode?: string;\r\n    JobID?: number;\r\n    JobName?: string;\r\n    Latitude?: number;\r\n    Longitude?: number;\r\n    Address?: string;\r\n    City?: string;\r\n    CityId?: number;\r\n    State?: string;\r\n    StateID?: number;\r\n    ZipCode?: string;\r\n    ContactPersonName?: string;\r\n    ContactPhoneNumber?: string;\r\n    IsGeoCoded: boolean;\r\n    CountyName?: string;\r\n}\r\n\r\nexport class Geocode {\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n    CountyName: string;\r\n    StateCode: string;\r\n    StateName: string;\r\n    City: string;\r\n    CountryCode: string;\r\n    CountryName: string;\r\n    ZipCode: string;\r\n}\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class MarineVesselsModel {\r\n    Id: number;\r\n    Name: string;\r\n    IMONumber: string;\r\n    Flag: string;\r\n    //Customers: DropdownItem[];\r\n    CountryId: number;\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePicker, CustomDatePicker, TimePicker } from '../directives/myDateTimePicker';\r\nimport { startsWithPipe, startsWithJobPipe } from '../carrier-companies/search-filter';\r\nimport { RequiredIfTrueValidator } from '../directives/required-if-true.directive';\r\nimport { RequiredIfNotEmptyValidator } from '../directives/required-if-not-empty.directive';\r\nimport { TimeSmallerThanOrEqualToValidator } from '../directives/time-smaller-than-or-equal-to-validator';\r\nimport { TimeGreaterThanOrEqualToValidator } from '../directives/time-greater-than-or-equal-to-validator';\r\nimport { NumberWithDecimal } from '../directives/numberWithDecimal';\r\nimport { OnlynumberDirective } from '../directives/numbersOnly';\r\nimport { OnlynumberAlphaDirective } from '../directives/numbersAlphaOnly';\r\nimport { ClickOutsideDirective } from '../directives/click-outside.directive';\r\nimport { DisableControlDirective } from '../directives/disable-control.directive';\r\nimport { CopyDirective } from '../directives/copy.directive';\r\nimport { SortingPipe } from '../directives/sorting.pipe';\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        DatePicker,\r\n        CustomDatePicker,\r\n        TimePicker,\r\n        startsWithPipe,\r\n        startsWithJobPipe,\r\n        RequiredIfTrueValidator,\r\n        RequiredIfNotEmptyValidator,\r\n        TimeSmallerThanOrEqualToValidator,\r\n        TimeGreaterThanOrEqualToValidator,\r\n        NumberWithDecimal,\r\n        ClickOutsideDirective,\r\n        DisableControlDirective,\r\n        CopyDirective,\r\n        SortingPipe,\r\n        OnlynumberDirective,\r\n        OnlynumberAlphaDirective\r\n    ],\r\n\r\n    imports: [\r\n\r\n    ],\r\n\r\n    exports: [\r\n        DatePicker,\r\n        CustomDatePicker,\r\n        TimePicker,\r\n        startsWithPipe,\r\n        startsWithJobPipe,\r\n        RequiredIfTrueValidator,\r\n        RequiredIfNotEmptyValidator,\r\n        TimeSmallerThanOrEqualToValidator,\r\n        TimeGreaterThanOrEqualToValidator,\r\n        NumberWithDecimal,\r\n        ClickOutsideDirective,\r\n        DisableControlDirective,\r\n        CopyDirective,\r\n        SortingPipe,\r\n        OnlynumberDirective,\r\n        OnlynumberAlphaDirective\r\n    ]\r\n})\r\n\r\nexport class DirectiveModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SidebarModule } from 'ng-sidebar';\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\r\n        HttpClientModule,\r\n        SidebarModule.forRoot()\r\n    ],\r\n    exports: [\r\n\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        SidebarModule,\r\n    ]\r\n})\r\n\r\nexport class GlobalModule { }\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { environment } from '../../environments/environment'\r\nimport { GlobalModule } from './global.module';\r\nimport { DirectiveModule } from './directive.module';\r\nimport { CreateTrailerComponent } from '../shared-components/create-trailer/create-trailer.component';\r\nimport { DemandCaptureChartComponent } from '../shared-components/demand-capture-chart/demand-capture-chart.component';\r\nimport { DipTestComponent } from '../shared-components/dip-test/dip-test.component';\r\nimport { SendbirdComponent } from '../shared-components/sendbird/sendbird.component';\r\nimport { BuyerSendbirdComponent } from '../shared-components/sendbird/buyer-sendbird/buyer-sendbird.component';\r\nimport { ForcastingTankViewComponent } from '../shared-components/forcasting/tank-view-component';\r\nimport { ConfirmationDialogComponent } from '../shared-components/confirmation-dialog/confirmation-dialog.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { TankChartModule } from '../tank-chart/tank-chart.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { ConfirmationDialogService } from '../shared-components/confirmation-dialog/confirmation-dialog.service';\r\n\r\nconst googleMapAPIKey = environment.googleMapApiKey;\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        DemandCaptureChartComponent,\r\n        SendbirdComponent,\r\n        CreateTrailerComponent,\r\n        DipTestComponent,\r\n        BuyerSendbirdComponent,\r\n        ForcastingTankViewComponent,\r\n        ConfirmationDialogComponent\r\n    ],\r\n\r\n    imports: [\r\n        GlobalModule,\r\n        NgbModule,\r\n        AgmCoreModule.forRoot({\r\n            apiKey: googleMapAPIKey\r\n        }),\r\n        NgMultiSelectDropDownModule.forRoot(),\r\n        ConfirmationPopoverModule.forRoot({\r\n            confirmButtonType: 'danger' // set defaults here\r\n        }),\r\n        DirectiveModule,\r\n        DataTablesModule,\r\n        TankChartModule,\r\n        AutocompleteLibModule,\r\n\r\n    ],\r\n\r\n    exports: [\r\n        GlobalModule,\r\n        NgbModule,\r\n        DemandCaptureChartComponent,\r\n        SendbirdComponent,\r\n        CreateTrailerComponent,\r\n        BuyerSendbirdComponent,\r\n        ForcastingTankViewComponent,\r\n        AgmCoreModule,\r\n        NgMultiSelectDropDownModule,\r\n        ConfirmationPopoverModule,\r\n        DipTestComponent,\r\n        AutocompleteLibModule,\r\n    ],\r\n    providers: [ ConfirmationDialogService ],\r\n    entryComponents: [ConfirmationDialogComponent],\r\n})\r\n\r\nexport class SharedModule { }\r\n","export const sum = (array: any, key: string) => {\r\n    return array.reduce((sum, thisObject) => {\r\n        return (thisObject['ScheduleQuantityType'] > 1) ? sum : sum + (thisObject[key] as number);\r\n    }, 0);\r\n}\r\n\r\nexport const min = (array: any, key: string) => {\r\n    return array.reduce((min, thisObject) => {\r\n        let thisNumber = thisObject[key] as number;\r\n        min = min > thisNumber ? thisNumber : min;\r\n        return min;\r\n    }, Number.MAX_VALUE);\r\n}\r\n\r\nexport const max = (array: any, key: string) => {\r\n    return array.reduce((max, thisObject) => {\r\n        let thisNumber = thisObject[key] as number;\r\n        max = max > thisNumber ? max : thisNumber;\r\n        return min;\r\n    }, Number.MIN_VALUE);\r\n}\r\n\r\n// Accepts the array and key\r\nexport const groupBy = (array: any, key: string) => {\r\n    // Return the end result\r\n    let index = 0;\r\n    return array.reduce((result, currentValue) => {\r\n        // If an array already present for key, push it to the array. Else create an array and push the object\r\n        (result[currentValue[key]] = result[currentValue[key]] || []).push(currentValue);\r\n        // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n        return result;\r\n    }, {}); // empty object is the initial value for result object\r\n};\r\n\r\n// Accepts the array and key\r\nexport const sortBy = (array: any, key: string) => {\r\n    // Return the end result\r\n    return array.sort((t1, t2) => {\r\n        const value1 = t1[key];\r\n        const value2 = t2[key];\r\n        if (value1 > value2) { return 1; }\r\n        if (value1 < value2) { return -1; }\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport const sortByDesc = (array: any, key: string) => {\r\n    // Return the end result\r\n    return array.sort((t1, t2) => {\r\n        const value1 = t1[key];\r\n        const value2 = t2[key];\r\n        if (value1 < value2) { return 1; }\r\n        if (value1 > value2) { return -1; }\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport const sortArrayTwice = (array: any, key1: string, key2: string) => {\r\n    try {\r\n        array.sort((a, b) => a[key1].toString().localeCompare(b[key1].toString()) || a[key2] - b[key2]);\r\n        \r\n    }\r\n    catch (Error) {\r\n        console.log(Error);\r\n       \r\n    }\r\n    return array;\r\n}\r\nexport const sortByKeyAsc = (array, key) => {\r\n    return array.sort(function (a, b) {\r\n        var x = a[key]; var y = b[key];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n    });\r\n}\r\nexport const groupDrsByProduct = (drs: any): any => {\r\n    let groupedDrs = groupBy(drs, 'ProductType');\r\n    let keys = Object.keys(groupedDrs)\r\n    let productWiseDrs = [];\r\n    keys.forEach(key => {\r\n        let groupItems = groupedDrs[key];\r\n        if (groupItems && groupItems.length > 0) {\r\n            let productDr = JSON.parse(JSON.stringify(groupItems[0]));\r\n            productDr.RequiredQuantity = sum(groupItems, 'RequiredQuantity');\r\n            productDr.IsDRMissed = groupItems.findIndex(t => t.ParentId != null) != -1;\r\n            productDr.IsDRExists = true;\r\n            productDr.SelectedDate = groupItems[0].SelectedDate;\r\n            productDr.ScheduleStartTime = groupItems[0].ScheduleStartTime;\r\n            productDr.ScheduleEndTime = groupItems[0].ScheduleEndTime;\r\n            productDr.Priority = min(groupItems, 'Priority');\r\n            productDr.Notes = getExistingValue(groupItems, 'Notes');\r\n            productWiseDrs.push(productDr);\r\n        }\r\n    });\r\n    return productWiseDrs;\r\n}\r\nexport const groupDrsByMultipleKey = (array, f): any => {\r\n    let groups = {};\r\n    array.forEach(function (o) {\r\n        var group = JSON.stringify(f(o));\r\n        groups[group] = groups[group] || [];\r\n        groups[group].push(o);\r\n    });\r\n    var keys = Object.keys(groups);\r\n    let productWiseDrs = [];\r\n    keys.forEach(key => {\r\n        let groupItems = groups[key];\r\n        if (groupItems && groupItems.length > 0) {\r\n            let productDr = JSON.parse(JSON.stringify(groupItems[0]));\r\n            productDr.RequiredQuantity = sum(groupItems, 'RequiredQuantity');\r\n            productDr.IsDRMissed = groupItems.findIndex(t => t.ParentId != null) != -1;\r\n            productDr.IsDRExists = true;\r\n            productDr.Priority = min(groupItems, 'Priority');\r\n            productDr.Notes = getExistingValue(groupItems, 'Notes');\r\n            productWiseDrs.push(productDr);\r\n        }\r\n    });\r\n    return productWiseDrs;\r\n}\r\n//export const groupDrsByBlendGroupId = (drs: any): any => {\r\n//    let groupedDrs = groupBy(drs, 'BlendedGroupId');\r\n//    let keys = Object.keys(groupedDrs)\r\n//    let productWiseDrs = [];\r\n//    keys.forEach(key => {\r\n//        let groupItems = groupedDrs[key];\r\n//        if (groupItems && groupItems.length > 0) {\r\n//            let productDr = JSON.parse(JSON.stringify(groupItems[0]));\r\n//            productDr.RequiredQuantity = sum(groupItems, 'RequiredQuantity');\r\n//            productDr.BlendedProductName = getBlendProductName(groupItems);\r\n//            productDr.AdditiveProductName = getAdditiveProductName(groupItems);\r\n//            productWiseDrs.push(productDr);\r\n//        }\r\n//    });\r\n//    return productWiseDrs;\r\n//}\r\n\r\n//export const getBlendProductName = (drs: any): any => {\r\n//    return drs.filter(t => !t.IsAdditive).map(function (item) {\r\n//        return item.ProductType;\r\n//    }).filter((v, i, a) => a.indexOf(v) === i).join(\", \");\r\n//}\r\n\r\n//export const getAdditiveProductName = (drs: any): any => {\r\n//    return drs.filter(t => t.IsAdditive).map(function (item) {\r\n//        return item.FuelType;\r\n//    }).join(\", \");\r\n//}\r\n\r\nexport const getExistingValue = (array: any, key: string) => {\r\n    return array.reduce((val, thisObject) => {\r\n        let thisValue = thisObject[key] as string;\r\n        if (thisValue != undefined && thisValue != null && thisValue != \"\") {\r\n            val = val + thisValue + \" \";\r\n        }\r\n        return val;\r\n    }, \"\");\r\n}\r\n\r\nexport const getUniqueId = (): string => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\nexport const getRecurringUniqueId = (): string => {\r\n    return \"recurring\" + Math.random().toString(16).slice(2);\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { HandleError } from '../../app/errors/HandleError';\nimport { CustomersModel, DeliveryRequestInputModel, Geocode, ValidateDREntryResponse } from './sales-user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesUserService extends HandleError{\n  private getTruckLoadTypeUrl = \"/SalesUser/SourcingRequest/TruckLoadType\";\n  private getFreightOnBoardTypesUrl = \"/SalesUser/SourcingRequest/FreightOnBoardType\";\n  private getJoblistUrl = \"/SalesUser/SourcingRequest/GetJobLists\";\n  private isSourcingCompanyExistUrl = \"/SalesUser/SourcingRequest/IsSourcingCompanyExist\";\n  private getJobDetailsUrl = \"/SalesUser/SourcingRequest/GetJobDetails\";\n  private getCountrylistUrl = \"/SalesUser/SourcingRequest/GetCountryList\";\n  private getCurrancylistUrl = \"/SalesUser/SourcingRequest/GetCurrenyList\";\n  private getUOMlistUrl = \"/SalesUser/SourcingRequest/GetUoMList\";\n  private getStatesOfAllCountrieslistUrl = \"/SalesUser/SourcingRequest/GetStatesOfAllCountries\";\n  private getFuelProductslistUrl = \"/SalesUser/SourcingRequest/GetFuelProducts\";\n  private getFuelProductsByZiplistUrl = \"/SalesUser/SourcingRequest/GetProductListByZip\";\n  private getQuantityIndicatorTypeslistUrl = \"/SalesUser/SourcingRequest/QuantityIndicatorTypes\";\n  private getRackAvgPricingTypelistUrl = \"/SalesUser/SourcingRequest/GetRackAvgPricingTypes\";\n  private getAllFeeTypeslistUrl = \"/SalesUser/SourcingRequest/GetAllFeeTypes\";\n  private getAllFeeSubTypeslistUrl = \"/SalesUser/SourcingRequest/GetAllFeeSubTypes\";\n  private getAllFeeConstraintTypeslistUrl = \"/SalesUser/SourcingRequest/GetAllFeeConstraintTypes\";\n  private getPaymentMethodslistUrl = \"/SalesUser/SourcingRequest/PaymentMethods\";\n  private getSourcingRequestsUrl = \"/SalesUser/SourcingRequest/GetSourcingRequestGrid\";\n  private getAllBuyerCompaniesUrl = \"/SalesUser/SourcingRequest/GetAllBuyerCompanies\";\n  private getGetSourcingCompanyContactPersonsUrl = \"/SalesUser/SourcingRequest/GetSourcingCompanyContactPersons\";\n  private getGetSourcingContactPersonDetailsUrl = \"/SalesUser/SourcingRequest/GetSourcingContactPersonDetails\";\n  private postSourcingRequestUrl = \"/SalesUser/SourcingRequest/Create\";\n  private postSourcingRequestEditUrl = \"/SalesUser/SourcingRequest/Edit\";\n  private getSourcingRequestUrl = \"/SalesUser/SourcingRequest/GetRequestDetails\";\n  private getPreferencesSettingsUrl = \"/SalesUser/SourcingRequest/GetPreferencesSettings\";\n  private postCreateOrderFromSourcingRequestUrl = \"/SalesUser/SourcingRequest/CreateOrderFromSourcingRequest\";\n  private ChangesSourcingRequestStatusUrl = \"/SalesUser/SourcingRequest/ChangesSourcingRequestStatus\";\n  private getSourcingCityGroupTerminalsUrl=\"SalesUser/SourcingRequest/GetSourcingCityGroupTerminals\";\n  private getIsCitySourcingGroupTerminalPriceAvailableUrl=\"SalesUser/SourcingRequest/IsCitySourcingGroupTerminalPriceAvailable\";\n  private getClosedTerminalUrl=\"SalesUser/SourcingRequest/GetClosedTerminal\";\n  private getOpisTerminalslUrl=\"SalesUser/SourcingRequest/GetOpisTerminals\";\n  private getaddressByZipUrl=\"Validation/GetAddressByZip\";\n\n  /*Sales Form DR*/\n  private UrlGetJobDetailsFrom = \"/Order/GetJobDetails\";\n  private UrlGetCreateDREntryForm = \"/SalesUser/Dashboard/CreateSalesDR\";\n  private UrlGetValidateDREntryFormUrl = \"/SalesUser/Dashboard/ValidateSalesDR\";\n  private UrlGetAllBuyersForAllRegions = \"/SalesUser/Dashboard/GetCustomersJobsForSalesDR\";\n  private UrlGetProductsForSalesDR = \"/SalesUser/Dashboard/GetProductsForSalesDR\";\n  /*END Sales Form DR*/\n    \n\n  private GetPricingCodesUrl = \"/SalesUser/SourcingRequest/GetPricingCodes\";\n  private GetUserContextUrl = \"/SalesUser/SourcingRequest/GetUserContext\";\n  private GetSalesUserOrdersUrl = \"/SalesUser/Dashboard/GetSalesUserOrders\";\n  private IsPhoneNumberValidUrl = \"/Validation/IsPhoneNumberValid\";\n  private UpdateViewedStatusUrl = \"/SalesUser/SourcingRequest/UpdateViewedStatus\";\n  // private GetaddressbyLatLongUrl = \"https://maps.googleapis.com/maps/api/geocode/json\";\n    private GetaddressbyLatLongUrl = \"/Supplier/Order/GetAddressByLongLat\";\n\n    private urlGetCountryGroupList = \"/SalesUser/SourcingRequest/GetCountryGroupList\"; \n\n\n  constructor(private httpClient: HttpClient) { super(); }\n\n  public GetAllTPOCompanies(): Observable<any> {\n      return this.httpClient.get<any>(this.getAllBuyerCompaniesUrl)\n      .pipe(catchError(this.handleError<any>('GetAllTPOCompanies', null)));\n  }\n  public GetSourcingCompanyContactPersons(companyId:number): Observable<any> {\n    return this.httpClient.get<any>(`${this.getGetSourcingCompanyContactPersonsUrl}?companyId=${companyId}`)\n      .pipe(catchError(this.handleError<any>('GetSourcingCompanyContactPersons', null)));\n  }\n  public GetSourcingContactPersonDetails(userId:number): Observable<any> {\n    return this.httpClient.get<any>(`${this.getGetSourcingContactPersonDetailsUrl}?userId=${userId}`)\n      .pipe(catchError(this.handleError<any>('GetAllTPGetSourcingContactPersonDetailsOCompanies', null)));\n  }\n\n  public GetTruckLoadType(): Observable<any> {\n    return this.httpClient.get<any>(this.getTruckLoadTypeUrl)\n      .pipe(catchError(this.handleError<any>('GetTruckLoadType', null)));\n  }\n  public GetFreightOnBoardTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getFreightOnBoardTypesUrl)\n      .pipe(catchError(this.handleError<any>('GetFreightOnBoardTypes', null)));\n  }\n  public GetJobLists(companyName:string ,  isFtl:boolean, foAsTerminal:boolean): Observable<any> {\n    return this.httpClient.get<any>( `${this.getJoblistUrl}?companyName=${companyName}&isFtl=${isFtl}&foAsTerminal=${foAsTerminal}`)\n      .pipe(catchError(this.handleError<any>('GetJobLists', null)));\n  }\n\n  public GetJobDetails(jobName:string,companyName:string ): Observable<any> {\n    return this.httpClient.get<any>( `${this.getJobDetailsUrl}?jobName=${jobName}&companyName=${companyName}`)\n      .pipe(catchError(this.handleError<any>('GetJobDetails', null)));\n  }\n  public GetCountryList(): Observable<any> {\n    return this.httpClient.get<any>(this.getCountrylistUrl)\n      .pipe(catchError(this.handleError<any>('GetCountryList', null)));\n  }\n  public GetCurrenyList(): Observable<any> {\n    return this.httpClient.get<any>(this.getCurrancylistUrl)\n      .pipe(catchError(this.handleError<any>('getCurrancylistUrl', null)));\n  }\n\n    public GetCountryGroupList(countryId: number): Observable<any>{\n        return this.httpClient.get<any>(this.urlGetCountryGroupList + '?countryId=' + countryId)\n            .pipe(catchError(this.handleError<any>('GetCountryGroupList', null)));\n    }\n  \n  public GetUoMList(): Observable<any> {\n    return this.httpClient.get<any>(this.getUOMlistUrl)\n      .pipe(catchError(this.handleError<any>('GetUoMList', null)));\n  }\n  public GetStatesOfAllCountries(countryId?:number): Observable<any> {\n    return this.httpClient.get<any>(`${this.getStatesOfAllCountrieslistUrl}?countryId=${countryId}`)\n      .pipe(catchError(this.handleError<any>('GetStatesOfAllCountries', null)));\n  }\n  public GetFuelProducts(productDisplayGroupId:any, companyId:any, jobId:any): Observable<any> {\n    return this.httpClient.get<any>(`${this.getFuelProductslistUrl}?productDisplayGroupId=${productDisplayGroupId}&companyId=${companyId}&jobId=${jobId}`)\n      .pipe(catchError(this.handleError<any>('GetFuelProducts', null)));\n  }\n  public GetProductListByZip(zipCode:any): Observable<any> {\n    return this.httpClient.get<any>(`${this.getFuelProductsByZiplistUrl}?zipCode=${zipCode}`)\n      .pipe(catchError(this.handleError<any>('GetProductListByZip', null)));\n  }\n  public QuantityIndicatorTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getQuantityIndicatorTypeslistUrl)\n      .pipe(catchError(this.handleError<any>('QuantityIndicatorTypes', null)));\n  }\n  public GetRackAvgPricingTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getRackAvgPricingTypelistUrl)\n      .pipe(catchError(this.handleError<any>('GetRackAvgPricingTypes', null)));\n  }\n  public GetAllFeeTypes( companyId:any, Currency:any , truckLoadType:any ): Observable<any> {\n    return this.httpClient.get<any>(`${this.getAllFeeTypeslistUrl}?companyId=${companyId}&Currency=${Currency}&truckLoadType=${truckLoadType}`)\n      .pipe(catchError(this.handleError<any>('GetAllFeeTypes', null)));\n  }\n  public GetAllFeeSubTypes(feeTypeId:any, Currency:any): Observable<any> {\n    return this.httpClient.get<any>( `${this.getAllFeeSubTypeslistUrl}?feeTypeId=${feeTypeId}&Currency=${Currency}`)\n      .pipe(catchError(this.handleError<any>('GetAllFeeSubTypes', null)));\n  }\n  public GetAllFeeConstraintTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getAllFeeConstraintTypeslistUrl)\n      .pipe(catchError(this.handleError<any>('GetAllFeeConstraintTypes', null)));\n  }\n  public PaymentMethods(): Observable<any> {\n    return this.httpClient.get<any>(this.getPaymentMethodslistUrl)\n      .pipe(catchError(this.handleError<any>('PaymentMethods', null)));\n  }\n    public GetSourcingRequests(RequestStatus: any, isFromDashboard:any= false): Observable<any> {\n        return this.httpClient.get<any>(`${this.getSourcingRequestsUrl}?RequestStatus=${RequestStatus}&isFromDashboard=${isFromDashboard}`)\n      .pipe(catchError(this.handleError<any>('GetSourcingRequestsUrl', null)));\n  }\n\n  CreateSourcingRequest(sourcingRequestModel: any): Observable<any> {\n    return this.httpClient.post<any>(this.postSourcingRequestUrl, sourcingRequestModel)\n        .pipe(catchError(this.handleError<any>('CreateSourcingRequest', null)));\n  }\n  public GetPreferencesSettings(): Observable<any> {\n    return this.httpClient.get<any>(this.getPreferencesSettingsUrl)\n      .pipe(catchError(this.handleError<any>('GetPreferencesSettings', null)));\n  }\n\n  public GetSourcingDetailsById(id): Observable<any> {\n    return this.httpClient.get<any>(`${this.getSourcingRequestUrl}?id=${id}`)\n      .pipe(catchError(this.handleError<any>('GetSourcingDetailsById', null)));\n  }\n  CreateOrderFromSourcingRequest(sourcingRequestModel: any): Observable<any> {\n    return this.httpClient.post<any>(this.postCreateOrderFromSourcingRequestUrl, sourcingRequestModel)\n        .pipe(catchError(this.handleError<any>('CreateOrderFromSourcingRequest', null)));\n  }\n\n\n  public SaveEditSourcingDetails(sourcingRequestModel: any): Observable<any> {\n    return this.httpClient.post<any>(this.postSourcingRequestEditUrl, sourcingRequestModel)\n        .pipe(catchError(this.handleError<any>('SaveEditSourcingDetails', null)));\n  }\n  public ChangesSourcingRequestStatus(requestStatus: any,Id: any): Observable<any> {\n    var input = {sourcingRequestStatus: requestStatus,Id:Id}\n    return this.httpClient.post<any>(this.ChangesSourcingRequestStatusUrl, input)\n        .pipe(catchError(this.handleError<any>('ChangesSourcingRequestStatus', null)));\n  }\n\n  public IsSourcingCompanyExist(IsNewCompany:any,CompanyName:any): Observable<any> {\n    return this.httpClient.get<any>(`${this.isSourcingCompanyExistUrl}?IsNewCompany=${IsNewCompany}&CompanyName=${CompanyName}`)\n      .pipe(catchError(this.handleError<any>('IsSourcingCompanyExist', null)));\n  }\n    public GetSourcingCityGroupTerminals(stateId: any,sourceId: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getSourcingCityGroupTerminalsUrl}?stateId=${stateId}&sourceId=${sourceId}`)\n            .pipe(catchError(this.handleError<any>('GetSourcingCityGroupTerminals', null)));\n    }\n    public IsCitySourcingGroupTerminalPriceAvailable(jobId: any, fueltypeId: any, selectedCityRackId: any, lattitude?: any, longitude?: any, countryCode?: string, sourceId?: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getIsCitySourcingGroupTerminalPriceAvailableUrl}?jobId=${jobId}&fueltypeId=${fueltypeId}&fueltypeId=${selectedCityRackId}&lattitude=${lattitude}&countryCode=${countryCode}&sourceId=${sourceId}`)\n            .pipe(catchError(this.handleError<any>('IsCitySourcingGroupTerminalPriceAvailable', null)));\n    }\n    public GetClosedTerminal(fuelTypeId: any, latitude: any, longitude: any, countryId: any, pricingCodeId: any, terminal: string, pricingSourceId: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getClosedTerminalUrl}?fuelTypeId=${fuelTypeId}&latitude=${latitude}&longitude=${longitude}&countryId=${countryId}&pricingCodeId=${pricingCodeId}&terminal=${terminal}&pricingSourceId=${pricingSourceId}`)\n            .pipe(catchError(this.handleError<any>('GetSourcingCityGroupTerminals', null)));\n    }\n    public GetOpisTerminals(cityRackId: any, latitude: any, longitude: any, countryId: any, terminal: string, source: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getOpisTerminalslUrl}?cityRackId=${cityRackId}&latitude=${latitude}&longitude=${longitude}&countryId=${countryId}&terminal=${terminal}&source=${source}`)\n            .pipe(catchError(this.handleError<any>('GetOpisTerminals', null)));\n    }\n    public GetPricingCodes(filterModel:any)\n    {\n      return this.httpClient.get<any>(`${this.GetPricingCodesUrl}?PricingTypeId=${filterModel.PricingTypeId}&PricingSourceId=${filterModel.PricingSourceId}&feedTypeId=${filterModel.feedTypeId}&fuelClassTypeId=${filterModel.fuelClassTypeId}&tfxProdId=${filterModel.tfxProdId}&Prefix=${filterModel.Prefix}`)\n      .pipe(catchError(this.handleError<any>('GetPricingCodes', null)));\n    }\n\n    public GetAddressByZip(zipCode:string){\n      return this.httpClient.get<any>(`${this.getaddressByZipUrl}?zipCode=${zipCode}`)\n      .pipe(catchError(this.handleError<any>('GetAddressByZip', null)));\n    }\n    public GetUserContext()\n    {\n      return this.httpClient.get<any>(`${this.GetUserContextUrl}`)\n      .pipe(catchError(this.handleError<any>('GetUserContext', null)));\n    }\n    public GetOrdersForDashboard(): Observable<any> {\n      return this.httpClient.get<any>(`${this.GetSalesUserOrdersUrl}`)\n        .pipe(catchError(this.handleError<any>('GetOrdersForDashboard', null)));\n    }\n    public IsPhoneNumberValid(phoneNumber: string): Observable<any> {\n      return this.httpClient.get<any>(`${this.IsPhoneNumberValidUrl}?phoneNumber='${phoneNumber}`)\n        .pipe(catchError(this.handleError<any>('IsPhoneNumberValid', null)));\n    }\n\n    public UpdateViewedStatus(isViewed: any,Id: any): Observable<any> {\n      var input = {Id:Id,IsViewed:isViewed}\n    return this.httpClient.post<any>(this.UpdateViewedStatusUrl, input)\n        .pipe(catchError(this.handleError<any>('UpdateViewedStatus', null)));\n    }\n\n    GetAddressByLongLat(latitude: string, longitude: string): Observable<Geocode> {\n      return this.httpClient.get<any>(`${this.GetaddressbyLatLongUrl}?latitude=${latitude}&longitude=${longitude}`)\n          .pipe(catchError(this.handleError<any>('GetAddressByLongLat', null)));\n    }\n\n    private GetAddressUrl = \"/Validation/GetAddress?address=\";\n    GetAddress(address: string): Observable<Geocode> {\n      return this.httpClient.get<any>(this.GetAddressUrl + address)\n          .pipe(catchError(this.handleError<any>('GetaddressbyAddress', null)));\n    }\n\n    private getDispatchRegionsUrl = \"/SalesUser/SourcingRequest/GetDispatchRegions\";\n    public GetDispatchRegions(): Observable<any> {\n        return this.httpClient.get<any>(this.getDispatchRegionsUrl)\n            .pipe(catchError(this.handleError<any>('GetDispatchRegions', null)));\n    }\n    private getSourcingDetailUrl = \"/SalesUser/SourcingRequest/GetSourcingDetails\";\n    public GetSourcingrequestDetailsById(id): Observable<any> {\n        return this.httpClient.get<any>(`${this.getSourcingDetailUrl}?id=${id}`)\n            .pipe(catchError(this.handleError<any>('GetSourcingrequestDetailsById', null)));\n    }\n    private GetSalesUserInvoiceUrl = \"/SalesUser/Dashboard/GetSalesInvoiceDashboard\";\n    public GetInvoicesForDashboard(type: number): Observable<any> {\n        return this.httpClient.get<any>(`${this.GetSalesUserInvoiceUrl}?InvoiceTypeId=${type}`)\n            .pipe(catchError(this.handleError<any>('GetInvoicesForDashboard', null)));\n    }\n    private GetValidTPOCompanyUrl = \"Validation/IsValidTpoCompany\";\n    public GetValidTPOCompany(companyId : number): Observable<any> {\n        return this.httpClient.get<any>(`${this.GetValidTPOCompanyUrl}?companyId=${companyId}`)\n            .pipe(catchError(this.handleError<any>('GetValidTPOCompany', null)));\n    }\n\n    \n    //Sales ORder DR\n    public ValidateDREntryForm(data: any): Observable<ValidateDREntryResponse> {\n      return this.httpClient.post<any>(this.UrlGetValidateDREntryFormUrl, data)\n        .pipe(catchError(this.handleError<any>('ValidateDREntryForm', null)));\n    }\n\n    public CreateDREntryForm(data: DeliveryRequestInputModel[]): Observable<any> {\n      return this.httpClient.post<any>(this.UrlGetCreateDREntryForm, data)\n        .pipe(catchError(this.handleError<any>('CreateDREntryForm', null)));\n    }\n\n    public GetJobDetails2(jobName:string,companyName:string ): Observable<any> {\n      return this.httpClient.get<any>( `${this.UrlGetJobDetailsFrom}?jobName=${jobName}&companyName=${companyName}`)\n        .pipe(catchError(this.handleError<any>('GetJobDetails2', null)));\n    }\n\n    public GetCustomersAndLocations(): Observable<CustomersModel> {\n      return this.httpClient.get<CustomersModel>( `${this.UrlGetAllBuyersForAllRegions}`)\n      .pipe(catchError(this.handleError<CustomersModel>('GetCustomersAndLocations', null)));\n    }\n\n    \n  public GetProducts(CompanyId:number,jobId:number): Observable<any> {\n    return this.httpClient.get<any>( `${this.UrlGetProductsForSalesDR}?CompanyId=${CompanyId}&JobId=${jobId}`)\n      .pipe(catchError(this.handleError<any>('GetJobDetails', null)));\n  }\n    //Sales ORder DR End\n    \n}\n","import { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class LocationDetailsModel {\r\n    public Id: number;\r\n    public ControlNumber: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public AssignedTerminalId: string;\r\n    public CreatedByCompanyId: number;\r\n}\r\n\r\nexport enum Country {\r\n    \"USA\" = 1,\r\n    \"CAN\" = 2\r\n}\r\n\r\n\r\n\r\n\r\nexport class TerminalMappingModel {\r\n    constructor() {\r\n        this.StateList = [];\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        this.FuelType = new DropdownItem();\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public CountryId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n    public StateList: DropdownItem[];\r\n    public CityList: DropdownItem[];\r\n    public TerminalList: DropdownItem[];\r\n    public FuelType: DropdownItem;\r\n    public StateIds: string;\r\n    public CityIds: string;\r\n    public TerminalIds: string;\r\n    public FuelTypeIds: string;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class TerminalMappingGridModel {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n\r\n    public StateId: number;\r\n    public StateCode: string;\r\n    public CityId: number;\r\n    public City: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public TerminalAddress: string;\r\n    public CountryCode: string;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() message: string;\n  @Input() btnOkText: string;\n  @Input() btnCancelText: string;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  public decline() {\n    this.activeModal.close(false);\n  }\n\n  public accept() {\n    this.activeModal.close(true);\n  }\n\n  public dismiss() {\n    this.activeModal.dismiss();\n  }\n\n\n}\n","<!-- <div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{ title }}</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div> -->\n    <div class=\"modal-body\">\n      {{ message }}\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-sm btn-warning\" (click)=\"decline()\">{{ btnCancelText }}</button>\n      <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"accept()\">{{ btnOkText }}</button>\n    </div>\n","import { Injectable } from '@angular/core';\n\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\n\n@Injectable()\nexport class ConfirmationDialogService {\n\n  constructor(private modalService: NgbModal) { }\n\n  public confirm(\n    title: string,\n    message: string,\n    btnOkText: string = 'Update new Address',\n    btnCancelText: string = 'Keep existing Address',\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\n    const modalRef = this.modalService.open(ConfirmationDialogComponent, { size: dialogSize });\n    modalRef.componentInstance.title = title;\n    modalRef.componentInstance.message = message;\n    modalRef.componentInstance.btnOkText = btnOkText;\n    modalRef.componentInstance.btnCancelText = btnCancelText;\n\n    return modalRef.result;\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { Compartment, TruckDetailsModel } from 'src/app/carrier/model';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { LicenceRequirement, TrailerType, TruckStatus } from 'src/app/app.enum';\r\ndeclare function closeSlidePanel(): any;\r\ndeclare var defaultUoM: any;\r\n\r\n@Component({\r\n    selector: 'app-create-trailer',\r\n    templateUrl: './create-trailer.component.html',\r\n    styleUrls: ['./create-trailer.component.css']\r\n})\r\n\r\n\r\nexport class CreateTrailerComponent implements OnInit {\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n    public IsLoading: boolean;\r\n    public IsCompartments: boolean = false;\r\n    public StatusEnum: typeof TruckStatus = TruckStatus;\r\n    public TrailerTypeStatusEnum: typeof TrailerType = TrailerType;\r\n    public LicenceRequirementEnum: typeof LicenceRequirement = LicenceRequirement;\r\n    public Statuses = [];\r\n    public TrailerTypes = [];\r\n    public FuelTypes = [];\r\n    public LicenceRequirements = [];\r\n    public FreightForm: FormGroup;\r\n    public DdlSettings = {};\r\n    public DefaultUoM;\r\n    @Output() onSubmitGroupData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService) {\r\n        this.FreightForm = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            Name: this.fb.control(''),\r\n            Owner: this.fb.control(''),\r\n            LicencePlate: this.fb.control('', [Validators.required]),\r\n            TruckId: this.fb.control('', [Validators.required]),\r\n            FuelCapacity: this.fb.control('', [Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]),\r\n            ContractNumber: this.fb.control(''),\r\n            Status: this.fb.control(TruckStatus.Active),\r\n            TrailerType: this.fb.control(TrailerType.Lead),\r\n            LicenceRequirement: this.fb.control(null, Validators.required),\r\n            Compartments: this.fb.array([]),\r\n            ExpirationDate: this.fb.control('', [Validators.required]),\r\n            IsPump: this.fb.control(\"1\"),\r\n            IsFilldCompatible: this.fb.control(false),\r\n            SmartDeviceId: this.fb.control('', [Validators.required])\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.DdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        //if (typeof defaultUoM !== 'undefined' && defaultUoM) {\r\n        //    this.DefaultUoM = (defaultUoM == '' || defaultUoM == undefined) ? null : defaultUoM;\r\n        //}\r\n        this.IsLoading = false;\r\n        this.Statuses = (Object.keys(this.StatusEnum).filter(k => typeof this.StatusEnum[k] === \"number\") as string[]).map(x => {\r\n            return {\r\n                Id: this.StatusEnum[x], Name: x == \"InActive\" ? \"In-Active\" : x == \"UnderMaintenance\" ? \"Under-Maintenance\" : x, Code: \"\"\r\n            } as DropdownItem\r\n        });\r\n        this.TrailerTypes = (Object.keys(this.TrailerTypeStatusEnum).filter(k => typeof this.TrailerTypeStatusEnum[k] === \"number\") as string[]).map(x => { return { Id: this.TrailerTypeStatusEnum[x], Name: x, Code: \"\" } as DropdownItem });\r\n        this.LicenceRequirements = (Object.keys(this.LicenceRequirementEnum).filter(k => typeof this.LicenceRequirementEnum[k] === \"number\") as string[]).map(x => { return { Id: this.LicenceRequirementEnum[x], Name: x == \"Class1\" ? \"Class 1\" : x == \"Class3\" ? \"Class 3\" : x, Code: \"\" } as DropdownItem });\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n        this.IsCompartments = false;\r\n        this.getDefaultUOM();\r\n        this.getFuelType();\r\n        \r\n    }\r\n\r\n    get Compartments(): FormArray {\r\n        return this.FreightForm.get(\"Compartments\") as FormArray\r\n    }\r\n\r\n    buildCompartment(model: Compartment): FormGroup {\r\n        return this.fb.group({\r\n            CompartmentId: this.fb.control(model.CompartmentId, [Validators.required]),\r\n            Capacity: this.fb.control(model.Capacity, [Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),\r\n            FuelType: this.fb.control(model.FuelType != null ? model.FuelType : this.FuelTypes[0].Id),\r\n            PumpId: this.fb.control(model.PumpId, [Validators.required]),\r\n        });\r\n    }\r\n    getFuelType() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getFuelTypes().subscribe(t => {\r\n            this.IsLoading = false;\r\n            this.FuelTypes = t as DropdownItem[];\r\n        });\r\n    }\r\n    getDefaultUOM() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getDefaultUOM().subscribe(response => {\r\n            this.IsLoading = false;\r\n            this.DefaultUoM = response;\r\n        });\r\n    }\r\n    AddCompartment() {\r\n        this.Compartments.push(this.buildCompartment(new Compartment()));\r\n    }\r\n\r\n    RemoveCompartment(i: number) {\r\n        this.Compartments.removeAt(i);\r\n    }\r\n\r\n    toggleCompartment(event: any): void {\r\n        if (event.isTrusted) {\r\n            this.IsCompartments = !this.IsCompartments;\r\n            if (!this.IsCompartments) {\r\n                this.Compartments.clear();\r\n            } else if (this.Compartments.length == 0) {\r\n                this.AddCompartment();\r\n            }\r\n        }\r\n    }\r\n\r\n    setValidationForIsValidFilldCompatible(isFilldCompatible: boolean) {\r\n        let val = isFilldCompatible ? [Validators.required] : [];\r\n        this.FreightForm.controls['SmartDeviceId'].setValidators(val);\r\n        this.FreightForm.controls['SmartDeviceId'].updateValueAndValidity();\r\n\r\n        let groupItems: any = (this.FreightForm.get(\"Compartments\") as FormArray).controls;\r\n\r\n        for (let item of groupItems) {\r\n            item.controls[\"PumpId\"].setValidators(val);\r\n            item.controls[\"PumpId\"].updateValueAndValidity();\r\n        }\r\n        if (isFilldCompatible) {\r\n            this.FreightForm.get(\"IsPump\").setValue(\"1\");\r\n        }\r\n    }\r\n    loadTruckDetail(truck: TruckDetailsModel) {\r\n        this.clearTrailerForm();\r\n        let zero = 0;\r\n        if (truck.LicenceRequirement == zero) {\r\n            truck.LicenceRequirement = null;\r\n        }\r\n        this.FreightForm.patchValue(truck);\r\n        this.IsCompartments = false;\r\n        if (truck.Compartments != null && truck.Compartments.length > 0) {\r\n            this.IsCompartments = true;\r\n            truck.Compartments.forEach(x => this.Compartments.push(this.buildCompartment(x)));\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.setValidationForIsValidFilldCompatible(this.FreightForm.controls['IsFilldCompatible'].value);\r\n\r\n        var totalCapacity = this.FreightForm.get('FuelCapacity').value as number;\r\n        if (this.FreightForm.valid && this.Compartments.length > 0 && totalCapacity > 0) {\r\n            var sumCompartmentCapacity: number = 0;\r\n            this.Compartments.controls.forEach(t => sumCompartmentCapacity += parseFloat(t.get('Capacity').value));\r\n            if (!(totalCapacity == sumCompartmentCapacity)) {\r\n                Declarations.msgerror('Total compartment capacity should match Trailer capacity.', undefined, undefined);\r\n                this.FreightForm.setErrors({ 'invalid': true });\r\n                return false;\r\n            }\r\n        }\r\n        if (this.FreightForm.valid) {\r\n            this.IsLoading = true;\r\n            this.carrierService.postCreateTruck(this.FreightForm.value).subscribe(data => {\r\n                this.IsLoading = false;\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    closeSlidePanel();\r\n                    this.clearTrailerForm();\r\n                    this.onSubmitGroupData.emit();\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.FreightForm.markAllAsTouched();\r\n        }\r\n    }\r\n    setSelectedDate(date: string) {\r\n        var _date = this.FreightForm.get('ExpirationDate');\r\n        if (_date.value != date) {\r\n            _date.setValue(date);\r\n        }\r\n    }\r\n    clearTrailerForm() {\r\n        this.FreightForm.reset();\r\n        this.Compartments.clear();\r\n        this.IsCompartments = false;\r\n        this.setDefaultValue();\r\n    }\r\n\r\n    setDefaultValue() {\r\n        this.FreightForm.get(\"Status\").setValue(TruckStatus.Active);\r\n        this.FreightForm.get(\"TrailerType\").setValue(TrailerType.Lead);\r\n        this.FreightForm.get(\"LicenceRequirement\").setValue(LicenceRequirement.Class1);\r\n        this.FreightForm.get(\"IsFilldCompatible\").setValue(false);\r\n    }\r\n}\r\n","<form [formGroup]=\"FreightForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"col-sm-12\" id=\"add-trailerDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Trailer ID<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Trailer ID\" formControlName=\"TruckId\" tabindex=\"1\" />\r\n                            <div *ngIf=\"FreightForm.get('TruckId').invalid && FreightForm.get('TruckId').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('TruckId').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Name\" formControlName=\"Name\" tabindex=\"2\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Owner</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Owner\" formControlName=\"Owner\" tabindex=\"3\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Licence Requirement<span class=\"color-maroon\">*</span></label>\r\n                            <select class=\"form-control\" formControlName=\"LicenceRequirement\" tabindex=\"4\">\r\n                                <option [value]=\"null\">Select</option>\r\n                                <option *ngFor=\"let key of LicenceRequirements\" [value]=\"key.Id\">{{key.Name}}</option>\r\n                            </select>\r\n                            <div *ngIf=\"FreightForm.get('LicenceRequirement').invalid && FreightForm.get('LicenceRequirement').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('LicenceRequirement').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Licence Plate<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Licence Plate\" formControlName=\"LicencePlate\" tabindex=\"5\" />\r\n                            <div *ngIf=\"FreightForm.get('LicencePlate').invalid && FreightForm.get('LicencePlate').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('LicencePlate').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Expiration Date<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"ExpirationDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" (onDateChange)=\"setSelectedDate($event);\" tabindex=\"6\" />\r\n                            <div *ngIf=\"FreightForm.get('ExpirationDate').invalid && FreightForm.get('ExpirationDate').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('ExpirationDate').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Total Capacity</label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Capacity\" formControlName=\"FuelCapacity\" tabindex=\"7\" />\r\n                                <span class=\"input-group-addon\">{{DefaultUoM | slice:0:1}}</span>\r\n                            </div>\r\n                            <div *ngIf=\"FreightForm.get('FuelCapacity').invalid && FreightForm.get('FuelCapacity').touched\" class=\"color-maroon\">\r\n                                <span *ngIf=\"FreightForm.get('FuelCapacity').errors.pattern\">\r\n                                    Invalid.\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Trailer Type</label>\r\n                            <select class=\"form-control\" formControlName=\"TrailerType\" tabindex=\"8\">\r\n                                <option *ngFor=\"let key of TrailerTypes\" [ngValue]=\"key.Id\">{{key.Name}}</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Status</label>\r\n                            <select class=\"form-control\" formControlName=\"Status\" tabindex=\"9\">\r\n                                <option *ngFor=\"let key of Statuses\" [ngValue]=\"key.Id\">{{key.Name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"d-block mb-rem-5\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"IsFilldCompatible\" (click)=\"setValidationForIsValidFilldCompatible($event.target.checked)\" formControlName=\"IsFilldCompatible\">\r\n                            <label class=\"form-check-label\" for=\"IsFilldCompatible\">TrueFill Inc. Compatible</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-block\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" (click)=\"toggleCompartment($event)\" name=\"IsCompartments\" [(ngModel)]=\"IsCompartments\" [ngModelOptions]=\"{standalone: true}\">\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Compartments</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group\">\r\n                    <div [class]=\"FreightForm.get('IsFilldCompatible').value? 'pntr-none subSectionOpacity' : ''\">\r\n                        <label class=\"db\">Does your trailer have pump?</label>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"IsPumpRadio1\" value=\"1\" name=\"IsPump\" formControlName=\"IsPump\">\r\n                            <label class=\"form-check-label\" for=\"IsPumpRadio1\">Yes</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"IsPumpRadio2\" value=\"0\" name=\"IsPump\" formControlName=\"IsPump\">\r\n                            <label class=\"form-check-label\" for=\"IsPumpRadio2\">No</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\" *ngIf=\"FreightForm.get('IsFilldCompatible').value\">\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Smart Device ID\" formControlName=\"SmartDeviceId\" tabindex=\"2\" />\r\n                    <div *ngIf=\"FreightForm.get('SmartDeviceId').invalid && FreightForm.get('SmartDeviceId').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"FreightForm.get('SmartDeviceId').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"IsCompartments\">\r\n            <div class=\"col-sm-12\">\r\n                <div formArrayName=\"Compartments\">\r\n                    <div class=\"row mb10\" *ngFor=\"let compartment of FreightForm.get('Compartments')['controls']; let i = index; let first = first;\">\r\n                        <div class=\"row col-sm-12\" [formGroupName]=\"i\">\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Compartment Id\" formControlName=\"CompartmentId\" />\r\n                                <div *ngIf=\"compartment.get('CompartmentId').invalid && compartment.get('CompartmentId').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"compartment.get('CompartmentId').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <select class=\"form-control\" formControlName=\"FuelType\">\r\n                                    <option *ngFor=\"let key of FuelTypes\" [ngValue]=\"key.Id\">{{key.Name}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Capacity\" formControlName=\"Capacity\" />\r\n                                    <span class=\"input-group-addon fs12\">{{DefaultUoM | slice:0:1}}</span>\r\n                                </div>\r\n                                <div *ngIf=\"compartment.get('Capacity').invalid && compartment.get('Capacity').touched\" class=\"color-maroon\">\r\n                                    <span *ngIf=\"compartment.get('Capacity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\" *ngIf=\"FreightForm.get('IsFilldCompatible').value\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Pump ID\" formControlName=\"PumpId\" tabindex=\"2\" />\r\n                                <div *ngIf=\"compartment.get('PumpId').invalid && compartment.get('PumpId').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"compartment.get('PumpId').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                             </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <a *ngIf=\"!first\" (click)=\"RemoveCompartment(i);\" class=\"fa fa-trash-alt mt10 color-maroon\" title=\"Remove\"></a>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a (click)=\"AddCompartment();\" class=\"add-partial-block mb20\">\r\n                                <span class=\"fa fa-plus-circle\"></span> Add New\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 text-right form-buttons\">\r\n        <input type=\"button\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearTrailerForm()\">\r\n        <button id=\"Submit\" type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n    </div>\r\n</form>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","<!--<div>\r\n    <input type=\"button\" class=\"btn btn-primary\" (click)=\"loadTrends()\" value=\"Trends\" />\r\n</div>-->\r\n\r\n<div *ngIf=\"!noChartData\">\r\n    Last {{customDays==0?(data?.noOfDays):customDays}} Days   Demand Capture Chart (Site-{{data?.siteId}})\r\n</div>\r\n\r\n<div *ngIf=\"noChartData\" class=\"alert alert-danger\">\r\n    No Data Found.\r\n</div>\r\n\r\n<div [ngClass]=\"{'hide_chart': !showChart}\">\r\n    <div>\r\n        <select  *ngIf=\"!noChartData\" (change)=\"onSelection($event.target.value)\">\r\n            <option *ngFor=\"let item of dateFilterList\" [value]=\"item.Id\">{{item.Value}}</option>\r\n        </select>\r\n        <input type=\"number\" maxlength=\"2\" max=\"99\" class=\"form-control\" [(ngModel)]=\"customDays\" *ngIf=\"showCustomDateText\" />\r\n        <input type=\"button\" class=\"btn btn-primary\" (click)=\"getDemandCapChartData(data.siteId, customDays, data.tfxJobId)\" *ngIf=\"showCustomDateText && customDays>0\" value=\"Submit\" />\r\n    </div>\r\n\r\n    <div id=\"chart-timeline\"></div>\r\n</div>\r\n<div *ngIf=\"(isLoadingSubject | async)\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n\r\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\ndeclare var ApexCharts;\n\n@Component({\n    selector: 'app-demand-capture-chart',\n    templateUrl: './demand-capture-chart.component.html',\n    styleUrls: ['./demand-capture-chart.component.css']\n})\n\nexport class DemandCaptureChartComponent implements OnInit {\n    @Input() data: any;\n    demandCapChart: any;\n    showChart = false;\n    // isLoading = false;\n    showCustomDateText = false;\n    customDays = 0;\n    dateFilterList: any[] = [];\n    noChartData = false;\n    public isLoadingSubject: BehaviorSubject<any>;\n    constructor(private carrierService: CarrierService) {\n        this.isLoadingSubject = new BehaviorSubject(false);\n    }\n\n    ngOnInit() {\n        this.loadTrends();\n    }\n\n    ngAfterViewInit() {\n        if (this.demandCapChart)\n            this.demandCapChart.render();\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        if (change.data.currentValue && change.data.currentValue.tfxJobId && !change.data.firstChange) {\n            if (this.demandCapChart) {\n                this.demandCapChart.destroy();\n            }\n            this.loadTrends();\n            this.noChartData = false;\n        }\n    }\n\n\n    async loadTrends() {\n        if (this.data.siteId && this.data.noOfDays && this.data.tfxJobId) {\n            this.isLoadingSubject.next(true);\n            this.getDemandCapChartData(this.data.siteId, this.data.noOfDays, this.data.tfxJobId);\n            this.getDateList();\n        }\n    }\n    public getDateList() {\n        return this.dateFilterList = [{ Id: 3, Value: 'Last 3 Days' }, { Id: 7, Value: 'Last 7 Days' }, { Id: 10, Value: 'Last 10 Days' }, { Id: 0, Value: 'Custom' }]\n    }\n\n    async onSelection($event) {\n\n        if ($event == 0) {\n            this.showCustomDateText = true;\n        } else {\n            this.showCustomDateText = false;\n            this.showChart = false;\n            this.data.noOfDays = $event;\n            this.demandCapChart.destroy();\n            this.noChartData = false;\n            this.getDemandCapChartData(this.data.siteId, $event, this.data.tfxJobId);\n        }\n\n    }\n    async getDemandCapChartData(siteId, noOfDays, tfxJobId) {\n        this.isLoadingSubject.next(true);\n        this.carrierService.getDemandCapChartData(siteId, noOfDays, tfxJobId).subscribe(op => {\n            if (op.Result && op.Result.length > 0) this.rendor(op.Result)\n            else {\n                this.noChartData = true;\n                this.isLoadingSubject.next(false);\n            }\n        })\n    }\n\n    async rendor(data) {\n        var mapList = [];\n        var filterkeys = [];\n        await data && data.map(m => {\n            if (!filterkeys.find(f => f && f.tankid == m.TankId && f.storageid == m.StorageId)) {\n                filterkeys.push({ tankid: m.TankId, storageid: m.StorageId });\n                mapList.push({ name: `[Tank: ${m.TankName} , Product Category: ${m.ProductName}]`, data: data.filter(f => f.TankId == m.TankId && f.StorageId == m.StorageId).map(re => { return [new Date(re.CaptureTime).getTime(), re.NetVolume.toFixed(1)] }) });\n            }\n        })\n\n        var date = new Date();\n        var previousDate = date.setDate(date.getDate() - this.data.noOfDays);\n        var options = {\n            series: mapList,\n            chart: {\n                type: 'line',\n                height: 350,\n                zoom: {\n                    enabled: true,\n                    type: 'x',\n                    autoScaleYaxis: false,\n                    zoomedArea: {\n                        fill: {\n                            color: '#90CAF9',\n                            opacity: 0.4\n                        },\n                        stroke: {\n                            color: '#0D47A1',\n                            opacity: 0.4,\n                            width: 1\n                        }\n                    }\n                },\n                toolbar: {\n                    show: true,\n                    offsetX: 0,\n                    offsetY: 0,\n                    tools: {\n                        download: false,\n                        selection: true,\n                        zoom: true,\n                        zoomin: true,\n                        zoomout: true,\n                        pan: true,\n                        reset: true,\n                        customIcons: []\n                    },\n                    autoSelected: 'zoom'\n                },\n            },\n            annotations: {\n                yaxis: [{\n                    show: true,\n                    y: 30,\n                    borderColor: '#999',\n                    title: {\n                        text: \"Fuel (In Gallons)\",\n                        style: {\n                            color: '#008FFB',\n                        }\n                    },\n                    text: 'Fuel (In Gallons)',\n                    tooltip: {\n                        enabled: true\n                    },\n                    axisTicks: {\n                        show: true,\n                    },\n                    axisBorder: {\n                        show: true,\n                        color: '#00E396'\n                    },\n                    label: {\n                        show: true,\n                        text: 'Date',\n                        style: {\n                            color: \"#fff\",\n                            background: '#00E396'\n                        }\n                    }\n                }],\n                xaxis: [{\n                    x: new Date().getTime(),\n                    borderColor: '#999',\n                    yAxisIndex: 0,\n                    type: \"datetime\",\n                    label: {\n                        show: true,\n                        text: 'Gallons',\n                        style: {\n                            color: \"#fff\",\n                            background: '#775DD0'\n                        },\n                        tooltip: {\n                            enabled: true\n                        },\n                        axisTicks: {\n                            show: true,\n                        },\n                        axisBorder: {\n                            show: true,\n                            color: '#00E396'\n                        },\n                    }\n                }]\n            },\n            dataLabels: {\n                enabled: false\n            },\n            markers: {\n                size: 0,\n                style: 'hollow',\n            },\n            xaxis: {\n                type: 'datetime',\n                labels: {\n                    datetimeUTC: false\n                },\n                min: new Date(previousDate).getTime(),\n                tickAmount: 6,\n            },\n            tooltip: {\n                x: {\n                    format: 'dd MMM yyyy hh:mm tt  '\n                }\n            },\n            stroke: {\n                show: true,\n                curve: 'smooth',\n                lineCap: 'butt',\n                colors: undefined,\n                width: 1,\n                dashArray: 0,\n            },\n            fill: {\n                type: 'gradient',\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.7,\n                    opacityTo: 0.9,\n                    stops: [0, 100]\n                }\n            },\n        };\n        this.isLoadingSubject.next(false);\n        //if (this.demandCapChart)\n        //    this.demandCapChart.resetSeries();\n        this.demandCapChart = new ApexCharts(document.querySelector(\"#chart-timeline\"), options);\n        if (this.demandCapChart)\n            this.demandCapChart.render();\n\n        this.showChart = true;\n\n\n        //var resetCssClasses = function (activeEl) {\n        //    var els = document.querySelectorAll(\"button\");\n        //    Array.prototype.forEach.call(els, function (el) {\n        //        el.classList.remove('active');\n        //    });\n        //                activeEl.target.classList.add('active')\n        //}\n\n\n\n\n    }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, ViewChild, OnDestroy, ViewEncapsulation, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormArray, FormGroup, Validators } from '@angular/forms';\r\nimport { AdditiveOrderViewModel, DropdownItem, StateDropdownExtendedItem, StatelistService, TBDDropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { BehaviorSubject, Subscription, Subject, of, iif } from 'rxjs';\r\nimport { DipTestViewModel, CustomerJobsForCarrier, SalesDataModel, DropAddressModel, OrderPickupLocationModel, OrderPickupDetailModel, RaiseTBDDeliveryRequest, TBDRaiseDRDeliveryRequests, BlendedRequest, CompatibleProductModel, DeliveryRequestViewModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { DataService } from 'src/app/carrier/service/data.service';\r\nimport * as moment from 'moment';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { UtilService } from 'src/app/carrier/service/util.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { ScheduleBuilderService } from 'src/app/carrier/service/schedule-builder.service';\r\nimport { AddressModel } from 'src/app/invoice/models/DropDetail';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { JobRegionModel } from 'src/app/carrier/models/location';\r\nimport { DeliveryReqPriority } from 'src/app/app.enum';\r\nimport { additiveProductTypeId, DropDown, NumberConstants, RegExConstants, ScheduleDays, ScheduleQuantityType, ScheduleTypes } from 'src/app/app.constants';\r\nimport { getRecurringUniqueId, getUniqueId } from 'src/app/my.functions';\r\ndeclare function closeSlidePanel(): any;\r\ndeclare var IsBuyerCompany: boolean;\r\n\r\n@Component({\r\n    selector: 'app-dip-test',\r\n    templateUrl: './dip-test.component.html',\r\n    styleUrls: ['./dip-test.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class DipTestComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    @ViewChild('elementFilter') elementFilter: ElementRef;\r\n    //keyword = 'Name';\r\n    public IsCommonBadge = false\r\n    public height_Panel: any;\r\n    public DipTestsForEachTank: DipTestViewModel[] = [];\r\n    public OtherProductDipTestsForEachTank: DipTestViewModel[] = [];\r\n    public selectedLocation: JobRegionModel[] = [];\r\n    public SiteList: JobRegionModel[] = [];\r\n    public selectedCustomer: CustomerJobsForCarrier[] = [];\r\n    public companySiteList: CustomerJobsForCarrier[] = [];\r\n    public SiteddlSettings = {};\r\n    public CustomerSettings = {};\r\n    public DaySetting = {};\r\n    // public DeliveryRequests: FormArray;\r\n    public fmGroup: FormGroup;\r\n    public IsLoading: boolean = false;\r\n    public DelReqPriority: typeof DeliveryReqPriority = DeliveryReqPriority;\r\n    public dipTestLoader: boolean = false;\r\n    public showForm: boolean = false;\r\n    public IsDrFromMultiWindow: boolean = false;\r\n    public OrderList: DropdownItem[] = [];\r\n    public selectedOrder: DropdownItem[] = [];\r\n    public isTankExists: boolean = true;\r\n    public OrderDetails: DipTestViewModel[] = [];\r\n    public multiDropdownSettings: IDropdownSettings;\r\n    public chartdata: any;\r\n    public isChartDataExistSubject: BehaviorSubject<any>;\r\n    public disableControl: boolean = false;\r\n    public loadingCustomers: boolean = true;\r\n    public otherProductTypeId: number;\r\n    public companyUoM: number;\r\n    public CompatibleProductTypeList: CompatibleProductModel[] = [];\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n    public StartTime: any;\r\n    public EndTime: any;\r\n\r\n    @Input() IsThisFromDrDisplay: boolean;\r\n    @Input() public isDisableControl: boolean;\r\n    @Input() SelectedRegionId: string;\r\n    @Input() IsSalesPage: boolean = false;\r\n    @Input() RequestFromBuyerWallyBoard: boolean;\r\n    @Output() onRaiseDR: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() OnRaiseDRFromMultiWindow: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public DisableControlsSubscription: Subscription;\r\n    public FormValidationMessage: string = \"\";\r\n\r\n    //recuring schedules\r\n    public ScheduleTypes: DropdownItem[] = ScheduleTypes.filter(x => x.Id != 4) as DropdownItem[];;\r\n    public ScheduleQuantityTypeDetails: DropdownItem[] = ScheduleQuantityType;\r\n    //public RecurringDRSchedule: RecurringDRSchedule[] = [];\r\n    //public isRecurringSchedule: boolean;\r\n    public MaxInputDate: Date = new Date();\r\n    public currentdate: string;\r\n    // public options: Options;\r\n    public ScheduleDaysDetails: Array<DropDown> = ScheduleDays;\r\n    public failedMessageIdentification: string = \"<failed>\";\r\n    public messageSplitTag: string = \"<split>\";\r\n    //public PoNumber: string;\r\n    //public TankName: string;\r\n    public RetainTime: string;\r\n    public RetainDate: string;\r\n    public WindowStartTime: string;\r\n    public WindowStartDate: string;\r\n    public WindowEndTime: string;\r\n    public WindowEndDate: string;\r\n    public IsRetainButtonClick: boolean = false;\r\n    SelectedCustomerId: string;\r\n    SelectedLocationId: string;\r\n    SalesData: SalesDataModel[] = [];\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    public dtOptions: any = {};\r\n    public isLoadingSubject: BehaviorSubject<any>;\r\n\r\n\r\n    public StateList: StateDropdownExtendedItem[] = [];\r\n    public CountryList: DropdownItem[] = [];\r\n    public CountryGroupList: DropdownItem[] = [];\r\n    public ChangePickupForOrders: number[] = [];\r\n    public BulkPlants: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    private DGSubscription: Subscription = new Subscription();\r\n    public LocationType: number = 1;\r\n    public SearchTerminalFuelType: string;\r\n    public Terminals = [];\r\n    public TBDTerminals = [];\r\n    public isReadOnly: boolean = false;\r\n    public PickupForm: FormGroup;\r\n    public SelectedDRForEditPickup: FormGroup;\r\n    public SelectedDRForEditPickupIndex: number;\r\n    public CountryBasedZipcodeLabel: string = \"Zip\";\r\n    public _loadingTerminals: boolean = false;\r\n    public SearchTerminalKey: string;\r\n    public minCharRequired = false;\r\n    public _loadingAddress: boolean = false;\r\n    public noTerminalFound = false;\r\n    public searchError = false;\r\n\r\n    public activePriorityTab = DeliveryReqPriority.MustGo;\r\n    public isUserSubmit: boolean = false;\r\n    public fmTBDGroup: FormGroup;\r\n    public FuelTypeDdlSettings = {};\r\n    public FuelTypeDetails: TBDDropdownItem[] = [];\r\n    public OtherFuelTypeDetails: TBDDropdownItem[] = [];\r\n    public SelectedTBDForEditPickup: FormGroup;\r\n    public SelectedTBDForEditPickupIndex: number;\r\n    public TBDDeliveryRequestViewModel: RaiseTBDDeliveryRequest = new RaiseTBDDeliveryRequest();\r\n    public isTBDUserSubmit: boolean = false;\r\n    public TBDdipTestLoader: boolean = false;\r\n\r\n    //BLENDED REQUEST\r\n    public DrForEditBlendedRequestIndex: number = 0;\r\n    public DrForEditBlendedRequest: FormGroup;\r\n    public BlendDrIndex: number = 0;\r\n    public IsPickupForBlendRequest: boolean = false;\r\n    public blendRequestForm: FormGroup = this.fb.group({ BlendedRequests: this.fb.array([]) });\r\n    public additiveOrders: AdditiveOrderViewModel[] = [];\r\n    public preferenceSetting: any = null;\r\n\r\n\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService,\r\n        private utilService: UtilService,\r\n        private stateService: StatelistService,\r\n        private addresService: AddressService,\r\n        private sbService: ScheduleBuilderService,\r\n        private dispatcherService: DispatcherService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private dataService: DataService) {\r\n        this.fmGroup = this.fb.group({\r\n            DeliveryRequests: this.fb.array([]),\r\n            IsTankNotAvailableForOrderProducts: this.fb.control(false),\r\n            //new controls\r\n            PickupLocationType: this.fb.control(null),\r\n            IsCommonPickup: this.fb.control(null),\r\n            Terminal: this.utilService.getTerminalForm(new DropdownItem(), false),\r\n            BulkPlant: this.utilService.getBulkPlantForm(new DropAddressModel(), false),\r\n            BadgeNo1: this.fb.control(null),\r\n            BadgeNo2: this.fb.control(null),\r\n            BadgeNo3: this.fb.control(null),\r\n            LoadCode: this.fb.control(null),\r\n            IsCommonBadge: this.fb.control(null),\r\n            IsPreLoadInfo: this.fb.control(null),\r\n            ProductTypeId: this.fb.control(null)\r\n        });\r\n        this.isChartDataExistSubject = new BehaviorSubject(false);\r\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 1);\r\n        this.currentdate = moment(new Date()).format('MM/DD/YYYY');\r\n        this.isLoadingSubject = new BehaviorSubject(false);\r\n        //TBD\r\n        this.fmTBDGroup = this.fb.group({\r\n            ScheduleTBDForm: this.fb.array([]),\r\n        });\r\n        this.FuelTypeDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n        };\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsThisFromDrDisplay && change.IsThisFromDrDisplay.currentValue != null) {\r\n            this.IsDrFromMultiWindow = change.IsThisFromDrDisplay.currentValue;\r\n        }\r\n        this.subscribeDisableControlsSubject();\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n        this.unsubscribeAllSubscriptions_();\r\n    }\r\n    ngOnInit() {\r\n        //  this.initializeSalesGrid();\r\n        this.SiteddlSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'DisplayName',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n\r\n        };\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            allowSearchFilter: true,\r\n            itemsShowLimit: 1\r\n        };\r\n        this.CustomerSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'CompanyId',\r\n            textField: 'CompanyName',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.DaySetting = {\r\n            singleSelection: false,\r\n            closeDropDownOnSelection: false,\r\n            idField: 'id',\r\n            textField: 'text',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n        };\r\n        // this.options = {\r\n        //     multiple: true,\r\n        //     closeOnSelect: false,\r\n        //     tags: true\r\n        // };\r\n        this.additiveOrders = [];\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n        this.subscribeDisableControlsSubject();\r\n        this.height_Panel = this.calHeight();\r\n        this.PickupForm = this.initPickupForm_(new OrderPickupDetailModel());\r\n        this.PickupLocationTypeChange_();\r\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n        this.StartTime = new Date(0, 0, 0, null, null, null);\r\n        this.EndTime = new Date(0, 0, 0, null, null, null);\r\n    }\r\n\r\n    onDaySelect(event: any, recurringSchedule: FormGroup, isSelected: boolean) {\r\n    }\r\n    // start\r\n    getBulkPlantAddress_(bulkPlantName: string) {\r\n        this.DGSubscription.add(this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: response.State,\r\n                Country: { Code: response.Country.Code },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n            if (!this.changeDetectorRef['destroyed'])\r\n                this.changeDetectorRef.detectChanges();\r\n        }));\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n    changeTerminal_(delReq: FormGroup, event: any, drIndex: number): void {\r\n        let _orderId = event.target.selectedOptions[0].value;\r\n        let orders = delReq.get('OrderPickupDetails').value as any[] || [];\r\n        if (orders.length > 0) {\r\n            let selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (!selectedOrder) {\r\n                var order = this.OrderDetails.find(t => t.OrderId == _orderId);\r\n                if (order && order.OrderPickupDetails) {\r\n                    selectedOrder = order.OrderPickupDetails.find(x => x.OrderId == _orderId);\r\n                }\r\n            }\r\n            //set badges\r\n            delReq.get('BadgeNo1').patchValue(selectedOrder.Badge1);\r\n            delReq.get('BadgeNo2').patchValue(selectedOrder.Badge2);\r\n            delReq.get('BadgeNo3').patchValue(selectedOrder.Badge3);\r\n\r\n            let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n            this.setPickupLocation_(delReq, location);\r\n            this.findDrWithSameProductAndJob(delReq, _orderId, location, drIndex);\r\n        }\r\n    }\r\n    findDrWithSameProductAndJob(selectedDrForm: FormGroup, seletedOrderId: number, location: OrderPickupLocationModel, drIndex: number) {\r\n        if (selectedDrForm === null || drIndex === null) {\r\n            return;\r\n        }\r\n\r\n        let _delReqs = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        let selectedDrObj = selectedDrForm ? selectedDrForm.value : null;\r\n\r\n        for (let index = 0; index < _delReqs.length; index++) {\r\n            let _drForm = _delReqs.controls[index] as FormGroup;\r\n            let _drObj = _drForm ? _drForm.value : null;\r\n            if (_drObj && selectedDrObj && _drObj.ProductTypeId == selectedDrObj.ProductTypeId && _drObj.JobId == selectedDrObj.JobId && index != drIndex) {\r\n                //set pickup details\r\n                this.setPickupLocation_(_drForm, location);\r\n                //set other details\r\n                _drForm.get('ScheduleQuantityType').patchValue(selectedDrObj.ScheduleQuantityType);\r\n                _drForm.get('Priority').patchValue(selectedDrObj.Priority);\r\n                _drForm.get('IsCommonBadge').patchValue(selectedDrObj.IsCommonBadge);\r\n                _drForm.get('BadgeNo1').patchValue(selectedDrObj.BadgeNo1);\r\n                _drForm.get('BadgeNo2').patchValue(selectedDrObj.BadgeNo2);\r\n                _drForm.get('BadgeNo3').patchValue(selectedDrObj.BadgeNo3);\r\n                _drForm.get('OrderId').patchValue(selectedDrObj.OrderId);\r\n            }\r\n        }\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onBulkPlantSelected_(event: any): void {\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress_(event.Name);\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n    onBulkPlantSearched_(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n    onBulkPlantBlur_(event: any): void {\r\n        if (this.BulkPlants.filter(t => t.Name && t.Name.toLowerCase() == event.target.value.toLowerCase()).length > 0) {\r\n            let bulkPlant = this.BulkPlants.find(t => t.Name.toLowerCase() == event.target.value.toLowerCase());\r\n            this.PickupForm.get('BulkPlant.SiteName').setValue(bulkPlant.Name);\r\n            this.PickupForm.get('BulkPlant.SiteId').setValue(bulkPlant.Id);\r\n            this.getBulkPlantAddress_(bulkPlant.Name);\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n    setCommonPickupFlag_() {\r\n        if (this.fmGroup.get('IsCommonPickup').value) {\r\n            this.PickupForm.reset();\r\n        } else {\r\n            this.fmGroup.controls['Terminal'].reset()\r\n            this.fmGroup.controls['BulkPlant'].reset();\r\n        }\r\n    }\r\n    setPickupLocation_(form: FormGroup, order: OrderPickupLocationModel): void {\r\n        form.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                form.controls['Terminal'].patchValue(order.Terminal);\r\n            }\r\n\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(1);\r\n            this.PickupForm.controls['Terminal'].patchValue(order.Terminal);\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                form.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n            }\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(2);\r\n            this.PickupForm.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n        }\r\n    }\r\n\r\n\r\n    RemovePickupLocation(tdr: FormGroup, drIndex: number): void {\r\n\r\n        if (tdr != null || tdr != undefined) {\r\n            this.SelectedDRForEditPickupIndex = drIndex;\r\n            this.ChangePickupForOrders = [];\r\n            this.SelectedDRForEditPickup = tdr;\r\n            let _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n\r\n            let terminal = this.utilService.getTerminalForm(new DropdownItem(), false);\r\n            let bulkPlant = this.utilService.getBulkPlantForm(new DropAddressModel(), false);\r\n            let _terminal = terminal.value;\r\n            let _bulkPlant = bulkPlant.value;\r\n            let location = {\r\n                PickupLocationType: _pickupType,\r\n                Terminal: _terminal,\r\n                BulkPlant: _bulkPlant\r\n            };\r\n            this.setPickupLocation_(this.SelectedDRForEditPickup, location);\r\n        }\r\n    }\r\n\r\n    get StatesListByCountry(): any[] {\r\n        let countryCode = this.PickupForm.controls['BulkPlant']['controls'].Country.get(\"Code\").value;\r\n        if (countryCode != \"\" && countryCode != undefined && this.CountryList != undefined && this.CountryList.length > 0) {\r\n            let country = this.CountryList.filter(c => c.Code == countryCode);\r\n            let countryId = 0;\r\n            if (country) {\r\n                countryId = country[0].Id;\r\n            }\r\n            if (countryId == 4) {\r\n                let countryGroupCode = this.PickupForm.controls['BulkPlant']['controls'].CountryGroup.get(\"Id\").value;\r\n                return this.StateList.filter(t => t.CountryId == 4 && t.CountryGroupId == countryGroupCode);\r\n            }\r\n            else {\r\n                return this.StateList.filter(t => t.CountryId == countryId);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    editPickupLocation_(tdr: FormGroup, drIndex: number): void {\r\n\r\n        this.getRequiredDataForPickupDetails();\r\n        this.SelectedDRForEditPickupIndex = drIndex;\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = tdr;\r\n\r\n        if (tdr && tdr.get('IsBlendedRequest').value) {\r\n\r\n            let blendRequests = tdr.get('BlendedRequests').value as BlendedRequest[];\r\n\r\n            if (blendRequests && blendRequests.length > 0) {\r\n                blendRequests.forEach(blend => {\r\n                    if (!blend.IsAdditive && blend.OrderId)\r\n                        this.ChangePickupForOrders.push(blend.OrderId);\r\n                });\r\n            }\r\n        }\r\n        else if (tdr == null || tdr == undefined) {\r\n            this.SelectedDRForEditPickup = this.fmGroup\r\n            let _delReqs = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n            _delReqs.controls.forEach((x: FormGroup) => {\r\n                let _orderId = x.controls['OrderId'].value as number;\r\n                if (_orderId > 0) {\r\n                    this.ChangePickupForOrders.push(_orderId);\r\n                }\r\n            });\r\n        } else {\r\n            let _orderId = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n            if (_orderId > 0) {\r\n                this.ChangePickupForOrders.push(_orderId);\r\n                let existingOrders = tdr.get('OrderPickupDetails').value || [];\r\n                let orders = existingOrders.filter(t => t.OrderId == _orderId);\r\n                if (orders.length > 0) {\r\n                    let lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                    this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        let _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = this.SelectedDRForEditPickup.controls['Terminal'].value;\r\n        let _bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n        this.setPickupLocation_(this.SelectedDRForEditPickup, location);\r\n\r\n        //to get bulk plant for auto/manual order\r\n        let orderForBulkPlant = 0;\r\n        if (tdr)\r\n            orderForBulkPlant = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n\r\n        this.addresService.getBulkPlants('', orderForBulkPlant).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n\r\n        if (this.ChangePickupForOrders.length > 0) {\r\n            this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n                this.Terminals = data;\r\n            }));\r\n        }\r\n        else {\r\n            this.Terminals = [];\r\n        }\r\n\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    setBulkPlantValidators_(form: FormGroup, required: boolean) {\r\n        form.get('BulkPlant.Address').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n        form.get('BulkPlant.City').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n        form.get('BulkPlant.State.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n        form.get('BulkPlant.Country.Code').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n        form.get('BulkPlant.ZipCode').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        form.get('BulkPlant.CountyName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        form.get('BulkPlant.Latitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        form.get('BulkPlant.Longitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n        form.get('BulkPlant.SiteName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n    }\r\n    setTerminalValidators_(form: FormGroup, required: boolean) {\r\n        form.get('Terminal.Name').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Name').updateValueAndValidity();\r\n        form.get('Terminal.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Id').updateValueAndValidity();\r\n    }\r\n    setPickupValidators_(form: FormGroup, pickupType: number): void {\r\n        if (pickupType != 2) {\r\n            this.setBulkPlantValidators_(form, false);\r\n            this.setTerminalValidators_(form, true);\r\n        } else {\r\n            this.setTerminalValidators_(form, false);\r\n            this.setBulkPlantValidators_(form, true);\r\n        }\r\n    }\r\n    initPickupForm_(order: OrderPickupDetailModel): FormGroup {\r\n        let isTerminalPickup = order && order.PickupLocationType != 2;\r\n        let _pForm = this.fb.group({\r\n            PickupLocationType: this.fb.control(order.PickupLocationType),\r\n            Terminal: this.utilService.getTerminalForm(null, isTerminalPickup),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, !isTerminalPickup)\r\n        });\r\n        if (order != null || order != undefined) {\r\n            if (order.PickupLocationType != 2) {\r\n                _pForm.controls['Terminal'].patchValue({ Id: order.TerminalId, Name: order.TerminalName });\r\n            } else {\r\n                _pForm.controls['BulkPlant'].patchValue({\r\n                    Address: order.Address,\r\n                    City: order.City,\r\n                    State: { Id: order.StateId, Code: order.StateCode },\r\n                    Country: { Code: order.CountryCode },\r\n                    ZipCode: order.ZipCode,\r\n                    CountyName: order.CountyName,\r\n                    Latitude: order.Latitude,\r\n                    Longitude: order.Longitude,\r\n                    SiteName: order.BulkplantName\r\n                });\r\n            }\r\n        }\r\n        this.DGSubscription.add(_pForm.controls['PickupLocationType'].valueChanges.subscribe(x => { this.LocationType = x; }));\r\n        return _pForm;\r\n    }\r\n    setStateCode_(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n    onTerminalSelected_(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    onTerminalSearched_(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.SearchTerminalKey = keyword;\r\n        let searchKeyword$ = of(keyword);\r\n        this.DGSubscription.add(searchKeyword$.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            tap((data) => {\r\n                this._loadingTerminals = true\r\n                if (data.length < 3 && data.length != 0) {\r\n                    this.minCharRequired = true;\r\n                } else {\r\n                    this.minCharRequired = false;\r\n                }\r\n            }),\r\n            switchMap((term) => iif(\r\n                () => (term.length < 3 && term.length != 0),\r\n                of([]), this.sbService.getPickupTerminals(this.ChangePickupForOrders, keyword)\r\n                    .pipe(tap(() => { this._loadingTerminals = false; }),\r\n                        catchError(() => {\r\n                            this._loadingTerminals = false;\r\n                            this.searchError = true;\r\n                            return of([]);\r\n                        })\r\n                    ))),\r\n            tap(() => this._loadingTerminals = false)).subscribe((data) => {\r\n                this._loadingTerminals = false;\r\n                if (data.length === 0) {\r\n                    this.noTerminalFound = true;\r\n                } else {\r\n                    this.noTerminalFound = false;\r\n                }\r\n                this.Terminals = data;\r\n                this.changeDetectorRef.detectChanges();\r\n            },\r\n                (err) => {\r\n                    console.log(err);\r\n                }));\r\n    }\r\n    public validateTerminal_(terminal: any, event: any): void {\r\n        if (!terminal.get('Id').value) {\r\n            terminal.get('Name').patchValue('');\r\n        }\r\n    }\r\n    addressMapper_(data: any): AddressModel {\r\n        let state = this.StateList.find(x => x.Code == data.StateCode);\r\n        let country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        let _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n    getAddressByZip_(event: any): void {\r\n        let zipCode = event.target.value;\r\n        let regexUsa = new RegExp(RegExConstants.UsaZip);\r\n        let regexCan = new RegExp(RegExConstants.CanZip);\r\n        if (regexUsa.test(zipCode) || regexCan.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.DGSubscription.add(this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        if (data.CountryCode != 'CAR') {\r\n                            data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        }\r\n                        let addressModel = this.addressMapper_(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: { Code: addressModel.Country.Code },\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n    updatePickupLocation_() {\r\n        if (this.SelectedDRForEditPickup != null) {\r\n            let isCommon = false;\r\n            let pickupLoc = this.PickupForm.value;\r\n            this.SelectedDRForEditPickup.patchValue(pickupLoc);\r\n            this.setPickupLocation_(this.SelectedDRForEditPickup, pickupLoc);\r\n\r\n            //set badges for dr by terminal and order\r\n            let _orderId = this.SelectedDRForEditPickup.value.OrderId;\r\n            let _pickupLocationType = pickupLoc.PickupLocationType;\r\n            let _pickupLocationId = (_pickupLocationType != 2) ? (pickupLoc.Terminal.Id) : (pickupLoc.BulkPlant.SiteId);\r\n            let orderIds = [];\r\n            let selectedFormValue = this.SelectedDRForEditPickup.value;\r\n            if (selectedFormValue.hasOwnProperty('DeliveryRequests')) {\r\n                isCommon = true;\r\n                if (selectedFormValue.DeliveryRequests.length > 0) {\r\n                    orderIds = selectedFormValue.DeliveryRequests.map(function (a) { return a[\"OrderId\"]; });\r\n                }\r\n            }\r\n            else {\r\n                orderIds.push(_orderId);\r\n            }\r\n            //this.dipTestLoader = true;\r\n            this.DGSubscription.add(this.sbService.getOrderBadgesByTerminal(orderIds, _pickupLocationType, _pickupLocationId).subscribe((data: any) => {\r\n                //this.dipTestLoader = false;\r\n                if (data && data.length > 0) {\r\n                    if (!isCommon) {\r\n                        if (this.SelectedDRForEditPickup.value.IsCommonBadge == false || (data[0].BadgeNo1 && data[0].BadgeNo1.length > 0) || (data[0].BadgeNo2 && data[0].BadgeNo2.length > 0) || (data[0].BadgeNo3 && data[0].BadgeNo3.length > 0)) {\r\n                            this.SelectedDRForEditPickup.controls['BadgeNo1'].setValue(data[0].BadgeNo1);\r\n                            this.SelectedDRForEditPickup.controls['BadgeNo2'].setValue(data[0].BadgeNo2);\r\n                            this.SelectedDRForEditPickup.controls['BadgeNo3'].setValue(data[0].BadgeNo3);\r\n                            this.SelectedDRForEditPickup.controls['IsCommonBadge'].setValue(false);\r\n                        }\r\n                    }\r\n                    else {\r\n                        let _drArray = this.SelectedDRForEditPickup.controls['DeliveryRequests'] as FormArray;\r\n                        _drArray.controls.forEach((_drForm: FormGroup) => {\r\n                            if (_drForm.value.OrderId && _drForm.value.OrderId > 0) {\r\n                                let badgeInfo = data.find(t => t.OrderId == _drForm.value.OrderId);\r\n                                if (_drForm.value.IsCommonBadge == false || (badgeInfo.BadgeNo1 && badgeInfo.BadgeNo1.length > 0) || (badgeInfo.BadgeNo2 && badgeInfo.BadgeNo2.length > 0) || (badgeInfo.BadgeNo3 && badgeInfo.BadgeNo3.length > 0)) {\r\n                                    _drForm.controls['BadgeNo1'].setValue(badgeInfo.BadgeNo1);\r\n                                    _drForm.controls['BadgeNo2'].setValue(badgeInfo.BadgeNo2);\r\n                                    _drForm.controls['BadgeNo3'].setValue(badgeInfo.BadgeNo3);\r\n                                    _drForm.controls['IsCommonBadge'].setValue(false);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                this.findDrWithSameProductAndJob(this.SelectedDRForEditPickup, _orderId, pickupLoc, this.SelectedDRForEditPickupIndex);\r\n            }));\r\n        }\r\n\r\n        let dismiss = document.getElementById('btnDrPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n\r\n    private subscribeCommonPickupLocationChange_(): void {\r\n        this.DGSubscription.add(this.fmGroup.controls['IsCommonPickup'].valueChanges\r\n            .subscribe(x => {\r\n                x ? this.disableDeliveryGroupPickups_() : this.enableDeliveryGroupPickups_();\r\n                this.setCommonPickupFlag_();\r\n                this.setPickupValidators_(this.fmGroup, x);\r\n            }));\r\n    }\r\n    private PickupLocationTypeChange_(): void {\r\n        this.DGSubscription.add(this.PickupForm.controls['PickupLocationType'].valueChanges.subscribe((data) => {\r\n            this.PickupForm.markAllAsTouched;\r\n            this.PickupForm.markAsDirty();\r\n            this.setPickupValidators_(this.PickupForm, data);\r\n            let commonPickup = this.fmGroup.controls['IsCommonPickup'].value;\r\n            commonPickup ? this.disableDeliveryGroupPickups_() : this.enableDeliveryGroupPickups_();\r\n        }));\r\n    }\r\n    private disableDeliveryGroupPickups_(): void {\r\n        let _drArray = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                x.controls['Terminal'].disable();\r\n                x.controls['BulkPlant'].disable();\r\n            });\r\n        }\r\n        if (this.fmGroup.controls['PickupLocationType'].value == 2) {\r\n            this.fmGroup.controls['BulkPlant'].enable();\r\n            this.fmGroup.controls['Terminal'].disable();\r\n\r\n        } else {\r\n            this.fmGroup.controls['BulkPlant'].disable();\r\n            this.fmGroup.controls['Terminal'].enable();\r\n        }\r\n    }\r\n    private enableDeliveryGroupPickups_(): void {\r\n        let _drArray = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                x.controls['Terminal'].enable();\r\n                x.controls['BulkPlant'].enable();\r\n            });\r\n        }\r\n        this.fmGroup.controls['BulkPlant'].disable();\r\n        this.fmGroup.controls['Terminal'].disable();\r\n    }\r\n    private unsubscribeAllSubscriptions_(): void {\r\n        if (this.DGSubscription) {\r\n            this.DGSubscription.unsubscribe();\r\n        }\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.subscribeCommonPickupLocationChange_();\r\n    }\r\n    // end\r\n    getSiteList() {\r\n        this.selectedCustomer = [];\r\n        this.selectedLocation = [];\r\n        this.companySiteList = [];\r\n        this.SiteList = [];\r\n        this.OrderList = [];\r\n        this.selectedOrder = [];\r\n\r\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\r\n            this.loadingCustomers = true;\r\n            this.carrierService.getJobListForCarrier(this.SelectedRegionId).subscribe(t2 => {\r\n                this.companySiteList = t2 as CustomerJobsForCarrier[];\r\n                this.loadingCustomers = false;\r\n                let ele = document.getElementById('loadingCustomers');\r\n                if (ele) {\r\n                    ele.click()\r\n                }\r\n                this.loadDefaultLocations();\r\n            });\r\n        }\r\n    }\r\n\r\n    getAllDipTest() {\r\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\r\n            this.clearRaiseRequests();\r\n            let regionId = this.SelectedRegionId;\r\n            this.dipTestLoader = true;\r\n            const customerId = this.SelectedCustomerId == null ? 0 : parseInt(this.SelectedCustomerId);\r\n            this.carrierService.getDipTests(null, this.SelectedRegionId, customerId, this.RequestFromBuyerWallyBoard, this.showForm).subscribe(data => {\r\n                this.DipTestsForEachTank = data;\r\n                this.dipTestLoader = false;\r\n                let companyId = this.getCustomerForJob();\r\n                if (data.length == 0 && companyId != \"\") {\r\n                    this.isTankExists = false;\r\n                    this.getOrdersForJob(0, companyId, regionId);\r\n                }\r\n                else {\r\n                    this.isTankExists = true;\r\n                    this.fillRaiseDrForm();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getDipTestForSite(_jobId: any, _regionId: any) {\r\n        this.clearRaiseRequests();\r\n        this.dipTestLoader = true;\r\n        const customerId = this.SelectedCustomerId == null ? 0 : parseInt(this.SelectedCustomerId);\r\n        this.carrierService.getDipTests(_jobId, _regionId, customerId, this.RequestFromBuyerWallyBoard, this.showForm).subscribe(data => {\r\n            this.DipTestsForEachTank = data;\r\n            let companyId = this.getCustomerForJob();\r\n\r\n            if (data.length == 0 && companyId != \"\") {\r\n                this.isTankExists = false;\r\n                this.getOrdersForJob(_jobId, companyId, _regionId);\r\n            }\r\n            else {\r\n                this.isTankExists = true;\r\n                let productIds: number[] = this.DipTestsForEachTank.map(x => x.ProductTypeId);\r\n                this.getProductExcludedOrdersForJob(this.SelectedLocationId, companyId, this.SelectedRegionId, productIds);\r\n            }\r\n        });\r\n    }\r\n\r\n    getOrdersForJob(_jobId: any, _customerId: any, _regionId: any) {\r\n        this.dipTestLoader = true;\r\n        let skipMarineConversion = false;\r\n        this.carrierService.getOrdersForJob(_jobId, _customerId, _regionId, skipMarineConversion).subscribe(data => {\r\n            if (data != null) {\r\n                \r\n                //US to USA\r\n                if (data.DeliveryReqInput && data.DeliveryReqInput.length > 0 && data.DeliveryReqInput.some(x => x.OrderPickupDetails && x.OrderPickupDetails.length > 0 && x.OrderPickupDetails.some(y => y.CountryCode == \"US\"))) {\r\n                    data.DeliveryReqInput.forEach((request: DipTestViewModel) => {\r\n                        request.OrderPickupDetails.forEach(p => {\r\n                            if (p.CountryCode == \"US\") \r\n                                p.CountryCode = \"USA\";\r\n                        })\r\n                    });\r\n                }\r\n\r\n                this.OrderList = data.OrderList;\r\n                this.selectedOrder = [];\r\n                this.OrderDetails = data.DeliveryReqInput;\r\n                this.DipTestsForEachTank = data.DeliveryReqInput.filter(t => t.ProductTypeId != additiveProductTypeId);\r\n            }\r\n            this.dipTestLoader = false;\r\n            this.showForm = true;\r\n            this.fillRaiseDrForm();\r\n        });\r\n    }\r\n\r\n    getUoM(_orderId: any, blendedRequest: FormGroup) {\r\n        if (_orderId) {\r\n            let order = this.additiveOrders.find(t => t.Id == _orderId);\r\n            if (order) {\r\n                blendedRequest.get('UoM').setValue(order.UoM);\r\n            }\r\n            else {\r\n                blendedRequest.get('UoM').setValue(this.DipTestsForEachTank[this.DrForEditBlendedRequestIndex]?.UoM);\r\n            }\r\n        }\r\n        else {\r\n            blendedRequest.get('UoM').setValue(this.DipTestsForEachTank[this.DrForEditBlendedRequestIndex]?.UoM);\r\n        }\r\n    }\r\n\r\n    //GET ORDERS EXCLUDING TANK PRODUCTS\r\n    getProductExcludedOrdersForJob(_jobId: any, _customerId: any, _regionId: any, productsToExclude: number[]) {\r\n        this.dipTestLoader = true;\r\n        let skipMarineConversion = false;\r\n        this.carrierService.getOrdersForJob(_jobId, _customerId, _regionId, skipMarineConversion, 0, productsToExclude).subscribe(data => {\r\n            if (data != null) {\r\n\r\n                //US to USA\r\n                if (data.DeliveryReqInput && data.DeliveryReqInput.length > 0 && data.DeliveryReqInput.some(x => x.OrderPickupDetails && x.OrderPickupDetails.length > 0 && x.OrderPickupDetails.some(y => y.CountryCode == \"US\"))) {\r\n                    data.DeliveryReqInput.forEach((request: DipTestViewModel) => {\r\n                        request.OrderPickupDetails.forEach(p => {\r\n                            if (p.CountryCode == \"US\")\r\n                                p.CountryCode = \"USA\";\r\n                        })\r\n                    });\r\n                }\r\n\r\n                this.OrderList = data.OrderList;\r\n                this.selectedOrder = [];\r\n                this.OrderDetails = data.DeliveryReqInput;\r\n                this.OtherProductDipTestsForEachTank = data.DeliveryReqInput;\r\n                //this.DipTestsForEachTank = this.DipTestsForEachTank.concat(data.DeliveryReqInput)\r\n            }\r\n            this.dipTestLoader = false;\r\n            this.showForm = true;\r\n            this.fillOtherProductRaiseDrForm();\r\n        });\r\n    }\r\n    //FILL DR FORM WITH OTHER PRODUCTS\r\n    fillOtherProductRaiseDrForm() {\r\n        let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n        let currentObj = this;\r\n        if (this.OtherProductDipTestsForEachTank != null && this.OtherProductDipTestsForEachTank != undefined && this.OtherProductDipTestsForEachTank.length > 0) {\r\n\r\n            this.DipTestsForEachTank = this.DipTestsForEachTank.concat(this.OtherProductDipTestsForEachTank);\r\n\r\n            this.DipTestsForEachTank.filter(t => t.ProductTypeId != additiveProductTypeId).forEach(function (element: DipTestViewModel, index: number) {\r\n                prods.push(currentObj.buildRaiseDRForm(element));\r\n            });\r\n            if (!this.changeDetectorRef['destroyed']) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        }\r\n        else {\r\n            this.fillRaiseDrForm();\r\n        }\r\n    }\r\n    \r\n    fillRaiseDrForm() {\r\n        let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n        let currentObj = this;\r\n        if (this.DipTestsForEachTank != null && this.DipTestsForEachTank != undefined) {\r\n            prods.clear();\r\n            this.DipTestsForEachTank.forEach(function (element: DipTestViewModel, index: number) {\r\n                prods.push(currentObj.buildRaiseDRForm(element));\r\n            });\r\n            if (!this.changeDetectorRef['destroyed']) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    openRaiseDrPanel() {\r\n        this.selectedLocation = [];\r\n        //this.BuyerCompanyName = \"\";\r\n        this.clearRaiseRequests();\r\n        this.getSiteList();\r\n        this.getAllDipTest();\r\n        this.getCreateDrSetting();\r\n    }\r\n\r\n    clearRaiseRequests() {\r\n        let controls = <FormArray>this.fmGroup.controls['DeliveryRequests'];\r\n        controls.clear();\r\n    }\r\n\r\n    createDR() {\r\n        this.showForm = true;\r\n        this.getAllDipTest();\r\n    }\r\n\r\n    loadTankDR(sales: SalesDataModel) {\r\n        this.SelectedRegionId = sales.RegionId;\r\n        this.SelectedLocationId = sales.TfxJobId.toString();\r\n        this.getSiteList();\r\n        this.selectedLocation = [];\r\n        this.clearRaiseRequests();\r\n        let job = new JobRegionModel();\r\n        job.Id = sales.TfxJobId;\r\n        job.Code = sales.SiteId;\r\n        job.Name = sales.SiteId;\r\n        job.LocationManagedType = sales.LocationManagedType;\r\n        this.selectedLocation = [job];\r\n        this.showForm = true;\r\n        this.getDipTestForSite(sales.TfxJobId, sales.RegionId);\r\n    }\r\n\r\n    buildRaiseDRForm(model: DipTestViewModel): FormGroup {\r\n        const orderPickupDetailsExist = (model.OrderPickupDetails && model.OrderPickupDetails.length > 0) ? true : false;\r\n        const blendOrderPickupDetailsExist = (model.BlendOrderPickupDetails && model.BlendOrderPickupDetails.length > 0) ? true : false;\r\n        const isTerminalPickup = orderPickupDetailsExist && model.OrderPickupDetails[0].PickupLocationType != 2;\r\n        let tanks = (model && model.Tanks && model.Tanks.length > 0) ? model.Tanks : [];\r\n        let _form = this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            SiteId: this.fb.control(model.SiteId == null ? model.JobId.toString() : model.SiteId),\r\n            JobId: this.fb.control(model.JobId),\r\n\r\n            TankId: this.fb.control(model.TankId),\r\n            StorageId: this.fb.control(model.StorageId),\r\n            ScheduleQuantityType: this.fb.control(1),\r\n            RequiredQuantity: this.fb.control(''),\r\n            IsTankAndAssetAvailableForJob: this.fb.control(model.IsTankAndAssetAvailableForJob),\r\n            IsMaxFillAllowed: this.fb.control(false),\r\n            IsReAssignToCarrier: this.fb.control(model.IsReAssignToCarrier),\r\n            Priority: this.fb.control(model.Priority.toLocaleString()),\r\n            CreatedByRegionId: this.fb.control(this.SelectedRegionId),\r\n            CurrentThreshold: this.fb.control(model.CurrentThreshold),\r\n            TankMaxFill: this.fb.control(model.TankMaxFill),\r\n            BuyerCompanyId: this.fb.control(model.BuyerCompanyId),\r\n            RecurringSchdule: this.fb.array([]),\r\n            CustomerCompany: this.fb.control(model.BuyerCompanyName),\r\n            isRecurringSchedule: this.fb.control(model.isRecurringSchedule),\r\n            PoNumber: this.fb.control(model.PoNumber),\r\n            TankName: this.fb.control(model.TankName),\r\n            Notes: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].DRNote : ''),\r\n            isRetainInfo: this.fb.control(false),\r\n            RetainInfo: this.fb.array([]),\r\n            IsRetainButtonClick: this.fb.control(false),\r\n            //isTankExists: this.fb.control(this.isTankExists),\r\n            SupplierCompanyId: this.fb.control((model.SupplierCompanies.length > 0) ? model.SupplierCompanies[0].Id : model.SupplierCompanyId),\r\n            SupplierCompanies: this.fb.control(model.SupplierCompanies),\r\n            RequestFromBuyerWallyBoard: this.fb.control(this.RequestFromBuyerWallyBoard),\r\n            IsCommonBadge: this.fb.control(model.IsCommonBadge),\r\n            BadgeNo1: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].Badge1 : null),\r\n            BadgeNo2: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].Badge2 : null),\r\n            BadgeNo3: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].Badge3 : null),\r\n            OrderId: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].OrderId : model.OrderId),\r\n            PickupLocationType: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].PickupLocationType : null),\r\n            ProductTypeId: this.fb.control(model.ProductTypeId),\r\n            FuelTypeId: this.fb.control(model.FuelTypeId),\r\n            Terminal: this.utilService.getTerminalForm(null, false),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, false),\r\n            OrderPickupDetails: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails : []),\r\n            BlendOrderPickupDetails: this.fb.control(blendOrderPickupDetailsExist ? model.BlendOrderPickupDetails : []),\r\n            //BLENDED DR\r\n            IsBlendedRequest: this.fb.control(false),\r\n            BlendedRequests: this.fb.array([]),\r\n            IsCommonPickupForBlend: this.fb.control(false),\r\n            BlendedGroupId: this.fb.control(null),\r\n            Tanks: this.fb.control(tanks),\r\n            SelectedDate: this.fb.control(model.SelectedDate || moment(new Date()).format('MM/DD/YYYY')),\r\n            IsFutureDR: this.fb.control(false),\r\n            IsCalendarView: this.fb.control(false),\r\n            DeliveryLevelPO: this.fb.control(null),\r\n            ScheduleStartTime: this.fb.control(null),\r\n            ScheduleEndTime: this.fb.control(null),\r\n            IndicativePrice: this.fb.control(null),\r\n            //bind required API response in the form\r\n            ProductName: this.fb.control(model.ProductName),\r\n            JobName: this.fb.control(model.JobName),\r\n            DisplayCaptureTime: this.fb.control(model.DisplayCaptureTime),\r\n            TankCapacity: this.fb.control(model.TankCapacity),\r\n            UoM: this.fb.control(model.UoM),\r\n            NetVolume: this.fb.control(model.NetVolume),\r\n            Ullage: this.fb.control(model.Ullage),\r\n            ReorderQuantity: this.fb.control(model.ReorderQuantity),\r\n            DisplayDRDetails: this.fb.control(model.DisplayDRDetails),\r\n            ExistingDR: this.fb.control(model.ExistingDR),\r\n            BuyerCompanyName: this.fb.control(model.BuyerCompanyName),\r\n            IsDRExists: this.fb.control(model.IsDRExists),\r\n\r\n        });\r\n\r\n        if (orderPickupDetailsExist && isTerminalPickup) {\r\n            _form.controls['Terminal'].patchValue({ Id: model.OrderPickupDetails[0].TerminalId, Name: model.OrderPickupDetails[0].TerminalName });\r\n        }\r\n        else if (orderPickupDetailsExist) {\r\n            _form.controls['BulkPlant'].patchValue({\r\n                Address: model.OrderPickupDetails[0].Address,\r\n                City: model.OrderPickupDetails[0].City,\r\n                State: { Id: model.OrderPickupDetails[0].StateId, Code: model.OrderPickupDetails[0].StateCode },\r\n                Country: { Code: model.OrderPickupDetails[0].CountryCode },\r\n                ZipCode: model.OrderPickupDetails[0].ZipCode,\r\n                CountyName: model.OrderPickupDetails[0].CountyName,\r\n                Latitude: model.OrderPickupDetails[0].Latitude,\r\n                Longitude: model.OrderPickupDetails[0].Longitude,\r\n                SiteName: model.OrderPickupDetails[0].BulkplantName,\r\n                SiteId: model.OrderPickupDetails[0].SiteId\r\n            });\r\n        }\r\n        return _form;\r\n    }\r\n    buildRecurringSchedule(model: any) {\r\n\r\n        let selected = []\r\n        if (model.WeekDayId && model.WeekDayId.length > 0) {\r\n            selected = this.ScheduleDaysDetails.filter(s => model.WeekDayId.includes(s.id));\r\n        }\r\n        return this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            ScheduleType: this.fb.control(model.ScheduleType),\r\n            WeekDayId: this.fb.control(model.WeekDayId),\r\n            TempWeekDayId: this.fb.control(selected),\r\n            MonthDayId: this.fb.control(model.MonthDayId),\r\n            Date: this.fb.control(model.Date == '' ? this.currentdate : model.Date),\r\n            ScheduleQuantityType: this.fb.control(model.ScheduleQuantityType),\r\n            RequiredQuantity: this.fb.control(model.RequiredQuantity),\r\n            TankName: this.fb.control(model.TankName),\r\n            IsBlendedProduct: this.fb.control(model.IsBlendedRequest),\r\n            RecurringBlendedGroupId: this.fb.control(getRecurringUniqueId()),\r\n            DeliveryLevelPO: this.fb.control(model.DeliveryLevelPO),\r\n        });\r\n    }\r\n    getDefaultRecurringScheduleDetails(TankName: string, IsBlendedRequest: boolean) {\r\n        return this.fb.group({\r\n            Id: this.fb.control(''),\r\n            ScheduleType: this.fb.control(1),\r\n            WeekDayId: this.fb.control([]),\r\n            TempWeekDayId: this.fb.control([]),\r\n            MonthDayId: this.fb.control(''),\r\n            Date: this.fb.control(this.currentdate),\r\n            ScheduleQuantityType: this.fb.control(1),\r\n            RequiredQuantity: this.fb.control(''),\r\n            TankName: this.fb.control(TankName),\r\n            IsBlendedProduct: this.fb.control(IsBlendedRequest),\r\n            RecurringBlendedGroupId: this.fb.control(getRecurringUniqueId()),\r\n            DeliveryLevelPO: this.fb.control(''),\r\n        });\r\n    }\r\n\r\n\r\n    public loadChart() {\r\n        // let siteId = this.SiteList.filter(t => t.Id == item.Id)[0].Code;\r\n        if (this.selectedLocation && this.selectedLocation.length > 0) {\r\n            this.chartdata = null;\r\n            this.isChartDataExistSubject.next(false);\r\n            let siteId = this.SiteList.filter(t => t.Id == this.selectedLocation[0].Id)[0].Code;\r\n            this.chartdata = { siteId: siteId, noOfDays: 3, tfxJobId: this.selectedLocation[0].Id };\r\n            this.isChartDataExistSubject.next(true);\r\n        }\r\n    }\r\n\r\n    public checkLocationAssignment(jobId: number) {\r\n        this.dipTestLoader = true;\r\n        this.carrierService.checkLocationAssignedToCarrier(jobId)\r\n            .subscribe((data: any) => {\r\n                this.dipTestLoader = false;\r\n                let result = data != null ? data.Result : null;\r\n                if (result != null && result.StatusCode == 0 && result.ResponseData != null && result.ResponseData != undefined) {\r\n                    if (result.ResponseData.IsLocationAssignedToCarrier) {\r\n                        this.FormValidationMessage = result.StatusMessage;\r\n                    }\r\n                    else {\r\n                        this.FormValidationMessage = \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    this.FormValidationMessage = \"\";\r\n                }\r\n            });\r\n    }\r\n\r\n    public changeActiveTab(priority) {\r\n        this.activePriorityTab = priority;\r\n    }\r\n\r\n    public onSiteSelect(item: DropdownItem): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.showForm = true;\r\n        this.SelectedLocationId = item.Id.toString();\r\n        this.getDipTestForSite(item.Id, this.SelectedRegionId);\r\n\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n        this.checkLocationAssignment(item.Id);\r\n        //this.getSalesData();\r\n        this.height_Panel = this.calHeight();\r\n        this.setLocationManagedType();\r\n    }\r\n\r\n    LocationManagedType = 0;\r\n    public setLocationManagedType() {\r\n        this.LocationManagedType = 0;\r\n        if (this.SiteList.length > 0 && this.selectedLocation.length > 0) {\r\n            this.LocationManagedType = this.SiteList.filter(t => t.Id == this.selectedLocation[0].Id)[0].LocationManagedType;\r\n        }\r\n    }\r\n\r\n    public calHeight() {\r\n        return this.viewportToPixels('100vh') - (this.elementFilter ? this.elementFilter.nativeElement.offsetHeight + 160 : 160);\r\n    }\r\n\r\n    public viewportToPixels(value) {\r\n        let parts = value.match(/([0-9\\.]+)(vh|vw)/)\r\n        let q = Number(parts[1])\r\n        let side = window[['innerHeight', 'innerWidth'][['vh', 'vw'].indexOf(parts[2])]]\r\n        return side * (q / 100)\r\n    }\r\n\r\n    public onSiteDeSelect(item: any): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.selectedLocation = [];\r\n        this.selectedOrder = [];\r\n        this.OrderList = [];\r\n        //this.BuyerCompanyName = \"\";\r\n        this.clearRaiseRequests();\r\n        this.showForm = !(this.selectedLocation.length == 0)\r\n        this.chartdata = null;\r\n        this.isChartDataExistSubject.next(false);\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n        this.FormValidationMessage = \"\";\r\n        this.SelectedLocationId = null;\r\n        this.getAllDipTest();\r\n        this.LocationManagedType = 0;\r\n    }\r\n    public onSelectAll(item: any): void {\r\n        this.selectedOrder = item;\r\n        this.onOrderChange();\r\n    }\r\n\r\n    public onOrderChange(): void {\r\n        let ids = this.selectedOrder.map(t => t.Id);\r\n        this.clearRaiseRequests();\r\n        if (ids.length > 0) {\r\n            this.DipTestsForEachTank = this.OrderDetails.filter(t => ids.indexOf(t.OrderId) != -1);\r\n        }\r\n        else {\r\n            this.DipTestsForEachTank = this.OrderDetails;\r\n        }\r\n        this.fillRaiseDrForm();\r\n        this.showForm = true;\r\n        this.height_Panel = this.calHeight();\r\n    }\r\n\r\n    public onCustomerSelect(item: any): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.selectedLocation = [];\r\n        this.selectedOrder = [];\r\n        this.SelectedCustomerId = item.CompanyId;\r\n        this.SiteList = this.companySiteList.find(x => x.CompanyId == item.CompanyId).Jobs;\r\n        this.getAllDipTest();\r\n        this.height_Panel = this.calHeight();\r\n    }\r\n\r\n    public onCustomerDeSelect(item: any): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.SelectedCustomerId = null;\r\n        this.loadDefaultLocations();\r\n        this.OrderList = [];\r\n        this.onSiteDeSelect(item);\r\n    }\r\n\r\n    loadDefaultLocations() {\r\n        this.SiteList = [];\r\n        this.SiteList = this.companySiteList.reduce((j, cj) => [...j, ...cj.Jobs], []);\r\n    }\r\n\r\n    getCustomerForJob(): string {\r\n        let customerCompanyId: string = \"\";\r\n        if (this.SelectedCustomerId != null) {\r\n            customerCompanyId = this.SelectedCustomerId;\r\n        }\r\n        else if (this.SelectedLocationId != null) {\r\n            let jobId = parseInt(this.SelectedLocationId);\r\n            let company = this.companySiteList.find(t => t.Jobs.some(t1 => t1.Id == jobId));\r\n            if (company != undefined && company != null) {\r\n                customerCompanyId = company.CompanyId.toString();\r\n            }\r\n        }\r\n        return customerCompanyId;\r\n    }\r\n\r\n    public UpdateHeldDrCount() {\r\n        this.carrierService.updateHeldDrCount().subscribe((data: any) => {\r\n            if (data && data > 0) {\r\n                $(\"#heldDrIcon\").removeClass('hide');\r\n                $(\"#heldDrsCount\").text(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    public onSubmit(): void {\r\n        this.isUserSubmit = true;\r\n        let isSapRequest = false;\r\n        let _requests = this.fmGroup.get(\"DeliveryRequests\").value as any[];\r\n\r\n        if (_requests.length <= 0) {\r\n            Declarations.msgerror('No Tank found to raise DR', undefined, undefined);\r\n            return;\r\n        }\r\n        var delRequests: DeliveryRequestViewModel[] = [];\r\n        //TANK MAX FILL VALIDATION\r\n        let _invalidQuantityRequests = 0;\r\n        //VALID DR COUNT\r\n        let _validRequests = 0;\r\n        //INVALID DAYS FOR RECURRING DR\r\n        let _rsInvalidDays = 0;\r\n        //INVALID DAYS FOR RECURRING DR\r\n        let _rsInvalidDate = 0;\r\n        //INVALID DAYS FOR RECURRING DR\r\n        let _rsInvalidQuantity = 0;\r\n        _requests.forEach(function (request) {\r\n            if (request.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && request.RequiredQuantity > request.TankMaxFill && !request.IsMaxFillAllowed) {\r\n                _invalidQuantityRequests++;\r\n                delRequests.push(request);\r\n            }\r\n            else if (request.ScheduleQuantityType > 1 || request.isRecurringSchedule || request.RequiredQuantity > 0) {\r\n                _validRequests++;\r\n            }\r\n            if (request.isRecurringSchedule) {\r\n                if (request.RecurringSchdule.length > 0) {\r\n                    request.RecurringSchdule.forEach(function (rcs) {\r\n                        if ((rcs.ScheduleType == 1 || rcs.ScheduleType == 2) && (rcs.TempWeekDayId.length == 0)) {\r\n                            _rsInvalidDays++;\r\n                        }\r\n                        else if (rcs.ScheduleType == 3 && !rcs.Date) {\r\n                            _rsInvalidDate++;\r\n                        }\r\n                        else if (!(rcs.RequiredQuantity > 0) && rcs.ScheduleQuantityType == 1) {\r\n                            _rsInvalidQuantity++;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        if (_invalidQuantityRequests > 0) {\r\n            if (delRequests.length > 0) {\r\n                this.sbService.postValidateDRMaxFill(delRequests).subscribe(response => {\r\n                });\r\n            }\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Required quantity is more than Max Fill.', undefined, undefined); return;\r\n\r\n        }\r\n        else if (_validRequests == 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Please enter valid required quantity for at least one tank/order.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidDays > 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Please select valid days for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidDate > 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Please select valid date for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidQuantity > 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Invalid required quantity for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        if (this.preferenceSetting?.CreditCheckType == 1) {\r\n            let isValid = true;\r\n            isSapRequest = true;\r\n            _requests.forEach(function (request) {\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0 && (request.IndicativePrice <= 0 || request.IndicativePrice == null)) {\r\n                    Declarations.msgerror('Please enter Indicative Price.', undefined, undefined);\r\n                    isValid = false;\r\n                }\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0) {\r\n                    if (request.OrderId == null || request.OrderId == 0) {\r\n                        Declarations.msgerror('Please select Order', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                    if ((request.Terminal == null || request.Terminal.Id == 0) && (request.Bulkplant == null || request.Bulkplant.SiteId == 0)) {\r\n                        Declarations.msgerror('Please select Pick up location', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                }\r\n            });\r\n            if (!isValid) {\r\n                this.isUserSubmit = false;\r\n                return;\r\n            }\r\n        }\r\n        if (this.fmGroup.valid) {\r\n            this.dipTestLoader = true;\r\n            //bind common pickup to model\r\n            let model = this.fmGroup.getRawValue();\r\n            let drList = model.DeliveryRequests as any[] || [];\r\n            const isCommonPickup = model.IsCommonPickup;\r\n\r\n            drList.forEach(dr => {\r\n                if (isCommonPickup) {\r\n                    dr.PickupLocationType = model.PickupLocationType;\r\n                    if (model.PickupLocationType != 2)\r\n                        dr.Terminal = model.Terminal;\r\n                    else\r\n                        dr.BulkPlant = model.BulkPlant;\r\n                    if (dr.BlendedRequests) {\r\n                        dr.BlendedRequests.forEach(blendDr => {\r\n                            blendDr.PickupLocationType = model.PickupLocationType;\r\n                            if (model.PickupLocationType != 2)\r\n                                blendDr.Terminal = model.Terminal;\r\n                            else\r\n                                blendDr.BulkPlant = model.BulkPlant;\r\n                        })\r\n                    }\r\n                }\r\n                if (dr.IsCommonBadge) {\r\n                    dr.BadgeNo1 = model.BadgeNo1;\r\n                    dr.BadgeNo2 = model.BadgeNo2;\r\n                    dr.BadgeNo3 = model.BadgeNo3;\r\n                }\r\n                if (dr.PickupLocationType != 2) {\r\n                    dr.BulkPlant = null;\r\n                }\r\n                else {\r\n                    dr.Terminal = null;\r\n                }\r\n                dr.BlendedRequests.forEach(blendDr => {\r\n                    if (blendDr.PickupLocationType != 2)\r\n                        blendDr.BulkPlant = null;\r\n                    else\r\n                        blendDr.Terminal = null;\r\n                })\r\n                // reccuring dr week days\r\n                if (dr.isRecurringSchedule && dr.RecurringSchdule && dr.RecurringSchdule.length > 0) {\r\n                    dr.RecurringSchdule.forEach(rcs => {\r\n                        if ((rcs.ScheduleType == 1 || rcs.ScheduleType == 2) && (rcs.TempWeekDayId.length > 0)) {\r\n                            rcs.WeekDayId = rcs.TempWeekDayId.map((day: any) => day.id.toString());\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n            this.carrierService.postRaiseRequests(model).subscribe((data: any) => {\r\n                this.isUserSubmit = false;\r\n                if (data != null && parseInt(data.StatusCode) == 0) {\r\n                    this.displayMessage(data);\r\n                    closeSlidePanel();\r\n                    this.clearForm();\r\n                    this.getSiteList();\r\n                    if (!isSapRequest) {\r\n                        this.onRaiseDR.emit();\r\n                        this.emitDataForDRDisplay();\r\n                    }\r\n                    else {\r\n                        this.UpdateHeldDrCount();\r\n                    }\r\n                    this.dipTestLoader = false;\r\n                }\r\n                else {\r\n                    this.dipTestLoader = false;\r\n                    const statusMessage = data == null ? 'Failed' : data.StatusMessage;\r\n                    Declarations.msgerror(statusMessage, undefined, undefined);\r\n                }\r\n                if (!this.changeDetectorRef['destroyed']) {\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.isUserSubmit = false;\r\n            this.IsLoading = false;\r\n            this.fmGroup.markAllAsTouched();\r\n        }\r\n    }\r\n    private displayMessage(data: any) {\r\n        if (data.StatusMessage.indexOf(this.messageSplitTag) != -1) {\r\n            let dataMessage = data.StatusMessage.split(this.messageSplitTag);\r\n            // Iterate through each value\r\n            for (var i = 0; i < dataMessage.length; i++) {\r\n                // Alert each number\r\n                if (dataMessage[i].indexOf(this.failedMessageIdentification) != -1) {\r\n                    let message = dataMessage[i].replace(this.failedMessageIdentification, '');\r\n                    Declarations.msgerror(message, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgsuccess(dataMessage[i], undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n        }\r\n    }\r\n    private emitDataForDRDisplay() {\r\n        if (this.IsDrFromMultiWindow) {\r\n            this.OnRaiseDRFromMultiWindow.emit();\r\n        }\r\n    }\r\n\r\n    public onSingleSubmit(form: any): void {\r\n        let isSapRequest = false;\r\n        let request = form.value;\r\n        let _rsInvalidDays = 0;\r\n        let _rsInvalidDate = 0;\r\n        let _rsInvalidQuantity = 0;\r\n        let _rsInvalidQuantityMaxFill = 0;\r\n\r\n        if (request.isRecurringSchedule != true) {\r\n            if (request.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && request.RequiredQuantity > request.TankMaxFill && !request.IsMaxFillAllowed) {\r\n                Declarations.msgerror('Required quantity is more than Max Fill.', undefined, undefined); return;\r\n            }\r\n            else if (request.ScheduleQuantityType == 1 && !(request.RequiredQuantity > 0)) {\r\n                Declarations.msgerror('Invalid required quantity.', undefined, undefined); return;\r\n            }\r\n            if (this.preferenceSetting?.CreditCheckType == 1) {\r\n                let isValid = true;\r\n                isSapRequest = true;\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0 && (request.IndicativePrice <= 0 || request.IndicativePrice == null)) {\r\n                    Declarations.msgerror('Please enter Indicative Price.', undefined, undefined);\r\n                    isValid = false;\r\n                }\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0) {\r\n                    if (request.OrderId == null || request.OrderId == 0) {\r\n                        Declarations.msgerror('Please select Order', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                    if ((request.Terminal == null || request.Terminal.Id == 0) && (request.Bulkplant == null || request.Bulkplant.SiteId == 0)) {\r\n                        Declarations.msgerror('Please select Pick up location', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                }\r\n                if (!isValid) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else if (request.isRecurringSchedule == true) {\r\n\r\n            if (request.RecurringSchdule.length > 0) {\r\n                request.RecurringSchdule.forEach(function (rcs) {\r\n                    if ((rcs.ScheduleType == 1 || rcs.ScheduleType == 2) && (rcs.WeekDayId.length == 0)) {\r\n                        _rsInvalidDays++;\r\n                    }\r\n                    else if (rcs.ScheduleType == 3 && !rcs.Date) {\r\n                        _rsInvalidDate++;\r\n                    }\r\n                    else if (!(rcs.RequiredQuantity > 0) && rcs.ScheduleQuantityType == 1) {\r\n                        _rsInvalidQuantity++;\r\n                    }\r\n                    else if (rcs.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && rcs.RequiredQuantity > request.TankMaxFill && !request.IsMaxFillAllowed && !request.IsMaxFillAllowed) {\r\n                        _rsInvalidQuantityMaxFill++;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                Declarations.msgerror('Invalid recurring schdule.', undefined, undefined); return;\r\n            }\r\n        }\r\n\r\n        if (_rsInvalidDays > 0) {\r\n            Declarations.msgerror('Please select valid days for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidDate > 0) {\r\n            Declarations.msgerror('Please select valid date for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidQuantity > 0) {\r\n            Declarations.msgerror('Invalid required quantity for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidQuantityMaxFill) {\r\n            Declarations.msgerror('Required quantity is more than Max Fill for recurring schedule.', undefined, undefined); return;\r\n        }\r\n\r\n        this.dipTestLoader = true;\r\n        this.carrierService.postRaiseRequest(request)\r\n            .subscribe((data: any) => {\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    if (!isSapRequest) {\r\n                        this.onRaiseDR.emit();\r\n                    }\r\n                    else {\r\n                        this.UpdateHeldDrCount();\r\n                    }\r\n                    this.dipTestLoader = false;\r\n                    //disable current submitt buttton\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    this.dipTestLoader = false;\r\n                }\r\n            })\r\n    }\r\n    clearForm() {\r\n        this.fmGroup.reset();\r\n        this.clearRaiseRequests();\r\n        this.showForm = false;\r\n        this.FormValidationMessage = \"\";\r\n        // destroy chart\r\n        this.chartdata = null;\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n    }\r\n\r\n    removeTank(formIndex: number) {\r\n        let control = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        control.removeAt(formIndex);\r\n    }\r\n    subscribeDisableControlsSubject(): void {\r\n        if (this.DisableControlsSubscription) {\r\n            this.DisableControlsSubscription.unsubscribe();\r\n        }\r\n        this.DisableControlsSubscription = this.dataService.DisableDSBControlsSubject.subscribe(x => {\r\n            this.disableControl = x;\r\n        });\r\n    }\r\n    public addNewSchedule(product: any): void {\r\n        product.get(\"RecurringSchdule\").push(this.getDefaultRecurringScheduleDetails(product.get('TankName').value, product.get('IsBlendedRequest').value));\r\n        if (product.get('IsBlendedRequest').value) {\r\n            var totalQty = 0;\r\n            var blendedRequests = <FormArray>product.get('BlendedRequests');\r\n            blendedRequests.controls.forEach(x => {\r\n                var requiredQty = x.get('RequiredQuantity').value;\r\n                totalQty = totalQty + requiredQty;\r\n            });\r\n            var deliveryReqControl = <FormArray>product.get('RecurringSchdule');\r\n            deliveryReqControl.controls.forEach(x => {\r\n                if (x.get('Id').value == '' || x.get('Id').value == null) {\r\n                    x.get('RequiredQuantity').setValue(totalQty);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public enableSchedule(product: any, index: any): void {\r\n        if (!product.get('IsBlendedRequest').value) {\r\n            product.get('RequiredQuantity').setValue(null);\r\n            if (product.get('isRecurringSchedule').value === true) {\r\n                product.get('RequiredQuantity').disable();\r\n                product.get('ScheduleQuantityType').disable();\r\n                product.get('Priority').setValue(1);\r\n                $(\"#mustgo\" + index).prop(\"checked\", true);\r\n                let PoNumber = product.get('PoNumber').value == null ? \"\" : product.get('PoNumber').value;\r\n                let JobId = product.get('JobId').value;\r\n                let ProductTypeId = product.get('ProductTypeId').value;\r\n                let JobSiteId = product.get('SiteId').value == null ? \"\" : product.get('SiteId').value;\r\n                this.getRecurringSchedule(product, PoNumber, JobId, JobSiteId, ProductTypeId, index, product.get('IsBlendedRequest').value);\r\n\r\n            } else {\r\n                product.get('isRecurringSchedule').setValue(false);\r\n                product.get('RequiredQuantity').enable();\r\n                product.get('ScheduleQuantityType').enable();\r\n                $(\".showHide\" + index).hide();\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (product.get('isRecurringSchedule').value === true) {\r\n                let PoNumber = product.get('PoNumber').value == null ? \"\" : product.get('PoNumber').value;\r\n                let JobId = product.get('JobId').value;\r\n                let ProductTypeId = product.get('ProductTypeId').value;\r\n                let JobSiteId = product.get('SiteId').value == null ? \"\" : product.get('SiteId').value;\r\n                this.getRecurringSchedule(product, PoNumber, JobId, JobSiteId, ProductTypeId, index, product.get('IsBlendedRequest').value);\r\n\r\n            }\r\n            else {\r\n                $(\".showHide\" + index).hide();\r\n            }\r\n\r\n        }\r\n    }\r\n    public DeleteSchedule(product: any, index: any, Id: any) {\r\n        let recurringSchedule = <FormArray>product.get(\"RecurringSchdule\");\r\n        if (Id == '') {\r\n            if (index > -1) {\r\n                recurringSchedule.removeAt(index);\r\n                if (recurringSchedule.length == 0) {\r\n                    product.get('RequiredQuantity').enable();\r\n                    product.get('ScheduleQuantityType').enable();\r\n                    product.get('isRecurringSchedule').patchValue(false);\r\n                    $(\".showHide\" + index).hide();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.dipTestLoader = true;\r\n            this.carrierService.deleteRecurringScheduleDetails(Id).subscribe(data => {\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.dipTestLoader = false;\r\n                    if (index > -1) {\r\n                        recurringSchedule.removeAt(index);\r\n                        if (recurringSchedule.length == 0) {\r\n                            product.get('RequiredQuantity').enable();\r\n                            product.get('ScheduleQuantityType').enable();\r\n                            product.get('isRecurringSchedule').patchValue(false);\r\n                            $(\".showHide\" + index).hide();\r\n                        }\r\n                    }\r\n                    this.onRaiseDR.emit();\r\n                    this.emitDataForDRDisplay();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    this.dipTestLoader = false;\r\n                }\r\n                if (!this.changeDetectorRef['destroyed'])\r\n                    this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n    public setSelectedDate($event: any, recurringSchedule: any) {\r\n        if ($event != '') {\r\n            recurringSchedule.get('Date').patchValue($event);\r\n        }\r\n    }\r\n    public onTagChanged($event: any, recurringSchedule: any) {\r\n        recurringSchedule.get('WeekDayId').patchValue($event);\r\n    }\r\n    public getRecurringSchedule(product: any, PoNumber: string, JobId: number, JobSiteId: string, productTypeId: number, index: number, IsBlendedRequest: false) {\r\n        //let AssetId = product.get('AssetId').value = null ? 0 : parseInt(product.get('AssetId').value);\r\n        let recurringScheduleControls = product.get('RecurringSchdule') as FormArray;\r\n        recurringScheduleControls.clear();//removing all controls from the RecurringSchdule from array\r\n        this.dipTestLoader = true;\r\n        this.carrierService.getRecurringScheduleDetails(JobId, PoNumber, JobSiteId, productTypeId).subscribe((data: any) => {\r\n            let dataLength = data.length;\r\n            $(\".showHide\" + index).show();\r\n            if (data.length > 0) {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    recurringScheduleControls.push(this.buildRecurringSchedule(data[i]));\r\n                    if (dataLength == i + 1) {\r\n                        this.dipTestLoader = false;\r\n                        if (!this.changeDetectorRef['destroyed'])\r\n                            this.changeDetectorRef.detectChanges();\r\n\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.dipTestLoader = false;\r\n                recurringScheduleControls.push(this.getDefaultRecurringScheduleDetails(product.get('TankName').value, IsBlendedRequest));\r\n                if (!this.changeDetectorRef['destroyed'])\r\n                    this.changeDetectorRef.detectChanges();\r\n            }\r\n            var totalQty = 0;\r\n            var blendedRequests = <FormArray>product.get('BlendedRequests');\r\n            blendedRequests.controls.forEach(x => {\r\n                var requiredQty = x.get('RequiredQuantity').value;\r\n                totalQty = totalQty + requiredQty;\r\n            });\r\n            var deliveryReqControl = <FormArray>product.get('RecurringSchdule');\r\n            deliveryReqControl.controls.forEach(x => {\r\n                if (x.get('Id').value == '' || x.get('Id').value == null) {\r\n                    x.get('RequiredQuantity').setValue(totalQty);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeSalesGrid() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n        if (this.dtTrigger) {\r\n            this.dtTrigger.unsubscribe();\r\n            this.dtTrigger = new Subject();\r\n        }\r\n    }\r\n\r\n    public getSalesData() {\r\n        this.SalesData = [];\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n        }\r\n        this.initializeSalesGrid();\r\n        let inputs = {\r\n            RegionId: this.SelectedRegionId,\r\n            Priority: DeliveryReqPriority.None,\r\n            CustomerId: this.getCustomerForJob(),\r\n            LocationId: this.SelectedLocationId,\r\n            SelectedTab: '',\r\n            Carriers: '',\r\n            IsShowCarrierManaged: '',\r\n            IsShowRetailJobs: '',\r\n            InventoryCaptureType: '',\r\n        };\r\n        this.isLoadingSubject.next(true);\r\n        this.dispatcherService.getSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\r\n            this.SalesData = resp;\r\n            this.isLoadingSubject.next(false);\r\n            this.dtTrigger.next();\r\n            // this.datatableRerender();\r\n        });\r\n    }\r\n\r\n    public onCaculateRetainWindow() {\r\n        if (this.isTankExists) {\r\n            let data = this.fmGroup.get('DeliveryRequests').value as any[];\r\n            if (data != null) {\r\n                // let tankinfo = data.filter(x => x.RequiredQuantity != '').map(x => {\r\n                //     return {\r\n                //         JobId: x.JobId,\r\n                //         siteId: x.SiteId == null ? x.JobId : x.SiteId,\r\n                //         tankId: x.TankId,\r\n                //         storageId: x.StorageId,\r\n                //         Id: x.AssetId,\r\n                //         Quantity: x.RequiredQuantity,\r\n                //     };\r\n                // });\r\n                let tankinfo = []\r\n                data.forEach((x) => {\r\n                    if (x && x.Tanks && x.Tanks.length > 0) {\r\n                        x.Tanks.forEach((tank: any) => {\r\n                            tankinfo.push({\r\n                                //JobId: x.JobId,\r\n                                Id: tank.AssetId,\r\n                                siteId: x.SiteId,\r\n                                storageId: tank.StorageId,\r\n                                tankId: tank.TankId,\r\n                                TankName: tank.TankName,\r\n                                Quantity: x.RequiredQuantity,\r\n                            })\r\n                        })\r\n                    }\r\n                });\r\n\r\n                if (tankinfo.length > 0) {\r\n                    this.dipTestLoader = true;\r\n                    if (IsBuyerCompany == false) {\r\n                        this.dispatcherService.calculateTankDetailsRetainWindowInfo(tankinfo).subscribe((resp: any[]) => {\r\n                            this.dipTestLoader = false;\r\n                            if (resp != null && resp.length > 0) {\r\n                                let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n                                this.updateRetainInfo(resp, prods);\r\n                            }\r\n                            if (!this.changeDetectorRef['destroyed'])\r\n                                this.changeDetectorRef.detectChanges();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.dispatcherService.calculateBuyerTankDetailsRetainWindowInfo(tankinfo).subscribe((resp: any) => {\r\n                            this.dipTestLoader = false;\r\n                            if (resp != null && resp.length > 0) {\r\n                                let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n                                this.updateRetainInfo(resp, prods);\r\n                            }\r\n                            if (!this.changeDetectorRef['destroyed'])\r\n                                this.changeDetectorRef.detectChanges();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSingleCaculateRetainWindow(form: any) {\r\n\r\n        let _product = form.value;\r\n        let Qty = _product[\"RequiredQuantity\"];\r\n\r\n        if ((Qty != '' || Qty != null) && _product.Tanks && _product.Tanks.length > 0) {\r\n\r\n            let tanks = _product.Tanks.map((tank: any) => {\r\n                return {\r\n                    Id: tank.AssetId,\r\n                    siteId: _product.SiteId,\r\n                    storageId: tank.StorageId,\r\n                    tankId: tank.TankId,\r\n                    TankName: tank.TankName,\r\n                    Quantity: _product.RequiredQuantity,\r\n                }\r\n            });\r\n\r\n            this.dipTestLoader = true;\r\n            if (IsBuyerCompany == false) {\r\n                this.dispatcherService.calculateTankDetailsRetainWindowInfo(tanks).subscribe((resp: any[]) => {\r\n                    this.dipTestLoader = false;\r\n                    if (resp != null && resp.length > 0) {\r\n                        this.updateRetainSingleInfo(resp, form);\r\n                    }\r\n                    if (!this.changeDetectorRef['destroyed'])\r\n                        this.changeDetectorRef.detectChanges();\r\n                });\r\n            }\r\n            else {\r\n                this.dispatcherService.calculateBuyerTankDetailsRetainWindowInfo(tanks).subscribe((resp: any) => {\r\n                    this.dipTestLoader = false;\r\n                    if (resp != null && resp.length > 0) {\r\n                        this.updateRetainSingleInfo(resp, form);\r\n                    }\r\n                    if (!this.changeDetectorRef['destroyed'])\r\n                        this.changeDetectorRef.detectChanges();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public updateRetainInfo(resp: any[], products: FormArray) {\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n\r\n            let productForm = products.controls[i];\r\n            let productObj = productForm.value;\r\n\r\n            let SiteId = productObj.SiteId;\r\n            let assetIds: number[] = productObj.Tanks.map((tank: any) => { return tank.AssetId });\r\n            let TankIds: number[] = productObj.Tanks.map((tank: any) => { return tank.TankId });\r\n            let StorageIds: number[] = productObj.Tanks.map((tank: any) => { return tank.StorageId });\r\n\r\n            let tankDetails = resp.filter(top => top.siteId == SiteId && TankIds.includes(top.tankId) && StorageIds.includes(top.storageId) && assetIds.includes(top.Id));\r\n\r\n            let controls = <FormArray>productForm.get('RetainInfo');\r\n            controls.clear();\r\n\r\n            let currentObj = this;\r\n\r\n            if (tankDetails != null) {\r\n                productForm.get('isRetainInfo').setValue(true);\r\n\r\n                tankDetails.forEach(function (tank) {\r\n                    controls.push(currentObj.buildRetailInfoForm(tank));\r\n                });\r\n            }\r\n            else {\r\n                productForm.get('isRetainInfo').setValue(false);\r\n            }\r\n            productForm.get('IsRetainButtonClick').setValue(true);\r\n        }\r\n    }\r\n\r\n    buildRetailInfoForm(tank: any): FormGroup {\r\n        return this.fb.group({\r\n            RetainTime: this.fb.control(tank.RetainTime),\r\n            RetainDate: this.fb.control(tank.RetainDate),\r\n            WindowStartTime: this.fb.control(tank.WindowStartTime),\r\n            WindowStartDate: this.fb.control(tank.WindowStartDate),\r\n            WindowEndTime: this.fb.control(tank.WindowEndTime),\r\n            WindowEndDate: this.fb.control(tank.WindowEndDate),\r\n            TankName: this.fb.control(tank.TankName)\r\n        });\r\n    }\r\n\r\n    public updateRetainSingleInfo(resp: any[], productForm: any) {\r\n\r\n\r\n        let productObj = productForm.value;\r\n        let assetIds: number[] = productObj.Tanks.map((tank: any) => { return tank.AssetId });\r\n        let TankIds: number[] = productObj.Tanks.map((tank: any) => { return tank.TankId });\r\n        let StorageIds: number[] = productObj.Tanks.map((tank: any) => { return tank.StorageId });\r\n        let SiteId = productObj.SiteId == null ? productObj.JobId : productObj.SiteId;\r\n\r\n        let tankDetails = resp.filter(top => top.siteId == SiteId && TankIds.includes(top.tankId) && StorageIds.includes(top.storageId) && assetIds.includes(top.Id));\r\n\r\n        let controls = <FormArray>productForm.get('RetainInfo');\r\n        controls.clear();\r\n\r\n        if (tankDetails != null) {\r\n            productForm.controls['isRetainInfo'].setValue(true);\r\n\r\n            let _this = this;\r\n            tankDetails.forEach(function (tank) {\r\n                controls.push(_this.buildRetailInfoForm(tank));\r\n            });\r\n        }\r\n        else {\r\n            productForm.controls['isRetainInfo'].setValue(false);\r\n        }\r\n        productForm.controls['IsRetainButtonClick'].setValue(true);\r\n    }\r\n\r\n    public hideShowCommonBadgeArea() {\r\n\r\n        let deliveryRequests: any[] = this.fmGroup.get('DeliveryRequests').value as any[] || [];\r\n        if (deliveryRequests.some(dr => dr.IsCommonBadge)) {\r\n            this.IsCommonBadge = true;\r\n            this.fmGroup.controls['IsCommonBadge'].setValue(true);\r\n\r\n        } else {\r\n            this.IsCommonBadge = false;\r\n            this.fmGroup.controls['IsCommonBadge'].setValue(false);\r\n        }\r\n    }\r\n    getDefaultTBDForm() {\r\n        let TBDGroupID = \"TBD_\" + new Date().getUTCMilliseconds();\r\n        let _form = this.fb.group({\r\n            SelectedFuelType: this.fb.control([]),\r\n            SelectedOtherFuelType: this.fb.control([]),\r\n            Priority: this.fb.control(1),\r\n            PickupLocationType: this.fb.control(0),\r\n            Terminal: this.utilService.getTerminalForm(new DropdownItem(), false),\r\n            BulkPlant: this.utilService.getBulkPlantForm(new DropAddressModel(), false),\r\n            TBDGroupId: this.fb.control(TBDGroupID),\r\n            DeliveryRequests: this.fb.array([]),\r\n        });\r\n        return _form;\r\n    }\r\n    getTBDDeliveryRequestForm(x: any, productType: any) {\r\n        let _form = this.fb.group({\r\n            FuelTypeId: this.fb.control(x.Id),\r\n            FuelTypeName: this.fb.control(x.Name),\r\n            DRScheduleQuantityType: this.fb.control(1),\r\n            ProductTypeId: this.fb.control(productType.ProductTypeId),\r\n            ProductTypeName: this.fb.control(productType.ProductTypeName),\r\n            RequiredQty: this.fb.control(''),\r\n            BadgeNo1: this.fb.control(''),\r\n            BadgeNo2: this.fb.control(''),\r\n            BadgeNo3: this.fb.control(''),\r\n            Notes: this.fb.control(''),\r\n            DeliveryLevelPO: this.fb.control(''),\r\n        });\r\n        return _form;\r\n    }\r\n    getTBDDefaultData() {\r\n        this.Terminals = [];\r\n        this.StateList = [];\r\n        this.CountryList = [];\r\n        this.BulkPlants = [];\r\n        this.FuelTypeDetails = [];\r\n        this.OtherFuelTypeDetails = [];\r\n        this.TBDDeliveryRequestViewModel = new RaiseTBDDeliveryRequest();\r\n        this.isTBDUserSubmit = false;\r\n        this.TBDdipTestLoader = false;\r\n        this.getRequiredDataForPickupDetails();\r\n\r\n        this.addresService.getBulkPlants('').subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n        });\r\n      \r\n        this.DGSubscription.add(this.sbService.getTBDPickupTerminals('').subscribe((data: DropdownItem[]) => {\r\n            this.Terminals = data;\r\n        }));\r\n        let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        prods.clear();\r\n        this.carrierService.getDefaultTBDScheduleData().subscribe(data => {\r\n            this.FuelTypeDetails = data.MstProductTypes;\r\n            this.companyUoM = data.UoM;\r\n            this.OtherFuelTypeDetails = data.OtherProducts;\r\n            if (data.OtherProducts && data.OtherProducts.length > 0) {\r\n                this.otherProductTypeId = data.OtherProducts[0].ProductTypeId;\r\n            }\r\n            let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n            prods.push(this.getDefaultTBDForm());\r\n            if (!this.changeDetectorRef['destroyed'])\r\n                this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n    openRaiseTBDDrPanel() {\r\n        this.getTBDDefaultData();\r\n    }\r\n    public addTBDDR() {\r\n        let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        prods.push(this.getDefaultTBDForm());\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onFuelTypeSelect(item: any, product: FormGroup, isOtherProduct: boolean) {\r\n        let productType = this.getProductType(isOtherProduct, item);\r\n        let prodDeliveryRequests = product.get('DeliveryRequests').value;\r\n        let prodDeliveryRequestsFormArray = product.get('DeliveryRequests') as FormArray;\r\n        var prodExists = prodDeliveryRequests.find(x => x.FuelTypeId == item.Id && x.ProductTypeId == productType.ProductTypeId);\r\n        if (prodExists == null) {\r\n            prodDeliveryRequestsFormArray.push(this.getTBDDeliveryRequestForm(item, productType));\r\n        }\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onFuelTypeDeSelect(item: any, product: FormGroup, isOtherProduct: boolean) {\r\n        let productType = this.getProductType(isOtherProduct, item);\r\n        let prodDeliveryRequests = product.get('DeliveryRequests') as FormArray;\r\n        prodDeliveryRequests.controls.forEach((x1: FormGroup, index) => {\r\n            if (item.Id == x1.get('FuelTypeId').value && productType.ProductTypeId == x1.get('ProductTypeId').value) {\r\n                prodDeliveryRequests.removeAt(index);\r\n            }\r\n        });\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    onFuelTypeSelectAll(items: any, product: FormGroup, isOtherProduct: boolean): void {\r\n        let prodDeliveryRequests = product.get('DeliveryRequests') as FormArray;\r\n        let drs = prodDeliveryRequests.value;\r\n        items.forEach(x => {\r\n            let productType = this.getProductType(isOtherProduct, x);\r\n            if (drs.find(t => t.FuelTypeId == x.Id && t.ProductTypeId == productType.ProductTypeId) == null) {\r\n                prodDeliveryRequests.push(this.getTBDDeliveryRequestForm(x, productType));\r\n            }\r\n        });\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onFuelTypeDeSelectAll(product: FormGroup, isOtherProduct: boolean): void {\r\n        let prodDeliveryRequests = product.get('DeliveryRequests') as FormArray;\r\n        let selectedDrs = this.fb.array([]);\r\n        prodDeliveryRequests.controls.forEach((x1: FormGroup, index) => {\r\n            let removeFuel = false;\r\n            if (isOtherProduct == true && x1.get('ProductTypeId').value == this.otherProductTypeId) {\r\n                removeFuel = true;\r\n            }\r\n            if (isOtherProduct == false && x1.get('ProductTypeId').value != this.otherProductTypeId) {\r\n                removeFuel = true;\r\n            }\r\n            if (removeFuel == false) {\r\n                selectedDrs.push(x1);\r\n            }\r\n        });\r\n        prodDeliveryRequests.clear();\r\n        selectedDrs.controls.forEach(t => {\r\n            prodDeliveryRequests.push(t);\r\n        });\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private getProductType(isOtherProduct: boolean, item: any) {\r\n        let productType;\r\n        if (isOtherProduct == false)\r\n            productType = this.FuelTypeDetails.find(t => t.Id == item.Id);\r\n\r\n        else\r\n            productType = this.OtherFuelTypeDetails.find(t => t.Id == item.Id);\r\n        return productType;\r\n    }\r\n\r\n    editTBDPickupLocation_(tdr: FormGroup, drIndex: number): void {\r\n        //this.PickupForm.get('Terminal').get('SelectedTerminal').setValue('');\r\n        this.SelectedTBDForEditPickupIndex = drIndex;\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedTBDForEditPickup = tdr;\r\n        let tempPickupLocationType = this.SelectedTBDForEditPickup.controls['PickupLocationType'].value;\r\n        if (tdr == null || tdr == undefined || tempPickupLocationType == null) {\r\n            this.SelectedTBDForEditPickup = this.fmTBDGroup;\r\n        }\r\n        let _pickupType = this.SelectedTBDForEditPickup.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = this.SelectedTBDForEditPickup.controls['Terminal'].value;\r\n        let _bulkPlant = this.SelectedTBDForEditPickup.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n        this.setPickupLocation_(this.SelectedTBDForEditPickup, location);\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n    updateTBDPickupLocation_() {\r\n        if (this.SelectedTBDForEditPickup != null) {\r\n            let pickupLoc = this.PickupForm.value;\r\n            this.SelectedTBDForEditPickup.patchValue(pickupLoc);\r\n            this.setPickupLocation_(this.SelectedTBDForEditPickup, pickupLoc);\r\n            let dismiss = document.getElementById('btnTBDDrPickupClose') as HTMLElement;\r\n            dismiss.click();\r\n            if (!this.changeDetectorRef['destroyed'])\r\n                this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    removeTBDDR(product: FormGroup, index: number) {\r\n        let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        prods.removeAt(index);\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    removeSubTBDDR(product: FormGroup, index: number, FuelTypeId: number, productTypeId: number) {\r\n        let prods = product.get('DeliveryRequests') as FormArray;\r\n        prods.removeAt(index);\r\n        let selectedProductIds = [];\r\n        if (productTypeId == this.otherProductTypeId) {\r\n            let selectedOtherFuelType = product.get('SelectedOtherFuelType').value as [];\r\n            selectedOtherFuelType.forEach((xf1: any) => {\r\n                if (xf1.Id != FuelTypeId) {\r\n                    selectedProductIds.push(xf1);\r\n                }\r\n            });\r\n            product.get('SelectedOtherFuelType').setValue(selectedProductIds);\r\n        }\r\n        else {\r\n            let selectedFuelType = product.get('SelectedFuelType').value as [];\r\n            selectedFuelType.forEach((xf1: any) => {\r\n                if (xf1.Id != FuelTypeId) {\r\n                    selectedProductIds.push(xf1);\r\n                }\r\n            });\r\n            product.get('SelectedFuelType').setValue(selectedProductIds);\r\n        }\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    clearTBDForm() {\r\n        this.fmTBDGroup.reset();\r\n        this.clearRaiseRequests();\r\n    }\r\n    clearTBDRaiseRequests() {\r\n        let controls = <FormArray>this.fmTBDGroup.controls['ScheduleTBDForm'];\r\n        controls.clear();\r\n    }\r\n    SubmitTBDData() {\r\n        this.TBDDeliveryRequestViewModel.DeliveryRequests = [];\r\n        var isValid = true;\r\n        let tbdForm = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        tbdForm.controls.forEach((product: FormGroup) => {\r\n            let prodDeliveryReq = product.get('DeliveryRequests') as FormArray;\r\n            let TBDGroupID = product.get('TBDGroupId').value;\r\n            if (prodDeliveryReq.controls.length > 0) {\r\n                let pickupLocationType = product.get('PickupLocationType').value;\r\n                if (pickupLocationType != null && pickupLocationType != 0) {\r\n                    prodDeliveryReq.controls.forEach((prodDR: FormGroup) => {\r\n                        let deliveryReq = new TBDRaiseDRDeliveryRequests();\r\n                        deliveryReq.FuelTypeId = prodDR.get('FuelTypeId').value;\r\n                        deliveryReq.FuelType = prodDR.get('FuelTypeName').value;\r\n                        deliveryReq.ProductType = prodDR.get('ProductTypeName').value;\r\n                        deliveryReq.ProductTypeId = prodDR.get('ProductTypeId').value;\r\n                        deliveryReq.Priority = product.get('Priority').value;\r\n                        deliveryReq.DeliveryLevelPO = prodDR.get('DeliveryLevelPO').value;\r\n                        let fuelTypeExists = this.TBDDeliveryRequestViewModel.DeliveryRequests.findIndex(x => x.FuelTypeId == deliveryReq.FuelTypeId && x.TBDGroupId == TBDGroupID);\r\n                        if (fuelTypeExists == -1) {\r\n                            deliveryReq.ScheduleQuantityType = prodDR.get('DRScheduleQuantityType').value;\r\n                            if (prodDR.get('DRScheduleQuantityType').value == 1) {\r\n                                if (prodDR.get('RequiredQty').value == '' || prodDR.get('RequiredQty').value == 0) {\r\n                                    isValid = false;\r\n                                    Declarations.msgerror('Quantity required for fuel type.' + prodDR.get('FuelTypeName').value, undefined, undefined);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    deliveryReq.RequiredQuantity = prodDR.get('RequiredQty').value;\r\n                                }\r\n                            }\r\n                            deliveryReq.TBDGroupId = TBDGroupID;\r\n                            deliveryReq.CreatedByRegionId = this.SelectedRegionId;\r\n                            deliveryReq.AssignedToRegionId = this.SelectedRegionId;\r\n                            deliveryReq.UoM = this.companyUoM;\r\n                            deliveryReq.PickupLocationType = pickupLocationType;\r\n                            if (deliveryReq.PickupLocationType == 1) {\r\n                                deliveryReq.Terminal = product.get('Terminal').value;\r\n                                if (deliveryReq.Terminal.Id <= 0 || deliveryReq.Terminal.Name == null || deliveryReq.Terminal.Name == '') {\r\n                                    isValid = false;\r\n                                    Declarations.msgerror('Pickup location information is required.', undefined, undefined);\r\n                                    return;\r\n                                }\r\n                            }\r\n                            else {\r\n                                deliveryReq.Bulkplant = product.get('BulkPlant').value;\r\n                                if (deliveryReq.Bulkplant == null || deliveryReq.Bulkplant.SiteName == null || deliveryReq.Bulkplant.SiteName == '' ||\r\n                                    deliveryReq.Bulkplant.Address == null || deliveryReq.Bulkplant.ZipCode == null) {\r\n                                    isValid = false;\r\n                                    Declarations.msgerror('Pickup location information is required.', undefined, undefined);\r\n                                    return;\r\n                                }\r\n                            }\r\n                            deliveryReq.BadgeNo1 = prodDR.get('BadgeNo1').value;\r\n                            deliveryReq.BadgeNo2 = prodDR.get('BadgeNo2').value;\r\n                            deliveryReq.BadgeNo3 = prodDR.get('BadgeNo3').value;\r\n                            deliveryReq.Notes = prodDR.get('Notes').value;\r\n                            this.TBDDeliveryRequestViewModel.DeliveryRequests.push(deliveryReq);\r\n                        }\r\n                        else {\r\n                            isValid = false;\r\n                            Declarations.msgerror('Fuel type already exists : ' + prodDR.get('FuelTypeName').value, undefined, undefined);\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    isValid = false;\r\n                    Declarations.msgerror('Pickup location information is required.', undefined, undefined);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        });\r\n        if (isValid) {\r\n            if (this.TBDDeliveryRequestViewModel.DeliveryRequests.length > 0) {\r\n                this.isTBDUserSubmit = true;\r\n                this.TBDdipTestLoader = true;\r\n                let inputdata = { DeliveryRequests: this.TBDDeliveryRequestViewModel.DeliveryRequests };\r\n                this.carrierService.postRaiseRequests(inputdata as any).subscribe((data: any) => {\r\n                    this.isTBDUserSubmit = false;\r\n                    if (data != null && parseInt(data.StatusCode) == 0) {\r\n                        this.displayMessage(data);\r\n                        closeSlidePanel();\r\n                        this.clearTBDForm();\r\n                        this.onRaiseDR.emit();\r\n                        this.emitDataForDRDisplay();\r\n                        this.TBDdipTestLoader = false;\r\n                    }\r\n                    else {\r\n                        this.TBDdipTestLoader = false;\r\n                        const statusMessage = data == null ? 'Failed' : data.StatusMessage;\r\n                        Declarations.msgerror(statusMessage, undefined, undefined);\r\n                    }\r\n                    if (!this.changeDetectorRef['destroyed']) {\r\n                        this.changeDetectorRef.detectChanges();\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                Declarations.msgerror('TBD DRs required for creating delivery requests.', undefined, undefined);\r\n            }\r\n        }\r\n    }\r\n    public deletePickupInfo(terminalInfo: any) {\r\n        if (terminalInfo.get('Id').value) {\r\n            terminalInfo.get('Id').patchValue(0);\r\n            terminalInfo.get('Name').patchValue('');\r\n        }\r\n    }\r\n    OnCountryChanged(eventData: any) {\r\n        let selectedCountryCode = eventData.target.value;\r\n        let selectedCountryId = this.getCountryIdFromCode(selectedCountryCode);\r\n        this.setBulkPlantAddressValidators(selectedCountryId);\r\n    }\r\n\r\n    getCountryIdFromCode(countryCode: any): number {\r\n        let selectedCountryId = 1;\r\n        if (countryCode == \"CAN\" || countryCode == \"CA\") {\r\n            selectedCountryId = 2;\r\n        }\r\n        else if (countryCode == \"CAR\") {\r\n            selectedCountryId = 4;\r\n        }\r\n        return selectedCountryId;\r\n    }\r\n\r\n    setBulkPlantAddressValidators(countryId: number) {\r\n        let isCarribean = countryId == 4 ? true : false;\r\n        let form = this.PickupForm;\r\n        form.get('BulkPlant.Address').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.City').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.ZipCode').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.CountyName').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.Latitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.Longitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n    }\r\n    public deleteTBDPickupInfo(terminalInfo: any) {\r\n        if (terminalInfo.get('Id').value) {\r\n            terminalInfo.get('Id').patchValue(0);\r\n            terminalInfo.get('Name').patchValue('');\r\n        }\r\n    }\r\n    onTBDTerminalSearched_(event: any): void {\r\n\r\n        let keyword = event.target.value.toLowerCase();\r\n\r\n        this.TBDTerminals = this.Terminals;\r\n        if (keyword != '') {\r\n            this.TBDTerminals = this.Terminals.filter(tr => tr.Name.toLowerCase().indexOf(keyword) != -1);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////BLENDED REQUEST START///////////////////////////\r\n\r\n    getUnUsedOrdersForBlendedRequest(currentOrder: number) {\r\n        let currentDrForm = this.blendRequestForm;\r\n        let drValue = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].value;\r\n        let isTank = drValue.StorageId != null && drValue.StorageId != '';\r\n        let orderList: any[] = [];\r\n        if (isTank == false) {\r\n            let compatibleProductTypesModel = this.CompatibleProductTypeList.find(t => t.ProductTypeId == drValue.ProductTypeId);\r\n            let compatibleProductTypes: number[] = [drValue.ProductTypeId];\r\n            if (compatibleProductTypesModel && compatibleProductTypesModel.MappedToProductTypeIds) {\r\n                compatibleProductTypes = compatibleProductTypes.concat(compatibleProductTypesModel.MappedToProductTypeIds);\r\n            }\r\n            orderList = this.OrderDetails.filter(t => compatibleProductTypes.includes(t.ProductTypeId));\r\n        }\r\n        else {\r\n            orderList = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].controls['BlendOrderPickupDetails'].value as any[];\r\n        }\r\n        let ordersToRemove = currentDrForm.get('BlendedRequests').value as BlendedRequest[];//orders selected in blend form\r\n        ordersToRemove = ordersToRemove.filter(function (obj) { return obj.OrderId != currentOrder; });\r\n        let productToRemove = orderList.filter(s => ordersToRemove.find(s2 => s2.OrderId == s.OrderId));\r\n        return orderList.filter((x => currentOrder == x.OrderId || !productToRemove.some(y => y.FuelTypeId == x.FuelTypeId)));\r\n    };\r\n\r\n    getUnUsedBlendOrders(currentOrder: number) {\r\n\r\n        let blendRequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];\r\n        blendRequests = blendRequests.filter(b => b.IsAdditive && b.OrderId && b.OrderId != currentOrder);\r\n        let ordersToRemove = blendRequests.map(b => b.OrderId);\r\n\r\n        return this.additiveOrders.filter((x => currentOrder == x.Id || !ordersToRemove.some(orderId => orderId == x.Id)));\r\n    };\r\n\r\n    openBlendRequestForm(dr: FormGroup, drIndex: number) {\r\n        this.DrForEditBlendedRequestIndex = drIndex;\r\n        this.copyBlendForm(<FormArray>dr.get('BlendedRequests'), <FormArray>this.blendRequestForm.get('BlendedRequests'));\r\n        document.getElementById('openBlendModalButton').click();\r\n    }\r\n\r\n    orderChangedForBlendRequest(_orderId: any, blendedRequest: FormGroup): void {\r\n        let parentDr = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex];\r\n        let orders = parentDr.get('BlendOrderPickupDetails').value as any[] || [];\r\n        blendedRequest.get('ProductTypeId').setValue(null);\r\n        var order = this.OrderDetails.find(t => t.OrderId == _orderId);\r\n        if (order) {\r\n            blendedRequest.get('UoM').setValue(order.UoM);\r\n        }\r\n        else {\r\n            order = orders.find(t => t.OrderId == _orderId);\r\n            if (order) {\r\n                blendedRequest.get('UoM').setValue(order.UoM);\r\n            }\r\n        }\r\n        let selectedOrder = null;\r\n        if (!orders || orders.length == 0) {\r\n            if (order) {\r\n                orders = order.OrderPickupDetails as any[] || [];\r\n                if (orders && orders.length > 0) {\r\n                    selectedOrder = orders[0];\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (orders.length > 0) {\r\n            selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (!selectedOrder) {\r\n                if (order && order.BlendOrderPickupDetails) {\r\n                    selectedOrder = order.BlendOrderPickupDetails.find(x => x.OrderId == _orderId);\r\n                }\r\n            }\r\n        }\r\n        if (selectedOrder) {\r\n            let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n            this.setPickupLocationForBlendRequest(blendedRequest, location);\r\n            if (selectedOrder.ProductTypeId) {\r\n                blendedRequest.get('ProductTypeId').setValue(selectedOrder.ProductTypeId);\r\n            }\r\n            else {\r\n                blendedRequest.get('ProductTypeId').setValue(parentDr.get('ProductTypeId').value);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCreateDrSetting() {\r\n        if (!this.preferenceSetting) {\r\n            this.carrierService.getCreateDrSetting().subscribe(response => {\r\n                this.preferenceSetting = response;\r\n            });\r\n        }\r\n    }\r\n\r\n    getCompatibleProducts() {\r\n        if (this.CompatibleProductTypeList.length == 0) {\r\n            this.carrierService.getCompatibleProductTypes().subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.CompatibleProductTypeList = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAdditiveOrders() {\r\n        if (this.additiveOrders.length == 0) {\r\n            this.carrierService.getAdditiveOrders(this.SelectedRegionId).subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.additiveOrders = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setPickupLocationForBlendRequest(delReq: FormGroup, order: OrderPickupLocationModel): void {\r\n        delReq.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                delReq.controls['Terminal'].patchValue(order.Terminal);\r\n            }\r\n            // this.PickupForm.controls['PickupLocationType'].patchValue(1);\r\n            // this.PickupForm.controls['Terminal'].patchValue(order.Terminal);\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                delReq.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n            }\r\n            // this.PickupForm.controls['PickupLocationType'].patchValue(2);\r\n            // this.PickupForm.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n        }\r\n    }\r\n\r\n    onBlendChange(IsBlendedRequest: boolean, dr: FormGroup) {\r\n\r\n        let blendedRequests = dr.get('BlendedRequests') as FormArray;\r\n        blendedRequests.clear();\r\n\r\n        if (IsBlendedRequest) {\r\n            this.getCompatibleProducts();\r\n            this.getAdditiveOrders();\r\n\r\n            blendedRequests.push(this.utilService.getBlendRequestFormGroup(new BlendedRequest(false)));\r\n            blendedRequests.push(this.utilService.getBlendRequestFormGroup(new BlendedRequest(true)));\r\n\r\n            dr.get('RequiredQuantity').setValidators([Validators.required, Validators.min(NumberConstants.MinQuantity)]);\r\n            dr.get('RequiredQuantity').updateValueAndValidity();\r\n\r\n            dr.get('BlendedGroupId').setValue(getUniqueId());\r\n            if (dr.get('isRecurringSchedule').value) {\r\n                dr.get('isRecurringSchedule').setValue(false);\r\n                dr.get('RequiredQuantity').enable();\r\n                dr.get('ScheduleQuantityType').enable();\r\n            }\r\n        }\r\n        else {\r\n            dr.get('RequiredQuantity').setValidators([]);\r\n            dr.get('RequiredQuantity').updateValueAndValidity();\r\n\r\n            dr.get('BlendedGroupId').setValue(null);\r\n        }\r\n        /*dr.get('SelectedDate').setValue(moment(new Date()).format('MM/DD/YYYY'));*/\r\n        dr.get('ScheduleStartTime').setValue(null);\r\n        dr.get('ScheduleEndTime').setValue(null);\r\n\r\n    }\r\n\r\n    getRequiredDataForPickupDetails() {\r\n\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n        if (!this.CountryGroupList || this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => { this.StateList = x; this.changeDetectorRef.detectChanges(); })\r\n        }\r\n    }\r\n\r\n    editPickupLocationForBlend(blendDrIndex: number): void {\r\n\r\n        this.BlendDrIndex = blendDrIndex;\r\n        this.SelectedDRForEditPickupIndex = this.DrForEditBlendedRequestIndex;\r\n        let tdr = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex];\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n\r\n        this.getRequiredDataForPickupDetails();\r\n\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = blendDr;\r\n\r\n\r\n        let _orderId = blendDr.controls['OrderId'].value as number;\r\n       \r\n        if (_orderId > 0) {\r\n            this.ChangePickupForOrders.push(_orderId);\r\n            let existingOrders = tdr.get('OrderPickupDetails').value || [];\r\n            let orders = existingOrders.filter(t => t.OrderId == _orderId);\r\n            if (orders.length > 0) {\r\n                let lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n            }\r\n        }\r\n\r\n\r\n        let _pickupType = blendDr.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = blendDr.controls['Terminal'].value;\r\n        let _bulkPlant = blendDr.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n\r\n        this.setPickupLocation_(this.SelectedDRForEditPickup, location);\r\n\r\n        //to get bulk plant for auto order\r\n        let orderForBulkPlant = 0;\r\n        if (tdr) {\r\n            orderForBulkPlant = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n        }\r\n\r\n        this.addresService.getBulkPlants('', orderForBulkPlant).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n        \r\n        if (this.ChangePickupForOrders.length > 0) {\r\n            this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n                this.Terminals = data;\r\n            }));\r\n        }\r\n        else {\r\n            this.Terminals = [];\r\n        }\r\n\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePickupLocationForBlend() {\r\n\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n        this.DrForEditBlendedRequest = null;\r\n\r\n        if (this.SelectedDRForEditPickup != null && blendDr != null) {\r\n            this.setPickupLocation_(blendDr, this.PickupForm.value);\r\n        }\r\n\r\n        this.IsPickupForBlendRequest = false;\r\n        let dismiss = document.getElementById('btnDrPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n\r\n    addRemoveBlendedProduct(addNewRow: boolean, index: number, isAdditive: boolean = false) {\r\n\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n        if (addNewRow) {\r\n\r\n            let _model = new BlendedRequest(isAdditive);\r\n            _model.IsBlendedRequest = true;\r\n            let additiveCount = this.getAdditiveCountInBlend();\r\n\r\n            if (!isAdditive && additiveCount > 0) {\r\n                _blendedRequests.insert(+_blendedRequests.controls.length - additiveCount, this.utilService.getBlendRequestFormGroup(_model));\r\n            } else {\r\n                _blendedRequests.push(this.utilService.getBlendRequestFormGroup(_model));\r\n            }\r\n        }\r\n        else {\r\n            _blendedRequests.removeAt(index);\r\n        }\r\n    }\r\n\r\n    getAdditiveCountInBlend() {\r\n        let _blendedRequests = <any[]>this.blendRequestForm.get('BlendedRequests').value;\r\n        return _blendedRequests.filter(b => b.IsAdditive).length;\r\n    }\r\n\r\n    blendDrQuantityChanged(enteredQuantity: number, blendIndex: number) {\r\n        let parentQuantity = <number>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RequiredQuantity').value;\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('QuantityInPercent').setValue((+enteredQuantity / parentQuantity) * 100);\r\n    }\r\n\r\n    blendDrPercentChanged(percent: number, blendIndex: number) {\r\n        let parentQuantity = <number>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RequiredQuantity').value;\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('RequiredQuantity').setValue((+percent / 100) * parentQuantity);\r\n    }\r\n\r\n    clearQuantityAndPercentage(blendIndex?: number) {\r\n        if (blendIndex == null) {\r\n            blendIndex = -1;\r\n        }\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        _blendedRequests.controls.forEach((b: FormGroup, index: number) => {\r\n            if (index > blendIndex && !b.get('IsAdditive').value) {\r\n                b.get('RequiredQuantity').setValue(null);\r\n                b.get('QuantityInPercent').setValue(null);\r\n            }\r\n        })\r\n    }\r\n\r\n    isBlendedRequestQuantityValid() {\r\n\r\n        if (this.blendRequestForm.valid) {\r\n\r\n            let totalQuantity = 0;\r\n            let _blendedRequests: BlendedRequest[] = this.blendRequestForm.get('BlendedRequests').value;\r\n            _blendedRequests.forEach((b: BlendedRequest, index: number) => {\r\n                if (!b.IsAdditive) {\r\n                    totalQuantity = +totalQuantity + +b.RequiredQuantity;\r\n                }\r\n            });\r\n\r\n            let RequiredQuantity = <number>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RequiredQuantity').value;\r\n            return (totalQuantity == RequiredQuantity) || (Math.abs(RequiredQuantity - totalQuantity) < 1);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onBlendTotalQuantityChange(totalQuantity: number, blendedRequests: FormArray) {\r\n\r\n        if (totalQuantity) {\r\n\r\n            let blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n            blendedRequests.controls.forEach((b: FormGroup) => {\r\n                if (!b.get('IsAdditive').value && +b.get('QuantityInPercent').value > 0) {\r\n                    b.get('RequiredQuantity').setValue((+b.get('QuantityInPercent').value / 100) * totalQuantity);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.clearQuantityAndPercentage();\r\n        }\r\n    }\r\n\r\n    copyBlendForm(formA: FormArray, formB: FormArray) {\r\n        formB.clear();\r\n        formA.controls.forEach(a => {\r\n            formB.push(this.utilService.getBlendRequestFormGroup(a.value));\r\n        })\r\n    }\r\n\r\n    OnSelectedDateChange(dr: FormGroup, scheduleDate: string) {\r\n        if (scheduleDate != dr.controls['SelectedDate'].value) {\r\n            dr.controls['SelectedDate'].setValue(scheduleDate);\r\n            this.SetFutureDR(dr, scheduleDate);\r\n        }\r\n    }\r\n    getTomorrowsDate(): Date {\r\n        var current = new Date();\r\n        current.setDate(current.getDate() + 1);\r\n        return current;\r\n    }\r\n    SetFutureDR(dr: FormGroup, scheduleDate: string) {\r\n        let tomorrowDate = this.getTomorrowsDate();\r\n        var selectedDate = new Date(scheduleDate);\r\n        let isCalendarDr = selectedDate > tomorrowDate;\r\n        dr.controls['IsFutureDR'].setValue(isCalendarDr);\r\n        dr.controls['IsCalendarView'].setValue(isCalendarDr);\r\n    }\r\n    submitBlendedForm() {\r\n        if (this.blendRequestForm.valid) {\r\n            this.copyBlendForm(<FormArray>this.blendRequestForm.get('BlendedRequests'), <FormArray>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('BlendedRequests'));\r\n        }\r\n        var totalQty = 0;\r\n        var blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        if (blendedRequests.controls.length > 0) {\r\n            blendedRequests.controls.forEach(x => {\r\n                var requiredQty = x.get('RequiredQuantity').value;\r\n                totalQty = totalQty + requiredQty;\r\n            });\r\n            var deliveryReqControl = <FormArray>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RecurringSchdule');\r\n            if (deliveryReqControl.controls.length > 0 && totalQty > 0) {\r\n                deliveryReqControl.controls.forEach(x => {\r\n                    if (x.get('Id').value == '' || x.get('Id').value == null) {\r\n                        x.get('RequiredQuantity').setValue(totalQty);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    ///////////////////////////BLENDED REQUEST END///////////////////////////\r\n}\r\n\r\n","<div *ngIf=\"!IsSalesPage\" class=\"row\" id=\"dr\">\r\n    <div class=\"col-sm-12 text-right\">\r\n        <!--<button id=\"btn-createDr\" type=\"button\" class=\"btn btn-link pull-right pa0\" data-target=\"raisedr\" (click)=\"openRaiseDrPanel();\" onclick=\"slidePanel('#raisedr','60%')\" *ngIf=\"disableControl==false\"><i class=\"fas fa-truck fs14 mr5\"></i> Create DR</button>\r\n        <button  type=\"button\" class=\"btn btn-link pull-right pa0\" ><i class=\"fas fa-truck fs14 mr5\"></i> Create DR</button>-->\r\n        <div class=\"btn-group legends\">\r\n            <button type=\"button\" class=\"btn dropdown-toggle pa0 mr-1\" [ngClass]=\"{'ml75' : isDisableControl}\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                DR Legends <span class=\"caret\"></span>\r\n            </button>\r\n            <ul class=\"dropdown-menu\">\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-scheduled\"></i> Scheduled</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-inprogress\"></i> In Progress</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-cancelled\"></i> Cancelled / Missed</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-completed\"></i> Completed</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-mustgo\"></i> Must Go</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-shouldgo\"></i> Should Go</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-couldgo\"></i> Could Go</a></li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"btn-group ml-1\" *ngIf=\"disableControl==false\">\r\n            <a id=\"btn-createDr\" class=\"font-weight-bold\" data-target=\"raisedr\" (click)=\"openRaiseDrPanel();\" onclick=\"slidePanel('#raisedr','70%')\">Create DR</a>\r\n            <span>&nbsp;&nbsp;</span>\r\n            <a id=\"btn-tbdDr\" data-target=\"tbddr\" (click)=\"openRaiseTBDDrPanel();\" onclick=\"slidePanel('#tbddr','90%')\">TBD DR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"dip-test-container\">\r\n    <div class=\"side-panel\" id=\"raisedr\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"header\">\r\n                <a class=\"ml10 close-panel\" onclick=\"closeSlidePanel();\" (click)=\"clearForm();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Create Delivery Request</h3>\r\n                <button type=\"button\" *ngIf=\"selectedLocation.length==0 && !showForm\" class=\"btn btn-link pull-right mr20 pa0\" (click)=\"createDR();\"><i class=\"fas fa-plus fs18 mr5\"></i> Create DR</button>\r\n            </div>\r\n            <div class=\"body-panel\">\r\n                <div *ngIf=\"!IsSalesPage\" class=\"row pr sticky-controls\" #elementFilter>\r\n                            <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"loadingCustomers\" id=\"loadingCustomers\"><span\r\n                            class=\"spinner-dashboard pa\"></span></div>\r\n                    <div [ngClass]=\"{'col-sm-6':isTankExists,'col-sm-4':!isTankExists}\">\r\n                        <div class=\"form-group mb0\">\r\n                            <ng-multiselect-dropdown class=\"single-select\" id=\"selectCustomer\"\r\n                                [placeholder]=\"'Select Customer (Optional)'\" [(ngModel)]=\"selectedCustomer\"\r\n                                [settings]=\"CustomerSettings\" [data]=\"companySiteList\" (onSelect)=\"onCustomerSelect($event)\"\r\n                                (onDeSelect)=\"onCustomerDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div [ngClass]=\"{'col-sm-6':isTankExists,'col-sm-4':!isTankExists}\">\r\n                        <div class=\"form-group\">\r\n                            <ng-multiselect-dropdown class=\"single-select\" id=\"selectSite\" [placeholder]=\"'Select location'\"\r\n                                [(ngModel)]=\"selectedLocation\" [settings]=\"SiteddlSettings\" [data]=\"SiteList\"\r\n                                (onSelect)=\"onSiteSelect($event)\" (onDeSelect)=\"onSiteDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\" *ngIf=\"!isTankExists\">\r\n                        <div class=\"form-group\">\r\n                            <ng-multiselect-dropdown class=\"\" id=\"selectOrder\" [placeholder]=\"'Select order'\"\r\n                                [(ngModel)]=\"selectedOrder\" [settings]=\"multiDropdownSettings\" [data]=\"OrderList\"\r\n                                (onSelect)=\"onOrderChange()\" (onDeSelect)=\"onOrderChange()\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                (onDeSelectAll)=\"onSelectAll($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div class=\"mb10 small-tab tanks-wrapper\" [style.height.px]=\"height_Panel\">\r\n            \r\n                    <!-- dip testpage loader -->\r\n                    <div *ngIf=\"dipTestLoader\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                        <span class=\"spinner-dashboard pa\"></span>\r\n                    </div>\r\n            \r\n                    <!-- tabs for tanks -->\r\n                    <ul class=\"nav nav-tabs mb10\" *ngIf=\"isTankExists\">\r\n                        <li class=\"active\"><a id=\"idTankTab\" data-toggle=\"tab\" href=\"#tanks\" class=\"fs16 mr15\">Tanks</a></li>\r\n                        <li *ngIf=\"selectedLocation && selectedLocation.length>0\" (click)=\"getSalesData()\"><a data-toggle=\"tab\"\r\n                                href=\"#sales\" class=\"fs16\">Sales</a></li>\r\n                        <li *ngIf=\"selectedLocation && selectedLocation.length>0\" (click)=\"loadChart()\"><a data-toggle=\"tab\"\r\n                                href=\"#trends\" class=\"fs16\">Trends</a></li>\r\n                    </ul>\r\n            \r\n                    <!--  -->\r\n                    <div [class.tab-content]=\"isTankExists\">\r\n            \r\n                        <div id=\"tanks\" [ngClass]=\"{'tab-pane fade show active' : isTankExists}\">\r\n                            <ng-container [formGroup]=\"fmGroup\">\r\n                                <ng-container *ngFor=\"let product of fmGroup.get('DeliveryRequests')['controls']; let j = index\">\r\n                                    <div class=\"dip-test-card\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-5\">\r\n                                                <h6 class=\"product-type\">{{product.get('ProductName').value}}</h6>\r\n                                                <p class=\"customer-name\">Customer: {{product.get('BuyerCompanyName').value}}</p>\r\n                                                <p class=\"address\" container=\"body\" placement=\"bottom\" ngbTooltip=\"{{product.get('JobName').value}}\">\r\n                                                    {{product.get('JobName').value}}\r\n                                                </p>\r\n                                            </div>\r\n                                            <!-- current threshold for tank -->\r\n                                            <div class=\"col-7\" *ngIf=\"product.get('TankId').value || product.get('StorageId').value\">\r\n                                                <div class=\"tank-progrss-panel\">\r\n                                                    <span class=\"tank-progrss-status\">\r\n                                                        {{product.get('CurrentThreshold').value | number:'1.0-0'}}%-{{product.get('ProductName').value}}\r\n                                                    </span>\r\n                                                    <ngb-progressbar type=\"primary\" height=\"10px\"\r\n                                                        [value]=\"product.get('CurrentThreshold').value\">\r\n                                                    </ngb-progressbar>\r\n                                                    <span class=\"tank-time\">{{product.get('DisplayCaptureTime').value}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                        <!-- display tanks for location -->\r\n                                        <div class=\"row mt10\" *ngIf=\"product.get('TankId').value || product.get('StorageId').value || (!isTankExists && product.get('Tanks').value && product.get('Tanks').value.length > 1)\">\r\n                                            <div class=\"col-12\">\r\n                                                <table class=\"table table-sm\" id=\"tanks_details\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th scope=\"col\">Tank Name</th>\r\n                                                            <th scope=\"col\">Capacity</th>\r\n                                                            <th scope=\"col\">MaxFill </th>\r\n                                                            <th scope=\"col\">Inventory</th>\r\n                                                            <th scope=\"col\">Ullage</th>\r\n                                                            <th scope=\"col\">Re-order</th>\r\n                                                            <th *ngIf=\"product.get('TankId').value || product.get('StorageId').value\" scope=\"col\">Water Level</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngIf=\"!isTankExists || (isTankExists && product.get('Tanks').value && product.get('Tanks').value.length > 1)\">\r\n                                                            <td>Summary</td>\r\n                                                            <td>{{product.get('TankCapacity').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td>{{product.get('TankMaxFill').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td><span *ngIf=\"product.get('NetVolume').value == 0\">NA</span><span *ngIf=\"product.get('NetVolume').value > 0\">\r\n                                                                {{product.get('NetVolume').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</span></td>\r\n                                                            <td><span *ngIf=\"product.get('Ullage').value == -1\">NA</span><span *ngIf=\"product.get('Ullage').value > -1\">\r\n                                                                {{product.get('Ullage').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</span></td>\r\n                                                            <td>{{product.get('ReorderQuantity').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                        </tr>\r\n                                                        <tr *ngFor=\"let tank of product.get('Tanks').value; let i = index\">\r\n                                                             <td *ngIf=\"tank.TankName.length >= 40\" class=\"w-25\" title=\"{{tank.TankName}}\">\r\n                                                                {{tank.TankName | slice:0:40}}...\r\n                                                            </td>\r\n                                                            <td *ngIf=\"tank.TankName.length < 40\">{{tank.TankName}}</td>\r\n\r\n                                                            <td>{{tank.TankCapacity | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td>{{tank.TankMaxFill | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td>\r\n                                                                <span *ngIf=\"tank.NetVolume == 0\">NA</span><span *ngIf=\"tank.NetVolume > 0\">\r\n                                                                    {{tank.NetVolume | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <span *ngIf=\"tank.Ullage == -1\">NA</span><span *ngIf=\"tank.Ullage > -1\">\r\n                                                                    {{tank.Ullage | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td>{{tank.ReorderQuantity | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td *ngIf=\"tank.TankId || tank.StorageId\">{{tank.WaterLevel}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                        <!-- form started -->\r\n                                        <!-- *ngIf=\"((isTankExists && product.get('Tanks').value && product.get('Tanks').value.length>0) || (!isTankExists))\" -->\r\n                                        <ng-container *ngIf='showForm'>\r\n                                            <ng-container>\r\n                                                <ng-container formArrayName=\"DeliveryRequests\">\r\n                                                    <ng-container [formGroupName]=\"j\">\r\n                                                        <div class=\"row mt10 align-items-center\">\r\n                                                            <div class=\"col-sm-4\" id=\"drPriority\">\r\n                                                                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                                                                    <div class=\"btn-group btn-filter\">\r\n                                                                        <div class=\"form-check form-check-inline mr-0\">\r\n                                                                            <input id=\"mustgo{{j}}\" class=\"hide-element\" type=\"radio\" value=\"1\" formControlName=\"Priority\">\r\n                                                                            <label class=\"btn ml-0\" for=\"mustgo{{j}}\"> Must Go</label>\r\n                                                                        </div>\r\n                                                                        <div class=\"form-check form-check-inline  mr-0\">\r\n                                                                            <input class=\"hide-element\" type=\"radio\" formControlName=\"Priority\" id=\"shouldgo{{j}}\" value=\"2\">\r\n                                                                            <label class=\"btn\" for=\"shouldgo{{j}}\">Should Go</label>\r\n                                                                        </div>\r\n                                                                        <div class=\"form-check form-check-inline mr-0\">\r\n                                                                            <input class=\"hide-element\" type=\"radio\" value=\"3\" formControlName=\"Priority\" id=\"couldgo{{j}}\">\r\n                                                                            <label class=\"btn\" for=\"couldgo{{j}}\">Could Go</label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-2\">\r\n                                                                <div *ngIf=\"preferenceSetting && preferenceSetting?.IsAdditiveBlendingEnabled\" class=\"form-check form-check-inline\">\r\n                                                                    <input type=\"checkbox\" formControlName=\"IsBlendedRequest\"\r\n                                                                           class=\"form-check-input\" id=\"BlendedRequest{{j}}\" (change)=\"onBlendChange($event.target.checked, product)\">\r\n                                                                    <label class=\"form-check-label\" for=\"BlendedRequest{{j}}\">Blend</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6\" *ngIf=\"!RequestFromBuyerWallyBoard && !this.fmGroup.controls['IsCommonPickup'].value\" id=\"pickupLocation\">\r\n                                                                <div class=\"clearfix color-lightgrey\" *ngIf=\"product.get('IsBlendedRequest').value\">\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input type=\"checkbox\" formControlName=\"IsCommonPickupForBlend\" class=\"form-check-input\" id=\"IsCommonPickupForBlend{{j}}\">\r\n                                                                        <label class=\"form-check-label\" for=\"IsCommonPickupForBlend{{j}}\">Common Pick-up Location</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <!-- individual dr pickup location OR common pickup for dr blended blend group -->\r\n                                                                <div class=\"clearfix color-lightgrey col-sm-12 pa0\" *ngIf=\"!product.get('IsBlendedRequest').value || (product.get('IsBlendedRequest').value && product.get('IsCommonPickupForBlend').value)\">\r\n                                                                    <div class=\"pull-left\">\r\n                                                                        <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                                        <span class=\"pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else location;\">\r\n                                                                            Terminal\r\n                                                                        </span>\r\n                                                                        <ng-template #location>\r\n                                                                            <span class=\"pr5\">\r\n                                                                                Location\r\n                                                                            </span>\r\n                                                                        </ng-template>\r\n                                                                    </div>\r\n                                                                    <div class=\"pull-left pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                                        {{product.controls['Terminal']?.controls['Name']?.value}}\r\n                                                                        <div *ngIf=\"product.controls['Terminal']?.invalid && (product.controls['Terminal']?.dirty || product.controls['Terminal']?.touched)\">\r\n                                                                            <label class=\"fs12\" style=\"color:red\" *ngIf=\"product.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                        <span class=\"pull-left pl5 pr5\" *ngIf=\"product.controls['BulkPlant']?.controls['SiteName'].value\">\r\n                                                                            {{product.controls['BulkPlant']?.controls['SiteName'].value}}, {{product.controls['BulkPlant']?.controls['City'].value}},\r\n                                                                            {{product.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{product.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                                        </span>\r\n                                                                        <div *ngIf=\"product.controls['BulkPlant'].invalid && (product.controls['BulkPlant'].dirty || product.controls['BulkPlant'].touched)\">\r\n                                                                            <label class=\"fs12\" style=\"color:red\" *ngIf=\"product.controls['BulkPlant'].invalid\">Required</label>\r\n                                                                        </div>\r\n                                                                    </ng-template>\r\n                                                                    <span *ngIf=\"(product.controls['PostLoadedFor']==null || product.controls['PostLoadedFor']==undefined)\">\r\n                                                                        <a class=\"float-left\" (click)=\"editPickupLocation_(product, j)\" data-toggle=\"modal\" placement=\"bottom\" ngbTooltip=\"Edit Pickup Location\" data-target=\"#dr-pickup-location\"><i class=\"fa fa-edit fs18 ml-3 mt2\"></i></a>\r\n                                                                    </span>\r\n                                                                    <span *ngIf=\"(product.controls['PostLoadedFor']==null || product.controls['PostLoadedFor']==undefined)\">\r\n                                                                        <a (click)=\"RemovePickupLocation(product, j)\" placement=\"bottom\" ngbTooltip=\"Remove Pickup Location\" class=\"color-maroon float-left\"><i class=\"fa fa-close ml-2 mt2 fs18\"></i></a>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- non blended form part -->\r\n                                                        <div class=\"row\" *ngIf=\"!product.get('IsBlendedRequest').value; else blendedRequestTemplate\">\r\n  \r\n                                                            <!-- for tank - supplier dropdown for wally board pages -->\r\n                                                            <div *ngIf=\"isTankExists && RequestFromBuyerWallyBoard && product.get('SupplierCompanies')?.value?.length>1\"\r\n                                                                class=\"col-sm-3 input-group mt10\">\r\n                                                                <select formControlName=\"SupplierCompanyId\" class=\"form-control\">\r\n                                                                    <option disabled>Select Supplier</option>\r\n                                                                    <option *ngFor=\"let comp of product.get('SupplierCompanies')?.value;\" [value]=\"comp.Id\">\r\n                                                                        {{comp.Name}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <!-- for tank - order dropdown for non wally board pages -->\r\n\r\n                                                            <div *ngIf=\"isTankExists && !RequestFromBuyerWallyBoard\" class=\"col-sm-3 mt10\" id=\"selectOrder\">\r\n                                                                <select class=\"form-control\" formControlName=\"OrderId\" (change)=\"changeTerminal_(product, $event, j)\">\r\n                                                                    <option disabled value=\"null\">Select Order</option>\r\n                                                                    <ng-container *ngIf=\"product.controls['OrderPickupDetails'].value?.length>0;\">\r\n                                                                        <ng-container *ngFor=\"let order of product.controls['OrderPickupDetails'].value\">\r\n                                                                            <option [value]=\"order.OrderId\">{{order.PoNumber}}</option>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 input-group mt10\" id=\"quantityType\">\r\n                                                                <select formControlName=\"ScheduleQuantityType\" class=\"form-control\">\r\n                                                                    <option *ngFor=\"let sqType of ScheduleQuantityTypeDetails\" [value]=\"sqType.Id\">{{sqType.Name}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 mt10\" *ngIf=\"product.controls['ScheduleQuantityType'].value==1\" id=\"requiredQuanity\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    <div class=\"input-group\">\r\n                                                                        <input type=\"text\" formControlName=\"RequiredQuantity\" numberWithDecimal class=\"form-control pr-2\" placeholder=\"Required Quantity\" />\r\n                                                                        <div class=\"input-group-addon\">{{product.get('UoM').value}}</div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <!-- render common fields bet blend & non-blend -->\r\n                                                            <ng-container *ngTemplateOutlet=\"commonFieldsTemplate\">\r\n                                                                Cool! This text is not displayed.\r\n                                                            </ng-container>\r\n\r\n                                                            <!-- for tanks - allow max fill  //why inside in non blend?-->\r\n                                                            <div class=\"col-sm-3 input-group mt10\"\r\n                                                                *ngIf=\"isTankExists && product.controls['ScheduleQuantityType'].value==1 && product.controls['IsTankAndAssetAvailableForJob'].value==true\">\r\n                                                                <div class=\"form-check form-check-inline\">\r\n                                                                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsMaxFillAllowed\" id=\"chk-MaxFillAllowed{{j}}\">\r\n                                                                    <label class=\"form-check-label\" for=\"chk-MaxFillAllowed{{j}}\">Allow to exceed MaxFill</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <!-- reassign to carrier //why inside in non blend?-->\r\n                                                            <div *ngIf=\"!RequestFromBuyerWallyBoard && selectedLocation?.length>0 && LocationManagedType==3\"\r\n                                                                class=\"col-sm-3 input-group mt10\">\r\n                                                                <div class=\"form-check form-check-inline\">\r\n                                                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"chk-IsReAssignToCarrier{{j}}\" formControlName=\"IsReAssignToCarrier\">\r\n                                                                    <label class=\"form-check-label\" for=\"chk-IsReAssignToCarrier{{j}}\">Re-assign</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                         <!-- blended request -->\r\n                                                        <ng-template #blendedRequestTemplate>\r\n                                                            <div class=\"row mt10\">\r\n                                                                <div class=\"col-sm-3\">\r\n                                                                    <div class=\"form-group mb0\">\r\n                                                                        <div class=\"input-group\">\r\n                                                                            <input type=\"text\" formControlName=\"RequiredQuantity\" id=\"blendRequiredQuantity\"\r\n                                                                                numberWithDecimal class=\"form-control pr-2\"\r\n                                                                                placeholder=\"Required Quantity\"\r\n                                                                                (input)=\"onBlendTotalQuantityChange($event.target.value, product.get('BlendedRequests'))\" />\r\n                                                                            <div class=\"input-group-addon\">{{product.get('UoM').value}}</div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"color-maroon\"\r\n                                                                        *ngIf=\"product.get('RequiredQuantity').touched && product.get('RequiredQuantity').errors\">\r\n                                                                        <div>Invalid required quantity</div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"col-sm-3\" id=\"clickBlend\"\r\n                                                                    *ngIf=\"product.get('RequiredQuantity').valid;\">\r\n                                                                    <a\r\n                                                                        (click)=\"openBlendRequestForm(product, j);product.get('BlendedRequests').markAllAsTouched()\">\r\n                                                                        <i class=\"fas fa-fill-drip fs25 mt-1\"></i>\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"row\">\r\n                                                                <ng-container *ngTemplateOutlet=\"commonFieldsTemplate\">\r\n                                                                    Cool! This text is not displayed.\r\n                                                                </ng-container>\r\n                                                            </div>\r\n\r\n                                                            <ng-container *ngIf=\"product.get('RequiredQuantity').valid;\">\r\n                                                                <ng-container\r\n                                                                    *ngFor=\"let blendedRequest of product.get('BlendedRequests')['controls']; let k = index;let first = first;\">\r\n                                                                    <ng-container formArrayName=\"BlendedRequests\">\r\n                                                                        <ng-container [formGroupName]=\"k\">\r\n                                                                            <div>\r\n                                                                                <div *ngIf=\"first || blendedRequest.get('IsAdditive').value\" class=\"mt-2\">\r\n                                                                                    <label *ngIf=\"first\" class=\"form-check-label\">Products</label>\r\n                                                                                    <label *ngIf=\"blendedRequest.get('IsAdditive').value\"\r\n                                                                                        class=\"form-check-label\">Additive</label>\r\n                                                                                </div>\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-sm-3 mt10\">\r\n                                                                                        <div>\r\n                                                                                            <select class=\"form-control\" formControlName=\"OrderId\" disabled>\r\n                                                                                                <option disabled value=\"null\">\r\n                                                                                                    Select\r\n                                                                                                    Order\r\n                                                                                                </option>\r\n                                                                                                <ng-container *ngIf=\"!blendedRequest.get('IsAdditive').value && product.controls['BlendOrderPickupDetails'].value?.length>0;\">\r\n                                                                                                    <option *ngFor=\"let order of product.controls['BlendOrderPickupDetails'].value\"\r\n                                                                                                            [value]=\"order.OrderId\">\r\n                                                                                                        {{order.PoNumber}}\r\n                                                                                                    </option>\r\n                                                                                                </ng-container>\r\n                                                                                                <ng-container *ngIf=\"!blendedRequest.get('IsAdditive').value && product.controls['BlendOrderPickupDetails'].value?.length==0 && !product.controls['TankId'].value\">\r\n                                                                                                    <option *ngFor=\"let order of OrderDetails\"\r\n                                                                                                            [value]=\"order.OrderId\">\r\n                                                                                                        {{order.PoNumber}}\r\n                                                                                                    </option>\r\n                                                                                                </ng-container>\r\n                                                                                                <ng-container *ngIf=\"blendedRequest.get('IsAdditive').value\">\r\n                                                                                                    <ng-container *ngFor=\"let order of additiveOrders\">\r\n                                                                                                        <option [value]=\"order.Id\">\r\n                                                                                                            {{order.Name}}\r\n                                                                                                        </option>\r\n                                                                                                    </ng-container>\r\n                                                                                                </ng-container>\r\n                                                                                            </select>\r\n                                                                                        </div>\r\n\r\n                                                                                        <div class=\"color-maroon\" *ngIf=\"product.get('BlendedRequests').touched && blendedRequest.get('OrderId').errors\">\r\n                                                                                            <div>Order is required </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-3 mt10\">\r\n                                                                                        <div class=\"form-group mb0\">\r\n                                                                                            <div class=\"input-group\">\r\n                                                                                                <input type=\"number\" formControlName=\"RequiredQuantity\" numberWithDecimal\r\n                                                                                                    class=\"form-control pr-2\" placeholder=\"Required Quantity\" disabled />\r\n                                                                                                <div class=\"input-group-addon\">\r\n                                                                                                    {{blendedRequest.get('UoM').value !=\r\n                                                                                                    null ?\r\n                                                                                                    blendedRequest.get('UoM').value :\r\n                                                                                                    product.get('UoM').value}}</div>\r\n                                                                                            </div>\r\n                                                                                            <div class=\"color-maroon\"\r\n                                                                                                *ngIf=\"product.get('BlendedRequests').touched && blendedRequest.get('RequiredQuantity').invalid\">\r\n                                                                                                <div> Quantity is required </div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-3 mt10\" *ngIf=\"!blendedRequest.get('IsAdditive').value\">\r\n                                                                                        <div class=\"form-group mb0\">\r\n                                                                                            <div class=\"input-group\">\r\n                                                                                                <input type=\"number\" formControlName=\"QuantityInPercent\" numberWithDecimal\r\n                                                                                                    class=\"form-control\" placeholder=\"Quantity In Percent\" disabled />\r\n                                                                                                <div class=\"input-group-addon\">%</div>\r\n                                                                                            </div>\r\n                                                        \r\n                                                                                            <div class=\"color-maroon\"\r\n                                                                                                *ngIf=\"product.get('BlendedRequests').touched && blendedRequest.get('QuantityInPercent').invalid\">\r\n                                                                                                <div>Invalid percentage</div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                            <!--  -->\r\n                                                                            <div class=\"col-sm-12 mt5\"\r\n                                                                                 *ngIf=\"!product.get('IsCommonPickupForBlend').value && !fmGroup.get('IsCommonPickup').value && !blendedRequest.get('IsAdditive').value\">\r\n                                                                                <div class=\"input-group\">\r\n                                                                                    <div class=\"pull-left\">\r\n                                                                                        <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                                                        <span class=\"pr5\"\r\n                                                                                              *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else location;\">Terminal</span>\r\n                                                                                        <ng-template #location><span class=\"pr5\">Location</span></ng-template>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"pull-left pr5\"\r\n                                                                                         *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                                                        {{blendedRequest.controls['Terminal']?.controls['Name']?.value}}\r\n                                                                                        <div *ngIf=\"blendedRequest.controls['Terminal']?.invalid && (blendedRequest.controls['Terminal']?.dirty || blendedRequest.controls['Terminal']?.touched)\">\r\n                                                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                                                   *ngIf=\"blendedRequest.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                                        <span class=\"pull-left pl5 pr5\">\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['SiteName'].value}},\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['City'].value}},\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['State']?.controls['Code'].value}}\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                                                        </span>\r\n                                                                                        <div *ngIf=\"blendedRequest.controls['BulkPlant'].invalid && (blendedRequest.controls['BulkPlant'].dirty || blendedRequest.controls['BulkPlant'].touched)\">\r\n                                                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                                                   *ngIf=\"blendedRequest.controls['BulkPlant'].invalid\">Required</label>\r\n                                                                                        </div>\r\n                                                                                    </ng-template>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                        </ng-template>\r\n            \r\n                                                        <ng-template #commonFieldsTemplate>\r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    \r\n                                                                    <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\"\r\n                                                                            id=\"deli-level\" placeholder=\"Delivery-Level PO#\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                                                                               \r\n                                                            <div class=\"col-sm-3 mt10\" *ngIf=\"preferenceSetting?.CreditCheckType==1\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <input type=\"text\" formControlName=\"IndicativePrice\" class=\"form-control\" id=\"Indicative_Price\"\r\n                                                                        placeholder=\"Indicative Price\" />\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-10\">\r\n                                                                        <div class=\"form-group mb0\">\r\n                                                                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"SelectedDate\" myDatePicker\r\n                                                                                   [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" placeholder=\"Select Date\"\r\n                                                                                   (onDateChange)=\"OnSelectedDateChange(product,$event)\" />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-1 pl-0 mt-2\">\r\n                                                                        <i class=\"fa fa-info-circle ml-1\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                                                                            title=\"Select date for scheduling future loads. Future loads will be displayed in Calendar View.\"\r\n                                                                            data-original-title=\"Select date for scheduling future loads. Future loads will be displayed in Calendar View.\"></i>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    <div class=\"input-group\">\r\n                                                                        <input type=\"text\" formControlName=\"ScheduleStartTime\" class=\"form-control\"\r\n                                                                            [disableControl]=\"!product.controls['SelectedDate'].value\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                                                            (onTimeChange)=\"product.get('ScheduleStartTime').setValue($event)\" id=\"strt-time\"\r\n                                                                            placeholder=\"Start Time\" />\r\n                                                                        <div class=\"input-group-addon\"><i class=\"far fa-clock\"></i></div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    <div class=\"input-group\">\r\n                                                                        <input type=\"text\" formControlName=\"ScheduleEndTime\" class=\"form-control\"\r\n                                                                            [disableControl]=\"!product.controls['SelectedDate'].value\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                                                            (onTimeChange)=\"product.get('ScheduleEndTime').setValue($event)\" id=\"end-time\"\r\n                                                                            placeholder=\"End Time\" />\r\n                                                                        <div class=\"input-group-addon\"><i class=\"far fa-clock\"></i></div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                        </ng-template>\r\n\r\n                                                        <!-- badges -->\r\n                                                        <div *ngIf=\"!RequestFromBuyerWallyBoard\" class=\"row mt10\">\r\n                                                            <div class=\"col-12\">\r\n                                                                <div class=\"border p-3 radius-5 tank-panel bg-lightgrey\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 form-group mb0\">\r\n                                                                            <div class=\"form-check form-check-inline float-left checkbox\">\r\n                                                                                <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckboxCommonBadge-{{j}}\" formControlName=\"IsCommonBadge\" (change)=\"hideShowCommonBadgeArea()\">\r\n                                                                                <label class=\"form-check-label\" for=\"CheckboxCommonBadge-{{j}}\">Common Badge #</label>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row mt10\" *ngIf=\"product.get('IsCommonBadge').value != true\">\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group mb5\">\r\n                                                                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" fom placeholder=\"Badge #1\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4 pr10 pl10\">\r\n                                                                            <div class=\"form-group mb5 \">\r\n                                                                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\" placeholder=\"Badge #2\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4 pl5\">\r\n                                                                            <div class=\"form-group mb5 \">\r\n                                                                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\" placeholder=\"Badge #3\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- tank ullage calculation result -->\r\n                                                        <div class=\"row mt10\"\r\n                                                            *ngIf=\"isTankExists && product.get('Tanks')?.controls && product.controls['isRetainInfo'].value\">\r\n                                                            <div class=\"col-12\">\r\n                                                                <div class=\"border p-3 radius-5 tank-panel bg-lightgrey\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 form-group mb0\">\r\n                                                                            <table class=\"table table-sm\">\r\n                                                                                <tr>\r\n                                                                                    <th>Tank</th>\r\n                                                                                    <th>Retain Time</th>\r\n                                                                                    <th>Window Time</th>\r\n                                                                                </tr>\r\n                                                                                <tr\r\n                                                                                    *ngFor=\"let retainInfo of product.get('RetainInfo')?.controls\">\r\n                                                                                    <td class=\"color-blue opacity8\">\r\n                                                                                        {{retainInfo.get('TankName').value}}</td>\r\n                                                                                    <td class=\"color-blue opacity8\">\r\n                                                                                        {{retainInfo.get('RetainTime').value}}-{{retainInfo.get('RetainDate').value}}\r\n                                                                                    </td>\r\n                                                                                    <td class=\"color-blue opacity8\">\r\n                                                                                        {{retainInfo.get('WindowStartTime').value}}\r\n                                                                                        {{retainInfo.get('WindowStartDate').value}}\r\n                                                                                        -\r\n                                                                                        {{retainInfo.get('WindowEndTime').value}}\r\n                                                                                        {{retainInfo.get('WindowEndDate').value}}\r\n                                                                                    </td>\r\n            \r\n                                                                                    <!-- <td class=\"color-blue opacity8\" *ngIf=\"product.controls['RetainTime'].value!='' && product.controls['RetainDate'].value!=''\"><strong>Retain Time</strong><br />{{product.controls['RetainTime'].value}}-{{product.controls['RetainDate'].value}}</td> -->\r\n                                                                                    <!-- <td class=\"color-blue opacity8\" *ngIf=\"product.controls['WindowStartTime'].value!='' && product.controls['WindowStartDate'].value!='' && product.controls['WindowEndTime'].value!='' && product.controls['WindowEndDate'].value!=''\"><strong>Window Time</strong><br />{{product.controls['WindowStartTime'].value}} {{product.controls['WindowStartDate'].value}} - {{product.controls['WindowEndTime'].value}} {{product.controls['WindowEndDate'].value}}</td> -->\r\n                                                                                </tr>\r\n                                                                            </table>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- reccuring schedule -->\r\n                                                        <div class=\"row mt10\">\r\n                                                            <div class=\"col-12\">\r\n                                                                <div class=\"border p-3 radius-5 tank-panel bg-lightgrey\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 form-group mb0\">\r\n                                                                            <div class=\"form-check form-check-inline \">\r\n                                                                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isRecurringSchedule\" (change)=\"enableSchedule(product,j);\" id=\"chkreShedule_{{j}}\">\r\n                                                                                <label class=\"form-check-label\" for=\"chkreShedule_{{j}}\">Recurring Schedule</label>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 showHide{{j}}\" style=\"display:none;\">\r\n                                                                            <div formArrayName=\"RecurringSchdule\">\r\n                                                                                <div *ngFor=\"let recurringSchedule of product.get('RecurringSchdule').controls;let reIndex = index\">\r\n                                                                                    <div [formGroupName]=\"reIndex\">\r\n                                                                                        <div class=\"row\">\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\">\r\n                                                                                                <select formControlName=\"ScheduleType\" class=\"form-control\">\r\n                                                                                                    <option *ngFor=\"let scType of ScheduleTypes\" [value]=\"scType.Id\">\r\n                                                                                                        {{scType.Name}}\r\n                                                                                                    </option>\r\n                                                                                                </select>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\" *ngIf=\"recurringSchedule.controls['ScheduleType'].value==1 || recurringSchedule.controls['ScheduleType'].value==2\">\r\n\r\n                                                                                                <ng-multiselect-dropdown class=\"single-select\"\r\n                                                                                                                         style=\"width: 100%;\"\r\n                                                                                                                         [settings]=\"DaySetting\"\r\n                                                                                                                         [data]=\"ScheduleDaysDetails\"\r\n                                                                                                                         formControlName=\"TempWeekDayId\"\r\n                                                                                                                         (onSelect)=\"onDaySelect($event, recurringSchedule, true)\"\r\n                                                                                                                         (onDeSelect)=\"onDaySelect($event, recurringSchedule, false)\">\r\n                                                                                                </ng-multiselect-dropdown>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\" *ngIf=\"recurringSchedule.controls['ScheduleType'].value==3\">\r\n                                                                                                <input type=\"text\" formControlName=\"Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setSelectedDate($event,recurringSchedule);\" />\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\" *ngIf=\"!recurringSchedule.controls['IsBlendedProduct'].value\">\r\n                                                                                                <select formControlName=\"ScheduleQuantityType\" class=\"form-control\">\r\n                                                                                                    <option *ngFor=\"let sqType of ScheduleQuantityTypeDetails\" [value]=\"sqType.Id\">\r\n                                                                                                        {{sqType.Name}}\r\n                                                                                                    </option>\r\n                                                                                                </select>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 mt10\" *ngIf=\"recurringSchedule.controls['ScheduleQuantityType'].value==1\">\r\n                                                                                                <div class=\"input-group\">\r\n                                                                                                    <input type=\"text\" [disabled]=\"recurringSchedule.controls['IsBlendedProduct'].value\" formControlName=\"RequiredQuantity\" numberWithDecimal class=\"form-control pr-2\" placeholder=\"Required Quantity\" />\r\n                                                                                                    <div class=\"input-group-addon\">{{product.get('UoM').value=='Gallons'?'G':'L'}}</div>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                                                <div class=\"form-group mb0\">\r\n                                                                                                    <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" placeholder=\"Delivery-Level PO#\" />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-1 mt10\">\r\n                                                                                                <a (click)=\"DeleteSchedule(product,reIndex,recurringSchedule.controls['Id'].value)\" class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\"></a>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"mt10\">\r\n                                                                                <a (click)=\"addNewSchedule(product)\"><i class=\"fas fa-plus-circle\"></i>&nbsp;Schedule</a>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- notes -->\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12\">\r\n                                                                <div class=\"form-group mt10\">\r\n                                                                    <textarea formControlName=\"Notes\"\r\n                                                                        class=\"form-control add-note-tarea\"\r\n                                                                        placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <div class=\"row mt10\">\r\n                                                            <!-- tank calculation -->\r\n                                                            <div class=\"col-sm-12 text-right\">\r\n                                                                <button type=\"button\" class=\"btn btn-default btn-lg\" *ngIf='selectedLocation.length==0 && isTankExists'\r\n                                                                    (click)=\"onSingleCaculateRetainWindow(product)\">Calculate</button>\r\n                                                                <button type=\"submit\" *ngIf=\"selectedLocation.length==0\" (click)=\"onSingleSubmit(product)\"\r\n                                                                    class=\"btn btn-primary btn-lg\" [disabled]=\"dipTestLoader\">Submit</button>\r\n                                                            </div>\r\n            \r\n                                                            <!-- show existing drs -->\r\n                                                            <div class=\"col-sm-12\" *ngIf=\"product.get('IsDRExists').value\">\r\n                                                                <div class=\"alert alert-warning fs12 mb0 radius-10\">\r\n                                                                    <i class=\"fas fa-exclamation-circle mr5\"></i>\r\n                                                                    <strong>Warning:</strong> Delivery\r\n                                                                    Request(s) exists <a (click)=\"product.get('DisplayDRDetails').setValue(!product.get('DisplayDRDetails').value)\">Show\r\n                                                                        Details</a>\r\n                                                                    <div *ngIf=\"product.get('DisplayDRDetails').value\">\r\n                                                                        <table class=\"table table-hover margin bottom details-table\">\r\n                                                                            <thead>\r\n                                                                                <tr>\r\n                                                                                    <th>Required Quantity</th>\r\n                                                                                    <th>Priority</th>\r\n                                                                                    <th>Status</th>\r\n                                                                                    <th>Created Date</th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n                                                                                <tr *ngFor=\"let partialDR of product.get('ExistingDR').value\">\r\n                                                                                    <!--for numeric-->\r\n                                                                                    <td *ngIf=\"partialDR.ScheduleQuantityType==0||partialDR.ScheduleQuantityType==1\">\r\n                                                                                        {{partialDR.RequiredQuantity |\r\n                                                                                        number:'1.0-2'}}\r\n                                                                                        {{product.get('UoM').value}}</td>\r\n                                                                                    <!--for non numeric-->\r\n                                                                                    <td *ngIf=\"partialDR.ScheduleQuantityType>1\">\r\n                                                                                        {{partialDR.ScheduleQuantityTypeName}}</td>\r\n                                                                                    <td>{{DelReqPriority[partialDR.Priority]}}</td>\r\n                                                                                    <td *ngIf=\"!partialDR.IsMissedDr\">\r\n                                                                                        {{partialDR.ScheduleStatusName}}</td>\r\n                                                                                    <td *ngIf=\"partialDR.IsMissedDr\">Missed</td>\r\n                                                                                    <td>{{partialDR.CreatedOn}}</td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- OTHER PRODUCTS -->\r\n            \r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </ng-container>\r\n            \r\n                                <!-- badges and pickup details -->\r\n                                <ng-container\r\n                                    *ngIf=\"!RequestFromBuyerWallyBoard && fmGroup.get('DeliveryRequests')?.value?.length>0 && showForm\">\r\n                                    <div class=\"border radius-5 pa15 tank-panel mb20 bg-lightgrey \">\r\n                                        <div class=\"mt10\" *ngIf=\"IsCommonBadge\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 pr5\">\r\n                                                    <div class=\"form-group mb5\">\r\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" fom\r\n                                                            placeholder=\"Badge #1\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 pr10 pl10\">\r\n                                                    <div class=\"form-group mb5 \">\r\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\"\r\n                                                            placeholder=\"Badge #2\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 pl5\">\r\n                                                    <div class=\"form-group mb5 \">\r\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\"\r\n                                                            placeholder=\"Badge #3\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12 mt10\">\r\n                                                <div class=\"float-left mt5\" *ngIf=\"!this.fmGroup.controls['IsPreLoadInfo']?.value\">\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"comm-pick-Ckbox1\"\r\n                                                            formControlName=\"IsCommonPickup\">\r\n                                                        <label class=\"form-check-label\" for=\"comm-pick-Ckbox1\">Common Pick-up\r\n                                                            Location</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button *ngIf=\"!this.fmGroup.controls['IsPreLoadInfo']?.value\"\r\n                                                    class=\"btn btn-default btn-sm float-left ml10\"\r\n                                                    (click)=\"editPickupLocation_(null, null)\"\r\n                                                    [disabled]=\"!this.fmGroup.controls['IsCommonPickup']?.value\" data-toggle=\"modal\"\r\n                                                    #idCommonPickUpBtn data-target=\"#dr-pickup-location\">\r\n                                                    <i class=\"fas fa-map-marker-alt\"></i> Choose Pick-up\r\n                                                </button>\r\n            \r\n                                                <div class=\"pr5 clearboth\">\r\n                                                    <div *ngIf=\"fmGroup.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                        {{fmGroup.controls['Terminal']['controls'].Name.value}}\r\n                                                        <div\r\n                                                            *ngIf=\"fmGroup.controls['Terminal'].invalid && (fmGroup.controls['Terminal'].dirty || fmGroup.controls['Terminal'].touched)\">\r\n                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                *ngIf=\"fmGroup.controls['Terminal']['controls'].Name.errors.required\">\r\n                                                                Required\r\n                                                                <!-- (Terminal) -->\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <ng-template #bulkPlant>\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].SiteName.value}}\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].City.value}}\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].State['controls']?.Code.value}}\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].ZipCode.value}}\r\n                                                        <div\r\n                                                            *ngIf=\"fmGroup.controls['BulkPlant'].invalid && (fmGroup.controls['BulkPlant'].dirty || fmGroup.controls['BulkPlant'].touched)\">\r\n                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                *ngIf=\"fmGroup.controls['BulkPlant'].invalid\">\r\n                                                                Required\r\n                                                                <!-- (Bulk Plant) -->\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </div>\r\n\r\n                                                <div *ngIf=\"fmGroup.controls['IsCommonPickup'].value || fmGroup.controls['IsCommonBadge'].value\" class=\"alert alert-warning fs12 mb0 mt10 radius-10\">\r\n                                                    Please verify common pickup/badges for auto orders if exists.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n            \r\n                        <!-- tab - trend chart for tanks -->\r\n                        <div id=\"trends\" class=\"tab-pane fade\" *ngIf=\"isTankExists\">\r\n                            <app-demand-capture-chart *ngIf=\"(isChartDataExistSubject | async)\" [data]=\"chartdata\">\r\n                            </app-demand-capture-chart>\r\n                        </div>\r\n            \r\n                        <!-- tab - sales grid for tanks -->\r\n                        <div id=\"sales\" class=\"tab-pane fade\" *ngIf=\"isTankExists\">\r\n                            <div class=\"ibox-content no-padding no-border\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table id=\"table-sales\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtOptions\"\r\n                                        [dtTrigger]=\"dtTrigger\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <!-- <th data-key=\"Cust\">Customer</th>\r\n                                                <th data-key=\"Loc\">Location</th> -->\r\n                                                <th data-key=\"TName\">Tank Name</th>\r\n                                                <th data-key=\"Avg7Day\">Trailing 7 day average</th>\r\n                                                <th data-key=\"PDS\">Previous day sale</th>\r\n                                                <th data-key=\"SaleWeek\">Sales on week ago</th>\r\n                                                <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                                <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                                <th data-key=\"Ullg\">Ullage</th>\r\n                                                <th data-key=\"lastDelivery\">Last Delivered Qty</th>\r\n                                                <th data-key=\"lastDeliveryQty\">Date of last delivery</th>\r\n                                                <th data-key=\"DRemg\">Days remaining</th>\r\n                                                <!-- <th data-key=\"Status\">Status</th> -->\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngIf=\"(isLoadingSubject | async)\"\r\n                                                class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                                <span class='spinner-dashboard pa'></span>\r\n                                            </tr>\r\n                                            <tr *ngFor=\"let row of SalesData\">\r\n                                                <!-- <td>{{row.CompanyName}}</td>\r\n                                                <td>{{row.SiteId}}</td> -->\r\n                                                <td>{{row.TankName}}</td>\r\n                                                <td>{{row.AvgSale}}</td>\r\n                                                <td>{{row.PrevSale}}</td>\r\n                                                <td>{{row.WeekAgoSale}}</td>\r\n                                                <td>{{row.Inventory}}</td>\r\n                                                <td>{{row.LastReadingTime}}</td>\r\n                                                <td>{{row.Ullage}}</td>\r\n                                                <td>{{row.LastDeliveredQuantity}}</td>\r\n                                                <td>{{row.LastDeliveryDate}}</td>\r\n                                                <td>{{row.DaysRemaining}}</td>\r\n                                                <!-- <td>{{row.Status}}</td> -->\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer\">\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-sm-2 text-left\">\r\n                        <button type=\"button\" class=\"btn btn-default btn-lg\" *ngIf='selectedLocation.length>0 && isTankExists' (click)=\"onCaculateRetainWindow()\">Calculate</button>\r\n                    </div>\r\n                    <div class=\"col-sm-7\">\r\n                        <div *ngIf=\"FormValidationMessage.length != 0\" class=\"text-left alert alert-info fs12 radius-5 pa10 mtm2\">\r\n                            <span> <i class=\"fas fa-info-circle mr5\"></i> {{FormValidationMessage}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 text-right\">\r\n                        <button type=\"button\" class=\"btn\" onclick=\"closeSlidePanel();\" (click)=\"clearForm()\">Cancel</button>\r\n                        <button *ngIf='selectedLocation.length>0' [disabled]=\"isUserSubmit\" (click)=\"onSubmit()\" type=\"button\" class=\"btn btn-primary btn-lg\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"pt10 pb10 pl20 pr20\">\r\n\r\n\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"side-panel\" id=\"tbddr\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"header\">\r\n                <a class=\"ml10 close-panel\" onclick=\"closeSlidePanel();\" (click)=\"clearForm();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Create TBD Delivery Request</h3>\r\n            </div>\r\n            <div class=\"body-panel\" [formGroup]=\"fmTBDGroup\">\r\n                <div *ngIf=\"TBDdipTestLoader\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <ng-container *ngFor=\"let product of fmTBDGroup.get('ScheduleTBDForm')['controls']; let j = index\">\r\n                    <ng-container formArrayName=\"ScheduleTBDForm\">\r\n                        <ng-container [formGroupName]=\"j\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"card mb-3\">\r\n                                        <div class=\"card-header shadow-sm bg-light\">\r\n                                            <div class=\"row mb-2\">\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <ng-multiselect-dropdown formControlName=\"SelectedFuelType\"\r\n                                                                                     [placeholder]=\"'Select Fuel Type'\" [settings]=\"FuelTypeDdlSettings\" [data]=\"FuelTypeDetails\"\r\n                                                                                     (onSelect)=\"onFuelTypeSelect($event,product, false)\" (onDeSelect)=\"onFuelTypeDeSelect($event,product, false)\"\r\n                                                                                     (onSelectAll)=\"onFuelTypeSelectAll($event,product, false)\"\r\n                                                                                     (onDeSelectAll)=\"onFuelTypeDeSelectAll(product, false)\">\r\n                                                            </ng-multiselect-dropdown>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <ng-multiselect-dropdown formControlName=\"SelectedOtherFuelType\"\r\n                                                                                     [placeholder]=\"'Select Other Fuel Type'\" [settings]=\"FuelTypeDdlSettings\" [data]=\"OtherFuelTypeDetails\"\r\n                                                                                     (onSelect)=\"onFuelTypeSelect($event,product, true)\" (onDeSelect)=\"onFuelTypeDeSelect($event,product, true)\"\r\n                                                                                     (onSelectAll)=\"onFuelTypeSelectAll($event,product, true)\"\r\n                                                                                     (onDeSelectAll)=\"onFuelTypeDeSelectAll(product, true)\">\r\n                                                            </ng-multiselect-dropdown>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                                                                <div class=\"btn-group btn-filter\">\r\n                                                                    <div class=\"form-check form-check-inline mr-0\">\r\n                                                                        <input id=\"rdo-mustgo{{j}}\" class=\"hide-element\" type=\"radio\" [value]=\"1\" formControlName=\"Priority\" [checked]=\"product.get('Priority').value==1\">\r\n                                                                        <label class=\"btn ml-0\" for=\"rdo-mustgo{{j}}\" > Must Go</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline  mr-0\">\r\n                                                                        <input class=\"hide-element\" type=\"radio\" formControlName=\"Priority\" id=\"rdo-shouldgo{{j}}\" [value]=\"2\" [checked]=\"product.get('Priority').value==2\">\r\n                                                                        <label class=\"btn\" for=\"rdo-shouldgo{{j}}\">Should Go</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline mr-0\">\r\n                                                                        <input class=\"hide-element\" type=\"radio\" [value]=\"3\" formControlName=\"Priority\" id=\"rdo-couldgo{{j}}\" [checked]=\"product.get('Priority').value==3\">\r\n                                                                        <label class=\"btn\" for=\"rdo-couldgo{{j}}\">Could Go</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div> \r\n                                                        <div class=\"col-sm-4 mt-2\">\r\n                                                            <div class=\"clearfix color-lightgrey col-sm-12 pa0\">\r\n                                                                <!--<div class=\"pull-left\">\r\n                                                                    <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                                    <span class=\"pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else location;\">\r\n                                                                        Terminal\r\n                                                                    </span>\r\n                                                                    <ng-template #location>\r\n                                                                        <span class=\"pr5\">\r\n                                                                            Location\r\n                                                                        </span>\r\n                                                                    </ng-template>\r\n                                                                </div>-->\r\n                                                                <div class=\"pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                                    <strong>Terminal - </strong>{{product.controls['Terminal']?.controls['Name']?.value}}\r\n                                                                </div>\r\n                                                                <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                    <span class=\"pull-left pl5 pr5\">\r\n                                                                        <strong>Location - </strong>\r\n                                                                        {{product.controls['BulkPlant']?.controls['SiteName'].value}}, {{product.controls['BulkPlant']?.controls['City'].value}},\r\n                                                                        {{product.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{product.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                                    </span>\r\n                                                                </ng-template>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-2 text-right mt-2\">\r\n                                                    <a placement=\"bottom\" ngbTooltip=\"Add/Edit Pickup Location\" (click)=\"editTBDPickupLocation_(product, j)\" data-toggle=\"modal\" data-target=\"#dr-tbd-pickup-location\"><i class=\"fa fa-map-marker-alt fs18 ml5 mt2\"></i></a>\r\n                                                    <a (click)=\"removeTBDDR(product,j)\" class=\"ml-2\" placement=\"bottom\" ngbTooltip=\"Remove DR\"><i class=\"fas fa-trash-alt text-danger\"></i></a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ng-container *ngFor=\"let drProduct of product.get('DeliveryRequests')['controls']; let dr = index\">\r\n                                            <ng-container formArrayName=\"DeliveryRequests\">\r\n                                                <ng-container [formGroupName]=\"dr\">\r\n                                                    <div class=\"card-body pb-0\">\r\n                                                        <div class=\"row mb-2\">\r\n                                                            <div class=\"col-1\">\r\n                                                                <label>{{drProduct.get('FuelTypeName').value}}</label>\r\n                                                            </div>\r\n                                                            <div class=\"col-2\" style=\"max-width:15% !important;\">\r\n                                                                <select formControlName=\"DRScheduleQuantityType\" class=\"form-control\">\r\n                                                                    <option *ngFor=\"let sqType of ScheduleQuantityTypeDetails\" [value]=\"sqType.Id\">\r\n                                                                        {{sqType.Name}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class=\"col-2\" style=\"max-width:15% !important;\" *ngIf=\"drProduct.controls['DRScheduleQuantityType'].value==1\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <input type=\"text\" formControlName=\"RequiredQty\" class=\"form-control\" placeholder=\"Quantity\">\r\n                                                                    <div class=\"input-group-append\">\r\n                                                                        <span class=\"input-group-text fs11\">{{companyUoM == 1 ? 'G' : 'L'}}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-1\">\r\n                                                                <input type=\"text\" formControlName=\"BadgeNo1\" class=\"form-control\" placeholder=\"Badge#\" />\r\n                                                            </div>\r\n                                                            <div class=\"col-1\">\r\n                                                                <input type=\"text\" formControlName=\"BadgeNo2\" class=\"form-control\" placeholder=\"Badge#\" />\r\n                                                            </div>\r\n                                                            <div class=\"col-1\">\r\n                                                                <input type=\"text\" formControlName=\"BadgeNo3\" class=\"form-control\" placeholder=\"Badge#\" />\r\n                                                            </div>\r\n                                                            <div class=\"col-2\" style=\"max-width:15% !important;\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" placeholder=\"Delivery-Level PO#\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-2 pr-0\" style=\"max-width:15% !important;\">\r\n                                                                <textarea formControlName=\"Notes\" class=\"form-control add-note-tarea\" placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                                                            </div>\r\n                                                            <div class=\"col pt-2 text-right\">\r\n                                                                <a (click)=\"removeSubTBDDR(product, dr,drProduct.get('FuelTypeId').value,drProduct.get('ProductTypeId').value)\" class=\"ml-2\" placement=\"top\" ngbTooltip=\"Remove Product\"><i class=\"fas fa-trash-alt text-danger\"></i></a>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n\r\n            </div>\r\n            <div class=\"footer px-3\">\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-sm-2 text-left\">\r\n                        <a class=\"fs18 pull-left mt-1\" (click)=\"addTBDDR();\"><i class=\"fa fa-plus-circle fs18 mt3 pull-left\"></i><span class=\"fs14 mt1 pull-left\">Add DR</span></a>\r\n                    </div>\r\n                    <div class=\"col-sm-10 text-right\">\r\n                        <button class=\"btn\" onclick=\"closeSlidePanel();\" type=\"button\">Cancel</button>\r\n                        <button class=\"btn btn-primary mr-1\" type=\"submit\" [disabled]=\"isTBDUserSubmit\" (click)=\"SubmitTBDData();\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"dr-pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style=\"z-index: 1051!important;\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <!--<div class=\"btn-group btn-filter\" data-toggle=\"buttons\">\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            Terminal &nbsp;\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            Bulk Plant\r\n                        </div>-->\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"inlinePickup\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"inlinePickup\" id=\"inlineBulkplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"updatePickupLocation_()\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\">\r\n                    <!-- terminal start -->\r\n                    <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                        <div class=\"col-sm-10\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" (input)=\"onTerminalSearched_($event);PickupForm.controls['Terminal']['controls'].Id.patchValue(0)\" (focus)=\"onTerminalSearched_($event);\" (blur)=\"validateTerminal_(PickupForm.controls['Terminal'],$event)\" placeholder=\"Terminal Name\" />\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li class=\"form-text\" *ngIf=\"minCharRequired\"><small>Enter minimum 3 characters to search.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"searchError\"><small>Something went wrong.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"_loadingTerminals\"><small>Loading...</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"noTerminalFound && !minCharRequired && !searchError && !_loadingTerminals \"><small>{{SearchTerminalKey.length > 0 ? \"Matching terminal\" : \"Terminal\"}} not found for Fuel Type : {{SearchTerminalFuelType}}</small></li>\r\n                                    <li *ngFor=\"let terminal of Terminals;\" (click)=\"onTerminalSelected_(terminal)\"\r\n                                        [attr.selected]=\"terminal.Id==PickupForm.controls['Terminal']['controls'].Id.value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                                <ng-container *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.invalid\r\n                                      && (PickupForm.controls['Terminal']['controls'].Name.touched || PickupForm.controls['Terminal']['controls'].Name.dirty)\">\r\n                                    <label style=\"color:red\" *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                        Required\r\n                                    </label>\r\n                                </ng-container>\r\n                            </div>\r\n                            <!--<div class=\"ng-autocomplete\">\r\n                                <ng-autocomplete [data]=\"Terminals\"\r\n                                                 [searchKeyword]=\"keyword\"\r\n                                                 placeholder=\"Terminal Name\"\r\n                                                 (inputChanged)=\"onTerminalSearched_($event)\"\r\n                                                 (selected)='onTerminalSelected_($event)'\r\n                                                 [itemTemplate]=\"itemTemplate\"\r\n                                                 [notFoundTemplate]=\"notFoundTemplate\">\r\n                                </ng-autocomplete>\r\n\r\n                                <ng-template #itemTemplate let-item>\r\n                                    <a [innerHTML]=\"item.Name\"></a>\r\n                                </ng-template>\r\n\r\n                                <ng-template #notFoundTemplate let-notFound>\r\n                                    <div [innerHTML]=\"notFound\"></div>\r\n                                </ng-template>\r\n                            </div>-->\r\n                        </div>\r\n                        <div style=\"padding-left: 10px;padding-top:7px;\">\r\n                            <a (click)=\"deletePickupInfo(PickupForm.controls['Terminal'])\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <!-- terminal ends -->\r\n                    <!-- bulk plant starts -->\r\n                    <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Bulk Plant</label>\r\n                                        <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched_($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur_($event)\" />\r\n                                        <ul class=\"auto-select border-dash\">\r\n                                            <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected_(plant)\"\r\n                                                [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                        </ul>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Address\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                        <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip_($event)\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                Invalid {{ CountryBasedZipcodeLabel }}\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                        <label>State</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                        <label>Country/Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" (change)=\"OnCountryChanged($event)\">\r\n                                            <option [value]=\"null\">Select</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                        <label>Country</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>County</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Latitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Longitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- bulk plant ends -->\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn\" data-dismiss=\"modal\" id=\"btnDrPickupClose\">Cancel</button>\r\n                    <button type=\"button\" *ngIf=\"IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocationForBlend()\" class=\"btn btn-primary\">Add</button>\r\n                    <button type=\"button\" *ngIf=\"!IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocation_()\" class=\"btn btn-primary\">Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"dr-tbd-pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"updatePickupLocation_()\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\">\r\n                    <!-- terminal start -->\r\n                    <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                        <div class=\"col-sm-10\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" (input)=\"onTBDTerminalSearched_($event);PickupForm.controls['Terminal']['controls'].Id.patchValue(0)\" (focus)=\"onTBDTerminalSearched_($event);\" (blur)=\"validateTerminal_(PickupForm.controls['Terminal'],$event)\" placeholder=\"Terminal Name\" />\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li *ngFor=\"let terminal of TBDTerminals;\" (click)=\"onTerminalSelected_(terminal)\"\r\n                                        [attr.selected]=\"terminal.Id==PickupForm.controls['Terminal']['controls'].Id.value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                                <ng-container *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.invalid\r\n                                      && (PickupForm.controls['Terminal']['controls'].Name.touched || PickupForm.controls['Terminal']['controls'].Name.dirty)\">\r\n                                    <label style=\"color:red\" *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                        Required\r\n                                    </label>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"padding-left: 10px;padding-top:7px;\">\r\n                            <a (click)=\"deleteTBDPickupInfo(PickupForm.controls['Terminal'])\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <!-- terminal ends -->\r\n                    <!-- bulk plant starts -->\r\n                    <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Bulk Plant</label>\r\n                                        <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched_($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur_($event)\" />\r\n                                        <ul class=\"auto-select border-dash\">\r\n                                            <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected_(plant)\"\r\n                                                [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                        </ul>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Address\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                        <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip_($event)\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                Invalid {{ CountryBasedZipcodeLabel }}\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                        <label>State</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                        <label>Country</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                        <label>Country Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>County</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Latitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Longitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- bulk plant ends -->\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn\" data-dismiss=\"modal\" id=\"btnTBDDrPickupClose\">Cancel</button>\r\n                    <button type=\"button\" [disabled]=\"!PickupForm.valid\" (click)=\"updateTBDPickupLocation_()\" class=\"btn btn-primary\">Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- blend dr modal -->\r\n<div id=\"openBlendModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#blendModal\"></div>\r\n<div class=\"modal fade\" id=\"blendModal\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\"\r\n     aria-labelledby=\"blendModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header py-1\">\r\n                <h4 class=\"modal-title\">Blend Details</h4>\r\n                <button type=\"button\" class=\"close mt-n2\" data-dismiss=\"modal\" (click)=\"IsPickupForBlendRequest=false\">&times;</button>\r\n            </div>\r\n\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\" *ngIf=\"fmGroup?.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex]\">\r\n\r\n                <div>\r\n                    <label class=\"form-check-label  fs18\">Products</label>\r\n                    <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0)\"></a>\r\n                </div>\r\n\r\n                <form [formGroup]=\"blendRequestForm\">\r\n                    <ng-container *ngFor=\"let blendedRequest of blendRequestForm.get('BlendedRequests')['controls']; let x = index;let first = first;let last = last;\">\r\n\r\n                        <ng-container formArrayName=\"BlendedRequests\">\r\n                            <ng-container [formGroupName]=\"x\">\r\n\r\n                                <!-- additive label -->\r\n                                <ng-container *ngIf=\"blendedRequest.get('IsAdditive').value && (first || !blendRequestForm.get('BlendedRequests')['controls'][+x - 1].get('IsAdditive').value)\">\r\n\r\n                                    <!-- validations -->\r\n                                    <div class=\"mt10\" *ngIf=\"blendRequestForm.valid\">\r\n                                        <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2\">Sum of entered quantity should match with {{fmGroup.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex].get('RequiredQuantity').value}}.</div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt-3\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <label class=\"form-check-label fs18\">Additive</label>\r\n                                            <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0, true)\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n\r\n                                <div class=\"row mt-2\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div>\r\n                                            <!-- order ddl -->\r\n                                            <select *ngIf=\"!blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\"\r\n                                                    (change)=\"orderChangedForBlendRequest($event.target.value, blendedRequest)\">\r\n                                                <option disabled value=\"null\">Select Order</option>\r\n                                                <option *ngFor=\"let order of getUnUsedOrdersForBlendedRequest(blendedRequest.get('OrderId').value)\" [value]=\"order.OrderId\">\r\n                                                    {{order.PoNumber}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <!-- additive order ddl -->\r\n                                            <select *ngIf=\"blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\" (change)=\"getUoM($event.target.value, blendedRequest)\">\r\n                                                <option disabled value=\"null\">Select Order</option>\r\n                                                <ng-container *ngFor=\"let order of getUnUsedBlendOrders(blendedRequest.get('OrderId').value)\">\r\n                                                    <option *ngIf=\"order.JobId == DipTestsForEachTank[DrForEditBlendedRequestIndex]?.JobId\" [value]=\"order.Id\">\r\n                                                        {{order.Name}}\r\n                                                    </option>\r\n                                                </ng-container>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"color-maroon\" *ngIf=\"blendedRequest.get('OrderId').touched && blendedRequest.get('OrderId').errors\">\r\n                                            <div>Order is required </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"number\" formControlName=\"RequiredQuantity\"\r\n                                                       numberWithDecimal class=\"form-control pr-2\" placeholder=\"Required Quantity\" (input)=\"blendDrQuantityChanged($event.target.value,x);\" />\r\n                                                <div class=\"input-group-addon\">{{blendedRequest.get('UoM').value != null ? blendedRequest.get('UoM').value : this.DipTestsForEachTank[this.DrForEditBlendedRequestIndex]?.UoM}}</div>\r\n                                            </div>\r\n\r\n                                            <div class=\"color-maroon\"\r\n                                                 *ngIf=\"((blendRequestForm.touched && blendedRequest.get('IsAdditive').value) || blendedRequest.get('RequiredQuantity').touched || blendedRequest.get('QuantityInPercent').touched) && blendedRequest.get('RequiredQuantity').errors\">\r\n                                                <div> Quantity is required </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-3\" *ngIf=\"!blendedRequest.get('IsAdditive').value\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"number\" formControlName=\"QuantityInPercent\"\r\n                                                       numberWithDecimal class=\"form-control\"\r\n                                                       placeholder=\"Quantity In Percent\" (input)=\"blendDrPercentChanged($event.target.value,x);\" />\r\n                                                <div class=\"input-group-addon\">%</div>\r\n                                            </div>\r\n\r\n                                            <div class=\"color-maroon\"\r\n                                                 *ngIf=\"(blendedRequest.get('QuantityInPercent').touched || blendedRequest.get('RequiredQuantity').touched) && blendedRequest.get('QuantityInPercent').invalid\">\r\n                                                <div>Invalid percentage</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <!-- remove row -->\r\n                                    <div class=\"col-sm-2 input-group\">\r\n                                        <a type=\"button\" title=\"Remove\" class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\" (click)=\"addRemoveBlendedProduct(false, x)\"></a>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <!-- pickup loc -->\r\n                                <div class=\"row mt-1\">\r\n                                    <div class=\"col-sm-12\" *ngIf=\"!fmGroup.controls['IsCommonPickup']?.value && !blendedRequest.get('IsAdditive').value && !fmGroup.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex].get('IsCommonPickupForBlend').value\">\r\n                                        <div class=\"input-group\">\r\n                                            <div class=\"pull-left\">\r\n                                                <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                <span class=\"pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else location;\">Terminal</span>\r\n                                                <ng-template #location><span class=\"pr5\">Location</span></ng-template>\r\n                                            </div>\r\n                                            <div class=\"pull-left pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                {{blendedRequest.controls['Terminal']?.controls['Name']?.value}}\r\n                                                <div *ngIf=\"blendedRequest.controls['Terminal']?.invalid && (blendedRequest.controls['Terminal']?.dirty || blendedRequest.controls['Terminal']?.touched)\">\r\n                                                    <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                <span class=\"pull-left pl5 pr5\">\r\n                                                    {{blendedRequest.controls['BulkPlant']?.controls['SiteName'].value}}, {{blendedRequest.controls['BulkPlant']?.controls['City'].value}},\r\n                                                    {{blendedRequest.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{blendedRequest.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                </span>\r\n                                                <div *ngIf=\"blendedRequest.controls['BulkPlant'].invalid && (blendedRequest.controls['BulkPlant'].dirty || blendedRequest.controls['BulkPlant'].touched)\">\r\n                                                    <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['BulkPlant'].invalid\">Required</label>\r\n                                                </div>\r\n                                            </ng-template>\r\n                                            <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                <a class=\"float-left\" (click)=\"IsPickupForBlendRequest=true;editPickupLocationForBlend(x);\" data-toggle=\"modal\" data-target=\"#dr-pickup-location\" placement=\"bottom\" ngbTooltip=\"Edit Pickup Location\"><i class=\"fa fa-edit fs18 ml-3 mt2\"></i></a>\r\n                                            </span>\r\n                                            <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                <a (click)=\"RemovePickupLocation(blendedRequest, x)\" placement=\"bottom\" ngbTooltip=\"Remove Pickup Location\" class=\"float-left color-maroon\"><i class=\"fa fa-close fs18 ml-2 mt2\"></i></a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- additive label -->\r\n                                <ng-container *ngIf=\"(last && !blendedRequest.get('IsAdditive').value)\">\r\n\r\n                                    <!-- validations -->\r\n                                    <div class=\"mt10\" *ngIf=\"blendRequestForm.valid\">\r\n                                        <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2\">Sum of entered quantity should match with {{fmGroup.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex].get('RequiredQuantity').value}}.</div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt-3\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <label class=\"form-check-label fs18\">Additive</label>\r\n                                            <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0, true)\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                    <!-- validations -->\r\n                    <ng-container *ngIf=\"blendRequestForm.valid\">\r\n                        <div class=\"mt10\">\r\n                            <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length<2\" class=\"alert alert-danger mb-2 p-2\">Please add at least two rows.</div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <div class=\"text-right\">\r\n                        <!-- buttons -->\r\n                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-lg\" (click)=\"IsPickupForBlendRequest=false\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"blendRequestForm.invalid || blendRequestForm.get('BlendedRequests')['controls'].length<2 || !isBlendedRequestQuantityValid()\" (click)=\"submitBlendedForm()\" data-dismiss=\"modal\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, QueryList, ViewChildren, SimpleChanges, ViewChild, OnDestroy } from '@angular/core';\r\nimport { ForecastingTankViewModel, ForecastingInventoryViewModel, ForecastingEstimatedUsageViewModel, ForecastingDeliveryViewModel, ForecastingExistingScheduleViewModel, SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { forkJoin, merge, Subject, Subscription } from 'rxjs';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { DipTestComponent } from '../dip-test/dip-test.component';\r\nimport { ForecastingLocationFilter } from 'src/app/dispatcher/dispatcher.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LocationTankDetailsModel, WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\r\ndeclare var IsBuyerCompany: boolean;\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n    selector: 'app-forecasting-tank-view',\r\n    templateUrl: './tank-view-component.html',\r\n    styleUrls: ['./tank-view-component.css']\r\n})\r\nexport class ForcastingTankViewComponent implements OnInit, OnDestroy {\r\n\r\n    public LocationSchedules: any = [];\r\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\r\n    public FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\r\n    public ForecastingTankDetails: ForecastingTankViewModel[] = [];\r\n    public ForecastingTankInventoryDetails: ForecastingInventoryViewModel[] = [];\r\n    public ForecastingTankEstimatedUsageDetails: ForecastingEstimatedUsageViewModel[] = [];\r\n    public ForecastingTankDeliveryDetails: ForecastingDeliveryViewModel[] = [];\r\n    public ForecastingTankScheduleDetails: ForecastingExistingScheduleViewModel[] = [];\r\n    public dtInventoryTrigger: Subject<any> = new Subject();\r\n    public dtInventoryOptions: any = {};\r\n    public dtEstimatedTrigger: Subject<any> = new Subject();\r\n    public dtEstimatedOptions: any = {};\r\n    public dtDeliveryTrigger: Subject<any> = new Subject();\r\n    public dtDeliveryOptions: any = {};\r\n    public dtScheduleTrigger: Subject<any> = new Subject();\r\n    public dtScheduleOptions: any = {};\r\n    public exportInvitedColumns = { columns: ':visible' };\r\n    public MinInputDate: Date = new Date();\r\n    public MaxInputDate: Date = new Date();\r\n    public IsInventoryLoading: boolean = false;\r\n    public IsEstimatedLoading: boolean = false;\r\n    public IsDeliveryLoading: boolean = false;\r\n    public IsScheduleLoading: boolean = false;\r\n    public IstankLoading: boolean = true;\r\n    public SelectedTankRegionId: string = '';\r\n    public StartDate: string = '';\r\n    public EndDate: string = '';\r\n    IsLocDrpDwnLoading = false;\r\n    SelectedLocationId: string;\r\n    SelectedTankId: string;\r\n    SelectedTankIds: string;\r\n    SelectedStorageId: string;\r\n    SelectedSiteId: string;\r\n\r\n    @Input() RequestFromBuyerWallyBoard: boolean = false;\r\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n\r\n    filterArgs = { key: \"DaysRemaining\", asc: true };\r\n    @Input() salesTabFilterForm: FormGroup;\r\n    public applyFilterSubscription: Subscription[]= [];\r\n    \r\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) { }\r\n\r\n    ngOnInit() {\r\n        this.ForecastingTankDetails = [];\r\n        this.MinInputDate.setFullYear(this.MaxInputDate.getFullYear() - 1);\r\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 10);\r\n        this.intializeTableDetails();\r\n\r\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\r\n            if(this.salesTabFilterForm.get('RateOfConsumption').value){\r\n                this.initLocationDropDown(1);\r\n            }\r\n        }));\r\n\r\n        if(this.salesTabFilterForm.get('RateOfConsumption').value){\r\n            this.initLocationDropDown(1);\r\n        }\r\n    }\r\n    ngOnDestroy(){\r\n        if (this.applyFilterSubscription) {\r\n            this.applyFilterSubscription.forEach(subscription => {\r\n                subscription.unsubscribe()\r\n            });\r\n        }\r\n    }\r\n    setSortArgs(key: string) {\r\n        if (this.filterArgs.key == key) {\r\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\r\n        }\r\n        else {\r\n            this.filterArgs = { asc: true, key: key }\r\n        }\r\n    }\r\n    initLocationDropDown(isLocationLoad: number = 0) {\r\n        this.IsLocDrpDwnLoading = true;\r\n        this.LocationDrpDwnList = [];\r\n\r\n        let filter: ForecastingLocationFilter = new ForecastingLocationFilter();\r\n\r\n        if (this.RequestFromBuyerWallyBoard) {\r\n            filter = {\r\n                Carriers: '',\r\n                CustomerIds: '',\r\n                InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\r\n                IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\r\n                IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\r\n                RegionId: '',\r\n            };\r\n        } else {\r\n            filter = {\r\n                Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\r\n                CustomerIds: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\r\n                InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\r\n                IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\r\n                IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\r\n                RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\r\n            };\r\n        }\r\n\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getSupplierLocationTanks(filter).subscribe((result: any) => {\r\n                if (result != null) {\r\n                    this.intializeLocationDetails(result, isLocationLoad);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerLocationTanks(filter).subscribe((result: any) => {\r\n                if (result != null) {\r\n                    this.intializeLocationDetails(result, isLocationLoad);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    Partsfiltering(inputName?) {       \r\n        this.FilterLocationDrpDwnList = [];\r\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\r\n            let searchWord = inputName.target.value.toUpperCase();\r\n            this.LocationDrpDwnList.forEach(element => {\r\n                if (element.LocationName.toUpperCase().indexOf(searchWord) !== -1) {\r\n                    this.FilterLocationDrpDwnList.push(element);\r\n                }\r\n            });\r\n        } else {\r\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;           \r\n        }       \r\n    }\r\n    locationChange($event) {\r\n        this.SelectedTankId = null;\r\n        this.SelectedLocationId = $event.JobId;\r\n        this.SelectedSiteId = $event.SiteId;\r\n        this.SelectedTankIds = 'NONE';\r\n        this.SelectedStorageId = 'NONE';\r\n        this.StartDate = '';\r\n        this.EndDate = '';\r\n        this.ForecastingTankDetails = [];\r\n        this.ForecastingTankEstimatedUsageDetails = [];\r\n        this.getTankDetails(parseInt(this.SelectedLocationId));\r\n        this.getTankInventoryDetails(parseInt(this.SelectedLocationId));\r\n        this.getTankDeliveryDetails(parseInt(this.SelectedLocationId));\r\n        this.getTankScheduleDetails(parseInt(this.SelectedLocationId));\r\n    }\r\n    tankChange($event) {\r\n        this.StartDate = '';\r\n        this.EndDate = '';\r\n        this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\r\n        this.SelectedTankIds = $event.TankId;\r\n        this.SelectedStorageId = $event.StorageId;\r\n        this.ForecastingTankDetails = [];\r\n        this.ForecastingTankEstimatedUsageDetails = [];\r\n        this.getTankDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n        this.getTankInventoryDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n        this.getTankDeliveryDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n        this.getTankScheduleDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n    }\r\n    getTankDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IstankLoading = true;\r\n        this.IsInventoryLoading = true;\r\n        this.IsDeliveryLoading = true;\r\n        this.IsScheduleLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingTankViewModel[]) => {\r\n                this.ForecastingTankDetails = resp;             \r\n                this.ForecastingTankDetails && this.ForecastingTankDetails.map(m => {\r\n                    try {\r\n                        this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n\r\n                })\r\n                this.IstankLoading = false;\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingTankViewModel[]) => {\r\n                this.ForecastingTankDetails = resp;\r\n                this.ForecastingTankDetails && this.ForecastingTankDetails.map(m => {\r\n                    try {\r\n                        this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n\r\n                })\r\n                this.IstankLoading = false;\r\n            });\r\n        }\r\n    }\r\n    getTankInventoryDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IsInventoryLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankInventoryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingInventoryViewModel[]) => {\r\n                this.ForecastingTankInventoryDetails = resp;\r\n                this.IsInventoryLoading = false;\r\n                this.datatableInventoryRerender();\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankInventoryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingInventoryViewModel[]) => {\r\n                this.ForecastingTankInventoryDetails = resp;\r\n                this.IsInventoryLoading = false;\r\n                this.datatableInventoryRerender();\r\n            });\r\n        }\r\n    }\r\n    getTankEstimatedUsageDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        if (this.StartDate && this.StartDate != '' && this.EndDate && this.EndDate != '') {\r\n            this.IsEstimatedLoading = true;\r\n            if (IsBuyerCompany == false) {\r\n                this.dispatcherService.getForcastingTankEstimatedUsageDetails(JobId, TankId, StorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n            else {\r\n                this.dispatcherService.getBuyerForcastingTankEstimatedUsageDetails(JobId, TankId, StorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n        }\r\n    }\r\n    getTankDeliveryDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IsDeliveryLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankDeliveryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingDeliveryViewModel[]) => {\r\n                this.ForecastingTankDeliveryDetails = resp;\r\n                this.IsDeliveryLoading = false;\r\n                this.datatableDeliveryRerender();\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankDeliveryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingDeliveryViewModel[]) => {\r\n                this.ForecastingTankDeliveryDetails = resp;\r\n                this.IsDeliveryLoading = false;\r\n                this.datatableDeliveryRerender();\r\n            });\r\n        }\r\n    }\r\n    getTankScheduleDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IsScheduleLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankScheduleDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingExistingScheduleViewModel[]) => {\r\n                this.ForecastingTankScheduleDetails = resp;\r\n                this.IsScheduleLoading = false;\r\n                this.datatableScheduleRerender();\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankScheduleDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingExistingScheduleViewModel[]) => {\r\n                this.ForecastingTankScheduleDetails = resp;\r\n                this.IsScheduleLoading = false;\r\n                this.datatableScheduleRerender();\r\n            });\r\n        }\r\n    }\r\n    intializeInventoryTable() {\r\n        this.dtInventoryOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Inventory Information', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Inventory Information', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeEstimatedUsageTable() {\r\n        this.dtEstimatedOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Estimated Usage Information', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Estimated Usage Information', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeDeliveryTable() {\r\n        this.dtDeliveryOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Delivery Information', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Delivery Information', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeScheduleTable() {\r\n        this.dtScheduleOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Existing Schedule', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Existing Schedule', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeTableDetails() {\r\n        this.intializeInventoryTable();\r\n        this.intializeEstimatedUsageTable();\r\n        this.intializeDeliveryTable();\r\n        this.intializeScheduleTable();\r\n    }\r\n    private datatableInventoryRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtInventoryTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    private datatableEstimatedRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtEstimatedTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    private datatableDeliveryRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtDeliveryTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    private datatableScheduleRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtScheduleTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    public searchEstimatedData() {\r\n        if (this.StartDate && this.StartDate != '' && this.EndDate && this.EndDate != '') {\r\n            this.IsEstimatedLoading = true;\r\n            if (IsBuyerCompany == false) {\r\n                this.dispatcherService.getForcastingTankEstimatedUsageDetails(this.SelectedLocationId, this.SelectedTankIds, this.SelectedStorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n            else {\r\n                this.dispatcherService.getBuyerForcastingTankEstimatedUsageDetails(this.SelectedLocationId, this.SelectedTankIds, this.SelectedStorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror('Provide valid input details.', undefined, undefined);\r\n        }\r\n    }\r\n    public intializeLocationDetails(result: any, isLocationLoad: number = 0) {\r\n        this.IsLocDrpDwnLoading = false;\r\n        this.LocationDrpDwnList = result;\r\n        this.Partsfiltering();\r\n        this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\r\n        if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\r\n            this.LocationDrpDwnList.forEach(loc => {\r\n                loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\r\n                    if (result && result.filter(f => f.Tanks.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\r\n                        m.IsUnknowDeliveryOrMissDelivery = true;\r\n                    else\r\n                        m.IsUnknowDeliveryOrMissDelivery = false;\r\n                });\r\n            });\r\n            this.SelectedLocationId = this.LocationDrpDwnList[0].JobId.toString();\r\n            if (isLocationLoad == 0) {\r\n                this.getTankDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankInventoryDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankEstimatedUsageDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankDeliveryDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankScheduleDetails(this.LocationDrpDwnList[0].JobId);\r\n            }\r\n        }\r\n    }\r\n    setFromDate(event: any): void {\r\n        this.StartDate = event;\r\n    }\r\n\r\n    setToDate(event: any): void {\r\n        this.EndDate = event;\r\n    }\r\n    public showTanks(location?: any) {\r\n        if(location){\r\n            let row = this.ForecastingTankDetails[0];\r\n            this.SelectedTankRegionId = row.RegionId;\r\n\r\n            var salesDataModel = new SalesDataModel();\r\n            salesDataModel.RegionId = row.RegionId;\r\n            salesDataModel.SiteId = location.SiteId;\r\n            salesDataModel.TankId = location.TankId;\r\n            salesDataModel.StorageId = location.StorageId;\r\n            salesDataModel.TfxJobId = parseInt(location.JobId);\r\n            salesDataModel.LocationManagedType = location.LocationManagedType;\r\n            this.dipTestComponent.loadTankDR(salesDataModel);\r\n        }\r\n        else if (this.ForecastingTankDetails.length > 0) {\r\n\r\n            let row = this.ForecastingTankDetails[0];\r\n            this.SelectedTankRegionId = row.RegionId;\r\n            var salesDataModel = new SalesDataModel();\r\n            salesDataModel.RegionId = row.RegionId;\r\n            salesDataModel.SiteId = row.SiteId;\r\n            salesDataModel.TankId = row.TankId;\r\n            salesDataModel.StorageId = row.StorageId;\r\n            salesDataModel.TfxJobId = parseInt(this.SelectedLocationId);\r\n            salesDataModel.LocationManagedType = row.LocationManagedType;\r\n            this.dipTestComponent.loadTankDR(salesDataModel);\r\n        }\r\n    }\r\n    public closeSidePanel() {\r\n        closeSlidePanel();\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n        <div class=\"well bg-white shadow-b location-panel\">\r\n            <div id=\"accordion-location\" class=\"location-accordion\">\r\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\r\n                     src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\r\n                     alt=\"animated-truck-image-0009\" />-->\r\n                <div class=\"position-abs text-center\" [ngClass]=\"{'hide-element': !IsLocDrpDwnLoading }\">\r\n                    <span class='spinner-small ml10 mt5'></span>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"mb10\">\r\n                    <div class=\"inner-addon left-addon\">\r\n                        <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\"\r\n                            (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">No\r\n                    Location Available</div>\r\n                <div class=\"table-scroll\" *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\r\n\r\n                    <table class=\"table tank-view\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"45%\">Location</th>\r\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\r\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                                </th>\r\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\r\n                                <th>\r\n                                    Status\r\n                                </th>\r\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\r\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody> \r\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index;\">\r\n                                <tr >\r\n                                    <td>\r\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.JobId\">\r\n                                            <h2 class=\"mb-0\">\r\n                                                <div \r\n                                                    ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\r\n                                                    class=\"position-relative pr-3 btn btn-link collapsed text-left\"\r\n                                                    data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.JobId\"\r\n                                                    aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.JobId\"\r\n                                                    (click)=\"locationChange(loc)\">\r\n                                                    <ng-container>\r\n                                                        {{loc?.LocationName}}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\r\n                                                    </ng-container>\r\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\r\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </h2>\r\n                                        </div>\r\n                                       \r\n                                    </td>\r\n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\r\n                                    <!-- <td>{{loc.Status}}</td> -->\r\n                                    <td>\r\n                                        <!-- location level create dr -->\r\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                            <span class=\"\">{{loc.Status}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr [attr.id]=\"'col'+loc?.JobId\" class=\"collapse\"\r\n                                data-parent=\"#accordion-location\"\r\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.JobId\">\r\n                                    <td colspan=\"3\">\r\n                                        <div class=\"card-body\">\r\n                                            <ul class=\"list-group list-group-flush\">\r\n                                                <table class=\"table tank-view-child\">\r\n                                                    <!-- <thead>\r\n                                                        <tr>\r\n                                                            <th>Location</th>\r\n                                                            <th>Days remaining</th>\r\n                                                            <th>Status</th>\r\n                                                        </tr>\r\n                                                    </thead> -->\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let tank of loc?.Tanks\">\r\n                                                            <td width=\"45%\">\r\n                                                                <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\" [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                                    {{tank.Name}}\r\n                                                                    <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                                        class=\"active-dot\"></span>\r\n                                                                    <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"\r\n                                                                        *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                                </a>\r\n                                                            </td>\r\n                                                            <td width=\"24%\">\r\n                                                                {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <!-- tank level create dr -->\r\n                                                                <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                                                    <span class=\"\">{{tank.Status}}</span>\r\n                                                                </a>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                                <!-- <li class=\"list-group-item \" *ngFor=\"let tank of loc?.Tanks\"\r\n                                                    [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                    <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\">\r\n                                                        {{tank.Name}}({{(tank.DaysRemaining == 0)? \"N\\A\": tank.DaysRemaining + \" Days\"}}) <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                            class=\"active-dot\"></span>\r\n                                                        <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"\r\n                                                            *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                    </a>\r\n                                                </li> -->\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                            \r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3 pl-0\" *ngIf=\"ForecastingTankDetails!=null && ForecastingTankDetails.length>0\">\r\n        <div class=\"mb5 text-center\">\r\n            <a href=\"javascript:void(0)\" class=\"fs18 mb10\" (click)=\"showTanks()\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                <i class=\"fa fa-plus-circle fs18 mt4\"></i><span class=\"fs14 mt2 ml5\">Create DR</span>\r\n            </a>\r\n        </div>\r\n        <div *ngIf=\"ForecastingTankDetails!=null && ForecastingTankDetails.length>0\">\r\n            <div class=\"tank-container pr5\">\r\n                <div class=\"mb10\" *ngFor=\"let forecastigTankDetails of ForecastingTankDetails; let i = index;\">\r\n                    <div class=\"dr-panel\">\r\n                        <div class=\"header\">\r\n                            <div class=\"mb5\">\r\n                                <span class=\"tank-name\">{{forecastigTankDetails.TankName}}</span>\r\n                                <span class=\"product-type\"> {{forecastigTankDetails.ProductType}}</span>\r\n                                <!-- <span class=\"left-days\">{{forecastigTankDetails.DaysLeft}} Days remaining</span> -->\r\n                                <span class=\"left-days\">{{(forecastigTankDetails.DaysLeft == null)? \"N\\A\": forecastigTankDetails.DaysLeft + \" Days remaining\"}}</span>\r\n                            </div>\r\n                            <ngb-progressbar [showValue]=\"true\" height=\"20px\" type=\"info\" [value]=\"forecastigTankDetails.TankFill\">\r\n                            </ngb-progressbar>\r\n                            <div class=\"mt5 mb5\"><span class=\"last-reading\">Last Reading Time:\r\n                                    {{forecastigTankDetails.LastReadingTime}}</span> </div>\r\n                        </div>\r\n                        <div class=\"dr-panel-body\">\r\n                            <div class=\"row border-bottom border-top mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Last Reading</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.LastInventoryReading}}</div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Maxfill</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.MaxFillQuantity == null ? 0.0 : forecastigTankDetails.MaxFillQuantity}}</div>\r\n                            </div>\r\n                            <!--<div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Current inventory</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.EstimatedCurrentInventory}}</div>\r\n                            </div>-->\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Ullage</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.UllageSinceLastReading}}</div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Previous day sale</div>\r\n                                <div class=\"col-5 small-value\">\r\n                                    <div *ngIf=\"forecastigTankDetails.PrevSale.startsWith('NA*')\">\r\n                                        Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!forecastigTankDetails.PrevSale.startsWith('NA*')\">\r\n                                        {{forecastigTankDetails.PrevSale}}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Trailing 7 days average</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.AvgSale}}</div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Sales a week ago </div>\r\n                                <div class=\"col-5 small-value\">\r\n                                    <div *ngIf=\"forecastigTankDetails.WeekAgoSale.startsWith('NA*')\">\r\n                                        Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!forecastigTankDetails.WeekAgoSale.startsWith('NA*')\">\r\n                                        {{forecastigTankDetails.WeekAgoSale}}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-8 small-label\"> Delivery since last reading</div>\r\n                                <div class=\"col-4 small-value\">{{forecastigTankDetails.DeliverySinceLastReading}}</div>\r\n                            </div> -->\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Status</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.Status }}</div>\r\n                            </div>\r\n                            <div class=\"row  mlr-5\">\r\n                                <div class=\"col-12 small-label\">  \r\n                                    <span>Site Instructions </span>\r\n                                    <a data-toggle=\"collapse\" class=\"collapsed_btn\" href=\"#collapseSiteInstructions-{{i}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseSiteInstructions\">\r\n                                        <i class=\"fas fa-chevron-down\"></i>\r\n                                        <i class=\"fas fa-chevron-up\"></i>\r\n                                   </a>\r\n                                </div>\r\n                                <div class=\"col-12 small-value p-0\">\r\n                                    <div class=\"collapse\" id=\"collapseSiteInstructions-{{i}}\">\r\n                                        <textarea class=\"col-12\" appCopy readonly>{{forecastigTankDetails.SiteInstructions}}</textarea>   \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"IstankLoading && ForecastingTankDetails.length==0\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"card pa10 loading-wrapper\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-5 location-chart-panel\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <app-forcasting-tank-chart [JobId]=\"SelectedLocationId\" [SiteId]=\"SelectedSiteId\" [TankId]=\"SelectedTankIds\"\r\n                [StorageId]=\"SelectedStorageId\"></app-forcasting-tank-chart>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Inventory Information</h4>\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-sm\" datatable [dtOptions]=\"dtInventoryOptions\" [dtTrigger]=\"dtInventoryTrigger\">\r\n                    <thead>\r\n                        <tr class=\"font-bold\">\r\n                            <td data-key=\"TankName\">Tank Name</td>\r\n                            <td data-key=\"InventoryLevel\">Inventory Level</td>\r\n                            <td data-key=\"Ullage\">Ullage</td>\r\n                            <td data-key=\"PrevInventory\">Prev Inventory Reading Time</td>\r\n                            <td data-key=\"SafetyStock\">Safety Stock</td>\r\n                            <td data-key=\"RunOutLevel\">Run Out Level</td>\r\n                            <td data-key=\"PhysicalStop\">Physical Pump Stop</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngIf=\"IsInventoryLoading\" class='loading-wrapper bg-white'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </tr>\r\n                        <tr *ngFor=\"let row of ForecastingTankInventoryDetails\">\r\n                            <td>{{row.TankName}}</td>\r\n                            <td>{{row.InventoryLevel}}% ({{row.InventoryLevelQty}})</td>\r\n                            <td>{{row.Ullage}}</td>\r\n                            <td>{{row.PrevInventoryReading}}</td>\r\n                            <td>{{row.SafetyStockQty}} ({{row.SafetyStock}}%)</td>\r\n                            <td>{{row.RunOutLevelQty}} ({{row.RunOutLevel}}%)</td>\r\n                            <td>{{row.PhysicalPumpStopQty}} ({{row.PhysicalPumpStop}}%)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Estimated Usage Information</h4>\r\n            <div class=\"row mb5\">\r\n                <div class=\"col-sm-3\">\r\n                    <!--<label>Start Date:<span class=\"color-maroon\">*</span></label>-->\r\n                    <input type=\"text\" placeholder=\"Start Date\" class=\"form-control datepicker\" [(ngModel)]=\"StartDate\"\r\n                        [minDate]=\"MinInputDate\" [maxDate]=\"MaxInputDate\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                        (onDateChange)=\"setFromDate($event);\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n                    <!--<label>End Date:<span class=\"color-maroon\">*</span></label>-->\r\n                    <input type=\"text\" placeholder=\"End Date\" class=\"form-control datepicker\" [(ngModel)]=\"EndDate\"\r\n                        [minDate]=\"MinInputDate\" [maxDate]=\"MaxInputDate\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                        (onDateChange)=\"setToDate($event);\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <label></label>\r\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Search\" (click)=\"searchEstimatedData();\" />\r\n                </div>\r\n            </div>\r\n            <table class=\"table table-sm\" datatable [dtOptions]=\"dtEstimatedOptions\" [dtTrigger]=\"dtEstimatedTrigger\">\r\n                <thead>\r\n                    <tr class=\"font-bold\">\r\n                        <td>Tank Name</td>\r\n                        <td>Usage Period</td>\r\n                        <td>Average Business day Usage</td>\r\n                        <td>Total Expected Usage</td>\r\n                        <td>Maximum Business day Usage</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngIf=\"IsEstimatedLoading\" class='loading-wrapper bg-white'>\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </tr>\r\n                    <tr *ngFor=\"let row of ForecastingTankEstimatedUsageDetails\">\r\n                        <td>{{row.TankName}}</td>\r\n                        <td>{{row.UsagePeriod}}</td>\r\n                        <td>{{row.AverageBusinessDayUsage}}</td>\r\n                        <td>{{row.TotalExceptedUsage}}</td>\r\n                        <td>{{row.MaximumBusinessdayUsage}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Delivery Information</h4>\r\n            <table class=\"table table-sm\" datatable [dtOptions]=\"dtDeliveryOptions\" [dtTrigger]=\"dtDeliveryTrigger\">\r\n                <thead>\r\n                    <tr class=\"font-bold\">\r\n                        <td>Tank Name</td>\r\n                        <td>No. Of Deliveries</td>\r\n                        <td>Last Delivered Quantity</td>\r\n                        <td>Last Delivered Date</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngIf=\"IsDeliveryLoading\" class='loading-wrapper bg-white'>\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </tr>\r\n                    <tr *ngFor=\"let row of ForecastingTankDeliveryDetails\">\r\n                        <td>{{row.TankName}}</td>\r\n                        <td>{{row.NoOfDeliveries}}</td>\r\n                        <td>{{row.LastDeliveredQty}}</td>\r\n                        <td>{{row.LastDeliveredDate}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Existing Schedule</h4>\r\n            <table class=\"table table-sm\" datatable [dtOptions]=\"dtScheduleOptions\" [dtTrigger]=\"dtScheduleTrigger\">\r\n                <thead>\r\n                    <tr class=\"font-bold\">\r\n                        <td>Tank Name</td>\r\n                        <td>Existing Delivery Schedule</td>\r\n                        <td>Delivery Request</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngIf=\"IsScheduleLoading\" class='loading-wrapper bg-white'>\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </tr>\r\n                    <tr *ngFor=\"let row of ForecastingTankScheduleDetails\">\r\n                        <td>{{row.TankName}}</td>\r\n                        <td>{{row.ExistingDeliverySchedule}}</td>\r\n                        <td>{{row.DeliveryRequest}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [RequestFromBuyerWallyBoard]=\"RequestFromBuyerWallyBoard\"\r\n        [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>","\r\n<div class=\"tfx-chat shadow-b chat-minimized\" *ngFor=\"let chatDetails of chatCollection;let i = index\" id=\"divusers_{{i}}\">\r\n    <div class=\"chat-user\">\r\n        <span class=\"pl10 pr5 pull-left animated flash infinite pt10 mt2 fs14\" *ngIf=\"chatDetails.chatLoading\">\r\n            Initiating chat with {{chatDetails.driverInfo.FullName}}...\r\n        </span>\r\n        <img class=\"pull-left mt2 radius\" src=\"{{chatDetails.driverInfo.ProfileURL}}\" width=\"20\" height=\"20\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL!=''\">\r\n        <i class=\"fas fa-user pull-left fs16 mt4\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL==''\"></i>\r\n        <span class=\"pl10 pr5 pull-left\" *ngIf=\"chatDetails.chatLoading==false\">\r\n            {{chatDetails.driverInfo.FullName}}<i class=\"fas fa-circle color-green fs8 ml5\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===true\"></i>\r\n            <span class=\"fs10 db\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===false && chatDetails.driverInfo.lastSeenAt!='NO'\">last seen {{chatDetails.driverInfo.lastSeenAt}}</span>\r\n            <span class=\"fs10 color-orange db\" *ngIf=\"chatDetails.driverInfo.TypingIndicator===true\">{{chatDetails.driverInfo.TypingMemberName}} typing...</span>\r\n        </span>\r\n        <a class=\"mt8 pull-right  mt10 mr10\" *ngIf=\"chatDetails.chatLoading\"><i class=\"fas fa-close  mt2 fs16\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"closeChat(chatDetails.driverInfo.Email)\" title=\"Close chat\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-close\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"callOffline(chatDetails.driverInfo.PhoneNumber)\" *ngIf=\"chatDetails.driverInfo.IsPhoneNumberConfirmed===true && chatDetails.chatLoading==false\"><i class=\"fas fa-phone color-green mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"groupInfo(chatDetails.driverInfo.Email)\" title=\"Group members information\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-users mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"minimizeChat('divusers_'+i,chatDetails.driverInfo.Email,'icon_'+i)\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"far fa-window-minimize mr10\" id=\"icon_{{i}}\"></i></a>\r\n    </div>\r\n    <div class=\"chat-details driver_{{chatDetails.driverInfo.Id}}\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <div class=\"text-center pr\">\r\n            <span class=\"chat-loader pa text-center\" *ngIf=\"chatDetails.showsmallLoder===true\"></span>\r\n            <a (click)=\"sbLoadMoreMessage(chatDetails.driverInfo.Email)\" class=\"btn btn-default btn-xs fs10\" *ngIf=\"chatDetails.loadmore===true\">Load More</a>\r\n        </div>\r\n        <div *ngFor=\"let driverChat of chatDetails.chatData\">\r\n            <div class=\"messageHeader\" *ngIf=\"driverChat.headerText!=''\">{{driverChat.headerText}}</div>\r\n            <div [ngClass]=\"(driverChat.messageType===1)?'you':'driver'\">\r\n                <span *ngIf=\"driverChat.messageType===2\" style=\"color: #ec9f5a\">{{driverChat.nickname}}<br /></span>\r\n                {{driverChat.message}}\r\n                <div class=\"text-right time\">{{driverChat.dateTime}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"message-box\" [formGroup]=\"sbSendbird\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <textarea placeholder=\"message\" formControlName=\"textMessage\" (keypress)=\"typingIndicatorEvent(chatDetails.driverInfo.Email,$event)\"></textarea>\r\n        <button (click)=\"sendMessage(chatDetails.driverInfo.Email)\"><i class=\"fas fa-play\"></i></button>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { __await } from 'tslib';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ScheduleBuilderService } from 'src/app/carrier/service/schedule-builder.service';\r\nimport { CompanyUsers } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { SendBirdCommonComponent } from '../common/sendbird.common.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { BackgroupChatIntialize, ChatMessage, Carriar, Driver, ChatData, GroupChannelInfo, chatResponse, MemberInfo } from '../sendbirdCommon';\r\ndeclare var userName: string;\r\ndeclare var userIntialName: string;\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var userEmail: string;\r\ndeclare const SendBird: any;\r\ndeclare function IsUserActive(): boolean;\r\n\r\n@Component({\r\n    selector: 'app-buyer-sendbird',\r\n    templateUrl: './buyer-sendbird.component.html',\r\n    styleUrls: ['./buyer-sendbird.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BuyerSendbirdComponent implements OnInit {\r\n    public sb: any = Object();\r\n    public ChannelHandler: any;\r\n    public appKey: string = '';\r\n    public sbSendbird: FormGroup;\r\n    public backgrounddriverDetails: BackgroupChatIntialize[];\r\n    public chatCollection: ChatMessage[] = [];\r\n    public intervalTime: any;\r\n    public static messageLoadLimit: number = 30;\r\n    constructor(private chatService: chatService, private sbService: ScheduleBuilderService,\r\n        private fb: FormBuilder, private cdr: ChangeDetectorRef) {\r\n    }\r\n    // #region ngEvent  \r\n    ngOnInit() {\r\n        this.sbSendbird = this.initSendbirdForm();\r\n        this.getAPPKey();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.intervalTime) {\r\n            clearInterval(this.intervalTime);\r\n        }\r\n        this.sb.removeChannelHandler(\"onTypingStatusUpdated\");\r\n        this.sb.removeChannelHandler(\"onMessageReceived\");\r\n        this.sb.removeChannelHandler(\"onReadReceiptUpdated\");\r\n    }\r\n    // #endregion \r\n\r\n    //intialize sendbird form.\r\n    private initSendbirdForm() {\r\n        let _dtForm = this.fb.group({\r\n            textMessage: this.fb.control(''),\r\n        });\r\n        return _dtForm;\r\n    }\r\n    // #region privateMethods\r\n    //intialize sendbird account\r\n    private IntializeSendbird(driverId, regionID: string) {\r\n        let currentChatWidgetIndex = this.chatCollection.findIndex(top => top.driverInfo.Id === driverId);\r\n        if (currentChatWidgetIndex === -1) {\r\n            let chatUserDetails = [];\r\n            this.chatService.getDriverDetails(driverId).subscribe(t => {\r\n                if (t.StatusCode === 0) {\r\n                    //create the object of the class\r\n                    let chatMessage: ChatMessage = new ChatMessage();\r\n                    //chatMessage.regionId = regionID;\r\n                    chatMessage.showsmallLoder = false;\r\n                    chatMessage.loadmore = false;\r\n                    let carrierObj: Carriar = new Carriar();\r\n                    let driverObj: Driver = new Driver();\r\n                    let chatData: ChatData[] = [];\r\n                    let groupChannelInfo: GroupChannelInfo = new GroupChannelInfo();\r\n\r\n                    //assign value of driver object\r\n                    driverObj = t as Driver;\r\n                    driverObj.firstMessage = true;\r\n\r\n                    //define the loading..\r\n                    chatMessage.chatLoading = true;\r\n                    chatMessage.divId = \"divusers_\" + this.chatCollection.length;\r\n                    //get companyUserDetails\r\n                     {\r\n                        let companyUserDetails: CompanyUsers[] = [];\r\n                        let companyUser: CompanyUsers = new CompanyUsers();\r\n                        companyUser.RegionDescription = userName;\r\n                        companyUser.RegionID = userName;\r\n                        companyUser.SendBirdRegionID = userName;\r\n                        companyUser.EmailAddress = userEmail;\r\n                        companyUser.FullName = userName;\r\n                        companyUserDetails.push(companyUser);\r\n                            if (companyUserDetails.length > 0) {\r\n\r\n                                //set regionName and regionDescription and regionID.\r\n                                chatMessage.regionName = companyUserDetails[0].RegionName;\r\n                                chatMessage.regionDescription = companyUserDetails[0].RegionDescription;\r\n                                chatMessage.regionId = companyUserDetails[0].SendBirdRegionID;\r\n                                chatMessage.fullregionId = regionID;\r\n                                //set groupName // OR Retrive groupName\r\n                                groupChannelInfo.groupChannelName = \"DR_\" + driverId + \"_COM_\" + currentUserCompanyId + \"_RE_\" + companyUser;\r\n\r\n                                //set companyCurrent User Information\r\n                                chatMessage.companyUserInfo = companyUserDetails;\r\n                                if (companyUserDetails.length > 0) {\r\n                                    companyUserDetails.forEach(xitem => {\r\n                                        chatUserDetails.push(xitem.EmailAddress);\r\n                                    });\r\n                                    chatUserDetails.push(driverObj.Email);\r\n                                    chatMessage.driverInfo = driverObj;\r\n\r\n                                    carrierObj.userName = userName;\r\n                                    carrierObj.userIntialName = userIntialName;\r\n                                    chatMessage.currentLoginUserInfo = carrierObj;\r\n                                    chatMessage.chatData = chatData;\r\n                                    chatMessage.groupChannelInfo = groupChannelInfo;\r\n                                }\r\n                            }\r\n                            else {\r\n                                chatMessage.companyUserInfo = [];\r\n                            }\r\n                            if (chatMessage.companyUserInfo.length > 0) {\r\n                                this.chatCollection.push(chatMessage);\r\n                                this.cdr.detectChanges();\r\n                                let chatObj = this.chatCollection.find(top => top.driverInfo.Email === driverObj.Email);\r\n                                if (chatObj != null) {\r\n                                    this.createAccount(chatMessage.companyUserInfo, chatMessage.currentLoginUserInfo, chatMessage.driverInfo, chatObj);\r\n                                }\r\n                            } else {\r\n                                Declarations.msgwarning(\"There is no dispatcher found in the region\", undefined, undefined);\r\n                            }\r\n                        }\r\n\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Issue in getDriverDetails api..\", undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //create account in sendbird and connect to groupchat\r\n    private async createAccount(companyUserInfo: CompanyUsers[], currentUserLoginInfo: Carriar, driverObj: Driver, chatMessage: ChatMessage) {\r\n        try {\r\n            if (companyUserInfo.length > 0 && driverObj != null && currentUserLoginInfo != null) {\r\n                //create driver account\r\n                let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                let driverObjResult = await this.connectDriver(driverObj) as chatResponse;\r\n                if (driverObjResult.statusCode === 100 && carrierObjResult.statusCode === 100) {\r\n                    //check channel exists or not..\r\n                    let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                    if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                        //find the diffrence member between group member and company users\r\n                        //so that we can add additional member to current channel\r\n                        let sbjoinResponse = await this.sbJoinGroupChannel(chatMessage, groupChannel.object1, companyUserInfo, driverObj) as chatResponse;\r\n                        if (sbjoinResponse.statusCode === 200) {\r\n                        }\r\n                        else {\r\n                        }\r\n                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                        if (carrierObjResult.statusCode === 100) {\r\n                            this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                            let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                            if (messageHistory.statusCode === 100) {\r\n                                this.updateChatData(chatMessage, messageHistory);\r\n                                let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                if (memberInfos.length > 0)\r\n                                    chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                if (groupChannel.statusCode === 100) {\r\n                                    chatMessage.chatLoading = false;\r\n                                    let dvObj = $(\"#\" + chatMessage.divId);\r\n                                    if (dvObj != undefined) {\r\n                                        if (dvObj.hasClass('chat-minimized')) {\r\n                                            dvObj.removeClass('chat-minimized');\r\n                                            if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    this.cdr.detectChanges();\r\n                                    setTimeout(function () { BuyerSendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        //create company users account - dispatcher,carrier => Role\r\n                        let companyUserCount = companyUserInfo.length;\r\n                        if (companyUserInfo.length > 0) {\r\n                            for (const companyUser of companyUserInfo) {\r\n                                let companyUserResponse = await this.connectCompanyUser(companyUser) as chatResponse;\r\n                                if (companyUserResponse.statusCode === 100) {\r\n                                    companyUser.ProfileURL = companyUserResponse.object.profileUrl;\r\n                                    companyUserCount = companyUserCount - 1;\r\n                                    if (companyUserCount == 0) {\r\n                                        //connect current user account - sendbird\r\n                                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                                        if (carrierObjResult.statusCode === 100) {\r\n                                            //create the groupChannel of All Company Users(Carrier,Dispatcher) \r\n                                            //1 to M => 1 Drivers to Many Dispacther.Carrier User\r\n                                            //create group channel or retrive channel if created.\r\n                                            let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                                            if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                                                this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                                                let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                if (messageHistory.statusCode === 100) {\r\n                                                    this.updateChatData(chatMessage, messageHistory);\r\n                                                    let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                    if (memberInfos.length > 0)\r\n                                                        chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                }\r\n                                                else {\r\n                                                }\r\n                                            }\r\n                                            else if (groupChannel.statusCode === 200) { //create the group channel\r\n                                                let createdChannel = await this.sbCreateGroupChannel(groupChannel.object, groupChannel.object1, chatMessage.regionName, chatMessage.regionDescription) as chatResponse;\r\n                                                if (createdChannel.statusCode === 100) {\r\n                                                    this.updateGroupChannelInfo(chatMessage, createdChannel);\r\n                                                    let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                    if (messageHistory.statusCode === 100) {\r\n                                                        this.updateChatData(chatMessage, messageHistory);\r\n                                                        let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                        if (memberInfos.length > 0)\r\n                                                            chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            if (groupChannel.statusCode === 100 || groupChannel.statusCode === 200) {\r\n                                                chatMessage.chatLoading = false;\r\n                                                let dvObj = $(\"#\" + chatMessage.divId);\r\n                                                if (dvObj != undefined) {\r\n                                                    if (dvObj.hasClass('chat-minimized')) {\r\n                                                        dvObj.removeClass('chat-minimized');\r\n                                                        if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                            dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                this.cdr.detectChanges();\r\n                                                setTimeout(function () { BuyerSendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (chatMessage.companyUserInfo.length == 0) {\r\n                    chatMessage.chatLoading = false;\r\n                    var chatObjIndex = this.chatCollection.findIndex(top => top.driverInfo.Email === driverObj.Email);\r\n                    if (chatObjIndex != -1) {\r\n                        this.chatCollection.splice(chatObjIndex, 1);\r\n                        this.cdr.detectChanges();\r\n                    }\r\n                    Declarations.msgwarning(\"This driver is not assigned to any region\", undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    public async connectCompanyUser(companyUserObj: CompanyUsers) {\r\n        //create company user if not created..\r\n        let companyObjResult = await this.sbConnect(companyUserObj.EmailAddress) as chatResponse;\r\n        if (companyObjResult.statusCode === 100) {\r\n            let companyObjData = companyObjResult.object;\r\n            companyUserObj.ProfileURL = companyObjData.profileUrl;\r\n            if (companyUserObj.FullName != companyObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(companyUserObj.FullName, companyObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return companyObjResult;\r\n    }\r\n\r\n    private async connectDispatcher(carrierObj: Carriar) {\r\n        //create carrier user if not created..\r\n        let carrierObjResult = await this.sbConnect(carrierObj.userName) as chatResponse;\r\n        if (carrierObjResult.statusCode === 100) {\r\n            let carrierObjData = carrierObjResult.object;\r\n            carrierObj.ProfileURL = carrierObjData.profileUrl;\r\n            if (carrierObj.userIntialName != carrierObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(carrierObj.userIntialName, carrierObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return carrierObjResult;\r\n    }\r\n    private async connectDriver(driverObj: Driver) {\r\n        //create driver user if not created..\r\n        let driverdetails = [];\r\n        driverdetails.push(driverObj.Email);\r\n        let userAvailable = await this.sbGetUserDetails(driverdetails) as chatResponse;\r\n        let driverObjResult = new chatResponse();\r\n        if (userAvailable.statusCode == 100) {\r\n            if (userAvailable.object.length === 0) {\r\n                driverObjResult = await this.sbConnect(driverObj.Email) as chatResponse;\r\n                if (driverObjResult.statusCode === 100) {\r\n                    let driverObjData = driverObjResult.object;\r\n                    driverObj.ProfileURL = driverObjData.profileUrl;\r\n                    let connectionStatusResponse = await this.checkUserOnline(driverObj.Email) as chatResponse;\r\n                    if (connectionStatusResponse.statusCode === 100) {\r\n                        driverObj.ConnectionStatus = connectionStatusResponse.object.toUpperCase() === 'ONLINE' ? true : false;\r\n                    }\r\n                    if (driverObj.ConnectionStatus === false) {\r\n                        if (driverObjData.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(driverObjData.lastSeenAt);\r\n                            let hourDate = BuyerSendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = BuyerSendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            driverObj.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    if (driverObj.FullName != driverObjData.nickname) {\r\n                        let updateDriverInfo = await this.sbUpdateCurrentUserInfo(driverObj.FullName, driverObjData.profileUrl) as any;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                driverObjResult.statusCode = 100;\r\n                driverObjResult.object = userAvailable.object[0];\r\n                driverObj.ConnectionStatus = driverObjResult.object.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                driverObj.ProfileURL = driverObjResult.object.profileUrl;\r\n                if (driverObj.ConnectionStatus === false) {\r\n                    if (driverObjResult.object.lastSeenAt > 0) {\r\n                        let lastSeen = new Date(driverObjResult.object.lastSeenAt);\r\n                        let hourDate = BuyerSendbirdComponent.formatAMPM(lastSeen);\r\n                        let monthName = BuyerSendbirdComponent.getMonthName(lastSeen);\r\n                        let day = lastSeen.getDate();\r\n                        driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                        driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                    }\r\n                    else {\r\n                        driverObj.lastSeenAt = 'NO';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return driverObjResult;\r\n    }\r\n    private static scrollBottomDiv(driverObj: Driver) {\r\n        if ($(\".driver_\" + driverObj.Id)[0]) {\r\n            $(\".driver_\" + driverObj.Id).scrollTop($(\".driver_\" + driverObj.Id)[0].scrollHeight);\r\n        }\r\n    }\r\n    private updateGroupChannelInfo(chatMessage: ChatMessage, groupChannel: chatResponse) {\r\n        chatMessage.groupChannelInfo.groupChannelURL = groupChannel.object;\r\n        if (chatMessage.groupChannelInfo.groupChannelObj == null) {\r\n            chatMessage.groupChannelInfo.groupChannelObj = groupChannel.object1;\r\n        }\r\n    }\r\n    private updateChatData(chatMessage: ChatMessage, chatReponse: chatResponse) {\r\n        chatMessage.chatData = chatReponse.object as ChatData[];\r\n        if (chatMessage.chatData.length >= BuyerSendbirdComponent.messageLoadLimit) {\r\n            chatMessage.loadmore = true;\r\n        }\r\n    }\r\n    private sbGetUserDetails = userIds => {\r\n        let response = new chatResponse();\r\n        return new Promise((resolve) => {\r\n            // Retrieving certain users using the UserID filter\r\n            let applicationUserListQueryByIds = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQueryByIds.userIdsFilter = userIds;\r\n            applicationUserListQueryByIds.next((user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbConnect = userId => {\r\n        return new Promise((resolve, reject) => {\r\n            let response: chatResponse = new chatResponse();\r\n            this.sb.connect(userId, (user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 200;\r\n                    response.message = 'SendBird Login Failed.';\r\n                    reject(response);\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbUpdateCurrentUserInfo = (nickname, profileUrl) => {\r\n        return new Promise((resolve, reject) => {\r\n            this.sb.updateCurrentUserInfo(nickname, profileUrl, (user, error) => {\r\n                error ? reject('Unable to update user profile') : resolve(user);\r\n            });\r\n        });\r\n    };\r\n    private sbIntializeGroupChannel = (driverId, companyUserDetails: CompanyUsers[], groupChannelInfo: GroupChannelInfo) => {\r\n        return new Promise((resolve) => {\r\n            let userDetails = [];\r\n            //push company user to array\r\n            companyUserDetails.forEach(comItem => {\r\n                userDetails.push(comItem.EmailAddress);\r\n            });\r\n            //push driver details to array\r\n            userDetails.push(driverId);\r\n\r\n            let response: chatResponse = new chatResponse();\r\n            let filteredQuery = this.sb.GroupChannel.createMyGroupChannelListQuery();\r\n            filteredQuery.channelNameContainsFilter = groupChannelInfo.groupChannelName;\r\n            filteredQuery.includeEmpty = true;\r\n            filteredQuery.limit = 15;\r\n            filteredQuery.next(function (groupChannels, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(chatResponse);\r\n                }\r\n                else {\r\n                    if (groupChannels.length > 0) {\r\n                        //return the group channel\r\n                        response.object = groupChannels[0].url;\r\n                        response.object1 = groupChannels[0];\r\n                        response.statusCode = 100;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        //create the group channel\r\n                        response.statusCode = 200;\r\n                        response.object = userDetails;\r\n                        response.object1 = groupChannelInfo.groupChannelName;\r\n                        resolve(response);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbCreateGroupChannel = (userIds, groupChannelName, regionName, regionDecription) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let groupChannelparams = new this.sb.GroupChannelParams();\r\n            groupChannelparams.isPublic = true;\r\n            groupChannelparams.isEphemeral = false;\r\n            groupChannelparams.isDistinct = false;\r\n            groupChannelparams.addUserIds(userIds);\r\n            groupChannelparams.name = groupChannelName;\r\n            groupChannelparams.data = regionDecription;\r\n            groupChannelparams.customType = regionName;\r\n            this.sb.GroupChannel.createChannel(groupChannelparams, (groupChannel, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = groupChannel.url;\r\n                    response.object1 = groupChannel;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbLoadChatHistroy = (chatting_groupChannel, carrierObj: Carriar, chatObj: ChatMessage) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let messageListQuery = chatting_groupChannel.createPreviousMessageListQuery();\r\n            messageListQuery.limit = BuyerSendbirdComponent.messageLoadLimit;\r\n            messageListQuery.reverse = false;\r\n            // Retrieving  messages.\r\n            messageListQuery.load(function (messages, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let chatData: ChatData[] = [];\r\n                    messages.forEach(function (value) {\r\n                        let date = new Date(value.createdAt);\r\n                        let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                        let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                        let day = date.getDate();\r\n                        let year = date.getFullYear();\r\n                        if (value._sender.nickname.trim().length === 0) {\r\n                            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                value._sender.nickname = chatObj.driverInfo.FullName;\r\n                            }\r\n                            else {\r\n                                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                if (dispatcherDetails != null) {\r\n                                    value._sender.nickname = dispatcherDetails.FullName;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (value._sender.userId === carrierObj.userName) {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 1;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                chatItem.nickname = value._sender.nickname;\r\n                            }\r\n\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                        else {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 2;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                    chatItem.nickname = chatObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    chatItem.nickname = value._sender.nickname;\r\n                                }\r\n                            }\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                    });\r\n                    response.statusCode = 100;\r\n                    response.object = chatData;\r\n                    resolve(response);\r\n                }\r\n            });\r\n\r\n        });\r\n    };\r\n    private sbChannelMemberDetails = (chatting_groupChannel, driverObj: Driver, companyUserInfo: CompanyUsers[]) => {\r\n        let memberName = \"\";\r\n        let memberInfos: MemberInfo[] = [];\r\n        return new Promise((resolve) => {\r\n            chatting_groupChannel.refresh(function (response, error) {\r\n                if (response) {\r\n                    let memberdetails = response.members;\r\n                    memberdetails.forEach(xItem => {\r\n\r\n                        if (driverObj && companyUserInfo) {\r\n                            if (driverObj.Email === xItem.userId) {\r\n                                memberName = driverObj.FullName;\r\n                            }\r\n                            else {\r\n                                if (companyUserInfo) {\r\n                                    let compInfo = companyUserInfo.findIndex(top => top.EmailAddress === xItem.userId);\r\n                                    if (compInfo != -1) {\r\n                                        memberName = companyUserInfo[compInfo].FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        let response = new MemberInfo();\r\n                        response.memberId = xItem.memberId;\r\n                        response.profileUrl = xItem.profileUrl;\r\n                        response.nickname = xItem.nickname === \"\" ? memberName : xItem.nickname;\r\n                        response.userId = xItem.userId;\r\n                        response.connectionStatus = xItem.connectionStatus.toUpperCase();\r\n                        if (xItem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xItem.lastSeenAt);\r\n                            response.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            response.lastSeenAt = '-';\r\n                        }\r\n                        memberInfos.push(response);\r\n                    });\r\n                    resolve(memberInfos);\r\n                }\r\n                if (error) {\r\n                    resolve(memberInfos);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n    private sbJoinGroupChannel = (chatMessage: ChatMessage, groupChannel: any, companyUserDetails: CompanyUsers[], driverinfo: Driver) => {\r\n        return new Promise(async (resolve) => {\r\n            let response = new chatResponse();\r\n            try {\r\n\r\n\r\n                let joinmemberdetails = '';\r\n                let leavememberdetails = '';\r\n                let currentGroupMemberDetails = [];\r\n                let currentCompanyMemberDetails = [];\r\n                currentCompanyMemberDetails.push(driverinfo.Email);\r\n                groupChannel.members.forEach(xItem => {\r\n                    currentGroupMemberDetails.push(xItem.userId);\r\n                });\r\n                companyUserDetails.forEach(xItem => {\r\n                    currentCompanyMemberDetails.push(xItem.EmailAddress);\r\n                });\r\n                let diffMembers = this.arr_diff(currentCompanyMemberDetails, currentGroupMemberDetails);\r\n                let totalMember = diffMembers.length;\r\n                if (diffMembers.length > 0) {\r\n                    for (const dmember of diffMembers) {\r\n                        let companyUsers = companyUserDetails.find(top => top.EmailAddress === dmember);\r\n                        let userExists = currentGroupMemberDetails.find(top => top === dmember);\r\n                        if (companyUsers != null && userExists == null) {\r\n                            let connectUsers = await this.connectCompanyUser(companyUsers) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                if (groupChannel.isPublic) {\r\n                                    groupChannel.join(function (response, error) {\r\n                                        if (error) {\r\n                                            console.log(\"groupChannel-join-error\", error);\r\n                                        }\r\n                                        joinmemberdetails = joinmemberdetails + \",\" + companyUsers.EmailAddress;\r\n                                        totalMember = totalMember - 1;\r\n                                        if (totalMember === 0) {\r\n                                            response.object = joinmemberdetails;\r\n                                            response.object1 = leavememberdetails;\r\n                                            response.statusCode = 100;\r\n                                            groupChannel.refresh(function (response, error) {\r\n                                                if (response) {\r\n                                                    chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                                }\r\n                                                if (error) {\r\n                                                    this.co\r\n                                                    console.log(\"groupChannel-refresh-error\", error);\r\n                                                }\r\n                                            });\r\n                                            resolve(response);\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        else if (companyUsers == null && userExists != null) {\r\n                            let connectUsers = await this.sbConnect(dmember) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                groupChannel.leave(function (response, error) {\r\n                                    if (error) {\r\n                                        console.log(\"groupChannel-leave-error\", error);\r\n                                    }\r\n                                    leavememberdetails = leavememberdetails + \",\" + dmember;\r\n                                    totalMember = totalMember - 1;\r\n                                    if (totalMember === 0) {\r\n                                        if (response == null) {\r\n                                            response = new chatResponse();\r\n                                        }\r\n                                        response.object1 = leavememberdetails;\r\n                                        response.object = joinmemberdetails;\r\n                                        response.statusCode = 100;\r\n                                        groupChannel.refresh(function (response, error) {\r\n                                            if (response) {\r\n                                                chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                            }\r\n                                            if (error) {\r\n                                                console.log(\"groupChannel-refresh-error\", error);\r\n                                            }\r\n                                        });\r\n                                        resolve(response);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            totalMember = totalMember - 1;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    response.statusCode = 200;\r\n                    resolve(response);\r\n                }\r\n            } catch (e) {\r\n                response.statusCode = 404;\r\n                response.object = e;\r\n                resolve(response);\r\n            }\r\n        });\r\n    };\r\n    private static formatAMPM(date: any) {\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        let strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    private static getMonthName(date: any) {\r\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        return monthNames[date.getMonth()];\r\n    }\r\n    private getAPPKey() {\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n        });\r\n    }\r\n    private IntializeChannelHandler() {\r\n        this.ChannelHandler = new this.sb.ChannelHandler();\r\n        this.ChannelHandler.onTypingStatusUpdated = this.onTypingStatusUpdated;\r\n        this.ChannelHandler.onMessageReceived = this.onMessageReceived;\r\n        this.ChannelHandler.onReadReceiptUpdated = this.onReadReceiptUpdated;\r\n        this.sb.addChannelHandler(\"onTypingStatusUpdated\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onMessageReceived\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onReadReceiptUpdated\", this.ChannelHandler);\r\n    }\r\n    public callOffline(phoneNumber: any) {\r\n        Declarations.msginfo(\"Driver contact details : \" + phoneNumber, undefined, undefined);\r\n    }\r\n    public closeChat(email: string) {\r\n        let index = this.chatCollection.findIndex(top => top.driverInfo.Email === email);\r\n        if (index > -1) {\r\n            let drItem = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n            if (drItem != null) {\r\n                if (this.backgrounddriverDetails == undefined) {\r\n                    this.backgrounddriverDetails = [];\r\n                }\r\n                let bkindex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === drItem.driverInfo.Id);\r\n                if (bkindex === -1) {\r\n                    let backobj = new BackgroupChatIntialize();\r\n                    backobj.regionId = drItem.fullregionId;\r\n                    backobj.driverInfo = drItem.driverInfo;\r\n                    this.backgrounddriverDetails.push(backobj);\r\n\r\n                }\r\n            }\r\n            this.chatCollection.splice(index, 1);\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    public minimizeChat(divId: string, email: string, iconId: string) {\r\n        let dvObj = $(\"#\" + divId);\r\n        let iconObj = $(\"#\" + iconId);\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            chatObj.divId = divId;\r\n        }\r\n        if (dvObj != undefined && iconObj != undefined) {\r\n            if (dvObj.hasClass('chat-minimized')) {\r\n                dvObj.removeClass('chat-minimized');\r\n                dvObj.removeClass('chat-active');\r\n                if (chatObj != null) {\r\n                    BuyerSendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                }\r\n                if (iconObj.hasClass('fa-window-maximize')) {\r\n                    iconObj.addClass('fa-window-minimize');\r\n                    iconObj.removeClass('fa-window-maximize');\r\n                }\r\n            }\r\n            else {\r\n                dvObj.addClass('chat-minimized');\r\n                if (iconObj.hasClass('fa-window-minimize')) {\r\n                    iconObj.removeClass('fa-window-minimize');\r\n                    iconObj.addClass('fa-window-maximize');\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    async sendMessage(email: string) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            let textMessage = this.sbSendbird.get('textMessage').value;\r\n            if (chatChannel != null && textMessage != '') {\r\n                const sendMessage = new this.sb.UserMessageParams();\r\n                sendMessage.message = textMessage;\r\n                sendMessage.mentionType = 'channel';                       // Either 'users' or 'channel'\r\n                sendMessage.metaArrayKeys = ['linkTo', 'itemType'];\r\n                sendMessage.customType = 'GROUPCHAT';\r\n                let response = await this.sbSendMessage(chatChannel, sendMessage, chatObj) as chatResponse;\r\n                if (response.statusCode === 100) {\r\n                    chatObj.chatData.push(response.object);\r\n                    this.cdr.detectChanges();\r\n                    chatChannel.endTyping();\r\n                    BuyerSendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                    await this.sendPushNotification(chatObj, textMessage, email);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Error in send message-sendbird.\" + response.object, undefined, undefined);\r\n                }\r\n                this.sbSendbird.get('textMessage').setValue('');\r\n            }\r\n\r\n        }\r\n    }\r\n    public sbSendMessage(chatChannel: any, sendMessage: any, chatObj: ChatMessage) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            chatChannel.sendUserMessage(sendMessage, function (message, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let date = new Date(message.createdAt);\r\n                    let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                    let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    let chatMessageObj = BuyerSendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                    response.statusCode = 100;\r\n                    response.object = chatMessageObj;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    typingIndicatorEvent(email: string, event: any) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            chatChannel.startTyping();\r\n        }\r\n        let keyCode = (event.keyCode ? event.keyCode : event.which);\r\n        if (keyCode == '13') {\r\n            this.sendMessage(email);\r\n        }\r\n    }\r\n    public async sendPushNotification(chatObj: ChatMessage, textMessage: string, email: string) {\r\n        if (chatObj.driverInfo.firstMessage === false && chatObj.driverInfo.ConnectionStatus === false) {\r\n            let userIds = [email];\r\n            let userDetails = await this.sbGetUserDetails(userIds) as chatResponse;\r\n            if (userDetails.statusCode === 100) {\r\n                let users = userDetails.object;\r\n                users.forEach(xitem => {\r\n                    if (xitem.connectionStatus.toUpperCase() != 'ONLINE') {\r\n                        //send push notification to driver.\r\n                        this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                            let statusMessage = t as any;\r\n                            if (statusMessage.StatusCode === 0) {\r\n                                Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                            }\r\n                            else {\r\n                                Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (chatObj.driverInfo.firstMessage) {\r\n            //send push notification to driver.\r\n            this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                let statusMessage = t as any;\r\n                if (statusMessage.StatusCode === 0) {\r\n                    Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n\r\n            chatObj.driverInfo.firstMessage = false;\r\n        }\r\n    }\r\n    public static loadsendMessage(chatData: ChatData[], currentUserInfo: Carriar, value: any, hourDate: any, monthName: any, day: any, year: any, chatObj: ChatMessage) {\r\n        let chatItem = new ChatData();\r\n        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n        if (value._sender.nickname.trim().length === 0) {\r\n            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                value._sender.nickname = chatObj.driverInfo.FullName;\r\n            }\r\n            else {\r\n                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                if (dispatcherDetails != null) {\r\n                    value._sender.nickname = dispatcherDetails.FullName;\r\n                }\r\n            }\r\n        }\r\n        if (value._sender.userId === currentUserInfo.userName) {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 1;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        else {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 2;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        return chatItem;\r\n    }\r\n    public checkUserOnline = (userId) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let applicationUserListQuery = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQuery.userIdsFilter = [userId];\r\n            applicationUserListQuery.next(function (users, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"ONLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"ONLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"OFFLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"OFFLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"NON_AVAILABLE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"NON_AVAILABLE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    }\r\n\r\n    public sbLoadMoreMessage = async (userId) => {\r\n        let groupChannelObj = this.chatCollection.find(top => top.driverInfo.Email === userId);\r\n        if (groupChannelObj) {\r\n            groupChannelObj.showsmallLoder = true;\r\n            let carrierObj = groupChannelObj.currentLoginUserInfo;\r\n            let groupChannel = groupChannelObj.groupChannelInfo.groupChannelObj;\r\n            let messageID = groupChannelObj.chatData[0].messageId;\r\n            let userIds: any = [];\r\n            groupChannelObj.groupChannelInfo.memberInfo.forEach(comItem => {\r\n                userIds.push(comItem.userId);\r\n            });\r\n            groupChannelObj.chatData.forEach(comItem => {\r\n                comItem.headerText = '';\r\n            });\r\n            let response = await this.sbGetPreviousMessage(groupChannel, messageID, groupChannelObj, carrierObj, userIds) as chatResponse;\r\n            if (response.statusCode === 100) {\r\n                let chatData = response.object as ChatData[];\r\n                let finalData = chatData.concat(groupChannelObj.chatData);\r\n                finalData.forEach(xItem => {\r\n                    let date = new Date(xItem.createdAt);\r\n                    let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                    let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    if (finalData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                        xItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                    }\r\n                    else {\r\n                        xItem.headerText = '';\r\n                    }\r\n                });\r\n                groupChannelObj.chatData = finalData;\r\n                groupChannelObj.showsmallLoder = false;\r\n            }\r\n        }\r\n    };\r\n    public async sbGetPreviousMessage(groupChannel: any, messageID: any, groupChannelObj: ChatMessage, carrierObj: Carriar, userIds: []) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            response.statusCode = 100;\r\n            groupChannel.getPreviousMessagesByID(messageID, true, BuyerSendbirdComponent.messageLoadLimit, false, 'MESG', '', userIds, false, false,\r\n                function (messages, error) {\r\n                    if (error) {\r\n                        response.statusCode = 400;\r\n                        response.object = error;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        if (messages.length > 0) {\r\n                            if (messages.length >= BuyerSendbirdComponent.messageLoadLimit) {\r\n                                groupChannelObj.loadmore = true;\r\n                            }\r\n                            else {\r\n                                groupChannelObj.loadmore = false;\r\n                            }\r\n                        }\r\n                        let chatData: ChatData[] = [];\r\n                        messages.forEach(function (value) {\r\n                            let date = new Date(value.createdAt);\r\n                            let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                            let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                            let day = date.getDate();\r\n                            if (value._sender.nickname.trim().length === 0) {\r\n                                if (groupChannelObj.driverInfo.Email === value._sender.userId) {\r\n                                    value._sender.nickname = groupChannelObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    var dispatcherDetails = groupChannelObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                    if (dispatcherDetails != null) {\r\n                                        value._sender.nickname = dispatcherDetails.FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (value._sender.userId === carrierObj.userName) {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 1;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                            else {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 2;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                        });\r\n                        response.object = chatData;\r\n                        resolve(response);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    public async sbCheckUserOnline() {\r\n        let userDetailsArray = [];\r\n        this.chatCollection.forEach(xitem => {\r\n            userDetailsArray.push(xitem.driverInfo.Email);\r\n        });\r\n        let userDetails = await this.sbGetUserDetails(userDetailsArray) as chatResponse;\r\n        if (userDetails.statusCode == 100) {\r\n            let users = userDetails.object;\r\n            users.forEach(xitem => {\r\n                let userCollection = this.chatCollection.find(x => x.driverInfo.Email === xitem.userId);\r\n                if (userCollection) {\r\n                    userCollection.driverInfo.ConnectionStatus = xitem.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                    if (userCollection.driverInfo.ConnectionStatus === false) {\r\n                        if (xitem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xitem.lastSeenAt);\r\n                            let hourDate = BuyerSendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = BuyerSendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            userCollection.driverInfo.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            userCollection.driverInfo.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            userCollection.driverInfo.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    this.cdr.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region sendbirdEventHandler\r\n    public onTypingStatusUpdated = (groupChannel) => {\r\n        this.chatCollection.forEach(xitem => {\r\n            xitem.driverInfo.TypingIndicator = false;\r\n        });\r\n        if (groupChannel) {\r\n            let objectFound = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === groupChannel.name);\r\n            if (objectFound) {\r\n                let members = groupChannel.getTypingMembers();\r\n                members.forEach(function (value) {\r\n                    if (objectFound.driverInfo.Email === value.userId) {\r\n                        if (value.connectionStatus.toUpperCase() === 'ONLINE') {\r\n                            objectFound.driverInfo.ConnectionStatus = true;\r\n                        }\r\n                    }\r\n                    if (objectFound.currentLoginUserInfo.userName === value.userId) {\r\n                        objectFound.driverInfo.TypingIndicator = false;\r\n                    }\r\n                    else {\r\n                        objectFound.driverInfo.TypingIndicator = true;\r\n                    }\r\n                    objectFound.driverInfo.State = value.state.toUpperCase();\r\n                    objectFound.driverInfo.TypingMemberName = value.nickname;\r\n                });\r\n            }\r\n        }\r\n        this.cdr.detectChanges();\r\n    };\r\n    public onMessageReceived = (channel, message) => {\r\n        if (channel != null && message != null) {\r\n            let chatObj = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === channel.name);\r\n            if (chatObj) {\r\n                let date = new Date(message.createdAt);\r\n                let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                let day = date.getDate();\r\n                let year = date.getFullYear();\r\n                let chatMesage = BuyerSendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                let messageFound = chatObj.chatData.findIndex(top => top.messageId === chatMesage.messageId);\r\n                if (messageFound == -1) {\r\n                    chatObj.chatData.push(chatMesage);\r\n                    this.cdr.detectChanges();\r\n                    //add chat-active class\r\n                    if (chatObj.divId != '') {\r\n                        let dvObj = $(\"#\" + chatObj.divId);\r\n                        if (dvObj != undefined) {\r\n                            if (dvObj.hasClass('chat-minimized')) {\r\n                                if (!dvObj.hasClass('chat-active')) {\r\n                                    dvObj.addClass('chat-active');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //call from the background.\r\n                let channelMember = [], currentDriverDetails = [];\r\n                let groupMemberDetails = channel.members;\r\n                groupMemberDetails.forEach(item => {\r\n                    channelMember.push(item.userId);\r\n                });\r\n                this.backgrounddriverDetails.forEach(item => {\r\n                    currentDriverDetails.push(item.driverInfo.Email)\r\n                });\r\n                //Get common elements of arr1, arr2\r\n                let commonElements = this.getCommon(channelMember, currentDriverDetails);\r\n                if (commonElements.length > 0) {\r\n                    for (const commonelement of commonElements) {\r\n                        let driverDetails = this.backgrounddriverDetails.find(x => x.driverInfo.Email === commonelement);\r\n                        if (driverDetails != null) {\r\n                            //remove item from backgroup thread if exists\r\n                            this.IntializeDriverChat(driverDetails.driverInfo.Id, driverDetails.regionId);\r\n                            let index = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === driverDetails.driverInfo.Id);\r\n                            if (index != -1) {\r\n                                this.backgrounddriverDetails.splice(index, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    };\r\n    public onReadReceiptUpdated = (groupChannel) => {\r\n\r\n    };\r\n    // #endregion\r\n\r\n\r\n    //call for schedulebuilder component.\r\n    public IntializeDriverChat(driverId, regionID) {\r\n        this.IntializeSendbird(driverId, regionID);\r\n\r\n    }\r\n    //intialize background chat\r\n    public IntializeChatDefault(driverDetails: any[], regionId) {\r\n        this.backgrounddriverDetails = [];\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n            if (driverDetails.length > 0) {\r\n                this.chatService.getDriversDetails(driverDetails).subscribe(t => {\r\n                    if (t.StatusCode === 302) {\r\n                        let driverObj = t.Data as Driver[];\r\n                        driverObj.forEach(xitem => {\r\n                            let findIndex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Email === xitem.Email);\r\n                            if (findIndex === -1) {\r\n                                let chatdefault = new BackgroupChatIntialize();\r\n                                chatdefault.driverInfo = xitem;\r\n                                chatdefault.regionId = regionId;\r\n                                this.backgrounddriverDetails.push(chatdefault);\r\n                            }\r\n                            this.sb.connect(xitem.Email, function (user, error) {\r\n                                if (error) {\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    console.log(\"IntializeChatDefault\", user);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        })\r\n    }\r\n    public async groupInfo(email: string) {\r\n        let records = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (records != null) {\r\n            this.chatService.loaderElement(true);\r\n            let groupChannel = records.groupChannelInfo.groupChannelObj;\r\n            let driverObj = records.driverInfo;\r\n            let companyUserInfo = records.companyUserInfo;\r\n            let memberInfos = await this.sbChannelMemberDetails(groupChannel, driverObj, companyUserInfo) as MemberInfo[];\r\n            if (memberInfos.length > 0) {\r\n                groupChannel.memberInfo = memberInfos;\r\n                this.chatService.sendMemberInfo(memberInfos);\r\n            }\r\n            else {\r\n                this.chatService.loaderElement(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    // #region CommonFunctions\r\n    private getCommon(arr1, arr2) {\r\n        let common = [];                   // Array to contain common elements\r\n        for (let i = 0; i < arr1.length; ++i) {\r\n            for (let j = 0; j < arr2.length; ++j) {\r\n                if (arr1[i] == arr2[j]) {       // If element is in both the arrays\r\n                    common.push(arr1[i]);        // Push to common array\r\n                }\r\n            }\r\n        }\r\n        return common;                     // Return the common elements\r\n    }\r\n    private arr_diff(a1, a2) {\r\n\r\n        let a = [], diff = [];\r\n        for (let i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n        }\r\n        for (let i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) {\r\n                delete a[a2[i]];\r\n            } else {\r\n                a[a2[i]] = true;\r\n            }\r\n        }\r\n        for (let k in a) {\r\n            diff.push(k);\r\n        }\r\n\r\n        return diff;\r\n    }\r\n\r\n    // #endregion\r\n}   \r\n","export class SendBirdCommonComponent {\r\n    \r\n    public static getLastSeen(startDateTime: Date) {\r\n        let results;\r\n        try {\r\n            let toTime = new Date().getTime();\r\n            let fromTime = startDateTime.getTime();\r\n            let datediff = toTime - fromTime;\r\n            let seconds = Math.floor(datediff / 1000);\r\n            let minutes = Math.floor(seconds / 60);\r\n            let hours = Math.floor(minutes / 60);\r\n            let days = Math.floor(hours / 24);\r\n            let weeks = Math.floor(days / 7);\r\n            let months = Math.floor(weeks / 4);\r\n            let years = Math.floor(days / 365);\r\n            let getSeconds = Math.abs(seconds);\r\n            switch (true) {\r\n                case (getSeconds == 0):\r\n                    results = \"just now\";\r\n                    break;\r\n                case (getSeconds == 1):\r\n                    results = this.getTense(seconds, 'second', true);\r\n                    break;\r\n                case (getSeconds > 1 && getSeconds < 60):\r\n                    results = this.getTense(seconds, 'second', false);\r\n                    break;\r\n                case (getSeconds >= 60 && getSeconds < 120):\r\n                    results = this.getTense(minutes, 'mintue', true);\r\n                    break;\r\n                case (getSeconds >= 120 && getSeconds < 3600):\r\n                    results = this.getTense(minutes, 'mintue', false);\r\n                    break;\r\n                case (getSeconds >= 3600 && getSeconds < 7200):\r\n                    results = this.getTense(hours, 'hour', true);\r\n                    break;\r\n                case (getSeconds >= 7200 && getSeconds < 86400):\r\n                    results = this.getTense(hours, 'hour', false);\r\n                    break;\r\n                case (getSeconds >= 86400 && getSeconds < 172800):\r\n                    results = this.getTense(days, 'day', true);\r\n                    break;\r\n                case (getSeconds >= 172800 && getSeconds < 604800):\r\n                    results = this.getTense(days, 'day', false);\r\n                    break;\r\n                case (getSeconds >= 604800 && getSeconds < 1209600):\r\n                    results = this.getTense(weeks, 'week', true);\r\n                    break;\r\n                case (getSeconds >= 1209600 && getSeconds < 2419200):\r\n                    results = this.getTense(weeks, 'week', false);\r\n                    break;\r\n                case (getSeconds >= 2419200 && getSeconds < 4838400):\r\n                    results = this.getTense(months, 'month', true);\r\n                    break;\r\n                case (getSeconds >= 4838400 && getSeconds < 31536000):\r\n                    results = this.getTense(months, 'month', false);\r\n                    break;\r\n                case (getSeconds >= 31536000 && getSeconds < 63072000):\r\n                    results = this.getTense(years, 'year', true);\r\n                    break;\r\n                case (getSeconds >= 63072000):\r\n                    results = this.getTense(years, 'year', false);\r\n                    break;\r\n            }\r\n        }\r\n        catch (err) {\r\n            results = \"\";\r\n            console.log(\"getLastSeen\", err);\r\n        }\r\n        return results;\r\n    }\r\n    private static getTense(time, tense, singular) {\r\n        let getTime = Math.abs(time);\r\n        if (singular == true) {\r\n            if (time > 0) {\r\n                if (tense == 'hour' || tense == 'year')\r\n                    return 'An ' + tense + ' ago';\r\n                else\r\n                    return 'A ' + tense + ' ago';\r\n            } else {\r\n                if (tense == 'hour' || tense == 'year')\r\n                    return 'After an ' + tense;\r\n                else\r\n                    return 'After a ' + tense;\r\n            }\r\n\r\n        } else {\r\n            if (time > 0)\r\n                return getTime + ' ' + tense + 's ago';\r\n            else\r\n                return 'After ' + getTime + ' ' + tense + 's';\r\n\r\n        }\r\n    }\r\n\r\n}","\r\n<div class=\"tfx-chat shadow-b chat-minimized\" *ngFor=\"let chatDetails of chatCollection;let i = index\" id=\"divusers_{{i}}\">\r\n    <div class=\"chat-user\">\r\n        <span class=\"pl10 pr5 pull-left animated flash infinite pt10 mt2 fs14\" *ngIf=\"chatDetails.chatLoading\">\r\n            Initiating chat with {{chatDetails.driverInfo.FullName}}...\r\n        </span>\r\n        <img class=\"pull-left mt2 radius\" src=\"{{chatDetails.driverInfo.ProfileURL}}\" width=\"20\" height=\"20\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL!=''\">\r\n        <i class=\"fas fa-user pull-left fs16 mt4\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL==''\"></i>\r\n        <span class=\"pl10 pr5 pull-left\" *ngIf=\"chatDetails.chatLoading==false\">\r\n            {{chatDetails.driverInfo.FullName}}<i class=\"fas fa-circle color-green fs8 ml5\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===true\"></i>\r\n            <span class=\"fs10 db\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===false && chatDetails.driverInfo.lastSeenAt!='NO'\">last seen {{chatDetails.driverInfo.lastSeenAt}}</span>\r\n            <span class=\"fs10 color-orange db\" *ngIf=\"chatDetails.driverInfo.TypingIndicator===true\">{{chatDetails.driverInfo.TypingMemberName}} typing...</span>\r\n        </span>\r\n        <a class=\"mt8 pull-right  mt10 mr10\" *ngIf=\"chatDetails.chatLoading\"><i class=\"fas fa-close  mt2 fs16\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"closeChat(chatDetails.driverInfo.Email)\" title=\"Close chat\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-close\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"callOffline(chatDetails.driverInfo.PhoneNumber)\" *ngIf=\"chatDetails.driverInfo.IsPhoneNumberConfirmed===true && chatDetails.chatLoading==false\"><i class=\"fas fa-phone color-green mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"groupInfo(chatDetails.driverInfo.Email)\" title=\"Group members information\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-users mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"minimizeChat('divusers_'+i,chatDetails.driverInfo.Email,'icon_'+i)\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"far fa-window-minimize mr10\" id=\"icon_{{i}}\"></i></a>\r\n    </div>\r\n    <div class=\"chat-details driver_{{chatDetails.driverInfo.Id}}\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <div class=\"text-center pr\">\r\n            <span class=\"chat-loader pa text-center\" *ngIf=\"chatDetails.showsmallLoder===true\"></span>\r\n            <a (click)=\"sbLoadMoreMessage(chatDetails.driverInfo.Email)\" class=\"btn btn-default btn-xs fs10\" *ngIf=\"chatDetails.loadmore===true\">Load More</a>\r\n        </div>\r\n        <div *ngFor=\"let driverChat of chatDetails.chatData\">\r\n            <div class=\"messageHeader\" *ngIf=\"driverChat.headerText!=''\">{{driverChat.headerText}}</div>\r\n            <div [ngClass]=\"(driverChat.messageType===1)?'you':'driver'\">\r\n                <span *ngIf=\"driverChat.messageType===2\" style=\"color: #ec9f5a\">{{driverChat.nickname}}<br /></span>\r\n                {{driverChat.message}}\r\n                <div class=\"text-right time\">{{driverChat.dateTime}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"message-box\" [formGroup]=\"sbSendbird\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <textarea placeholder=\"message\" formControlName=\"textMessage\" (keypress)=\"typingIndicatorEvent(chatDetails.driverInfo.Email,$event)\"></textarea>\r\n        <button (click)=\"sendMessage(chatDetails.driverInfo.Email)\"><i class=\"fas fa-play\"></i></button>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { __await } from 'tslib';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ScheduleBuilderService } from 'src/app/carrier/service/schedule-builder.service';\r\nimport { CompanyUsers } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { SendBirdCommonComponent } from './common/sendbird.common.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { BackgroupChatIntialize, ChatMessage, Carriar, Driver, ChatData, GroupChannelInfo, chatResponse, MemberInfo } from './sendbirdCommon';\r\ndeclare var userName: string;\r\ndeclare var userIntialName: string;\r\ndeclare var currentUserCompanyId: number;\r\ndeclare const SendBird: any;\r\ndeclare function IsUserActive(): boolean;\r\n\r\n@Component({\r\n    selector: 'app-sendbird',\r\n    templateUrl: './sendbird.component.html',\r\n    styleUrls: ['./sendbird.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SendbirdComponent implements OnInit {\r\n    public sb: any = Object();\r\n    public ChannelHandler: any;\r\n    public appKey: string = '';\r\n    public sbSendbird: FormGroup;\r\n    public backgrounddriverDetails: BackgroupChatIntialize[];\r\n    public chatCollection: ChatMessage[] = [];\r\n    public intervalTime: any;\r\n    public static messageLoadLimit: number = 30;\r\n    constructor(private chatService: chatService, private sbService: ScheduleBuilderService,\r\n        private fb: FormBuilder, private cdr: ChangeDetectorRef) {\r\n    }\r\n    // #region ngEvent  \r\n    ngOnInit() {\r\n        this.sbSendbird = this.initSendbirdForm();\r\n        this.getAPPKey();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.intervalTime) {\r\n            clearInterval(this.intervalTime);\r\n        }\r\n        this.sb.removeChannelHandler(\"onTypingStatusUpdated\");\r\n        this.sb.removeChannelHandler(\"onMessageReceived\");\r\n        this.sb.removeChannelHandler(\"onReadReceiptUpdated\");\r\n    }\r\n    // #endregion \r\n\r\n    //intialize sendbird form.\r\n    private initSendbirdForm() {\r\n        let _dtForm = this.fb.group({\r\n            textMessage: this.fb.control(''),\r\n        });\r\n        return _dtForm;\r\n    }\r\n    // #region privateMethods\r\n    //intialize sendbird account\r\n    private IntializeSendbird(driverId, regionID: string) {\r\n        let currentChatWidgetIndex = this.chatCollection.findIndex(top => top.driverInfo.Id === driverId);\r\n        if (currentChatWidgetIndex === -1) {\r\n            let chatUserDetails = [];\r\n            this.chatService.getDriverDetails(driverId).subscribe(t => {\r\n                if (t.StatusCode === 0) {\r\n                    //create the object of the class\r\n                    let chatMessage: ChatMessage = new ChatMessage();\r\n                    chatMessage.regionId = regionID;\r\n                    chatMessage.showsmallLoder = false;\r\n                    chatMessage.loadmore = false;\r\n                    let carrierObj: Carriar = new Carriar();\r\n                    let driverObj: Driver = new Driver();\r\n                    let chatData: ChatData[] = [];\r\n                    let groupChannelInfo: GroupChannelInfo = new GroupChannelInfo();\r\n\r\n                    //assign value of driver object\r\n                    driverObj = t as Driver;\r\n                    driverObj.firstMessage = true;\r\n\r\n                    //define the loading..\r\n                    chatMessage.chatLoading = true;\r\n                    chatMessage.divId = \"divusers_\" + this.chatCollection.length;\r\n                    //get companyUserDetails\r\n                    this.sbService.getRegionDispacther(regionID, driverId)\r\n                        .subscribe(data => {\r\n                            let companyUserDetails = data as CompanyUsers[];\r\n                            if (companyUserDetails.length > 0) {\r\n\r\n                                //set regionName and regionDescription and regionID.\r\n                                chatMessage.regionName = companyUserDetails[0].RegionName;\r\n                                chatMessage.regionDescription = companyUserDetails[0].RegionDescription;\r\n                                chatMessage.regionId = companyUserDetails[0].SendBirdRegionID;\r\n                                chatMessage.fullregionId = regionID;\r\n                                //set groupName // OR Retrive groupName\r\n                                groupChannelInfo.groupChannelName = \"DR_\" + driverId + \"_COM_\" + currentUserCompanyId + \"_RE_\" + chatMessage.regionId.toUpperCase();\r\n\r\n                                //set companyCurrent User Information\r\n                                chatMessage.companyUserInfo = companyUserDetails;\r\n                                if (companyUserDetails.length > 0) {\r\n                                    companyUserDetails.forEach(xitem => {\r\n                                        chatUserDetails.push(xitem.EmailAddress);\r\n                                    });\r\n                                    chatUserDetails.push(driverObj.Email);\r\n                                    chatMessage.driverInfo = driverObj;\r\n\r\n                                    carrierObj.userName = userName;\r\n                                    carrierObj.userIntialName = userIntialName;\r\n                                    chatMessage.currentLoginUserInfo = carrierObj;\r\n                                    chatMessage.chatData = chatData;\r\n                                    chatMessage.groupChannelInfo = groupChannelInfo;\r\n                                }\r\n                            }\r\n                            else {\r\n                                chatMessage.companyUserInfo = [];\r\n                            }\r\n                            if (chatMessage.companyUserInfo.length > 0) {\r\n                                this.chatCollection.push(chatMessage);\r\n                                this.cdr.detectChanges();\r\n                                let chatObj = this.chatCollection.find(top => top.driverInfo.Email === driverObj.Email);\r\n                                if (chatObj != null) {\r\n                                    this.createAccount(chatMessage.companyUserInfo, chatMessage.currentLoginUserInfo, chatMessage.driverInfo, chatObj);\r\n                                }\r\n                            } else {\r\n                                Declarations.msgwarning(\"There is no dispatcher found in the region\", undefined, undefined);\r\n                            }\r\n                        });\r\n\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Issue in getDriverDetails api..\", undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //create account in sendbird and connect to groupchat\r\n    private async createAccount(companyUserInfo: CompanyUsers[], currentUserLoginInfo: Carriar, driverObj: Driver, chatMessage: ChatMessage) {\r\n        try {\r\n            if (companyUserInfo.length > 0 && driverObj != null && currentUserLoginInfo != null) {\r\n                //create driver account\r\n                let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                let driverObjResult = await this.connectDriver(driverObj) as chatResponse;\r\n                if (driverObjResult.statusCode === 100 && carrierObjResult.statusCode === 100) {\r\n                    //check channel exists or not..\r\n                    let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                    if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                        //find the diffrence member between group member and company users\r\n                        //so that we can add additional member to current channel\r\n                        let sbjoinResponse = await this.sbJoinGroupChannel(chatMessage, groupChannel.object1, companyUserInfo, driverObj) as chatResponse;\r\n                        if (sbjoinResponse.statusCode === 200) {\r\n                        }\r\n                        else {\r\n                        }\r\n                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                        if (carrierObjResult.statusCode === 100) {\r\n                            this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                            let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                            if (messageHistory.statusCode === 100) {\r\n                                this.updateChatData(chatMessage, messageHistory);\r\n                                let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                if (memberInfos.length > 0)\r\n                                    chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                if (groupChannel.statusCode === 100) {\r\n                                    chatMessage.chatLoading = false;\r\n                                    let dvObj = $(\"#\" + chatMessage.divId);\r\n                                    if (dvObj != undefined) {\r\n                                        if (dvObj.hasClass('chat-minimized')) {\r\n                                            dvObj.removeClass('chat-minimized');\r\n                                            if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    this.cdr.detectChanges();\r\n                                    setTimeout(function () { SendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        //create company users account - dispatcher,carrier => Role\r\n                        let companyUserCount = companyUserInfo.length;\r\n                        if (companyUserInfo.length > 0) {\r\n                            for (const companyUser of companyUserInfo) {\r\n                                let companyUserResponse = await this.connectCompanyUser(companyUser) as chatResponse;\r\n                                if (companyUserResponse.statusCode === 100) {\r\n                                    companyUser.ProfileURL = companyUserResponse.object.profileUrl;\r\n                                    companyUserCount = companyUserCount - 1;\r\n                                    if (companyUserCount == 0) {\r\n                                        //connect current user account - sendbird\r\n                                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                                        if (carrierObjResult.statusCode === 100) {\r\n                                            //create the groupChannel of All Company Users(Carrier,Dispatcher) \r\n                                            //1 to M => 1 Drivers to Many Dispacther.Carrier User\r\n                                            //create group channel or retrive channel if created.\r\n                                            let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                                            if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                                                this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                                                let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                if (messageHistory.statusCode === 100) {\r\n                                                    this.updateChatData(chatMessage, messageHistory);\r\n                                                    let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                    if (memberInfos.length > 0)\r\n                                                        chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                }\r\n                                                else {\r\n                                                }\r\n                                            }\r\n                                            else if (groupChannel.statusCode === 200) { //create the group channel\r\n                                                let createdChannel = await this.sbCreateGroupChannel(groupChannel.object, groupChannel.object1, chatMessage.regionName, chatMessage.regionDescription) as chatResponse;\r\n                                                if (createdChannel.statusCode === 100) {\r\n                                                    this.updateGroupChannelInfo(chatMessage, createdChannel);\r\n                                                    let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                    if (messageHistory.statusCode === 100) {\r\n                                                        this.updateChatData(chatMessage, messageHistory);\r\n                                                        let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                        if (memberInfos.length > 0)\r\n                                                            chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            if (groupChannel.statusCode === 100 || groupChannel.statusCode === 200) {\r\n                                                chatMessage.chatLoading = false;\r\n                                                let dvObj = $(\"#\" + chatMessage.divId);\r\n                                                if (dvObj != undefined) {\r\n                                                    if (dvObj.hasClass('chat-minimized')) {\r\n                                                        dvObj.removeClass('chat-minimized');\r\n                                                        if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                            dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                this.cdr.detectChanges();\r\n                                                setTimeout(function () { SendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (chatMessage.companyUserInfo.length == 0) {\r\n                    chatMessage.chatLoading = false;\r\n                    var chatObjIndex = this.chatCollection.findIndex(top => top.driverInfo.Email === driverObj.Email);\r\n                    if (chatObjIndex != -1) {\r\n                        this.chatCollection.splice(chatObjIndex, 1);\r\n                        this.cdr.detectChanges();\r\n                    }\r\n                    Declarations.msgwarning(\"This driver is not assigned to any region\", undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    public async connectCompanyUser(companyUserObj: CompanyUsers) {\r\n        //create company user if not created..\r\n        let companyObjResult = await this.sbConnect(companyUserObj.EmailAddress) as chatResponse;\r\n        if (companyObjResult.statusCode === 100) {\r\n            let companyObjData = companyObjResult.object;\r\n            companyUserObj.ProfileURL = companyObjData.profileUrl;\r\n            if (companyUserObj.FullName != companyObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(companyUserObj.FullName, companyObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return companyObjResult;\r\n    }\r\n\r\n    private async connectDispatcher(carrierObj: Carriar) {\r\n        //create carrier user if not created..\r\n        let carrierObjResult = await this.sbConnect(carrierObj.userName) as chatResponse;\r\n        if (carrierObjResult.statusCode === 100) {\r\n            let carrierObjData = carrierObjResult.object;\r\n            carrierObj.ProfileURL = carrierObjData.profileUrl;\r\n            if (carrierObj.userIntialName != carrierObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(carrierObj.userIntialName, carrierObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return carrierObjResult;\r\n    }\r\n    private async connectDriver(driverObj: Driver) {\r\n        //create driver user if not created..\r\n        let driverdetails = [];\r\n        driverdetails.push(driverObj.Email);\r\n        let userAvailable = await this.sbGetUserDetails(driverdetails) as chatResponse;\r\n        let driverObjResult = new chatResponse();\r\n        if (userAvailable.statusCode == 100) {\r\n            if (userAvailable.object.length === 0) {\r\n                driverObjResult = await this.sbConnect(driverObj.Email) as chatResponse;\r\n                if (driverObjResult.statusCode === 100) {\r\n                    let driverObjData = driverObjResult.object;\r\n                    driverObj.ProfileURL = driverObjData.profileUrl;\r\n                    let connectionStatusResponse = await this.checkUserOnline(driverObj.Email) as chatResponse;\r\n                    if (connectionStatusResponse.statusCode === 100) {\r\n                        driverObj.ConnectionStatus = connectionStatusResponse.object.toUpperCase() === 'ONLINE' ? true : false;\r\n                    }\r\n                    if (driverObj.ConnectionStatus === false) {\r\n                        if (driverObjData.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(driverObjData.lastSeenAt);\r\n                            let hourDate = SendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = SendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            driverObj.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    if (driverObj.FullName != driverObjData.nickname) {\r\n                        let updateDriverInfo = await this.sbUpdateCurrentUserInfo(driverObj.FullName, driverObjData.profileUrl) as any;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                driverObjResult.statusCode = 100;\r\n                driverObjResult.object = userAvailable.object[0];\r\n                driverObj.ConnectionStatus = driverObjResult.object.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                driverObj.ProfileURL = driverObjResult.object.profileUrl;\r\n                if (driverObj.ConnectionStatus === false) {\r\n                    if (driverObjResult.object.lastSeenAt > 0) {\r\n                        let lastSeen = new Date(driverObjResult.object.lastSeenAt);\r\n                        let hourDate = SendbirdComponent.formatAMPM(lastSeen);\r\n                        let monthName = SendbirdComponent.getMonthName(lastSeen);\r\n                        let day = lastSeen.getDate();\r\n                        driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                        driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                    }\r\n                    else {\r\n                        driverObj.lastSeenAt = 'NO';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return driverObjResult;\r\n    }\r\n    private static scrollBottomDiv(driverObj: Driver) {\r\n        if ($(\".driver_\" + driverObj.Id)[0]) {\r\n            $(\".driver_\" + driverObj.Id).scrollTop($(\".driver_\" + driverObj.Id)[0].scrollHeight);\r\n        }\r\n    }\r\n    private updateGroupChannelInfo(chatMessage: ChatMessage, groupChannel: chatResponse) {\r\n        chatMessage.groupChannelInfo.groupChannelURL = groupChannel.object;\r\n        if (chatMessage.groupChannelInfo.groupChannelObj == null) {\r\n            chatMessage.groupChannelInfo.groupChannelObj = groupChannel.object1;\r\n        }\r\n    }\r\n    private updateChatData(chatMessage: ChatMessage, chatReponse: chatResponse) {\r\n        chatMessage.chatData = chatReponse.object as ChatData[];\r\n        if (chatMessage.chatData.length >= SendbirdComponent.messageLoadLimit) {\r\n            chatMessage.loadmore = true;\r\n        }\r\n    }\r\n    private sbGetUserDetails = userIds => {\r\n        let response = new chatResponse();\r\n        return new Promise((resolve) => {\r\n            // Retrieving certain users using the UserID filter\r\n            let applicationUserListQueryByIds = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQueryByIds.userIdsFilter = userIds;\r\n            applicationUserListQueryByIds.next((user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbConnect = userId => {\r\n        return new Promise((resolve, reject) => {\r\n            let response: chatResponse = new chatResponse();\r\n            this.sb.connect(userId, (user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 200;\r\n                    response.message = 'SendBird Login Failed.';\r\n                    reject(response);\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbUpdateCurrentUserInfo = (nickname, profileUrl) => {\r\n        return new Promise((resolve, reject) => {\r\n            this.sb.updateCurrentUserInfo(nickname, profileUrl, (user, error) => {\r\n                error ? reject('Unable to update user profile') : resolve(user);\r\n            });\r\n        });\r\n    };\r\n    private sbIntializeGroupChannel = (driverId, companyUserDetails: CompanyUsers[], groupChannelInfo: GroupChannelInfo) => {\r\n        return new Promise((resolve) => {\r\n            let userDetails = [];\r\n            //push company user to array\r\n            companyUserDetails.forEach(comItem => {\r\n                userDetails.push(comItem.EmailAddress);\r\n            });\r\n            //push driver details to array\r\n            userDetails.push(driverId);\r\n\r\n            let response: chatResponse = new chatResponse();\r\n            let filteredQuery = this.sb.GroupChannel.createMyGroupChannelListQuery();\r\n            filteredQuery.channelNameContainsFilter = groupChannelInfo.groupChannelName;\r\n            filteredQuery.includeEmpty = true;\r\n            filteredQuery.limit = 15;\r\n            filteredQuery.next(function (groupChannels, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(chatResponse);\r\n                }\r\n                else {\r\n                    if (groupChannels.length > 0) {\r\n                        //return the group channel\r\n                        response.object = groupChannels[0].url;\r\n                        response.object1 = groupChannels[0];\r\n                        response.statusCode = 100;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        //create the group channel\r\n                        response.statusCode = 200;\r\n                        response.object = userDetails;\r\n                        response.object1 = groupChannelInfo.groupChannelName;\r\n                        resolve(response);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbCreateGroupChannel = (userIds, groupChannelName, regionName, regionDecription) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let groupChannelparams = new this.sb.GroupChannelParams();\r\n            groupChannelparams.isPublic = true;\r\n            groupChannelparams.isEphemeral = false;\r\n            groupChannelparams.isDistinct = false;\r\n            groupChannelparams.addUserIds(userIds);\r\n            groupChannelparams.name = groupChannelName;\r\n            groupChannelparams.data = regionDecription;\r\n            groupChannelparams.customType = regionName;\r\n            this.sb.GroupChannel.createChannel(groupChannelparams, (groupChannel, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = groupChannel.url;\r\n                    response.object1 = groupChannel;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbLoadChatHistroy = (chatting_groupChannel, carrierObj: Carriar, chatObj: ChatMessage) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let messageListQuery = chatting_groupChannel.createPreviousMessageListQuery();\r\n            messageListQuery.limit = SendbirdComponent.messageLoadLimit;\r\n            messageListQuery.reverse = false;\r\n            // Retrieving  messages.\r\n            messageListQuery.load(function (messages, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let chatData: ChatData[] = [];\r\n                    messages.forEach(function (value) {\r\n                        let date = new Date(value.createdAt);\r\n                        let hourDate = SendbirdComponent.formatAMPM(date);\r\n                        let monthName = SendbirdComponent.getMonthName(date);\r\n                        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                        let day = date.getDate();\r\n                        let year = date.getFullYear();\r\n                        if (value._sender.nickname.trim().length === 0) {\r\n                            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                value._sender.nickname = chatObj.driverInfo.FullName;\r\n                            }\r\n                            else {\r\n                                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                if (dispatcherDetails != null) {\r\n                                    value._sender.nickname = dispatcherDetails.FullName;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (value._sender.userId === carrierObj.userName) {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 1;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                chatItem.nickname = value._sender.nickname;\r\n                            }\r\n\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                        else {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 2;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                    chatItem.nickname = chatObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    chatItem.nickname = value._sender.nickname;\r\n                                }\r\n                            }\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                    });\r\n                    response.statusCode = 100;\r\n                    response.object = chatData;\r\n                    resolve(response);\r\n                }\r\n            });\r\n\r\n        });\r\n    };\r\n    private sbChannelMemberDetails = (chatting_groupChannel, driverObj: Driver, companyUserInfo: CompanyUsers[]) => {\r\n        let memberName = \"\";\r\n        let memberInfos: MemberInfo[] = [];\r\n        return new Promise((resolve) => {\r\n            chatting_groupChannel.refresh(function (response, error) {\r\n                if (response) {\r\n                    let memberdetails = response.members;\r\n                    memberdetails.forEach(xItem => {\r\n\r\n                        if (driverObj && companyUserInfo) {\r\n                            if (driverObj.Email === xItem.userId) {\r\n                                memberName = driverObj.FullName;\r\n                            }\r\n                            else {\r\n                                if (companyUserInfo) {\r\n                                    let compInfo = companyUserInfo.findIndex(top => top.EmailAddress === xItem.userId);\r\n                                    if (compInfo != -1) {\r\n                                        memberName = companyUserInfo[compInfo].FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        let response = new MemberInfo();\r\n                        response.memberId = xItem.memberId;\r\n                        response.profileUrl = xItem.profileUrl;\r\n                        response.nickname = xItem.nickname === \"\" ? memberName : xItem.nickname;\r\n                        response.userId = xItem.userId;\r\n                        response.connectionStatus = xItem.connectionStatus.toUpperCase();\r\n                        if (xItem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xItem.lastSeenAt);\r\n                            response.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            response.lastSeenAt = '-';\r\n                        }\r\n                        memberInfos.push(response);\r\n                    });\r\n                    resolve(memberInfos);\r\n                }\r\n                if (error) {\r\n                    resolve(memberInfos);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n    private sbJoinGroupChannel = (chatMessage: ChatMessage, groupChannel: any, companyUserDetails: CompanyUsers[], driverinfo: Driver) => {\r\n        return new Promise(async (resolve) => {\r\n            let response = new chatResponse();\r\n            try {\r\n\r\n\r\n                let joinmemberdetails = '';\r\n                let leavememberdetails = '';\r\n                let currentGroupMemberDetails = [];\r\n                let currentCompanyMemberDetails = [];\r\n                currentCompanyMemberDetails.push(driverinfo.Email);\r\n                groupChannel.members.forEach(xItem => {\r\n                    currentGroupMemberDetails.push(xItem.userId);\r\n                });\r\n                companyUserDetails.forEach(xItem => {\r\n                    currentCompanyMemberDetails.push(xItem.EmailAddress);\r\n                });\r\n                let diffMembers = this.arr_diff(currentCompanyMemberDetails, currentGroupMemberDetails);\r\n                let totalMember = diffMembers.length;\r\n                if (diffMembers.length > 0) {\r\n                    for (const dmember of diffMembers) {\r\n                        let companyUsers = companyUserDetails.find(top => top.EmailAddress === dmember);\r\n                        let userExists = currentGroupMemberDetails.find(top => top === dmember);\r\n                        if (companyUsers != null && userExists == null) {\r\n                            let connectUsers = await this.connectCompanyUser(companyUsers) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                if (groupChannel.isPublic) {\r\n                                    groupChannel.join(function (response, error) {\r\n                                        if (error) {\r\n                                            console.log(\"groupChannel-join-error\", error);\r\n                                        }\r\n                                        joinmemberdetails = joinmemberdetails + \",\" + companyUsers.EmailAddress;\r\n                                        totalMember = totalMember - 1;\r\n                                        if (totalMember === 0) {\r\n                                            response.object = joinmemberdetails;\r\n                                            response.object1 = leavememberdetails;\r\n                                            response.statusCode = 100;\r\n                                            groupChannel.refresh(function (response, error) {\r\n                                                if (response) {\r\n                                                    chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                                }\r\n                                                if (error) {\r\n                                                    this.co\r\n                                                    console.log(\"groupChannel-refresh-error\", error);\r\n                                                }\r\n                                            });\r\n                                            resolve(response);\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        else if (companyUsers == null && userExists != null) {\r\n                            let connectUsers = await this.sbConnect(dmember) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                groupChannel.leave(function (response, error) {\r\n                                    if (error) {\r\n                                        console.log(\"groupChannel-leave-error\", error);\r\n                                    }\r\n                                    leavememberdetails = leavememberdetails + \",\" + dmember;\r\n                                    totalMember = totalMember - 1;\r\n                                    if (totalMember === 0) {\r\n                                        if (response == null) {\r\n                                            response = new chatResponse();\r\n                                        }\r\n                                        response.object1 = leavememberdetails;\r\n                                        response.object = joinmemberdetails;\r\n                                        response.statusCode = 100;\r\n                                        groupChannel.refresh(function (response, error) {\r\n                                            if (response) {\r\n                                                chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                            }\r\n                                            if (error) {\r\n                                                console.log(\"groupChannel-refresh-error\", error);\r\n                                            }\r\n                                        });\r\n                                        resolve(response);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            totalMember = totalMember - 1;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    response.statusCode = 200;\r\n                    resolve(response);\r\n                }\r\n            } catch (e) {\r\n                response.statusCode = 404;\r\n                response.object = e;\r\n                resolve(response);\r\n            }\r\n        });\r\n    };\r\n    private static formatAMPM(date: any) {\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        let strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    private static getMonthName(date: any) {\r\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        return monthNames[date.getMonth()];\r\n    }\r\n    private getAPPKey() {\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n        });\r\n    }\r\n    private IntializeChannelHandler() {\r\n        this.ChannelHandler = new this.sb.ChannelHandler();\r\n        this.ChannelHandler.onTypingStatusUpdated = this.onTypingStatusUpdated;\r\n        this.ChannelHandler.onMessageReceived = this.onMessageReceived;\r\n        this.ChannelHandler.onReadReceiptUpdated = this.onReadReceiptUpdated;\r\n        this.sb.addChannelHandler(\"onTypingStatusUpdated\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onMessageReceived\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onReadReceiptUpdated\", this.ChannelHandler);\r\n    }\r\n    public callOffline(phoneNumber: any) {\r\n        Declarations.msginfo(\"Driver contact details : \" + phoneNumber, undefined, undefined);\r\n    }\r\n    public closeChat(email: string) {\r\n        let index = this.chatCollection.findIndex(top => top.driverInfo.Email === email);\r\n        if (index > -1) {\r\n            let drItem = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n            if (drItem != null) {\r\n                if (this.backgrounddriverDetails == undefined) {\r\n                    this.backgrounddriverDetails = [];\r\n                }\r\n                let bkindex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === drItem.driverInfo.Id);\r\n                if (bkindex === -1) {\r\n                    let backobj = new BackgroupChatIntialize();\r\n                    backobj.regionId = drItem.fullregionId;\r\n                    backobj.driverInfo = drItem.driverInfo;\r\n                    this.backgrounddriverDetails.push(backobj);\r\n\r\n                }\r\n            }\r\n            this.chatCollection.splice(index, 1);\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    public minimizeChat(divId: string, email: string, iconId: string) {\r\n        let dvObj = $(\"#\" + divId);\r\n        let iconObj = $(\"#\" + iconId);\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            chatObj.divId = divId;\r\n        }\r\n        if (dvObj != undefined && iconObj != undefined) {\r\n            if (dvObj.hasClass('chat-minimized')) {\r\n                dvObj.removeClass('chat-minimized');\r\n                dvObj.removeClass('chat-active');\r\n                if (chatObj != null) {\r\n                    SendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                }\r\n                if (iconObj.hasClass('fa-window-maximize')) {\r\n                    iconObj.addClass('fa-window-minimize');\r\n                    iconObj.removeClass('fa-window-maximize');\r\n                }\r\n            }\r\n            else {\r\n                dvObj.addClass('chat-minimized');\r\n                if (iconObj.hasClass('fa-window-minimize')) {\r\n                    iconObj.removeClass('fa-window-minimize');\r\n                    iconObj.addClass('fa-window-maximize');\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    async sendMessage(email: string) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            let textMessage = this.sbSendbird.get('textMessage').value;\r\n            if (chatChannel != null && textMessage != '') {\r\n                const sendMessage = new this.sb.UserMessageParams();\r\n                sendMessage.message = textMessage;\r\n                sendMessage.mentionType = 'channel';                       // Either 'users' or 'channel'\r\n                sendMessage.metaArrayKeys = ['linkTo', 'itemType'];\r\n                sendMessage.customType = 'GROUPCHAT';\r\n                let response = await this.sbSendMessage(chatChannel, sendMessage, chatObj) as chatResponse;\r\n                if (response.statusCode === 100) {\r\n                    chatObj.chatData.push(response.object);\r\n                    this.cdr.detectChanges();\r\n                    chatChannel.endTyping();\r\n                    SendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                    await this.sendPushNotification(chatObj, textMessage, email);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Error in send message-sendbird.\" + response.object, undefined, undefined);\r\n                }\r\n                this.sbSendbird.get('textMessage').setValue('');\r\n            }\r\n\r\n        }\r\n    }\r\n    public sbSendMessage(chatChannel: any, sendMessage: any, chatObj: ChatMessage) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            chatChannel.sendUserMessage(sendMessage, function (message, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let date = new Date(message.createdAt);\r\n                    let hourDate = SendbirdComponent.formatAMPM(date);\r\n                    let monthName = SendbirdComponent.getMonthName(date);\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    let chatMessageObj = SendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                    response.statusCode = 100;\r\n                    response.object = chatMessageObj;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    typingIndicatorEvent(email: string, event: any) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            chatChannel.startTyping();\r\n        }\r\n        let keyCode = (event.keyCode ? event.keyCode : event.which);\r\n        if (keyCode == '13') {\r\n            this.sendMessage(email);\r\n        }\r\n    }\r\n    public async sendPushNotification(chatObj: ChatMessage, textMessage: string, email: string) {\r\n        if (chatObj.driverInfo.firstMessage === false && chatObj.driverInfo.ConnectionStatus === false) {\r\n            let userIds = [email];\r\n            let userDetails = await this.sbGetUserDetails(userIds) as chatResponse;\r\n            if (userDetails.statusCode === 100) {\r\n                let users = userDetails.object;\r\n                users.forEach(xitem => {\r\n                    if (xitem.connectionStatus.toUpperCase() != 'ONLINE') {\r\n                        //send push notification to driver.\r\n                        this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                            let statusMessage = t as any;\r\n                            if (statusMessage.StatusCode === 0) {\r\n                                Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                            }\r\n                            else {\r\n                                Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (chatObj.driverInfo.firstMessage) {\r\n            //send push notification to driver.\r\n            this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                let statusMessage = t as any;\r\n                if (statusMessage.StatusCode === 0) {\r\n                    Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n\r\n            chatObj.driverInfo.firstMessage = false;\r\n        }\r\n    }\r\n    public static loadsendMessage(chatData: ChatData[], currentUserInfo: Carriar, value: any, hourDate: any, monthName: any, day: any, year: any, chatObj: ChatMessage) {\r\n        let chatItem = new ChatData();\r\n        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n        if (value._sender.nickname.trim().length === 0) {\r\n            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                value._sender.nickname = chatObj.driverInfo.FullName;\r\n            }\r\n            else {\r\n                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                if (dispatcherDetails != null) {\r\n                    value._sender.nickname = dispatcherDetails.FullName;\r\n                }\r\n            }\r\n        }\r\n        if (value._sender.userId === currentUserInfo.userName) {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 1;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        else {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 2;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        return chatItem;\r\n    }\r\n    public checkUserOnline = (userId) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let applicationUserListQuery = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQuery.userIdsFilter = [userId];\r\n            applicationUserListQuery.next(function (users, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"ONLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"ONLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"OFFLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"OFFLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"NON_AVAILABLE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"NON_AVAILABLE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    }\r\n\r\n    public sbLoadMoreMessage = async (userId) => {\r\n        let groupChannelObj = this.chatCollection.find(top => top.driverInfo.Email === userId);\r\n        if (groupChannelObj) {\r\n            groupChannelObj.showsmallLoder = true;\r\n            let carrierObj = groupChannelObj.currentLoginUserInfo;\r\n            let groupChannel = groupChannelObj.groupChannelInfo.groupChannelObj;\r\n            let messageID = groupChannelObj.chatData[0].messageId;\r\n            let userIds: any = [];\r\n            groupChannelObj.groupChannelInfo.memberInfo.forEach(comItem => {\r\n                userIds.push(comItem.userId);\r\n            });\r\n            groupChannelObj.chatData.forEach(comItem => {\r\n                comItem.headerText = '';\r\n            });\r\n            let response = await this.sbGetPreviousMessage(groupChannel, messageID, groupChannelObj, carrierObj, userIds) as chatResponse;\r\n            if (response.statusCode === 100) {\r\n                let chatData = response.object as ChatData[];\r\n                let finalData = chatData.concat(groupChannelObj.chatData);\r\n                finalData.forEach(xItem => {\r\n                    let date = new Date(xItem.createdAt);\r\n                    let monthName = SendbirdComponent.getMonthName(date);\r\n                    let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    if (finalData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                        xItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                    }\r\n                    else {\r\n                        xItem.headerText = '';\r\n                    }\r\n                });\r\n                groupChannelObj.chatData = finalData;\r\n                groupChannelObj.showsmallLoder = false;\r\n            }\r\n        }\r\n    };\r\n    public async sbGetPreviousMessage(groupChannel: any, messageID: any, groupChannelObj: ChatMessage, carrierObj: Carriar, userIds: []) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            response.statusCode = 100;\r\n            groupChannel.getPreviousMessagesByID(messageID, true, SendbirdComponent.messageLoadLimit, false, 'MESG', '', userIds, false, false,\r\n                function (messages, error) {\r\n                    if (error) {\r\n                        response.statusCode = 400;\r\n                        response.object = error;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        if (messages.length > 0) {\r\n                            if (messages.length >= SendbirdComponent.messageLoadLimit) {\r\n                                groupChannelObj.loadmore = true;\r\n                            }\r\n                            else {\r\n                                groupChannelObj.loadmore = false;\r\n                            }\r\n                        }\r\n                        let chatData: ChatData[] = [];\r\n                        messages.forEach(function (value) {\r\n                            let date = new Date(value.createdAt);\r\n                            let hourDate = SendbirdComponent.formatAMPM(date);\r\n                            let monthName = SendbirdComponent.getMonthName(date);\r\n                            let day = date.getDate();\r\n                            if (value._sender.nickname.trim().length === 0) {\r\n                                if (groupChannelObj.driverInfo.Email === value._sender.userId) {\r\n                                    value._sender.nickname = groupChannelObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    var dispatcherDetails = groupChannelObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                    if (dispatcherDetails != null) {\r\n                                        value._sender.nickname = dispatcherDetails.FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (value._sender.userId === carrierObj.userName) {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 1;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                            else {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 2;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                        });\r\n                        response.object = chatData;\r\n                        resolve(response);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    public async sbCheckUserOnline() {\r\n        let userDetailsArray = [];\r\n        this.chatCollection.forEach(xitem => {\r\n            userDetailsArray.push(xitem.driverInfo.Email);\r\n        });\r\n        let userDetails = await this.sbGetUserDetails(userDetailsArray) as chatResponse;\r\n        if (userDetails.statusCode == 100) {\r\n            let users = userDetails.object;\r\n            users.forEach(xitem => {\r\n                let userCollection = this.chatCollection.find(x => x.driverInfo.Email === xitem.userId);\r\n                if (userCollection) {\r\n                    userCollection.driverInfo.ConnectionStatus = xitem.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                    if (userCollection.driverInfo.ConnectionStatus === false) {\r\n                        if (xitem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xitem.lastSeenAt);\r\n                            let hourDate = SendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = SendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            userCollection.driverInfo.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            userCollection.driverInfo.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            userCollection.driverInfo.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    this.cdr.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region sendbirdEventHandler\r\n    public onTypingStatusUpdated = (groupChannel) => {\r\n        this.chatCollection.forEach(xitem => {\r\n            xitem.driverInfo.TypingIndicator = false;\r\n        });\r\n        if (groupChannel) {\r\n            let objectFound = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === groupChannel.name);\r\n            if (objectFound) {\r\n                let members = groupChannel.getTypingMembers();\r\n                members.forEach(function (value) {\r\n                    if (objectFound.driverInfo.Email === value.userId) {\r\n                        if (value.connectionStatus.toUpperCase() === 'ONLINE') {\r\n                            objectFound.driverInfo.ConnectionStatus = true;\r\n                        }\r\n                    }\r\n                    if (objectFound.currentLoginUserInfo.userName === value.userId) {\r\n                        objectFound.driverInfo.TypingIndicator = false;\r\n                    }\r\n                    else {\r\n                        objectFound.driverInfo.TypingIndicator = true;\r\n                    }\r\n                    objectFound.driverInfo.State = value.state.toUpperCase();\r\n                    objectFound.driverInfo.TypingMemberName = value.nickname;\r\n                });\r\n            }\r\n        }\r\n        this.cdr.detectChanges();\r\n    };\r\n    public onMessageReceived = (channel, message) => {\r\n        if (channel != null && message != null) {\r\n            let chatObj = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === channel.name);\r\n            if (chatObj) {\r\n                let date = new Date(message.createdAt);\r\n                let hourDate = SendbirdComponent.formatAMPM(date);\r\n                let monthName = SendbirdComponent.getMonthName(date);\r\n                let day = date.getDate();\r\n                let year = date.getFullYear();\r\n                let chatMesage = SendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                let messageFound = chatObj.chatData.findIndex(top => top.messageId === chatMesage.messageId);\r\n                if (messageFound == -1) {\r\n                    chatObj.chatData.push(chatMesage);\r\n                    this.cdr.detectChanges();\r\n                    //add chat-active class\r\n                    if (chatObj.divId != '') {\r\n                        let dvObj = $(\"#\" + chatObj.divId);\r\n                        if (dvObj != undefined) {\r\n                            if (dvObj.hasClass('chat-minimized')) {\r\n                                if (!dvObj.hasClass('chat-active')) {\r\n                                    dvObj.addClass('chat-active');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //call from the background.\r\n                let channelMember = [], currentDriverDetails = [];\r\n                let groupMemberDetails = channel.members;\r\n                groupMemberDetails.forEach(item => {\r\n                    channelMember.push(item.userId);\r\n                });\r\n                this.backgrounddriverDetails.forEach(item => {\r\n                    currentDriverDetails.push(item.driverInfo.Email)\r\n                });\r\n                //Get common elements of arr1, arr2\r\n                let commonElements = this.getCommon(channelMember, currentDriverDetails);\r\n                if (commonElements.length > 0) {\r\n                    for (const commonelement of commonElements) {\r\n                        let driverDetails = this.backgrounddriverDetails.find(x => x.driverInfo.Email === commonelement);\r\n                        if (driverDetails != null) {\r\n                            //remove item from backgroup thread if exists\r\n                            this.IntializeDriverChat(driverDetails.driverInfo.Id, driverDetails.regionId);\r\n                            let index = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === driverDetails.driverInfo.Id);\r\n                            if (index != -1) {\r\n                                this.backgrounddriverDetails.splice(index, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    };\r\n    public onReadReceiptUpdated = (groupChannel) => {\r\n\r\n    };\r\n    // #endregion\r\n\r\n\r\n    //call for schedulebuilder component.\r\n    public IntializeDriverChat(driverId, regionID) {\r\n        this.IntializeSendbird(driverId, regionID);\r\n\r\n    }\r\n    //intialize background chat\r\n    public IntializeChatDefault(driverDetails: any[], regionId) {\r\n        this.backgrounddriverDetails = [];\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n            if (driverDetails.length > 0) {\r\n                this.chatService.getDriversDetails(driverDetails).subscribe(t => {\r\n                    if (t.StatusCode === 302) {\r\n                        let driverObj = t.Data as Driver[];\r\n                        driverObj.forEach(xitem => {\r\n                            let findIndex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Email === xitem.Email);\r\n                            if (findIndex === -1) {\r\n                                let chatdefault = new BackgroupChatIntialize();\r\n                                chatdefault.driverInfo = xitem;\r\n                                chatdefault.regionId = regionId;\r\n                                this.backgrounddriverDetails.push(chatdefault);\r\n                            }\r\n                            this.sb.connect(xitem.Email, function (user, error) {\r\n                                if (error) {\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    console.log(\"IntializeChatDefault\", user);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        })\r\n    }\r\n    public async groupInfo(email: string) {\r\n        let records = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (records != null) {\r\n            this.chatService.loaderElement(true);\r\n            let groupChannel = records.groupChannelInfo.groupChannelObj;\r\n            let driverObj = records.driverInfo;\r\n            let companyUserInfo = records.companyUserInfo;\r\n            let memberInfos = await this.sbChannelMemberDetails(groupChannel, driverObj, companyUserInfo) as MemberInfo[];\r\n            if (memberInfos.length > 0) {\r\n                groupChannel.memberInfo = memberInfos;\r\n                this.chatService.sendMemberInfo(memberInfos);\r\n            }\r\n            else {\r\n                this.chatService.loaderElement(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    // #region CommonFunctions\r\n    private getCommon(arr1, arr2) {\r\n        let common = [];                   // Array to contain common elements\r\n        for (let i = 0; i < arr1.length; ++i) {\r\n            for (let j = 0; j < arr2.length; ++j) {\r\n                if (arr1[i] == arr2[j]) {       // If element is in both the arrays\r\n                    common.push(arr1[i]);        // Push to common array\r\n                }\r\n            }\r\n        }\r\n        return common;                     // Return the common elements\r\n    }\r\n    private arr_diff(a1, a2) {\r\n\r\n        let a = [], diff = [];\r\n        for (let i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n        }\r\n        for (let i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) {\r\n                delete a[a2[i]];\r\n            } else {\r\n                a[a2[i]] = true;\r\n            }\r\n        }\r\n        for (let k in a) {\r\n            diff.push(k);\r\n        }\r\n\r\n        return diff;\r\n    }\r\n\r\n    // #endregion\r\n}   \r\n","import { CompanyUsers } from 'src/app/carrier/models/DispatchSchedulerModels';\r\n\r\nexport class BackgroupChatIntialize {\r\n    public regionId: string;\r\n    public driverInfo: Driver;\r\n}\r\nexport class ChatMessage {\r\n    public driverInfo: Driver;\r\n    public currentLoginUserInfo: Carriar;\r\n    public groupChannelInfo: GroupChannelInfo;\r\n    public chatData: ChatData[];\r\n    public companyUserInfo: CompanyUsers[];\r\n    public showsmallLoder: boolean = false;\r\n    public loadmore: boolean = false;\r\n    public regionId: string;\r\n    public fullregionId: string;\r\n    public regionName: string;\r\n    public regionDescription: string;\r\n    public unreadCount: number = 0;\r\n    public divId: string;\r\n    public chatLoading: boolean = false;\r\n}\r\nexport class Carriar {\r\n    public userName: string;\r\n    public userIntialName: string;\r\n    public ProfileURL: string;\r\n    public ConnectionStatus: boolean;\r\n    public templastSeenAt: string;\r\n    public lastSeenAt: string;\r\n}\r\nexport class Driver {\r\n    public Id: number;\r\n    public Email: string;\r\n    public FullName: string;\r\n    public ConnectionStatus: boolean = false;\r\n    public lastSeenAt: string = '';\r\n    public templastSeenAt: string = '';\r\n    public ProfileURL: string;\r\n    public LastSeenDateTime: string;\r\n    public TypingIndicator: boolean = false;\r\n    public TypingMemberName: string = '';\r\n    public State: string;\r\n    public Role: string;\r\n    public PhoneNumber: string;\r\n    public IsPhoneNumberConfirmed: boolean;\r\n    public firstMessage: boolean = true;\r\n    public StatusCode: number = 0;       \r\n}\r\nexport class GroupChannelInfo {\r\n    public groupChannelObj: any;\r\n    public groupChannelURL: string;\r\n    public groupChannelName: string;\r\n    public groupChannelCustomType: string;\r\n    public memberInfo: MemberInfo[] = [];\r\n}\r\nexport class MemberInfo {\r\n    public memberId: string;\r\n    public nickname: string;\r\n    public userId: string;\r\n    public connectionStatus: string;\r\n    public profileUrl: string;\r\n    public lastSeenAt: string;\r\n}\r\nexport class ChatData {\r\n    public messageId: string;\r\n    public createdAt: string;\r\n    public channelURL: string;\r\n    public channelType: string;\r\n    public messageType: number;//sendMessage=1 , receiveMessage =2\r\n    public nickname: string;\r\n    public userId: string;\r\n    public message: string;\r\n    public dateTime: string;\r\n    public fulldateTime: string;\r\n    public headerText: string;\r\n}\r\n\r\nexport class chatResponse {\r\n    public statusCode: number;\r\n    public object: any;\r\n    public object1: any;\r\n    public message: any;\r\n}\r\nexport class Roles {\r\n    public Id: number;\r\n    public Name: string;\r\n}","import { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class chatService extends HandleError {\r\n\r\n    driverId: any;\r\n    driverDetails: BehaviorSubject<any>;\r\n    loader: any;\r\n    loaderDetails: BehaviorSubject<any>;\r\n    memberInfo: any;\r\n    memberInfoDetails: BehaviorSubject<any>;\r\n    defaultdriverChat: any;\r\n    defaultdriverChatDetails: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.driverDetails = new BehaviorSubject(this.driverId);\r\n        this.loaderDetails = new BehaviorSubject(this.loader);\r\n        this.memberInfoDetails = new BehaviorSubject(this.memberInfo);\r\n        this.defaultdriverChatDetails = new BehaviorSubject(this.defaultdriverChat);\r\n    }\r\n    private getDriverDetailsURL = '/Carrier/ScheduleBuilder/GetDriverDetails?driverId=';\r\n    private getSendBirdAPIKeyURL = '/Carrier/ScheduleBuilder/GetSendBirdAPPId';\r\n    private sendPushNotificationTODriver = '/Carrier/ScheduleBuilder/SendPushNotificationTODriver';\r\n    private getDriversDetailsURL = '/Carrier/ScheduleBuilder/GetDriversDetails';\r\n    \r\n    getDriverDetails(driverId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getDriverDetailsURL + driverId)\r\n            .pipe(catchError(this.handleError<any>('getDriverDetails', null)));\r\n    }\r\n\r\n    getSendBirdAPIKey(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSendBirdAPIKeyURL)\r\n            .pipe(catchError(this.handleError<any>('getSendBirdAPIKey', null)));\r\n    }\r\n    pushDriverDetails(driverId: any) {\r\n        this.driverDetails.next(driverId);\r\n    }\r\n    \r\n    loaderElement(status: any) {\r\n        this.loaderDetails.next(status);\r\n    }\r\n    sendMemberInfo(memberData: any) {\r\n        this.memberInfoDetails.next(memberData);\r\n    }\r\n    intializeChatDefault(driverObjDetails) {\r\n        this.defaultdriverChatDetails.next(driverObjDetails);\r\n    }\r\n    sendPushNotification(msgData: any, drId: any) {\r\n        var data = { message: msgData, driverId: drId };\r\n        return this.httpClient.post<any>(this.sendPushNotificationTODriver, data)\r\n            .pipe(catchError(this.handleError<any>('sendPushNotification', null)));\r\n    }\r\n    getDriversDetails(driverIds: any): Observable<any> {\r\n        var data = { driverIds: driverIds };\r\n        return this.httpClient.post<any>(this.getDriversDetailsURL, data)\r\n            .pipe(catchError(this.handleError<any>('getDriversDetails', null)));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>sidebar works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HandleError } from './errors/HandleError';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StatelistService extends HandleError {\r\n\r\n    private stateUrl = '/Settings/Profile/GetStatesEx';\r\n    private countryUrl = '/Settings/Profile/GetCountriesEx';\r\n    private countryGroupUrl = '/Settings/Profile/GetCountriesGroupEx?countryId=';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    regions: DropdownItem[];\r\n\r\n    getStates(): Observable<StateDropdownExtendedItem[]> {\r\n        return this.httpClient.get<StateDropdownExtendedItem[]>(this.stateUrl)\r\n            .pipe(catchError(this.handleError<StateDropdownExtendedItem[]>('getStates', [])));\r\n    }\r\n\r\n    getCountries(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.countryUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCountries', [])));\r\n    }\r\n\r\n    getCountryGroup(countryId:any): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.countryGroupUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCountries', [])));\r\n    }\r\n}\r\n\r\nexport class DropdownItem {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\nexport class ShiftLoadQueueDropdownItem {\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n    OrderNo: number;\r\n}\r\nexport class StateDropdownExtendedItem extends DropdownItem {\r\n    CountryGroupId?: number;\r\n    CountryId: number;\r\n}\r\n\r\nexport class DropdownCustomItem {\r\n    Id: number;\r\n    isDisabled: boolean;\r\n    Name: string;\r\n}\r\n\r\nexport class DropdownItemExt {\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport class FeeSubType {\r\n    public FeeTypeId: string;\r\n    public FeeSubTypeId: number;\r\n    public SubTypeName: string;\r\n}\r\nexport class TBDDropdownItem {\r\n    Id: number;\r\n    Name: string;\r\n    ProductTypeName: string;\r\n    ProductTypeId: number;\r\n    UoM: number;\r\n}\r\nexport class LocationDropdownItem {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n    DisplayName: string;\r\n}\r\n\r\nexport class AdditiveOrderViewModel {\r\n    Id: number;\r\n    Name: string;\r\n    BuyerCompanyId: number;\r\n    JobId: number;\r\n    UoM: string;\r\n}","import { Component, OnInit, ViewChild, Input, SimpleChanges } from '@angular/core';\r\nimport { ForecastingTankChartViewModel, TankDetailsForChartModel, TankLevelModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport * as moment from 'moment';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\ndeclare var IsBuyerCompany: boolean;\r\nimport { Chart } from 'chart.js';\r\nimport { ColorConstants } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-forcasting-tank-chart',\r\n    templateUrl: './tank-chart.component.html',\r\n    styleUrls: ['./tank-chart.component.css']\r\n})\r\nexport class ForcastingTankChartComponent implements OnInit {\r\n    @Input() JobId: any;\r\n    @Input() SiteId: any;\r\n    @Input() TankId: any;\r\n    @Input() StorageId: any;\r\n    public selectedJobId: any;\r\n    public selectedSiteId: any;\r\n    public selectedTankId: any;\r\n    public selectedStorageId: any;\r\n    public MinInputDate: Date = new Date();\r\n    public IsChartLoading: boolean = false;\r\n    public currentDate: string = '';\r\n\r\n    constructor(private dispatcherService: DispatcherService) {\r\n        // this.chartOptions = this.getChartOptions([], [], []);\r\n    }\r\n    ngOnInit() {\r\n        this.currentDate = moment(this.MinInputDate).format(\"MM-DD-YYYY HH:mm:ss\");\r\n    }\r\n    ngAfterViewInit() {\r\n        // console.log(\"chart-obj-ngAfterViewInit\", this.chart);\r\n    }\r\n    ngOnChanges(change: SimpleChanges) {\r\n        //this.IsChartLoading = true;\r\n        this.currentDate = moment(this.MinInputDate).format(\"MM-DD-YYYY HH:mm:ss\");\r\n        if (change.JobId && change.JobId.currentValue && change.JobId.currentValue != change.JobId.previousValue) {\r\n            this.selectedJobId = change.JobId.currentValue;\r\n        }\r\n        if (change.SiteId && change.SiteId.currentValue && change.SiteId.currentValue != change.SiteId.previousValue) {\r\n            this.selectedSiteId = change.SiteId.currentValue;\r\n        }\r\n        if (change.TankId && change.TankId.currentValue && change.TankId.currentValue != change.TankId.previousValue) {\r\n            this.selectedTankId = change.TankId.currentValue;\r\n        }\r\n        if (change.StorageId && change.StorageId.currentValue && change.StorageId.currentValue != change.StorageId.previousValue) {\r\n            this.selectedStorageId = change.StorageId.currentValue;\r\n        }\r\n        if (this.selectedJobId || this.selectedTankId || this.selectedStorageId) {\r\n            if (this.selectedTankId == 'NONE') {\r\n                this.selectedTankId = '';\r\n            }\r\n            if (this.selectedStorageId == 'NONE') {\r\n                this.selectedStorageId = '';\r\n            }\r\n            if (IsBuyerCompany == false) {\r\n                this.IsChartLoading = true;\r\n                this.dispatcherService.getForcastingTankChartDetails(this.selectedJobId, this.selectedTankId, this.selectedStorageId, this.currentDate).subscribe((resp: ForecastingTankChartViewModel) => {\r\n                    this.updateChartData(resp);\r\n                    this.IsChartLoading = false;\r\n                });\r\n            }\r\n            else {\r\n                this.IsChartLoading = true;\r\n                this.dispatcherService.getBuyerForcastingTankChartDetails(this.selectedJobId, this.selectedTankId, this.selectedStorageId, this.currentDate).subscribe((resp: ForecastingTankChartViewModel) => {\r\n                    this.updateChartData(resp);\r\n                    this.IsChartLoading = false;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    updateChartData(resp: ForecastingTankChartViewModel) {\r\n        if (resp != null) {\r\n            // var _xAxisTimeSpan = resp[\"XAxisTimeSpan\"];\r\n            // var _tankDetailsForChart = resp[\"TankDetailsForChart\"] as TankDetailsForChartModel[];\r\n            // var _tankLevels = resp[\"TankLevels\"] as TankLevelModel[];\r\n            // var _seriesData = _tankDetailsForChart.map(x => { return { name: x.TankName, data: x.Data }; });\r\n\r\n            let _labels = resp.XAxisTimeSpan;\r\n            let _lineChartData: ChartDataSets[] = [];\r\n\r\n            if (resp.TankDetailsForChart && resp.TankDetailsForChart.length > 0) {\r\n                resp.TankDetailsForChart.forEach((tankDetails, i) => {\r\n                    _lineChartData.push({\r\n                        data: tankDetails.Data,\r\n                        label: tankDetails.TankName,\r\n                        fill: false,\r\n                        borderColor: ColorConstants[i] || 'gray'\r\n                    })\r\n                });\r\n            }\r\n\r\n            // Line chart:\r\n            const ctx = document.getElementById('myChart') as HTMLCanvasElement;\r\n\r\n            new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: _labels,\r\n                    datasets: _lineChartData,\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'time'\r\n                        }]\r\n                    },\r\n                },\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","<div *ngIf=\"IsChartLoading\" class='loading-wrapper bg-white'>\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n\r\n<div style=\"display: block\">\r\n    <canvas id=\"myChart\" style=\"display: block;\"></canvas>\r\n</div>","\n<div class=\"row\" *ngIf=\"!noChartData\">\n    <div class=\"col-sm-6\">Last {{customDays==0?(NoOfDays):customDays}} Days   Sales Chart (Site-{{SiteId}})</div>\n    <div class=\"col-sm-6 text-right\">\n        <a class=\"btn btn-link \" (click)=\"toggleMapView()\"> <i class=\"fas mr5\" [ngClass]=\" toogleMap == true ? 'fa-eye-slash' : 'fa-eye' \" ></i> {{ toogleMap == true ? 'Hide Chart' : 'Show Chart'}}  </a>\n    </div>\n</div>\n\n<div *ngIf=\"noChartData\" class=\"alert alert-danger\">\n    No Data Found.\n</div>\n\n<div [ngClass]=\"{'hide_chart': !showChart}\">\n    <div>\n        <select  *ngIf=\"!noChartData\" (change)=\"onSelection($event.target.value)\" >\n            <option *ngFor=\"let item of dateFilterList\" [value]=\"item.Id\" [selected]=\"NoOfDays==item.Id\">{{item.Value}}</option>\n        </select>\n        <!-- <input type=\"number\" maxlength=\"2\" max=\"30\" class=\"form-control\" [(ngModel)]=\"customDays\" *ngIf=\"showCustomDateText\" />\n        <input type=\"button\" class=\"btn btn-primary\" (click)=\"getTankChartData(SiteId, customDays,JobId)\" *ngIf=\"showCustomDateText && customDays>0\" value=\"Submit\" /> -->\n    </div>\n\n    <div id=\"chart-timeline\" [ngClass]=\"{'hide-element': !toogleMap}\"></div>\n</div>\n<div *ngIf=\"(isLoadingSubject | async)\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\n\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { HttpGenericService } from '../http-generic.service';\nimport * as moment from 'moment';\ndeclare var ApexCharts;\n@Component({\n  selector: 'app-tank-chart',\n  templateUrl: './tank-chart.component.html',\n  styleUrls: ['./tank-chart.component.css']\n})\nexport class TankChartComponent implements OnInit {\n  @Input() JobId: any;\n  @Input() SiteId: any;\n  @Input() TankId: any;\n  @Input() isSupplierView:boolean;\n  NoOfDays: number = 3;\n  chart: any;\n  cData: any[] = [];\n  showChart = false;\n  // isLoading = false;\n  showCustomDateText = false;\n  customDays = 0;\n  dateFilterList: any[] = [];\n  noChartData = false;\n  public toogleMap: Boolean = true;\n  public isLoadingSubject: BehaviorSubject<any>;\n  public GetSalesDataForGraphUrl = \"/Supplier/Sales/GetSalesDataForGraph\";\n  constructor(private httpSer: HttpGenericService) {\n    this.isLoadingSubject = new BehaviorSubject(false);\n  }\n\n  ngOnInit() {\n    if(!this.isSupplierView){\n      this.GetSalesDataForGraphUrl = \"/buyer/Sales/GetSalesDataForGraph\";\n    }\n    this.loadChart();\n  }\n\n  ngAfterViewInit() {\n    if (this.chart)\n      this.chart.render();\n  }\n\n  public toggleMapView() {\n    this.toogleMap = !this.toogleMap;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.TankId && change.TankId.currentValue) {\n      this.TankId = change.TankId.currentValue;\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      if (this.SiteId && this.NoOfDays && this.JobId) {\n        this.isLoadingSubject.next(true);\n        this.rendor(this.cData);\n        this.getDateList();\n      }\n      this.noChartData = false;\n    }\n    else if (change.JobId && change.JobId.currentValue && !change.JobId.firstChange) {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      this.loadChart();\n      this.noChartData = false;\n    }\n\n  }\n\n\n  async loadChart() {\n    if (this.SiteId && this.NoOfDays && this.JobId) {\n      this.isLoadingSubject.next(true);\n      this.getTankChartData(this.SiteId, this.NoOfDays, this.JobId);\n      this.getDateList();\n    }\n  }\n  public getDateList() {\n    //return this.dateFilterList = [{ Id: 3, Value: 'Last 3 Days' }, { Id: 7, Value: 'Last 7 Days' }, { Id: 10, Value: 'Last 10 Days' }, { Id: 0, Value: 'Custom' }]\n    return this.dateFilterList = [{ Id: 3, Value: 'Last 3 Days' }, { Id: 7, Value: 'Last 7 Days' }, { Id: 10, Value: 'Last 10 Days' }]\n  }\n\n  async onSelection($event) {\n\n    if ($event == 0) {\n      this.showCustomDateText = true;\n    } else {\n      this.showCustomDateText = false;\n      this.showChart = false;\n      this.NoOfDays = $event;\n      this.chart.destroy();\n      this.noChartData = false;\n      this.getTankChartData(this.SiteId, $event, this.JobId);\n    }\n\n  }\n  async getTankChartData(siteId, noOfDays, tfxJobId) {\n    this.isLoadingSubject.next(true);\n    this.httpSer.fetchAll(`${this.GetSalesDataForGraphUrl}?jobId=${tfxJobId}&noOfDays=${noOfDays}`).subscribe(op => {\n      if (op && op.length > 0) {\n        this.cData = op;\n        this.rendor(op);\n      }\n      else {\n        this.noChartData = true;\n        this.isLoadingSubject.next(false);\n      }\n    })\n  }\n\n  async rendor(data) {\n\n\n    if (this.TankId) {\n      try {\n        let obj = this.TankId.split(\"_\");\n        let tankId = obj[0];\n        let storageId = obj[1];\n        data = data.filter(f => f.TankId == tankId && f.StorageId == storageId);\n      } catch (e) {\n        console.log(\"split issue related tankid and storage id (tank-chart component)\");\n      }\n\n    }\n\n    var mapList = [];\n    var filterkeys = [];\n    await data && data.map(m => {\n      if (!filterkeys.find(f => f && f.tankid == m.TankId && f.storageid == m.StorageId)) {\n        filterkeys.push({ tankid: m.TankId, storageid: m.StorageId });\n        //mapList.push({ name: `[Tank: ${m.TankName}]`, data: data.filter(f => f.TankId == m.TankId && f.StorageId == m.StorageId).map(re => { return [new Date(re.CreatedDate).getTime(), 74] }) });\n        mapList.push({ name: `[Tank: ${m.TankName}]`, data: data.filter(f => f.TankId == m.TankId && f.StorageId == m.StorageId).map(re => { return [moment(re.CreatedDate).valueOf(), re.Sale.toFixed(1)] }) });\n      }\n    })\n\n    var date = new Date();\n    var previousDate = date.setDate(date.getDate() - this.NoOfDays);\n    var options = {\n      series: mapList,\n      chart: {\n        type: 'line',\n        height: 350,\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: false,\n          zoomedArea: {\n            fill: {\n              color: '#90CAF9',\n              opacity: 0.4\n            },\n            stroke: {\n              color: '#0D47A1',\n              opacity: 0.4,\n              width: 1\n            }\n          }\n        },\n        toolbar: {\n          show: true,\n          offsetX: 0,\n          offsetY: 0,\n          tools: {\n            download: false,\n            selection: true,\n            zoom: true,\n            zoomin: true,\n            zoomout: true,\n            pan: true,\n            reset: true,\n            customIcons: []\n          },\n          autoSelected: 'zoom'\n        },\n      },\n      annotations: {\n        yaxis: [{\n          show: true,\n          y: 30,\n          borderColor: '#999',\n          title: {\n            text: \"Fuel (In Gallons / Litres)\",\n            style: {\n              color: '#008FFB',\n            }\n          },\n          text: 'Fuel (In Gallons / Litres)',\n          tooltip: {\n            enabled: true\n          },\n          axisTicks: {\n            show: true,\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          label: {\n            show: true,\n            text: 'Date',\n            style: {\n              color: \"#fff\",\n              background: '#00E396'\n            }\n          }\n        }],\n        xaxis: [{\n          x: new Date().getTime(),\n          borderColor: '#999',\n          yAxisIndex: 0,\n          type: \"datetime\",\n          label: {\n            show: true,\n            text: 'Gallons/Litres',\n            style: {\n              color: \"#fff\",\n              background: '#775DD0'\n            },\n            tooltip: {\n              enabled: true\n            },\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#00E396'\n            },\n          }\n        }]\n      },\n      dataLabels: {\n        enabled: false\n      },\n      markers: {\n        size: 0,\n        style: 'hollow',\n      },\n      xaxis: {\n        type: 'datetime',\n        labels: {\n          datetimeUTC: false\n        },\n        min: new Date(previousDate).getTime(),\n        tickAmount: 6,\n      },\n      tooltip: {\n        x: {\n          format: 'dd MMM yyyy hh:mm tt  '\n        }\n      },\n      stroke: {\n        show: true,\n        curve: 'smooth',\n        lineCap: 'butt',\n        colors: undefined,\n        width: 1,\n        dashArray: 0,\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.7,\n          opacityTo: 0.9,\n          stops: [0, 100]\n        }\n      },\n    };\n    this.isLoadingSubject.next(false);\n    //if (this.chart)\n    //    this.chart.resetSeries();\n    this.chart = new ApexCharts(document.querySelector(\"#chart-timeline\"), options);\n    try {\n      if (this.chart)\n        this.chart.render();\n    } catch (e) {\n      this.chart.destroy();\n      this.chart.render();\n    }\n\n\n    this.showChart = true;\n\n  }\n\n}\n\n\n\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TankChartComponent } from './tank-chart.component';\nimport { ForcastingTankChartComponent} from './forcasting/tank-chart.component'\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\n\n\n@NgModule({\n    declarations: [TankChartComponent, ForcastingTankChartComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ChartsModule,\n        // TankChartRoutingModule\n    ],\n    exports: [TankChartComponent, ForcastingTankChartComponent]\n})\nexport class TankChartModule {\n    static forRoot(): ModuleWithProviders<TankChartModule> {\n        return {\n            ngModule: TankChartModule,\n            providers: [\n\n            ]\n        };\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    googleMapApiKey:'AIzaSyCzsZAIHNcp3VO_Fb3nQjf6wy4S_pc_X3I'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}