{"version":3,"sources":["./src/app/buyer-wally-board/Models/BuyerWallyBoard.ts","./src/app/dispatcher/dispatcher-dashboard/dispatcher-dashboard.component.ts","./src/app/dispatcher/dispatcher-dashboard/dispatcher-dashboard.component.html","./src/app/dispatcher/dispatcher-dashboard/job-tank-hierarchy/job-tank-hierarchy.component.ts","./src/app/dispatcher/dispatcher-dashboard/job-tank-hierarchy/job-tank-hierarchy.component.html","./src/app/dispatcher/dispatcher-dashboard/location.component.ts","./src/app/dispatcher/dispatcher-dashboard/location.component.html","./src/app/dispatcher/dispatcher-dashboard/sales-data/grid-view.component.ts","./src/app/dispatcher/dispatcher-dashboard/sales-data/grid-view.component.html","./src/app/dispatcher/dispatcher-dashboard/sales-data/location-view.component.ts","./src/app/dispatcher/dispatcher-dashboard/sales-data/location-view.component.html","./src/app/dispatcher/dispatcher-dashboard/sales-data/sales-data.component.ts","./src/app/dispatcher/dispatcher-dashboard/sales-data/sales-data.component.html","./src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view-master.component.ts","./src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view-master.component.html","./src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view.component.ts","./src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view.component.html","./src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-grid-view.component.ts","./src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-grid-view.component.html","./src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-map-view.component.ts","./src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-map-view.component.html","./src/app/dispatcher/dispatcher-dashboard/where-is-my-driver.component.ts","./src/app/dispatcher/dispatcher-dashboard/where-is-my-driver.component.html","./src/app/dispatcher/dispatcher-routing.module.ts","./src/app/dispatcher/dispatcher.module.ts"],"names":[],"mappings":"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","file":"dispatcher-dispatcher-module-es2015.js","sourcesContent":["import { DateFilter, DeliveryGroupStatus, DeliveryReqPriority, ObjectFilter, PickupLocationType, QueueFilter, RegionFilter, TripStatus } from 'src/app/app.enum';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class LoadFilterModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Suppliers: DropdownItem[];\r\n    public Carriers: DropdownItem[];\r\n}\r\n\r\nexport class DipTestViewModel {\r\n    public SiteName: string;\r\n    public CompanyName: string;\r\n    public Id: number;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    public Level: number;\r\n    public Ullage: number;\r\n    public GrossVolume: number;\r\n    public NetVolume: number;\r\n    public WaterNetLevel: number;\r\n    public WaterGrossLevel: number;\r\n    public CaptureTime: string;\r\n    public ProductName: string;\r\n    public DataSourceTypeId: number;\r\n    public BuyerCompanyId: number;\r\n    public BuyerCompanyName: string;\r\n    public JobName: string;\r\n    public UoM: string;\r\n    public JobId: number;\r\n    public CreatedByRegionId: string;\r\n    public IsDRExists: boolean;\r\n    public ExistingDR: PartialDRDetails[] = [];\r\n    public DisplayDRDetails: boolean;\r\n    public TankCapacity: number;\r\n    public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public CurrentThreshold: number;\r\n    public FillType: number;\r\n    public ReorderPercent: number;\r\n    public OrderId: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class TankCapacityForDR {\r\n    public Priority: DeliveryReqPriority;\r\n    public MaxPercent: number;\r\n    public MinPercent: number;\r\n}\r\n\r\nexport class ModifiedTripInfo {\r\n    public ShiftIndex: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n\r\nexport class CreateDeliveryRequestViewModel {\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public RequiredQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class CustomerJobsForCarrier {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    Jobs: DropdownItem[];\r\n}\r\n\r\nexport class PartialDRDetails {\r\n    public Priority: DeliveryReqPriority;\r\n    public ScheduleStatusName: string;\r\n    public RequiredQuantity: number;\r\n    public CreatedOn: string;\r\n}\r\n\r\n\r\nexport enum TfxModule {\r\n    None,\r\n    SupplierWallyboardLocation,\r\n    SupplierWallyboardLoads,\r\n    SupplierWallyboardSales,\r\n    SupplierWallyboardSalesPriority,\r\n    SupplierWallyboardSalesTanks,\r\n    BuyerWallyboardLocation,\r\n    BuyerWallyboardLoads,\r\n    BuyerWallyboardSales,\r\n    BuyerWallyboardSalesPriority,\r\n    BuyerWallyboardSalesTanks,\r\n    BuyerWallyboardSalesLocation,\r\n    AssignedByMeDeliveryRequests,\r\n    DSBShift\r\n}\r\n\r\nexport enum WindowModeFilter {\r\n    Single = 1,\r\n    Multi = 2\r\n}\r\n\r\nexport enum UoM {\r\n    None = 0,\r\n    Gallons = 1,\r\n    Litres = 2\r\n}\r\n\r\nexport class DeliveryRequestViewModel {\r\n    constructor() {\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.PickupLocationType = 1;\r\n        this.WindowMode = 1;\r\n        this.QueueMode = 1;\r\n    }\r\n    public Id: string;\r\n    public JobId: number;\r\n    public JobAddress: string;\r\n    public JobCity: string;\r\n    public JobName: string;\r\n    public ProductType: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public SiteId: string;\r\n    public UoM: number;\r\n    public RequiredQuantity: number;\r\n    public Priority: number;\r\n    public AssignedToCompanyId: number;\r\n    public CreatedByCompanyId: number;\r\n    public SupplierCompanyId: number;\r\n    public Status: number;\r\n    public PreviousStatus: number;\r\n    public ScheduleStatus: number;\r\n    public SchedulePreviousStatus: number;\r\n    public OrderId: number;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public PickupLocationType: number;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public IsDeleted: boolean;\r\n    public DeliveryGroupId: number;\r\n    public DeliveryScheduleId: number;\r\n    public TrackableScheduleId: number;\r\n    public ParentId: string;\r\n    public CustomerCompany: string;\r\n    public WindowMode: number;\r\n    public QueueMode: number;\r\n    public TrackScheduleStatus: number;\r\n    public TrackScheduleStatusName: string;\r\n    public TrackScheduleEnrouteStatus: number;\r\n    public StatusClassId: number;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public TankMaxFill: number;\r\n    public IsNotCompatible: boolean;\r\n    public IsAutoCreatedDR: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public SourceTripId: string;\r\n    public IsCommonBadge: boolean;\r\n    public DispactherNote: string;\r\n    public PreLoadedFor: string;\r\n    public PreLoadInfo: LoadInfo;\r\n    public PostLoadedFor: string;\r\n    public PostLoadInfo: LoadInfo;\r\n    public IsDRExists: boolean;\r\n    public IsDRMissed: boolean;\r\n    public ProductSequence: number;\r\n}\r\n\r\nexport class RegionDetailModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Shifts = [];\r\n    }\r\n    public Id: string;\r\n    public Drivers: DropdownItem[]\r\n    public Trailers: TrailerViewModel[]\r\n    public Shifts: ShiftModel[]\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public StartTime: string;\r\n    public DisplayStartTime: string;\r\n    public EndTime: string;\r\n    public DisplayEndTime: string;\r\n    public CreatedOn: string;\r\n    public CreatedBy: number;\r\n    public IsDeleted: boolean;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ScheduleBuilderModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n        this.Trailers = [];\r\n    }\r\n    public Id: string;\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ObjectFilter: ObjectFilter;\r\n    public RegionFilter: RegionFilter;\r\n    public DateFilter: DateFilter;\r\n    public Shifts: ScheduleShiftModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public Status: DeliveryGroupStatus;\r\n    public DeletedTripId: string;\r\n    public DeletedGroupId: number;\r\n    public IsLoadReset: boolean;\r\n    public WindowMode: WindowModeFilter;\r\n    public ToggleRequestMode: QueueFilter;\r\n}\r\n\r\nexport class DSBSaveModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public PreloadedDRs: any[] = [];\r\n    public PostloadedDRs: any[] = [];\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class DRDragDropModel extends ScheduleBuilderModel {\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public SourceTrip: TripModel;\r\n    public DestinationTrip: TripModel;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class SbDriverViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Shifts = [];\r\n    }\r\n    public Shifts: ScheduleShiftModel[];\r\n}\r\n\r\nexport class SbTrailerViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trailers = [];\r\n    }\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewModel {\r\n    public Id: string;\r\n    public TrailerId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Compartments: number;\r\n    public TrailerType: string;\r\n    public Shifts: TrailerShiftModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class TrailerShiftModel {\r\n    public ShiftId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Trips: TripModel[];\r\n}\r\n\r\nexport class ScheduleShiftModel {\r\n    constructor() {\r\n        this.Schedules = [];\r\n        this.IsCollapsed = false;\r\n    }\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Schedules: TrailerModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n}\r\n\r\nexport class TrailerModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class LocationFilters {\r\n    public IsShowCarrierManaged: boolean;\r\n    public state: number[] = [];\r\n    public city: number[] = [];\r\n    public product: string[] = [];\r\n    public priority: number[] = [];\r\n    public customer: number[] = [];\r\n    public supplier: SelectedItem[] = [];\r\n    public carrier: SelectedItem[] = [];\r\n}\r\n\r\nexport class TripModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n    }\r\n    public TripId: string;\r\n    public GroupId: number;\r\n    public StartDate: string;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public LoadCode: string;\r\n    public RouteInfo: string;\r\n    public SupplierSource: string;\r\n    public Carrier: string;\r\n    public TimeStamp: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public TrailerRowIndex: number;\r\n    public TrailerColIndex: number;\r\n    public ShiftIndex: number;\r\n    public TripStatus: TripStatus;\r\n    public ShiftId: string;\r\n    public ShiftStartTime: string;\r\n    public ShiftEndTime: string;\r\n    public SlotPeriod: number;\r\n    public TripPrevStatus: TripStatus;\r\n    public DeliveryGroupStatus: DeliveryGroupStatus;\r\n    public DeliveryGroupPrevStatus: DeliveryGroupStatus;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsCommonPickup: boolean;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public IsEditable: boolean;\r\n    public DriverScheduleMappingId?: string;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public IsCommonBadge: boolean;\r\n}\r\n\r\nexport class DropAddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public City: string;\r\n    public State: DropdownItem;\r\n    public Country: DropdownItem;\r\n    public ZipCode: string;\r\n    public CountyName: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OrderPickupDetailModel {\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public TerminalName: string;\r\n    public TerminalId: number;\r\n    public PickupLocationType: number = 1;\r\n    public BulkplantName: string;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public StateId: number;\r\n    public CountryCode: string;\r\n    public ZipCode: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public TimeZoneName: string;\r\n}\r\n\r\nexport class OrderPickupLocationModel {\r\n    public PickupLocationType: PickupLocationType;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public static ToLocation(orderPickupDetail: OrderPickupDetailModel): OrderPickupLocationModel {\r\n        let location = new OrderPickupLocationModel();\r\n        location.PickupLocationType = orderPickupDetail.PickupLocationType;\r\n        location.Terminal = {\r\n            Id: orderPickupDetail.TerminalId,\r\n            Name: orderPickupDetail.TerminalName,\r\n            Code: ''\r\n        };\r\n        location.BulkPlant = {\r\n            Address: orderPickupDetail.Address,\r\n            City: orderPickupDetail.City,\r\n            State: { Id: orderPickupDetail.StateId, Code: orderPickupDetail.StateCode, Name: null },\r\n            Country: { Id: 0, Code: orderPickupDetail.CountryCode, Name: null },\r\n            ZipCode: orderPickupDetail.ZipCode,\r\n            CountyName: orderPickupDetail.CountyName,\r\n            Latitude: orderPickupDetail.Latitude,\r\n            Longitude: orderPickupDetail.Longitude,\r\n            SiteName: orderPickupDetail.BulkplantName,\r\n            SiteId: null\r\n        };\r\n        return location;\r\n    }\r\n}\r\n\r\nexport class WhereIsMyDriverModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public Intl: string;\r\n    public PhNo: string;\r\n    public Lat: number;\r\n    public Lng: number;\r\n    public LicNo: string;\r\n    public LdPri: number;\r\n    public RgId: string;\r\n    public RgName: string;\r\n    public RgStates: DropdownItem[];\r\n    public StId: number;\r\n    public StName: string;\r\n    public PoNum: string;\r\n    public Pckup: string;\r\n    public Loc: string;\r\n    public dLat: number\r\n    public dLng: number\r\n    public PrdtNm: string;\r\n    public Qty: string;\r\n    public LdDate: string;\r\n    public SttsId: number;\r\n    public Status: string;\r\n    public DrId: string;\r\n    public statusColor: string;\r\n    public DROPTicketNum: string;\r\n    public ListDROPTicketNum: [];\r\n\r\n    public routeShow: boolean = false;\r\n    public AppLastUpdatedDate: string;\r\n    public IsOnline: number;\r\n\r\n}\r\n\r\nexport class DistatcherRegionModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Dispatchers: DropdownItem[];\r\n\r\n}\r\n\r\nexport interface JobDeliveryRequest {\r\n    Id: string;\r\n    TfxProductType: string;\r\n    TfxUoM: number;\r\n    RequiredQuantity: number;\r\n    Priority: number;\r\n    DeliveryReqPriority: string;\r\n    Status: number;\r\n    DeliveryReqStatus: string;\r\n    StorageTypeId: string;\r\n    StorageId: string;\r\n    CreatedRegionId?: any;\r\n    TfxJobId: number;\r\n}\r\n\r\nexport interface Country {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport interface State {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface City {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Priority {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Product {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface SelectedItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface DropDownItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Customer {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class Filter {\r\n    'state': State[] = [];\r\n    'city': City[] = [];\r\n    'product': SelectedItem[] = [];\r\n    'priority': Priority[] = [];\r\n    'customer': Customer[] = [];\r\n    'supplier': SelectedItem[] = [];\r\n    'carrier': SelectedItem[] = [];\r\n}\r\n\r\nexport interface JobAssetDetail {\r\n    AssetId: number;\r\n    JobId: number;\r\n    AssetName: string;\r\n    AssetType: number;\r\n    AssetTypeName: string;\r\n    FuelCapacity: number;\r\n    ProductType: string;\r\n    TankType: number;\r\n    TankTypeName: string;\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    ThresholdDeliveryRequest: number;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    jobTankAdditionalDetails: JobTankAdditionalDetails[];\r\n    TfxProductTypeName: string;\r\n    LastReading: string;\r\n    CaptureTime: string;\r\n}\r\n\r\nexport interface JobTankAdditionalDetails {\r\n    TfxAssetId: number;\r\n    TankId: string;\r\n    TankName: string;\r\n    TankNumber: string;\r\n    StorageId: string;\r\n    ThresholdDeliveryRequest: number;\r\n    FillType: number;\r\n    MaxFill: number;\r\n    MaxFillPercent: number;\r\n    MinFill: number;\r\n    MinFillPercent: number;\r\n    FuelCapacity: number;\r\n    FillTypeStatus: string;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    ManiFolded: number;\r\n    ManiFoldedName: string;\r\n    TfxProductTypeName?: any;\r\n    SiteId: string;\r\n    LastReading: number;\r\n    CaptureTime: Date;\r\n    dipChartDetails: any[];\r\n    TankChartPath: string;\r\n}\r\n\r\n\r\nexport interface JobLocationDetailsModal {\r\n   // CustomerName: string;\r\n    CustomerId: number;\r\n    JobID: number;\r\n    JobName: string;\r\n    JobLocationType: number;\r\n    JobLocationTypeName: string;\r\n    Latitude: string;\r\n    Longitude: string;\r\n    Address: string;\r\n    CountryCode: string;\r\n    City: string;\r\n    CityId: number;\r\n    State: string;\r\n    StateID: number;\r\n    ZipCode: string;\r\n    ContractNumber: string;\r\n    IsContactDetailsAvailable: number;\r\n    ContactPersonName: string;\r\n    ContactPhoneNumber: string;\r\n    IsPhoneNumberConfirmed: number;\r\n    SiteImageFilePath: string;\r\n    SiteAvailabilityArray: string[];\r\n    SiteAvailabilityTotalDays: number;\r\n    SiteAvailabilityTiming: string;\r\n    SiteInstructions: string;\r\n    TankCount: number;\r\n    AssetCount: number;\r\n    TotalCount: number;\r\n    jobDeliveryRequests: JobDeliveryRequest[];\r\n    jobAssetDetails: JobAssetDetail[];\r\n    FuleTypeID?: any;\r\n    FuelTypeName: string;\r\n    FuelTypeNameList: string[];\r\n    ScheduleStatus: string;\r\n    highestPriority: number,\r\n    iconUrl: string,\r\n    supplierDetails: SelectedItem[];\r\n    carrierDetails: SelectedItem[];\r\n}\r\n\r\nexport interface JobLocationData {\r\n    jobLocationDetails: JobLocationDetailsModal[];\r\n    citiesDetails: City[];\r\n    stateDetails: State[];\r\n    customerDetails: Customer[];\r\n    fuelTypeDetails: string[];\r\n}\r\n\r\nexport class SbFilterModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Pickups = [];\r\n\r\n        this.SelectedDrivers = [];\r\n        this.SelectedPickups = [];\r\n        this.SelectedTrailers = [];\r\n    }\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public Pickups: DropdownItem[];\r\n\r\n    public SelectedPickups?: DropdownItem[];\r\n    public SelectedDrivers?: DropdownItem[];\r\n    public SelectedTrailers?: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewFilterModel {\r\n    public Shifts?: any = {};\r\n    public Trailers?: any = {};\r\n    public Pickups?: any = {};\r\n    public Drivers?: any = {};\r\n}\r\n\r\nexport class DriverViewFilterModel {\r\n    public Shifts?: any = {};\r\n}\r\nexport class CompanyUsers {\r\n    FirstName: string;\r\n    LastName: string;\r\n    FullName: string;\r\n    PhoneNumber: string;\r\n    IsPhoneNumberConfirmed: boolean;\r\n    EmailAddress: string;\r\n    SendbirdUserName: string;\r\n    UserName: string;\r\n    UserId: number;\r\n    Role: number;\r\n    RegionID: string;\r\n    SendBirdRegionID: string;\r\n    RegionName: string;\r\n    RegionDescription: string;\r\n    //sendbird propery\r\n    ProfileURL: string;\r\n\r\n}\r\n\r\nexport class TankMinMaxFill {\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    MinFillPercent: number;\r\n    MaxFillPercent: number;\r\n}\r\n\r\nexport class TankChartHeight {\r\n    ShouldBeEmptyPercent: number;\r\n    ShouldBeFilledPercent: number;\r\n    CurrentInventoryPercent: number;\r\n    sbf_percent: number;\r\n    ci_percent: number;\r\n}\r\n\r\nexport class DipTest {\r\n    TankId: string\r\n    SiteId: string\r\n    Ullage: number\r\n    GrossVolume: number\r\n    NetVolume: number\r\n    CaptureTime: string\r\n    CaptureTimeString: string\r\n}\r\n\r\nexport interface Compartment {\r\n    CompartmentId: string;\r\n    FuelType: number;\r\n    Capacity: number;\r\n}\r\n\r\nexport interface Trailer {\r\n    Id: string;\r\n    Name: string;\r\n    Owner?: any;\r\n    TruckId: string;\r\n    FuelCapacity: number;\r\n    ContractNumber: string;\r\n    Compartments: Compartment[];\r\n    TfxCreatedBy: number;\r\n    TfxCompanyId: number;\r\n    CreatedDate: Date;\r\n    Status: number;\r\n    LicenceRequirement: number;\r\n    LicencePlate: string;\r\n    ExpirationDate: string;\r\n    IsPump: string;\r\n    TrailerType: number;\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport interface IDriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n}\r\n\r\nexport class DriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n    constructor(data?: IDriverAdditionalDetails) {\r\n        this.Id = data && data['Id'] || null;\r\n        this.Name = data && data['Name'] || null;\r\n        this.License = data && data['License'] || null;\r\n        this.ContactNumnber = data && data['ContactNumnber'] || null;\r\n        this.Shifts = data && data['Shifts'] || [];\r\n        this.Trailers = data && data['Trailers'] || [];\r\n    }\r\n}\r\n\r\nexport const routesColor = {\r\n    1: '#5f4aa8',\r\n    11: '#c4c105',\r\n    12: '#d3950f',\r\n    18: '#19953f',\r\n    20: '#e3584d'\r\n}\r\n\r\nexport class DemandModel {\r\n    Id: number;\r\n    JobId: number;\r\n    JobName: string;\r\n    Level: number;\r\n    NetVolume: number;\r\n    OrderId: number\r\n    Priority: DeliveryReqPriority;\r\n    ProductName: string;\r\n    ProductType: string;\r\n    SiteId: string;\r\n    StorageId: string;\r\n    TankCapacity: number;\r\n    TankId: string;\r\n    TankMaxFill: number\r\n    TankMinFill: number\r\n    TankName: string;\r\n    Ullage: number;\r\n    UoM: string;\r\n    RequiredQuantity: number;\r\n    IsDRExists: boolean;\r\n    IsDRMissed: boolean;\r\n    ExistingDR: PartialDRDetail[];\r\n}\r\n\r\nexport class PartialDRDetail {\r\n    DeliveryReqPriority: DeliveryReqPriority;\r\n    ScheduleStatusName: string;\r\n    ScheduleStatusId: number;\r\n    RequiredQuantity: number;\r\n    CreatedOn: string;\r\n    CreatedDate: string;\r\n}\r\n\r\nexport class LoadInfo {\r\n    ShiftId: string;\r\n    ShiftIndex?: number;\r\n    ScheduleIndex: number;\r\n    TripIndex: number;\r\n    DrId: string;\r\n}\r\n\r\nexport class PreLoadDrViewModel {\r\n    public SbView: number;\r\n    public RegionId: string;\r\n    public ShiftEndDate: string\r\n    public ShiftId: string\r\n    public ShiftIndex: number;\r\n    public ScheduleIndex: number;\r\n    public TripIndex: number;\r\n    public PreloadTrailers: TrailerModel[];\r\n    public PreloadDrs: any[];\r\n}\r\n\r\nexport class PreLoadDrResponseViewModel {\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n    public PreloadDrs: PreLoadDrModel[];\r\n}\r\n\r\nexport class PreLoadDrModel {\r\n    public Id: string;\r\n    public PreLoadedForId: string;\r\n}\r\n\r\nexport interface Supplier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport interface Carrier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class SalesTankFilterModal {\r\n    public selectedLocAttributeData:any = [];\r\n}\r\n\r\nexport class SalesFilterModal {\r\n    public SelectedLocationId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { DatatableCustomSortingService } from 'src/app/directives/sorting.pipe';\r\ndeclare var currentUserCompanyId;\r\n\r\n@Component({\r\n    selector: 'app-dispatcher-dashboard',\r\n    templateUrl: './dispatcher-dashboard.component.html',\r\n    styleUrls: ['./dispatcher-dashboard.component.css']\r\n})\r\nexport class DispatcherDashboardComponent implements OnInit, AfterViewInit {\r\n\r\n    public viewType: any;\r\n    public singleMulti: any;\r\n    public disableControl: boolean = false;\r\n    private dispatcherDashboard: Window;\r\n\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: DispatcherService, private carrierService: CarrierService, private customSortingService: DatatableCustomSortingService) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.checkWindowSelection();\r\n        this.getCountries();\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        this.customSortingService.configColumnDefsNullToBottom();\r\n    }\r\n\r\n    getCountries() {\r\n        this.carrierService.GetCountries(currentUserCompanyId).subscribe(data => {\r\n            if (data != null) {\r\n                localStorage.setItem('countryIdForDashboard', data.DefaultCountryId);\r\n                localStorage.setItem('currencyTypeForDashboard', data.DefaultCountryId);\r\n            }\r\n        });\r\n    }\r\n    public changeViewType(type: any): void {\r\n        localStorage.setItem('viewType', <string>type);\r\n        if (this.singleMulti === 2) {\r\n            this.dispatcherDashboard = window.open(\"/Dispatcher/Dashboard\", \"_blank\");\r\n        } else {\r\n            this.viewType = type;\r\n        }\r\n    }\r\n\r\n\r\n    public changeWindowType(type: number): void {\r\n        this.singleMulti = type;\r\n        this.dispatcherService.SingleMultiWindowSubject.next(type);\r\n        if (type === 1 && +(localStorage.getItem('singleMulti')) !== 1) {\r\n            setTimeout(() => {\r\n                this.dispatcherDashboard.close();\r\n            }, 10000);\r\n        }\r\n        localStorage.setItem('singleMulti', <string>this.singleMulti);\r\n    }\r\n\r\n    private checkWindowSelection(): void {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        this.viewType = (localStorage.getItem('viewType')) ? +(localStorage.getItem('viewType')) : 1;\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl == true) {\r\n            this.viewType = 2;\r\n        }\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\" >\r\n            <div class=\"col-sm-3 sticky-header-dash\">\r\n                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Location</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">Loads</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"3\" [checked]=\"viewType==3\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(3)\">Sales</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dib switch-window ml20 pull-left mt5\" *ngIf=\"viewType!=3\">\r\n                    <div class=\"btn-group\">\r\n                        <input class=\"hide-element\" name=\"single\" type=\"radio\" [value]=\"1\" [checked]=\"singleMulti==1\">\r\n                        <label class=\"btn ml0 first-icon\" (click)=\"changeWindowType(1)\" placement=\"bottom\" ngbTooltip=\"Single Window\"><i class=\"far fa-window-maximize fs14 mt3\"></i></label>\r\n                        <input class=\"hide-element\" name=\"multiple\" type=\"radio\" [value]=\"2\" [checked]=\"singleMulti==2\">\r\n                        <label class=\"btn last-icon\" (click)=\"changeWindowType(2)\" placement=\"bottom\" ngbTooltip=\"Multi Window\"><i class=\"far fa-window-restore fs14 mt3\"></i></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-location [singleMulti]=\"singleMulti\" *ngIf=\"viewType==1\">Loading...</app-location>\r\n                <app-where-is-my-driver [singleMulti]=\"singleMulti\" *ngIf=\"viewType==2\">Loading...</app-where-is-my-driver>\r\n                <app-sales-data *ngIf=\"viewType==3\">Loading...</app-sales-data>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n   \r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { ForecastingLocationFilter } from '../../dispatcher.model';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-job-tank-hierarchy',\n    templateUrl: './job-tank-hierarchy.component.html',\n    styleUrls: ['./job-tank-hierarchy.component.css']\n})\nexport class JobTankHierarchyComponent implements OnInit {\n\n    public LocationSchedules: any = [];\n    CloneLocationSchedules = [];\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\n    FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\n    IsLoading = false;\n    IsLocDrpDwnLoading = false;\n\n    public SelectedRegionId: string;\n    public SelectedCustomerId: string;\n    SelectedLocationId: string;\n    SelectedTankId: string;\n    SelectedSiteId: string;\n    filterArgs = { key: \"DaysRemaining\", asc: true };\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    \n    constructor(private dispatcherService: DispatcherService) { }\n\n    ngOnInit() {\n        this.initLocationDropDown();\n    }\n\n    setSortArgs(key: string) {\n        if (this.filterArgs.key == key) {\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\n        }\n        else {\n            this.filterArgs = { asc: true, key: key }\n        }\n    }\n\n    initLocationDropDown() {\n\n        this.IsLocDrpDwnLoading = true;\n        this.LocationDrpDwnList = [];\n\n\n        let filter: ForecastingLocationFilter = {\n            Carriers: \"\",\n            CustomerIds: this.SelectedCustomerId? this.SelectedCustomerId: \"\",\n            InventoryCaptureType: \"\",\n            IsRateOfConsumption: false,\n            IsShowCarrierManaged: false,\n            RegionId: this.SelectedRegionId? this.SelectedRegionId: \"\"\n        };\n        \n\n        forkJoin([this.dispatcherService.getSupplierLocationTanks(filter), this.dispatcherService.GetRaisedExceptions()])\n            .subscribe(result => {\n                this.IsLocDrpDwnLoading = false;\n                this.LocationDrpDwnList = result[0];\n                this.Partsfiltering();\n                this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\n                if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\n                    this.LocationDrpDwnList.forEach(loc => {\n                        loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\n                            if (result[1] && result[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\n                                m.IsUnknowDeliveryOrMissDelivery = true;\n                            else\n                                m.IsUnknowDeliveryOrMissDelivery = false;\n                        });\n                    });\n                }\n            });\n    }\n\n    locationChange($event) {\n        this.SelectedTankId = null;\n        this.SelectedLocationId = $event.JobId;\n        this.SelectedSiteId = $event.SiteId;\n        this.LocationSchedules = [];\n        this.CloneLocationSchedules = [];\n    }\n\n    tankChange($event) {\n        if (this.CloneLocationSchedules && this.CloneLocationSchedules.length > 0) {\n            this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\n            this.LocationSchedules = this.CloneLocationSchedules.filter(f => f.TankId == $event.TankId && f.StorageId == $event.StorageId);\n        }\n        else\n            this.LocationSchedules = [];\n    }\n\n    Partsfiltering(inputName?) {\n        this.FilterLocationDrpDwnList = [];\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\n            let searchWord = inputName.target.value.toUpperCase();\n            this.LocationDrpDwnList.forEach(element => {\n                if (element.SiteId.toUpperCase().indexOf(searchWord) !== -1) {\n                    this.FilterLocationDrpDwnList.push(element);\n                }\n            });\n        } else {\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;\n        }\n    }\n\n    public showTanks(location: any) {\n\n        let row = this.LocationSchedules[0];\n\n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = row.RegionId;\n        salesDataModel.SiteId = location.SiteId;\n        salesDataModel.TankId = location.TankId;\n        salesDataModel.StorageId = location.StorageId;\n        salesDataModel.TfxJobId = parseInt(location.JobId);\n        salesDataModel.LocationManagedType = location.LocationManagedType ? location.LocationManagedType: null;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n\n\nexport interface LocationTankDetailsModel {\n    JobId?: number;\n    SiteId?: string;\n    Tanks?: TankDetailModel[];\n    DaysRemaining: number\n    Status: string\n}\n\nexport interface TankDetailModel {\n    TankId?: string;\n    StorageId?: string;\n    Name?: string;\n    IsUnknowDeliveryOrMissDelivery: boolean;\n    Status: string;\n    DaysRemaining: number;\n    CustomerInfo?: string;\n}","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"well bg-white shadow-b location-panel\">\r\n            <div id=\"accordion-location\" class=\"location-accordion\">\r\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\r\n                     src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\r\n                     alt=\"animated-truck-image-0009\" />-->\r\n                <div class=\"position-abs text-center\"\r\n                    [ngClass]=\"{'hide-element': !FilterLocationDrpDwnList && FilterLocationDrpDwnList.length==0 }\">\r\n                    <span class='spinner-small ml10 mt5'></span>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"col-sm-12 row\">\r\n                    <div class=\"inner-addon left-addon\">\r\n                        <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\"\r\n                            (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">\r\n                    No\r\n                    Location Available\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\r\n\r\n                    <table class=\"table tank-view\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"49%\">Location</th>\r\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\r\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                                </th>\r\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\r\n                                <th>\r\n                                    Status\r\n                                </th>\r\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\r\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.SiteId\">\r\n                                            <h2 class=\"mb-0\">\r\n                                                <div ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\r\n                                                     class=\"position-relative pr-3 btn btn-link collapsed text-left\"\r\n                                                     data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.SiteId\"\r\n                                                     aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.SiteId\"\r\n                                                     (click)=\"locationChange(loc)\">\r\n                                                    <ng-container>\r\n                                                        {{loc?.LocationName}}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\r\n                                                    </ng-container>\r\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\r\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </h2>\r\n                                        </div>\r\n                                     \r\n                                    </td>\r\n    \r\n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\r\n                                    <td>\r\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                            <span class=\"\">{{loc.Status}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr [attr.id]=\"'col'+loc?.SiteId\" class=\"collapse\"\r\n                                data-parent=\"#accordion-location\"\r\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.SiteId\">\r\n\r\n                                <td colspan=\"3\">\r\n                                    <div class=\"card-body\">\r\n                                        <ul class=\"list-group list-group-flush\">\r\n\r\n                                            <table class=\"table tank-view-child\">\r\n                                                <tbody>\r\n                                                    <tr *ngFor=\"let tank of loc?.Tanks\">\r\n                                                        <td width=\"45%\">\r\n                                                            <a href=\"javascript:void(0)\"\r\n                                                                (click)=\"tankChange(tank)\"\r\n                                                                [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                                {{tank.Name}}\r\n                                                                <span\r\n                                                                    *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                                    class=\"active-dot\">\r\n                                                                </span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                        <td width=\"24%\">\r\n                                                            {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                                                <span class=\"\">{{tank.Status}}</span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </ul>\r\n                                    </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\"\r\n        [SelectedRegionId]=\"SelectedRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ViewEncapsulation, ɵbypassSanitizationTrustStyle, Input } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Subject, Subscription, BehaviorSubject } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { JobLocationDetailsModal, JobAssetDetail, State, Country, City, Priority, SelectedItem, Customer, DipTest, TankMinMaxFill, TankChartHeight, Filter, JobTankAdditionalDetails } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from '../../carrier/service/carrier.service';\r\nimport { LocationViewComponent } from './sales-data/location-view.component';\r\nimport { LocationFilterModal } from '../dispatcher.model';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { TfxModule } from 'src/app/app.enum';\r\nimport { InventoryDataCaptureList } from 'src/app/app.constants';\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-location',\r\n    templateUrl: './location.component.html',\r\n    styleUrls: ['./location.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LocationComponent implements OnInit {\r\n    @ViewChild(LocationViewComponent) locationGridView: LocationViewComponent;\r\n    @Input() singleMulti: number;\r\n    public Map: any;\r\n    public isLoading = false;\r\n    public zoomLevel = 5;\r\n    public jobLocationData: JobLocationDetailsModal[] = [];\r\n    public opendedJobDetails: JobLocationDetailsModal;\r\n    public clickedAssetsDetails: JobAssetDetail[] = [];\r\n    public stateList: State[] = [];\r\n    public countryList: Country[] = [];\r\n    public cityList: City[] = [];\r\n    public priorityList: Priority[] = [];\r\n    public statusList = [];\r\n    public fuelTypeList: SelectedItem[] = [];\r\n    public customerList = [];\r\n    public latestReading: DipTest = new DipTest();\r\n    public chartData = [];\r\n    public demandChartData: any;\r\n    public chartLabels = [];\r\n    private setCountryCenterInterval: any;\r\n    public FuelUnit: string;\r\n    public IsFilterLoaded: boolean = false;\r\n    public chartOptions: ChartOptions;\r\n    public selectedTankMinMax: TankMinMaxFill = new TankMinMaxFill();\r\n    public selectedTankHeight: TankChartHeight = new TankChartHeight();\r\n\r\n    subscriptions: Subscription = new Subscription();\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public CustomerDdlSettings: IDropdownSettings;\r\n    public PriorityDdlSettings: IDropdownSettings;\r\n    public filteredJobLocationData: JobLocationDetailsModal[] = [];\r\n    public unchangedJobLocationData: JobLocationDetailsModal[] = [];\r\n    public SelectedFilter: Filter = new Filter();\r\n\r\n    public assetDetails = { assetIndex: 0 };\r\n    public assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n\r\n    private locationSubscription = new Subscription();\r\n\r\n    public clickViewActive: Boolean = false;\r\n    public clickAssetsPanel: Boolean = false;\r\n    public clickChartsPanel: Boolean = false;\r\n\r\n    public toogleMap: Boolean = false;\r\n    public toogleFilter: Boolean = false;\r\n\r\n    public centerLocationLat = 47.1853106;\r\n    public centerLocationLog = -125.36955;\r\n    private UserCountry = \"USA\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 3\r\n    };\r\n    public mustGoUrl = \"src/assets/marker-mustgo.svg\";\r\n    public shouldGoUrl = \"src/assets/marker-shouldgo.svg\";\r\n    public couldGoUrl = \"src/assets/marker-couldgo.svg\";\r\n    public noDlrUrl = \"src/assets/marker-nodr.svg\";\r\n    public noImageUrl = \"Content/images/no-image.png\";\r\n    public isChartDataExistSubject: BehaviorSubject<any>;\r\n    public isShowCarrierManaged: boolean = false;\r\n    public carrierList: any[] = [];\r\n    selectedCarrierIds: string = '';\r\n    SelectedRegions = [];\r\n    public Regions: DistatcherRegionModel[] = [];\r\n    public UnchangedCustomerList = [];\r\n    public SelectedRegionId: string = '';\r\n    public SelectedCustomerIds: string;\r\n    public SelectedPriorityIds: string;\r\n    public SelectedLocationIds: string;\r\n    public SelectedStatusesId: string;\r\n    SelectedCustomerList = [];\r\n    SelectedlocationList = [];\r\n    SelectedCarrierList = [];\r\n    SelectedPriorityList = [];\r\n    SelectedStatusList = [];\r\n    selectedPriorityIds: string = '';\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    selectedLocAttributeList = [];\r\n\r\n    public locationList = [];\r\n    public isShowNonRetailJobs: boolean = false;\r\n    public jobIdsEmittedFromSalesComponent: any = [];\r\n\r\n    public locationFilterModal: LocationFilterModal = new LocationFilterModal();\r\n    public count: number = 0;\r\n\r\n    constructor(private readonly dispatcherService: DispatcherService,\r\n        private carrierService: CarrierService,) {\r\n        this.isChartDataExistSubject = new BehaviorSubject(false);\r\n\r\n        var _this = this;\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            _this.SaveFilters(true);\r\n            return;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public ngOnInit(): void {\r\n        this.getRegions();\r\n        this.getCarriers();\r\n        this.getDispatcherLocation();\r\n        this.priorityList = [{\r\n            Id: 1,\r\n            Name: 'Must Go'\r\n        }, {\r\n            Id: 2,\r\n            Name: 'Should Go'\r\n        },\r\n        {\r\n            Id: 3,\r\n            Name: 'Could Go'\r\n        },\r\n        {\r\n            Id: 4,\r\n            Name: 'Unplanned'\r\n        }];\r\n        this.statusList = [{\r\n            Id: 'Scheduled',\r\n            Name: 'Scheduled'\r\n        }, {\r\n            Id: 'DR Created',\r\n            Name: 'DR Created'\r\n        },\r\n        {\r\n            Id: 'No DR',\r\n            Name: 'No DR'\r\n        }];\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.CustomerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'CompanyId',\r\n            textField: 'CompanyName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.PriorityDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getCarriers() {\r\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\r\n            this.carrierList = data;\r\n        });\r\n    }\r\n\r\n    private fetchJobLocationData(PageLoad?: Boolean): void {\r\n        this.isLoading = true;\r\n        if (this.jobIdsEmittedFromSalesComponent && this.jobIdsEmittedFromSalesComponent.length) {\r\n            var ids = []\r\n            this.jobIdsEmittedFromSalesComponent.forEach(res => { ids.push(res.TfxJobId) });\r\n            var jobids = \"\";\r\n            jobids = ids.join();\r\n\r\n            var selectedLocAttributeId = \"\";\r\n            if (this.selectedLocAttributeList && this.selectedLocAttributeList.length > 0) {\r\n                var ids = [];\r\n                this.selectedLocAttributeList.forEach(res => { ids.push(res.Id) });\r\n                selectedLocAttributeId = ids.join();\r\n            }\r\n            this.locationSubscription.add(this.dispatcherService.getJobLocationDetails(jobids, selectedLocAttributeId).subscribe(res => {\r\n                //   this.locationSubscription.add(this.dispatcherService.getJobLocationDetails(this.jobIdsEmittedFromSalesComponent,selectedLocAttributeId).subscribe(res => {\r\n                if (res) {\r\n                    this.jobLocationData = this.addJobPriority(res['Data']['jobLocationDetails']);\r\n                }\r\n                this.setCountryCentre();\r\n                this.isLoading = false;\r\n            }));\r\n        } else {\r\n            this.unchangedJobLocationData = this.jobLocationData = [];\r\n            this.setCountryCentre();\r\n            this.isLoading = false;\r\n        }\r\n\r\n    }\r\n\r\n    private convertToObjectArray(data: string[]): SelectedItem[] {\r\n        let modifiedItemArray: SelectedItem[] = [];\r\n        data.forEach((item, index) => {\r\n            let Item: SelectedItem = { 'Id': 0, 'Name': '' };\r\n            Item.Id = index;\r\n            Item.Name = item;\r\n            modifiedItemArray.push(Item);\r\n        })\r\n        return modifiedItemArray;\r\n    }\r\n\r\n    private fetchCountryListData(): void {\r\n        this.locationSubscription.add(this.dispatcherService.getCountryList().subscribe(res => {\r\n            this.countryList = res;\r\n        }));\r\n    }\r\n\r\n    private fetchProductTypeListData(): void {\r\n        this.locationSubscription.add(this.dispatcherService.getProductTypeList().subscribe(res => {\r\n            this.fuelTypeList = res.Data;\r\n        }));\r\n    }\r\n\r\n    private fetchStateListData(countryId?: string): void {\r\n        this.locationSubscription.add(this.dispatcherService.getStateList(countryId).subscribe(res => {\r\n            this.stateList = res;\r\n        }));\r\n    }\r\n\r\n    private fetchCityListData(stateId?: string): void {\r\n        this.locationSubscription.add(this.dispatcherService.getCityList(stateId).subscribe(res => {\r\n            this.cityList = res;\r\n        }));\r\n    }\r\n    private addJobPriority(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n        if (jobLocationData && jobLocationData.length) {\r\n            jobLocationData.forEach(element => {\r\n                var obj = this.jobIdsEmittedFromSalesComponent.find(t => t.TfxJobId == element.JobID);\r\n                if (obj) {\r\n                    if (obj.Priority == 1) {\r\n                        element.highestPriority = 1;\r\n                        element.iconUrl = this.mustGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 2) {\r\n                        element.highestPriority = 2;\r\n                        element.iconUrl = this.shouldGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 3) {\r\n                        element.highestPriority = 3;\r\n                        element.iconUrl = this.couldGoUrl;\r\n                    }\r\n                    else {\r\n                        element.highestPriority = 4;\r\n                        element.iconUrl = this.noDlrUrl;\r\n                    }\r\n                } else {\r\n                    element.highestPriority = 4;\r\n                    element.iconUrl = this.noDlrUrl;\r\n                }\r\n            });\r\n        }\r\n        return jobLocationData;\r\n    }\r\n    private checkMostPriorityJob(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n        const jobLocationLength = jobLocationData.length;\r\n        for (let i = 0; i < jobLocationLength; i++) {\r\n            let deliveryRequests = jobLocationData[i].jobDeliveryRequests;\r\n            if (deliveryRequests.length) {\r\n                let filteredMustGoDRs = deliveryRequests.filter((data) => data.Priority === 1);\r\n                let filteredShoudGoDRs = deliveryRequests.filter((data) => data.Priority === 2);\r\n                let filteredCouldGoDRs = deliveryRequests.filter((data) => data.Priority === 3);\r\n                if (filteredMustGoDRs.length > 0) {\r\n                    jobLocationData[i].highestPriority = 1;\r\n                    jobLocationData[i].iconUrl = this.mustGoUrl;\r\n                }\r\n                else if (filteredShoudGoDRs.length > 0) {\r\n                    jobLocationData[i].highestPriority = 2;\r\n                    jobLocationData[i].iconUrl = this.shouldGoUrl;\r\n                }\r\n                else {\r\n                    jobLocationData[i].highestPriority = 3;\r\n                    jobLocationData[i].iconUrl = this.couldGoUrl;\r\n                }\r\n            } else {\r\n                jobLocationData[i].highestPriority = 4;\r\n                jobLocationData[i].iconUrl = this.noDlrUrl;\r\n            }\r\n        }\r\n        return jobLocationData;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        if (this.locationSubscription) {\r\n            this.locationSubscription.unsubscribe();\r\n        }\r\n        this.SaveFilters(true);\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.open();\r\n    }\r\n\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.close();\r\n    }\r\n\r\n    public onInfoViewClick(jobLocation: JobLocationDetailsModal): void {\r\n        window.scrollTo(0, 0);\r\n        this.opendedJobDetails = jobLocation;\r\n        this.assetDetails.assetIndex = 0;\r\n        this.clickViewActive = true;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n        this.toogleMap = true;\r\n        this.closeAssetsClicked();\r\n    }\r\n\r\n    public closeViewClicked(): void {\r\n        this.clickViewActive = false;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    public onAssetsViewClick(assets: JobAssetDetail[]): void {\r\n        if (assets.length) {\r\n            this.clickAssetsPanel = true;\r\n            this.clickedAssetsDetails = assets;\r\n            if (assets[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(assets[0].jobTankAdditionalDetails[0]['SiteId'], assets[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            else {\r\n                this.chartData = [];\r\n                this.latestReading = new DipTest();\r\n            }\r\n        }\r\n    }\r\n\r\n    public closeAssetsClicked(): void {\r\n        this.clickAssetsPanel = false;\r\n\r\n    }\r\n\r\n    public onChartsViewClick(assets: JobAssetDetail[]): void {\r\n        this.clickChartsPanel = true;\r\n        this.isChartDataExistSubject.next(false);\r\n        if (assets.length && assets[0].jobTankAdditionalDetails.length) {\r\n            this.getDemandCaptureChart(assets[0].jobTankAdditionalDetails[0]['SiteId'], 3, assets[0].JobId);\r\n        }\r\n        else {\r\n            this.isChartDataExistSubject.next(false);\r\n            this.demandChartData = null;\r\n        }\r\n    }\r\n\r\n    public closeChartsClicked(): void {\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    public assetTabClicked(indx: number): void {\r\n        this.assetDetails.assetIndex = indx;\r\n        if (this.clickedAssetsDetails[indx].jobTankAdditionalDetails.length) {\r\n            this.getDipTestDetails(this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['TankId'], 3);\r\n        } else {\r\n            this.chartData = [];\r\n            this.latestReading = new DipTest();\r\n        }\r\n    }\r\n    public toggleMapView(): void {\r\n        this.toogleMap = !this.toogleMap;\r\n        if (this.toogleMap) {\r\n            this.fetchJobLocationData();\r\n        }\r\n        //this.SaveFilters();\r\n    }\r\n\r\n    public toggleFilterView(): void {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    private tableClickFilter(data, index): void {\r\n    }\r\n\r\n    public modalOpen(jobLocation: JobLocationDetailsModal): void {\r\n        this.opendedJobDetails = jobLocation;\r\n        this.clickedAssetsDetails = this.opendedJobDetails.jobAssetDetails;\r\n        if (this.clickedAssetsDetails.length) {\r\n            this.closeAssetsClicked();\r\n            this.closeViewClicked();\r\n            this.closeChartsClicked();\r\n            this.assetDetails.assetIndex = 0;\r\n            if (this.clickedAssetsDetails[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            this.assetsModal = { modalDetails: { display: 'block', data: 'Modal Show' } };\r\n        }\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n    }\r\n\r\n    private getDipTestDetails(siteId: string, tankId: string, noOfDays: number): void {\r\n        this.isLoading = true;\r\n        this.chartData = [];\r\n        this.chartOptions = {};\r\n        this.chartOptions = this.setChartOptions(this.UserCountry);\r\n        this.chartLabels = [];\r\n        this.latestReading = new DipTest();\r\n        this.locationSubscription.add(this.dispatcherService.getDipTestDetails(siteId, tankId, noOfDays).subscribe((data) => {\r\n            if (data && data.StatusCode === 302) {\r\n                let resp = data.Data;\r\n                this.latestReading = resp[0];\r\n                let obj = {};\r\n                let chartdata = [];\r\n                obj['label'] = 'Tank ' + resp[0]['TankId'];\r\n                let respLen = resp.length;\r\n                for (let i = 0; (i < respLen); i++) {\r\n                    let captureTime = moment(new Date(resp[i].CaptureTimeString)).format('MM/DD/YYYY hh:mm A');\r\n                    chartdata.unshift(resp[i].NetVolume);\r\n                    this.chartLabels.unshift(captureTime);\r\n                }\r\n                obj['data'] = chartdata;\r\n                this.chartData.push(obj);\r\n            }\r\n            this.calculateMinMAx(this.clickedAssetsDetails[this.assetDetails.assetIndex].jobTankAdditionalDetails[0]);\r\n            this.isLoading = false;\r\n        }));\r\n    }\r\n\r\n    public getDemandCaptureChart(siteId: string, noOfDays: number, tfxJobId: number): void {\r\n        // this.demandChartData = {};\r\n        this.demandChartData = { siteId: siteId, noOfDays: noOfDays, tfxJobId: tfxJobId };\r\n        this.isChartDataExistSubject.next(true);\r\n    }\r\n\r\n    public mapReady(map: any): void {\r\n        this.Map = map;\r\n        this.setCountryCentre();\r\n    }\r\n\r\n    private setZoomLevel(): void {\r\n        if (this.jobLocationData.length == 0) {\r\n            this.setCountryCentre();\r\n        } else {\r\n            this.Map.setZoom(5);\r\n        }\r\n    }\r\n\r\n    private setCountryCentre(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.Map && this.jobLocationData.length == 0) {\r\n                    this.Map.setCenter(new google.maps.LatLng(this.centerLocationLat, this.centerLocationLog));\r\n                    this.Map.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.jobLocationData.forEach((x: JobLocationDetailsModal) => {\r\n                        bounds.extend(new google.maps.LatLng(x.Latitude, x.Longitude));\r\n                    });\r\n                    if (this.Map && bounds) {\r\n                        this.Map.fitBounds(bounds);\r\n                        this.Map.setCenter(bounds.getCenter());\r\n                        this.Map.setZoom(5);\r\n                    }\r\n\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    private setChartOptions(country: string) {\r\n        this.FuelUnit = (country === 'USA') ? 'Gallons' : 'Litres';\r\n        return {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: `NetVolume ( Fuels Per ${this.FuelUnit})`\r\n                    },\r\n                    ticks: {\r\n                        callback: label => { return label.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); }\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    type: 'time',\r\n                    time: {\r\n                        displayFormats: {\r\n                            'millisecond': 'MMM DD',\r\n                            'second': 'MMM DD',\r\n                            'minute': 'MMM DD',\r\n                            'hour': 'MMM DD',\r\n                            'day': 'MMM DD',\r\n                            'week': 'MMM DD',\r\n                            'month': 'MMM DD',\r\n                            'quarter': 'MMM DD',\r\n                            'year': 'MMM DD',\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n            }\r\n        };\r\n    }\r\n\r\n    private getDispatcherLocation(): void {\r\n        this.dispatcherService.getDispatcherCountry().subscribe(data => {\r\n            this.UserCountry = data;\r\n            this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\r\n        });\r\n    }\r\n    public setCenterMap($event): void {\r\n        if (this.UserCountry && !this.jobLocationData.length) {\r\n            this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n            this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n            if (this.Map) {\r\n                this.Map.setCenter({ lat: this.centerLocationLat, lng: this.centerLocationLog });\r\n                this.Map.setZoom(5);\r\n            }\r\n        }\r\n    }\r\n    public downloadDipChart(event: any, assetNumber: string) {\r\n        let anchor = event.target;\r\n        let orignalCanvas = document.getElementsByTagName('canvas')[0];\r\n        var resizedCanvas = document.createElement(\"canvas\");\r\n        var resizedContext = resizedCanvas.getContext(\"2d\");\r\n        resizedCanvas.height = 500;\r\n        resizedCanvas.width = 800;\r\n        var context = orignalCanvas.getContext(\"2d\");\r\n        resizedContext.drawImage(orignalCanvas, 0, 0, 800, 500);\r\n        anchor.href = resizedCanvas.toDataURL('image/jpeg', 1.0);\r\n        anchor.download = `${this.clickedAssetsDetails[assetNumber].AssetName}.png`;\r\n    }\r\n\r\n    private calculateMinMAx(selectedTank: JobTankAdditionalDetails): void {\r\n        this.selectedTankMinMax.MaxFill = selectedTank.MaxFill;\r\n        this.selectedTankMinMax.MinFill = selectedTank.MinFill;\r\n        this.selectedTankMinMax.MaxFillPercent = selectedTank.MaxFillPercent;\r\n        this.selectedTankMinMax.MinFillPercent = selectedTank.MinFillPercent;\r\n        let ci_percent = ((this.latestReading.NetVolume || 0) / selectedTank.FuelCapacity) * 100;\r\n        ci_percent = ci_percent > selectedTank.MaxFillPercent ? selectedTank.MaxFillPercent : ci_percent;\r\n        ci_percent = ci_percent < 0 ? 0 : ci_percent;\r\n\r\n        let sbf_percent = (selectedTank.MaxFillPercent - ci_percent);\r\n        sbf_percent = sbf_percent > 100 ? 100 : sbf_percent;\r\n        sbf_percent = sbf_percent < 0 ? 0 : sbf_percent;\r\n\r\n        this.fillTankDiagram(sbf_percent, ci_percent);\r\n    }\r\n\r\n    private fillTankDiagram(sbf_percent: number, ci_percent: number): void {\r\n        this.selectedTankHeight.sbf_percent = sbf_percent;\r\n        this.selectedTankHeight.ci_percent = ci_percent;\r\n        let min_ShouldBeEmptyPercent = (125 - ((sbf_percent * 1.25) + (ci_percent * 1.25)));\r\n        let min_ShouldBeFilledPercent = (sbf_percent * 1.25);\r\n        let min_CurrentInventoryPercent = (ci_percent * 1.25);\r\n        //need of cal\r\n        if (min_ShouldBeFilledPercent < 16 || min_CurrentInventoryPercent < 16) {\r\n            //dont remove from emtty\r\n            if (min_ShouldBeEmptyPercent < 16) {\r\n\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent - 16;\r\n                }\r\n            }\r\n            //remove from empty\r\n            else {\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n            }\r\n        }\r\n        this.selectedTankHeight.CurrentInventoryPercent = min_CurrentInventoryPercent;\r\n        this.selectedTankHeight.ShouldBeFilledPercent = min_ShouldBeFilledPercent;\r\n        this.selectedTankHeight.ShouldBeEmptyPercent = min_ShouldBeEmptyPercent;\r\n    }\r\n\r\n    public ShowCarrierMangedData() {\r\n        this.getAllCustomers();\r\n    }\r\n\r\n    public carrierChanged() {\r\n        var ids = [];\r\n        this.selectedCarrierIds = '';\r\n        this.SelectedCarrierList.forEach(res => { ids.push(res.Id) });\r\n        this.selectedCarrierIds = ids.join();\r\n        this.getAllCustomers();\r\n    }\r\n\r\n    public onCustomerChanged() {\r\n        if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n            this.locationList = [];\r\n            var customers = this.customerList.filter(t => { return this.SelectedCustomerList.filter(el => el.CompanyId == t.CompanyId).length > 0; });\r\n            customers.forEach(res => {\r\n                if (!this.locationList.find(t => t.Id == res.Id)) {\r\n                    this.locationList = this.locationList.concat(res.Jobs);\r\n                }\r\n            });\r\n            this.locationList = this.GetUniqueItems(this.locationList.reduce((p, n) => p.concat(n), []));\r\n            if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n                this.SelectedlocationList = this.SelectedlocationList.filter(t => { return this.locationList.filter(el => el.Id == t.Id).length > 0 });\r\n            }\r\n        }\r\n        else {\r\n            this.initAllLocation();\r\n        }\r\n    }\r\n\r\n    public getRegions() {\r\n        this.dispatcherService.GetDispatcherRegions().subscribe(data => {\r\n            this.Regions = data;\r\n            if (this.Regions && this.Regions.length > 0) {\r\n                this.SelectedRegions = [];\r\n                this.SelectedRegions.push(this.Regions[0]);\r\n                var ids = [];\r\n                this.SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n                this.SelectedRegionId = ids.join();\r\n            }\r\n            this.GetFilters();\r\n        });\r\n    }\r\n\r\n    private getCustomerListByRegionId(SelectedRegionId) {\r\n        this.carrierService.getJobListForCarrier(SelectedRegionId, this.isShowCarrierManaged, this.selectedCarrierIds).subscribe(t2 => {\r\n            this.customerList = t2;\r\n            if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n                this.SelectedCustomerList = this.SelectedCustomerList.filter(t => { return this.customerList.filter(el => el.CompanyId == t.CompanyId).length > 0 });\r\n            }\r\n            this.initAllLocation();\r\n        });\r\n    }\r\n\r\n    private initAllLocation() {\r\n        this.locationList = [];\r\n\r\n        if (this.SelectedRegions && this.SelectedRegions.length > 0) {\r\n            this.customerList.forEach(res => {\r\n                this.locationList = this.locationList.concat(res.Jobs.filter(t => this.SelectedRegions.some(el => el.Id == t.RegionId)));\r\n            });\r\n        }\r\n        else {\r\n            this.customerList.forEach(res => {\r\n                if (!this.locationList.find(t => t.Id == res.Id)) {\r\n                    this.locationList = this.locationList.concat(res.Jobs);\r\n                }\r\n            });\r\n        }\r\n        this.locationList = this.GetUniqueItems(this.locationList.reduce((p, n) => p.concat(n), []));\r\n        if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n            this.SelectedlocationList = this.SelectedlocationList.filter(t => { return this.locationList.filter(el => el.Id == t.Id).length > 0 });\r\n        }\r\n    }\r\n\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    public onRegionChanged() {\r\n        this.setCustomerAndLocations();\r\n    }\r\n\r\n    setCustomerAndLocations() {\r\n        if (this.SelectedRegions && this.SelectedRegions.length > 0) {\r\n            this.customerList = this.UnchangedCustomerList.filter(t => { return this.SelectedRegions.filter(el => t.RegionIds.some(r => el.Id == r)).length > 0; });\r\n        }\r\n        else {\r\n            this.customerList = this.UnchangedCustomerList;\r\n        }\r\n        if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n            this.SelectedCustomerList = this.SelectedCustomerList.filter(t => { return this.customerList.filter(el => el.CompanyId == t.CompanyId).length > 0 });\r\n        }\r\n        this.initAllLocation();\r\n    }\r\n\r\n    getAllCustomers() {\r\n        var ids = [];\r\n        this.Regions.forEach(res => { ids.push(res.Id) });\r\n        var selectedRegionId = ids.join();\r\n        this.carrierService.getJobListForCarrier(selectedRegionId, this.isShowCarrierManaged, this.selectedCarrierIds).subscribe(t2 => {\r\n            this.UnchangedCustomerList = t2;\r\n            this.setCustomerAndLocations();\r\n        });\r\n    }\r\n\r\n    public onLocationTypeChange($event) {\r\n\r\n    }\r\n    public ResetFilters() {\r\n        this.SelectedRegions = [];\r\n        this.SelectedCustomerList = [];\r\n        this.SelectedlocationList = [];\r\n        this.SelectedPriorityList = [];\r\n        this.SelectedStatusList = [];\r\n        this.selectedLocAttributeList = [];\r\n        this.ApplyFilters(\"reset\");\r\n\r\n    }\r\n    public ApplyFilters(msg?) {\r\n        this.SaveFilters(false);\r\n        this.count = 0;\r\n\r\n        var Regionids = [];\r\n        this.SelectedRegions.forEach(res => {\r\n            this.count++;\r\n            Regionids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedRegionId = Regionids.join();\r\n\r\n        var Customerids = [];\r\n        this.SelectedCustomerList.forEach(res => {\r\n            this.count++;\r\n            Customerids.push(res.CompanyId)\r\n        });\r\n        this.locationFilterModal.SelectedCustomerId = Customerids.join();\r\n\r\n        var Locationids = [];\r\n        this.SelectedlocationList.forEach(res => {\r\n            this.count++;\r\n            Locationids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedLocationId = Locationids.join();\r\n\r\n        var Statusids = [];\r\n        this.SelectedStatusList.forEach(res => {\r\n            this.count++;\r\n            Statusids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedStatusId = Statusids.join();\r\n\r\n        var Prioritiesids = [];\r\n        this.SelectedPriorityList.forEach(res => {\r\n            this.count++;\r\n            Prioritiesids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedPrioritiesId = Prioritiesids.join();\r\n\r\n        var LocAttributeids = [];\r\n        if (this.selectedLocAttributeList.length != 0) {\r\n            this.selectedLocAttributeList.forEach(res => {\r\n                this.count++;\r\n                LocAttributeids.push(res.Id)\r\n            });\r\n        }\r\n        else {\r\n            // LocAttributeids.push(0);\r\n            LocAttributeids = [0, 1, 2, 3];\r\n        }\r\n\r\n        this.locationFilterModal.selectedLocAttributeId = LocAttributeids.join();\r\n\r\n        this.locationGridView.applyFilters(this.locationFilterModal);\r\n        if (msg == \"set\") {\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n\r\n    }\r\n\r\n    async SaveFilters(isTopFilter?: boolean) {\r\n        var data = {};\r\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLocation).subscribe(res => {\r\n            this.IsFilterLoaded = true;\r\n            var input: any\r\n            if (res || res == \"\") {\r\n                if (res != \"\") {\r\n                    input = JSON.parse(res);\r\n                    data = input;\r\n                }\r\n                if (isTopFilter) {\r\n                    data['IsShowCarrierManaged'] = this.isShowCarrierManaged;\r\n                    data['Carrier'] = this.SelectedCarrierList;\r\n                    data['toogleMap'] = this.toogleMap;\r\n                    data['isShowNonRetailJobs'] = this.isShowNonRetailJobs;\r\n                    data['singleMulti'] = this.singleMulti;\r\n                } else {\r\n\r\n                    data['Regions'] = this.SelectedRegions;\r\n                    data['Customer'] = this.SelectedCustomerList;\r\n                    data['Location'] = this.SelectedlocationList;\r\n                    data['Priority'] = this.SelectedPriorityList;\r\n                    data['Status'] = this.SelectedStatusList;\r\n                    data['selectedLocAttributeList'] = this.selectedLocAttributeList;\r\n                    data['IsShowCarrierManaged'] = this.isShowCarrierManaged;\r\n                    data['Carrier'] = this.SelectedCarrierList;\r\n                    data['toogleMap'] = this.toogleMap;\r\n                    data['isShowNonRetailJobs'] = this.isShowNonRetailJobs;\r\n                    data['singleMulti'] = this.singleMulti;\r\n                }\r\n                this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardLocation, JSON.stringify(data)).subscribe();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    public GetFilters() {\r\n        this.isLoading = true;\r\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLocation).subscribe(res => {\r\n            this.IsFilterLoaded = true;\r\n            if (res) {\r\n                this.SetFilters(JSON.parse(res));\r\n            }\r\n            else {\r\n                this.getAllCustomers();\r\n                this.toogleMap = true;\r\n            }\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        this.singleMulti = input.singleMulti == \"\" ? 1 : input.singleMulti;\r\n        if (this.isShowCarrierManaged != input.IsShowCarrierManaged) {\r\n            this.isShowCarrierManaged = input.IsShowCarrierManaged;\r\n        }\r\n        if (this.isShowNonRetailJobs != input.isShowNonRetailJobs) {\r\n            this.isShowNonRetailJobs = input.isShowNonRetailJobs;\r\n        }\r\n        if (this.toogleMap != input.toogleMap) {\r\n            this.toogleMap = input.toogleMap;\r\n        }\r\n        if (input.Carrier && input.Carrier.length > 0) {\r\n            this.SelectedCarrierList = input.Carrier as SelectedItem[] || [];\r\n        }\r\n        if (input.Regions && input.Regions.length > 0) {\r\n            this.SelectedRegions = input.Regions as SelectedItem[] || [];\r\n            // var ids = [];\r\n            // this.SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n            // this.SelectedRegionId = ids.join();\r\n        }\r\n        if (input.Customer && input.Customer.length > 0) {\r\n            this.SelectedCustomerList = input.Customer as Customer[] || [];\r\n        }\r\n        if (input.Location && input.Location.length > 0) {\r\n            this.SelectedlocationList = input.Location as Location[] || [];\r\n        }\r\n        if (input.Priority && input.Priority.length > 0) {\r\n            this.SelectedPriorityList = input.Priority as Priority[] || [];\r\n        }\r\n        if (input.Status && input.Status.length > 0) {\r\n            this.SelectedStatusList = input.Status as SelectedItem[] || [];\r\n        }\r\n        if (input.selectedLocAttributeList && input.selectedLocAttributeList.length > 0) {\r\n            this.selectedLocAttributeList = input.selectedLocAttributeList as SelectedItem[] || [];\r\n        }\r\n        this.ApplyFilters();\r\n        this.getAllCustomers();\r\n    }\r\n\r\n    getJobIdsForMapEventHandler(valueEmitted) {\r\n\r\n        this.jobIdsEmittedFromSalesComponent = valueEmitted;\r\n        if (this.toogleMap) {\r\n            this.fetchJobLocationData();\r\n        }\r\n    }\r\n\r\n}","<div class=\"col-sm-9 sticky-header-loc\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" name=\"IsShowCarrierManaged\"\r\n                    [(ngModel)]=\"isShowCarrierManaged\" (change)=\"ShowCarrierMangedData()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineShowAsset\" name=\"IsShowAssetJobs\"\r\n                    [(ngModel)]=\"isShowNonRetailJobs\">\r\n                <label class=\"form-check-label\" for=\"inlineShowAsset\"> Show Locations with Assets</label>\r\n            </div>\r\n\r\n            <div class=\"mtm10\" *ngIf=\"isShowCarrierManaged\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\"\r\n                    [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 p-0\">\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedCarrierList\" [placeholder]=\"'Select Carrier'\"\r\n                            [settings]=\"multiselectSettingsById\" [data]=\"carrierList\" (onSelect)=\"carrierChanged()\"\r\n                            (onDeSelect)=\"carrierChanged()\" #selectedCarrier class=\"fs14\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-3 pt5\">\r\n            <!-- <ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\" [settings]=\"multiselectSettingsById\"\r\n                [placeholder]=\"'Select Region'\" [data]=\"Regions\" (onSelect)=\"onRegionChanged()\"\r\n                (onDeSelect)=\"onRegionChanged()\" (onSelectAll)=\"onRegionChanged()\" (onDeSelectAll)=\"onRegionChanged()\">\r\n            </ng-multiselect-dropdown> -->\r\n        </div>\r\n        <div class=\"col-3 pl0 text-right pt8\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\"  triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n                popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\" ><span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span></i>Filters</a>\r\n            <a class=\"hide_show_map fs14 dib mr10\" (click)=\"toggleMapView()\"><i class=\"fas fa-eye mr5\"></i>{{ toogleMap\r\n                == true ? 'Hide Map View' : 'Show Map View'}}</a>\r\n\r\n            \r\n            <!--<span *ngIf=\"isFilterOn()>0\" class=\"circle-badge\">{{isFilterOn()}}</span>-->\r\n\r\n            <!-- <div class=\"pull-right mr15\" (clickOutside)=\"clickOutsideDropdown()\">\r\n                <a class=\"fs14\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5 ml20\"></i> Filters</a>\r\n                <div class=\"locationfilter border mt5 bg-gray shadow-b z-index5 pa10\" *ngIf=\"toogleFilter\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\" (onSelect)=\"onCustomerChanged()\"\r\n                                (onDeSelect)=\"onCustomerChanged()\"\r\n                                [settings]=\"CustomerDdlSettings\" [placeholder]=\"'Select Customer'\"\r\n                                [data]=\"customerList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown  [(ngModel)]=\"SelectedlocationList\" \r\n                            [settings]=\"multiselectSettingsById\" [placeholder]=\"'Select Location'\" \r\n                            [data]=\"locationList\" >\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorityList\" [placeholder]=\"'Priority'\" [data]=\"priorityList\"\r\n                                [settings]=\"PriorityDdlSettings\" #selectedPriority>\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"SelectedStatusList\" [placeholder]=\"'Status'\" [data]=\"statusList\"\r\n                                [settings]=\"multiselectSettingsById\"  #selectedPriority>\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 \">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\" [placeholder]=\"'Inventory Capture Method'\" [data]=\"LocationAttributeList\"\r\n                            [settings]=\"multiselectSettingsById\">\r\n                        </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"pr\">\r\n    <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\r\n            class=\"spinner-dashboard pa\"></span></div>\r\n    <div class=\"animated clearboth mt60 row\" *ngIf=\"toogleMap\"\r\n        [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap}\">\r\n        <div [ngClass]=\"clickViewActive  ? 'col-sm-8 mb15' : 'col-sm-12 mb15'\">\r\n\r\n            <div class=\"pr\">\r\n                <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; bottom:0; left: 10px; font-size: 11px;\">\r\n                    <div id=\"status-legends\" class=\"well pa0\">\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pl5 pr5 pt8 pb5 radius-10 no-b-radius\">\r\n                                <img [src]=\"mustGoUrl\" data-statusid=\"11\">\r\n                                Must Go\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pa5\">\r\n                                <img [src]=\"shouldGoUrl\" data-statusid=\"12\">\r\n                                Should Go\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pa5\">\r\n                                <img [src]=\"couldGoUrl\" data-statusid=\"1\">\r\n                                Could Go\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pa5\">\r\n                                <img [src]=\"noDlrUrl\" data-statusid=\"1\">\r\n                                Unplanned\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div> -->\r\n                <agm-map [zoom]=\"zoomLevel\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\"\r\n                    [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\"\r\n                >\r\n                    <ng-container *ngFor=\"let jobLocation of jobLocationData\">\r\n                        <agm-marker [latitude]=\"jobLocation.Latitude\" [longitude]=\"jobLocation.Longitude\"\r\n                            [iconUrl]='{ \"url\": jobLocation.iconUrl, \"scaledSize\": { \"height\": 24, \"width\": 24 } }'\r\n                            (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\"\r\n                            (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\"\r\n                            (markerClick)=\"onInfoViewClick(jobLocation)\">\r\n                            <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                                <div>\r\n                                    <p><strong>{{ jobLocation.JobName}}</strong></p>\r\n                                    <p>{{jobLocation.CustomerName}}</p>\r\n                                </div>\r\n                            </agm-info-window>\r\n                        </agm-marker>\r\n                    </ng-container>\r\n                </agm-map>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-sm-4 pl0 right_side_panel\" *ngIf=\"clickViewActive\">\r\n            <div class=\"dib full-width pr well pa15 pt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div *ngIf=\"!this.opendedJobDetails.SiteImageFilePath\" class=\"color-maroon pull-left\"><i\r\n                                class=\"fas fa-image mr5\"></i> No image available</div>\r\n                        <a (click)=\"closeViewClicked()\" class=\"pull-right\"><i class=\"far fa-times-circle fa-lg\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <!--<img [src]=\"this.opendedJobDetails.SiteImageFilePath ? this.opendedJobDetails.SiteImageFilePath:noImageUrl\" alt=\"\" class=\"img-responsive\">-->\r\n                        <img *ngIf=\"this.opendedJobDetails.SiteImageFilePath\"\r\n                            [src]=\"this.opendedJobDetails.SiteImageFilePath\" class=\"img-responsive\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\" col-sm-12 driver_details\">\r\n                        <div class=\"job-location\">\r\n                            <p class=\"mb0\">\r\n                                <span class=\"address1\">\r\n                                    <i class=\"fas fa-briefcase\"></i> {{this.opendedJobDetails.JobName}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"job-location\">\r\n                            <p class=\"mb0\">\r\n                                <span class=\"address1\">\r\n                                    <i class=\"far fa-building\"></i> {{this.opendedJobDetails.CustomerName}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"job-location\">\r\n                            <p class=\"mb0\">\r\n                                <span class=\"address1\">\r\n                                    <i class=\"fas fa-map-marker-alt\"></i> {{this.opendedJobDetails.Address}},\r\n                                    {{this.opendedJobDetails.City}}, {{this.opendedJobDetails.State}},\r\n                                    {{this.opendedJobDetails.ZipCode}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"site-status fs12 mt5\">\r\n                            <div class=\"panel-group\">\r\n                                <div class=\"panel panel-default\">\r\n                                    <div class=\"panel-heading\">\r\n                                        <a data-toggle=\"collapse\" href=\"#collapse1\">\r\n                                            <span class=\"f-bold\">Site Availability:</span>\r\n                                            <span *ngIf=\"this.opendedJobDetails.SiteAvailabilityTotalDays\"\r\n                                                class=\"status  ml10\">OPEN</span>\r\n                                            <span\r\n                                                class=\"timing  ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>\r\n                                        </a>\r\n                                        <a data-toggle=\"collapse\" href=\"#collapse1\" class=\"pull-right\">\r\n                                            <i class=\"fas collapse1_icon fa-2x line-height_18 fa-angle-down\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div id=\"collapse1\" class=\"panel-collapse collapse\">\r\n                                        <div class=\"panel-body\">\r\n                                            <div class=\"date_time\"\r\n                                                *ngFor=\"let day of this.opendedJobDetails.SiteAvailabilityArray\">\r\n                                                <span class=\"day ml10\">{{day}} </span>\r\n                                                <span class=\"status ml10 text-success\">OPEN</span>\r\n                                                <span\r\n                                                    class=\"timing ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"!this.opendedJobDetails.SiteAvailabilityArray.length\">No Days\r\n                                                Available</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"site-instruction fs12 mb5\">\r\n                            <label class=\"f-bold db mb0\">Site Instruction: </label>\r\n                            <span class=\"instruction opacity8\">\r\n                                {{this.opendedJobDetails.SiteInstructions}}\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"site-contacts fs12 row mb5\">\r\n                            <div class=\"col-sm-3\">\r\n                                <label class=\"f-bold\">Contact(s):</label>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <p class=\"mb0 opacity8\">{{this.opendedJobDetails.ContactPersonName}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 site-assets\">\r\n                                <a class=\"btn btn-default pull-left ml0 fs12\"\r\n                                    (click)=\"onAssetsViewClick(this.opendedJobDetails.jobAssetDetails)\">{{this.opendedJobDetails.TotalCount}}\r\n                                    Tank(s)</a>\r\n                                <a (click)=\"onChartsViewClick(this.opendedJobDetails.jobAssetDetails)\"\r\n                                    class=\"btn btn-default pull-left fs12\">Demand Capture Trend </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"assets-panel dib full-width pr well pa15 pt10\" *ngIf=\"clickAssetsPanel\">\r\n                <div class=\"assets-header\">\r\n                    <div class=\"row mb5\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"pull-left\" (click)=\"closeAssetsClicked()\"> <i class=\"fas fa-arrow-left\"></i>\r\n                                Back</a>\r\n                            <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i\r\n                                    class=\"far fa-times-circle fa-lg\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"charts-panel dib full-width pr well pa15 pt10 z-index10\" *ngIf=\"clickChartsPanel\">\r\n                <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\r\n                        class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <a class=\"pull-left\" (click)=\"closeChartsClicked()\"> <i class=\"fas fa-arrow-left\"></i> Back</a>\r\n                        <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i class=\"far fa-times-circle fa-lg\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"charts-body\">\r\n                    <div style=\"width: 100%;height:50vh\">\r\n                        <div style=\"width: 100%;Tor-ulsd#2 tank\">\r\n                            <app-demand-capture-chart *ngIf=\"(isChartDataExistSubject | async)\"\r\n                                [data]=\"demandChartData\"></app-demand-capture-chart>\r\n                        </div>\r\n                        <!--<ng-template #noDtaAvailable>\r\n                            <div class=\"alert alert-danger\">\r\n                                No Data Available\r\n                            </div>\r\n                        </ng-template>-->\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" [ngClass]=\"toogleMap ? 'mt20' : 'mt60'\">\r\n        <div class=\"col-sm-12\">\r\n            <app-location-view [SelectedRegions]=\"SelectedRegions\" [SelectedCustomers]=\"SelectedCustomerList\"\r\n                [IsFilterLoaded]=\"IsFilterLoaded\" [SelectedLocations]=\"SelectedlocationList\"\r\n                [SelectedPriorities]=\"SelectedPriorityList\" [SelectedCarriers]=\"SelectedCarrierList\"\r\n                [IsShowCarrierManaged]=\"isShowCarrierManaged\" [SelectedStatus]=\"SelectedStatusList\"\r\n                [IsShowRetailJobs]=\"!isShowNonRetailJobs\" [selectedLocAttributeList]=\"selectedLocAttributeList\"\r\n                (getJobIdsForMap)=\"getJobIdsForMapEventHandler($event)\">Loading...\r\n            </app-location-view>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #assetDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n        [ngStyle]=\"{'display':modalDetails.display}\" id=\"assetDetailsModal\" tabindex=\"-1\" role=\"dialog\"\r\n        aria-labelledby=\"assetDetailsModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        Tank Details\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt10\" (click)=\"modalClose()\" aria-label=\"Close\"> <i\r\n                            class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>\r\n                <div class=\"modal-body\" style=\"max-height:80vh;overflow-y:scroll\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-container *ngTemplateOutlet=\"assetDetailsModal;context:assetsModal\">\r\n</ng-container>\r\n<ng-template #assetsContentTemplate let-assetNumber=\"assetIndex\">\r\n    <div class=\"aseets-body assets_modal\">\r\n        <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\r\n                class=\"spinner-dashboard pa\"></span></div>\r\n        <ul class=\"nav nav-tabs\">\r\n            <ng-container *ngFor=\"let asset of clickedAssetsDetails let indx=index\">\r\n                <li [ngClass]=\"{'active':assetDetails.assetIndex===indx}\"><a (click)=\"assetTabClicked(indx)\">Tank\r\n                        ({{indx+1}})</a></li>\r\n            </ng-container>\r\n        </ul>\r\n        <div class=\"tab-content pa0\">\r\n            <div id=\"assets1\" class=\"tab-pane fade in active animated fadeIn\">\r\n                <div class=\"row mb10 mt10\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div>\r\n                            <h2 class=\"mt0 mb0 pull-left fs16\">{{clickedAssetsDetails[assetNumber].AssetName}}</h2>\r\n                            <h2 class=\"mt0 mb0 pull-left fs16\"\r\n                                *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName && clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber \">\r\n                                &nbsp;(\r\n                                {{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName}}-{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber}}\r\n                                )</h2>\r\n                        </div>\r\n                        <a href=\"{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath}}\"\r\n                            target=\"_blank\" download\r\n                            *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath\"\r\n                            class=\"pull-right\">\r\n                            <i class=\"fa fa-download mr5\" aria-hidden=\"true\"></i>Download Dip Chart\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border radius-5 pa15 mb20\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType === 1\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                width=\"100%\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Product Type</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].ProductType}}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Capacity</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span\r\n                                                    *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{FuelUnit}}</span></span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"clickedAssetsDetails[assetNumber].AssetType===2\">\r\n                    <div class=\"border radius-5 pa15 tank-panel mb20\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"tank_dip_chart text-center mt10\">\r\n                                    <div>\r\n                                        <div id=\"ShouldBeEmptyPercent\" class=\"color-green\"\r\n                                            [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeEmptyPercent || 0}\">\r\n                                        </div>\r\n                                        <div id=\"ShouldBeFilledPercent\" class=\"color-green\"\r\n                                            [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeFilledPercent || 0}\">\r\n                                            {{selectedTankHeight.sbf_percent| number:'1.0-2'}}%</div>\r\n                                        <div id=\"CurrentInventoryPercent\" class=\"red-bg\"\r\n                                            [ngStyle]=\"{'height.px':selectedTankHeight.CurrentInventoryPercent || 0}\">\r\n                                            {{selectedTankHeight.ci_percent| number:'1.0-2'}}% </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <table\r\n                                    class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                    width=\"100%\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\" width=\"50%\">Storage ID </td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.StorageId}}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">Tank Type</td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].TankTypeName}}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">Product Type</td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TfxProductTypeName}}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">Tank Capacity</td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span\r\n                                                        *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{FuelUnit}}</span></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">\r\n                                                <span>Min Fill</span>\r\n                                                <span>&nbsp;({{selectedTankMinMax.MinFillPercent}}%)</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span>{{selectedTankMinMax.MinFill| number}} <span\r\n                                                        *ngIf=\"clickedAssetsDetails[assetNumber].MinFill\">{{FuelUnit}}</span></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">\r\n                                                <span>Max Fill</span>\r\n                                                <span>&nbsp;({{selectedTankMinMax.MaxFillPercent}}%)</span>\r\n                                            </td>\r\n                                            <td><span>{{selectedTankMinMax.MaxFill | number}} <span\r\n                                                        *ngIf=\"clickedAssetsDetails[assetNumber].MaxFill\">{{FuelUnit}}</span></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table table-condensed table-hover table-bordered small-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Last Reading</th>\r\n                                        <th>Ullage</th>\r\n                                        <th>Last Reading Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div\r\n                                                *ngIf=\"(latestReading?.NetVolume==-1 || latestReading?.NetVolume===undefined) else reading\">\r\n                                                NA</div>\r\n                                            <ng-template #reading>\r\n                                                {{(latestReading?.NetVolume | number)}} <span>{{FuelUnit}}</span>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                        <td><span>{{(latestReading?.Ullage| number) || 'NA'}}</span></td>\r\n                                        <td><span>{{(latestReading?.CaptureTimeString| date:'MM/dd/yyyy, hh:mm a':'UTC')\r\n                                                || 'NA'}}</span></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"assets-id\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType===2\">\r\n\r\n                    <p class=\"mb0\">\r\n                        <label class=\"f-bold\">Dip test value trend : </label>\r\n                    </p>\r\n                    <div style=\"width: 100%;max-height:320px\" *ngIf=\"chartData.length\">\r\n                        <canvas baseChart height=\"300\" style=\"margin:auto;\" [chartType]=\"'line'\" [datasets]=\"chartData\"\r\n                            [options]=\"chartOptions\" [labels]=\"chartLabels\" [legend]=\"true\"></canvas>\r\n                    </div>\r\n                    <div *ngIf=\"!chartData.length && !isLoading\" class=\"alert alert-danger\">\r\n                        No Data Available\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Region</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\" [settings]=\"multiselectSettingsById\"\r\n                        [placeholder]=\"'Select Region'\" [data]=\"Regions\"  (onSelect)=\"onRegionChanged()\"\r\n                        (onDeSelect)=\"onRegionChanged()\" (onSelectAll)=\"onRegionChanged()\" (onDeSelectAll)=\"onRegionChanged()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Customer</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\" [settings]=\"CustomerDdlSettings\"\r\n                        [placeholder]=\"'Select Customer'\" [data]=\"customerList\" (onSelect)=\"onCustomerChanged()\"\r\n                        (onDeSelect)=\"onCustomerChanged()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedlocationList\" [settings]=\"multiselectSettingsById\"\r\n                        [placeholder]=\"'Select Location'\" [data]=\"locationList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Prority</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorityList\" [placeholder]=\"'Priority'\"\r\n                        [settings]=\"PriorityDdlSettings\" [data]=\"priorityList\"  #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Status</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedStatusList\" [placeholder]=\"'Status'\"\r\n                        [settings]=\"multiselectSettingsById\" [data]=\"statusList\" #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\"\r\n                        [placeholder]=\"'Inventory Capture Method'\" \r\n                        [settings]=\"multiselectSettingsById\" [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\"  (click)=\"ResetFilters();\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set'); p.close();\"  class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>","import { Component, OnInit, ViewChildren, QueryList, SimpleChanges, Input, OnDestroy, OnChanges, ViewChild, AfterViewInit } from '@angular/core';\nimport { Subject, forkJoin, Subscription, merge } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel, DeliveryDetailsModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Declarations } from '../../../declarations.module';\nimport { DipTestComponent } from '../../../shared-components/dip-test/dip-test.component';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\nimport { FormGroup } from '@angular/forms';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-grid-view',\n    templateUrl: './grid-view.component.html',\n    styleUrls: ['./grid-view.component.css']\n})\nexport class GridViewComponent implements OnInit, OnDestroy {\n\n    public MustGoSchedules: any = [];\n    public ShouldGoSchedules: any = [];\n    public CouldGoSchedules: any = [];\n    public dtMustGoOptions: any = {};\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoTrigger: Subject<any> = new Subject();\n    public dtCouldGoTrigger: Subject<any> = new Subject();\n    public IsShouldGoLoading: boolean;\n    public IsCouldGoLoading: boolean;\n    public IsMustGoLoading: boolean;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTankRegionId: string;\n\n    public SelectedTank: SalesDataModel;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public ScheduleQuantityTypes: any = [];\n\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n\n    loadingData = false;\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[] = [];\n\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) {\n    }\n\n    ngOnInit() {\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n            this.bindPriorityArray();\n            this.getSalesData();\n        }));\n\n        //to load data - after second ngOnInit\n        if(this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').value){\n            this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(false);\n            this.bindPriorityArray();\n            this.getSalesData();\n        }\n\n        this.init();\n        this.getScheduleQuantityType();\n    }\n\n    init() {\n        this.initializeMustGo();\n        this.initializeCouldGo();\n        this.initializeShouldGo();\n        // this.getSalesData();\n    }\n    getScheduleQuantityType() {\n        this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n\n\n\n    ngOnDestroy(): void {\n        this.dtCouldGoTrigger.unsubscribe();\n        this.dtShouldGoTrigger.unsubscribe();\n        this.dtMustGoTrigger.unsubscribe();\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n\n    columnsDetails = [\n        { data: 'Cust', \"autoWidth\": true },\n        { data: 'LocName', \"autoWidth\": true },\n        { data: 'Loc', \"autoWidth\": true },\n        { data: 'TName', \"autoWidth\": true },\n        { data: 'Avg7Day', \"autoWidth\": true },\n        { data: 'PDS', \"autoWidth\": true },\n        { data: 'CI', \"autoWidth\": true },\n        { data: 'Ullg', \"autoWidth\": true },\n        { data: 'lastDelivery', \"autoWidth\": true },\n        { data: 'lastDeliveryQty', \"autoWidth\": true },\n        { data: 'DRemg', \"autoWidth\": true }\n    ];\n\n    initializeMustGo() {\n\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtMustGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-MustGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-MustGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            // columns: this.columnsDetails,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                {\n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n    initializeCouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtCouldGoOptions = {\n            colReorder: true,\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-CouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-CouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            // columns: this.columnsDetails,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                {\n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n    initializeShouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtShouldGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-ShouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-ShouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            // columns: this.columnsDetails,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                {\n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n\n    }\n\n    getSalesDtls() {\n        let inputs = {\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n            Priority: DeliveryReqPriority.None,\n            CustomerId: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            LocationId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedlocationList').value),\n            SelectedTab: SelectedTabEnum.Priority,\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            IsShowRetailJobs: ''\n        };\n        this.IsShouldGoLoading = true;\n        this.IsCouldGoLoading = true;\n        this.IsMustGoLoading = true;\n\n        forkJoin([this.dispatcherService.getSalesData(inputs),\n        this.dispatcherService.GetRaisedExceptions()])\n            .subscribe(async (resp) => {\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                this.ShouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.ShouldGo && t.Inventory != '--') as SalesDataModel[];\n                this.CouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.CouldGo && t.Inventory != '--') as SalesDataModel[];\n                this.MustGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.MustGo && t.Inventory != '--') as SalesDataModel[];\n                this.destroyDatatable();\n                this.IsShouldGoLoading = false;\n                this.IsCouldGoLoading = false;\n                this.IsMustGoLoading = false;\n                this.dtCouldGoTrigger.next();\n                this.dtShouldGoTrigger.next();\n                this.dtMustGoTrigger.next();\n\n            });\n    }\n\n    filterData(): void {\n        this.getSalesData();\n    }\n\n    getSalesData(): void {\n        // let _priorities = []; \n        // this.SelectedPriorities.forEach(x => _priorities.push(x.Id));\n        // this.SelectedPrioritiesId = _priorities;\n        this.IsCouldGoLoading = true;\n        this.IsShouldGoLoading = true;\n        this.IsMustGoLoading = true;\n        //this.destroyDatatable();\n\n        this.getSalesDtls();\n    }\n\n    destroyDatatable(): void {\n        if (this.dtElements) {\n            this.dtElements.forEach((dtElement: DataTableDirective) => {\n                if (dtElement.dtInstance) {\n                    dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                        dtInstance.destroy();\n\n                    });\n                }\n            });\n        }\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n        //this.MaxFillQuantity = 120;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n        this.validateMsg = \"\";\n        this.isValid = true;\n    }\n\n    public showTanks(row: SalesDataModel) {\n        this.SelectedTankRegionId = row.RegionId;\n        this.dipTestComponent.loadTankDR(row);\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n    public onDrSubmit() {\n        this.validateMsg = \"\";\n        this.isValid = true;\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (this.RequiredQuantity == null || this.RequiredQuantity == 0 || this.RequiredQuantity < 0.00001)) {\n            this.validateMsg = \"Invalid required quantity.\"; this.isValid = false;\n        }\n        else if (this.ScheduleQuantityType == 1 && this.SelectedTank.MaxFillQuantity && this.SelectedTank.MaxFillQuantity > 0 && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity) {\n            this.validateMsg = \"Should not exceed max fill. (\" + this.SelectedTank.MaxFillQuantity + \")\"; this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.dispatcherService.PostRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                    this.closeModal();\n\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.DRLoader = false;\n            });\n        }\n    }\n\n    SelectedPrioritiesId: number[] = []\n    bindPriorityArray() {\n        this.SelectedPrioritiesId = [];\n        let SelectedPriorities = this.salesTabFilterForm.get('SelectedPriorities').value as any[];\n        SelectedPriorities.forEach(res => { this.SelectedPrioritiesId.push(res.Id) });\n    }\n}\n\n","<div class=\"row mt60\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div *ngIf=\"SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(1) > -1\">\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-salemustgo\" class=\"table table-bordered table-hover\" datatable\r\n                                [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsMustGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of MustGoSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}} \r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate=='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\"\r\n                                                (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n                                                data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\"\r\n                                                    data-target=\"raisedr\"\r\n                                                    onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(2) > -1\">\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                            <table id=\"table-saleshouldgo\" class=\"table table-bordered table-hover\" datatable\r\n                                [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name </th>\r\n                                        <th data-key=\"WL\">Water Level  </th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsShouldGoLoading\"\r\n                                        class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of ShouldGoSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\"\r\n                                                (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n                                                data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\"\r\n                                                    data-target=\"raisedr\"\r\n                                                    onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(3) > -1\">\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                            <table id=\"table-salecouldgo\" class=\"table table-bordered table-hover\" datatable\r\n                                [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsCouldGoLoading\"\r\n                                        class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of CouldGoSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                class=\"active-dot\"></span>\r\n                                            <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"  *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\"\r\n                                                (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n                                                data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\"\r\n                                                    data-target=\"raisedr\"\r\n                                                    onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"IsMustGoLoading || IsShouldGoLoading || IsCouldGoLoading\"\r\n            class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n    </div>\r\n</div>\r\n\r\n<ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n</ng-container>\r\n\r\n<ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n        [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n        aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt10 pb5 no-border\">\r\n                    <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{modalDetails.title}}\r\n                    </h3>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\"> <i\r\n                            class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h3>Create DR</h3>\r\n                                </div>\r\n                                <div class=\"row col-sm-12\">\r\n                                    <div class=\"col-sm-3 input-group\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity Type</label>\r\n                                            <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\"\r\n                                                (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                <option *ngFor=\"let sqType of ScheduleQuantityTypes\"\r\n                                                    [value]=\"sqType.Id\">\r\n                                                    {{sqType.Name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                    [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                    class=\"form-control\" (change)=\"validateMsg=''\" required />\r\n                                                <div class=\"invalid-feedback\" [ngClass]=\"{'show-element': !isValid}\">\r\n                                                    {{validateMsg}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 mt5\">\r\n                                        <label>Priority</label>\r\n                                        <div class=\"col-sm-12 pa0 mt5\">\r\n                                            <div class=\"form-check form-check-inline \">\r\n                                                <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                    [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline \">\r\n                                                <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                    [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                <label class=\"form-check-label\" for=\"shouldgo-dr\"> Should Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                    [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                <label class=\"form-check-label\" for=\"couldgo-dr\"> Could Go</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 text-right mt10\">\r\n                                    <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                        class=\"btn btn-primary btn-lg\">Create</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div *ngIf=\"ExistingDeliveries.length\">\r\n                            <!--<a (click)=\"showDr = !showDr\">Existing Delivery Request(s)</a>\r\n                                <div *ngIf=\"showDr\">\r\n                                    <table class=\"table table-hover margin bottom details-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Quantity</th>\r\n                                                <th>Schedule Date</th>\r\n                                                <th>Schedule Time</th>\r\n                                                <th>Driver</th>\r\n                                                <th>Carrier</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                <td>{{del.Quantity}}</td>\r\n                                                <td>{{del.ScheduleDate}}</td>\r\n                                                <td>{{del.ScheduleTime}}</td>\r\n                                                <td>{{del.Driver}}</td>\r\n                                                <td>{{del.Carrier}}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>-->\r\n                            <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button\r\n                                                class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                Existing Delivery Request(s)\r\n                                                <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                    <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                    <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                </span>\r\n                                            </button>\r\n                                        </h2>\r\n\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" class=\"collapse\"\r\n                                        [ngClass]=\"{'show': modalDetails.IsScheduled}\" aria-labelledby=\"headingOne\"\r\n                                        data-parent=\"#accordionExitingDrReq\">\r\n                                        <div class=\"card-body pa5\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover margin bottom details-table \">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Schedule Date</th>\r\n                                                            <th>Schedule Time</th>\r\n                                                            <th>Driver</th>\r\n                                                            <th>Carrier</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                            <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}\r\n                                                            </td>\r\n                                                            <td>{{del.ScheduleDate}}</td>\r\n                                                            <td>{{del.ScheduleTime}}</td>\r\n                                                            <td>{{del.Driver}}</td>\r\n                                                            <td>{{del.Carrier}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\"\r\n        [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, SimpleChanges, Input, OnDestroy, OnChanges, ViewChild, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { Subject, forkJoin } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel, DeliveryDetailsModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Declarations } from '../../../declarations.module';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { DipTestComponent } from '../../../shared-components/dip-test/dip-test.component';\nimport { LocationFilterModal } from '../../dispatcher.model';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-location-view',\n    templateUrl: './location-view.component.html',\n    styleUrls: ['./location-view.component.css']\n})\nexport class LocationViewComponent implements OnInit, OnChanges, OnDestroy {\n    public LocationSchedules: any = [];\n    IsLoading = false;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTank: SalesDataModel;\n    public dtTrigger: Subject<any> = new Subject();\n    public dtOptions: any = {};\n    SelectedPrioritiesId: any = [];\n    public SelectedRegionId: string;\n    public SelectedTankRegionId: string;\n    public SelectedCustomerId: string;\n    public SelectedLocationId: string;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public IsDataLoaded: boolean = false;\n    public ScheduleQuantityTypes: any = [];\n    @Input() public IsFilterLoaded: boolean = false;\n    @Input() public SelectedCustomers = [];\n    @Input() public SelectedLocations = [];\n    @Input() public SelectedRegions = [];\n    @Input() public SelectedPriorities = [];\n    @Input() public SelectedCarriers = [];\n    @Input() public IsShowCarrierManaged: boolean = false;\n    @Input() public SelectedStatus = [];\n    @Input() public IsShowRetailJobs: boolean = false;\n    @Input() selectedLocAttributeList = [];\n    @Output() getJobIdsForMap: EventEmitter<any[]> = new EventEmitter<any[]>();\n    public SelectedStatusId: string;\n    public selectedLocAttributeId: string;\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    SelectedCarrierIds: string;\n    constructor(private dispatcherService: DispatcherService, private carrierService: CarrierService) {\n    }\n\n    ngOnInit() {\n        this.initializeGrid();\n        this.getScheduleQuantityType();\n        // this.getSalesData();\n\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        var isFilterData = false;\n        // if (change.IsFilterLoaded && change.IsFilterLoaded.currentValue) {\n        //     this.IsFilterLoaded = change.IsFilterLoaded.currentValue;\n        // }\n        // if (change.SelectedRegions && change.SelectedRegions.currentValue) {\n        //     this.SelectedRegions = change.SelectedRegions.currentValue;\n        //     var ids = [];\n        //     this.SelectedRegionId = '';\n        //     this.SelectedRegions.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedRegionId = ids.join();\n        //     if (change.SelectedRegions.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedRegions.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousRegionIds = previousIds.join();\n        //         if (this.SelectedRegionId != previousRegionIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.SelectedCustomers && change.SelectedCustomers.currentValue) {\n        //     this.SelectedCustomers = change.SelectedCustomers.currentValue;\n        //     var ids = [];\n        //     this.SelectedCustomerId = '';\n        //     this.SelectedCustomers.forEach(res => { ids.push(res.CompanyId) });\n        //     this.SelectedCustomerId = ids.join();\n        //     if (change.SelectedCustomers.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedCustomers.previousValue.forEach(res => { previousIds.push(res.CompanyId) });\n        //         var previousCustomerIds = previousIds.join();\n        //         if (this.SelectedCustomerId != previousCustomerIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.SelectedLocations && change.SelectedLocations.currentValue) {\n        //     this.SelectedLocations = change.SelectedLocations.currentValue;\n        //     var ids = [];\n        //     this.SelectedLocationId = '';\n        //     this.SelectedLocations.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedLocationId = ids.join();\n        //     if (change.SelectedLocations.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedLocations.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousLocationIds = previousIds.join();\n        //         if (this.SelectedLocationId != previousLocationIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        if (change.IsShowCarrierManaged && change.IsShowCarrierManaged.currentValue != change.IsShowCarrierManaged.previousValue) {\n            this.IsShowCarrierManaged = change.IsShowCarrierManaged.currentValue;\n            isFilterData = true;\n        }\n        if (change.SelectedCarriers && change.SelectedCarriers.currentValue) {\n            this.SelectedCarriers = change.SelectedCarriers.currentValue;\n            var ids = [];\n            this.SelectedCarrierIds = '';\n            this.SelectedCarriers.forEach(res => { ids.push(res.Id) });\n            this.SelectedCarrierIds = ids.join();\n            if (change.SelectedCarriers.previousValue) {\n                var previousIds = [];\n                change.SelectedCarriers.previousValue.forEach(res => { previousIds.push(res.Id) });\n                var previousCarrierIds = previousIds.join();\n                if (this.SelectedCarrierIds != previousCarrierIds) {\n                    isFilterData = true;\n                }\n            } else {\n                isFilterData = true;\n            }\n        }\n        // if (change.SelectedStatus && change.SelectedStatus.currentValue) {\n        //     this.SelectedStatus = change.SelectedStatus.currentValue;\n        //     var ids = [];\n        //     this.SelectedStatusId = '';\n        //     this.SelectedStatus.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedStatusId = ids.join();\n        //     if (change.SelectedStatus.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedStatus.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousStatusIds = previousIds.join();\n        //         if (this.SelectedStatusId != previousStatusIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.SelectedPriorities && change.SelectedPriorities.currentValue) {\n        //     this.SelectedPriorities = change.SelectedPriorities.currentValue;\n        //     var ids = [];\n        //     this.SelectedPrioritiesId = '';\n        //     this.SelectedPriorities.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedPrioritiesId = ids.join();\n        //     if (change.SelectedPriorities.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedPriorities.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousPriorityIds = previousIds.join();\n        //         if (this.SelectedPrioritiesId != previousPriorityIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.selectedLocAttributeList && change.selectedLocAttributeList.currentValue) {\n        //     var selectedLocAttributeList = change.selectedLocAttributeList.currentValue;\n        //     var ids = [];\n        //     this.selectedLocAttributeId = '';\n        //     selectedLocAttributeList.forEach(res => { ids.push(res.Id) });\n        //     this.selectedLocAttributeId = ids.join();\n        //     if (change.selectedLocAttributeList.previousValue) {\n        //         var previousIds = [];\n        //         change.selectedLocAttributeList.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousLocAttributeIds = previousIds.join();\n        //         if (this.selectedLocAttributeId != previousLocAttributeIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        if (change.IsShowRetailJobs && change.IsShowRetailJobs.currentValue != change.IsShowRetailJobs.previousValue) {\n            this.IsShowRetailJobs = change.IsShowRetailJobs.currentValue;\n            isFilterData = true;\n        }\n        if ((isFilterData || !this.IsDataLoaded) && this.IsFilterLoaded) {\n            this.IsDataLoaded = true;\n            this.getSalesData();\n        }\n    }\n\n\n    ngOnDestroy(): void {\n        if(this.dtTrigger)\n        this.dtTrigger.unsubscribe();\n    }\n    // regionChanged(event?: any): void {\n    //     this.filterData();\n    // }\n\n    // public onRegionSelect() {\n    //     var ids = [];\n    //     this.SelectedRegionId = '';\n    //     this.SelectedRegions.forEach(res => { ids.push(res.Id) });\n    //     this.SelectedRegionId = ids.join();\n    //     this.regionChanged();\n\n    // }\n\n    // customerChanged(): void {\n    //     this.filterData();\n    // }\n\n    // onPrioritySelect(event: any): void {\n    //     this.filterData();\n    // }\n\n    // onPriorityUnselect(event: any): void {\n    //     this.filterData();\n    // }\n\n    // filterData(): void {\n    //     this.getSalesData();\n    // }\n\n    getScheduleQuantityType() {\n        this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            fixedHeader: false,\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n\n    public getSalesData() {\n        let inputs = {\n            RegionId: this.SelectedRegionId,\n            Priority: this.SelectedPrioritiesId,\n            CustomerId: this.SelectedCustomerId,\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Location,\n            Carriers: this.SelectedCarrierIds,\n            IsShowCarrierManaged: this.IsShowCarrierManaged,\n            IsShowRetailJobs: this.IsShowRetailJobs,\n            InventoryCaptureType: this.selectedLocAttributeId\n        };\n        this.IsLoading = true;\n        forkJoin([this.dispatcherService.getSalesData(inputs),\n        this.dispatcherService.GetRaisedExceptions()])\n            .subscribe(async (resp) => {\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                if (this.SelectedStatus && this.SelectedStatus.length && resp[0]) {\n                    resp[0] = resp[0].filter(t => this.SelectedStatusId.includes(t.Status))\n                }\n                this.LocationSchedules = resp[0];\n                this.passJobIdsToMapData();\n                this.IsLoading = false;\n                this.datatableRerender();\n            });\n\n        // this.dispatcherService.getSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\n        //   this.LocationSchedules = resp;\n        //   this.IsLoading = false;\n        //   this.datatableRerender();\n        // });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n        }\n        this.dtTrigger.next();\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n        //this.MaxFillQuantity = 120;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n        this.validateMsg = \"\";\n        this.isValid = true;\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n\n    public onDrSubmit() {\n        this.validateMsg = \"\";\n        this.isValid = true;\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (!(this.RequiredQuantity > 0) || this.RequiredQuantity < 0.00001)) {\n            this.validateMsg = \"Invalid required quantity.\"; this.isValid = false;\n        }\n        else if (this.ScheduleQuantityType == 1 && this.SelectedTank.MaxFillQuantity && this.SelectedTank.MaxFillQuantity > 0 && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity) {\n            this.validateMsg = \"Should not exceed max fill. (\" + this.SelectedTank.MaxFillQuantity + \")\"; this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.dispatcherService.PostRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.DRLoader = false;\n                this.closeModal();\n            });\n        }\n    }\n\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n\n    public showTanks(row: SalesDataModel) {\n        this.SelectedTankRegionId = row.RegionId;\n        this.dipTestComponent.loadTankDR(row);\n    }\n\n    public passJobIdsToMapData() {\n        var jobsPriority = [];\n        if (this.LocationSchedules) {\n            this.LocationSchedules.forEach(res => {\n                if (!jobsPriority.find(t => t.TfxJobId == res.TfxJobId)) {\n                    jobsPriority.push({ TfxJobId: res.TfxJobId, Priority: res.Priority })\n                }\n            });\n            this.getJobIdsForMap.emit(jobsPriority);\n        } else {\n            this.getJobIdsForMap.emit(jobsPriority);\n        }\n    }\n\n    public applyFilters(locationFilterModal:LocationFilterModal){\n        if(locationFilterModal){\n            this.SelectedRegionId = locationFilterModal.SelectedRegionId;\n            this.SelectedCustomerId = locationFilterModal.SelectedCustomerId;\n            this.SelectedLocationId = locationFilterModal.SelectedLocationId;\n            this.SelectedStatusId = locationFilterModal.SelectedStatusId;\n            this.SelectedPrioritiesId = locationFilterModal.SelectedPrioritiesId;\n            this.selectedLocAttributeId = locationFilterModal.selectedLocAttributeId;\n            this.getSalesData();\n        }\n    }\n}","<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div>\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Location View</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-Locationmustgo\" class=\"table table-bordered table-hover\" datatable\r\n                                   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank/Asset Name</th>\r\n                                        <th data-key=\"WaterLevel\">WaterLevel</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>                                       \r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of LocationSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span>\r\n                                                                     <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"  *ngIf=\"(row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0 && this.IsShowRetailJobs)\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>\r\n                                            {{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}}\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>                                     \r\n                                       \r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n</ng-container>\r\n\r\n<ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n         [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n         aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt10 pb5 no-border\">\r\n                    <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{modalDetails.title}}\r\n                    </h3>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fa-lg\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h3 class=\"fs14 font-bold\">Create DR</h3>\r\n                                </div>\r\n                                <div class=\"row col-sm-12\">\r\n                                    <div class=\"col-sm-3 input-group\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity Type</label>\r\n                                            <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\" (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                    {{sqType.Name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" name=\"RequiredQuantity\"\r\n                                                       [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                       [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                       (change)=\"validateMsg='';\"\r\n                                                       class=\"form-control\" required />\r\n                                                <div class=\"invalid-feedback\"\r\n                                                     [ngClass]=\"{'show-element': !isValid}\">\r\n                                                    {{validateMsg}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 mt5\">\r\n                                        <label>Priority</label>\r\n                                        <div class=\"col-sm-12 pa0 mt5\">\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                <label class=\"form-check-label\" for=\"shouldgo-dr\">\r\n                                                    Should\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                <label class=\"form-check-label\" for=\"couldgo-dr\">\r\n                                                    Could\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 text-right mt10 \">\r\n                                    <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                            class=\"btn btn-primary btn-lg\">\r\n                                        Create\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div *ngIf=\"ExistingDeliveries.length\">\r\n                            <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                    type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                    aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                Existing Delivery Request(s)\r\n                                                <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                    <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                    <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                </span>\r\n                                            </button>\r\n                                        </h2>\r\n\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" class=\"collapse\"\r\n                                         [ngClass]=\"{'show':modalDetails.IsScheduled}\"\r\n                                         aria-labelledby=\"headingOne\" data-parent=\"#accordionExitingDrReq\">\r\n                                        <div class=\"card-body pa5\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover margin bottom details-table\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Schedule Date</th>\r\n                                                            <th>Schedule Time</th>\r\n                                                            <th>Driver</th>\r\n                                                            <th>Carrier</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                            <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}</td>\r\n                                                            <td>{{del.ScheduleDate}}</td>\r\n                                                            <td>{{del.ScheduleTime}}</td>\r\n                                                            <td>{{del.Driver}}</td>\r\n                                                            <td>{{del.Carrier}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { TfxModule } from '../../../buyer-wally-board/Models/BuyerWallyBoard';\nimport { GridViewComponent } from './grid-view.component';\nimport { TankViewMasterComponent } from './tank-view-master.component';\nimport { Declarations } from 'src/app/declarations.module';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\nimport { InventoryDataCaptureList, LoadPriorities } from 'src/app/app.constants';\nimport { SalesTabViewType } from 'src/app/app.enum';\n\n\n@Component({\n    selector: 'app-sales-data',\n    templateUrl: './sales-data.component.html',\n    styleUrls: ['./sales-data.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SalesDataComponent implements OnInit {\n    public toogleMap: Boolean = true;\n    public toogleFilter: Boolean = false;\n    public toogleDriver: Boolean = false;\n    public toogleGrid: Boolean = false;\n    public toogleExpandMap: Boolean = false;\n    public RegionDdlSettings: any = {};\n    public CustomerDdlSettings: any = {};\n    public Regions: DistatcherRegionModel[] = [];\n    public customerList = [];\n    public locationList = [];\n    public loadingData: boolean = true;\n    public PriorityDdlSettings: any = {};\n    public CarrierDdlSettings: any = {};\n    public LoadPriorities: any = LoadPriorities;\n    public carrierList: any[] = [];\n\n    LocationAttributeList = InventoryDataCaptureList;\n    public filterCount: number = 0;\n\n    //filter form\n    salesTabFilterForm: FormGroup;\n\n    get _selectedlocationList() { return this.salesTabFilterForm.get('SelectedlocationList').value as any[]; }\n    get _selectedCustomerList() { return this.salesTabFilterForm.get('SelectedCustomerList').value as any[]; }\n    get _selectedRegions() { return this.salesTabFilterForm.get('SelectedRegions').value as any[]; }\n    get _selectedPriorities() { return this.salesTabFilterForm.get('SelectedPriorities').value as any[]; }\n    get _selectedLocAttributeList() { return this.salesTabFilterForm.get('SelectedLocAttributeList').value as any[]; }\n    get _selectedCarriers() { return this.salesTabFilterForm.get('SelectedCarriers').value as any[]; }\n    \n    constructor(private dispatcherService: DispatcherService, private carrierService: CarrierService, private wallyUtilService: WallyUtilService) { \n        this.salesTabFilterForm = this.wallyUtilService.getSalesTabFilterForm();\n    }\n\n    ngOnInit() {\n        this.init();       \n    }\n\n    init() {\n        this.RegionDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.CustomerDdlSettings = {\n            singleSelection: false,\n            idField: 'CompanyId',\n            textField: 'CompanyName',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n\n        this.PriorityDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.CarrierDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.getRegions();\n        this.getCarriers();\n        this.GetFilters();\n    }\n    clickOutsideDropdown() {\n        if (this.toogleFilter) {\n            this.toogleFilter = false;\n        }\n    }\n    public toggleFilterView() {\n        this.toogleFilter = !this.toogleFilter;\n    }\n\n    regionChanged(): void {\n        let _rgnIds = this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value)\n        if (_rgnIds)\n            this.getCustomerListByRegionId(_rgnIds);\n        else\n            this.initAllCustomers();\n    }\n\n    private getCustomerListByRegionId(SelectedRegionId: string, isShowAllLoc?: boolean) {\n\n        this.loadingData = true;\n        this.carrierService.getJobListForCarrier(SelectedRegionId, this.salesTabFilterForm.get('IsShowCarrierManaged').value, this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value)).subscribe(response => {\n            this.loadingData = false;\n            this.customerList = response;\n            let SelectedCustomerList = this._selectedCustomerList.filter(t => { return this.customerList.filter(el => el.CompanyId == t.CompanyId).length > 0 });\n            this.salesTabFilterForm.get('SelectedCustomerList').setValue(SelectedCustomerList || []);\n            if (isShowAllLoc)\n                this.initAllLocation()\n        });\n    }\n\n    getCarriers() {\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\n            this.carrierList = data;\n        });\n    }\n    public getRegions() {\n        this.dispatcherService.GetDispatcherRegions().subscribe(data => {\n            this.Regions = data;\n            this.initAllCustomers();\n        });\n    }\n\n    private initAllCustomers() {\n        this.getCustomerListByRegionId(this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value), true);\n    }\n    private initAllLocation() {\n\n        this.locationList = [];\n        this.customerList.forEach(res => {\n            this.locationList = this.locationList.concat(res.Jobs);\n        });\n\n        let SelectedlocationList = this._selectedlocationList.filter(t => { return this.locationList.filter(el => el.JobID == t.JobID).length > 0 });\n        this.salesTabFilterForm.get('SelectedlocationList').setValue(SelectedlocationList || []);\n    }\n\n    public onCustomerSelect() {\n\n        if (this._selectedCustomerList && this._selectedCustomerList.length > 0) {\n            this._selectedCustomerList.forEach(res => {\n\n                let _cust = this.customerList.find(f => f.CompanyId == res.CompanyId);\n                if(_cust && _cust.Jobs){\n                    this.locationList = this.locationList.concat(_cust.Jobs);\n                }\n            });\n\n            let SelectedlocationList = this._selectedlocationList.filter(t => { return this.locationList.filter(el => el.JobID == t.JobID).length > 0 });\n            this.salesTabFilterForm.get('SelectedlocationList').setValue(SelectedlocationList || []);\n        }\n        else {\n            this.initAllLocation();\n        }\n    }\n\n    public onCarrierChange() {\n        this.getCustomerListByRegionId(this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value), true);\n        this.ApplyFilters();\n        this.SaveFilters(true);\n    }\n    public ShowCarrierMangedData() {\n        this.salesTabFilterForm.get('SelectedCarriers').setValue([]);\n        this.salesTabFilterForm.get('SelectedRegions').setValue([]);\n        this.getCustomerListByRegionId(this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value), true);      \n         this.ApplyFilters();\n         this.SaveFilters(true);\n    }\n\n\n    public SaveFilters(isTopFilter?:boolean) {\n        var filterData = {};\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardSales).subscribe(res => {\n            var input : any\n            if (res || res==\"\") {\n                if(res !=\"\")\n                {\n                    input= JSON.parse(res);   \n                    filterData= input;     \n                }\n                                \n                if(isTopFilter){ \n                    filterData['isShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    filterData['SelectedCarriers'] = this._selectedCarriers;                  \n                }else{\n\n                    filterData['SelectedRegions'] = this._selectedRegions || [];\n                    filterData['SelectedCustomerList'] = this._selectedCustomerList || [];\n                    filterData['SelectedlocationList'] = this._selectedlocationList || [];\n                    filterData['SelectedPriorities'] = this._selectedPriorities || [];\n                    filterData['selectedLocAttributeList'] = this._selectedLocAttributeList || [];                    \n                    filterData['isShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    filterData['SelectedCarriers'] = this._selectedCarriers;\n                }\n                this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardSales, JSON.stringify(filterData)).subscribe();\n            }            \n        });\n    }\n\n    public GetFilters() {\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardSales).subscribe(res => {\n            if (res && res.length > 0) {\n                this.SetFilters(res);\n            }\n        });\n    }\n\n    public SetFilters(input: any) {\n\n        var filterData = JSON.parse(input);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue(filterData.SelectedlocationList || []);\n        this.salesTabFilterForm.get('SelectedCustomerList').setValue(filterData.SelectedCustomerList || []);\n        this.salesTabFilterForm.get('SelectedRegions').setValue(filterData.SelectedRegions || []);\n        this.salesTabFilterForm.get('SelectedPriorities').setValue(filterData.SelectedPriorities || []);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue(filterData.selectedLocAttributeList || []);\n        this.salesTabFilterForm.get('SelectedCarriers').setValue(filterData.SelectedCarriers || []);\n        this.salesTabFilterForm.get('IsShowCarrierManaged').setValue(filterData.isShowCarrierManaged);\n\n        this.ApplyFilters();\n\n        if (this._selectedRegions && this._selectedRegions.length > 0) {\n            this.regionChanged();\n        }\n        else if (this._selectedCustomerList && this._selectedCustomerList.length > 0) {\n            this.onCustomerSelect();\n        }\n    }\n\n    public ResetFilters(){\n        this.salesTabFilterForm.get('SelectedRegions').setValue([]);\n        this.salesTabFilterForm.get('SelectedCustomerList').setValue([]);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue([]);\n        this.salesTabFilterForm.get('SelectedPriorities').setValue([]);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue([]);\n\n        this.ApplyFilters('reset');\n    }\n\n    public ApplyFilters(msg?: string) {\n\n        this.salesTabFilterForm.get('IsApplyFilter').setValue(true);\n\n        if (msg == \"set\") {\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\n        } else if (msg == \"reset\") {\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\n        }\n\n        this.setFilterCount();\n    }\n\n    setFilterCount() {\n        this.filterCount = 0;\n\n        if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.PriorityTab) {\n\n            this.filterCount += this._selectedRegions.length;\n            this.filterCount += this._selectedCustomerList.length;\n            this.filterCount += this._selectedlocationList.length;\n            this.filterCount += this._selectedPriorities.length;\n            this.filterCount += this._selectedLocAttributeList.length;\n        }\n        else if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.TanksTab) {\n\n            this.filterCount += this._selectedRegions.length;\n            this.filterCount += this._selectedCustomerList.length;\n            this.filterCount += this._selectedLocAttributeList.length;\n        }\n\n    }\n    salesViewTypeChanged(type: SalesTabViewType) {\n        this.salesTabFilterForm.get('SalesViewType').setValue(type);\n        this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(true);\n        this.setFilterCount();\n    }\n}\n","<div class=\"col-sm-9 sticky-header-sales\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"dib border pa5 radius-capsule shadow-b pull-left mb10\">\r\n                <div class=\"btn-group btn-filter\">\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"1\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==1\" />\r\n                    <label class=\"btn ml0\" (click)=\"salesViewTypeChanged(1)\">Priority</label>\r\n\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"2\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==2\" />\r\n                    <label class=\"btn\" (click)=\"salesViewTypeChanged(2);\">Tanks</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\" [formGroup]=\"salesTabFilterForm\">\r\n            <div class=\"form-check form-check-inline fs14 mt10\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" name=\"IsShowCarrierManaged\"\r\n                    formControlName=\"IsShowCarrierManaged\" (change)=\"ShowCarrierMangedData()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"mtm5\" *ngIf=\"salesTabFilterForm.get('IsShowCarrierManaged').value\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\"\r\n                    [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 mb10 p-0\">\r\n                        <ng-multiselect-dropdown formControlName=\"SelectedCarriers\" *ngIf=\"salesTabFilterForm.get('IsShowCarrierManaged').value\"\r\n                            [settings]=\"CarrierDdlSettings\" [placeholder]=\"'Select Carrier'\" [data]=\"carrierList\"\r\n                            (onSelect)=\"onCarrierChange()\" (onDeSelect)=\"onCarrierChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class=\"col pt5\">\r\n            <!--<ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\" [settings]=\"RegionDdlSettings\"\r\n                [placeholder]=\"'Select Region'\" [data]=\"Regions\" (onSelect)=\"onRegionSelect($event)\"\r\n                (onDeSelect)=\"onRegionUnselect($event)\" (onSelectAll)=\"onAllRegionSelect($event)\"\r\n                (onDeSelectAll)=\"onAllRegionDeSelect($event)\">\r\n            </ng-multiselect-dropdown>-->\r\n        </div>\r\n        <div class=\"col pl0 text-right pt8\"> <!--(clickOutside)=\"clickOutsideDropdown()\">-->\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i> Filters</a>\r\n            <!--<a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>-->\r\n            <!--<div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n        <div class=\"pull-right\">\r\n            <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 mb15\">\r\n                         <select class=\"form-control\" (change)=\"customerChanged($event)\">\r\n                            <option [value]=null>Select Customer</option>\r\n                            <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\"\r\n                                [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                                {{customer.CompanyName}}\r\n                            </option>\r\n                        </select>\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\"\r\n                            [settings]=\"CustomerDdlSettings\" [placeholder]=\"'Select Customer'\"\r\n                            [data]=\"customerList\" (onSelect)=\"onCustomerSelect()\"\r\n                            (onDeSelect)=\"onCustomerSelect()\" (onSelectAll)=\"onCustomerSelect()\"\r\n                            (onDeSelectAll)=\"onCustomerSelect()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb15\" *ngIf=\"salesViewType!=2\">\r\n                         <select class=\"form-control\" (change)=\"locationChanged($event)\">\r\n                            <option [value]=null>Select Location</option>\r\n                            <option *ngFor=\"let customer of locationList\" [value]=\"customer.Id\"\r\n                                [selected]=\"SelectedLocationId==customer.Id\">\r\n                                {{customer.Name}}\r\n                            </option>\r\n                        </select>\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedlocationList\"\r\n                            [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Location'\"\r\n                            [data]=\"locationList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb15\" *ngIf=\"salesViewType==1\">\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorities\"\r\n                            [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                            [data]=\"LoadPriorities\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb15\">\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\"\r\n                            [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                            [data]=\"LocationAttributeList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <app-grid-view *ngIf=\"salesTabFilterForm.get('SalesViewType').value==1\" [salesTabFilterForm]=\"salesTabFilterForm\"> Loading...\r\n        </app-grid-view>\r\n        <app-tank-view-master *ngIf=\"salesTabFilterForm.get('SalesViewType').value==2\" [salesTabFilterForm]=\"salesTabFilterForm\">\r\n            Loading...</app-tank-view-master>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" [formGroup]=\"salesTabFilterForm\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Region</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedRegions\" [settings]=\"RegionDdlSettings\"\r\n                    (onSelect)=\"regionChanged()\"   (onDeSelect)=\"regionChanged()\" (onSelectAll)=\"regionChanged()\"\r\n                    (onDeSelectAll)=\"regionChanged()\"                         \r\n                    [placeholder]=\"'Select Region'\" [data]=\"Regions\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Customer</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedCustomerList\"\r\n                        [settings]=\"CustomerDdlSettings\" [placeholder]=\"'Select Customer'\"\r\n                        [data]=\"customerList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row  mt10\" [ngClass]=\"{'border-bottom-2': !salesTabFilterForm.get('SalesViewType').value}\">\r\n            <div class=\"col-6 pr-0\" *ngIf=\"salesTabFilterForm.get('SalesViewType').value!=2\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedlocationList\"\r\n                        [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Location'\"\r\n                        [data]=\"locationList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\" *ngIf=\"salesTabFilterForm.get('SalesViewType').value==1\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Prority</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedPriorities\"\r\n                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                                             [data]=\"LoadPriorities\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Data Capture</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedLocAttributeList\"\r\n                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Data Capture'\"\r\n                                             [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"ResetFilters();SaveFilters(false);\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set');SaveFilters(false); p.close();\" class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-tank-view-master',\n    templateUrl: './tank-view-master.component.html',\n    styleUrls: ['./tank-view-master.component.css']\n})\nexport class TankViewMasterComponent implements OnInit {\n    @Input() salesTabFilterForm: FormGroup;\n\n    constructor(private dispatcherService: DispatcherService) { }\n    ngOnInit() {\n        this.verifyForcastingAccountLevelSetting();\n    }\n    public verifyForcastingAccountLevelSetting() {\n        this.dispatcherService.getForcastingSetting().subscribe((resp: any) => {\n            if (resp && resp.IsForecatingAccountLevel == 1) {\n                this.salesTabFilterForm.get('RateOfConsumption').setValue(true);\n            }\n            else {\n                this.salesTabFilterForm.get('RateOfConsumption').setValue(false);\n            }\n        });\n    }\n}\n","<div class=\"col-sm-12\" [formGroup]=\"salesTabFilterForm\">\r\n    <div class=\"row mt60\">\r\n        <div class=\"col-sm-12 text-center\">\r\n            <div class=\"custom-control custom-switch mb10\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"chk-consumptionrate\" name=\"chkRateOfConsumption\"\r\n                    formControlName=\"RateOfConsumption\" />\r\n                <label class=\"custom-control-label\" for=\"chk-consumptionrate\">Rate Of Consumption</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div>\r\n    <app-tank-view *ngIf=\"!salesTabFilterForm.get('RateOfConsumption').value\" [salesTabFilterForm]=\"salesTabFilterForm\">Loading...\r\n    </app-tank-view>\r\n\r\n    <app-forecasting-tank-view *ngIf=\"salesTabFilterForm.get('RateOfConsumption').value\" [RequestFromBuyerWallyBoard]=\"false\" [salesTabFilterForm]=\"salesTabFilterForm\" >Loading...\r\n    </app-forecasting-tank-view>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, SimpleChanges, OnChanges, ViewChild, OnDestroy } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject, forkJoin, merge, Subscription } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { ForecastingLocationFilter } from '../../dispatcher.model';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { FormGroup } from '@angular/forms';\nimport { LocationTankDetailsModel, WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-tank-view',\n    templateUrl: './tank-view.component.html',\n    styleUrls: ['./tank-view.component.css']\n})\nexport class TankViewComponent implements OnInit, OnDestroy {\n    public LocationSchedules: any = [];\n    CloneLocationSchedules = [];\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\n    FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\n    IsLoading = false;\n    IsLocDrpDwnLoading = false;\n\n    public dtTrigger: Subject<any> = new Subject();\n    public dtOptions: any = {};\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    SelectedLocationId: string;\n    SelectedTankId: string;\n    SelectedSiteId: string;\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    filterArgs = { key: \"DaysRemaining\", asc: true };\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    public SelectedTankRegionId: string;\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[]= [];\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) { }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n                if (this.salesTabFilterForm.get('SalesViewType').value == 2) {\n                    this.initLocationDropDown();\n                }\n        }));\n        //to load data - after second ngOnInit\n        if (this.salesTabFilterForm.get('SalesViewType').value == 2) {\n            this.initLocationDropDown();\n        }\n    }\n\n    ngOnDestroy(){\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n    setSortArgs(key: string) {\n        if (this.filterArgs.key == key) {\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\n        }\n        else {\n            this.filterArgs = { asc: true, key: key }\n        }\n    }\n\n    initLocationDropDown() {\n        this.IsLocDrpDwnLoading = true;\n        this.LocationDrpDwnList = [];\n\n        let filter: ForecastingLocationFilter = {\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            CustomerIds: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n        };\n\n        forkJoin([this.dispatcherService.getSupplierLocationTanks(filter), this.dispatcherService.GetRaisedExceptions()]).subscribe(result => {\n            this.IsLocDrpDwnLoading = false;\n            this.LocationDrpDwnList = result[0];\n            this.Partsfiltering();\n            this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\n            if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\n                this.LocationDrpDwnList.forEach(loc => {\n                    loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\n                        if (result[1] && result[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\n                            m.IsUnknowDeliveryOrMissDelivery = true;\n                        else\n                            m.IsUnknowDeliveryOrMissDelivery = false;\n                    });\n                });\n            }\n            else {\n                this.SelectedTankId = null;\n                this.LocationSchedules = [];\n                this.CloneLocationSchedules = [];\n                this.SelectedLocationId = '0';\n            }\n        });\n    }\n    locationChange($event) {\n        this.SelectedTankId = null;\n        this.SelectedLocationId = $event.JobId;\n        this.SelectedSiteId = $event.SiteId;\n        this.LocationSchedules = [];\n        this.CloneLocationSchedules = [];\n        this.getSalesData();\n    }\n\n    tankChange($event) {\n        if (this.CloneLocationSchedules && this.CloneLocationSchedules.length > 0) {\n            this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\n            this.LocationSchedules = this.CloneLocationSchedules.filter(f => f.TankId == $event.TankId && f.StorageId == $event.StorageId);\n        }\n\n        else\n            this.LocationSchedules = [];\n\n        // this.dtTrigger.next();\n    }\n\n    public getSalesData() {\n        let inputs = {\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n            Priority: DeliveryReqPriority.None,\n            CustomerId: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Tanks,\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            Carriers: '',\n            IsShowCarrierManaged: '',\n            IsShowRetailJobs: '',\n        };\n        this.IsLoading = true;\n\n        this.dispatcherService.getSalesData(inputs).subscribe((resp: SalesDataModel[]) => {         \n            this.LocationSchedules = resp;\n            this.CloneLocationSchedules = resp;\n            this.IsLoading = false;\n            this.LocationSchedules && this.LocationSchedules.map(m => {\n                try {\n                    this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\n                } catch (e) {\n                    console.log(e);\n                }\n            })\n            this.datatableRerender();\n        });\n    }\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n\n                dtInstance.destroy();\n                this.dtTrigger.next();\n\n            });\n        }\n\n    }\n    Partsfiltering(inputName?) {\n        this.FilterLocationDrpDwnList = [];\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\n            let searchWord = inputName.target.value.toUpperCase();\n            this.LocationDrpDwnList.forEach(element => {\n                if (element.LocationName.toUpperCase().indexOf(searchWord) !== -1) {\n                    this.FilterLocationDrpDwnList.push(element);\n                }\n            });\n        } else {\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;\n        }\n    }\n\n    public showTanks(location: any) {\n\n        let row = this.LocationSchedules[0];\n        this.SelectedTankRegionId = row.RegionId;      \n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = this.SelectedTankRegionId;\n        salesDataModel.SiteId = location.SiteId;\n        salesDataModel.TankId = location.TankId;\n        salesDataModel.StorageId = location.StorageId;\n        salesDataModel.TfxJobId = parseInt(location.JobId);\n        salesDataModel.LocationManagedType = location.LocationManagedType;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n\n\n\n","<div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n        <div class=\"well bg-white shadow-b location-panel\">\r\n            <div id=\"accordion-location\" class=\"location-accordion\">\r\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\r\n                     src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\r\n                     alt=\"animated-truck-image-0009\" />-->\r\n                <div class=\"position-abs text-center\" [ngClass]=\"{'hide-element': !IsLocDrpDwnLoading }\">\r\n                    <span class='spinner-small ml10 mt5'></span>\r\n                </div>\r\n\r\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"mb10\">\r\n                    <div class=\"inner-addon left-addon\">\r\n                        <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\" (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">No Location Available</div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\r\n\r\n    \r\n                    <table class=\"table tank-view\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"49%\">Location</th>\r\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\r\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                                </th>\r\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\r\n                                <th>\r\n                                    Status\r\n                                </th>\r\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\r\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.JobId\">\r\n                                            <h2 class=\"mb-0\">\r\n                                                <div ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\r\n                                                    class=\"position-relative pr-3 btn btn-link collapsed text-left\"\r\n                                                    data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.JobId\"\r\n                                                    aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.JobId\"\r\n                                                    (click)=\"locationChange(loc)\">\r\n                                                    <ng-container>\r\n                                                        {{loc?.LocationName}}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\r\n                                                    </ng-container>\r\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\r\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </h2>\r\n                                        </div>\r\n                                       \r\n                                    </td>\r\n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\r\n                                    <!-- <td>{{loc.Status}}</td> -->\r\n                                    <td>\r\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                            <span class=\"\">{{loc.Status}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr [attr.id]=\"'col'+loc?.JobId\" class=\"collapse\"\r\n                                data-parent=\"#accordion-location\"\r\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.JobId\">\r\n                                <td colspan=\"3\">\r\n                                    <div class=\"card-body\">\r\n                                        <ul class=\"list-group list-group-flush\">\r\n                                            <table class=\"table tank-view-child\">\r\n                                                <tbody>\r\n                                                    <tr *ngFor=\"let tank of loc?.Tanks\">\r\n                                                        <td  width=\"45%\">\r\n                                                            <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\" [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                                {{tank.Name}}\r\n                                                                <!-- ({{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}})  -->\r\n                                                                <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                                    class=\"active-dot\"></span>\r\n                                                                <span title=\"Tank Inventory Alert\"\r\n                                                                    class=\"activediff-dot\"\r\n                                                                    *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                        <td width=\"24%\">\r\n                                                            {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                                                <span class=\"\">{{tank.Status}}</span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <!-- <li class=\"list-group-item \" *ngFor=\"let tank of loc?.Tanks\"\r\n                                                [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\">\r\n                                                    {{tank.Name}}({{(tank.DaysRemaining == 0)? \"N\\A\": tank.DaysRemaining + \" Days\"}}) <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                        class=\"active-dot\"></span>\r\n                                                    <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"\r\n                                                        *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                </a>\r\n                                            </li> -->\r\n                                        </ul>\r\n                                    </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                            \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"col-sm-8 location-chart-panel\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <app-tank-chart [JobId]=\"SelectedLocationId\" [SiteId]=\"SelectedSiteId\" [TankId]=\"SelectedTankId\" [isSupplierView]=\"true\"></app-tank-chart>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b pr\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div class=\"table-responsive\">\r\n                        <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                        <table id=\"table-Location\" class=\"table table-bordered table-hover\"\r\n                               datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"Cust\">Customer</th>\r\n                                    <th data-key=\"LocName\">Location Name</th>\r\n                                    <th data-key=\"Loc\">Location</th>\r\n                                    <th data-key=\"TName\">Tank Name</th>\r\n                                    <th data-key=\"WL\">Water Level</th>\r\n                                    <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                    <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                    <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                    <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                    <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                    <th data-key=\"Ullg\">Ullage</th>\r\n                                    <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                    <th data-key=\"lastDelivery\">Last Delivered On</th>                                   \r\n                                    <th data-key=\"DRemg\">Days Remaining</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </tr>\r\n                                <tr *ngFor=\"let row of LocationSchedules\">\r\n                                    <td>{{row.CompanyName}}</td>\r\n                                    <td>{{row.LocationName}}</td> <!-- <td>{{row.SiteId}}</td> -->\r\n                                    <td>{{row.Location}}</td>\r\n                                    <td>{{row.TankName}}</td>\r\n                                    <td>{{row.WaterLevel}}</td>\r\n                                    <td>{{row.AvgSale}}</td>\r\n                                    <td>\r\n                                        <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                            {{row.PrevSale}}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                            {{row.WeekAgoSale}}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>{{row.Inventory}}</td>\r\n                                    <td>{{row.LastReadingTime}}</td>\r\n                                    <td>{{row.Ullage}}</td>\r\n                                    <td>{{row.LastDeliveredQuantity}}</td>\r\n                                    <td>{{row.LastDeliveryDate}}</td>  \r\n                                    <td>{{(row.DaysRemaining == null)? \"N\\A\": row.DaysRemaining + \" Days\"}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    </div>\r\n</div>\r\n\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\"\r\n        [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, ViewChild, SimpleChanges, Input } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\nimport { Declarations } from '../../declarations.module';\nimport { MyLocalStorage } from 'src/app/my.localstorage';\nimport { DataTablesResponse } from '../../shared/models/DataTable-models';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { FormGroup } from '@angular/forms';\nimport { DeliveryReqPriority, SelectedMapLabelEnum } from 'src/app/app.enum';\nimport { LoadPriorities } from 'src/app/app.constants';\ndeclare function IsUserActive(): boolean;\nexport declare var google: any;\n\n@Component({\n    selector: 'app-where-is-my-driver-grid-view',\n    templateUrl: './where-is-my-driver-grid-view.component.html',\n    styleUrls: ['./where-is-my-driver-grid-view.component.css']\n})\nexport class WhereIsMyDriverGridViewComponent implements OnInit {\n\n    @Input() singleMulti: number;\n    @Input() FilterForm: FormGroup;\n    @Input() IsFiltersLoaded: boolean = false;\n    public activePriorityTab = 1;\n    public DeliveryReqPriority = DeliveryReqPriority;\n    public SelectedMapLabelEnum = SelectedMapLabelEnum;\n    public selectedMaplable: any;\n    public previousInfowindow: any = null;\n    public previousInfowindowIndex: number = null\n    public FuelUnit: string;\n    public googleMap: any;\n    public zoomLevel = 4;\n    public centerLoactionLat = 39.1175;\n    public centerLoactionLng = -103.8784;\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\n\n\n    private AUTO_REFRESH_TIME: number = 300; // seconds\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\n\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n\n\n    public screenOptions = {\n        position: 6\n    };\n    private searchLoadInterval: any;\n    private autoRefreshInterval: any;\n    private autoRefreshTimerInterval: any;\n    private setCountryCenterInterval: any;\n\n    subscriptions: Subscription = new Subscription();\n    public Drivers: WhereIsMyDriverModel[] = [];\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\n    public allLoads: WhereIsMyDriverModel[] = [];\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\n    public CloneOnGoingLoads = [];\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\n\n    public Regions: DistatcherRegionModel[] = [];\n    public RegionStates: any = [];\n    public RegionDispachers: any = [];\n    public LoadPriorities: any[] = LoadPriorities;\n    public StateDdlSettings: any = {};\n    public PriorityDdlSettings: any = {};\n    public RegionDdlSettings: any = {};\n    public SelectedRegionId: string;\n    public SearchedKeyword: string;\n    public SelectedPrioritiesId: any = [];\n\n    public toogleMap: Boolean = true;\n    public toogleFilter: Boolean = false;\n    public toogleDriver: Boolean = false;\n    public toogleGrid: Boolean = false;\n    public toogleExpandMap: Boolean = false;\n    public customerList = [];\n\n    public IsShowCarrierManaged: boolean = false;\n    public SelectedCarrierIds: string = '';\n    public SelectedStateIds: string = '';\n    public SelectedPriorityIds: string = '';\n    public SelectedDispacherIds: string = '';\n    public SelectedCustomerId: string = '';\n    public selectedLocAttributeIds: string = '';\n    public selectedStartDate: string;\n    public selectedEndDate: string;\n    public IsDataLoaded: boolean = false;\n    public dtMustGoOptions: any = {};\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    public selectedDriverLoadsdtOptions: any = {};\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoTrigger: Subject<any> = new Subject();\n    public dtCouldGoTrigger: Subject<any> = new Subject();\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\n    public loadingData: boolean = true;\n    public modalData: boolean = true;\n    // public IsShouldGoLoading: boolean;\n    // public IsCouldGoLoading: boolean;\n    // public IsMustGoLoading: boolean;\n    public backgroudchatDefault = [];\n    public memberInfo: MemberInfo[] = [];\n    public disableControl: boolean = false;\n    changeFilterValueIntervalForMultiWindow: any;\n\n\n    @Input() toogleMapFromParent: boolean = true;\n    constructor(private dispatcherService: DispatcherService, private chatService: chatService, private carrierService: CarrierService) {\n    }\n\n    ngOnInit() {\n        this.readOnlyModeSelection();\n        this.subscribeFormChanges();\n\n        let exportColumns = { columns: ':visible' };\n        let mustGocolumnsDetails = [];\n        let shouldGocolumnsDetails = [];\n        let couldGocolumnsDetails = [];\n        if (this.disableControl) {\n            mustGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true },\n            { title: 'Drop Ticket', name: 'DROPTicketNum', data: 'DROPTicketNum', \"autoWidth\": true }\n\n            ];\n        }\n        else {\n            mustGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }\n\n            ];\n        }\n        this.dtMustGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\n                let selectedDispacherIds = '';\n                this.FilterForm.get('SelectedDispachers').value.map(m => {\n                    if (selectedDispacherIds == '') selectedDispacherIds = m.Id\n                    else selectedDispacherIds += ',' + m.Id\n                })\n                let _carriers = []; this.FilterForm.get('SelectedCarriers').value.forEach(x => _carriers.push(x.Id));\n\n                let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\n                let _locAttributeIds = _locAttribute.join();\n                let inputs = {\n                    RegionId: this.SelectedRegionId,\n                    States: _states,\n                    Priority: DeliveryReqPriority.MustGo,\n                    FromDate: this.FilterForm.get('FromDate').value,\n                    ToDate: this.FilterForm.get('ToDate').value,\n                    DriverSearch: this.SearchedKeyword,\n                    DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\n                    CustomerId: this.FilterForm.get('SelectedCustomerId').value,\n                    Carriers: _carriers,\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n                    InventoryCaptureType: _locAttributeIds\n                };\n                let inputData = Object.assign(dataTablesParameters, inputs);\n                this.loadingData = true;\n                this.dispatcherService.getDispatcherLoads(inputData).subscribe((resp: DataTablesResponse) => {\n                    this.MustGoSchedules = resp.data;\n                    this.loadingData = false;\n                    callback({\n                        recordsTotal: resp.recordsTotal,\n                        recordsFiltered: resp.recordsFiltered,\n                        data: resp.data\n                    });\n                });\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'colvis',exportOptions: exportColumns },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Must Go', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Must Go', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n            columns: mustGocolumnsDetails\n        };\n\n        if (this.disableControl) {\n            shouldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true },\n            { title: 'Drop Ticket', name: 'DROPTicketNum', data: 'DROPTicketNum', \"autoWidth\": true }\n            ];\n        }\n        else {\n            shouldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }\n            ];\n        }\n        this.dtShouldGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\n                let selectedDispacherIds = '';\n                this.FilterForm.get('SelectedDispachers').value.map(m => {\n                    if (selectedDispacherIds == '') selectedDispacherIds = m.Id\n                    else selectedDispacherIds += ',' + m.Id\n                })\n                let selectedCarrierIds = '';\n                let selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\n                selectedCarriers.map(m => {\n                    if (selectedCarrierIds == '') selectedCarrierIds = m.Id\n                    else selectedCarrierIds += ',' + m.Id\n                })\n                let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\n                let _locAttributeIds = _locAttribute.join();\n                let inputs = {\n                    RegionId: this.SelectedRegionId,\n                    States: _states,\n                    Priority: DeliveryReqPriority.ShouldGo,\n                    FromDate: this.FilterForm.get('FromDate').value,\n                    ToDate: this.FilterForm.get('ToDate').value,\n                    DriverSearch: this.SearchedKeyword,\n                    DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\n                    CustomerId: this.FilterForm.get('SelectedCustomerId').value,\n                    Carriers: selectedCarrierIds,\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n                    InventoryCaptureType: _locAttributeIds\n                };\n                let inputData = Object.assign(dataTablesParameters, inputs);\n                this.loadingData = true;\n                this.dispatcherService.getDispatcherLoads(inputData).subscribe((resp: DataTablesResponse) => {\n                    this.ShouldGoSchedules = resp.data;\n                    this.loadingData = false;\n                    callback({\n                        recordsTotal: resp.recordsTotal,\n                        recordsFiltered: resp.recordsFiltered,\n                        data: resp.data\n                    });\n                });\n\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'colvis', exportOptions: exportColumns },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Should Go', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Should Go', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n            columns: shouldGocolumnsDetails\n        };\n\n        if (this.disableControl) {\n            couldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true },\n            { title: 'Drop Ticket', name: 'DROPTicketNum', data: 'DROPTicketNum', \"autoWidth\": true },\n            ];\n        }\n        else {\n            couldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }\n            ];\n        }\n        this.dtCouldGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\n                let selectedDispacherIds = '';\n                this.FilterForm.get('SelectedDispachers').value.map(m => {\n                    if (selectedDispacherIds == '') selectedDispacherIds = m.Id\n                    else selectedDispacherIds += ',' + m.Id\n                })\n                let selectedCarrierIds = '';\n                let selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\n                selectedCarriers.map(m => {\n                    if (selectedCarrierIds == '') selectedCarrierIds = m.Id\n                    else selectedCarrierIds += ',' + m.Id\n                })\n                let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\n                let _locAttributeIds = _locAttribute.join();\n                let inputs = {\n                    RegionId: this.SelectedRegionId,\n                    States: _states,\n                    Priority: DeliveryReqPriority.CouldGo,\n                    FromDate: this.FilterForm.get('FromDate').value,\n                    ToDate: this.FilterForm.get('ToDate').value,\n                    DriverSearch: this.SearchedKeyword,\n                    DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\n                    CustomerId: this.FilterForm.get('SelectedCustomerId').value,\n                    Carriers: selectedCarrierIds,\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n                    InventoryCaptureType: _locAttributeIds\n                };\n                let inputData = Object.assign(dataTablesParameters, inputs);\n                this.loadingData = true;\n                this.dispatcherService.getDispatcherLoads(inputData).subscribe((resp: DataTablesResponse) => {\n                    this.CouldGoSchedules = resp.data;\n                    this.loadingData = false;\n                    callback({\n                        recordsTotal: resp.recordsTotal,\n                        recordsFiltered: resp.recordsFiltered,\n                        data: resp.data\n                    });\n                });\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'colvis', exportOptions: exportColumns },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Could Go', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Could Go', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n            columns: couldGocolumnsDetails\n        };\n        this.selectedDriverLoadsdtOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            searching: true,\n            destroy: true,\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Selected Driver Loads', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Selected Driver Loads', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n        };\n    }\n\n    clickOutsideDropdown() {\n        if (this.toogleFilter) {\n            this.toogleFilter = false;\n        }\n    }\n\n\n\n    // subscribeFormChanges() {\n    //     this.subscriptions.add(this.FilterForm.valueChanges\n    //         .subscribe(change => {\n    //             var isFilterChanged = this.IsFilterChanged();\n    //             if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n    //                 this.IsDataLoaded = true;\n    //                 this.filterDriverData();\n    //             }\n    //         }))\n    // }\n\n    subscribeFormChanges() {\n        this.subscriptions.add( this.FilterForm.get('IsShowCarrierManaged').valueChanges\n            .subscribe(change => {\n                var isFilterChanged = this.IsFilterChanged();\n                if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n                    this.IsDataLoaded = true;\n                    this.filterDriverData();\n                }\n            }));\n\n            this.subscriptions.add( this.FilterForm.get('SelectedCarriers').valueChanges\n            .subscribe(change => {\n                var isFilterChanged = this.IsFilterChanged();\n                if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n                    this.IsDataLoaded = true;\n                    this.filterDriverData();\n                }\n            }));\n    }\n    \n   \n\n    unSubscribeFormChanges() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n\n    IsFilterChanged() {\n        var isFilterChanged = false;\n        var isShowCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\n        if (this.IsShowCarrierManaged != isShowCarrierManaged) {\n            this.IsShowCarrierManaged = isShowCarrierManaged;\n            isFilterChanged = true;\n        }\n        var ids = [];\n        var selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\n        selectedCarriers.forEach(res => { ids.push(res.Id) });\n        var selectedCarrierId = ids.join();\n        if (this.SelectedCarrierIds != selectedCarrierId) {\n            this.SelectedCarrierIds = selectedCarrierId;\n            isFilterChanged = true;\n        }\n\n        ids = [];\n        var selectedRegions = this.FilterForm.get('SelectedRegions').value || [];\n        selectedRegions.forEach(res => { ids.push(res.Id) });\n        var selectedRegionId = ids.join();\n        if (this.SelectedRegionId != selectedRegionId) {\n            this.SelectedRegionId = selectedRegionId;\n            isFilterChanged = true;\n        }\n        ids = [];\n        var selectedStates = this.FilterForm.get('SelectedStates').value || [];\n        selectedStates.forEach(res => { ids.push(res.Id) });\n        var selectedStateIds = ids.join();\n        if (this.SelectedStateIds != selectedStateIds) {\n            this.SelectedStateIds = selectedStateIds;\n            isFilterChanged = true;\n        }\n\n        ids = [];\n        var selectedPriorities = this.FilterForm.get('SelectedPriorities').value || [];\n        selectedPriorities.forEach(res => { ids.push(res.Id) });\n        var selectedPriorityIds = ids.join();\n        if (this.SelectedPriorityIds != selectedPriorityIds) {\n            this.SelectedPriorityIds = selectedPriorityIds;\n            isFilterChanged = true;\n        }\n        ids = [];\n        var selectedDispachers = this.FilterForm.get('SelectedDispachers').value || [];\n        selectedDispachers.forEach(res => { ids.push(res.Id) });\n        var selectedDispacherIds = ids.join();\n        if (this.SelectedDispacherIds != selectedDispacherIds) {\n            this.SelectedDispacherIds = selectedDispacherIds;\n            isFilterChanged = true;\n        }\n        var selectedCustomerId = this.FilterForm.get('SelectedCustomerId').value;\n        if (this.SelectedCustomerId != selectedCustomerId) {\n            this.SelectedCustomerId = selectedCustomerId;\n            isFilterChanged = true;\n        }\n        ids = [];\n        var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\n        selectedLocAttributeList.forEach(res => { ids.push(res.Id) });\n        var selectedLocAttributeIds = ids.join();\n        if (this.selectedLocAttributeIds != selectedLocAttributeIds) {\n            this.selectedLocAttributeIds = selectedLocAttributeIds;\n            isFilterChanged = true;\n        }\n        var fromdate = this.FilterForm.get('FromDate').value;\n        if (this.selectedStartDate != fromdate) {\n            this.selectedStartDate = fromdate;\n            isFilterChanged = true;\n        }\n        var todate= this.FilterForm.get('ToDate').value;\n        if (this.selectedEndDate != todate) {\n            this.selectedEndDate = todate;\n            isFilterChanged = true;\n        }\n        return isFilterChanged;\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        if (change.IsFiltersLoaded && change.IsFiltersLoaded.currentValue) {\n            this.IsFiltersLoaded = change.IsFiltersLoaded.currentValue;\n        }\n        // if (change.SelectedRegions && change.SelectedRegions.currentValue)\n        //     this.onRegionSelect();\n        // if (change.SelectedCustomerId && change.SelectedCustomerId.currentValue)\n        //     this.customerChanged();\n        // if ((change.FromDate && change.FromDate.currentValue) || (change.ToDate && change.ToDate.currentValue)) {\n        //     this.filterDriverData();\n        // }\n        // if (change.SelectedStates && change.SelectedStates.currentValue)\n        //     this.filterDriverData();\n        // if (change.SelectedPriorities && change.SelectedPriorities.currentValue)\n        //     this.filterDriverData();\n        // if (change.SelectedDispachers && change.SelectedDispachers.currentValue)\n        //     this.filterDriverData();\n        if (change.toogleMapFromParent) {\n            this.toogleMapFromParent = change.toogleMapFromParent.currentValue;\n        }\n        if (change.SelectedCarriers && change.SelectedCarriers.currentValue)\n            this.filterDriverData();\n        // if (change.selectedLocAttributeList && change.selectedLocAttributeList.currentValue)\n        //     this.filterDriverData();\n        if (change.IsShowCarrierManaged)\n            this.filterDriverData();\n\n    }\n    ngAfterViewInit(): void {\n        //this.getDispatcherLoads();\n        this.autoRefreshLoads();\n        this.dtCouldGoTrigger.next();\n        this.dtShouldGoTrigger.next();\n        this.dtMustGoTrigger.next();\n    }\n\n    ngOnDestroy(): void {\n        this.clearAllIntervals();\n        this.unSubscribeFormChanges();\n        this.dtCouldGoTrigger.unsubscribe();\n        this.dtShouldGoTrigger.unsubscribe();\n        this.dtMustGoTrigger.unsubscribe();\n    }\n\n    public changeActiveTab(priority) {\n        this.activePriorityTab = priority;\n    }\n\n  \n\n    async checkFilterValueChange() {\n        if (this.singleMulti == 2) {\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\n            let selectedRegions = MyLocalStorage.getData(MyLocalStorage.WBF_REGION_KEY);\n            selectedRegions == \"\" ? selectedRegions = [] : '';\n            let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\n            selectedStates == \"\" ? selectedStates = [] : '';\n            let selectedDispachers = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY);\n            let cid = MyLocalStorage.getData(MyLocalStorage.WBF_CUSTOMER_KEY);\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\n                this.FilterForm.get('FromDate').patchValue(frmDate);\n                this.initializeFilterChange();\n            } else if (!this.isArrayEqual(selectedRegions, this.FilterForm.get('SelectedRegions').value)) {\n                this.FilterForm.get('SelectedRegions').patchValue(selectedRegions);\n                this.initializeFilterChange();\n            } else if (cid && cid != this.FilterForm.get('SelectedCustomerId').value) {\n                this.FilterForm.get('SelectedCustomerId').patchValue(cid);\n                this.initializeFilterChange();\n            }\n        }\n    }\n\n    initializeFilterChange() {\n        localStorage.setItem(\"filterChange\", '1');\n        window.location.reload();\n    }\n\n    regionChanged(event?: any): void {\n        this.filterDriverData();\n    }\n\n    public onRegionSelect() {\n        var ids = [];\n        this.SelectedRegionId = '';\n        this.SelectedRegionId = ids.join();\n        this.regionChanged();\n\n    }\n\n\n    customerChanged(): void {\n        this.filterDriverData();\n    }\n\n\n\n    setFromDate(event: any): void {\n        this.filterDriverData();\n    }\n\n    setToDate(event: any): void {\n        this.filterDriverData();\n    }\n    setDatatableData(data: WhereIsMyDriverModel[]): void {\n        this.MustGoSchedules = data.filter(x => x.LdPri == 1 || x.LdPri == 0).slice();\n        this.ShouldGoSchedules = data.filter(x => x.LdPri == 2).slice();\n        this.CouldGoSchedules = data.filter(x => x.LdPri == 3).slice();\n    }\n\n    refreshDatatable(): void {\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\n            if (dtElement.dtInstance) {\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                    dtInstance.draw();\n                });\n            }\n        });\n        if (this.driverModal.modalDetails.display === \"block\") {\n            this.showDriverDetails(this.driverModal.modalDetails.data);\n        }\n    }\n\n    filterDriverData(): void {\n        this.clearAllIntervals();\n        this.searchLoadInterval = window.setTimeout(() => {\n            this.getDispatcherLoads();\n            this.autoRefreshLoads();\n        }, 2000);\n    }\n\n    clearAllIntervals(): void {\n        if (this.searchLoadInterval) {\n            clearInterval(this.searchLoadInterval);\n        }\n        if (this.autoRefreshInterval) {\n            clearInterval(this.autoRefreshInterval);\n        }\n        if (this.setCountryCenterInterval) {\n            clearInterval(this.setCountryCenterInterval);\n        }\n        if (this.autoRefreshTimerInterval) {\n            clearInterval(this.autoRefreshTimerInterval);\n        }\n    }\n\n    getDispatcherLoads(statusId?): void {\n\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\n            return;\n        }\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\n        this.SelectedPrioritiesId = _priorities;\n        this.startAutoRefreshTimer();\n        this.loadingData = false;\n        this.refreshDatatable();\n    }\n\n    autoRefreshLoads(): void {\n        this.autoRefreshInterval = window.setInterval(() => {\n            if (IsUserActive()) {\n                this.getDispatcherLoads();\n            }\n        }, this.AUTO_REFRESH_TIME * 1000);\n    }\n\n    startAutoRefreshTimer(): void {\n        this.stopAutoRefreshTimer();\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n        this.autoRefreshTimerInterval = window.setInterval(() => {\n            if (IsUserActive()) {\n                if (this.autoRefreshTicks == 0) {\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n                    this.stopAutoRefreshTimer();\n                } else {\n                    this.autoRefreshTicks--;\n                }\n            }\n        }, 1000);\n    }\n\n    stopAutoRefreshTimer(): void {\n        if (this.autoRefreshTimerInterval) {\n            clearInterval(this.autoRefreshTimerInterval);\n        }\n    }\n\n    public toggleExpandMapView() {\n        //this.toogleExpandMap = !this.toogleExpandMap;\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\n    }\n\n    public toggleMapView() {\n        // this.toogleMap = !this.toogleMap;\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\n    }\n\n    public toggleGrids() {\n        //this.toogleGrid = !this.toogleGrid;\n        var toggleGrid = this.FilterForm.get('ToggleGrids').value;\n        this.FilterForm.get('ToggleGrids').patchValue(!toggleGrid);\n    }\n\n    public toggleFilterView() {\n        this.toogleFilter = !this.toogleFilter;\n    }\n    public toggleDriverView() {\n        //this.toogleDriver = !this.toogleDriver;\n        var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\n        this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\n    }\n\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\n        window.scrollTo(0, 0);\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\n        if (infoWindow && infoWindow.isOpen) {\n            infoWindow.close();\n        }\n        this.selectedDriverDetails = new DriverAdditionalDetails();\n        this.modalData = true;\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\n            if (data) {\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\n                this.modalData = false;\n            }\n            else {\n                this.selectedDriverDetails = new DriverAdditionalDetails();\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\n                this.modalData = false;\n            }\n        });\n    }\n\n    public modalClose(): void {\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n    }\n    private readOnlyModeSelection(): void {\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\n        if (readonlyKey == '') {\n            this.disableControl = false;\n        }\n        else {\n            this.disableControl = readonlyKey;\n        }\n        if (this.disableControl === true) {\n            this.FilterForm.get('ToggleMap').patchValue(false);\n        }\n\n    }\n    public loadDropTicketDetails(invoiceHeaderId: number) {\n        Declarations.showSliderPanel();\n        this.dispatcherService.GetDropTicketDetails(invoiceHeaderId).subscribe(data => {\n            if (data != '') {\n                $(\"#invoice\").html('');\n                $(\"#invoice\").html(data);\n            }\n            else {\n                $(\"#invoice\").html('');\n                Declarations.msgwarning('No Drop ticket details found.', null, 3000);\n            }\n\n            Declarations.appendHTMLSliderContent(\"#invoice\");\n            Declarations.hideSliderLoader();\n        });\n    }\n\n\n    filterMapByStatus(statusId) {\n        this.selectedMaplable = statusId;\n        this.getDispatcherLoads(statusId)\n    }\n\n    private getCustomerListByRegionId(SelectedRegionId) {\n        this.loadingData = true;\n        this.carrierService.getJobListForCarrier(SelectedRegionId).subscribe(t2 => {\n            this.loadingData = false;\n            this.customerList = t2;\n        });\n    }\n\n    arraysEqual(a, b) {\n        if (a === b) return true;\n        if (a == null || b == null) return false;\n        if (a.length != b.length) return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i]) return false;\n        }\n        return true;\n    }\n\n    isArrayEqual(value, other) {\n        var type = Object.prototype.toString.call(value);\n        if (type !== Object.prototype.toString.call(other)) return false;\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\n        if (valueLen !== otherLen) return false;\n        var compare = function (item1, item2) {\n        };\n        var match;\n        if (type === '[object Array]') {\n            for (var i = 0; i < valueLen; i++) {\n                compare(value[i], other[i]);\n            }\n        } else {\n            for (var key in value) {\n                if (value.hasOwnProperty(key)) {\n                    compare(value[key], other[key]);\n                }\n            }\n        }\n        return true;\n    }\n\n    public applyLoadsFilters(filterForm:FormGroup){\n        this.FilterForm = filterForm;\n        var isFilterChanged = this.IsFilterChanged();\n                if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n                    this.IsDataLoaded = true;\n                    this.filterDriverData();\n        }\n    }\n}\n\n\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <a class=\"btn btn-link\" (click)=\"toggleGrids()\"><i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleGrids').value == true ? 'Show\r\n            Grids' : 'Hide Grids'}} </a>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\" [ngClass]=\"{'hide-element': FilterForm.get('ToggleGrids').value}\" style=\"margin-top:15px\">\r\n        <div class=\"sticky-header\" id=\"sticky-head\">\r\n            <!--<h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>-->\r\n            <div class=\"row\">\r\n                <div class=\"col-12 text-right priority-tabs\">\r\n                    <ul class=\"nav nav-pills float-right\">\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\r\n                          \r\n                            <a class=\"nav-link mustgo \" [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\r\n                            <a class=\"nav-link shouldgo\" [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\r\n                            <a class=\"nav-link couldgo\" [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could Go</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(1) > -1)\"\r\n            [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.ShouldGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-mustgo\" data-gridname=\"19\" class=\"table table-bordered table-hover\"\r\n                                datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"CName\">Customer</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"DROPTicketNum\" *ngIf=\"disableControl===true\">Drop Ticket</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <!--<tbody *ngIf=\"MustGoSchedules?.length > 0\">\r\n                                    <tr *ngFor=\"let row of MustGoSchedules\">\r\n                                        <td>{{row.PoNum}}</td>\r\n                                        <td>{{row.Name}}</td>\r\n                                        <td>{{row.DName}}</td>\r\n                                        <td>{{row.CName}}</td>\r\n                                        <td>{{row.Pckup}}</td>\r\n                                        <td>{{row.Loc}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>{{row.PrdtNm}}</td>\r\n                                        <td>{{row.Qty}}</td>\r\n                                        <td>{{row.LdDate}}</td>\r\n                                        <td>{{row.Status}}</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum===''\" class=\"text-center\">\r\n                                            NA</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum!=''\">\r\n                                            <table>\r\n                                                <tr *ngFor=\"let rowDROPTicketNum of row.ListDROPTicketNum\">\r\n                                                    <td> <a\r\n                                                            (click)=\"loadDropTicketDetails(rowDROPTicketNum.split('##')[1])\">{{rowDROPTicketNum.split('##')[0]}}</a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"MustGoSchedules?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available text-center\">No data available</td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(2) > -1)\"\r\n            [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                            <table id=\"table-shouldgo\" data-gridname=\"20\" class=\"table table-bordered table-hover\"\r\n                                datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"CName\">Customer</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"DROPTicketNum\" *ngIf=\"disableControl===true\">Drop Ticket</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <!--<tbody *ngIf=\"ShouldGoSchedules?.length > 0\">\r\n                                    <tr *ngFor=\"let row of ShouldGoSchedules\">\r\n                                        <td>{{row.PoNum}}</td>\r\n                                        <td>{{row.Name}}</td>\r\n                                        <td>{{row.DName}}</td>\r\n                                        <td>{{row.CName}}</td>\r\n                                        <td>{{row.Pckup}}</td>\r\n                                        <td>{{row.Loc}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>{{row.PrdtNm}}</td>\r\n                                        <td>{{row.Qty}}</td>\r\n                                        <td>{{row.LdDate}}</td>\r\n                                        <td>{{row.Status}}</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum===''\" class=\"text-center\">\r\n                                            NA</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum!=''\">\r\n                                            <table>\r\n                                                <tr *ngFor=\"let rowDROPTicketNum of row.ListDROPTicketNum\">\r\n                                                    <td> <a\r\n                                                            (click)=\"loadDropTicketDetails(rowDROPTicketNum.split('##')[1])\">{{rowDROPTicketNum.split('##')[0]}}</a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                                <!--<tbody *ngIf=\"ShouldGoSchedules?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available text-center\">No data available</td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(3) > -1)\"\r\n            [ngClass]=\"{'hide-element':(activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.ShouldGo )}\">\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                            <table id=\"table-couldgo\" data-gridname=\"21\" class=\"table table-bordered table-hover\"\r\n                                datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"CName\">Customer</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"DROPTicketNum\" *ngIf=\"disableControl===true\">Drop Ticket</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <!--<tbody *ngIf=\"CouldGoSchedules?.length > 0\">\r\n                                    <tr *ngFor=\"let row of CouldGoSchedules\">\r\n                                        <td>{{row.PoNum}}</td>\r\n                                        <td>{{row.Name}}</td>\r\n                                        <td>{{row.DName}}</td>\r\n                                        <td>{{row.CName}}</td>\r\n                                        <td>{{row.Pckup}}</td>\r\n                                        <td>{{row.Loc}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>{{row.PrdtNm}}</td>\r\n                                        <td>{{row.Qty}}</td>\r\n                                        <td>{{row.LdDate}}</td>\r\n                                        <td>{{row.Status}}</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum===''\" class=\"text-center\">\r\n                                            NA</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum!=''\">\r\n                                            <table>\r\n                                                <tr *ngFor=\"let rowDROPTicketNum of row.ListDROPTicketNum\">\r\n                                                    <td> <a\r\n                                                            (click)=\"loadDropTicketDetails(rowDROPTicketNum.split('##')[1])\">{{rowDROPTicketNum.split('##')[0]}}</a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"CouldGoSchedules?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available text-center\">No data available</td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\"\r\n    data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>","import { Component, OnInit, ViewChildren, QueryList,  ViewChild, SimpleChanges, Input } from '@angular/core';\r\nimport { Subject,  Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird/sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel, routesColor } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\ndeclare function IsUserActive(): boolean;\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver-map-view',\r\n    templateUrl: './where-is-my-driver-map-view.component.html',\r\n    styleUrls: ['./where-is-my-driver-map-view.component.css']\r\n})\r\nexport class WhereIsMyDriverMapViewComponent implements OnInit {\r\n    @Input() singleMulti: number;\r\n   \r\n    @Input() FilterForm: FormGroup;\r\n    subscriptions: Subscription = new Subscription();   \r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 5;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY'); \r\n\r\n    public SelectedCustomerId: string;\r\n    public SelectedStates :[]; \r\n    public SelectedPriorities :[];\r\n    public SelectedDispachers :[];\r\n    public FromDate :\"\";\r\n    public ToDate :\"\";\r\n    public toogleMap :true\r\n\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    private UserCountry = \"\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n    \r\n    private searchLoadInterval: any;\r\n    private autoRefreshInterval: any;\r\n    private autoRefreshTimerInterval: any;\r\n    private setCountryCenterInterval: any;\r\n\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Regions: DistatcherRegionModel[] = [];\r\n    public RegionStates: any = [];\r\n    public RegionDispachers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public SelectedRegionId: string;\r\n   \r\n    public SearchedKeyword: string;\r\n \r\n    public SelectedPrioritiesId: any = [];\r\n \r\n    public toogleFilter: Boolean = false;\r\n    public toogleDriver: Boolean = false;\r\n    public toogleGrid: Boolean = false;\r\n    public toogleExpandMap: Boolean = false;\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    changeFilterValueIntervalForMultiWindow: any;\r\n    public currentOngoingLoadDetails : WhereIsMyDriverModel[] = [];\r\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\r\n\r\n    constructor(private dispatcherService: DispatcherService, private chatService: chatService, private carrierService: CarrierService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.subscribeFormChanges();\r\n    \r\n        this.dispatcherService.getDispatcherCountry().subscribe(data => {\r\n            this.UserCountry = data;\r\n            this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\r\n            this.setMapCenter();\r\n        });\r\n        this.chatService.loaderDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.loadingData = data;\r\n            }\r\n        });\r\n        this.chatService.memberInfoDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.memberInfo = data as MemberInfo[];\r\n                this.loadingData = false;\r\n                jQuery('#btnconfirm-memberInfo').click();\r\n            }\r\n        });       \r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n           \r\n        }\r\n        if (change.SelectedRegions && change.SelectedRegions.currentValue)\r\n            this.onRegionSelect();\r\n        // if (change.SelectedCustomerId && change.SelectedCustomerId.currentValue)\r\n        //     this.customerChanged();\r\n        // if ((change.FromDate && change.FromDate.currentValue) || (change.ToDate && change.ToDate.currentValue))\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedStates && change.SelectedStates.currentValue)\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedPriorities && change.SelectedPriorities.currentValue)\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedDispachers && change.SelectedDispachers.currentValue)\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedCarriers && change.SelectedCarriers.currentValue)\r\n        // this.filterDriverData();\r\n        // if (change.IsShowCarrierManaged)\r\n        // this.filterDriverData();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getDispatcherLoads();\r\n        this.autoRefreshLoads();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clearAllIntervals();\r\n        this.unSubscribeFormChanges();\r\n        if (this.changeFilterValueIntervalForMultiWindow)\r\n        clearInterval(this.changeFilterValueIntervalForMultiWindow);\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();\r\n    }\r\n\r\n    // subscribeFormChanges() {\r\n    //     this.subscriptions.add(this.FilterForm.valueChanges\r\n    //         .subscribe(change => {\r\n    //             var ids = [];\r\n    //             var selectedRegions = this.FilterForm.get('SelectedRegions').value || [];\r\n    //             selectedRegions.forEach(res => { ids.push(res.Id) });\r\n    //             var selectedRegionId = ids.join();\r\n    //             this.SelectedRegionId = selectedRegionId;\r\n    //             this.filterDriverData()\r\n    //             //this.SaveFilters();\r\n    //         }))\r\n    // }\r\n\r\n    subscribeFormChanges() {\r\n        this.subscriptions.add( this.FilterForm.get('IsShowCarrierManaged').valueChanges.subscribe(change =>{\r\n                this.filterDriverData();\r\n        }));\r\n        this.subscriptions.add( this.FilterForm.get('SelectedCarriers').valueChanges.subscribe(change => {\r\n            this.filterDriverData();\r\n        }));\r\n    }  \r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    async checkFilterValueChange() {\r\n        if (this.singleMulti == 2) {\r\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n            let selectedRegions = MyLocalStorage.getData(MyLocalStorage.WBF_REGION_KEY);\r\n            selectedRegions == \"\" ? selectedRegions = [] : '';\r\n            let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n            selectedStates == \"\" ? selectedStates = [] : '';\r\n            let selectedDispachers = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY);\r\n            let cid = MyLocalStorage.getData(MyLocalStorage.WBF_CUSTOMER_KEY);\r\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\r\n               this.FilterForm.get('FromDate').patchValue(frmDate);\r\n               // this.ToDate = this.ToDate;\r\n                this.initializeFilterChange();\r\n            } else if (!this.isArrayEqual(selectedRegions, this.FilterForm.get('selectedRegions').value)) {\r\n                this.FilterForm.get('selectedRegions').patchValue(selectedRegions);\r\n                this.initializeFilterChange();\r\n            }\r\n            else if (cid && cid != this.FilterForm.get('SelectedCustomerId')) {\r\n                this.FilterForm.get('SelectedCustomerId').patchValue(cid);\r\n                this.initializeFilterChange();\r\n            }\r\n        }\r\n    }\r\n    initializeFilterChange() {\r\n        localStorage.setItem(\"filterChange\", '1');\r\n        window.location.reload();\r\n    }\r\n    regionChanged(event?: any): void {\r\n        this.CloneOnGoingLoads = [];\r\n        this.filterDriverData();\r\n    }\r\n\r\n    public onRegionSelect() {\r\n        var ids = [];\r\n        this.SelectedRegionId = '';\r\n        this.FilterForm.get('SelectedRegions').value.forEach(res => { ids.push(res.Id) });\r\n        this.SelectedRegionId = ids.join();\r\n        this.regionChanged();\r\n    }\r\n\r\n    customerChanged(event): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    setRegionStates(): void {\r\n        this.RegionStates = [];        \r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.States && m.States.length > 0) {\r\n                    this.RegionStates = this.RegionStates.concat(m.States);\r\n                }\r\n            }\r\n        })        \r\n    }\r\n    setRegionDispachers(): void {\r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.Dispatchers && m.Dispatchers.length > 0) {\r\n                    this.RegionDispachers = this.RegionDispachers.concat(m.Dispatchers);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    setToDate(event: any): void {     \r\n        this.filterDriverData();\r\n    }\r\n\r\n    onStateSelect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onStateUnselect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onPrioritySelect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onPriorityUnselect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n    onDispacherSelect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onDispacherUnselect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n    setMapCenter(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLoactionLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLoactionLng = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.googleMap && this.OnGoingLoads.length == 0) {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    bounds.extend(new google.maps.LatLng(this.centerLoactionLat, this.centerLoactionLng));\r\n                    this.googleMap.fitBounds(bounds);\r\n                    this.googleMap.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.forEach(x => {\r\n                        x.statusColor = routesColor[x.SttsId];\r\n                        bounds.extend(new google.maps.LatLng(x.Lat, x.Lng));\r\n                    });\r\n                    this.googleMap.fitBounds(bounds);\r\n\r\n                    const locationbounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.forEach(x => {\r\n                        locationbounds.extend(new google.maps.LatLng(x.dLat, x.dLng));\r\n                    });\r\n                    if (this.googleMap && locationbounds) {\r\n                        this.googleMap.setCenter(locationbounds.getCenter());         \r\n                    }\r\n                    this.googleMap.setZoom(5);\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    searchDrivers(event: any): void {\r\n        this.SearchedKeyword = event.target.value;\r\n        this.filterDriverData();\r\n    }\r\n\r\n    setDatatableData(data: WhereIsMyDriverModel[]): void {\r\n        this.MustGoSchedules = data.filter(x => x.LdPri == 1 || x.LdPri == 0).slice();\r\n        this.ShouldGoSchedules = data.filter(x => x.LdPri == 2).slice();\r\n        this.CouldGoSchedules = data.filter(x => x.LdPri == 3).slice();\r\n    }\r\n\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.draw();\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        //this.dtMustGoTrigger.next();\r\n        //this.dtShouldGoTrigger.next();\r\n        //this.dtCouldGoTrigger.next();\r\n        if (this.driverModal.modalDetails.display === \"block\") {\r\n            this.showDriverDetails(this.driverModal.modalDetails.data);\r\n        }\r\n    }\r\n\r\n    filterDriverData(): void {\r\n        this.clearAllIntervals();\r\n        this.loadingData = true;\r\n        this.searchLoadInterval = window.setTimeout(() => {\r\n            this.getDispatcherLoads();\r\n            this.autoRefreshLoads();\r\n        }, 1000);\r\n        }\r\n\r\n    clearAllIntervals(): void {\r\n        if (this.searchLoadInterval) {\r\n            clearInterval(this.searchLoadInterval);\r\n        }\r\n        if (this.autoRefreshInterval) {\r\n            clearInterval(this.autoRefreshInterval);\r\n        }\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    getDispatcherLoads(statusId?): void {\r\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\r\n            return;\r\n        }\r\n        let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\r\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\r\n        this.SelectedPrioritiesId = _priorities;\r\n        let selectedDispacherIds = '';\r\n        this.FilterForm.get('SelectedDispachers').value.map(m => {\r\n            if (selectedDispacherIds == '') selectedDispacherIds = m.Id\r\n            else selectedDispacherIds += ',' + m.Id\r\n        })\r\n        let _carriers = []; this.FilterForm.get('SelectedCarriers').value.forEach(x => _carriers.push(x.Id));\r\n        let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\r\n        let _locAttributeIds = _locAttribute.join();\r\n        let _selectedRegion = []; this.FilterForm.get('SelectedRegions').value.forEach(x => _selectedRegion.push(x.Id));\r\n        let _selectedRegionIds = _selectedRegion.join();\r\n        let inputs = {\r\n            RegionId: _selectedRegionIds == null ? '' : _selectedRegionIds,\r\n            States: _states,\r\n            Priorities: _priorities,\r\n            FromDate: this.FilterForm.get('FromDate').value,\r\n            ToDate: this.FilterForm.get('ToDate').value,\r\n            DriverSearch: this.SearchedKeyword,\r\n            DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\r\n            CustomerId: this.FilterForm.get('SelectedCustomerId').value,\r\n            Carriers: _carriers,\r\n            IsShowCarrierManaged:this.FilterForm.get('IsShowCarrierManaged').value,\r\n            InventoryCaptureType:_locAttributeIds\r\n        };\r\n        this.loadingData = true;\r\n        var data = this.CloneOnGoingLoads;\r\n        var isFilter = false;\r\n\r\n        if (statusId && this.CloneOnGoingLoads && this.CloneOnGoingLoads.length > 0) {\r\n            data = data.filter(f => f.SttsId == statusId);\r\n            isFilter = true;\r\n        }\r\n        if (!isFilter) {\r\n            this.dispatcherService.getOnGoingLoads(inputs).subscribe((data) => {\r\n                this.CloneOnGoingLoads = data;\r\n                this.initailizeOnGoingLoad(data);\r\n\r\n            });\r\n        } else\r\n            this.initailizeOnGoingLoad(data);\r\n        //this.refreshDatatable();\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDSTATES_KEY, this.SelectedStates);\r\n       // MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDPRIORY_KEY, this.SelectedPriorities);\r\n      //  MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY, this.SelectedDispachers);\r\n     \r\n    }\r\n\r\n    private initailizeOnGoingLoad(data) {\r\n        this.OnGoingLoads = data;      \r\n        this.currentOngoingLoadDetails = this.OnGoingLoads.filter(t=>t.SttsId != null && (t.SttsId==1 ||t.SttsId==11 ||\r\n            t.SttsId==12 ||t.SttsId==18 ||t.SttsId==20));\r\n        // this.OnGoingLoads = data.filter(x => x.Lat != null && x.Lng != null);\r\n        //   .map(m => {\r\n        //       if (m.AppLastUpdatedDate)\r\n        //           var date = new Date(m.lastUpdateTimeDiff + ' UTC');\r\n        //       m.lastUpdateTimeDiff = date.toString();\r\n        //       return m;\r\n        //   } \r\n        //);\r\n        this.Drivers = this.OnGoingLoads.filter((thing, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === thing.Id)) === i;\r\n        });      \r\n        this.Drivers = this.Drivers.filter(x => x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        //last location not available\r\n        this.OfflineDrivers = [];\r\n        var driverFilter = [];     \r\n        data && data.map(m => {\r\n            if (!driverFilter.find(f => f && f.Name == m.Name)) {\r\n                driverFilter.push(m);\r\n                if (m.Lat == null && m.Lng == null && m.Name != null && m.Name != undefined && m.Name.trim() != '')\r\n                    (this.Drivers && this.Drivers.filter(f => f.Name == m.Name).length > 0) ? '' : this.OfflineDrivers.push(m);\r\n            }\r\n        })       \r\n        //this.OfflineDrivers = data.filter(x => x.Lat == null && x.Lng == null && x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        this.setMapCenter();\r\n        this.startAutoRefreshTimer();\r\n        this.loadingData = false;\r\n        this.addDrivertoBackground();\r\n\r\n    }\r\n\r\n    //private  getMinutesBetweenDates(startDate) {\r\n    //      var endDate = new Date();\r\n    //      startDate = new Date(startDate);\r\n    //    var diff = endDate.getTime() - startDate.getTime();\r\n    //    return (diff / 60000);\r\n    //  }\r\n\r\n    autoRefreshLoads(): void {\r\n        this.autoRefreshInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.getDispatcherLoads();\r\n            }\r\n        }, this.AUTO_REFRESH_TIME * 1000);\r\n    }\r\n\r\n    startAutoRefreshTimer(): void {\r\n        this.stopAutoRefreshTimer();\r\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n        this.autoRefreshTimerInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (this.autoRefreshTicks == 0) {\r\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n                    this.stopAutoRefreshTimer();\r\n                } else {\r\n                    this.autoRefreshTicks--;\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stopAutoRefreshTimer(): void {\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    mapReady(map: any): void {\r\n        this.googleMap = map;\r\n        this.setMapCenter();\r\n    }\r\n\r\n    setZoomLevel(): void {\r\n        if (this.OnGoingLoads.length == 0) {\r\n            this.setMapCenter();\r\n        } else {\r\n            this.zoomLevel = 8; // default zoom level\r\n        }\r\n    }\r\n\r\n    public toggleExpandMapView() {\r\n       /// this.toogleExpandMap = !this.toogleExpandMap;\r\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\r\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleMapView() {\r\n        //this.toogleMap = !this.toogleMap;\r\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleGrids() {\r\n        //this.toogleGrid = !this.toogleGrid;\r\n        var toggleGrid = this.FilterForm.get('ToggleGrids').value;\r\n        this.FilterForm.get('ToggleGrids').patchValue(!toggleGrid);\r\n    }\r\n\r\n    public toggleFilterView() {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n    public toggleDriverView() {\r\n       // this.toogleDriver = !this.toogleDriver;\r\n       var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\r\n       this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\r\n    }\r\n    public addDrivertoBackground() {\r\n        this.Drivers.forEach(xItem => {\r\n            this.backgroudchatDefault.push(xItem.Id);\r\n        })\r\n        this.sendbirdComponent.IntializeChatDefault(this.backgroudchatDefault, \"\");\r\n    }\r\n    public doChat(driverId: number) {\r\n        this.sendbirdComponent.IntializeDriverChat(driverId, \"\");\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        if (this.previousInfowindow !== null && this.previousInfowindow.isOpen) {\r\n            this.previousInfowindow.close();\r\n        }\r\n        if (infoWindow) {\r\n            this.previousInfowindow = infoWindow;\r\n            this.previousInfowindow.isOpen = true;\r\n            infoWindow.open();\r\n        }\r\n    }\r\n\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent, index: number = null): void {\r\n        if (this.previousInfowindow !== null && this.previousInfowindow.isOpen && infoWindow !== null) {\r\n            this.previousInfowindow.close();\r\n            this.previousInfowindow.isOpen = false;\r\n        }\r\n        if (infoWindow) {\r\n            infoWindow.close();\r\n        }\r\n    }\r\n\r\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\r\n        window.scrollTo(0, 0);\r\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\r\n        if (infoWindow && infoWindow.isOpen) {\r\n            infoWindow.close();\r\n        }\r\n        this.selectedDriverDetails = new DriverAdditionalDetails();\r\n        this.modalData = true;\r\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\r\n            if (data) {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\r\n                if(this.selectedDriverDetails.Trailers.length > 0)\r\n                {\r\n                    this.selectedDriverDetails.Trailers.forEach(t=>{\r\n                        t.OngoingData = this.currentOngoingLoadDetails.filter(res=>res.TrailerDisplayId.split(',').indexOf(t.TruckId));                       \r\n                    })\r\n                }\r\n                this.modalData = false;\r\n            }\r\n            else {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails();\r\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\r\n                this.modalData = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    //private restoreFilterStates(): void {\r\n    //    let _wbfRegionId = MyLocalStorage.getData(MyLocalStorage.WBF_REGION_KEY);\r\n    //    if (_wbfRegionId != null && _wbfRegionId != \"\") {\r\n    //        // this.SelectedRegionId = _wbfRegionId;\r\n    //        this.SelectedRegions = _wbfRegionId;\r\n    //        var ids = [];\r\n    //        this.SelectedRegionId = '';\r\n    //        this.SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n    //        this.SelectedRegionId = ids.join();\r\n    //        this.getCustomerListByRegionId(this.SelectedRegionId);\r\n    //        let _wbfCustomerName = MyLocalStorage.getData(MyLocalStorage.WBF_CUSTOMER_KEY);\r\n    //        _wbfCustomerName ? this.SelectedCustomerId = _wbfCustomerName : '';\r\n    //    } else {\r\n    //        let _dsbRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\r\n    //        if (_dsbRegionId != '') {\r\n    //            //   this.SelectedRegionId = _dsbRegionId;\r\n    //        }\r\n    //    }\r\n    //    let _searchKeyword = MyLocalStorage.getData(MyLocalStorage.WBF_SEARCHEDKEYWORD_KEY);\r\n    //    if (_searchKeyword != '') {\r\n    //        this.SearchedKeyword = _searchKeyword;\r\n    //    }\r\n    //    let _selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n    //    if (_selectedStates != '') {\r\n    //        this.SelectedStates = _selectedStates;\r\n    //    }\r\n    //    let _selectedPriorities = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDPRIORY_KEY);\r\n    //    if (_selectedPriorities != '') {\r\n    //        this.SelectedPriorities = _selectedPriorities;\r\n    //    }\r\n    //    let _selectedDispacher = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY);\r\n    //    if (_selectedDispacher != '') {\r\n    //        this.SelectedDispachers = _selectedDispacher;\r\n    //    }\r\n    //    if (this.disableControl == true) {\r\n    //        let _selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n    //        if (_selectedDate != '') {\r\n    //            this.FromDate = _selectedDate;\r\n    //            this.ToDate = _selectedDate;\r\n    //        }\r\n    //    }\r\n    //    //let _fromDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n    //    //if (_fromDate != '') {\r\n    //    //    this.FromDate = _fromDate;\r\n    //    //}\r\n    //    //let _toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n    //    //if (_toDate != '') {\r\n    //    //    this.ToDate = _toDate;\r\n    //    //}\r\n    //}\r\n\r\n    private closePreviousWindow(index: number): void {\r\n        if (this.previousInfowindowIndex != null && this.previousInfowindow != null) {\r\n            this.OnGoingLoads[this.previousInfowindowIndex].routeShow = false;\r\n            if (this.previousInfowindow && this.previousInfowindow.isOpen)\r\n                this.previousInfowindow.close();\r\n            this.setMapCenter();\r\n        }\r\n    }\r\n    public showHideRoutes(index: number): void {\r\n        if (index == this.previousInfowindowIndex || this.previousInfowindowIndex == null) {\r\n            this.OnGoingLoads[index].routeShow = !this.OnGoingLoads[index].routeShow;\r\n            if (!this.OnGoingLoads[index].routeShow)\r\n                this.setMapCenter();\r\n        } else {\r\n            this.closePreviousWindow(index);\r\n        }\r\n        this.previousInfowindowIndex = index;\r\n    }\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false)\r\n            //this.toogleDriver = true;\r\n        }\r\n\r\n    }\r\n    public loadDropTicketDetails(invoiceHeaderId: number) {\r\n        Declarations.showSliderPanel();\r\n        this.dispatcherService.GetDropTicketDetails(invoiceHeaderId).subscribe(data => {\r\n            if (data != '') {\r\n                $(\"#invoice\").html('');\r\n                $(\"#invoice\").html(data);\r\n            }\r\n            else {\r\n                $(\"#invoice\").html('');\r\n                Declarations.msgwarning('No Drop ticket details found.', null, 3000);\r\n            }\r\n\r\n            Declarations.appendHTMLSliderContent(\"#invoice\");\r\n            Declarations.hideSliderLoader();\r\n        });\r\n    }\r\n\r\n\r\n    filterMapByStatus(statusId) {\r\n        this.selectedMaplable = statusId;\r\n        this.getDispatcherLoads(statusId)\r\n        //this.autoRefreshLoads(statusId);\r\n    }\r\n\r\n    private getCustomerListByRegionId(SelectedRegionId) {\r\n        this.loadingData = true;\r\n        this.carrierService.getJobListForCarrier(SelectedRegionId).subscribe(t2 => {\r\n            this.loadingData = false;\r\n            this.customerList = t2;\r\n        });\r\n    }\r\n\r\n\r\n    isArrayEqual(value, other) {\r\n        var type = Object.prototype.toString.call(value);\r\n        if (type !== Object.prototype.toString.call(other)) return false;\r\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\r\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n        if (valueLen !== otherLen) return false;\r\n        var compare = function (item1, item2) {\r\n        };\r\n        var match;\r\n        if (type === '[object Array]') {\r\n            for (var i = 0; i < valueLen; i++) {\r\n                compare(value[i], other[i]);\r\n            }\r\n        } else {\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    compare(value[key], other[key]);\r\n                }  }     }\r\n        return true;\r\n\r\n    }\r\n\r\n    public applyLoadsFilters(filterForm:FormGroup){\r\n        this.FilterForm = filterForm;\r\n        this.filterDriverData();\r\n    }\r\n}\r\n\r\n","<!-- <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div> -->\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"col-sm-6\">\r\n                <!-- <ng-multiselect-dropdown  [formControl]=\"FilterForm.controls['SelectedRegions']\" \r\n                                         [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Region'\" [data]=\"Regions\"\r\n                                         (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionUnselect($event)\" (onSelectAll)=\"onRegionSelect($event)\" (onDeSelectAll)=\"onRegionUnselect($event)\">\r\n                </ng-multiselect-dropdown> -->\r\n                <!-- [(ngModel)]=\"SelectedRegions\" -->\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <select class=\"form-control\" (change)=\"customerChanged($event)\">\r\n                    <option [value]=null>Select Customer</option>\r\n                    <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\" [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                        {{customer.CompanyName}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\" [(ngModel)]=\"FromDate\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\" [(ngModel)]=\"ToDate\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"col-sm-3 pl0 text-right\" (clickOutside)=\"clickOutsideDropdown()\">\r\n            <a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>\r\n            <a class=\"hide_show_map fs14 ml10\" (click)=\"toggleMapView()\"><i class=\"fas fa-eye mr5\"></i>{{ toogleMap == true ? 'Hide Map' : 'Show Map'}}</a>\r\n            <div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n                <div class=\"pull-right\">\r\n                    <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [(ngModel)]=\"SelectedStates\"\r\n                                                         [settings]=\"StateDdlSettings\" [placeholder]=\"'Select States'\" [data]=\"RegionStates\"\r\n                                                         (onSelect)=\"onStateSelect($event)\" (onDeSelect)=\"onStateUnselect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorities\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\" [data]=\"LoadPriorities\"\r\n                                                         (onSelect)=\"onPrioritySelect($event)\" (onDeSelect)=\"onPriorityUnselect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [(ngModel)]=\"SelectedDispachers\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Dispacher'\" [data]=\"RegionDispachers\"\r\n                                                         (onSelect)=\"onDispacherSelect($event)\" (onDeSelect)=\"onDispacherUnselect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n<div class=\"row animated mt60\">\r\n\r\n    <div class=\"\" [ngClass]=\"{'fadeIn': FilterForm.get('ToggleMap').value, 'display_hide': !FilterForm.get('ToggleMap').value ,'col-sm-9': !FilterForm.get('ToggleExpandMapView').value , 'col-sm-12':FilterForm.get('ToggleExpandMapView').value  === true  }\">\r\n        <div class=\"expand_map_btn\">\r\n            <a class=\"\" (click)=\"toggleExpandMapView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleExpandMapView').value, 'fa-arrow-circle-left': FilterForm.get('ToggleExpandMapView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div id=\"map-view\" class=\"mb15\">\r\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; top: -5px; left: 10px; font-size: 11px;\">\r\n                <div id=\"status-legends\" class=\"well pa0\">\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(11)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==11}\">\r\n                            <img src=\"src/assets/truck-11.svg\" data-statusid=\"11\">\r\n                            On the way to terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(12)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==12}\">\r\n                            <img src=\"src/assets/truck-12.svg\" data-statusid=\"12\">\r\n                            Arrived at terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(1)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==1}\">\r\n                            <img src=\"src/assets/truck-1.svg\" data-statusid=\"1\">\r\n                            On the way to location\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(18)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==18}\">\r\n                            <img src=\"src/assets/truck-18.svg\" data-statusid=\"18\">\r\n                            Arrived at location\r\n                        </a>\r\n\r\n                    </div>\r\n                    <!--<div class=\"pb5 pt5 pl5\">\r\n                        <img src=\"src/assets/truck-20.svg\" data-statusid=\"20\">\r\n                        Fuel truck retained\r\n                    </div>-->\r\n                </div>\r\n            </div>\r\n            <div style=\"z-index: 1; position: absolute; top: 0; right: 65px; font-size: 11px; opacity:0.9\">\r\n                <div class=\"well pa5\">Auto Refresh in: <b>{{autoRefreshTicks * 1000 | date:'mm:ss':'UTC'}}</b> minutes</div>\r\n            </div>\r\n            <agm-map [ngStyle]=\"{'height': FilterForm.get('singleMulti').value  == 2 ? '80vh' : '60vh' }\"  [zoom]=\"zoomLevel\" [maxZoom]=\"16\" [minZoom]=\"2\"\r\n                (mapReady)=\"mapReady($event)\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\">\r\n                <ng-container *ngFor=\"let driver of OnGoingLoads let indx=index\">\r\n                    <div>\r\n                    \r\n                    <agm-marker [latitude]=\"driver.Lat\" [longitude]=\"driver.Lng\"  labelContent=\"Label marker\" labelClass=\"circle-badge\" \r\n                                [iconUrl]=\"{'url':'src/assets/truck-'+driver.SttsId+'.svg','scaledSize':{'height':50,'width':50}}\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (markerClick)=\"showHideRoutes(indx)\" (mouseOut)=\"mouseHoveOutMarker(null,$event,indx)\"\r\n                                [label]=\"{ position: 'absolute',\r\n                                top: '-11px',\r\n                                left: '-14px',                                \r\n                                background: '#fa9393',\r\n                                display: 'inline-flex',\r\n                                width: '18px',\r\n                                height: '18px', \r\n                                color:'red',                              \r\n                                fontWeight: 'bold', fontSize: '18px',\r\n                                scaledSize: { width: 65, height: 65, anchor : {x:30, y:30}   }, labelOrigin:{x:20,y:20},\r\n                                text: driver.FuelRetainCount.toString()}\" >                     \r\n                             \r\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                            <div>\r\n                                <p><strong>Driver Name: </strong> {{ driver.Name}}</p>\r\n                                <p><strong>Contact Number: </strong><a href=\"tel:{{driver.PhNo}}\" target=\"_blank\" title=\"Call {{driver.Name}}\">{{driver.PhNo}}</a></p>\r\n                                <p><strong>Last UpdatedAt: </strong> {{ driver.AppLastUpdatedDate}}</p>\r\n                                <a (click)=\"showDriverDetails(driver,infoWindow);\" title=\"Show {{driver.Name}} more details\">Show more</a>\r\n                                <p class=\"pull-right\">\r\n                                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs21 far fa-comment\"></span></a>\r\n                                </p>\r\n\r\n                                <p style=\"font-size:11px;padding-top: 10px;\" *ngIf=\"driver.routeShow else showRouteTemplate\"><strong>Note:</strong> Click truck to hide routes.</p>\r\n                                <ng-template #showRouteTemplate>\r\n                                    <p style=\"font-size:11px;padding-top: 10px;\"><strong>Note:</strong>  Click truck to view routes</p>\r\n                                </ng-template>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                </div>\r\n                    <agm-marker [latitude]=\"driver.dLat\" [longitude]=\"driver.dLng\" [iconUrl]='{ \"url\": \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", \"scaledSize\": { \"height\": 25, \"width\": 25 } }' (mouseOver)=\"mouseHoverMarker(infoWindow2,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow2,$event,null)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" [maxWidth]=\"200\" #infoWindow2>\r\n                            <div>\r\n                                <p><b>Engaged Driver : </b> {{ driver.Name}}</p>\r\n                                <p><b>Drop Location: </b>{{ driver.Loc}}</p>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    <agm-direction *ngIf=\"driver.dLat\" [origin]=\"{lat:driver.Lat, lng: driver.Lng}\" [destination]=\"{lat:driver.dLat, lng: driver.dLng}\"\r\n                                   [visible]=\"driver.routeShow\" [renderOptions]=\"{ suppressMarkers: true , polylineOptions: { strokeColor: driver.statusColor }}\"></agm-direction>\r\n                </ng-container>\r\n            </agm-map>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"pl0\" [ngClass]=\"{'col-sm-3': (FilterForm.get('ToggleExpandMapView').value === false && FilterForm.get('ToggleMap').value === true), 'absolute_driver': FilterForm.get('ToggleMap').value ===false, 'hide_absolute_driver': (FilterForm.get('ToggleDriverView').value === true && FilterForm.get('ToggleMap').value === false), 'display_hide': (FilterForm.get('ToggleExpandMapView').value === true && FilterForm.get('ToggleMap').value ===true) }\">\r\n        <div class=\"driver_btn\" *ngIf=\"!FilterForm.get('ToggleMap').value\">\r\n            <a class=\"\" (click)=\"toggleDriverView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleDriverView').value, 'fa-arrow-circle-left':  FilterForm.get('ToggleDriverView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div class=\"mt10\">\r\n            <h3 class=\"pull-left mt6 pb0 dib\">Drivers</h3>\r\n            <div class=\"inner-addon left-addon pull-left ml10\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Drivers\" type=\"text\" (input)=\"searchDrivers($event)\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"driver-list dib full-width\">\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of Drivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\"><span [ngClass]=\"driver.IsOnline ? 'live':''\"></span>{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" [ngClass]=\"{'activeRoute':driver.routeShow}\" [ngStyle]=\"{ 'color': (driver.routeShow ? driver.statusColor : '#2b2b2b') }\" title=\"Click to {{driver.routeShow ? 'hide':'show'}} routes\" (click)=\"showHideRoutes(indx)\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n                <div class=\"pull-right mt10\">\r\n                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs18 far fa-comment\"></span></a>\r\n                    <a (click)=\"showDriverDetails(driver,null);\" title=\"Show more details\"> <span class=\"fs18 fa fa-info-circle pl5\"></span></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of OfflineDrivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\">{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" title=\"Last location is not available\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n                <div class=\"pull-right mt10\">\r\n                    <!--<a (click)=\"dochat(driver.id)\" title=\"chat with {{driver.name}}\"> <span class=\"fs18 far fa-comment\"></span></a>-->\r\n                    <a (click)=\"showDriverDetails(driver,null);\" title=\"Show more details\"> <span class=\"fs18 fa fa-info-circle pl5\"></span></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"chat-wrapper\" style=\"z-index: 9999;\">\r\n    <app-sendbird></app-sendbird>\r\n</div>\r\n<ng-template #driverDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true, 'left':true,'fade':true,'show': modalDetails.display==='block'}\" [ngStyle]=\"{'display':modalDetails.display}\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n            <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pb0 pt0\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{selectedDriverDetails.Name}}\r\n                        <a (click)=\"doChat(modalDetails.data.Id);\" title=\"Chat\"> <span class=\"fs18 far fa-comment\"></span></a>\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt10\" (click)=\"modalClose()\" aria-label=\"Close\"> <i class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>\r\n                <div class=\"modal-body \" style=\"max-height:80vh;overflow-y:scroll\">\r\n                    <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"modalData\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"mb10\">\r\n                        <b>Licence Number: </b> {{ selectedDriverDetails.License}}<br>\r\n                        <ng-container *ngIf=\"!selectedDriverDetails.Shifts.length else driverShifts\"><b>Shift : </b> Not Available<br></ng-container>\r\n                        <b>Contact Number: </b> <a href=\"tel:{{ selectedDriverDetails.ContactNumnber}}\" target=\"_blank\">{{selectedDriverDetails.ContactNumnber}}</a>\r\n                        <ng-template #driverShifts>\r\n                            <ng-container *ngFor=\"let shift of selectedDriverDetails.Shifts index as i\">\r\n                                <b>Shift ({{i+1}}): </b> {{shift}}<br>\r\n                            </ng-container>\r\n                        </ng-template>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <h4 class=\"pt0 mb5\">Trailer Details</h4>\r\n                            <div class=\"well bg-white shadow-b pr\">\r\n                                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span class='spinner-dashboard pa'></span></div>\r\n\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border location_table\">\r\n                                        <div class=\"table-responsive\" id=\"trailerDetails\">\r\n                                            <!--Enum - GridName.DispatcherSelectedDriverTrailerGrid => 23-->\r\n                                            <table id=\"table-selectedDriverTrailers\" #SelectedDriverTrailer data-gridname=\"23\" class=\"table table-bordered table-hover\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"TruckId\">Trailer ID</th>\r\n                                                        <th data-key=\"LicencePlate\">License</th>                                                       \r\n                                                        <th data-key=\"Compartment\">\r\n                                                           Details                                                            \r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <ng-container *ngIf=\"!selectedDriverDetails.Trailers.length else truckDetailsTable\">\r\n                                                        <tr>No Data Available.</tr>\r\n                                                    </ng-container>\r\n                                                    <ng-template #truckDetailsTable>\r\n                                                        <tr *ngFor=\"let row of selectedDriverDetails.Trailers\">\r\n                                                            <td>{{row.TruckId}}</td>\r\n                                                            <td>{{row.LicencePlate}}</td>\r\n                                                            <td>                                                                \r\n                                                                <span *ngIf=\"row.OngoingData.length > 0\"><b>Ongoing</b>\r\n                                                                <table>                                                                     \r\n                                                                    <thead>\r\n                                                                        <th>Fuel Type</th>\r\n                                                                        <th>Quantity</th> \r\n                                                                                                                                         \r\n                                                                    </thead>\r\n                                                                    <tbody *ngFor=\"let currentLoad of row.OngoingData\">\r\n                                                                        <tr >\r\n                                                                            <td>{{currentLoad.PrdtNm}}</td>\r\n                                                                            <td>{{currentLoad.Qty}}</td>\r\n                                                                        </tr>                                                                        \r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                            </span>\r\n                                                                <br>\r\n                                                                <span><b>Retain</b></span>\r\n                                                                <table>                                                                 \r\n                                                                    <thead>\r\n                                                                        <th style=\"width: 10px;\">Compartment</th>\r\n                                                                        <th style=\"width: 10px;\">Fuel Capacity</th>\r\n                                                                        <th style=\"width: 10px;\">Fuel Type</th>\r\n                                                                        <th style=\"width: 10px;\">Fuel Remaining</th>\r\n                                                                    </thead>\r\n                                                                    <ng-container *ngIf=\"!row.TrailerFuelRetains.length else retainDetailsTable\">\r\n                                                                        <ng-container *ngIf=\"row.Compartments.length > 0 else Trailer\">\r\n                                                                            <tbody *ngFor=\"let Compartment of row.Compartments\">\r\n                                                                                <td style=\"width: 10px;\">{{Compartment.CompartmentId?Compartment.CompartmentId:\"--\"}}</td>                                                                       \r\n                                                                                <td style=\"width: 10px;\" *ngIf=\"Compartment.Capacity > 0 else Campcapcity\" >{{Compartment.Capacity | number:'1.0-2'}} {{row.DefaultUOM ==2?\" L\" :\" G\"}}</td>                                                                                \r\n                                                                                <ng-template #Campcapcity>\r\n                                                                                    <td>--</td>\r\n                                                                                </ng-template>\r\n                                                                                <td style=\"width: 10px;\">--</td>\r\n                                                                                <td style=\"width: 10px;\">0 {{row.DefaultUOM ==2?\" L\" :\" G\"}}</td>\r\n                                                                            </tbody>\r\n                                                                        </ng-container>\r\n                                                                        <ng-container>\r\n                                                                            <ng-template #Trailer>\r\n\r\n                                                                                <tbody >\r\n                                                                                    <td style=\"width: 10px;\">--</td>                                                                       \r\n                                                                                    <td style=\"width: 10px;\"  *ngIf=\"row.FuelCapacity > 0 else tcapcity\" >{{row.FuelCapacity | number:'1.0-2'}}{{row.DefaultUOM ==2?\" L\" :\" G\"}} </td>\r\n                                                                                    <ng-template #tcapcity>\r\n                                                                                        <td>--</td>\r\n                                                                                    </ng-template>\r\n                                                                                    <td style=\"width: 10px;\">--</td>\r\n                                                                                    <td style=\"width: 10px;\"> 0 {{row.DefaultUOM ==2?\" L\" :\" G\"}}</td>\r\n                                                                                </tbody>\r\n\r\n                                                                            </ng-template>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n                                                                    <ng-container >\r\n                                                                        <ng-template #retainDetailsTable>\r\n                                                                            <tbody *ngFor=\"let fuelDetail of row.TrailerFuelRetains\">\r\n                                                                                <td style=\"width: 10px;\">{{fuelDetail.CompartmentId?fuelDetail.CompartmentId:\"--\"}}</td>                                                                       \r\n                                                                                <td style=\"width: 10px;\" *ngIf=\"fuelDetail.CompartmentCapacity > 0 else capcity\">{{ fuelDetail.CompartmentCapacity | number:'1.0-2' }}{{fuelDetail.UOM==2?\" L\" :\" G\"}}</td>\r\n                                                                                <ng-template #capcity>\r\n                                                                                    <td>--</td>\r\n                                                                                </ng-template>\r\n                                                                                <td style=\"width: 10px;\">{{fuelDetail.ProductType}}</td>\r\n                                                                                <td style=\"width: 10px;\">\r\n                                                                                    {{fuelDetail.Quantity| number:'1.0-2'  }}{{fuelDetail.UOM==2?\" L\" :\" G\"}}</td>\r\n                                                                            </tbody>\r\n                                                                        </ng-template>\r\n                                                                    </ng-container>                                                                    \r\n                                                                </table>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </ng-template>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-container *ngTemplateOutlet=\"driverDetailsModal;context:driverModal\">\r\n</ng-container>\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChildren, QueryList, OnDestroy, ViewChild, SimpleChanges, OnChanges, Input, ViewEncapsulation, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { Subject, from, Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird/sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel, SelectedItem } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { WhereIsMyDriverMapViewComponent } from './where-is-my-driver-map-view.component';\r\nimport { WhereIsMyDriverGridViewComponent } from './where-is-my-driver-grid-view.component';\r\nimport { TfxModule } from 'src/app/app.enum';\r\nimport { InventoryDataCaptureList, LoadPriorities, RegExConstants } from 'src/app/app.constants';\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver',\r\n    templateUrl: './where-is-my-driver.component.html',\r\n    styleUrls: ['./where-is-my-driver.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class WhereIsMyDriverComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() singleMulti: number;\r\n    @ViewChild('myDiv') myDiv: ElementRef<HTMLElement>;\r\n\r\n    @ViewChild(WhereIsMyDriverMapViewComponent)  loadsMapView : WhereIsMyDriverMapViewComponent;\r\n    @ViewChild(WhereIsMyDriverGridViewComponent) loadsGridView: WhereIsMyDriverGridViewComponent;\r\n\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 4;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n    public FilterForm: FormGroup;\r\n    public IsFiltersLoaded: boolean = false;\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n   \r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n    public Regions: DistatcherRegionModel[] = [];\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    selectedLocAttributeList = [];\r\n    public RegionStates: any = [];\r\n    public RegionDispachers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public CarrierDdlSettings: any = {};\r\n    public SelectedRegionId: string;\r\n    public SelectedCustomerId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n    public toogleGrid: Boolean = false;\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    public viewLoadType = 1;\r\n    public loadScreenType = 'All';\r\n    public isShowCarrierManaged: boolean = false;\r\n    public carrierList: any[] = [];\r\n    public SelectedCarriers: any = [];\r\n    public count: number = 0;\r\n\r\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: DispatcherService, private chatService: chatService, private carrierService: CarrierService, private cdr: ChangeDetectorRef) {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        if (this.singleMulti == 1)\r\n            this.loadScreenType = 'All';\r\n\r\n        var _this = this;\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            _this.SaveFilters(true);\r\n            return;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.setFilterForm();\r\n        this.readOnlyModeSelection();\r\n        this.StateDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.PriorityDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.RegionDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        this.CarrierDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.subscribeFormChanges();\r\n        this.restoreFilterStates();\r\n        this.dispatcherService.GetDispatcherRegions().subscribe(data => {\r\n            this.Regions = data;\r\n            this.GetFilters();\r\n        });\r\n        this.getCarriers();\r\n    }\r\n\r\n    public setFilterForm() {\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n\r\n        this.FilterForm = this.fb.group({\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            ToggleMap: this.fb.control(true),\r\n            ToggleExpandMapView: this.fb.control(false),\r\n            ToggleGrids: this.fb.control(false),\r\n            ToggleDriverView: this.fb.control(false),\r\n            SelectedCarriers: this.fb.control([]),\r\n            SelectedRegions: this.fb.control([]),\r\n            SelectedStates: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([]),\r\n            SelectedDispachers: this.fb.control([]),\r\n            SelectedCustomerId: this.fb.control(null),\r\n            singleMulti: this.fb.control(this.singleMulti),\r\n            FromDate: this.fb.control(fromDate),\r\n            ToDate: this.fb.control(toDate),\r\n            selectedLocAttributeList: this.fb.control([])\r\n        });\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        this.subscriptions.add(this.FilterForm.get('SelectedRegions').valueChanges\r\n            .subscribe(change => {\r\n                if (change) {\r\n                    var ids = [];\r\n                    var SelectedRegions = change;\r\n                    SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n                    var selectedRegionId = ids.join();\r\n                    if (this.SelectedRegionId != selectedRegionId) {\r\n                        this.SelectedRegionId = selectedRegionId;\r\n                        this.regionChanged();\r\n                    }\r\n                }\r\n            }))\r\n        this.subscriptions.add(this.FilterForm.get('SelectedCarriers').valueChanges\r\n            .subscribe(change => {\r\n                this.FilterForm.get('SelectedRegions').patchValue([]);\r\n            }));\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges\r\n            .subscribe(change => {\r\n                this.FilterForm.get('SelectedCarriers').patchValue([]);\r\n                this.FilterForm.get('SelectedRegions').patchValue([]);\r\n                this.ApplyLoadFilters();\r\n            }));\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n    getCarriers() {\r\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\r\n            this.carrierList = data;\r\n        });\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        let filterChange = localStorage.getItem(\"filterChange\") ? localStorage.getItem(\"filterChange\") : 0;\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            this.viewLoadType = (localStorage.getItem('viewLoadType')) ? +(localStorage.getItem('viewLoadType')) : 1;\r\n            if (this.singleMulti == 1) {\r\n                this.viewLoadType = 1\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType = \"All\"\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 0 && filterChange == 0) {\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType == \"Grid\" ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.viewLoadType == 2 && this.singleMulti == 2 && filterChange == 0) {\r\n                this.loadScreenType = sessionStorage.getItem('loadScreenType');\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 1 && filterChange == 0) {\r\n                this.viewLoadType == 1 ? this.loadScreenType = \"Map\" : '';\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (filterChange == 1 && this.singleMulti == 2) {\r\n                sessionStorage.getItem('loadScreenType') ? this.loadScreenType = sessionStorage.getItem('loadScreenType') : 'All';\r\n            }\r\n            if (this.loadScreenType == null && this.singleMulti == 2) { this.loadScreenType = 'Map' }\r\n\r\n        }\r\n        filterChange = 0;\r\n        localStorage.setItem('filterChange', filterChange.toString());\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unSubscribeFormChanges();\r\n        this.SaveFilters(true);\r\n    }\r\n\r\n    regionChanged(event?: any): void {\r\n        this.setRegionStates();\r\n        this.setRegionDispachers();\r\n        if (this.SelectedRegionId != \"\") {\r\n            this.getCustomerListByRegionId(this.SelectedRegionId);\r\n        }\r\n    }\r\n\r\n    customerChanged(event: any): void {\r\n        this.SelectedCustomerId = (event.target.value == \"null\" || event.target.value == null) ? null : event.target.value;\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_CUSTOMER_KEY, this.SelectedCustomerId);\r\n    }\r\n\r\n    setRegionStates(): void {\r\n        this.RegionStates = [];\r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.States && m.States.length > 0) {\r\n                    this.RegionStates = this.RegionStates.concat(m.States);\r\n                }\r\n            }\r\n        })\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value || [];\r\n        selectedStates = selectedStates.filter(t => { return this.RegionStates.some(el => el.Code == t.Code); });\r\n        this.FilterForm.get('SelectedStates').patchValue(selectedStates);\r\n    }\r\n\r\n    setRegionDispachers(): void {\r\n        this.RegionDispachers = [];\r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.Dispatchers && m.Dispatchers.length > 0) {\r\n                    this.RegionDispachers = this.RegionDispachers.concat(m.Dispatchers);\r\n                }\r\n            }\r\n        })\r\n        this.RegionDispachers = this.GetUniqueItems(this.RegionDispachers.reduce((p, n) => p.concat(n), []));\r\n\r\n        var selectedDispachers = this.FilterForm.get('SelectedDispachers').value || [];\r\n        selectedDispachers = selectedDispachers.filter(t => { return this.RegionDispachers.some(el => el.Id == t.Id); });\r\n        this.FilterForm.get('SelectedDispachers').patchValue(selectedDispachers);\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('FromDate').patchValue(event);\r\n        }\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' &&\r\n            RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_toDate < _fromDate) {\r\n                this.FilterForm.get('ToDate').patchValue(event)\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    setToDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('ToDate').patchValue(event);\r\n        }\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' &&\r\n            RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_fromDate > _toDate) {\r\n                this.FilterForm.get('FromDate').patchValue(event);\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    public toggleExpandMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\r\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleGrids() {\r\n        this.toogleGrid = !this.toogleGrid;\r\n    }\r\n\r\n    public toggleFilterView() {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n    public toggleDriverView() {\r\n        var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\r\n        this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\r\n    }\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    private restoreFilterStates(): void {\r\n        if (this.disableControl == true) {\r\n            let _selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n            if (_selectedDate != '') {\r\n                this.FilterForm.get('FromDate').patchValue(_selectedDate);\r\n                this.FilterForm.get('ToDate').patchValue(_selectedDate);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n        }\r\n\r\n    }\r\n    public loadDropTicketDetails(invoiceHeaderId: number) {\r\n        Declarations.showSliderPanel();\r\n        this.dispatcherService.GetDropTicketDetails(invoiceHeaderId).subscribe(data => {\r\n            if (data != '') {\r\n                $(\"#invoice\").html('');\r\n                $(\"#invoice\").html(data);\r\n            }\r\n            else {\r\n                $(\"#invoice\").html('');\r\n                Declarations.msgwarning('No Drop ticket details found.', null, 3000);\r\n            }\r\n\r\n            Declarations.appendHTMLSliderContent(\"#invoice\");\r\n            Declarations.hideSliderLoader();\r\n        });\r\n\r\n    }\r\n    private getCustomerListByRegionId(SelectedRegionId) {\r\n        this.loadingData = true;\r\n        this.carrierService.getJobListForCarrier(SelectedRegionId).subscribe(t2 => {\r\n            this.loadingData = false;\r\n            this.customerList = t2;\r\n            var selectedCustomerId = this.FilterForm.get('SelectedCustomerId').value;\r\n            this.SelectedCustomerId = this.customerList.filter(t => t.CompanyId == selectedCustomerId).length > 0 ? selectedCustomerId : null;\r\n            if (this.SelectedCustomerId != selectedCustomerId) {\r\n                this.FilterForm.get('SelectedCustomerId').patchValue(this.SelectedCustomerId);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    async SaveFilters(isTopFilter?:boolean) {\r\n        if(isTopFilter){\r\n            this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLoads).subscribe(res => {              \r\n                if (res && Object.keys(res).length > 0) {\r\n\r\n                    var IsShowCarrierManaged = this.FilterForm.get(\"IsShowCarrierManaged\").value;\r\n                    var  SelectedCarriers=  this.FilterForm.get(\"SelectedCarriers\").value || [];                  \r\n                    let jsonFilterForm : FormGroup = null;                \r\n                    jsonFilterForm = JSON.parse(res);\r\n                    jsonFilterForm[\"IsShowCarrierManaged\"]= IsShowCarrierManaged;\r\n                    jsonFilterForm[\"SelectedCarriers\"] =SelectedCarriers;\r\n                    var filterModel = JSON.stringify(jsonFilterForm);                   \r\n                    this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardLoads, filterModel).subscribe();\r\n                }\r\n            });\r\n        }else{\r\n            var filterModel = JSON.stringify(this.FilterForm.value);\r\n            this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardLoads, filterModel).subscribe();\r\n        }\r\n\r\n    }\r\n\r\n    getFilterData() {\r\n        this.dispatcherService.getFilters(this.FilterForm.get('IsShowCarrierManaged').value).subscribe(data => {\r\n            this.Regions = data;\r\n            this.RegionStates = this.GetUniqueItems(data.map(t => t.States).reduce((p, n) => p.concat(n), []));\r\n            this.LoadPriorities = this.GetUniqueItems(data.map(t => t.Priority).reduce((p, n) => p.concat(n), []));\r\n            this.RegionDispachers = this.GetUniqueItems(data.map(t => t.Dispachers).reduce((p, n) => p.concat(n), []));\r\n        });\r\n    }\r\n    public GetFilters() {\r\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLoads).subscribe(res => {\r\n            if (res && Object.keys(res).length > 0) {\r\n                this.SetFilters(res);\r\n            }\r\n            else {\r\n                if (this.Regions && this.Regions.length > 0) {\r\n                    var lstRegion = [this.Regions[0]];\r\n                    this.FilterForm.get('SelectedRegions').patchValue(lstRegion);\r\n                }\r\n                this.setRegionStates();\r\n                this.setRegionDispachers();\r\n                this.IsFiltersLoaded = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.some(t => t == item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        if (input && Object.keys(input).length > 0) {\r\n\r\n            // setTimeout(() => {\r\n                var jsonFilterForm = JSON.parse(input);\r\n              \r\n                delete jsonFilterForm[\"FromDate\"];\r\n                delete jsonFilterForm[\"ToDate\"];\r\n                this.FilterForm.patchValue(jsonFilterForm);\r\n                if(!this.FilterForm.get('SelectedRegions').value || !this.FilterForm.get('SelectedRegions').value.length){\r\n                    if( this.Regions && this.Regions.length)\r\n                    {\r\n                        var lstRegion = [this.Regions[0]];\r\n                        this.FilterForm.get('SelectedRegions').patchValue(lstRegion);\r\n                    }\r\n                }\r\n                if (jsonFilterForm.SelectedCustomerId == \"\") {\r\n                    this.FilterForm.get('SelectedCustomerId').patchValue(null);\r\n                    this.SelectedCustomerId = this.FilterForm.get('SelectedCustomerId').value;\r\n                }\r\n                this.IsFiltersLoaded = true;\r\n                this.cdr.detectChanges();\r\n                let el: HTMLElement = this.myDiv.nativeElement;\r\n                el.click();\r\n                this.setRegionStates();\r\n                this.setRegionDispachers();\r\n                let that= this;\r\n                setTimeout(function () {\r\n                    that.ApplyLoadFilters();\r\n                 }, 1000);              \r\n            // }, 1500);\r\n        }\r\n    }\r\n\r\n    public ApplyLoadFilters(msg?) {\r\n        this.SaveFilters(false);\r\n        this.count = 0;\r\n        if (this.FilterForm) {\r\n\r\n            var selectedRegions = this.FilterForm.get('SelectedRegions').value || [];\r\n            selectedRegions.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedStates = this.FilterForm.get('SelectedStates').value || [];\r\n            selectedStates.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedPriorities = this.FilterForm.get('SelectedPriorities').value || [];\r\n            selectedPriorities.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedDispachers = this.FilterForm.get('SelectedDispachers').value || [];\r\n            selectedDispachers.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\r\n            if (selectedLocAttributeList != null || selectedLocAttributeList != 'undefined') {\r\n                selectedLocAttributeList.forEach(res => {\r\n                    this.count++;\r\n                });\r\n            }\r\n            else {\r\n                this.FilterForm.get('selectedLocAttributeList').patchValue(0);\r\n            }\r\n            \r\n        }\r\n\r\n        this.loadsGridView.applyLoadsFilters(this.FilterForm);\r\n        this.loadsMapView.applyLoadsFilters(this.FilterForm);\r\n\r\n        if(msg==\"set\"){\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        }else if(msg == \"reset\"){\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n    }\r\n\r\n    public ResetLoadFilters(){\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n        this.FilterForm.get('SelectedRegions').patchValue([]);\r\n        this.FilterForm.get('SelectedStates').patchValue([]);\r\n        this.FilterForm.get('SelectedPriorities').patchValue([]);\r\n        this.FilterForm.get('SelectedDispachers').patchValue([]);\r\n        this.FilterForm.get('SelectedCustomerId').patchValue([]);\r\n        this.FilterForm.get('FromDate').patchValue(fromDate);\r\n        this.FilterForm.get('ToDate').patchValue(toDate);\r\n        this.FilterForm.get('selectedLocAttributeList').patchValue([]);\r\n       \r\n        this.ApplyLoadFilters('reset');\r\n    }\r\n}\r\n\r\nexport interface SelectedState {\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\n","<div class=\"col-sm-9 sticky-header-wmd\" [formGroup]=\"FilterForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-7\">\r\n                    <div class=\"form-check form-check-inline fs14 mt5\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" formControlName=\"IsShowCarrierManaged\">\r\n                        <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n                    </div>\r\n                    <div class=\"mtm5\" *ngIf=\"FilterForm.get('IsShowCarrierManaged').value\">\r\n                        <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\" [autoClose]=\"'outside'\">Select Carrier</a>\r\n                        <ng-template #popContent>\r\n                            <div class=\"col-sm-12 p-0\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedCarriers']\"\r\n                                                         [settings]=\"CarrierDdlSettings\"\r\n                                                         [placeholder]=\"'Select Carrier'\"\r\n                                                         [data]=\"carrierList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-5\">\r\n\r\n                    <!--<ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedRegions']\"\r\n                                             [settings]=\"RegionDdlSettings\"\r\n                                             [placeholder]=\"'Select Region'\"\r\n                                             [data]=\"Regions\">\r\n                    </ng-multiselect-dropdown>-->\r\n                    <div #myDiv></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker\r\n                   [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\"\r\n                   formControlName=\"FromDate\" autocomplete=\"off\">-->\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker\r\n                   [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\"\r\n                   formControlName=\"ToDate\" autocomplete=\"off\">-->\r\n        </div>\r\n        <div class=\"col-sm-3 pl0 text-right pt8\"> <!--(clickOutside)=\"clickOutsideDropdown()\"-->\r\n            <!--<a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>-->\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span></i>Filters</a>\r\n            <a class=\"hide_show_map fs14 ml10\" (click)=\"toggleMapView()\">\r\n                <i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleMap').value ? 'Hide Map' : 'Show Map'}}\r\n            </a>\r\n            <!--<div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n                <div class=\"pull-right\">\r\n                    <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\" [settings]=\"StateDdlSettings\"\r\n                                                         [placeholder]=\"'Select States'\" [data]=\"RegionStates\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                                                         [data]=\"LoadPriorities\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedDispachers']\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Dispatcher'\"\r\n                                                         [data]=\"RegionDispachers\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                                         [data]=\"LocationAttributeList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <select class=\"form-control\" [formControl]=\"FilterForm.controls['SelectedCustomerId']\">\r\n                                    <option [value]=null>Select Customer</option>\r\n                                    <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\"\r\n                                            [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                                        {{customer.CompanyName}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n    <ng-template #popContent>\r\n        <div class=\"popover-details\">\r\n            <div class=\"row border-bottom-2\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Region</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedRegions']\"\r\n                                                 [settings]=\"RegionDdlSettings\"\r\n                                                 [placeholder]=\"'Select Region'\"\r\n                                                 [data]=\"Regions\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">States</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\" [settings]=\"StateDdlSettings\"\r\n                                                 [placeholder]=\"'Select States'\" [data]=\"RegionStates\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div class=\"row border-bottom-2 mt10\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">From</label>\r\n                        <input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\"\r\n                               formControlName=\"FromDate\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">To</label>\r\n                        <input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\"\r\n                               formControlName=\"ToDate\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div class=\"row border-bottom-2 mt10\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Priority</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                 [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                                                 [data]=\"LoadPriorities\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Dispatcher</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedDispachers']\"\r\n                                                 [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Dispatcher'\"\r\n                                                 [data]=\"RegionDispachers\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row border-bottom-2 mt10\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Data Capture</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                 [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Data Capture'\"\r\n                                                 [data]=\"LocationAttributeList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Select Customer</label>\r\n                        <select class=\"form-control\" [formControl]=\"FilterForm.controls['SelectedCustomerId']\">\r\n                            <option [value]=null>Select Customer</option>\r\n                            <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\"\r\n                                    [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                                {{customer.CompanyName}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt10\">\r\n                <div class=\"col-12 text-right\">\r\n                    <button type=\"button\" (click)=\"ResetLoadFilters();\" class=\"btn btn-default\">\r\n                        Reset\r\n                    </button>\r\n                    <button type=\"button\" (click)=\"ApplyLoadFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    </ng-template>\r\n</div>\r\n<app-where-is-my-driver-map-view *ngIf=\"(loadScreenType == 'Map' || loadScreenType == 'All')\"\r\n                                 [singleMulti]=\"singleMulti\"\r\n                                 [FilterForm]=\"FilterForm\">\r\n</app-where-is-my-driver-map-view>\r\n<app-where-is-my-driver-grid-view *ngIf=\"(loadScreenType == 'Grid' || loadScreenType == 'All')\"\r\n                                  [singleMulti]=\"singleMulti\"\r\n                                  [FilterForm]=\"FilterForm\" [IsFiltersLoaded]=\"IsFiltersLoaded\">\r\n</app-where-is-my-driver-grid-view>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DispatcherDashboardComponent } from './dispatcher-dashboard/dispatcher-dashboard.component';\r\n\r\n\r\nconst routeDispatcher: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: DispatcherDashboardComponent\r\n    },\r\n    {\r\n        path: \"Dashboard\",\r\n        component: DispatcherDashboardComponent\r\n    },\r\n    {\r\n        path: \"Dashboard/Index\",\r\n        component: DispatcherDashboardComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeDispatcher)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class DispatcherRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgmDirectionModule } from 'agm-direction';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DispatcherRoutingModule } from './dispatcher-routing.module';\r\nimport { DispatcherDashboardComponent } from './dispatcher-dashboard/dispatcher-dashboard.component';\r\nimport { LocationComponent } from './dispatcher-dashboard/location.component';\r\nimport { WhereIsMyDriverComponent } from './dispatcher-dashboard/where-is-my-driver.component';\r\nimport { WhereIsMyDriverMapViewComponent } from './dispatcher-dashboard/where-is-my-driver-map-view.component';\r\nimport { WhereIsMyDriverGridViewComponent } from './dispatcher-dashboard/where-is-my-driver-grid-view.component';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { SalesDataComponent } from './dispatcher-dashboard/sales-data/sales-data.component';\r\nimport { GridViewComponent } from './dispatcher-dashboard/sales-data/grid-view.component';\r\nimport { TankViewComponent } from './dispatcher-dashboard/sales-data/tank-view.component';\r\nimport { LocationViewComponent } from './dispatcher-dashboard/sales-data/location-view.component';\r\nimport { TankChartModule } from '../tank-chart/tank-chart.module';\r\nimport { FormsModule } from '@angular/forms';\nimport { JobTankHierarchyComponent } from './dispatcher-dashboard/job-tank-hierarchy/job-tank-hierarchy.component';\nimport { TankViewMasterComponent } from './dispatcher-dashboard/sales-data/tank-view-master.component';\n\r\n@NgModule({\r\n    declarations: [\r\n        DispatcherDashboardComponent,\r\n        LocationComponent,\r\n        WhereIsMyDriverComponent,\r\n        WhereIsMyDriverMapViewComponent,\r\n        WhereIsMyDriverGridViewComponent,\r\n        SalesDataComponent,\r\n        GridViewComponent,\r\n        TankViewComponent,\r\n        LocationViewComponent,\r\n        JobTankHierarchyComponent,\r\n        TankViewMasterComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AgmDirectionModule,\r\n        DispatcherRoutingModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        ChartsModule,\r\n        DataTablesModule,\r\n        TankChartModule,\r\n        FormsModule\r\n    ]\r\n})\r\nexport class DispatcherModule { }\r\n"],"sourceRoot":"webpack:///"}