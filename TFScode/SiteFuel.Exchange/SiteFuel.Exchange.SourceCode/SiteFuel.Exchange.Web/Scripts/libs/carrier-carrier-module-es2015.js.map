{"version":3,"sources":["./src/app/buyer-wally-board/Models/BuyerWallyBoard.ts","./src/app/carrier/assigned-to-me/assigned-to-me.component.ts","./src/app/carrier/assigned-to-me/assigned-to-me.component.html","./src/app/carrier/carrier.module.ts","./src/app/carrier/customAbstractControl.ts","./src/app/carrier/delivery-group/delivery-group.component.ts","./src/app/carrier/delivery-group/delivery-group.component.html","./src/app/carrier/delivery-request/assigned-by-me/assigned-by-me.component.ts","./src/app/carrier/delivery-request/assigned-by-me/assigned-by-me.component.html","./src/app/carrier/delivery-request/delivery-request.component.ts","./src/app/carrier/delivery-request/delivery-request.component.html","./src/app/carrier/delivery-request/split-delivery-request/split-delivery-request.component.ts","./src/app/carrier/delivery-request/split-delivery-request/split-delivery-request.component.html","./src/app/carrier/schedule-builder-filter.component.ts","./src/app/carrier/schedule-builder-filter.component.html","./src/app/carrier/schedule-builder-grid-filter.component.ts","./src/app/carrier/schedule-builder-grid-filter.component.html","./src/app/carrier/schedule-builder/add-location/add-location.component.ts","./src/app/carrier/schedule-builder/add-location/add-location.component.html","./src/app/carrier/schedule-builder/child-components/driver-schedule-column-view.component.ts","./src/app/carrier/schedule-builder/child-components/driver-schedule-column-view.component.html","./src/app/carrier/schedule-builder/compartment-quantity-validator.directive.ts","./src/app/carrier/schedule-builder/dr-filter.utility.ts","./src/app/carrier/schedule-builder/driver-column-view/driver-column-view.component.ts","./src/app/carrier/schedule-builder/driver-column-view/driver-column-view.component.html","./src/app/carrier/schedule-builder/dsb-load-queue/dsb-load-queue.component.ts","./src/app/carrier/schedule-builder/dsb-load-queue/dsb-load-queue.component.html","./src/app/carrier/schedule-builder/dsb-load-queue/dsb-load.model.ts","./src/app/carrier/schedule-builder/dsb-load-queue/load-queue.service.ts","./src/app/carrier/schedule-builder/otto-builder.component.ts","./src/app/carrier/schedule-builder/otto-builder.component.html","./src/app/carrier/schedule-builder/otto-notification/otto-notification.component.ts","./src/app/carrier/schedule-builder/otto-notification/otto-notification.component.html","./src/app/carrier/schedule-builder/route-info/route-info.component.ts","./src/app/carrier/schedule-builder/route-info/route-info.component.html","./src/app/carrier/schedule-builder/schedule-builder.component.ts","./src/app/carrier/schedule-builder/schedule-builder.component.html","./src/app/delivery-request-display/services/DeliveryRequestService.ts"],"names":[],"mappings":"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","file":"carrier-carrier-module-es2015.js","sourcesContent":["import { DateFilter, DeliveryGroupStatus, DeliveryReqPriority, ObjectFilter, PickupLocationType, QueueFilter, RegionFilter, TripStatus } from 'src/app/app.enum';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class LoadFilterModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Suppliers: DropdownItem[];\r\n    public Carriers: DropdownItem[];\r\n}\r\n\r\nexport class DipTestViewModel {\r\n    public SiteName: string;\r\n    public CompanyName: string;\r\n    public Id: number;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    public Level: number;\r\n    public Ullage: number;\r\n    public GrossVolume: number;\r\n    public NetVolume: number;\r\n    public WaterNetLevel: number;\r\n    public WaterGrossLevel: number;\r\n    public CaptureTime: string;\r\n    public ProductName: string;\r\n    public DataSourceTypeId: number;\r\n    public BuyerCompanyId: number;\r\n    public BuyerCompanyName: string;\r\n    public JobName: string;\r\n    public UoM: string;\r\n    public JobId: number;\r\n    public CreatedByRegionId: string;\r\n    public IsDRExists: boolean;\r\n    public ExistingDR: PartialDRDetails[] = [];\r\n    public DisplayDRDetails: boolean;\r\n    public TankCapacity: number;\r\n    public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public CurrentThreshold: number;\r\n    public FillType: number;\r\n    public ReorderPercent: number;\r\n    public OrderId: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class TankCapacityForDR {\r\n    public Priority: DeliveryReqPriority;\r\n    public MaxPercent: number;\r\n    public MinPercent: number;\r\n}\r\n\r\nexport class ModifiedTripInfo {\r\n    public ShiftIndex: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n\r\nexport class CreateDeliveryRequestViewModel {\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public RequiredQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class CustomerJobsForCarrier {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    Jobs: DropdownItem[];\r\n}\r\n\r\nexport class PartialDRDetails {\r\n    public Priority: DeliveryReqPriority;\r\n    public ScheduleStatusName: string;\r\n    public RequiredQuantity: number;\r\n    public CreatedOn: string;\r\n}\r\n\r\n\r\nexport enum TfxModule {\r\n    None,\r\n    SupplierWallyboardLocation,\r\n    SupplierWallyboardLoads,\r\n    SupplierWallyboardSales,\r\n    SupplierWallyboardSalesPriority,\r\n    SupplierWallyboardSalesTanks,\r\n    BuyerWallyboardLocation,\r\n    BuyerWallyboardLoads,\r\n    BuyerWallyboardSales,\r\n    BuyerWallyboardSalesPriority,\r\n    BuyerWallyboardSalesTanks,\r\n    BuyerWallyboardSalesLocation,\r\n    AssignedByMeDeliveryRequests,\r\n    DSBShift\r\n}\r\n\r\nexport enum WindowModeFilter {\r\n    Single = 1,\r\n    Multi = 2\r\n}\r\n\r\nexport enum UoM {\r\n    None = 0,\r\n    Gallons = 1,\r\n    Litres = 2\r\n}\r\n\r\nexport class DeliveryRequestViewModel {\r\n    constructor() {\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.PickupLocationType = 1;\r\n        this.WindowMode = 1;\r\n        this.QueueMode = 1;\r\n    }\r\n    public Id: string;\r\n    public JobId: number;\r\n    public JobAddress: string;\r\n    public JobCity: string;\r\n    public JobName: string;\r\n    public ProductType: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public SiteId: string;\r\n    public UoM: number;\r\n    public RequiredQuantity: number;\r\n    public Priority: number;\r\n    public AssignedToCompanyId: number;\r\n    public CreatedByCompanyId: number;\r\n    public SupplierCompanyId: number;\r\n    public Status: number;\r\n    public PreviousStatus: number;\r\n    public ScheduleStatus: number;\r\n    public SchedulePreviousStatus: number;\r\n    public OrderId: number;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public PickupLocationType: number;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public IsDeleted: boolean;\r\n    public DeliveryGroupId: number;\r\n    public DeliveryScheduleId: number;\r\n    public TrackableScheduleId: number;\r\n    public ParentId: string;\r\n    public CustomerCompany: string;\r\n    public WindowMode: number;\r\n    public QueueMode: number;\r\n    public TrackScheduleStatus: number;\r\n    public TrackScheduleStatusName: string;\r\n    public TrackScheduleEnrouteStatus: number;\r\n    public StatusClassId: number;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public TankMaxFill: number;\r\n    public IsNotCompatible: boolean;\r\n    public IsAutoCreatedDR: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public SourceTripId: string;\r\n    public IsCommonBadge: boolean;\r\n    public DispactherNote: string;\r\n    public PreLoadedFor: string;\r\n    public PreLoadInfo: LoadInfo;\r\n    public PostLoadedFor: string;\r\n    public PostLoadInfo: LoadInfo;\r\n    public IsDRExists: boolean;\r\n    public IsDRMissed: boolean;\r\n    public ProductSequence: number;\r\n}\r\n\r\nexport class RegionDetailModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Shifts = [];\r\n    }\r\n    public Id: string;\r\n    public Drivers: DropdownItem[]\r\n    public Trailers: TrailerViewModel[]\r\n    public Shifts: ShiftModel[]\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public StartTime: string;\r\n    public DisplayStartTime: string;\r\n    public EndTime: string;\r\n    public DisplayEndTime: string;\r\n    public CreatedOn: string;\r\n    public CreatedBy: number;\r\n    public IsDeleted: boolean;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ScheduleBuilderModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n        this.Trailers = [];\r\n    }\r\n    public Id: string;\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ObjectFilter: ObjectFilter;\r\n    public RegionFilter: RegionFilter;\r\n    public DateFilter: DateFilter;\r\n    public Shifts: ScheduleShiftModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public Status: DeliveryGroupStatus;\r\n    public DeletedTripId: string;\r\n    public DeletedGroupId: number;\r\n    public IsLoadReset: boolean;\r\n    public WindowMode: WindowModeFilter;\r\n    public ToggleRequestMode: QueueFilter;\r\n}\r\n\r\nexport class DSBSaveModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public PreloadedDRs: any[] = [];\r\n    public PostloadedDRs: any[] = [];\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class DRDragDropModel extends ScheduleBuilderModel {\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public SourceTrip: TripModel;\r\n    public DestinationTrip: TripModel;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class SbDriverViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Shifts = [];\r\n    }\r\n    public Shifts: ScheduleShiftModel[];\r\n}\r\n\r\nexport class SbTrailerViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trailers = [];\r\n    }\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewModel {\r\n    public Id: string;\r\n    public TrailerId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Compartments: number;\r\n    public TrailerType: string;\r\n    public Shifts: TrailerShiftModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class TrailerShiftModel {\r\n    public ShiftId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Trips: TripModel[];\r\n}\r\n\r\nexport class ScheduleShiftModel {\r\n    constructor() {\r\n        this.Schedules = [];\r\n        this.IsCollapsed = false;\r\n    }\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Schedules: TrailerModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n}\r\n\r\nexport class TrailerModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class LocationFilters {\r\n    public IsShowCarrierManaged: boolean;\r\n    public state: number[] = [];\r\n    public city: number[] = [];\r\n    public product: string[] = [];\r\n    public priority: number[] = [];\r\n    public customer: number[] = [];\r\n    public supplier: SelectedItem[] = [];\r\n    public carrier: SelectedItem[] = [];\r\n}\r\n\r\nexport class TripModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n    }\r\n    public TripId: string;\r\n    public GroupId: number;\r\n    public StartDate: string;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public LoadCode: string;\r\n    public RouteInfo: string;\r\n    public SupplierSource: string;\r\n    public Carrier: string;\r\n    public TimeStamp: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public TrailerRowIndex: number;\r\n    public TrailerColIndex: number;\r\n    public ShiftIndex: number;\r\n    public TripStatus: TripStatus;\r\n    public ShiftId: string;\r\n    public ShiftStartTime: string;\r\n    public ShiftEndTime: string;\r\n    public SlotPeriod: number;\r\n    public TripPrevStatus: TripStatus;\r\n    public DeliveryGroupStatus: DeliveryGroupStatus;\r\n    public DeliveryGroupPrevStatus: DeliveryGroupStatus;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsCommonPickup: boolean;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public IsEditable: boolean;\r\n    public DriverScheduleMappingId?: string;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public IsCommonBadge: boolean;\r\n}\r\n\r\nexport class DropAddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public City: string;\r\n    public State: DropdownItem;\r\n    public Country: DropdownItem;\r\n    public ZipCode: string;\r\n    public CountyName: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OrderPickupDetailModel {\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public TerminalName: string;\r\n    public TerminalId: number;\r\n    public PickupLocationType: number = 1;\r\n    public BulkplantName: string;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public StateId: number;\r\n    public CountryCode: string;\r\n    public ZipCode: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public TimeZoneName: string;\r\n}\r\n\r\nexport class OrderPickupLocationModel {\r\n    public PickupLocationType: PickupLocationType;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public static ToLocation(orderPickupDetail: OrderPickupDetailModel): OrderPickupLocationModel {\r\n        let location = new OrderPickupLocationModel();\r\n        location.PickupLocationType = orderPickupDetail.PickupLocationType;\r\n        location.Terminal = {\r\n            Id: orderPickupDetail.TerminalId,\r\n            Name: orderPickupDetail.TerminalName,\r\n            Code: ''\r\n        };\r\n        location.BulkPlant = {\r\n            Address: orderPickupDetail.Address,\r\n            City: orderPickupDetail.City,\r\n            State: { Id: orderPickupDetail.StateId, Code: orderPickupDetail.StateCode, Name: null },\r\n            Country: { Id: 0, Code: orderPickupDetail.CountryCode, Name: null },\r\n            ZipCode: orderPickupDetail.ZipCode,\r\n            CountyName: orderPickupDetail.CountyName,\r\n            Latitude: orderPickupDetail.Latitude,\r\n            Longitude: orderPickupDetail.Longitude,\r\n            SiteName: orderPickupDetail.BulkplantName,\r\n            SiteId: null\r\n        };\r\n        return location;\r\n    }\r\n}\r\n\r\nexport class WhereIsMyDriverModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public Intl: string;\r\n    public PhNo: string;\r\n    public Lat: number;\r\n    public Lng: number;\r\n    public LicNo: string;\r\n    public LdPri: number;\r\n    public RgId: string;\r\n    public RgName: string;\r\n    public RgStates: DropdownItem[];\r\n    public StId: number;\r\n    public StName: string;\r\n    public PoNum: string;\r\n    public Pckup: string;\r\n    public Loc: string;\r\n    public dLat: number\r\n    public dLng: number\r\n    public PrdtNm: string;\r\n    public Qty: string;\r\n    public LdDate: string;\r\n    public SttsId: number;\r\n    public Status: string;\r\n    public DrId: string;\r\n    public statusColor: string;\r\n    public DROPTicketNum: string;\r\n    public ListDROPTicketNum: [];\r\n\r\n    public routeShow: boolean = false;\r\n    public AppLastUpdatedDate: string;\r\n    public IsOnline: number;\r\n\r\n}\r\n\r\nexport class DistatcherRegionModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Dispatchers: DropdownItem[];\r\n\r\n}\r\n\r\nexport interface JobDeliveryRequest {\r\n    Id: string;\r\n    TfxProductType: string;\r\n    TfxUoM: number;\r\n    RequiredQuantity: number;\r\n    Priority: number;\r\n    DeliveryReqPriority: string;\r\n    Status: number;\r\n    DeliveryReqStatus: string;\r\n    StorageTypeId: string;\r\n    StorageId: string;\r\n    CreatedRegionId?: any;\r\n    TfxJobId: number;\r\n}\r\n\r\nexport interface Country {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport interface State {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface City {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Priority {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Product {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface SelectedItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface DropDownItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Customer {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class Filter {\r\n    'state': State[] = [];\r\n    'city': City[] = [];\r\n    'product': SelectedItem[] = [];\r\n    'priority': Priority[] = [];\r\n    'customer': Customer[] = [];\r\n    'supplier': SelectedItem[] = [];\r\n    'carrier': SelectedItem[] = [];\r\n}\r\n\r\nexport interface JobAssetDetail {\r\n    AssetId: number;\r\n    JobId: number;\r\n    AssetName: string;\r\n    AssetType: number;\r\n    AssetTypeName: string;\r\n    FuelCapacity: number;\r\n    ProductType: string;\r\n    TankType: number;\r\n    TankTypeName: string;\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    ThresholdDeliveryRequest: number;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    jobTankAdditionalDetails: JobTankAdditionalDetails[];\r\n    TfxProductTypeName: string;\r\n    LastReading: string;\r\n    CaptureTime: string;\r\n}\r\n\r\nexport interface JobTankAdditionalDetails {\r\n    TfxAssetId: number;\r\n    TankId: string;\r\n    TankName: string;\r\n    TankNumber: string;\r\n    StorageId: string;\r\n    ThresholdDeliveryRequest: number;\r\n    FillType: number;\r\n    MaxFill: number;\r\n    MaxFillPercent: number;\r\n    MinFill: number;\r\n    MinFillPercent: number;\r\n    FuelCapacity: number;\r\n    FillTypeStatus: string;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    ManiFolded: number;\r\n    ManiFoldedName: string;\r\n    TfxProductTypeName?: any;\r\n    SiteId: string;\r\n    LastReading: number;\r\n    CaptureTime: Date;\r\n    dipChartDetails: any[];\r\n    TankChartPath: string;\r\n}\r\n\r\n\r\nexport interface JobLocationDetailsModal {\r\n   // CustomerName: string;\r\n    CustomerId: number;\r\n    JobID: number;\r\n    JobName: string;\r\n    JobLocationType: number;\r\n    JobLocationTypeName: string;\r\n    Latitude: string;\r\n    Longitude: string;\r\n    Address: string;\r\n    CountryCode: string;\r\n    City: string;\r\n    CityId: number;\r\n    State: string;\r\n    StateID: number;\r\n    ZipCode: string;\r\n    ContractNumber: string;\r\n    IsContactDetailsAvailable: number;\r\n    ContactPersonName: string;\r\n    ContactPhoneNumber: string;\r\n    IsPhoneNumberConfirmed: number;\r\n    SiteImageFilePath: string;\r\n    SiteAvailabilityArray: string[];\r\n    SiteAvailabilityTotalDays: number;\r\n    SiteAvailabilityTiming: string;\r\n    SiteInstructions: string;\r\n    TankCount: number;\r\n    AssetCount: number;\r\n    TotalCount: number;\r\n    jobDeliveryRequests: JobDeliveryRequest[];\r\n    jobAssetDetails: JobAssetDetail[];\r\n    FuleTypeID?: any;\r\n    FuelTypeName: string;\r\n    FuelTypeNameList: string[];\r\n    ScheduleStatus: string;\r\n    highestPriority: number,\r\n    iconUrl: string,\r\n    supplierDetails: SelectedItem[];\r\n    carrierDetails: SelectedItem[];\r\n}\r\n\r\nexport interface JobLocationData {\r\n    jobLocationDetails: JobLocationDetailsModal[];\r\n    citiesDetails: City[];\r\n    stateDetails: State[];\r\n    customerDetails: Customer[];\r\n    fuelTypeDetails: string[];\r\n}\r\n\r\nexport class SbFilterModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Pickups = [];\r\n\r\n        this.SelectedDrivers = [];\r\n        this.SelectedPickups = [];\r\n        this.SelectedTrailers = [];\r\n    }\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public Pickups: DropdownItem[];\r\n\r\n    public SelectedPickups?: DropdownItem[];\r\n    public SelectedDrivers?: DropdownItem[];\r\n    public SelectedTrailers?: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewFilterModel {\r\n    public Shifts?: any = {};\r\n    public Trailers?: any = {};\r\n    public Pickups?: any = {};\r\n    public Drivers?: any = {};\r\n}\r\n\r\nexport class DriverViewFilterModel {\r\n    public Shifts?: any = {};\r\n}\r\nexport class CompanyUsers {\r\n    FirstName: string;\r\n    LastName: string;\r\n    FullName: string;\r\n    PhoneNumber: string;\r\n    IsPhoneNumberConfirmed: boolean;\r\n    EmailAddress: string;\r\n    SendbirdUserName: string;\r\n    UserName: string;\r\n    UserId: number;\r\n    Role: number;\r\n    RegionID: string;\r\n    SendBirdRegionID: string;\r\n    RegionName: string;\r\n    RegionDescription: string;\r\n    //sendbird propery\r\n    ProfileURL: string;\r\n\r\n}\r\n\r\nexport class TankMinMaxFill {\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    MinFillPercent: number;\r\n    MaxFillPercent: number;\r\n}\r\n\r\nexport class TankChartHeight {\r\n    ShouldBeEmptyPercent: number;\r\n    ShouldBeFilledPercent: number;\r\n    CurrentInventoryPercent: number;\r\n    sbf_percent: number;\r\n    ci_percent: number;\r\n}\r\n\r\nexport class DipTest {\r\n    TankId: string\r\n    SiteId: string\r\n    Ullage: number\r\n    GrossVolume: number\r\n    NetVolume: number\r\n    CaptureTime: string\r\n    CaptureTimeString: string\r\n}\r\n\r\nexport interface Compartment {\r\n    CompartmentId: string;\r\n    FuelType: number;\r\n    Capacity: number;\r\n}\r\n\r\nexport interface Trailer {\r\n    Id: string;\r\n    Name: string;\r\n    Owner?: any;\r\n    TruckId: string;\r\n    FuelCapacity: number;\r\n    ContractNumber: string;\r\n    Compartments: Compartment[];\r\n    TfxCreatedBy: number;\r\n    TfxCompanyId: number;\r\n    CreatedDate: Date;\r\n    Status: number;\r\n    LicenceRequirement: number;\r\n    LicencePlate: string;\r\n    ExpirationDate: string;\r\n    IsPump: string;\r\n    TrailerType: number;\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport interface IDriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n}\r\n\r\nexport class DriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n    constructor(data?: IDriverAdditionalDetails) {\r\n        this.Id = data && data['Id'] || null;\r\n        this.Name = data && data['Name'] || null;\r\n        this.License = data && data['License'] || null;\r\n        this.ContactNumnber = data && data['ContactNumnber'] || null;\r\n        this.Shifts = data && data['Shifts'] || [];\r\n        this.Trailers = data && data['Trailers'] || [];\r\n    }\r\n}\r\n\r\nexport const routesColor = {\r\n    1: '#5f4aa8',\r\n    11: '#c4c105',\r\n    12: '#d3950f',\r\n    18: '#19953f',\r\n    20: '#e3584d'\r\n}\r\n\r\nexport class DemandModel {\r\n    Id: number;\r\n    JobId: number;\r\n    JobName: string;\r\n    Level: number;\r\n    NetVolume: number;\r\n    OrderId: number\r\n    Priority: DeliveryReqPriority;\r\n    ProductName: string;\r\n    ProductType: string;\r\n    SiteId: string;\r\n    StorageId: string;\r\n    TankCapacity: number;\r\n    TankId: string;\r\n    TankMaxFill: number\r\n    TankMinFill: number\r\n    TankName: string;\r\n    Ullage: number;\r\n    UoM: string;\r\n    RequiredQuantity: number;\r\n    IsDRExists: boolean;\r\n    IsDRMissed: boolean;\r\n    ExistingDR: PartialDRDetail[];\r\n}\r\n\r\nexport class PartialDRDetail {\r\n    DeliveryReqPriority: DeliveryReqPriority;\r\n    ScheduleStatusName: string;\r\n    ScheduleStatusId: number;\r\n    RequiredQuantity: number;\r\n    CreatedOn: string;\r\n    CreatedDate: string;\r\n}\r\n\r\nexport class LoadInfo {\r\n    ShiftId: string;\r\n    ShiftIndex?: number;\r\n    ScheduleIndex: number;\r\n    TripIndex: number;\r\n    DrId: string;\r\n}\r\n\r\nexport class PreLoadDrViewModel {\r\n    public SbView: number;\r\n    public RegionId: string;\r\n    public ShiftEndDate: string\r\n    public ShiftId: string\r\n    public ShiftIndex: number;\r\n    public ScheduleIndex: number;\r\n    public TripIndex: number;\r\n    public PreloadTrailers: TrailerModel[];\r\n    public PreloadDrs: any[];\r\n}\r\n\r\nexport class PreLoadDrResponseViewModel {\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n    public PreloadDrs: PreLoadDrModel[];\r\n}\r\n\r\nexport class PreLoadDrModel {\r\n    public Id: string;\r\n    public PreLoadedForId: string;\r\n}\r\n\r\nexport interface Supplier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport interface Carrier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class SalesTankFilterModal {\r\n    public selectedLocAttributeData:any = [];\r\n}\r\n\r\nexport class SalesFilterModal {\r\n    public SelectedLocationId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\n","import { Component, EventEmitter, Input, OnInit, OnDestroy, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { DeliveryRequestViewModel, DelRequestsByJobModel, DropAddressModel, Priority } from '../models/DispatchSchedulerModels';\nimport { CarrierService } from '../service/carrier.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport * as moment from 'moment';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DataService } from '../service/data.service';\nimport { BrokeredDrCarrierStatus, DeliveryReqPriority } from 'src/app/app.enum';\nimport { LoadPriorities } from 'src/app/app.constants';\n\n\n@Component({\n    selector: 'app-assigned-to-me',\n    templateUrl: './assigned-to-me.component.html',\n    styleUrls: ['./assigned-to-me.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AssignedToMeComponent implements OnInit {\n\n    @Output() OnAcceptRejectDR: EventEmitter<any> = new EventEmitter<any>();\n    @Input() regionId: string;\n    @Input() SelectedDate: string;\n    //@Input() public Locations: DelRequestsByJobModel[] = [];\n    \n    public dtMustGoOptions: any = {};\n    public MustGoSchedules: DeliveryRequestViewModel[] = [];\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    closeResult = '';\n    AssignedToMeForm: FormGroup;\n    FilterForm: FormGroup;\n    isLoading = false;\n    public HeaderText: string;\n    public NextRenewalDate: string;\n    public AcceptRejectDRSubscription: Subscription;\n\n    public currentRegionId: string;\n    public currentSelectedDate: string;\n    public brokeredDrRequestedToMe: DelRequestsByJobModel[] = [];\n    public brokeredDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public MustGoDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public ShouldGoDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public CouldGoDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\n    public BrokeredDrStatus: BrokeredDrCarrierStatus = null;\n\n    //#region  Filters\n    public SupplierCompanies: DropdownItem[] = [];\n    public CustomerLocation: DropdownItem[] = [];\n    public priorityList: Priority[] = [];\n    public PriorityDdlSettings: IDropdownSettings;\n    public MaxInputDate: Date = new Date();\n    public MinInputDate: Date = new Date();\n    //#endregion Filters \n\n    constructor(private fb: FormBuilder, private carrierService: CarrierService, public dataService: DataService,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 1);\n        this.MinInputDate.setDate(this.MaxInputDate.getDate());\n        this.NextRenewalDate = moment(new Date()).add(1, 'months').startOf('month').format('MM/DD/YYYY');\n        this.HeaderText = 'Assigned To Me';\n        this.FilterForm = this.getAssignedToMeFilterForm(false);\n        this.currentRegionId = this.regionId;\n        this.currentSelectedDate = this.SelectedDate;\n        this.Init();\n        this.subscribeFormChanges();\n        this.subscribeAcceptRejectDRSubject();\n        //this.InitilizeGrids();\n    }\n\n    ngOnDestroy(): void {\n        if (this.AcceptRejectDRSubscription) {\n            this.AcceptRejectDRSubscription.unsubscribe();\n        }\n    }\n\n    subscribeFormChanges() {\n        this.FilterForm.controls.Suppliers.valueChanges.subscribe(chenge => {\n            this.FilterData();\n        });\n        this.FilterForm.controls.Locations.valueChanges.subscribe(chenge => {\n            this.FilterData();\n        });\n    }\n\n    //to use datatable Added this functions but Inbuit dataTrigger giving error - check with anant\n    InitilizeGrids() {\n\n        let ColumnDetails = [];\n\n        ColumnDetails = [{ title: 'Supplier Name', name: 'Supplier Name', data: 'CustomerCompany', \"autoWidth\": true },\n        { title: 'Address', name: 'Address', data: 'JobAddress', \"autoWidth\": true },\n        { title: 'Product', name: 'Product', data: 'ProductType', \"autoWidth\": true },\n        { title: 'Required Qty', name: 'Required Qty', data: 'RequiredQuantity', \"autoWidth\": true },\n        { title: 'Inventory', name: 'Inventory', data: 'CurrentInventory', \"autoWidth\": true },\n        { title: 'Ullage', name: 'Ullage', data: 'UoM', \"autoWidth\": true }];\n\n\n        this.dtMustGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                this.isLoading = true;\n                // this.brokeredDrRequestedToMe = [];\n                // this.carrierService.getBrokeredDrAssignedToMe(this.regionId, this.SelectedDate).subscribe(drs => {\n                //   console.log(drs);\n                //   this.brokeredDrRequestedToMeAPI = drs || [];\n                //   this.MustGoSchedules = drs || []\n                //   data: drs || [];\n                //   // this.AssignedToMeForm = this.fb.group({\n                //   //   DeliveryRequests: this.getDeliveryRequestFormArray(this.brokeredDrRequestedToMeAPI)\n                //   // });\n                //   this.isLoading = false;\n                //   //this.brokeredDrRequestedToMe = this.deliveryReqService.groupDrsByJob(drs, DeliveryRequestTypes.AssignedToMe);           \n\n                // });\n\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'copy', exportOptions: ColumnDetails },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Must Go', exportOptions: ColumnDetails },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Must Go', orientation: 'landscape', exportOptions: ColumnDetails },\n                { extend: 'print', exportOptions: ColumnDetails }\n            ],\n            columns: ColumnDetails\n        };\n    }\n\n    FiltersSettingsAndPriorityList() {\n\n        this.PriorityDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n\n        this.priorityList = LoadPriorities;\n\n    }\n\n    ngAfterViewInit(): void {\n        //this.dtMustGoTrigger.next();\n    }\n\n    Init() {\n        //this.FiltersSettingsAndPriorityList();\n    }\n    getBrokeredDrAssignedToMe(regionId: string, selectedDate?: string) {\n        this.isLoading = true;\n        this.brokeredDrRequestedToMe = [];\n        this.carrierService.getBrokeredDrAssignedToMe(regionId, selectedDate).subscribe(drs => {\n            this.brokeredDrRequestedToMeAPI = drs || [];\n            this.GetSuplierCompanyList(this.brokeredDrRequestedToMeAPI)\n            this.MustGoSchedules = drs || []\n            this.brokeredDrRequestedToMeAPI.forEach(x => {\n                x.StringAssignedOn = x.AssignedOn ? moment(x.AssignedOn).format('MM/DD/YYYY') : '--';\n                if (x.StringAssignedOn == '01/01/0001' || x.StringAssignedOn == 'Invalid date' ||\n                    x.StringAssignedOn == '12/31/0000')\n                    x.StringAssignedOn = '--'\n            })\n            this.MustGoDrRequestedToMeAPI = [];\n            this.ShouldGoDrRequestedToMeAPI = [];\n            this.CouldGoDrRequestedToMeAPI = [];\n            this.MustGoDrRequestedToMeAPI = drs.filter(x => x.Priority == DeliveryReqPriority.MustGo) || [];\n            this.ShouldGoDrRequestedToMeAPI = drs.filter(x => x.Priority == DeliveryReqPriority.ShouldGo) || [];\n            this.CouldGoDrRequestedToMeAPI = drs.filter(x => x.Priority == DeliveryReqPriority.CouldGo) || [];\n            data: drs || [];\n            this.isLoading = false;\n        });\n    }\n\n    subscribeAcceptRejectDRSubject(): void {\n        this.AcceptRejectDRSubscription = this.dataService.AcceptRejectDRSubject.subscribe(x => {\n            if (x) {\n                this.getBrokeredDrAssignedToMe(x.RegionId, x.Date);\n            }\n        });\n    }\n\n    GetSuplierCompanyList(dr: DeliveryRequestViewModel[]) {\n        this.SupplierCompanies = [];\n        this.CustomerLocation = [];\n        dr.forEach(ele => {\n            if (!this.SupplierCompanies.find(x => ele.SupplierCompanyId == x.Id)) {\n                let obj = new DropdownItem;\n                obj.Id = ele.SupplierCompanyId;\n                obj.Name = ele.CustomerCompany;\n                this.SupplierCompanies.push(obj)\n            }\n            if (!this.CustomerLocation.find(x => ele.JobId == x.Id)) {\n                let objLocation = new DropdownItem;\n                objLocation.Id = ele.JobId;\n                objLocation.Name = ele.JobName;\n                this.CustomerLocation.push(objLocation)\n            }\n        });\n        if (this.SupplierCompanies.length == 1) {\n            this.FilterForm.get('Suppliers').patchValue(this.SupplierCompanies);\n        }\n        if (this.CustomerLocation.length == 1) {\n            this.FilterForm.get('Locations').patchValue(this.CustomerLocation);\n        }\n\n    }\n\n    public confirmChangeBrokeredDrStatus(status: BrokeredDrCarrierStatus, dr: any,) {\n        this.isLoading = true;\n        var delReqForm = dr;\n        let delReq = delReqForm as DeliveryRequestViewModel;\n        this.BrokeredDrStatus = status;\n        var allDrs = this.ShouldGoDrRequestedToMeAPI;\n        var drToupdate = allDrs.find(t => t.Id == delReq.Id);\n        this.requestToUpdate = Object.assign({}, drToupdate);\n        // this.AssignDrForm.get('DispatcherNote').setValue('');        \n\n        this.requestToUpdate = Object.assign({}, delReq);\n        let element = document.getElementById(\"openConfirmProceedBrokeredDrModal\");\n        element ? element.click() : null;\n        this.isLoading = false;\n\n        // let celement = document.getElementsByClassName(\"modal-backdrop\");    \n        // celement['className'] = 'modal show';\n    }\n\n    public changeBrokeredDrStatus(DrId: string, BlendedGroupId:string, status: BrokeredDrCarrierStatus) {\n        this.isLoading = true;\n        this.OnAcceptRejectDR.emit({ drId: DrId, blendedGroupId: BlendedGroupId, status: status == 2 ? BrokeredDrCarrierStatus.Accepted : BrokeredDrCarrierStatus.Rejected });\n        this.currentRegionId = this.regionId;\n        let that = this;\n        setTimeout(function () {\n            that.getBrokeredDrAssignedToMe(that.currentRegionId, that.currentSelectedDate);\n            this.isLoading = false;\n        }, 3500);\n    }\n    open(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${''}`;\n        });\n    }\n\n\n    getAssignedToMeFilterForm(isFilterApplied?: boolean) {\n        return this.fb.group({\n            Suppliers: this.fb.control([]),\n            Priority: this.fb.control([]),\n            Locations: this.fb.control([]),\n            FromDate: this.fb.control(''),\n            ToDate: this.fb.control(''),\n            IsFilterApplied: this.fb.control(isFilterApplied ? true : false)\n        });\n    }\n\n    isPriorityVisible(priority: number) {\n        let selectedArray = this.FilterForm.controls['Priority'].value as any[] || [];\n        return (selectedArray.length == 0 || selectedArray.find(x => x.Id == priority)) || false;\n    }\n    setPanelHeader(headerText: string) {\n        this.HeaderText = headerText;\n        this.FiltersSettingsAndPriorityList();\n        this.getBrokeredDrAssignedToMe(this.regionId, this.SelectedDate);\n    }\n    clearPanelControls() {\n        this.brokeredDrRequestedToMe = [];\n        this.brokeredDrRequestedToMeAPI = [];\n        this.MustGoDrRequestedToMeAPI = [];\n        this.ShouldGoDrRequestedToMeAPI = [];\n        this.CouldGoDrRequestedToMeAPI = [];\n        this.requestToUpdate = new DeliveryRequestViewModel(false);\n        this.BrokeredDrStatus = null;\n        this.SupplierCompanies = [];\n        this.priorityList = [];\n        this.FilterForm.reset();\n    }\n\n\n\n    FilterData() {\n        if (this.FilterForm.controls['Suppliers'].value != null && this.FilterForm.controls['Suppliers'].value.length > 0) {\n            let supplierIds = [];\n            this.FilterForm.controls['Suppliers'].value.forEach(ele => supplierIds.push(ele.Id));\n            let mustGo = [];\n            let shouldGo = [];\n            let couldGo = [];\n            this.MustGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.MustGo);\n            this.ShouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.ShouldGo);\n            this.CouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.CouldGo);\n            supplierIds.forEach(x => {\n                let oMustGo = this.MustGoDrRequestedToMeAPI.filter(res => res.SupplierCompanyId == x);\n                oMustGo.forEach(x => mustGo.push(x));\n                let oShouldGo = this.ShouldGoDrRequestedToMeAPI.filter(res => res.SupplierCompanyId == x);\n                oShouldGo.forEach(x => shouldGo.push(x));\n                let oCouldGo = this.CouldGoDrRequestedToMeAPI.filter(res => res.SupplierCompanyId == x);\n                oCouldGo.forEach(x => couldGo.push(x));\n            });\n            this.MustGoDrRequestedToMeAPI = mustGo;\n            this.ShouldGoDrRequestedToMeAPI = shouldGo;\n            this.CouldGoDrRequestedToMeAPI = couldGo;\n        }\n        else {\n            this.MustGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.MustGo);\n            this.ShouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.ShouldGo);\n            this.CouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.CouldGo);\n        }\n\n        if (this.FilterForm.controls['Locations'].value != null && this.FilterForm.controls['Locations'].value.length > 0) {\n            let LocationIds = [];\n            this.FilterForm.controls['Locations'].value.forEach(ele => LocationIds.push(ele.Id));\n            let mustGo = [];\n            let shouldGo = [];\n            let couldGo = [];\n            LocationIds.forEach(x => {\n                let oMustGo = this.MustGoDrRequestedToMeAPI.filter(res => res.JobId == x);\n                oMustGo.forEach(x => mustGo.push(x));\n                let oShouldGo = this.ShouldGoDrRequestedToMeAPI.filter(res => res.JobId == x);\n                oShouldGo.forEach(x => shouldGo.push(x));\n                let oCouldGo = this.CouldGoDrRequestedToMeAPI.filter(res => res.JobId == x);\n                oCouldGo.forEach(x => couldGo.push(x));\n            });\n            this.MustGoDrRequestedToMeAPI = mustGo;\n            this.ShouldGoDrRequestedToMeAPI = shouldGo;\n            this.CouldGoDrRequestedToMeAPI = couldGo;\n        }\n\n        if (this.FilterForm.controls.FromDate.value && this.FilterForm.controls.ToDate.value) {\n            if (moment(this.FilterForm.controls.ToDate.value).toDate() < moment(this.FilterForm.controls.FromDate.value).toDate()) {\n                Declarations.msgerror('FromDate should be greater than ToDate', undefined, undefined);\n                return;\n            }\n            let mstGo = []\n            mstGo = this.MustGoDrRequestedToMeAPI.filter(x => x.StringAssignedOn == '--' || (moment(this.FilterForm.controls.FromDate.value).toDate() <= moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() &&\n                moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() <= moment(this.FilterForm.controls.ToDate.value).toDate()));\n            this.MustGoDrRequestedToMeAPI = mstGo;\n\n            let shldGo = []\n            shldGo = this.ShouldGoDrRequestedToMeAPI.filter(x => x.StringAssignedOn == '--' || (moment(this.FilterForm.controls.FromDate.value).toDate() <= moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() &&\n                moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() <= moment(this.FilterForm.controls.ToDate.value).toDate()));\n            this.ShouldGoDrRequestedToMeAPI = shldGo;\n\n            let coldGo = []\n            coldGo = this.CouldGoDrRequestedToMeAPI.filter(x => x.StringAssignedOn == '--' || (moment(this.FilterForm.controls.FromDate.value).toDate() <= moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() &&\n                moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() <= moment(this.FilterForm.controls.ToDate.value).toDate()));\n            this.CouldGoDrRequestedToMeAPI = coldGo;\n        }\n        this.RemoveSelectedSuppliers();\n    }\n    public ShowAllDrs() {\n        this.FilterForm.reset();\n        this.MustGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.MustGo);\n        this.ShouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.ShouldGo);\n        this.CouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.CouldGo);\n\n    }\n\n    RemoveSelectedSuppliers() {\n        let SuppliersList = [];\n        let LocationList = [];\n        this.MustGoDrRequestedToMeAPI.forEach(x => {\n            SuppliersList.push(x.SupplierCompanyId);\n            LocationList.push(x.JobId);\n        })\n        this.ShouldGoDrRequestedToMeAPI.forEach(x => {\n            SuppliersList.push(x.SupplierCompanyId);\n            LocationList.push(x.JobId);\n        })\n        this.ShouldGoDrRequestedToMeAPI.forEach(x => {\n            SuppliersList.push(x.SupplierCompanyId);\n            LocationList.push(x.JobId);\n        })\n        let removeSupplier = [];\n        if (this.FilterForm.controls.Suppliers.value != null) {\n            this.FilterForm.controls.Suppliers.value.forEach(sup => {\n                let check = SuppliersList.indexOf(c => c == sup.Id)\n                if (check < 0) {\n                    removeSupplier.push(sup);\n                }\n            });\n\n            if (removeSupplier != null) {\n                removeSupplier.forEach(t => {\n                    let index = this.FilterForm.controls.Suppliers.value.indexOf(c => c.Id == t.Id);\n                    if (index >= 0)\n                        delete this.FilterForm.controls.Suppliers.value[index];\n                })\n            }\n        }\n\n        let RemoveLocations = [];\n        if (this.FilterForm.controls.Locations.value != null) {\n            this.FilterForm.controls.Locations.value.forEach(sup => {\n                let check = LocationList.indexOf(c => c == sup.Id)\n                if (check < 0) {\n                    RemoveLocations.push(sup);\n                }\n            });\n\n            if (RemoveLocations != null) {\n                RemoveLocations.forEach(t => {\n                    let index = this.FilterForm.controls.Locations.value.indexOf(c => c.Id == t.Id);\n                    if (index >= 0)\n                        delete this.FilterForm.controls.Locations.value[index];\n                })\n            }\n        }\n    }\n    getNextRenewalDate(date: Date) {\n        this.NextRenewalDate = moment(date).add(1, 'months').startOf('month').format('MM/DD/YYYY');\n    }\n}\n","<a (click)=\"setPanelHeader('Brokered DR Requests')\" onclick=\"slidePanel('#AssignedToMe','80%')\" class=\"fs13 ml-3\">\r\n    <i class=\"fa fa-arrow-alt-circle-right mt3 pull-left mr-0\"></i><span class=\"fs13\">Assigned To Me</span>\r\n</a>\r\n<div id=\"AssignedToMe\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper p-3 pr\">\r\n        <div class=\"mb-2\">\r\n            <a class=\"close-panel float-left\" (click)=\"clearPanelControls()\" onclick=\"closeSlidePanel();\">\r\n                <i class=\"fa fa-close fs18\"></i>\r\n            </a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div class=\"card shadow p-3\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3\">\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['Suppliers']\"\r\n                                             [placeholder]=\"'Select Supplier'\" [settings]=\"PriorityDdlSettings\" [data]=\"SupplierCompanies\" >\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['Locations']\"\r\n                                             [placeholder]=\"'Select Location'\" [settings]=\"PriorityDdlSettings\" [data]=\"CustomerLocation\" >\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['Priority']\"\r\n                                             [placeholder]=\"'Select Priority'\" [settings]=\"PriorityDdlSettings\" [data]=\"priorityList\" >\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" class=\"form-control datepicker\" [formControl]=\"FilterForm.controls['FromDate']\"\r\n                           myDatePicker [format]=\"'MM/DD/YYYY'\" placeholder=\"From\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"FilterForm.get('FromDate').setValue($event);getNextRenewalDate($event);\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" class=\"form-control datepicker\" [formControl]=\"FilterForm.controls['ToDate']\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" placeholder=\"To\" [maxDate]=\"MaxInputDate\" \r\n                           (onDateChange)=\"FilterForm.get('ToDate').setValue($event);getNextRenewalDate($event);\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"button\" class=\"btn btn-primary\" (click)=\"FilterData()\" value=\"Filter By Date\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 text-right\">\r\n                    <input type=\"button\" class=\"btn btn-link  m-0 p-0\" (click)=\"ShowAllDrs()\" value=\"Clear Selection\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"brokered-dr-grids mt-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\" id=\"AssignedToMeApi\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div *ngIf=\"isPriorityVisible(1)\">\r\n                                <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important;\">Must Go</h4>\r\n                                <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                    <div class=\"ibox mb0\">\r\n                                        <div class=\"ibox-content no-padding no-border\">\r\n                                            <table id=\"table-mustgo\" data-gridname=\"19\"\r\n                                                   class=\"table table-bordered table-hover\">\r\n                                                <!-- datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\" -->\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <!-- <th>Id</th> -->\r\n                                                        <th data-key=\"CustomerCompany\">Supplier Name</th>\r\n                                                        <th data-key=\"JobAddress\">Address</th>\r\n                                                        <th data-key=\"ProductType\">Product</th>\r\n                                                        <th data-key=\"RequiredQuantity\">Required Qty</th>\r\n                                                        <th data-key=\"RetainDate\">Delivery Window</th>\r\n                                                        <th data-key=\"CurrentInventory\">Inventory</th>\r\n                                                        <th data-key=\"Ullage\">Ullage </th>\r\n                                                        <th data-key=\"DateOfRequest\">Date of request</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"MustGoDrRequestedToMeAPI?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of MustGoDrRequestedToMeAPI\">\r\n                                                        <!-- <td>{{BrokeredDR.controls['Id'].value}}</td> -->\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName +', '+ row.JobAddress}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow?row.DeliveryWindow :'--'}}</td>\r\n                                                        <td>{{row.CurrentInventory}}{{row.CurrentInventory != '--' ?  (row.UoM == 1 ? ' G' : ' L') : ''}} </td>\r\n                                                        <td>{{row.Ullage}}{{row.UoM == 1 ? ' G' : ' L'}}</td>\r\n                                                        <td>{{row.StringAssignedOn}}</td>\r\n                                                        <th class=\"no-wrap\">\r\n                                                            <a class=\"color-green\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Accept Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(2, row)\">\r\n                                                                <i class=\"fas fa-check-circle fs21\"></i>\r\n                                                            </a>\r\n                                                            <a class=\"color-red ml-2\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Reject Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(3, row)\">\r\n                                                                <i class=\"fas fa-times-circle fs21\"></i>\r\n                                                            </a>\r\n\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"MustGoDrRequestedToMeAPI?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"isPriorityVisible(2)\">\r\n                                <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important;\">Should Go</h4>\r\n                                <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                    <div class=\"ibox mb0\">\r\n                                        <div class=\"ibox-content no-padding no-border\">\r\n                                            <table id=\"table-shouldgo\" data-gridname=\"19\"\r\n                                                   class=\"table table-bordered table-hover\">\r\n                                                <!-- datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\" -->\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <!-- <th>Id</th> -->\r\n                                                        <th data-key=\"CustomerCompany\">Supplier Name</th>\r\n                                                        <th data-key=\"JobAddress\">Address</th>\r\n                                                        <th data-key=\"ProductType\">Product</th>\r\n                                                        <th data-key=\"RequiredQuantity\">Required Qty</th>\r\n                                                        <th data-key=\"RetainDate\">Delivery Window</th>\r\n                                                        <th data-key=\"CurrentInventory\">Inventory</th>\r\n                                                        <th data-key=\"Ullage\">Ullage</th>\r\n                                                        <th data-key=\"DateOfRequest\">Date of request</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"ShouldGoDrRequestedToMeAPI?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of ShouldGoDrRequestedToMeAPI\">\r\n                                                        <!-- <td>{{BrokeredDR.controls['Id'].value}}</td> -->\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName +', '+ row.JobAddress}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow?row.DeliveryWindow :'--'}}</td>\r\n                                                        <td>{{row.CurrentInventory}}{{row.CurrentInventory != '--' ?  (row.UoM == 1 ? ' G' : ' L') : ''}} </td>\r\n                                                        <td>{{row.Ullage}}{{row.UoM == 1 ? ' G' : ' L'}}</td>\r\n                                                        <td>{{row.StringAssignedOn}}</td>\r\n                                                        <th class=\"no-wrap\">\r\n                                                            <a class=\"color-green\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Accept Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(2, row)\">\r\n                                                                <i class=\"fas fa-check-circle fs21\"></i>\r\n                                                            </a>\r\n                                                            <a class=\"color-red ml-2\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Reject Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(3, row)\">\r\n                                                                <i class=\"fas fa-times-circle fs21\"></i>\r\n                                                            </a>\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"ShouldGoDrRequestedToMeAPI?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"isPriorityVisible(3)\">\r\n                                <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important;\">Could Go</h4>\r\n                                <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                    <div class=\"ibox mb0\">\r\n                                        <div class=\"ibox-content no-padding no-border\">\r\n                                            <table id=\"table-mustgo\" data-gridname=\"19\"\r\n                                                   class=\"table table-bordered table-hover\">\r\n                                                <!-- datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\" -->\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <!-- <th>Id</th> -->\r\n                                                        <th data-key=\"CustomerCompany\">Supplier Name</th>\r\n                                                        <th data-key=\"JobAddress\">Address</th>\r\n                                                        <th data-key=\"ProductType\">Product</th>\r\n                                                        <th data-key=\"RequiredQuantity\">Required Qty</th>\r\n                                                        <th data-key=\"RetainDate\">Delivery Window</th>\r\n                                                        <th data-key=\"CurrentInventory\">Inventory</th>\r\n                                                        <th data-key=\"Ullage\">Ullage</th>\r\n                                                        <th data-key=\"DateOfRequest\">Date of request</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"CouldGoDrRequestedToMeAPI?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of CouldGoDrRequestedToMeAPI\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName +', '+ row.JobAddress}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow?row.DeliveryWindow :'--'}}</td>\r\n                                                        <td>{{row.CurrentInventory}}{{row.CurrentInventory != '--' ?  (row.UoM == 1 ? ' G' : ' L') : ''}} </td>\r\n                                                        <td>{{row.Ullage}}{{row.UoM == 1 ? ' G' : ' L'}}</td>\r\n                                                        <td>{{row.StringAssignedOn}}</td>\r\n                                                        <th>\r\n                                                            <a class=\"color-green\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Accept Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(2, row)\">\r\n                                                                <i class=\"fas fa-check-circle fs21\"></i>\r\n                                                            </a>\r\n                                                            <a class=\"color-red ml-2\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Reject Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(3, row)\">\r\n                                                                <i class=\"fas fa-times-circle fs21\"></i>\r\n                                                            </a>\r\n\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"CouldGoDrRequestedToMeAPI?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- proceed brokered dr start -->\r\n        <button id=\"openConfirmProceedBrokeredDrModal\" hidden=\"hidden\" class=\"btn btn-lg btn-outline-primary\"\r\n                (click)=\"open(content)\"></button>\r\n        <div class=\"modal\" style=\"backdrop-filter: unset;\" id=\"proceedConfirmBrokeredDrModal\" tabindex=\"-1\"\r\n             role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n            <div class=\"modal-dialog\" role=\"dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"isLoading\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <form #proceedBrokeredDrForm=\"ngForm\" novalidate>\r\n                            <h2 *ngIf=\"this.BrokeredDrStatus==2\" class=\"fs18 f-bold mt0\">\r\n                                Accept Brokered Delivery\r\n                                Request?\r\n                            </h2>\r\n                            <h2 *ngIf=\"this.BrokeredDrStatus==3\" class=\"fs18 f-bold mt0\">\r\n                                Reject Brokered Delivery\r\n                                Request?\r\n                            </h2>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">\r\n                                        {{requestToUpdate?.ProductType}}\r\n                                    </div>\r\n                                    <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">\r\n                                        {{requestToUpdate.BlendedProductName}}, {{requestToUpdate.AdditiveProductName}}\r\n                                    </div>\r\n                                    <small class=\"mb10\">\r\n                                        {{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                                    <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                        <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                                    </div>\r\n                                    <ng-template #quantity>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                        <ng-template #litres>(L)</ng-template>\r\n                                        <div *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">{{requestToUpdate?.RequiredQuantity}}</div>\r\n                                        <div *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">{{requestToUpdate?.TotalBlendedQuantity}}</div>\r\n                                    </ng-template>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-right\">\r\n                                <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                                <button *ngIf=\"this.BrokeredDrStatus==2\" type=\"button\"\r\n                                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 2)\"\r\n                                        class=\"btn btn-primary btn-lg\">\r\n                                    Accept\r\n                                </button>\r\n                                <button *ngIf=\"this.BrokeredDrStatus==3\" type=\"button\"\r\n                                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 3)\"\r\n                                        class=\"btn btn-primary btn-lg\">\r\n                                    Reject\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"isLoading\" style=\"position:fixed !important\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n\r\n        <ng-template #content let-modal>\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"isLoading\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <form #proceedBrokeredDrForm=\"ngForm\" novalidate>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==2\" class=\"fs18 f-bold mt0 dib\">Accept Brokered Delivery Request?</h2>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==3\" class=\"fs18 f-bold mt0 dib\">Reject Brokered Delivery Request?</h2>\r\n                    <button type=\"button\" class=\"close m-0 p-0 mt-n1\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">\r\n                                {{requestToUpdate?.ProductType}}\r\n                            </div>\r\n                            <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">\r\n                                {{requestToUpdate.BlendedProductName+', '+requestToUpdate.AdditiveProductName}}\r\n                            </div>\r\n                            <small class=\"mb10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </small>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                            <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                            </div>\r\n                            <ng-template #quantity>\r\n                                <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                <ng-template #litres>(L)</ng-template>\r\n                                <div *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">{{requestToUpdate?.RequiredQuantity}}</div>\r\n                                <div *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">{{requestToUpdate?.TotalBlendedQuantity}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer border-0 pt-0\">\r\n                <button type=\"button\" class=\"btn btn-lg\" (click)=\"modal.close('Cancel click')\">Cancel</button>\r\n                <button *ngIf=\"this.BrokeredDrStatus==2\" type=\"button\"\r\n                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 2); modal.close('Accept Click');\"\r\n                        class=\"btn btn-primary btn-lg\">\r\n                    Accept\r\n                </button>\r\n                <button *ngIf=\"this.BrokeredDrStatus==3\" type=\"button\"\r\n                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 3); modal.close('Rejectclick');\"\r\n                        class=\"btn btn-danger btn-lg\">\r\n                    Reject\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DeliveryRequestComponent } from './delivery-request/delivery-request.component';\r\nimport { ScheduleBuilderComponent } from './schedule-builder/schedule-builder.component';\r\nimport { DeliveryGroupComponent } from './delivery-group/delivery-group.component';\r\nimport { ScheduleBuilderFilterComponent } from './schedule-builder-filter.component';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { RouteInfoComponent } from './schedule-builder/route-info/route-info.component';\r\nimport { CompartmentQuantityValidatorDirective } from './schedule-builder/compartment-quantity-validator.directive';\r\nimport { OttoBuilderComponent } from './schedule-builder/otto-builder.component';\r\nimport { OttoNotificationComponent } from './schedule-builder/otto-notification/otto-notification.component';\r\nimport { SplitDeliveryRequestComponent } from './delivery-request/split-delivery-request/split-delivery-request.component';\r\nimport { DriverColumnViewComponent } from './schedule-builder/driver-column-view/driver-column-view.component';\r\nimport { DriverScheduleColumnViewComponent } from './schedule-builder/child-components/driver-schedule-column-view.component';\r\nimport { ScheduleBuilderGridFilterComponent } from './schedule-builder-grid-filter.component';\r\nimport { LoadQueueService } from './schedule-builder/dsb-load-queue/load-queue.service';\r\nimport { DsbLoadQueueComponent } from './schedule-builder/dsb-load-queue/dsb-load-queue.component';\r\nimport { AssignedToMeComponent } from './assigned-to-me/assigned-to-me.component';\r\nimport { AssignedByMeComponent } from './delivery-request/assigned-by-me/assigned-by-me.component';\r\nimport { AddLocationComponent } from './schedule-builder/add-location/add-location.component';\r\nimport { PricingSectionModule } from '../shared-components/pricing-section/pricing-section.module';\r\n\r\nconst routeCarrier: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: ScheduleBuilderComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DeliveryRequestComponent,\r\n        ScheduleBuilderComponent,\r\n        DeliveryGroupComponent,\r\n        ScheduleBuilderFilterComponent,\r\n        RouteInfoComponent,\r\n        CompartmentQuantityValidatorDirective,\r\n        OttoBuilderComponent,\r\n        OttoNotificationComponent,\r\n        SplitDeliveryRequestComponent,\r\n        DriverColumnViewComponent,\r\n        DriverScheduleColumnViewComponent,\r\n        ScheduleBuilderGridFilterComponent,\r\n        DsbLoadQueueComponent,\r\n        AssignedToMeComponent,\r\n        AssignedByMeComponent,\r\n        AddLocationComponent,\r\n\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        DataTablesModule,\r\n        PricingSectionModule,\r\n        NgDragDropModule.forRoot(),\r\n        RouterModule.forChild(routeCarrier)\r\n    ],\r\n    providers:[\r\n        LoadQueueService\r\n    ]\r\n})\r\nexport class CarrierModule { }\r\n","import { FormGroup, FormArray, ValidationErrors, AbstractControl, FormControl } from '@angular/forms';\r\n\r\nexport class CustomAbstractControls {\r\n    public static findRecursiveErrors(formToInvestigate: FormGroup | FormArray): string[] {\r\n        var invalidControls: string[] = [];\r\n        let recursiveFunc = (form: FormGroup | FormArray,nestedFormGroup=null) => {\r\n            Object.keys(form.controls).forEach(field => {\r\n                const control = form.get(field);\r\n                if (control.invalid && control.errors) {\r\n                    if (!nestedFormGroup)\r\n                        invalidControls.push(field); \r\n                    else\r\n                        invalidControls.push(nestedFormGroup + ' ' +field);\r\n                }\r\n                if (control instanceof FormGroup) {\r\n                    recursiveFunc(control,field);\r\n                } else if (control instanceof FormArray) {\r\n                    recursiveFunc(control,null);\r\n                }\r\n            });\r\n        }\r\n        recursiveFunc(formToInvestigate);\r\n        return invalidControls;\r\n\t}\r\n    public static findErrors(formToInvestigate: FormGroup | FormArray): string[] {\r\n        var invalidControls: string[] = [];\r\n        let recursiveFunc = (form: FormGroup | FormArray, nestedFormGroup = null) => {\r\n            Object.keys(form.controls).forEach(field => {\r\n                const control = form.get(field);\r\n                if (control.invalid && control.errors) {\r\n                    if (!nestedFormGroup)\r\n                        invalidControls.push(field);\r\n                    else\r\n                        invalidControls.push(field);\r\n                }\r\n                if (control instanceof FormGroup) {\r\n                    recursiveFunc(control, field);\r\n                } else if (control instanceof FormArray) {\r\n                    recursiveFunc(control, null);\r\n                }\r\n            });\r\n        }\r\n        recursiveFunc(formToInvestigate);\r\n        return invalidControls;\r\n    }\r\n\tpublic static cloneForm<T extends AbstractControl>(control: T): T {\r\n\t\tlet cloneControl: T;\r\n\t\tif (control instanceof FormGroup) {\r\n\t\t\tconst formGroup = new FormGroup({}, control.validator, control.asyncValidator);\r\n\t\t\tconst controls = control.controls;\r\n\t\t\tObject.keys(controls).forEach(key => {\r\n\t\t\t\tformGroup.addControl(key, this.cloneForm(controls[key]));\r\n\t\t\t})\r\n\t\t\tcloneControl = formGroup as any;\r\n\t\t}\r\n\t\telse if (control instanceof FormArray) {\r\n\t\t\tconst formArray = new FormArray([], control.validator, control.asyncValidator);\r\n\t\t\tcontrol.controls.forEach(formControl => formArray.push(this.cloneForm(formControl)))\r\n\t\t\tcloneControl = formArray as any;\r\n\t\t}\r\n\t\telse if (control instanceof FormControl) {\r\n\t\t\tcloneControl = new FormControl(control.value, control.validator, control.asyncValidator) as any;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Error: invalid control');\r\n\t\t}\r\n\t\tif (control.disabled) cloneControl.disable({ emitEvent: false });\r\n\t\treturn cloneControl;\r\n\t}\r\n}","import { Component, OnInit, OnDestroy, AfterViewInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\r\nimport { tap, debounceTime, distinctUntilChanged, switchMap, catchError, first } from 'rxjs/operators';\r\nimport { of, iif, Subscription, Subject } from 'rxjs';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { TripModel, DeliveryRequestViewModel, DropAddressModel, OrderPickupDetailModel, OrderPickupLocationModel, OrderFuelDetails, OptionalPickupDetailModel, JobDetailsWithOrders, CancelDeliverySchedule, CancelDSDeliveryScheduleInfo, CancelDSDeliverySchedule, CancelDSDeliveryScheduleViewModel, SubDRStatus, SpiltDRsModel, CompatibleProductModel, BlendedRequest, ResetDeliveryGroupScheduleModel } from '../models/DispatchSchedulerModels';\r\nimport { DropdownItem, StatelistService, StateDropdownExtendedItem, AdditiveOrderViewModel } from 'src/app/statelist.service';\r\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { AddressModel } from 'src/app/invoice/models/DropDetail';\r\nimport { DataService } from '../service/data.service';\r\nimport { CustomAbstractControls } from '../customAbstractControl';\r\nimport { UtilService } from '../service/util.service';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { DeliveryGroupStatus, DeliveryReqStatus, TripStatus } from 'src/app/app.enum';\r\nimport { RegExConstants, SBConstants } from 'src/app/app.constants';\r\nimport { groupBy } from 'src/app/my.functions';\r\n\r\n@Component({\r\n    selector: 'app-delivery-group',\r\n    templateUrl: './delivery-group.component.html',\r\n    styleUrls: ['./delivery-group.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DeliveryGroupComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n    @ViewChild('idCommonPickUpBtn') idCommonPickUpBtn: ElementRef;\r\n    //@ViewChild('terminal_AutoComplete') terminal_AutoComplete;\r\n\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n    keyword = 'Name';\r\n    public initialValue = '';\r\n    public _loadingAddress: boolean = false;\r\n    public _loadingTerminals: boolean = false;\r\n    public _currentTrip: FormGroup;\r\n    private _shiftIndex: number;\r\n    private _rowIndex: number;\r\n    private _tripIndex: number;\r\n    private Schedule: any;\r\n\r\n    public selectedViewNote: any;\r\n\r\n    public StateList: StateDropdownExtendedItem[] = [];\r\n    public CountryList: DropdownItem[] = [];\r\n    public CountryGroupList: DropdownItem[] = [];\r\n    public Terminals = [];\r\n    public minCharRequired = false;\r\n    public searchError = false;\r\n    public noTerminalFound = false;\r\n    public BulkPlants: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    public OrderList: any = {};\r\n    public TbdOrderList: any = {};\r\n    public fuelTypeOrderList: any = {};\r\n    public TbdCustomerList: any = {};\r\n    public TbdLocationList: any = {};\r\n    public ChangePickupForOrders: number[] = [];\r\n    public SearchTerminalFuelType: string;\r\n    public SearchTerminalKey: string;\r\n    public LocationType: number = 1;\r\n\r\n    public DelGroupForm: FormGroup;\r\n    public PickupForm: FormGroup;\r\n    public SelectedDRForEditPickup: FormGroup;\r\n    public addSubDrModel: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public blendAddRequestToUpdate: DeliveryRequestViewModel[] = [];\r\n\r\n    public CompletedScheduleStatuses: number[] = [7, 8, 9, 10];\r\n    //public OnTheWayScheduleStatuses: number[] = [1, 3, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20];\r\n    private selectedDeliveryRequest: DeliveryRequestViewModel;\r\n    private DeletedDrIndex: number;\r\n\r\n    public MaxStartDate: Date = new Date();\r\n    public validStartDate: Boolean = true;\r\n    private StartTimeSubscription: Subscription;\r\n    private StartDateSubscription: Subscription;\r\n    private PickupLocationSubscription: Subscription;\r\n    private DeleteDRRequestSubject: Subscription;\r\n    private DGSubscription: Subscription = new Subscription();\r\n    public HideDeliveryGroupSubject: Subscription;\r\n    public UnchangedTrip: FormGroup;\r\n    public MaxCalendarDate: Date = new Date();\r\n    public MinCalendarDate: Date = new Date();\r\n    public isReadOnly: boolean = false;\r\n    @Input() private SelectedDate: Date = new Date();\r\n    @Input() private SelectedRegionId: string;\r\n    @Input() isSupplierCompany: boolean = false;\r\n    @Input() private ScheduleBuilderId: string;\r\n    public CountryBasedZipcodeLabel: string = \"Zip\";\r\n    public RouteResetGroupSubject: Subscription;\r\n    public RouteListForTrip: any[] = [];\r\n    public isOptionalPickup: boolean = false;\r\n    public ScheduleOptionalPickupDetailModel: OptionalPickupDetailModel[] = [];\r\n    public ScheduleOrderFuelInfo: OrderFuelDetails[] = [];\r\n    public multiDropdownSettings = {};\r\n    public CustomerSettings = {};\r\n    public SiteddlSettings = {};\r\n\r\n    @Output() onRaiseSubDR: EventEmitter<any> = new EventEmitter<any>();\r\n    public AddDropLocationLoader: boolean = false;\r\n    public currentJobDetails: JobDetailsWithOrders;\r\n    public drOrders: JobDetailsWithOrders[];\r\n    public SubDrsStatusWithParentIds: SubDRStatus[] = [];\r\n    public EnrouteInCompleted: number[] = [3, 15, 23];\r\n    public EnrouteInProgress: number[] = [1, 3, 11, 12, 13, 14, 15, 16, 17, 18];\r\n    public SubDrOtherThanCancellStatus: number[] = [3, 23, 17, 11, 20, 15, 14, 1, 16, 6, 12]\r\n    public CancelDSViewModel: DeliveryRequestViewModel;\r\n    public DeliveryReqCancelScheduleUpdateModel: CancelDeliverySchedule[] = [];\r\n    public cancelDSDeliveryScheduleViewModel: CancelDSDeliveryScheduleViewModel[] = [];\r\n    constructor(private fb: FormBuilder, private sbService: ScheduleBuilderService, private carrierService: CarrierService,\r\n        private addresService: AddressService, private stateService: StatelistService,\r\n        private dataService: DataService, private changeDetectorRef: ChangeDetectorRef, private utilService: UtilService) {\r\n        this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 1);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.DelGroupForm = this.utilService.getTripFormGroup(new TripModel());\r\n        this.PickupForm = this.initPickupForm(new OrderPickupDetailModel());\r\n        this.additiveOrders = [];\r\n        this.PickupLocationTypeChange();\r\n        this.zipcodeConditionallyValidator();\r\n        this.multiSelectSettings();\r\n        this.subscribeGetOrderSubject()\r\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n    }\r\n\r\n    multiSelectSettings() {\r\n        this.multiDropdownSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            allowSearchFilter: true,\r\n            itemsShowLimit: 1\r\n        };\r\n        this.CustomerSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'CompanyId',\r\n            textField: 'CompanyName',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.SiteddlSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n\r\n        };\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.subscribeEditGroupSubject();\r\n        this.subscribeShowDeliveryGroupSubject();\r\n        this.subscribeShowOpenedDeliveryGroupSubject();\r\n        this.subscribeCommonPickupLocationChange();\r\n        this.subscribeHideDeliveryGroupSubject();\r\n        this.subscribeRouteResetGroupSubject();\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges): void {\r\n        if (change.SelectedDate && change.SelectedDate.currentValue) {\r\n            if (this.MaxCalendarDate < this.SelectedDate) {\r\n                this.MaxCalendarDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\r\n                this.MinCalendarDate = moment(new Date(this.SelectedDate)).toDate();\r\n            } else {\r\n                this.MinCalendarDate = moment(new Date(this.SelectedDate)).toDate();\r\n                this.MaxCalendarDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeAllSubscriptions();\r\n    }\r\n\r\n    private unsubscribeAllSubscriptions(): void {\r\n        if (this.DGSubscription) {\r\n            this.DGSubscription.unsubscribe();\r\n        }\r\n        if (this.HideDeliveryGroupSubject) {\r\n            this.HideDeliveryGroupSubject.unsubscribe();\r\n        }\r\n        if (this.RouteResetGroupSubject) {\r\n            this.RouteResetGroupSubject.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private subscribeEditGroupSubject(): void {\r\n        let subs = this.dataService.EditDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                if (x.routeName != null) {\r\n                    this.RouteListForTrip = x.routeName;\r\n                }\r\n                this.ScheduleOptionalPickupDetailModel = [];\r\n                this.ScheduleOrderFuelInfo = null;\r\n                if (x.isOptionalPickup) {\r\n                    this.ScheduleOptionalPickupDetailModel = x.OptionalPickupInfo;\r\n                    this.ScheduleOrderFuelInfo = x.OrderFuelInfo;\r\n                }\r\n                this.editGroup(x.trip, x.shiftIndex, x.rowIndex, x.tripIndex, x.schedule, x.isPublishLoadInvalid, x.isOptionalPickup);\r\n            }\r\n        });\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    private subscribeShowDeliveryGroupSubject(): void {\r\n        let subs = this.dataService.ShowDeliveryGroupSubject.subscribe(x => {\r\n            if (x != null && x != undefined) {\r\n                x ? this.showDeliveryGroup() : this.hideDeliveryGroup();\r\n            }\r\n        });\r\n        this.subscribeDeleteDRRequestSubject();\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    private subscribeShowOpenedDeliveryGroupSubject(): void {\r\n        let subs = this.dataService.ShowOpenedDeliveryGroupSubject.subscribe(x => {\r\n            if (x != null && x != undefined) {\r\n                x ? this.showOpenedDeliveryGroup() : this.hideDeliveryGroup();\r\n            }\r\n        });\r\n        this.subscribeDeleteDRRequestSubject();\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    private PickupLocationTypeChange(): void {\r\n        this.DGSubscription.add(this.PickupForm.controls['PickupLocationType'].valueChanges.subscribe((data) => {\r\n            this.PickupForm.markAllAsTouched;\r\n            this.PickupForm.markAsDirty();\r\n            this.setPickupValidators(this.PickupForm, data);\r\n            let commonPickup = this.DelGroupForm.controls['IsCommonPickup'].value;\r\n            commonPickup ? this.disableDeliveryGroupPickups() : this.enableDeliveryGroupPickups();\r\n        }));\r\n    }\r\n    public subscribeHideDeliveryGroupSubject(): void {\r\n        this.HideDeliveryGroupSubject = this.dataService.HideDeliveryGroupSubject.subscribe(x => {\r\n            if (x && x == true) {\r\n                this.hideDeliveryGroup();\r\n            }\r\n        });\r\n    }\r\n    initPickupForm(order: OrderPickupDetailModel): FormGroup {\r\n        let isTerminalPickup = order && order.PickupLocationType != 2;\r\n        var _pForm = this.fb.group({\r\n            PickupLocationType: this.fb.control(order.PickupLocationType),\r\n            Terminal: this.utilService.getTerminalForm(null, isTerminalPickup),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, !isTerminalPickup)\r\n        });\r\n        if (order != null || order != undefined) {\r\n            if (order.PickupLocationType != 2) {\r\n                _pForm.controls['Terminal'].patchValue({ Id: order.TerminalId, Name: order.TerminalName });\r\n            } else {\r\n                _pForm.controls['BulkPlant'].patchValue({\r\n                    Address: order.Address,\r\n                    City: order.City,\r\n                    State: { Id: order.StateId, Code: order.StateCode },\r\n                    Country: { Code: order.CountryCode },\r\n                    ZipCode: order.ZipCode,\r\n                    CountyName: order.CountyName,\r\n                    Latitude: order.Latitude,\r\n                    Longitude: order.Longitude,\r\n                    SiteName: order.BulkplantName\r\n                });\r\n            }\r\n        }\r\n        this.DGSubscription.add(_pForm.controls['PickupLocationType'].valueChanges.subscribe(x => { this.LocationType = x; }));\r\n        return _pForm;\r\n    }\r\n\r\n    setPickupLocation(form: FormGroup, order: OrderPickupLocationModel): void {\r\n        form.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                form.controls['Terminal'].patchValue(order.Terminal);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n            }\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(1);\r\n            this.PickupForm.controls['Terminal'].patchValue(order.Terminal);\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                form.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n            }\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(2);\r\n            this.PickupForm.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n        }\r\n    }\r\n\r\n    setPickupValidators(form: FormGroup, pickupType: number): void {\r\n        if (form.get('IsAdditive') && form.get('IsAdditive').value) {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        }\r\n        else if (pickupType != 2) {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').setValidators([Validators.required]);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators([Validators.required]);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        } else {\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Address').setValidators([Validators.required]);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators([Validators.required]);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators([Validators.required]);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators([Validators.required]);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators([Validators.required]);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators([Validators.required]);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators([Validators.required]);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n\r\n    removePickupValidators(form: FormGroup, pickupType: number): void {\r\n        if (pickupType != 2) {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').clearValidators();\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').clearValidators();\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        } else {\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Address').clearValidators();\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').clearValidators();\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').clearValidators();\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').clearValidators();\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').clearValidators();\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').clearValidators();\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').clearValidators();\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').clearValidators();\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').clearValidators();\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    getOrderList(delReq: FormGroup, isCommonPickup: boolean, startDate: string): void {\r\n        let _jobId = delReq.controls['JobId'].value;\r\n        let _productTypeId = delReq.controls['ProductTypeId'].value;\r\n        let _orderId = delReq.controls['OrderId'];\r\n        let _carrierStatus = delReq.controls['CarrierStatus'].value;\r\n        let isBlendReq = delReq.controls['IsBlendedRequest'].value;\r\n        let isDrForTank = delReq.controls['TankId'].value && delReq.controls['StorageId'].value;\r\n        let existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)];\r\n        if (existing == undefined || existing == null || existing.length == 0) {\r\n            this.DGSubscription.add(this.sbService.getOrders(_jobId, _productTypeId, startDate, _carrierStatus, isBlendReq).subscribe(data => {\r\n                this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)] = data;\r\n                //location all orders\r\n                //this.OrderList[_jobId.toString()] = data;\r\n                if (data.length > 0) {\r\n                    let order = data[0];\r\n                    if (_orderId && _orderId.value > 0) {\r\n                        var orderFromData = data.filter(t => t.OrderId == _orderId.value);\r\n                        if (orderFromData != null && orderFromData.length > 0) {\r\n                            order = orderFromData[0];\r\n                        }\r\n                    }\r\n                    if (_orderId.value == null || _orderId.value == 0 || (_orderId.value > 0 && _orderId.value != order.OrderId && isDrForTank)) {\r\n                        delReq.controls['OrderId'].setValue(order.OrderId);\r\n                        this.onDeliveryRequestChange(delReq);\r\n                    }\r\n                    if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\r\n                        //un-used code\r\n                        //if (order.OrderId > 0) {\r\n                        //    let location = OrderPickupLocationModel.ToLocation(order);\r\n                        //    //this.setPickupLocation(delReq, location);\r\n                        //}\r\n\r\n                        this.onDeliveryRequestChange(delReq);\r\n                    }\r\n                    this.setTruckLoadType(delReq, order);\r\n                }\r\n                else {\r\n                    //No Order Found then set order id 0.\r\n                    delReq.controls['OrderId'].setValue(0);\r\n                }\r\n                //this.setDRPickupValidators(delReq, delReq.value.PickupLocationType);\r\n            }));\r\n        }\r\n        else {\r\n            if (_orderId.value == undefined || _orderId.value == null || _orderId.value == '') {\r\n                _orderId.setValue(existing[0].OrderId);\r\n                let location = OrderPickupLocationModel.ToLocation(existing[0]);\r\n                this.setPickupLocation(delReq, location);\r\n                this.onDeliveryRequestChange(delReq);\r\n                this.setTruckLoadType(delReq, existing[0]);\r\n            }\r\n            else if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\r\n                let order = existing[0];\r\n                if (_orderId.value != undefined && _orderId.value != null && _orderId.value > 0) {\r\n                    var orderFromData = existing.filter(t => t.OrderId == _orderId.value);\r\n                    if (orderFromData != null && orderFromData.length > 0) {\r\n                        order = orderFromData[0];\r\n                    }\r\n                }\r\n                let location = OrderPickupLocationModel.ToLocation(order);\r\n                this.setPickupLocation(delReq, location);\r\n                this.onDeliveryRequestChange(delReq);\r\n                this.setTruckLoadType(delReq, order);\r\n            }\r\n            this.setDRPickupValidators(delReq, delReq.value.PickupLocationType);\r\n        }\r\n    }\r\n\r\n    editGroup(trip: FormGroup, shiftIndex: number, rowIndex: number, tripIndex: number, schedule: any, isPublishLoadInvalid = false, isOptionalPickup = false) {\r\n        this.SubDrsStatusWithParentIds = [];\r\n        this.PickupForm.reset();\r\n        this.DelGroupForm = trip;\r\n        this.fuelTypeOrderList = [];\r\n        this.UnchangedTrip = CustomAbstractControls.cloneForm(trip);\r\n        this.changeDetectorRef.markForCheck();\r\n        this.DelGroupForm.markAllAsTouched();\r\n        this.PickupForm.markAllAsTouched();\r\n        this._shiftIndex = shiftIndex;\r\n        this._rowIndex = rowIndex;\r\n        this._tripIndex = tripIndex;\r\n        this.Schedule = schedule;\r\n        this.isOptionalPickup = isOptionalPickup;\r\n        var isCommonPickup: boolean = trip.controls['IsCommonPickup'].value;\r\n        var delReqs = trip.controls['DeliveryRequests'] as FormArray;\r\n        let groupDRParentIds: SubDRStatus[] = [];\r\n        delReqs.controls.forEach((x: FormGroup) => {\r\n            if (x.controls[\"GroupParentDRId\"].value == null) {\r\n                x.controls[\"GroupParentDRId\"].setValue('');\r\n            }\r\n            if (x.controls['JobId'].value > 0 && x.controls['IsTBD'].value == false)\r\n                this.getOrderList(x, isCommonPickup, trip.controls['StartDate'].value);\r\n            else\r\n                this.getDropLocationDetails(x);\r\n\r\n            if (x.controls['GroupParentDRId'].value != null && x.controls['GroupParentDRId'].value != \"\")\r\n                groupDRParentIds.push(x.controls['GroupParentDRId'].value);\r\n        });\r\n\r\n        if (groupDRParentIds.length > 0) {\r\n            groupDRParentIds = groupDRParentIds.filter((n, i) => groupDRParentIds.indexOf(n) === i);\r\n            this.sbService.getSubDRStatus(groupDRParentIds).subscribe((data: SubDRStatus[]) => {\r\n                if (data && data.length > 0)\r\n                    this.SubDrsStatusWithParentIds = data;\r\n            });\r\n        }\r\n        this.validateOptionalPickup();\r\n        for (var i = 0; i < delReqs.length; i++) {\r\n            if (delReqs.controls[i].get('IsCommonBadge').value == true) {\r\n                trip.controls['IsCommonBadge'].setValue(true);\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i < delReqs.length; i++) {\r\n            if (delReqs.controls[i].get('PreLoadInfo') != null && delReqs.controls[i].get('PreLoadInfo').value != null) {\r\n                trip.controls['IsPreLoadInfo'].setValue(true);\r\n                break;\r\n            }\r\n        }\r\n        if (trip.controls['IsCommonPickup'].value == true) {\r\n            this.disableDeliveryGroupPickups();\r\n        }\r\n        else {\r\n            this.enableDeliveryGroupPickups();\r\n        }\r\n\r\n        //get additive product orders if required\r\n        let drs = delReqs.value as DeliveryRequestViewModel[];\r\n        if (drs.some(dr => dr.IsBlendedRequest)) {\r\n            this.getAdditiveOrders();\r\n        }\r\n        this.deletedBlend_all = [];\r\n        //if (drs.some(dr => dr.IsBlendedRequest && !dr.StorageId)) {\r\n        //    this.getCompatibleProducts();\r\n        //}\r\n    }\r\n\r\n    private subscribeCommonPickupLocationChange(): void {\r\n        this.PickupLocationSubscription = this.DelGroupForm.controls['IsCommonPickup'].valueChanges\r\n            .subscribe(x => {\r\n                x ? this.disableDeliveryGroupPickups() : this.enableDeliveryGroupPickups();\r\n                this.setCommonPickupFlag();\r\n            });\r\n        this.DGSubscription.add(this.PickupLocationSubscription);\r\n    }\r\n\r\n    public validateTerminal(terminal: any, event: any): void {\r\n        if (!terminal.get('Id').value) {\r\n            terminal.get('Name').patchValue('');\r\n        }\r\n    }\r\n\r\n    private disableDeliveryGroupPickups(): void {\r\n        let _drArray = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                x.controls['Terminal'].disable();\r\n                x.controls['BulkPlant'].disable();\r\n            });\r\n        }\r\n        if (this.DelGroupForm.controls['PickupLocationType'].value == 2) {\r\n            this.DelGroupForm.controls['BulkPlant'].enable();\r\n            this.DelGroupForm.controls['Terminal'].disable();\r\n        } else {\r\n            this.DelGroupForm.controls['BulkPlant'].disable();\r\n            this.DelGroupForm.controls['Terminal'].enable();\r\n        }\r\n    }\r\n\r\n    private enableDeliveryGroupPickups(): void {\r\n        let _drArray = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                if (!x.get('IsAdditive').value) {\r\n                    x.controls['Terminal'].enable();\r\n                    x.controls['BulkPlant'].enable();\r\n                }\r\n            });\r\n        }\r\n        this.DelGroupForm.controls['BulkPlant'].disable();\r\n        this.DelGroupForm.controls['Terminal'].disable();\r\n    }\r\n\r\n    public setSelectedDate(date: string): void {\r\n        let _date = this.DelGroupForm.controls['StartDate'];\r\n        if (_date.value != date) {\r\n            _date.patchValue(date);\r\n        }\r\n    }\r\n\r\n    public setScheduleSelectedDate(ScheduleDate: string, dr: FormGroup): void {\r\n        if (ScheduleDate != dr.controls['SelectedDate'].value) {\r\n            dr.controls['SelectedDate'].setValue(ScheduleDate);\r\n            this.setSheduleSelectedDateForBlendGroup(dr);\r\n        }\r\n    }\r\n    public setScheduleStartTime(StartTime: string, dr: FormGroup): void {\r\n        if (StartTime != dr.controls['ScheduleStartTime'].value) {\r\n            dr.controls['ScheduleStartTime'].setValue(StartTime);\r\n            this.setScheduleStartTimeForBlendGroup(dr)\r\n        }\r\n    }\r\n    public setScheduleEndTime(EndTime: string, dr: FormGroup): void {\r\n        if (EndTime != dr.controls['ScheduleEndTime'].value) {\r\n            dr.controls['ScheduleEndTime'].setValue(EndTime);\r\n            this.setScheduleEndTimeForBlendGroup(dr)\r\n        }\r\n    }\r\n\r\n    public setBadgeForBlendGroup(tdr: FormGroup, badgeNum: number) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            let blendGroupId = tdr.get('BlendedGroupId').value;\r\n            drs.controls.forEach(t => {\r\n                if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                    t.get('BadgeNo' + badgeNum).setValue(tdr.get('BadgeNo' + badgeNum).value);\r\n                    this.onDeliveryRequestChange(t as FormGroup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public setCommonBadgeForBlendGroup(tdr: FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            let blendGroupId = tdr.get('BlendedGroupId').value;\r\n            drs.controls.forEach(t => {\r\n                if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                    t.get('IsCommonBadge').setValue(tdr.get('IsCommonBadge').value);\r\n                    this.onDeliveryRequestChange(t as FormGroup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    public setNoteForBlendGroup(tdr: FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            let blendGroupId = tdr.get('BlendedGroupId').value;\r\n            drs.controls.forEach(t => {\r\n                if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                    t.get('Notes').setValue(tdr.get('Notes').value);\r\n                    this.onDeliveryRequestChange(t as FormGroup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public setSheduleSelectedDateForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId){\r\n                        t.get('SelectedDate').setValue(tdr.get('SelectedDate').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }        \r\n    }\r\n\r\n    public setDeliveryLevelPOForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                        t.get('DeliveryLevelPO').setValue(tdr.get('DeliveryLevelPO').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }    \r\n    }\r\n\r\n    public setScheduleStartTimeForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                        t.get('ScheduleStartTime').setValue(tdr.get('ScheduleStartTime').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }    \r\n    }\r\n    public setScheduleEndTimeForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                        t.get('ScheduleEndTime').setValue(tdr.get('ScheduleEndTime').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }    \r\n    }\r\n\r\n    showOpenedDeliveryGroup(): void {\r\n        Declarations.showOpenDG();\r\n    }\r\n\r\n    showDeliveryGroup(): void {\r\n        Declarations.showDG();\r\n    }\r\n\r\n    viewNotes(tdr): void {\r\n        if (this.selectedViewNote != tdr.value.Id) {\r\n            this.selectedViewNote = tdr.value.Id;\r\n        } else {\r\n            this.selectedViewNote = undefined;\r\n        }\r\n    }\r\n\r\n\r\n    hideDeliveryGroup(): void {\r\n        Declarations.closeDG();\r\n        this.OrderList = {};\r\n        if (this.StartDateSubscription) {\r\n            this.StartDateSubscription.unsubscribe();\r\n        }\r\n        if (this.StartTimeSubscription) {\r\n            this.StartTimeSubscription.unsubscribe();\r\n        }\r\n        if (this.PickupLocationSubscription) {\r\n            this.PickupLocationSubscription.unsubscribe();\r\n        }\r\n        if (this.DeleteDRRequestSubject) {\r\n            this.DeleteDRRequestSubject.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private setDeletePostloadedDrsSubject(drs: DeliveryRequestViewModel[]): void {\r\n        let preloadedDrInfo = drs.filter(x => x.PreLoadInfo);\r\n        let postloadedDrInfo = drs.filter(x => x.PostLoadInfo);\r\n        let prepostloadedInfo = preloadedDrInfo.concat(postloadedDrInfo);\r\n        if (prepostloadedInfo.length > 0) {\r\n            this.dataService.setDeletePostloadSubject(prepostloadedInfo);\r\n        }\r\n    }\r\n\r\n    deleteDeliveryGroup(isReset: boolean) {\r\n        this.hideDeliveryGroup();\r\n        this.setDeletePostloadedDrsSubject(this.DelGroupForm.controls['DeliveryRequests'].value);\r\n        this.dataService.setDeleteDeliveryGroupSubject(this.DelGroupForm);\r\n        this.dataService.setDeliveryPreloadOption({ ShiftIndex: this._shiftIndex, ScheduleIndex: this._rowIndex, Reset: true });\r\n    }\r\n\r\n    deleteSchedule(tripDetails: any): void {\r\n        var _delReqs = tripDetails.trip.get('DeliveryRequests') as FormArray;\r\n        this._currentTrip = tripDetails.trip;\r\n        this.DeletedDrIndex = tripDetails.index;\r\n\r\n        this.selectedDeliveryRequest = _delReqs.controls[this.DeletedDrIndex].value;\r\n        this.selectedDeliveryRequest.WindowMode = 1;\r\n        this.selectedDeliveryRequest.QueueMode = 1;\r\n\r\n\r\n        if (this.selectedDeliveryRequest.TrackableScheduleId != null && this.selectedDeliveryRequest.TrackableScheduleId > 0) {\r\n            var scheduleIds: number[] = [];\r\n            scheduleIds.push(this.selectedDeliveryRequest.TrackableScheduleId);\r\n\r\n            //FOR BLENDED REQUESTS - DELETE BLEND GROUP\r\n            if (this.selectedDeliveryRequest.IsBlendedRequest) {\r\n                scheduleIds = [];\r\n                let tripDrs = this.filterAndGetDrsByBlendGroupId(<DeliveryRequestViewModel[]>_delReqs.value, this.selectedDeliveryRequest.BlendedGroupId);\r\n                tripDrs.forEach(dr => {\r\n                    if (dr.TrackableScheduleId != null && dr.TrackableScheduleId > 0) {\r\n                        scheduleIds.push(dr.TrackableScheduleId);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    var data = response[0];\r\n                    if (this.CompletedScheduleStatuses.indexOf(data.ScheduleStatusId) !== -1 || data.ScheduleEnrouteStatusId == 4) {\r\n                        this.selectedDeliveryRequest = null;\r\n                        this.DeletedDrIndex = null;\r\n                        Declarations.msgerror(\"Can't delete as drop has been made already\", 'Warning', 2500);\r\n                        return;\r\n                    }\r\n                    else if (SBConstants.OnTheWayScheduleStatuses.indexOf(data.ScheduleEnrouteStatusId) !== -1) {\r\n                        this.sbService.setConfirmationHeadingForDR(data.ScheduleEnrouteStatusId);\r\n                        document.getElementById('btnconfirm-delete-dr').click();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.deleteDeliveryRequestFromLoad();\r\n                    }\r\n                }\r\n                else {\r\n                    this.deleteDeliveryRequestFromLoad();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.deleteDeliveryRequestFromLoad();\r\n        }\r\n    }\r\n\r\n    public checkScheduleEditStatus(tdr: FormGroup) {\r\n        let dr = tdr.value as DeliveryRequestViewModel;\r\n        if (dr.Status != 3) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (SBConstants.OnTheWayScheduleStatuses.indexOf(dr.TrackScheduleEnrouteStatus) !== -1 && dr.IsTBD == false) {\r\n                return false;\r\n            }\r\n            if (this.CompletedScheduleStatuses.indexOf(dr.TrackScheduleStatus) !== -1 || dr.TrackScheduleEnrouteStatus == 4) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public deleteDeliveryRequestFromLoad() {\r\n        Declarations.hideModal('#confirm-delete-dr');\r\n        let deletedRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        //FOR BLENDED REQUESTS\r\n        if (this.selectedDeliveryRequest.IsBlendedRequest) {\r\n            deletedRequests = this.filterAndGetDrsByBlendGroupId(this._currentTrip.get('DeliveryRequests').value, this.selectedDeliveryRequest.BlendedGroupId);\r\n            deletedRequests.forEach(dr => { dr.Compartments = []; })\r\n        }\r\n        else {\r\n            this.selectedDeliveryRequest.Compartments = [];\r\n            deletedRequests.push(this.selectedDeliveryRequest);\r\n        }\r\n\r\n        this.setDeletePostloadedDrsSubject(deletedRequests);\r\n        this.dataService.setRestoreDeletedRequestSubject(deletedRequests);\r\n        let _delReqs = this._currentTrip.get('DeliveryRequests') as FormArray;\r\n\r\n        //FOR BLENDED REQUESTS\r\n        if (this.selectedDeliveryRequest.IsBlendedRequest) {\r\n            let length = _delReqs.length;\r\n            while (length > 0) {\r\n                let index = _delReqs.value.findIndex(r => r.BlendedGroupId && r.BlendedGroupId == this.selectedDeliveryRequest.BlendedGroupId);\r\n                if (index != -1) {\r\n                    _delReqs.removeAt(index);\r\n                }\r\n                length--;\r\n            }\r\n        }\r\n        else {\r\n            _delReqs.removeAt(this.DeletedDrIndex);\r\n        }\r\n        //if (deletedRequests.length > 0) {\r\n        //    var resetDeliveryModel = new ResetDeliveryGroupScheduleModel();\r\n        //    resetDeliveryModel.DeliveryRequestIds = [];\r\n        //    deletedRequests.forEach(x => {\r\n        //        resetDeliveryModel.DeliveryRequestIds.push(x.Id);\r\n        //    });\r\n        //    this.dataService.setDeliveryScheduleRemoveSubject(resetDeliveryModel);\r\n        //}\r\n        this.selectedDeliveryRequest = null;\r\n        this.DeletedDrIndex = null;\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n\r\n    }\r\n\r\n    public deleteDeliveryRequestFromLoadNo() {\r\n        Declarations.hideModal('#confirm-delete-dr');\r\n        this.selectedDeliveryRequest = null;\r\n        this.DeletedDrIndex = null;\r\n    }\r\n\r\n    getAddressByZip(event: any): void {\r\n        var zipCode = event.target.value;\r\n        var regexUsa = new RegExp(RegExConstants.UsaZip);\r\n        var regexCan = new RegExp(RegExConstants.CanZip);\r\n        if (regexUsa.test(zipCode) || regexCan.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.DGSubscription.add(this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        if (data.CountryCode != 'CAR') {\r\n                            data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        }\r\n                        var addressModel = this.addressMapper(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: { Code: addressModel.Country.Code },\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n\r\n    addressMapper(data: any): AddressModel {\r\n        var state = this.StateList.find(x => x.Code == data.StateCode);\r\n        var country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        var _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n\r\n    onBulkPlantSelected(event: any): void {\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress(event.Name);\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n\r\n    onBulkPlantSearched(event: any): void {\r\n        var keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n\r\n    onBulkPlantBlur(event: any): void {\r\n        if (this.BulkPlants.filter(t => t.Name && t.Name.toLowerCase() == event.target.value.toLowerCase()).length > 0) {\r\n            var bulkPlant = this.BulkPlants.find(t => t.Name.toLowerCase() == event.target.value.toLowerCase());\r\n            this.PickupForm.get('BulkPlant.SiteName').setValue(bulkPlant.Name);\r\n            this.PickupForm.get('BulkPlant.SiteId').setValue(bulkPlant.Id);\r\n            this.getBulkPlantAddress(bulkPlant.Name);\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n\r\n    onTerminalSearched(event: any): void {\r\n        var keyword = event.target.value.toLowerCase();\r\n        this.SearchTerminalKey = keyword;\r\n        let searchKeyword$ = of(keyword);\r\n        this.DGSubscription.add(searchKeyword$.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            tap((data) => {\r\n                this._loadingTerminals = true\r\n                if (data.length < 3 && data.length != 0) {\r\n                    this.minCharRequired = true;\r\n                } else {\r\n                    this.minCharRequired = false;\r\n                }\r\n            }),\r\n            switchMap((term) => iif(\r\n                () => (term.length < 3 && term.length != 0),\r\n                of([])\r\n                , this.sbService.getPickupTerminals(this.ChangePickupForOrders, keyword).pipe(\r\n                    tap(() => {\r\n                        this._loadingTerminals = false;\r\n                    }),\r\n                    catchError(() => {\r\n                        this._loadingTerminals = false;\r\n                        this.searchError = true;\r\n                        return of([]);\r\n                    })\r\n                ))),\r\n            tap(() => this._loadingTerminals = false)\r\n        ).subscribe((data) => {\r\n            this._loadingTerminals = false;\r\n            if (data.length === 0) {\r\n                this.noTerminalFound = true;\r\n            } else {\r\n                this.noTerminalFound = false;\r\n            }\r\n            this.Terminals = data;\r\n        }, (err) => {\r\n            console.log(err);\r\n        }));\r\n    }\r\n    onTerminalSelected(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n    }\r\n\r\n    changeTerminal(delReq: FormGroup, event: any): void {\r\n        if (delReq.controls['IsTBD'].value == true) {\r\n            return;\r\n        }\r\n        var _jobId = delReq.controls['JobId'].value;\r\n        var _productTypeId = delReq.controls['ProductTypeId'].value;\r\n        var _orderId = event.target.selectedOptions[0].value;\r\n        let isBlend = delReq.controls['IsBlendedRequest'].value;\r\n        var orders = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlend ? 1 : 0)] as OrderPickupDetailModel[];\r\n        if (orders.length > 0) {\r\n            var selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (selectedOrder) {\r\n                if (delReq.value.IsCommonBadge == false || (selectedOrder.Badge1 && selectedOrder.Badge1.length > 0) || (selectedOrder.Badge2 && selectedOrder.Badge2.length > 0) || (selectedOrder.Badge3 && selectedOrder.Badge3.length > 0)) {\r\n                    delReq.get('BadgeNo1').patchValue(selectedOrder.Badge1);\r\n                    delReq.get('BadgeNo2').patchValue(selectedOrder.Badge2);\r\n                    delReq.get('BadgeNo3').patchValue(selectedOrder.Badge3);\r\n                    delReq.get('IsCommonBadge').patchValue(false);\r\n                }\r\n                let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n                this.setPickupLocation(delReq, location);\r\n                this.setPickupValidators(delReq, location.PickupLocationType);\r\n                this.setTruckLoadType(delReq, selectedOrder);\r\n            }\r\n        }\r\n        this.onDeliveryRequestChange(delReq);\r\n    }\r\n\r\n    setStateCode(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    getBulkPlantAddress(bulkPlantName: string) {\r\n        this.DGSubscription.add(this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: response.State,\r\n                Country: { Code: response.Country.Code },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n        }));\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n\r\n    getDropLocationDetails(tdr: FormGroup): void {\r\n        let tfxProductId = tdr.controls['FuelTypeId'].value;\r\n        let productTypeId = tdr.controls['ProductTypeId'].value;\r\n        let dr = tdr.value as DeliveryRequestViewModel;\r\n        let terminalId = null, bulkplantId = null;\r\n        let pickupId = '';\r\n        if (dr.Terminal && dr.Terminal.Id > 0) {\r\n            terminalId = dr.Terminal.Id;\r\n            pickupId = 'T_' + terminalId.toString();\r\n        }\r\n        if (dr.BulkPlant && dr.BulkPlant.SiteId > 0) {\r\n            bulkplantId = dr.BulkPlant.SiteId;\r\n            pickupId = 'B_' + bulkplantId.toString();\r\n        }\r\n        if (this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()] == undefined) {\r\n            if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\r\n                this.sbService.getJobDetailsWithOrders(this.SelectedRegionId, tfxProductId, productTypeId, terminalId, bulkplantId, this.DelGroupForm.controls['StartDate'].value).subscribe(response => {\r\n                    if (response) {\r\n                        this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()] = response || [] as JobDetailsWithOrders[];\r\n                        let companyList = response.map((element) => ({ CompanyId: element.CompanyId, CompanyName: element.CompanyName }));\r\n                        this.TbdCustomerList[dr.Id] = this.GetUniqueCustomers(companyList.reduce((p, n) => p.concat(n), []));\r\n                        let siteList = response.map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n                        this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n                        if (dr.JobId > 0) {\r\n                            this.TbdOrderList[dr.Id] = response.map((element) => ({ Id: element.OrderId, Name: element.PoNumber }));\r\n                        }\r\n                    }\r\n                    //else {\r\n                    //    Declarations.msgerror('No order exists for this fuel type', 'error', 2500)\r\n                    //}\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let orders = this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()];\r\n            let companyList = orders.map((element) => ({ CompanyId: element.CompanyId, CompanyName: element.CompanyName }));\r\n            this.TbdCustomerList[dr.Id] = this.GetUniqueCustomers(companyList.reduce((p, n) => p.concat(n), []));\r\n            let siteList = orders.map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n            this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n        }\r\n    }\r\n\r\n    public onSiteSelect_TBD(item: any, tdr: FormGroup): void {\r\n        let dr = tdr.value as DeliveryRequestViewModel;\r\n        tdr.get('JobId').setValue(item.Id);\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        if (orders && orders.length > 0) {\r\n            let drOrders = orders.filter(t => t.JobId == item.Id).map((element) => ({ Id: element.OrderId, Name: element.PoNumber }));\r\n            this.TbdOrderList[dr.Id] = drOrders;\r\n            if (drOrders && drOrders.length > 0) {\r\n                tdr.get('OrderId').setValue(drOrders[0].Id);\r\n                this.updateDrForm(tdr, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSiteDeSelect_TBD(item: DropdownItem): void {\r\n\r\n    }\r\n\r\n    public updateDrForm(delReq: FormGroup, event: any): void {\r\n        let dr = delReq.value;\r\n        var _orderId = 0;\r\n        if (event)\r\n            _orderId = event.target.selectedOptions[0].value;\r\n        else\r\n            _orderId = delReq.get('OrderId').value;\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        let order = orders.find(t => t.OrderId == _orderId);\r\n        if (order) {\r\n            delReq.get('JobId').setValue(order.JobId);\r\n            delReq.get('OrderId').setValue(order.OrderId);\r\n            delReq.get('JobName').setValue(order.JobName);\r\n            delReq.get('JobAddress').setValue(order.Address);\r\n            delReq.get('JobCity').setValue(order.City)\r\n            delReq.get('UoM').setValue(order.UoM);\r\n            delReq.get('CustomerCompany').setValue(order.CompanyName);\r\n            delReq.get('ScheduleStartTime').setValue(order.ScheduleEndTime);\r\n            delReq.get('ScheduleEndTime').setValue(order.ScheduleEndTime);\r\n            if ((dr.BadgeNo1 == null || dr.BadgeNo1 == '') && (dr.BadgeNo2 == null || dr.BadgeNo2 == '') && (dr.BadgeNo3 == null || dr.BadgeNo3 == '')) {\r\n                let trip = this.DelGroupForm.value;\r\n                if ((trip.BadgeNo1 == null || trip.BadgeNo1 == '') && (trip.BadgeNo2 == null || trip.BadgeNo2 == '') && (trip.BadgeNo3 == null || trip.BadgeNo3 == '')) {\r\n                    delReq.get('BadgeNo1').setValue(order.BadgeNo1);\r\n                    delReq.get('BadgeNo2').setValue(order.BadgeNo2);\r\n                    delReq.get('BadgeNo3').setValue(order.BadgeNo3);\r\n                    delReq.get('IsCommonBadge').setValue(false);\r\n                }\r\n            }\r\n            this.onDeliveryRequestChange(delReq);\r\n        }\r\n    }\r\n\r\n    public onCustomerSelect_TBD(item: any, tdr: FormGroup): void {\r\n        let dr = tdr.value;\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        tdr.get('TBDLocations').setValue([]);\r\n        let siteList = orders.filter(x => x.CompanyId == item.CompanyId).map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n        this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n    }\r\n\r\n    private getOrdersOfDeliveryReq(dr: DeliveryRequestViewModel) {\r\n\r\n        let pickupId = '';\r\n        let orders: any = {};\r\n        if (dr.Terminal && dr.Terminal.Id > 0) {\r\n            pickupId = 'T_' + dr.Terminal.Id.toString();\r\n        }\r\n        if (dr.BulkPlant && dr.BulkPlant.SiteId > 0) {\r\n            pickupId = 'B_' + dr.BulkPlant.SiteId.toString();\r\n        }\r\n        if (dr.FuelTypeId) {\r\n            orders = this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()];\r\n        }\r\n        else {\r\n            orders= this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.ProductTypeId.toString()];\r\n        }\r\n        return orders || [];\r\n    }\r\n\r\n    public onCustomerDeSelect_TBD(item: any, tdr: FormGroup): void {\r\n        let dr = tdr.value;\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        tdr.get('TBDLocations').setValue([]);\r\n        let siteList = orders.map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n        this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n    }\r\n\r\n    GetUniqueLocations(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    GetUniqueCustomers(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.CompanyId) ? false : ids.push(item.CompanyId));\r\n        return uniqueItems.sort((a, b) => a.CompanyName.localeCompare(b.CompanyName));\r\n    }\r\n\r\n    clearDropLocationControls() {\r\n        this.drOrders = [];\r\n    }\r\n\r\n    RemovePickupLocation(tdr: FormGroup): void {\r\n        if (tdr != null || tdr != undefined) {\r\n            this.SelectedDRForEditPickup = tdr;\r\n            var _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n            this.PickupForm.reset();\r\n            let terminal = this.utilService.getTerminalForm(new DropdownItem(), false);\r\n            let bulkPlant = this.utilService.getBulkPlantForm(new DropAddressModel(), false);\r\n            var _terminal = terminal.value;\r\n            var _bulkPlant = bulkPlant.value;\r\n            let location = {\r\n                PickupLocationType: _pickupType,\r\n                Terminal: _terminal,\r\n                BulkPlant: _bulkPlant\r\n            };\r\n            this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n            this.removePickupValidators(this.SelectedDRForEditPickup, _pickupType);\r\n            this.onDeliveryRequestChange(this.SelectedDRForEditPickup);\r\n        }\r\n    }\r\n\r\n    get StatesListByCountry(): any[] {\r\n        let countryCode = this.PickupForm.controls['BulkPlant']['controls'].Country.get(\"Code\").value;\r\n        if (countryCode && this.CountryList && this.CountryList.length > 0) {\r\n\r\n            countryCode = countryCode == \"US\" ? \"USA\" : countryCode;\r\n            let countryId = 0;\r\n            let county = this.CountryList.find(c => c.Code == countryCode)\r\n            if (county && county.Id)\r\n                countryId = county.Id;\r\n\r\n            if (countryId == 4) {\r\n                let countryGroupCode = this.PickupForm.controls['BulkPlant']['controls'].CountryGroup.get(\"Id\").value;\r\n                return this.StateList.filter(t => t.CountryId == 4 && t.CountryGroupId == countryGroupCode);\r\n            }\r\n            else {\r\n                return this.StateList.filter(t => t.CountryId == countryId);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    editPickupLocation(tdr: FormGroup): void {\r\n        this.initialValue = '';\r\n        //this.clearAutoComplete();\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => this.StateList = x);\r\n        }\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n\r\n        if (!this.CountryGroupList || this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = tdr;\r\n        if (tdr == null || tdr == undefined) {\r\n            this.SelectedDRForEditPickup = this.DelGroupForm\r\n            var _delReqs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            _delReqs.controls.forEach((x: FormGroup) => {\r\n                var _orderId = x.controls['OrderId'].value as number;\r\n                if (_orderId > 0) {\r\n                    this.ChangePickupForOrders.push(_orderId);\r\n                }\r\n            });\r\n        } else {\r\n            var _orderId = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n            if (_orderId > 0) {\r\n                this.ChangePickupForOrders.push(_orderId);\r\n                var _jobId = tdr.get('JobId').value;\r\n                var _productTypeId = tdr.get('ProductTypeId').value;\r\n                let isBlend = tdr.get('IsBlendedRequest').value;\r\n                var existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlend ? 1 : 0)];\r\n                var orders = existing.filter(t => t.OrderId == _orderId);\r\n                if (orders.length > 0) {\r\n                    var lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                    this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        var _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        var _terminal = this.SelectedDRForEditPickup.controls['Terminal'].value;\r\n        var _bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n        this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n        //to get bulk plant for auto/manual order\r\n        let orderForBulkPlant = 0;\r\n        if (tdr) \r\n            orderForBulkPlant = this.SelectedDRForEditPickup.controls['OrderId'].value as number;      \r\n\r\n        this.addresService.getBulkPlants('', orderForBulkPlant).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n        //this.setPickupValidators(this.SelectedDRForEditPickup, _pickupType);\r\n        this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n            this.Terminals = data;\r\n        }));\r\n        if (location.PickupLocationType != 2 && _terminal && _terminal.Name != null) {\r\n            this.initialValue = _terminal.Name;\r\n        }\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onCommonPickupChkChange() {\r\n        var isCommonPickup = this.DelGroupForm.controls['IsCommonPickup'].value;\r\n        if (!isCommonPickup) {\r\n            var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            deliveryRequests.controls.forEach((x: FormGroup) => {\r\n                var _jobId = x.controls['JobId'].value;\r\n                var _productTypeId = x.controls['ProductTypeId'].value;\r\n                var _orderId = x.controls['OrderId'].value;\r\n                let isBlend = x.controls['IsBlendedRequest'].value;\r\n                var existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlend ? 1 : 0)];\r\n                var orders = existing.filter(t => t.OrderId == _orderId);\r\n                if (orders != null && orders.length > 0) {\r\n                    let location = OrderPickupLocationModel.ToLocation(orders[0]);\r\n                    this.setPickupLocation(x, location);\r\n                    this.onDeliveryRequestChange(x);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updatePickupLocation() {\r\n        if (this.SelectedDRForEditPickup != null) {\r\n            var isTrip = false;\r\n            let existingLocationType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            let existingTerminal = this.SelectedDRForEditPickup.get('Terminal.Id').value;\r\n            let existingBulkplant = this.SelectedDRForEditPickup.get('BulkPlant.SiteName').value;\r\n            let pickupLoc = this.PickupForm.value;\r\n            this.SelectedDRForEditPickup.patchValue(pickupLoc);\r\n            this.setPickupLocation(this.SelectedDRForEditPickup, pickupLoc);\r\n            this.setPickupValidators(this.SelectedDRForEditPickup, pickupLoc.PickupLocationType);\r\n            if (pickupLoc.PickupLocationType == 2) {\r\n                if (this.SelectedDRForEditPickup.get('BulkPlant').value) {\r\n                    let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                    if (bulkPlant.Country) {\r\n                        let countryCode = bulkPlant.Country.Code\r\n                        if (countryCode) {\r\n                            this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (existingLocationType != pickupLoc.PickupLocationType || (pickupLoc.PickupLocationType == 2 && pickupLoc.BulkPlant.SiteName != existingBulkplant) || (pickupLoc.PickupLocationType != 2 && pickupLoc.Terminal.Id != existingTerminal)) {\r\n                let _orderId = this.SelectedDRForEditPickup.value.OrderId;\r\n                let _pickupLocationType = pickupLoc.PickupLocationType;\r\n                let _pickupLocationId = (_pickupLocationType != 2) ? (pickupLoc.Terminal.Id) : (pickupLoc.BulkPlant.SiteId);\r\n                let orderIds = [];\r\n                var selectedFormValue = this.SelectedDRForEditPickup.value;\r\n                if (selectedFormValue.hasOwnProperty('TripId')) {\r\n                    isTrip = true;\r\n                    if (selectedFormValue.DeliveryRequests.length > 0) {\r\n                        orderIds = selectedFormValue.DeliveryRequests.map(function (a) { return a[\"OrderId\"]; });\r\n                    }\r\n                }\r\n                else {\r\n                    orderIds.push(_orderId);\r\n                }\r\n                //this.dipTestLoader = true;\r\n                this.DGSubscription.add(this.sbService.getOrderBadgesByTerminal(orderIds, _pickupLocationType, _pickupLocationId).subscribe((data: any) => {\r\n                    //this.dipTestLoader = false;\r\n                    if (data && data.length > 0) {\r\n                        if (!isTrip) {\r\n                            if (this.SelectedDRForEditPickup.value.IsCommonBadge == false || (data[0].BadgeNo1 && data[0].BadgeNo1.length > 0) || (data[0].BadgeNo2 && data[0].BadgeNo2.length > 0) || (data[0].BadgeNo3 && data[0].BadgeNo3.length > 0)) {\r\n                                this.SelectedDRForEditPickup.controls['BadgeNo1'].setValue(data[0].BadgeNo1);\r\n                                this.SelectedDRForEditPickup.controls['BadgeNo2'].setValue(data[0].BadgeNo2);\r\n                                this.SelectedDRForEditPickup.controls['BadgeNo3'].setValue(data[0].BadgeNo3);\r\n                                this.SelectedDRForEditPickup.controls['IsCommonBadge'].setValue(false);\r\n                            }\r\n                        }\r\n                        else {\r\n                            var _drArray = this.SelectedDRForEditPickup.controls['DeliveryRequests'] as FormArray;\r\n                            _drArray.controls.forEach((_drForm: FormGroup) => {\r\n                                if (_drForm.value.OrderId && _drForm.value.OrderId > 0) {\r\n                                    var badgeInfo = data.find(t => t.OrderId == _drForm.value.OrderId);\r\n                                    if (_drForm.value.IsCommonBadge == false || (badgeInfo.BadgeNo1 && badgeInfo.BadgeNo1.length > 0) || (badgeInfo.BadgeNo2 && badgeInfo.BadgeNo2.length > 0) || (badgeInfo.BadgeNo3 && badgeInfo.BadgeNo3.length > 0)) {\r\n                                        _drForm.controls['BadgeNo1'].setValue(badgeInfo.BadgeNo1);\r\n                                        _drForm.controls['BadgeNo2'].setValue(badgeInfo.BadgeNo2);\r\n                                        _drForm.controls['BadgeNo3'].setValue(badgeInfo.BadgeNo3);\r\n                                        _drForm.controls['IsCommonBadge'].setValue(false);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }));\r\n                this.onDeliveryRequestChange(this.SelectedDRForEditPickup);\r\n            }\r\n        }\r\n        var dismiss = document.getElementById('btnPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n    //clearAutoComplete(): void {\r\n    //    //e.stopPropagation();\r\n    //    this.terminal_AutoComplete.clear();\r\n    //}\r\n    setCommonPickupFlag() {\r\n        if (this.DelGroupForm.get('IsCommonPickup').value) {\r\n            this.PickupForm.reset();\r\n        } else {\r\n            this.DelGroupForm.controls['Terminal'].reset()\r\n            this.DelGroupForm.controls['BulkPlant'].reset();\r\n        }\r\n    }\r\n\r\n    setTripStatus(): void {\r\n        var tripPrevStatusId = this.DelGroupForm.controls['TripPrevStatus'].value as TripStatus;\r\n        var tripStatusId = TripStatus.Added;\r\n        if (tripPrevStatusId == TripStatus.None) {\r\n            tripStatusId = TripStatus.Added;\r\n        } else if (tripPrevStatusId == TripStatus.Added || tripPrevStatusId == TripStatus.Modified) {\r\n            tripStatusId = TripStatus.Modified;\r\n        }\r\n        this.DelGroupForm.controls['TripStatus'].setValue(tripStatusId);\r\n    }\r\n\r\n    setDeliveryGroupStatus(statusId: DeliveryGroupStatus): void {\r\n        this.DelGroupForm.controls['DeliveryGroupStatus'].setValue(statusId);\r\n    }\r\n\r\n    setDeliveryRequestStatus(statusId: DeliveryReqStatus): void {\r\n        if (this.DelGroupForm != null && this.DelGroupForm != undefined) {\r\n            var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                deliveryRequests.controls[i].get('Status').setValue(statusId);\r\n                if (deliveryRequests.controls[i].get('PreviousStatus').value != DeliveryReqStatus.ScheduleCreated && deliveryRequests.controls[i].get('ScheduleStatus').value == 0) {\r\n                    deliveryRequests.controls[i].get('ScheduleStatus').setValue(14);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processPostloadedDrsUpdatedValues(): void {\r\n        let updatedPostloadedDrs = this.DelGroupForm.controls['DeliveryRequests'].value;\r\n        if (updatedPostloadedDrs.length > 0) {\r\n            updatedPostloadedDrs = updatedPostloadedDrs.filter(x => x.PostLoadInfo);\r\n            if (updatedPostloadedDrs.length > 0) {\r\n                this.dataService.setUpdatePostloadSubject(updatedPostloadedDrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    draftDeliveryGroup(): void {\r\n        var isValidLoad = this.validateDraftLoad();\r\n        if (isValidLoad) {\r\n            this.setBadgeAndNotesToBlendGroup();\r\n            this.processPostloadedDrsUpdatedValues();\r\n            this.dataService.setGroupChangeDetectSubject(true);\r\n            this.dataService.setDraftDeliveryGroupSubject({ trip: this.DelGroupForm, filterChanged: false });\r\n            this.hideDeliveryGroup();\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    publishDeliveryGroup(): void {\r\n        var isValidLoad = this.validatePublishLoad();\r\n        if (isValidLoad) {\r\n            if (this.DelGroupForm.valid && this.DelGroupForm.controls.DeliveryRequests.value.length > 0 && this.DelGroupForm.controls.DeliveryRequests.valid) {\r\n                this.setBadgeAndNotesToBlendGroup();\r\n                this.processPostloadedDrsUpdatedValues();\r\n                let data = { shiftIndex: this._shiftIndex, rowIndex: this._rowIndex, colIndex: this._tripIndex, schedule: this.Schedule, trip: this.DelGroupForm }\r\n                if (this.DelGroupForm.value.StartTime != this.UnchangedTrip.value.StartTime || this.DelGroupForm.value.EndTime != this.UnchangedTrip.value.EndTime || this.DelGroupForm.value.StartDate != this.UnchangedTrip.value.StartDate) {\r\n                    this.onDeliveryGroupChange();\r\n                }\r\n                this.dataService.setPublishDeliveryGroupSubject(data);\r\n                this.hideDeliveryGroup();\r\n                this.changeDetectorRef.markForCheck();\r\n                this.dataService.setGroupChangeDetectSubject(true);\r\n            } else {\r\n                let error = \" Invalid\";\r\n                for (let c in this.DelGroupForm.controls) {\r\n                    this.DelGroupForm.controls[c].markAsTouched();\r\n                    if (!(this.DelGroupForm.controls['DeliveryRequests'].valid || this.DelGroupForm.controls['Terminal'].valid || this.DelGroupForm.controls['BulkPlant'].valid))\r\n                        error = \"Choose Pickup Location\";\r\n                    this.DelGroupForm.controls[c].valid ? '' : error += \"  \" + ((c == 'DeliveryRequests' || c == 'Terminal' || c == 'BulkPlant') ? \"\" : c) + \"  \";\r\n                }\r\n                Declarations.msgerror('', error, 5000);\r\n            }\r\n        }\r\n    }\r\n\r\n    setBadgeAndNotesToBlendGroup() {\r\n\r\n        let deliveryRequests = <DeliveryRequestViewModel[]>this.DelGroupForm.get('DeliveryRequests').value;\r\n\r\n        if (deliveryRequests.some(dr => dr.IsBlendedRequest)) {\r\n\r\n            let drFormArray = <FormArray>this.DelGroupForm.get('DeliveryRequests');\r\n            //only blended requests\r\n            deliveryRequests = deliveryRequests.filter(dr => dr.IsBlendedRequest);\r\n            //grouped by blend group\r\n            let groupedDrs = groupBy(deliveryRequests, 'BlendedGroupId');\r\n\r\n            drFormArray.controls.forEach(drForm => {\r\n\r\n                if (drForm.get('IsBlendedRequest').value) {\r\n\r\n                    let blendDrGroup = <DeliveryRequestViewModel[]>groupedDrs[drForm.get('BlendedGroupId').value];\r\n                    let lastDr = blendDrGroup[blendDrGroup.length - 1];\r\n\r\n                    if (lastDr) {\r\n\r\n                        drForm.get('Notes').setValue(lastDr.Notes);\r\n                        drForm.get('IsCommonBadge').setValue(lastDr.IsCommonBadge);\r\n                        drForm.get('BadgeNo1').setValue(lastDr.BadgeNo1);\r\n                        drForm.get('BadgeNo2').setValue(lastDr.BadgeNo2);\r\n                        drForm.get('BadgeNo3').setValue(lastDr.BadgeNo3);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    validateDraftLoad() {\r\n        var isValid = true;\r\n        if (this.DelGroupForm.controls['StartTime'].invalid || this.DelGroupForm.controls['EndTime'].invalid || this.DelGroupForm.controls['StartDate'].invalid) {\r\n            isValid = false;\r\n            this.DelGroupForm.controls['StartDate'].touched;\r\n            !this.DelGroupForm.controls['StartDate'].value ? Declarations.msgerror('', 'Invalid Date', 5000) : Declarations.msgerror('', 'Please fill required field', 5000);\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validatePublishLoad() {\r\n        var isValid = true;\r\n        if (this.DelGroupForm.controls['StartTime'].invalid || this.DelGroupForm.controls['EndTime'].invalid || this.DelGroupForm.controls['StartDate'].invalid) {\r\n            isValid = false;\r\n            this.DelGroupForm.controls['StartDate'].touched;\r\n            !this.DelGroupForm.controls['StartDate'].value ? Declarations.msgerror('', 'Invalid Date', 5000) : Declarations.msgerror('', 'Please fill required field', 5000);\r\n        }\r\n        if (this.DelGroupForm.controls.IsCommonPickup.value && !(this.DelGroupForm.controls.Terminal.valid || this.DelGroupForm.controls.BulkPlant.valid)) {\r\n            isValid = false;\r\n            Declarations.msgerror('', 'Please fill required field', 5000);\r\n            this.idCommonPickUpBtn.nativeElement.click();\r\n        }\r\n        if (this.isOptionalPickup) {\r\n            var delControlReqs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            delControlReqs.controls.forEach((x: FormGroup) => {\r\n                let OrderId = x.get('OrderId').value;\r\n                let ProductType = x.get('ProductType').value;\r\n                let terminalInfo = x.get('Terminal').value;\r\n                let bulkplantInfo = x.get('BulkPlant').value;\r\n                let fuelTypeInfo = this.ScheduleOrderFuelInfo.find(x => x.OrderId == OrderId);\r\n                if (terminalInfo.Id == 0 && (bulkplantInfo.Address == null || bulkplantInfo.Address == '')) {\r\n                    if (fuelTypeInfo != null) {\r\n                        var fuelTypeDetails = fuelTypeInfo.FuelTypeDetails;\r\n                        let result = this.ScheduleOptionalPickupDetailModel.filter(o1 => fuelTypeDetails.some(o2 => o1.TfxFuelTypeId === o2.Id));\r\n                        if (result.length == 0) {\r\n                            Declarations.msgerror('Please assign optional pickup/pickup location for product type : ' + ProductType, 'Pickup Location Required', 2500);\r\n                            isValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    cancelDeliveryGroupChanges() {\r\n        //this.DelGroupForm = this.UnchangedTrip;\r\n        let data = { shiftIndex: this._shiftIndex, rowIndex: this._rowIndex, tripIndex: this._tripIndex, trip: this.UnchangedTrip }\r\n        this.dataService.setCancelDeliveryGroupSubject(data);\r\n        this.hideDeliveryGroup();\r\n        this.dataService.setGroupChangeDetectSubject(true);\r\n    }\r\n\r\n    onDeliveryRequestChange(delReq: FormGroup) {\r\n        if (delReq.controls['TripId'] != null && delReq.controls['TripId'] != undefined) {\r\n            this.onDeliveryGroupChange();\r\n        }\r\n        else {\r\n            let prevStatus = delReq.controls['SchedulePreviousStatus'];\r\n            let status = delReq.controls['ScheduleStatus'];\r\n            let trackScheduleStatus = delReq.controls['TrackScheduleStatus'];\r\n            if (trackScheduleStatus.value != 5) {\r\n                if (prevStatus && prevStatus.value != 0 && prevStatus.value != '') {\r\n                    status.patchValue(15);\r\n                }\r\n                else if (status) {\r\n                    status.patchValue(14);\r\n                }\r\n            }\r\n            else {\r\n                if (trackScheduleStatus.value == 5) {\r\n                    delReq.controls['ScheduleStatus'].setValue(5);\r\n                }\r\n            }\r\n        }\r\n        this.updateBadgeNumberDetails();\r\n        this.hideShowCommonBadgeArea();\r\n    }\r\n    updateBadgeNumberDetails() {\r\n        let commonBadgeCount = 0;\r\n        let commonBadgeCheckStatus = true;\r\n        var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (deliveryRequests != null) {\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                if (deliveryRequests.controls[i].get('IsCommonBadge').value == false) {\r\n                    commonBadgeCount = commonBadgeCount + 1;\r\n                    commonBadgeCheckStatus = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!commonBadgeCheckStatus && commonBadgeCount == deliveryRequests.length) {\r\n            this.DelGroupForm.controls['BadgeNo1'].setValue('');\r\n            this.DelGroupForm.controls['BadgeNo2'].setValue('');\r\n            this.DelGroupForm.controls['BadgeNo3'].setValue('');\r\n            //this.DelGroupForm.controls['RouteInfo'].setValue('');\r\n        }\r\n    }\r\n    hideShowCommonBadgeArea() {\r\n        let commonBadgeCheckStatus = false;\r\n        var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (deliveryRequests != null) {\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                if (deliveryRequests.controls[i].get('IsCommonBadge').value == true) {\r\n                    commonBadgeCheckStatus = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.DelGroupForm.controls['IsCommonBadge'].setValue(commonBadgeCheckStatus);\r\n    }\r\n\r\n    onDeliveryGroupChange() {\r\n        var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        for (var i = 0; i < deliveryRequests.length; i++) {\r\n            this.onDeliveryRequestChange(deliveryRequests.controls[i] as FormGroup);\r\n        }\r\n    }\r\n\r\n    private zipcodeConditionallyValidator() {\r\n        this.PickupForm.get('BulkPlant.Country.Code').valueChanges.subscribe((country) => {\r\n            this.PickupForm.get('BulkPlant.ZipCode').clearValidators();\r\n            this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            if (country === 'USA') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').setValidators([Validators.required, Validators.pattern('^[0-9]{5}(?:-[0-9]{4})?$')]);\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                this.CountryBasedZipcodeLabel = \"Zip\";\r\n            }\r\n            else if (country === 'CAN') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').setValidators([Validators.required, Validators.pattern(/^[A-Za-z]\\d[A-Za-z][ ]\\d[A-Za-z]\\d$/)]);\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n            }\r\n            else if (country === 'IND') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').setValidators([Validators.required, Validators.pattern('([ABCEGHJKLMNPRSTVXYabceghjklmnprstvxy][0-9][ABCEGHJKLMNPRSTVWXYZabceghjklmnprstvwxyz]) ?([0-9][ABCEGHJKLMNPRSTVWXYZabceghjklmnprstvwxyz][0-9])')]);\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            }\r\n            else if (country === 'CAR') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').clearValidators();\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            }\r\n        });\r\n    }\r\n\r\n    private subscribeDeleteDRRequestSubject(): void {\r\n        this.DeleteDRRequestSubject = this.dataService.DeleteDRRequestSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deleteSchedule(x);\r\n                Declarations.closeDG();\r\n            }\r\n        });\r\n        this.DGSubscription.add(this.DeleteDRRequestSubject);\r\n    }\r\n\r\n    setTruckLoadType(delReq: FormGroup, order) {\r\n        delReq.controls['TruckLoadType'].setValue(order.TruckLoadType);\r\n        if (order.TruckLoadType != 1) {\r\n            delReq.controls['IsFilldInvoke'].setValue(false);\r\n        }\r\n    }\r\n    public subscribeRouteResetGroupSubject(): void {\r\n        this.RouteResetGroupSubject = this.dataService.RouteResetGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.hideDeliveryGroup();\r\n                this.setDeletePostloadedDrsSubject(this.DelGroupForm.controls['DeliveryRequests'].value);\r\n                let input = {\r\n                    DelGroupForm: this.DelGroupForm,\r\n                    routeName: x\r\n                }\r\n                this.dataService.setRouteDeleteDeliveryGroupSubject(input);\r\n                this.dataService.setDeliveryPreloadOption({ ShiftIndex: this._shiftIndex, ScheduleIndex: this._rowIndex, Reset: true });\r\n            }\r\n        });\r\n    }\r\n    setDRPickupValidators(form: FormGroup, pickupType: number): void {\r\n        if (!this.isOptionalPickup && !form.get('IsAdditive').value) {\r\n            if (pickupType != 2) {\r\n                form.get('BulkPlant.Address').setValidators(null);\r\n                form.get('BulkPlant.Address').updateValueAndValidity();\r\n                form.get('BulkPlant.City').setValidators(null);\r\n                form.get('BulkPlant.City').updateValueAndValidity();\r\n                form.get('BulkPlant.State.Id').setValidators(null);\r\n                form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n                form.get('BulkPlant.Country.Code').setValidators(null);\r\n                form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n                form.get('BulkPlant.ZipCode').setValidators(null);\r\n                form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                form.get('BulkPlant.CountyName').setValidators(null);\r\n                form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n                form.get('BulkPlant.Latitude').setValidators(null);\r\n                form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n                form.get('BulkPlant.Longitude').setValidators(null);\r\n                form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n                form.get('BulkPlant.SiteName').setValidators(null);\r\n                form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n                form.get('Terminal.Name').setValidators([Validators.required]);\r\n                form.get('Terminal.Name').updateValueAndValidity();\r\n                form.get('Terminal.Id').setValidators([Validators.required]);\r\n                form.get('Terminal.Id').updateValueAndValidity();\r\n            } else {\r\n                form.get('Terminal.Name').setValidators(null);\r\n                form.get('Terminal.Name').updateValueAndValidity();\r\n                form.get('Terminal.Id').setValidators(null);\r\n                form.get('Terminal.Id').updateValueAndValidity();\r\n                form.get('BulkPlant.Address').setValidators([Validators.required]);\r\n                form.get('BulkPlant.Address').updateValueAndValidity();\r\n                form.get('BulkPlant.City').setValidators([Validators.required]);\r\n                form.get('BulkPlant.City').updateValueAndValidity();\r\n                form.get('BulkPlant.State.Id').setValidators([Validators.required]);\r\n                form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n                form.get('BulkPlant.Country.Code').setValidators([Validators.required]);\r\n                form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n                form.get('BulkPlant.ZipCode').setValidators([Validators.required]);\r\n                form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                form.get('BulkPlant.CountyName').setValidators([Validators.required]);\r\n                form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n                form.get('BulkPlant.Latitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n                form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n                form.get('BulkPlant.Longitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n                form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n                form.get('BulkPlant.SiteName').setValidators([Validators.required]);\r\n                form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            }\r\n        }\r\n        else {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        }\r\n    }\r\n    validateOptionalPickup() {\r\n        if (this.isOptionalPickup) {\r\n            this.DelGroupForm.controls['Terminal'].setValidators(null);\r\n            this.DelGroupForm.controls['Terminal'].updateValueAndValidity();\r\n            this.DelGroupForm.controls['BulkPlant'].setValidators(null);\r\n            this.DelGroupForm.controls['BulkPlant'].updateValueAndValidity();\r\n            this.changeDetectorRef.markForCheck();\r\n            this.DelGroupForm.markAllAsTouched();\r\n        }\r\n\r\n    }\r\n    //TBD DR - CREATE ON THE FLY LOCATION\r\n    getLocationDetailsSubscriptions: Subscription = new Subscription();\r\n    createOnTheFlyLocation(tdr: FormGroup) {\r\n        var _this = this;\r\n        //OPEN PANEL\r\n        this.dataService.setOpenOnTheFlyLocationFormSubject(tdr.value);\r\n        //UN-SUBSCRIBE IF ALREADY SUBSCRIBED\r\n        this.getLocationDetailsSubscriptions ? this.getLocationDetailsSubscriptions.unsubscribe() : null;\r\n        //GET LOCATION DETAILS\r\n        this.getLocationDetailsSubscriptions = this.dataService.getOnTheFlyLocationDetailsSubject.pipe(first()).subscribe((response: any) => {\r\n            //SET DETAILS\r\n            _this.DelGroupForm.controls['DeliveryRequests']['controls'].forEach((drForm: FormGroup) => {\r\n                if (drForm.controls['Id'].value == tdr.controls['Id'].value) {\r\n                    drForm.get('JobId').setValue(response.ResponseData.JobId);\r\n                    drForm.get('JobName').setValue(response.ResponseData.JobName);\r\n                    drForm.get('OrderId').setValue(response.ResponseData.OrderId);\r\n                    drForm.get('JobAddress').setValue(response.ResponseData.Address);\r\n                    drForm.get('JobCity').setValue(response.ResponseData.City)\r\n                    drForm.get('UoM').setValue(response.ResponseData.UoM);\r\n                    drForm.get('CustomerCompany').setValue(response.ResponseData.CustomerCompanyName);\r\n                    drForm.get('ScheduleStartTime').setValue(response.ResponseData.ScheduleStartTime);\r\n                    drForm.get('ScheduleEndTime').setValue(response.ResponseData.ScheduleEndTime);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    DoNotShowCancelButton(dsValue: DeliveryRequestViewModel) {\r\n        let cancelDRButtonDisplayStatus = false;\r\n        if (this.EnrouteInProgress.indexOf(dsValue.TrackScheduleEnrouteStatus) >= 0 || this.EnrouteInCompleted.indexOf(dsValue.TrackScheduleStatus) >= 0) {\r\n            cancelDRButtonDisplayStatus = true;\r\n        }\r\n        return cancelDRButtonDisplayStatus;\r\n    }\r\n\r\n    onSubDrCreate() {\r\n        if (this.addSubDrModel.IsSpiltDRAdded) {\r\n            var filter = this.addSubDrModel.SpiltDRs.filter(x => !(x.RequiredQuantity > 0)).length;\r\n            if (filter > 0) {\r\n                Declarations.msgerror(\"Quantity required for Sub DR(s).\", undefined, undefined); return;\r\n            }\r\n        }\r\n        var dismiss = document.getElementById('closeSubDrPanel') as HTMLElement;\r\n        dismiss.click();\r\n        this.dataService.setScheduleLoaderSubject(true);\r\n        this.carrierService.addSubDrs(this.addSubDrModel)\r\n            .subscribe((data: any) => {\r\n                this.dataService.setScheduleLoaderSubject(false);\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.onRaiseSubDR.emit();\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                    this.onRaiseSubDR.emit();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    public AddSubDR(tdr: FormGroup) {\r\n        this.addSubDrModel = tdr.value as DeliveryRequestViewModel;\r\n        this.addSubDrModel.IsSpiltDRAdded = false;\r\n        this.addSubDrModel.SpiltDRs = [];\r\n        this.addEmptySubDR();\r\n    }\r\n\r\n    addEmptySubDR() {\r\n        if (this.addSubDrModel != null) {\r\n            this.addSubDrModel.IsSpiltDRAdded = true;\r\n            let spiltDRModel = new SpiltDRsModel();\r\n            spiltDRModel.ScheduleQuantityType = 1;\r\n            this.addSubDrModel.SpiltDRs.push(spiltDRModel);\r\n        }\r\n    }\r\n\r\n    removeItem(j: number) {\r\n        this.addSubDrModel.SpiltDRs.splice(j, 1);\r\n    }\r\n\r\n    CheckSubDrStatus(dsValue: DeliveryRequestViewModel) {\r\n\r\n        if (this.SubDrsStatusWithParentIds.length > 0 && dsValue.GroupParentDRId) {\r\n            let DRs = this.SubDrsStatusWithParentIds.filter(x => x.GroupParentDRId == dsValue.GroupParentDRId);\r\n            if (DRs.length > 0) {\r\n                let NonCancelledSchedules = this.sbService.returnSubDrStatusOtherthaCancel(this.SubDrOtherThanCancellStatus, DRs);\r\n                if (NonCancelledSchedules <= 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public CancelDS(tdr: FormGroup) {\r\n        this.CancelDSViewModel = tdr.value as DeliveryRequestViewModel;\r\n        if (this.CancelDSViewModel.GroupParentDRId != '' && this.CancelDSViewModel.GroupParentDRId != null) {\r\n            this.cancelDSDeliveryScheduleViewModel = [];\r\n            this.dataService.setScheduleLoaderSubject(true);\r\n            this.hideDeliveryGroup();\r\n            //intialize the model.\r\n            let cancelDSDeliveryScheduleInfo = new CancelDSDeliveryScheduleInfo();\r\n            cancelDSDeliveryScheduleInfo.RegionId = this.SelectedRegionId;\r\n            cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules = [];\r\n\r\n            //normal DR\r\n            let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n            cancelDSDeliverySchedule.DeliveryReqId = this.CancelDSViewModel.Id;\r\n            cancelDSDeliverySchedule.IsSubDR = false;\r\n            cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n            //sub DR\r\n            let cancelsubDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n            cancelsubDSDeliverySchedule.DeliveryReqId = this.CancelDSViewModel.GroupParentDRId;\r\n            cancelsubDSDeliverySchedule.IsSubDR = true;\r\n            cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelsubDSDeliverySchedule);\r\n            this.sbService.GetSubDRInfoCancelDS(cancelDSDeliveryScheduleInfo).subscribe(response => {\r\n                this.dataService.setScheduleLoaderSubject(false);\r\n                if (response != null && response.length > 0) {\r\n                    $(\"#btn-group-cancel-ds-info\").click();\r\n                    this.cancelDSDeliveryScheduleViewModel = response as CancelDSDeliveryScheduleViewModel[];\r\n                }\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setGroupChangeDetectSubject(true);\r\n        }\r\n        else {\r\n            $(\"#btn-group-cancel-ds\").click();\r\n        }\r\n    }\r\n    public RejectDSGroupDriverSchedule() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.Schedule != null && this.CancelDSViewModel != null) {\r\n            let delRequestCancelModel = new CancelDeliverySchedule();\r\n            delRequestCancelModel.ScheduleBuilderId = this.ScheduleBuilderId;\r\n            delRequestCancelModel.DeliveryReqId = this.CancelDSViewModel.Id;\r\n            delRequestCancelModel.DriverColIndex = this.DelGroupForm.value.DriverColIndex;\r\n            if (this.Schedule.value != null && this.Schedule.value.Drivers.length > 0) {\r\n                delRequestCancelModel.DriverId = this.Schedule.value.Drivers[0].Id;\r\n            }\r\n            delRequestCancelModel.DriverRowIndex = this.DelGroupForm.value.DriverRowIndex;\r\n            delRequestCancelModel.ShiftId = this.DelGroupForm.value.ShiftId;\r\n            delRequestCancelModel.ShiftIndex = this.DelGroupForm.value.ShiftIndex;\r\n            delRequestCancelModel.TrackableScheduleId = this.CancelDSViewModel.TrackableScheduleId;\r\n            this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            //post load DS\r\n            if (this.CancelDSViewModel.PostLoadInfo != null) {\r\n                let postLoaddelRequestCancelModel = new CancelDeliverySchedule();\r\n                postLoaddelRequestCancelModel.ScheduleBuilderId = this.ScheduleBuilderId;\r\n                postLoaddelRequestCancelModel.DeliveryReqId = this.CancelDSViewModel.PostLoadInfo.DrId;\r\n                postLoaddelRequestCancelModel.DriverColIndex = this.CancelDSViewModel.PostLoadInfo.TripIndex;\r\n                postLoaddelRequestCancelModel.DriverId = 0;\r\n                postLoaddelRequestCancelModel.DriverRowIndex = this.CancelDSViewModel.PostLoadInfo.ScheduleIndex;\r\n                postLoaddelRequestCancelModel.ShiftId = this.CancelDSViewModel.PostLoadInfo.ShiftId;\r\n                postLoaddelRequestCancelModel.ShiftIndex = this.CancelDSViewModel.PostLoadInfo.ShiftIndex;\r\n                postLoaddelRequestCancelModel.TrackableScheduleId = -1;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(postLoaddelRequestCancelModel);\r\n            }\r\n\r\n            //blended DR\r\n            if (this.CancelDSViewModel.IsBlendedRequest) {\r\n                let tripDrs = this.filterAndGetDrsByBlendGroupId(<DeliveryRequestViewModel[]>this.DelGroupForm.get('DeliveryRequests').value, this.CancelDSViewModel.BlendedGroupId);\r\n                tripDrs.forEach(dr => {\r\n                    if (dr.Id != this.CancelDSViewModel.Id) {//this dr already added\r\n                        let delRequestCancelModel = new CancelDeliverySchedule();\r\n                        delRequestCancelModel.ScheduleBuilderId = this.ScheduleBuilderId;\r\n                        delRequestCancelModel.DeliveryReqId = dr.Id;\r\n                        delRequestCancelModel.DriverColIndex = this.DelGroupForm.value.DriverColIndex;\r\n                        if (this.Schedule.value != null && this.Schedule.value.Drivers.length > 0) {\r\n                            delRequestCancelModel.DriverId = this.Schedule.value.Drivers[0].Id;\r\n                        }\r\n                        delRequestCancelModel.DriverRowIndex = this.DelGroupForm.value.DriverRowIndex;\r\n                        delRequestCancelModel.ShiftId = this.DelGroupForm.value.ShiftId;\r\n                        delRequestCancelModel.ShiftIndex = this.DelGroupForm.value.ShiftIndex;\r\n                        delRequestCancelModel.TrackableScheduleId = dr.TrackableScheduleId;\r\n                        this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.dataService.setScheduleLoaderSubject(true);\r\n            this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    this.dataService.setCancelDSGroupNormalSubDSSubject(response);\r\n                    this.dataService.setScheduleLoaderSubject(false);\r\n                    this.hideDeliveryGroup();\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                    Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                }\r\n                else {\r\n                    this.dataService.setScheduleLoaderSubject(false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public CancelDSGroupDriverSchedule() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        this.CancelDSViewModel = null;\r\n    }\r\n    public CancelSelectedDS() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true).length > 0) {\r\n            let cancelDSfinalInfo = this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true);\r\n            cancelDSfinalInfo.forEach(x => {\r\n                let delRequestCancelModel = new CancelDeliverySchedule();\r\n                delRequestCancelModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n                delRequestCancelModel.DeliveryReqId = x.DeliveryReqId;\r\n                delRequestCancelModel.DriverColIndex = x.DriverColIndex;\r\n                delRequestCancelModel.DriverId = x.DriverId;\r\n                delRequestCancelModel.DriverRowIndex = x.DriverRowIndex;\r\n                delRequestCancelModel.ShiftId = x.ShiftId;\r\n                delRequestCancelModel.ShiftIndex = x.ShiftIndex;\r\n                delRequestCancelModel.TrackableScheduleId = x.TrackableScheduleId;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            });\r\n            if (this.DeliveryReqCancelScheduleUpdateModel.length > 0) {\r\n                $(\"#confirm-group-cancel-ds-dismiss\").click();\r\n                this.dataService.setScheduleLoaderSubject(true);\r\n                this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.dataService.setCancelDSGroupNormalSubDSSubject(response);\r\n                        this.dataService.setScheduleLoaderSubject(false);\r\n                        this.hideDeliveryGroup();\r\n                        this.changeDetectorRef.markForCheck();\r\n                        this.dataService.setGroupChangeDetectSubject(true);\r\n                        Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                    }\r\n                    else {\r\n                        this.dataService.setScheduleLoaderSubject(false);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Select at least one DS for cancel schedule.\", 'Success', 2500);\r\n        }\r\n    }\r\n    public checkAll() {\r\n        if ($(\"#selectAllDSBGroupCancel\").is(\":checked\")) {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = true;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = false;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    public checkDSChange(ele: number, ds: CancelDSDeliveryScheduleViewModel) {\r\n        var eleId = \"dsCheck\" + ele;\r\n        var eleIdDom = $(\"#\" + eleId).is(\":checked\");\r\n        if (eleIdDom) {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = true;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = false;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    public deletePickupInfo(terminalInfo: any) {\r\n        if (terminalInfo.get('Id').value) {\r\n            terminalInfo.get('Id').patchValue(0);\r\n            terminalInfo.get('Name').patchValue('');\r\n        }\r\n    }\r\n\r\n\r\n    OnCountryChanged(eventData: any) {\r\n        let selectedCountryCode = eventData.target.value;\r\n        let selectedCountryId = this.getCountryIdFromCode(selectedCountryCode);\r\n        this.setBulkPlantAddressValidators(selectedCountryId);\r\n    }\r\n\r\n    getCountryIdFromCode(countryCode: any): number {\r\n        let selectedCountryId = 1;\r\n        if (countryCode == \"CAN\" || countryCode == \"CA\") {\r\n            selectedCountryId = 2;\r\n        }\r\n        else if (countryCode == \"CAR\") {\r\n            selectedCountryId = 4;\r\n        }\r\n        return selectedCountryId;\r\n    }\r\n\r\n    setBulkPlantAddressValidators(countryId: number) {\r\n        let isCarribean = countryId == 4 ? true : false;\r\n        let delGroupform = this.DelGroupForm;\r\n        let pickUpForm = this.PickupForm;\r\n        //del group\r\n        delGroupform.get('BulkPlant.Address').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.Address').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.City').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.City').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.ZipCode').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.CountyName').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.Latitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        delGroupform.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.Longitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        delGroupform.get('BulkPlant.Longitude').updateValueAndValidity();\r\n\r\n        //pick up form \r\n        pickUpForm.get('BulkPlant.Address').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.Address').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.City').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.City').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.ZipCode').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.CountyName').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.Latitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        pickUpForm.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.Longitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        pickUpForm.get('BulkPlant.Longitude').updateValueAndValidity();\r\n    }\r\n\r\n    //BLENDED REQUEST\r\n    public blendRequestForm: FormGroup = this.fb.group({ BlendedRequests: this.fb.array([]) });\r\n    public additiveOrders: AdditiveOrderViewModel[] = [];\r\n    public CompatibleProductTypeList: CompatibleProductModel[] = [];\r\n    public DrForEditBlendedRequestIndex: number = 0;\r\n    public BlendDrIndex: number = 0;\r\n    public IsPickupForBlendRequest: boolean = false;\r\n    public totalBlendedQuantity: number = 0;\r\n    public tankMaxFill: number = 0;\r\n    public getOrderSubject: Subject<any> = new Subject<any>();\r\n    public deletedBlend_temp: DeliveryRequestViewModel[] = [];\r\n    public deletedBlend_all: DeliveryRequestViewModel[] = [];\r\n\r\n    editBlendedSchedule(index: number, trip: FormGroup) {\r\n\r\n        this.deletedBlend_temp = [];\r\n        this._currentTrip = trip;\r\n        this.DeletedDrIndex = index;\r\n        this.DrForEditBlendedRequestIndex = index;\r\n\r\n        let tripDrs = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n\r\n        this.selectedDeliveryRequest = tripDrs[this.DeletedDrIndex];\r\n        this.selectedDeliveryRequest.WindowMode = 1;\r\n        this.selectedDeliveryRequest.QueueMode = 1;\r\n\r\n        let blendRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        blendRequests.clear();\r\n\r\n        let blendeDdrGroup = this.filterAndGetDrsByBlendGroupId(tripDrs, this.selectedDeliveryRequest.BlendedGroupId);\r\n        this.totalBlendedQuantity = <number>blendeDdrGroup.find(dr => dr.IsBlendedDrParent).TotalBlendedQuantity;\r\n        let additives = blendeDdrGroup.filter(dr => dr.IsAdditive);\r\n        if (additives && additives.length > 0) {\r\n            this.totalBlendedQuantity = this.totalBlendedQuantity - additives.reduce((a, b) => +a + +b.RequiredQuantity, 0);\r\n        }\r\n\r\n        blendeDdrGroup.forEach(dr => {\r\n            dr.QuantityInPercent = ((+dr.RequiredQuantity / +this.totalBlendedQuantity) * 100);\r\n            blendRequests.push(this.utilService.getBlendRequestFormGroup(dr));\r\n        })\r\n\r\n        //max fill validation\r\n        let request = blendeDdrGroup[0];\r\n        if (request.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && !request.IsMaxFillAllowed) {\r\n            this.tankMaxFill = request.TankMaxFill;\r\n        } else {\r\n            this.tankMaxFill = 0;\r\n        }\r\n        document.getElementById('_openBlendModalButton').click();\r\n    }\r\n\r\n    getOrdersByDr(dr: DeliveryRequestViewModel): any[] {\r\n\r\n        let response: any[] = [];\r\n\r\n        let _jobId = dr.JobId || '';\r\n        let _productTypeId;\r\n        if (dr.BlendParentProductTypeId > 0)\r\n            _productTypeId = dr.BlendParentProductTypeId;\r\n        else\r\n            _productTypeId = dr.ProductTypeId || '';\r\n        let _carrierStatus = dr.CarrierStatus || '';\r\n\r\n        let existing = [];\r\n\r\n        if (_productTypeId) {\r\n            existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (dr.IsBlendedRequest ? 1 : 0)];\r\n        }\r\n        else {\r\n            existing = this.OrderList[_jobId.toString()];\r\n        }\r\n\r\n        if (existing == undefined || existing == null || existing.length == 0) {\r\n            this.getOrderSubject.next({ _jobId: _jobId.toString(), _productTypeId: _productTypeId.toString(), _carrierStatus: _carrierStatus.toString(), _isBlend: dr.IsBlendedRequest });\r\n        }\r\n        else if (existing.length > 0) {\r\n            response = existing;\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    subscribeGetOrderSubject() {\r\n        this.getOrderSubject.pipe(debounceTime(1000), distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b))).subscribe((x: any) => {\r\n            this.sbService.getOrders(x._jobId, x._productTypeId ? x._productTypeId.toString() : null, null, x._carrierStatus, x._isBlend).subscribe(data => {\r\n                this.OrderList[x._jobId.toString() + '_' + x._productTypeId.toString() + '_' + (x._isBlend ? 1 : 0)] = data;\r\n                //location all orders\r\n                this.OrderList[x._jobId.toString()] = data;\r\n            });\r\n        })\r\n    }\r\n\r\n    getUnUsedOrdersForBlendedRequest(blendedRequest: FormGroup) {\r\n\r\n        let currentOrder = blendedRequest.get('OrderId').value;\r\n        let orderList: any[] = this.getOrdersByDr(blendedRequest.value);\r\n\r\n        if (orderList && orderList.length > 0) {\r\n            let ordersToRemove = this.blendRequestForm.get('BlendedRequests').value as DeliveryRequestViewModel[];//orders selected in blend form\r\n            ordersToRemove = ordersToRemove.filter(obj => obj.OrderId != currentOrder);\r\n            let productToRemove = orderList.filter(s => ordersToRemove.find(s2 => s2.OrderId == s.OrderId));\r\n            return orderList.filter((x => currentOrder == x.OrderId || !productToRemove.some(y => y.FuelTypeId == x.FuelTypeId)));\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    getUnUsedBlendOrders(currentOrder: number) {\r\n\r\n        let blendRequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];//orders selected in blend form\r\n        blendRequests = blendRequests.filter(b => b.IsAdditive && b.OrderId && b.OrderId != currentOrder);\r\n        let ordersToRemove = blendRequests.map(b => b.OrderId);\r\n\r\n        return this.additiveOrders.filter((x => currentOrder == x.Id || !ordersToRemove.some(orderId => orderId == x.Id)));\r\n    };\r\n\r\n    orderChangedForBlendRequest(_orderId: string, blendedRequest: FormGroup): void {\r\n\r\n        blendedRequest.get('ProductTypeId').setValue(null);\r\n        let orders = this.getOrdersByDr(blendedRequest.value);\r\n        if (orders.length > 0) {\r\n            let selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (selectedOrder) {\r\n                let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n                this.setPickupLocationForBlendRequest(blendedRequest, location);\r\n\r\n                if (selectedOrder.ProductTypeId) {\r\n                    blendedRequest.get('ProductTypeId').setValue(selectedOrder.ProductTypeId);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompatibleProducts() {\r\n        if (this.CompatibleProductTypeList.length == 0) {\r\n            this.carrierService.getCompatibleProductTypes().subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.CompatibleProductTypeList = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAdditiveOrders() {\r\n        if (this.additiveOrders.length == 0) {\r\n            this.carrierService.getAdditiveOrders(this.SelectedRegionId).subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.additiveOrders = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setPickupLocationForBlendRequest(delReq: FormGroup, order: OrderPickupLocationModel): void {\r\n        delReq.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                delReq.controls['Terminal'].patchValue(order.Terminal);\r\n            }\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                delReq.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n            }\r\n        }\r\n    }\r\n\r\n    RemoveBlendPickupLocation(tdr: FormGroup): void {\r\n\r\n        if (tdr) {\r\n            this.ChangePickupForOrders = [];\r\n            this.SelectedDRForEditPickup = tdr;\r\n            let _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n\r\n            let terminal = this.utilService.getTerminalForm(new DropdownItem(), false);\r\n            let bulkPlant = this.utilService.getBulkPlantForm(new DropAddressModel(), false);\r\n            let _terminal = terminal.value;\r\n            let _bulkPlant = bulkPlant.value;\r\n            let location = {\r\n                PickupLocationType: _pickupType,\r\n                Terminal: _terminal,\r\n                BulkPlant: _bulkPlant\r\n            };\r\n            this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n        }\r\n    }\r\n\r\n    getRequiredDataForPickupDetails() {\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => this.StateList = x);\r\n        }\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n        if (!this.CountryGroupList || this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n    }\r\n\r\n    editPickupLocationForBlend(blendDrIndex: number): void {\r\n\r\n        this.BlendDrIndex = blendDrIndex;\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n\r\n        this.getRequiredDataForPickupDetails();\r\n\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = blendDr;\r\n\r\n\r\n        let _orderId = blendDr.controls['OrderId'].value as number;\r\n        if (_orderId > 0) {\r\n            this.ChangePickupForOrders.push(_orderId);\r\n            let existingOrders = this.OrderList[blendDr.value.JobId.toString() + '_' + blendDr.value.ProductTypeId.toString() + '_' + (blendDr.value.IsBlendedRequest ? 1 : 0)];\r\n            let orders = existingOrders.filter(t => t.OrderId == _orderId);\r\n            if (orders.length > 0) {\r\n                let lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n            }\r\n        }\r\n\r\n\r\n        let _pickupType = blendDr.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = blendDr.controls['Terminal'].value;\r\n        let _bulkPlant = blendDr.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n\r\n        this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n\r\n        //to get bulk plant for auto/manual order\r\n        this.addresService.getBulkPlants('', _orderId > 0 ? _orderId : 0).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n        this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n            this.Terminals = data;\r\n        }));\r\n\r\n\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePickupLocationForBlend() {\r\n\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n\r\n        if (this.SelectedDRForEditPickup != null && blendDr != null) {\r\n            this.setPickupLocation(blendDr, this.PickupForm.value);\r\n        }\r\n\r\n        this.IsPickupForBlendRequest = false;\r\n        let dismiss = document.getElementById('btnPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n\r\n    addRemoveBlendedProduct(addNewRow: boolean, index: number, isAdditive: boolean = false) {\r\n\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n        if (addNewRow) {\r\n            //set details to new dr from parent dr\r\n            let additiveCount = this.getAdditiveCountBlend();\r\n\r\n            let _model = new BlendedRequest(isAdditive);\r\n            _model.UoM = this.selectedDeliveryRequest.UoM;\r\n            _model.BlendedGroupId = this.selectedDeliveryRequest.BlendedGroupId;\r\n            _model.JobId = this.selectedDeliveryRequest.JobId;\r\n            _model.ProductTypeId = null;\r\n            _model.IsBlendedRequest = true;\r\n            _model.OrderId = null;\r\n            _model.BlendParentProductTypeId = this.selectedDeliveryRequest.BlendParentProductTypeId;\r\n            if (!isAdditive && additiveCount > 0) {\r\n                _blendedRequests.insert(+_blendedRequests.controls.length - additiveCount, this.utilService.getBlendRequestFormGroup(_model));\r\n            } else {\r\n                _blendedRequests.push(this.utilService.getBlendRequestFormGroup(_model));\r\n            }\r\n        }\r\n        else {\r\n            let dr = <DeliveryRequestViewModel>_blendedRequests.at(index).value;\r\n            //add to array if its existing dr\r\n            if (dr.Id) {\r\n                dr.Compartments = []; dr.IsDeleted = true;\r\n                this.deletedBlend_temp.push(dr);\r\n                this.deletedBlend_all.push(dr);\r\n            }\r\n            _blendedRequests.removeAt(index);\r\n        }\r\n    }\r\n\r\n    blendDrQuantityChanged(enteredQuantity: number, blendIndex: number) {\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('QuantityInPercent').setValue((+enteredQuantity / this.totalBlendedQuantity) * 100);\r\n    }\r\n\r\n    onBlendTotalQuantityChange(totalQuantity: number) {\r\n\r\n        if (totalQuantity) {\r\n\r\n            let blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n            blendedRequests.controls.forEach((b: FormGroup) => {\r\n                if (!b.get('IsAdditive').value && +b.get('QuantityInPercent').value > 0) {\r\n                    b.get('RequiredQuantity').setValue((+b.get('QuantityInPercent').value / 100) * totalQuantity);\r\n                    this.onDeliveryRequestChange(b);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.clearQuantityAndPercentage();\r\n        }\r\n    }\r\n\r\n    addRemoveAdditiveProduct(isAddNew: boolean) {\r\n\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n        if (isAddNew) {\r\n            _blendedRequests.push(this.utilService.getBlendRequestFormGroup(new BlendedRequest(true)));\r\n        }\r\n        else {\r\n            _blendedRequests.removeAt(_blendedRequests.value.findIndex(r => r.IsAdditive));\r\n        }\r\n    }\r\n\r\n\r\n    getAdditiveCountBlend() {\r\n        let _blendedRequests = <DeliveryRequestViewModel[]>this.blendRequestForm.get('BlendedRequests').value;\r\n        return _blendedRequests.filter(b => b.IsAdditive).length;\r\n    }\r\n\r\n    blendDrPercentChanged(percent: number, blendIndex: number) {\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('RequiredQuantity').setValue((+percent / 100) * this.totalBlendedQuantity);\r\n        this.onDeliveryRequestChange(blendedRequest);\r\n    }\r\n\r\n    isBlendedRequestQuantityValid() {\r\n\r\n        if (this.blendRequestForm.valid) {\r\n\r\n            let totalQuantity = 0;\r\n            let _blendedRequests: BlendedRequest[] = this.blendRequestForm.get('BlendedRequests').value;\r\n            _blendedRequests.forEach((b: BlendedRequest, index: number) => {\r\n                if (!b.IsAdditive) {\r\n                    totalQuantity = +totalQuantity + +b.RequiredQuantity;\r\n                }\r\n            });\r\n\r\n            return (totalQuantity == this.totalBlendedQuantity) || (Math.abs(this.totalBlendedQuantity - totalQuantity) < 1);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTankMaxFillValid(): boolean {\r\n        if (this.tankMaxFill > 0 && this.totalBlendedQuantity > this.tankMaxFill)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n    clearQuantityAndPercentage(blendIndex?: number) {\r\n        if (blendIndex == null) {\r\n            blendIndex = -1;\r\n        }\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        _blendedRequests.controls.forEach((b: FormGroup, index: number) => {\r\n            if (index > blendIndex && !b.get('IsAdditive').value) {\r\n                b.get('RequiredQuantity').setValue(null);\r\n                b.get('QuantityInPercent').setValue(null);\r\n            }\r\n        })\r\n    }\r\n\r\n    submitBlendedForm() {\r\n\r\n        if (this.blendRequestForm.valid) {\r\n\r\n            ////////////VALIDATE///////////\r\n            let scheduleIds = this.getSchedulesFromDr(this.deletedBlend_temp);\r\n\r\n            if (scheduleIds && scheduleIds.length > 0) {\r\n\r\n                let scheduleUpdatwAllowded = true;\r\n                this.dataService.setScheduleLoaderSubject(true);\r\n                this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                    this.dataService.setScheduleLoaderSubject(false);\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        let data = response[0];\r\n                        if (this.CompletedScheduleStatuses.indexOf(data.ScheduleStatusId) !== -1 || data.ScheduleEnrouteStatusId == 4) {\r\n                            Declarations.msgerror(\"Can't update as drop has been made already\", 'Warning', 2500);\r\n                            scheduleUpdatwAllowded = false;\r\n                        }\r\n                    }\r\n                    if (scheduleUpdatwAllowded) {\r\n                        this.updateDeliveryGroupBlendByPopup();\r\n                    }\r\n                });\r\n            }\r\n            ////////////NO DELETE///////////\r\n            else {\r\n                this.updateDeliveryGroupBlendByPopup();\r\n            }\r\n        }\r\n    }\r\n\r\n    updateDeliveryGroupBlendByPopup() {\r\n        let blendedrequests = this.blendRequestForm.get('BlendedRequests').value as DeliveryRequestViewModel[];\r\n\r\n        // 1.DELETE 2.ADD 3.UPDATE\r\n        if (this.deletedBlend_temp.length > 0 && blendedrequests.some(dr => !dr.Id)) {\r\n            //remove dr from ui //removed dr get deleted from api\r\n            //create new dr api\r\n            //create new dr ui (load or dr group)\r\n            //update existing drs\r\n            this.createBlendRequests(blendedrequests.filter(dr => !dr.Id), TaskId.Add_Delete_Update);\r\n\r\n        }\r\n        // 1.ADD 2.UPDATE\r\n        else if (this.deletedBlend_temp.length == 0 && blendedrequests.some(dr => !dr.Id)) {\r\n            //create new dr api\r\n            //create new dr ui (load or dr group)\r\n            //update existing drs\r\n            this.createBlendRequests(blendedrequests.filter(dr => !dr.Id), TaskId.Add_Update);\r\n\r\n        }\r\n        // 1.DELETE 2.UPDATE\r\n        else if (this.deletedBlend_temp.length > 0 && blendedrequests.every(dr => dr.Id)) {\r\n            //remove dr from ui //removed dr get deleted from api\r\n            //update existing drs\r\n            this.deleteBlendedDeliveryRequestFromLoad();\r\n            this.updateBlendRequests();\r\n            this.setParentDrAndItsQuantity();\r\n        }\r\n        // 1.UPDATE\r\n        else if (this.deletedBlend_temp.length == 0 && blendedrequests.every(dr => dr.Id)) {\r\n            this.updateBlendRequests();\r\n            this.setParentDrAndItsQuantity();\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Failed to update.\", 'Error', 2500);\r\n        }\r\n    }\r\n\r\n    createBlendRequests(deliveryRequests: DeliveryRequestViewModel[], taskId: TaskId) {\r\n\r\n        this.dataService.setScheduleLoaderSubject(true);\r\n\r\n        this.selectedDeliveryRequest['BlendedRequests'] = deliveryRequests;\r\n\r\n        this.carrierService.postRaiseRequests({ DeliveryRequests: [this.selectedDeliveryRequest] }).subscribe((data: any) => {\r\n\r\n            this.selectedDeliveryRequest['BlendedRequests'] = [];\r\n\r\n            this.dataService.setScheduleLoaderSubject(false);\r\n\r\n            if (data != null && parseInt(data.StatusCode) == 0 && data.DeliveryRequests.length > 0) {\r\n                this.pushNewBlendRequestsToLoad(<any[]>data.DeliveryRequests);\r\n\r\n                if (taskId == TaskId.Add_Delete_Update) {\r\n                    this.deleteBlendedDeliveryRequestFromLoad();\r\n                }\r\n\r\n                this.updateBlendRequests();\r\n                this.setParentDrAndItsQuantity();\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        })\r\n    }\r\n\r\n    pushNewBlendRequestsToLoad(newBlendRequests: any[]) {\r\n\r\n        let loadDrFormArray = <FormArray>this.DelGroupForm.get('DeliveryRequests');\r\n        newBlendRequests.sort((a, b) => Number(!a.IsAdditive) - Number(!b.IsAdditive));\r\n\r\n        let blendGroupEndIndex = null;\r\n\r\n        loadDrFormArray.controls.forEach((dr: FormGroup, index: number) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n                if (!dr.get('IsAdditive').value) {\r\n                    blendGroupEndIndex = index;\r\n                }\r\n            }\r\n        });\r\n\r\n        blendGroupEndIndex == null ? blendGroupEndIndex = loadDrFormArray.length : blendGroupEndIndex = blendGroupEndIndex;\r\n\r\n        newBlendRequests.forEach(newRequest => {\r\n            loadDrFormArray.insert((+blendGroupEndIndex + 1), this.utilService.getDeliveryRequestForm(newRequest, this.DelGroupForm.controls['IsCommonPickup'].value))\r\n        });\r\n\r\n    }\r\n\r\n    setParentDrAndItsQuantity() {\r\n\r\n        let loadDrFormArray = <FormArray>this.DelGroupForm.get('DeliveryRequests')\r\n        let _blendLoadDrs = loadDrFormArray.value.filter(l => l.BlendedGroupId && l.BlendedGroupId == this.selectedDeliveryRequest.BlendedGroupId);\r\n\r\n        loadDrFormArray.controls.forEach((dr: FormGroup, index: number) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n                if (!dr.get('IsAdditive').value && index == 0) {\r\n                    dr.get('IsBlendedDrParent').setValue(true);\r\n                    dr.get('TotalBlendedQuantity').setValue(_blendLoadDrs.reduce(function (sum, current) { return sum + current.RequiredQuantity; }, 0));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getSchedulesFromDr(drs: DeliveryRequestViewModel[]): number[] {\r\n        let scheduleIds: number[] = [];\r\n        drs.forEach(dr => {\r\n            if (dr.TrackableScheduleId != null && dr.TrackableScheduleId > 0) {\r\n                scheduleIds.push(dr.TrackableScheduleId);\r\n            }\r\n        });\r\n        return scheduleIds;\r\n    }\r\n\r\n    updateBlendRequests() {\r\n\r\n        let blendedrequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];\r\n\r\n        this._currentTrip.get('DeliveryRequests')['controls'].forEach((dr: FormGroup) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n\r\n                let _blend = blendedrequests.find(bl => bl.Id == dr.get('Id').value);\r\n\r\n                if (_blend) {\r\n                    dr.get('OrderId').setValue(_blend.OrderId);\r\n                    dr.get('SchedulePreviousStatus').setValue(_blend.SchedulePreviousStatus);\r\n                    dr.get('ScheduleStatus').setValue(_blend.ScheduleStatus);\r\n                    dr.get('TrackScheduleStatus').setValue(_blend.TrackScheduleStatus);\r\n                    dr.get('ProductType').setValue(_blend.ProductType);\r\n                    dr.get('ProductTypeId').setValue(_blend.ProductTypeId);\r\n                    dr.get('RequiredQuantity').setValue(_blend.RequiredQuantity);\r\n                    dr.get('PickupLocationType').setValue(_blend.PickupLocationType);\r\n                    dr.get('Terminal').patchValue({ Id: _blend.Terminal.Id, Name: _blend.Terminal.Name });\r\n                    dr.get('BulkPlant').patchValue({\r\n                        SiteName: _blend.BulkPlant.SiteName, Address: _blend.BulkPlant.Address, City: _blend.BulkPlant.City, State: _blend.BulkPlant.State, Country: { Code: _blend.BulkPlant.Country.Code, Id: _blend.BulkPlant.Country.Id, Name: _blend.BulkPlant.Country.Name }, ZipCode: _blend.BulkPlant.ZipCode, CountyName: _blend.BulkPlant.CountyName, Latitude: _blend.BulkPlant.Latitude, Longitude: _blend.BulkPlant.Longitude\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    pushBlendedRequestsToLoad() {\r\n\r\n        let blendedrequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];\r\n\r\n        this._currentTrip.get('DeliveryRequests')['controls'].forEach((dr: FormGroup) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n\r\n                let _blend = blendedrequests.find(bl => bl.Id == dr.get('Id').value);\r\n\r\n                if (_blend) {\r\n                    dr.get('OrderId').setValue(_blend.OrderId);\r\n                    dr.get('SchedulePreviousStatus').setValue(_blend.SchedulePreviousStatus);\r\n                    dr.get('ScheduleStatus').setValue(_blend.ScheduleStatus);\r\n                    dr.get('TrackScheduleStatus').setValue(_blend.TrackScheduleStatus);\r\n                    dr.get('ProductType').setValue(_blend.ProductType);\r\n                    dr.get('ProductTypeId').setValue(_blend.ProductTypeId);\r\n                    dr.get('RequiredQuantity').setValue(_blend.RequiredQuantity);\r\n                    dr.get('PickupLocationType').setValue(_blend.PickupLocationType);\r\n                    dr.get('Terminal').patchValue({ Id: _blend.Terminal.Id, Name: _blend.Terminal.Name });\r\n                    dr.get('BulkPlant').patchValue({\r\n                        SiteName: _blend.BulkPlant.SiteName, Address: _blend.BulkPlant.Address, City: _blend.BulkPlant.City, State: _blend.BulkPlant.State, Country: { Code: _blend.BulkPlant.Country.Code, Id: _blend.BulkPlant.Country.Id, Name: _blend.BulkPlant.Country.Name }, ZipCode: _blend.BulkPlant.ZipCode, CountyName: _blend.BulkPlant.CountyName, Latitude: _blend.BulkPlant.Latitude, Longitude: _blend.BulkPlant.Longitude\r\n                    });\r\n                }\r\n                if (dr.get('IsBlendedDrParent').value) {\r\n                    dr.get('TotalBlendedQuantity').setValue(blendedrequests.reduce(function (sum, current) { return sum + current.RequiredQuantity; }, 0));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteRequests(drs: DeliveryRequestViewModel[]) {\r\n\r\n        this.carrierService.updateDeliveryRequest(drs).subscribe((data: any) => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    public deleteBlendedDeliveryRequestFromLoad() {\r\n\r\n        this.setDeletePostloadedDrsSubject(this.deletedBlend_temp);\r\n\r\n        let allDrs = this.DelGroupForm.get('DeliveryRequests') as FormArray;\r\n        let length = allDrs.length;\r\n\r\n        while (length > 0) {\r\n\r\n            let index = allDrs.value.findIndex(dr => this.deletedBlend_temp.some(dr1 => dr1.Id == dr.Id));\r\n\r\n            if (index != -1) {\r\n                allDrs.removeAt(index);\r\n            }\r\n            length--;\r\n        }\r\n\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n\r\n    setBlendClass(dr: DeliveryRequestViewModel, index: number): string {\r\n\r\n        if (dr && dr.IsBlendedRequest) {\r\n            if (dr.IsBlendedDrParent)\r\n                return \"blend-first\"\r\n            else if (!dr.IsBlendedDrParent && <number>this.DelGroupForm.get('DeliveryRequests')['controls'].length == (index + 1))\r\n                return \"blend-last\"\r\n            else if (!dr.IsBlendedDrParent && <number>this.DelGroupForm.get('DeliveryRequests')['controls'].length > (index + 1) && dr.BlendedGroupId != this.DelGroupForm.controls['DeliveryRequests']['controls'][(index + 1)].get('BlendedGroupId').value)\r\n                return \"blend-last\"\r\n            else\r\n                return \"blend-middle\"\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    isLastDrOfBlendGroup(dr: DeliveryRequestViewModel, index: number): boolean {\r\n        if ((<number>this.DelGroupForm.get('DeliveryRequests')['controls'].length == (index + 1)) || (<number>this.DelGroupForm.get('DeliveryRequests')['controls'].length > (index + 1) && dr.BlendedGroupId != this.DelGroupForm.controls['DeliveryRequests']['controls'][(index + 1)].get('BlendedGroupId').value))\r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n    filterAndGetDrsByBlendGroupId(drs: DeliveryRequestViewModel[], blendGroupId: string): DeliveryRequestViewModel[] {\r\n        if (!drs || drs.length == 0 || !blendGroupId)\r\n            return [];\r\n        return drs.filter(dr => dr.IsBlendedRequest && dr.BlendedGroupId && dr.BlendedGroupId == blendGroupId)\r\n    }\r\n    DoNotShowCancelICON(dsValue: DeliveryRequestViewModel) {\r\n        let cancelDRButtonDisplayStatus = false;\r\n        if (this.EnrouteInProgress.indexOf(dsValue.TrackScheduleEnrouteStatus) >= 0 || this.EnrouteInCompleted.indexOf(dsValue.TrackScheduleStatus) >= 0) {\r\n            cancelDRButtonDisplayStatus = true;\r\n        }\r\n        else if ((dsValue.TrackScheduleEnrouteStatus == 0 || dsValue.TrackScheduleStatus == 0) && (dsValue.Status == 2 || dsValue.Status == 3 || dsValue.Status == 5)) {\r\n            cancelDRButtonDisplayStatus = true;\r\n        }\r\n        return cancelDRButtonDisplayStatus;\r\n    }\r\n}\r\nexport enum TaskId {\r\n    Update = 1,\r\n    Add_Update = 2,\r\n    Delete_Update = 3,\r\n    Add_Delete_Update = 4,\r\n}\r\n","<div id=\"delivery_group_panel\" class=\"border radius-5  delivery-panel hide-element\" [formGroup]=\"DelGroupForm\">\r\n    <div class=\"row delivery-group-heading\">\r\n        <div class=\"col-sm-12 pl0 pr0\">\r\n            <a id=\"delivery_group_icon\" class=\"color-white dg-header\" title=\"Close Delivery Group\">\r\n                <i class=\"fa fa-chevron-up mr10\"></i><h1 class=\"fs18 f-normal mt0 dib \">Delivery Group</h1>\r\n            </a>\r\n            <a class=\"pull-right pa10 text-center\" title=\"Reset\" data-toggle=\"modal\" data-target=\"#confirm-reset\" data-backdrop=\"static\" data-keyboard=\"false\"><i class=\"fa fa-trash-alt color-maroon fs14 radius-circle bg-white\"></i></a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row delivery-panel_body pa5\">\r\n        <div class=\"col-sm-12 overflow-y-60\">\r\n            <ng-container [formArrayName]=\"'DeliveryRequests'\">\r\n                <ng-container *ngFor=\"let tdr of DelGroupForm.controls['DeliveryRequests']['controls']; let i = index;\">\r\n                    <div class=\"border-dash-dark radius-5 pa15 dr-wrapper mt5\" [ngClass]=\"setBlendClass(tdr.value, i)\">\r\n                        <div [formGroupName]=\"i\">\r\n                            <div class=\"row\">\r\n                                <!-- parent blend request  -->\r\n                                <div *ngIf=\"tdr.get('IsBlendedRequest').value && tdr.get('IsBlendedDrParent').value\" class=\"col-sm-12 fs15\">\r\n\r\n                                    <a (click)=\"editBlendedSchedule(i,DelGroupForm)\" placement=\"right\" ngbTooltip=\"Edit Blended Requests\">\r\n                                        Blend&nbsp;<i class=\"fas fa-edit ml-2\"></i>\r\n                                    </a>\r\n\r\n                                    <a *ngIf=\"DoNotShowCancelICON(tdr.value)\" (click)=\"deleteSchedule({index:i,trip:DelGroupForm})\" placement=\"bottom\" ngbTooltip=\"Remove Blended Requests\" class=\"color-maroon pull-right ml30\">\r\n                                        <i class=\"fa fa-close\"></i>\r\n                                    </a>\r\n\r\n                                    <a *ngIf=\"tdr.get('IsBlendedRequest').value && tdr.get('IsBlendedDrParent').value && DoNotShowCancelButton(tdr.value) && CheckSubDrStatus(tdr.value)\" class=\"ml5 pull-right\" placement=\"top\" ngbTooltip=\"cancel DS\" container=\"body\" (click)=\"CancelDS(tdr);\" style=\"color: #ff7575;\">\r\n                                        Cancel DS\r\n                                    </a>\r\n                                </div>\r\n                                <div class=\"col-sm-11\" *ngIf=\"tdr.controls['JobId'].value > 0\">\r\n                                    <!-- non blend or parent blend-->\r\n                                    <ng-container *ngIf=\"(!tdr.get('IsBlendedRequest').value) || tdr.get('IsBlendedRequest').value && tdr.get('IsBlendedDrParent').value\">\r\n                                        {{tdr.controls['CustomerCompany'].value}} | {{tdr.controls['JobName'].value}},\r\n                                        {{tdr.controls['JobAddress'].value}} - {{tdr.controls['ProductType'].value}}\r\n                                        <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PreLoadedFor']\"><i>Pre-Load</i></span>\r\n                                        <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PostLoadedFor']\"><i>Post-Load</i></span>\r\n                                        <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['isRecurringSchedule'].value==true\"><i>Recurring</i></span>\r\n                                    </ng-container>\r\n\r\n                                    <!-- blend childs -->\r\n                                    <ng-container *ngIf=\"tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value\">\r\n                                        {{tdr.controls['ProductType'].value}}\r\n                                    </ng-container>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-11\" *ngIf=\"tdr.controls['JobId'].value == 0\">\r\n                                    <div class=\"row mt5\">\r\n                                        <div class=\"col-sm-5 form-group mb0\">\r\n                                            <label class=\"fs12\">TBD - {{tdr.controls['ProductType'].value}}</label>\r\n                                        </div>\r\n                                        <div class=\"col-sm-7 form-group mb0 text-right\">\r\n                                            <a (click)=\"createOnTheFlyLocation(tdr)\" *ngIf=\"isSupplierCompany\"><i class=\"fa fa-plus-circle fs14 ml5\"></i> New Location</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-1 text-center mt6 pl-0\" *ngIf=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) && !tdr.get('IsBlendedRequest').value && DoNotShowCancelICON(tdr.value)\">\r\n                                    <a (click)=\"deleteSchedule({index:i,trip:DelGroupForm})\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                                </div>\r\n                                <div class=\"col-sm-11\" *ngIf=\"tdr.controls['IsMarine'].value ==true\">\r\n                                    {{tdr.controls['DeliveryDateStartTime'].value}}\r\n                                    {{tdr.controls['Vessel'].value}} - {{tdr.controls['Berth'].value}}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row mt5\" *ngIf=\"tdr.controls['IsTBD'].value==true && checkScheduleEditStatus(tdr) == true\">\r\n                                <div class=\"col-md-6\">\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [placeholder]=\"'Customer (Optional)'\"\r\n                                                             [settings]=\"CustomerSettings\"\r\n                                                             [data]=\"TbdCustomerList[tdr.controls['Id'].value]\"\r\n                                                             (onSelect)=\"onCustomerSelect_TBD($event, tdr)\"\r\n                                                             (onDeSelect)=\"onCustomerDeSelect_TBD($event, tdr)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <ng-multiselect-dropdown formControlName=\"TBDLocations\" class=\"single-select\"\r\n                                                             [placeholder]=\"'Location'\"\r\n                                                             [settings]=\"SiteddlSettings\"\r\n                                                             [data]=\"TbdLocationList[tdr.controls['Id'].value]\"\r\n                                                             (onSelect)=\"onSiteSelect_TBD($event, tdr)\"\r\n                                                             (onDeSelect)=\"onSiteDeSelect_TBD($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-6 form-group mb0\">\r\n                                    <div class=\"input-group\">\r\n                                        <span class=\"f-bold mt7\" *ngIf=\"tdr.controls['ScheduleQuantityType'].value>1\"><i>{{tdr.controls['ScheduleQuantityTypeText'].value}}</i></span>\r\n                                        <input type=\"number\" class=\"form-control\" *ngIf=\"tdr.controls['ScheduleQuantityType'].value==1 ||tdr.controls['ScheduleQuantityType'].value==0\" formControlName=\"RequiredQuantity\" (change)=\"onDeliveryRequestChange(tdr);\"\r\n                                               [readonly]=\"!(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) || (tdr.controls['ScheduleQuantityType'].value>1) || (tdr.get('IsBlendedRequest').value)\" />\r\n                                        <span class=\"input-group-addon\" *ngIf=\"tdr.controls['ScheduleQuantityType'].value==1\">\r\n                                            <span *ngIf=\"tdr.controls['UoM'].value==1; else litres\">G</span>\r\n                                            <ng-template #litres>L</ng-template>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div *ngIf=\"tdr.controls['RequiredQuantity'].invalid && (tdr.controls['RequiredQuantity'].dirty || tdr.controls['RequiredQuantity'].touched)\">\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['RequiredQuantity'].errors.required\">\r\n                                            Required\r\n                                        </label>\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['RequiredQuantity'].errors?.max\">\r\n                                            Should not exceed max fill\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [class]=\"tdr.get('IsBlendedRequest').value? 'pntr-none subSectionOpacity' : ''\">\r\n                                        <select class=\"form-control\" [ngClass]=\"{'pntr-none':(tdr.controls['IsTBD'].value == false && (tdr.controls['DeliveryRequestFor'].value != 3 && tdr.controls['TankId'].value== null && tdr.controls['StorageId'].value== null))}\" formControlName=\"OrderId\" (change)=\"updateDrForm(tdr,$event);changeTerminal(tdr, $event)\"\r\n                                                [disabled]=\"(tdr.controls['DeliveryRequestFor'].value != 3 && tdr.controls['TankId'].value == null && tdr.controls['StorageId'].value == null) ? 'true' : null\"\r\n                                                [attr.readonly]=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined)?null:'true'\">\r\n                                            <option [ngValue]=\"null\">Select Order</option>\r\n                                            <ng-container *ngIf=\"!tdr.get('IsAdditive').value\">\r\n                                                <ng-container *ngFor=\"let order of OrderList[tdr.controls['JobId'].value.toString() + '_' + tdr.controls['ProductTypeId'].value.toString() + '_' + (tdr.controls['IsBlendedRequest'].value ? 1 : 0)]||[]\">\r\n                                                    <ng-container *ngIf=\"!tdr.controls['FuelType'].value || tdr.controls['IsBlendedRequest'].value\">\r\n                                                        <option [ngValue]=\"order.OrderId\">\r\n                                                            {{\r\n                                                                    order.PoNumber\r\n                                                            }}\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                                <ng-container *ngFor=\"let order of  TbdOrderList[tdr.controls['Id'].value]||[]\">\r\n                                                    <ng-container *ngIf=\"tdr.controls['FuelType'].value\">\r\n                                                        <option [ngValue]=\"order.Id\" [selected]=\"order.Id==tdr.controls['OrderId'].value\">\r\n                                                            {{\r\n                                                                    order.Name\r\n                                                            }}\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"tdr.controls['OrderId'].invalid && (tdr.controls['OrderId'].dirty || tdr.controls['OrderId'].touched)\">\r\n                                                    <option>No orders found </option>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"tdr.get('IsAdditive').value\">\r\n                                                <ng-container *ngFor=\"let additiveOrder of additiveOrders\">\r\n                                                    <option *ngIf=\"additiveOrder.JobId == tdr.get('JobId').value\" [ngValue]=\"additiveOrder.Id\" [selected]=\"additiveOrder.Id==tdr.controls['OrderId'].value\">\r\n                                                        {{additiveOrder.Name}}\r\n                                                    </option>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div *ngIf=\"tdr.controls['OrderId'].invalid && (tdr.controls['OrderId'].dirty || tdr.controls['OrderId'].touched)\">\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['OrderId'].errors.required\">\r\n                                            Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt5\" *ngIf=\"!this.DelGroupForm.controls['IsCommonPickup'].value && !tdr.controls['IsAdditive'].value\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"clearfix color-lightgrey col-sm-12 pa0\">\r\n                                        <div class=\"pull-left\">\r\n                                            Pickup From:\r\n                                            <span class=\"pr5\" *ngIf=\"tdr.controls['PickupLocationType'].value!=2; else location;\">\r\n                                                Terminal\r\n                                            </span>\r\n                                            <ng-template #location>\r\n                                                <span class=\"pr5\">\r\n                                                    Location\r\n                                                </span>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                        <div class=\"pull-left pr5\" *ngIf=\"tdr.controls['PickupLocationType'].value!=2; else bulkPlant;\">\r\n\r\n                                            {{tdr.controls['Terminal'].controls['Name'].value}}\r\n\r\n                                            <!-- <div *ngIf=\"tdr.controls['Terminal'].invalid && (tdr.controls['Terminal'].dirty || tdr.controls['Terminal'].touched)\">\r\n                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['Terminal'].controls['Name'].errors.required\">\r\n                            Required\r\n                        </label>\r\n                    </div> -->\r\n                                        </div>\r\n                                        <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                            <span class=\"pull-left pl5 pr5\">\r\n                                                {{tdr.controls['BulkPlant'].controls['SiteName'].value}}, {{tdr.controls['BulkPlant'].controls['City'].value}},\r\n                                                {{tdr.controls['BulkPlant'].controls['State'].controls['Code'].value}} {{tdr.controls['BulkPlant'].controls['ZipCode'].value}}\r\n                                            </span>\r\n                                            <!-- <div *ngIf=\"tdr.controls['BulkPlant'].invalid && (tdr.controls['BulkPlant'].dirty || tdr.controls['BulkPlant'].touched)\">\r\n                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['BulkPlant'].invalid\">\r\n                            Required\r\n                        </label>\r\n                    </div> -->\r\n                                        </ng-template>\r\n                                        <span *ngIf=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) && (!tdr.get('IsBlendedRequest').value)\">\r\n                                            <a class=\"pull-left\" (click)=\"editPickupLocation(tdr)\" data-toggle=\"modal\" data-target=\"#pickup-location\"><i class=\"fa fa-edit fs18 ml5 mt2\"></i></a>\r\n                                        </span>\r\n                                        <span *ngIf=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) && (!tdr.get('IsBlendedRequest').value)\">\r\n                                            <a class=\"pull-left color-maroon\" (click)=\"RemovePickupLocation(tdr)\" title=\"Remove pickup location\"><i class=\"fa fa-close ml5 mt2\"></i></a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- [class.mt25]=\"(tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\" -->\r\n                            <div class=\"row mt5\" *ngIf=\"!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-check form-check-inline float-left checkbox mt0 mb0\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckboxCommonBadge-{{i}}\" formControlName=\"IsCommonBadge\" (change)=\"setCommonBadgeForBlendGroup(tdr);\">\r\n                                        <label class=\"form-check-label\" for=\"CheckboxCommonBadge-{{i}}\">Common Badge #</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline float-right checkbox mt0 mb0\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" [id]=\"'CheckboxFilldInvoke-'+i\" formControlName=\"IsFilldInvoke\" (change)=\"onDeliveryRequestChange(tdr)\">\r\n                                        <label class=\"form-check-label\" [for]=\"'CheckboxFilldInvoke-'+i\">TrueFill Inc. Compatible</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt5\" *ngIf=\"!tdr.controls['IsCommonBadge'].value && (!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i)))\">\r\n                                <div class=\"col-sm-4 form-group mb0 pr5\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Badge #1\" formControlName=\"BadgeNo1\" (change)=\"setBadgeForBlendGroup(tdr, 1);\" />\r\n                                </div>\r\n                                <div class=\"col-sm-4 form-group mb0 pl10 pr10\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Badge #2\" formControlName=\"BadgeNo2\" (change)=\"setBadgeForBlendGroup(tdr, 2);\" />\r\n                                </div>\r\n                                <div class=\"col-sm-4 form-group mb0 pl5\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Badge #3\" formControlName=\"BadgeNo3\" (change)=\"setBadgeForBlendGroup(tdr, 3);\" />\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\" class=\"row mt10\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <a (click)=\"viewNotes(tdr)\" class=\"font-bold\" data-toggle=\"collapse\" [attr.data-target]=\"'#collapseDispatcher'+i\" [attr.aria-controls]=\"'collapseDispatcher'+i\" role=\"button\" [attr.aria-expanded]=\"false\">\r\n                                        Note <i class=\"fa fa mr10 \" [ngClass]=\" selectedViewNote == tdr.value.Id ? 'fa-chevron-up' : 'fa-chevron-down'\"> </i>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"collapse\" [attr.id]=\"'collapseDispatcher'+i\">\r\n                                <div class=\"form-group mb0\">\r\n                                    <textarea class=\"form-control\" formControlName=\"Notes\" placeholder=\"Dispatcher Note\" (change)=\"onDeliveryRequestChange(tdr);setNoteForBlendGroup(tdr);\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\">\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-sm-10 form-group\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"Delivery-Level-PO#\">Delivery-Level PO#</label><br>\r\n                                            <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" id=\"Delivery-Level-PO#\" (change)=\"onDeliveryRequestChange(tdr);setDeliveryLevelPOForBlendGroup(tdr)\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt10\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"name\" class=\"form-check-label\">\r\n                                                    <span>Schedule Date</span>\r\n                                                </label>\r\n                                                <input type=\"text\" placeholder=\"Select Date\" formControlName=\"SelectedDate\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" (onDateChange)=\"onDeliveryRequestChange(tdr);setScheduleSelectedDate($event,tdr) \"/> \r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label class=\"form-check-label\">Start Time</label>\r\n                                                <input type=\"text\" placeholder=\"Start Time\"formControlName=\"ScheduleStartTime\" class=\"form-control\"  myTimePicker [format]=\"'hh:mm A'\" (onTimeChange)=\"onDeliveryRequestChange(tdr); setScheduleStartTime($event,tdr);\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label class=\"form-check-label\">End Time</label>\r\n                                                <input type=\"text\" placeholder=\"End Time\" formControlName=\"ScheduleEndTime\" class=\"form-control\"  myTimePicker [format]=\"'hh:mm A'\" (onTimeChange)=\" onDeliveryRequestChange(tdr); setScheduleEndTime($event,tdr);\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt10\">\r\n                                <div class=\"col-sm-12\" style=\"text-align: right;\">\r\n                                    <a *ngIf=\"!tdr.get('IsBlendedRequest').value && tdr.controls['GroupParentDRId'].value!=''\" (click)=\"AddSubDR(tdr)\" data-toggle=\"modal\" data-target=\"#addsub-dr\" style=\"color: #188c90;\">\r\n                                        Add Sub DR(s)\r\n                                    </a>\r\n                                    <a *ngIf=\"!tdr.get('IsBlendedRequest').value && DoNotShowCancelButton(tdr.value) && CheckSubDrStatus(tdr.value)\" class=\"ml5\" placement=\"top\" ngbTooltip=\"cancel DS\" container=\"body\" (click)=\"CancelDS(tdr);\" style=\"color: #ff7575;\">\r\n                                        Cancel DS\r\n                                    </a>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6\" *ngIf=\"DoNotShowCancelButton(tdr) && CheckSubDrStatus(tdr.value)\">\r\n            <button class=\"btn btn-default\" style=\"float:right\" placement=\"right\" ngbTooltip=\"cancel DS\" container=\"body\" (click)=\"CancelDS(tdr);\">\r\n                <i class=\"fas fa-remove fs13\"></i>\r\n                Cancel DS\r\n            </button>\r\n        </div> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n            <div class=\"mt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" formControlName=\"Carrier\" class=\"form-control\" placeholder=\"Carrier\" (change)=\"onDeliveryGroupChange();\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" formControlName=\"SupplierSource\" placeholder=\"Supplier Source\" class=\"form-control\" (change)=\"onDeliveryGroupChange();\" />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"mt10\" *ngIf=\"this.DelGroupForm.controls['IsCommonBadge'].value\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 pr5\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" fom placeholder=\"Badge #1\" (change)=\"onDeliveryGroupChange();\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 pr10 pl10\">\r\n                        <div class=\"form-group mb5 \">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\" placeholder=\"Badge #2\" (change)=\"onDeliveryGroupChange();\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 pl5\">\r\n                        <div class=\"form-group mb5 \">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\" placeholder=\"Badge #3\" (change)=\"onDeliveryGroupChange();\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--*ngIf=\"this.DelGroupForm.controls['IsCommonBadge'].value\"-->\r\n            <div class=\"mt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group mb0\">\r\n                            <textarea class=\"form-control\" formControlName=\"RouteInfo\" placeholder=\"Common Note\" (change)=\"onDeliveryGroupChange();\"></textarea>\r\n                            <div *ngIf=\"DelGroupForm.controls['RouteInfo'].invalid && (DelGroupForm.controls['RouteInfo'].dirty || DelGroupForm.controls['RouteInfo'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['RouteInfo'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" class=\"form-control timepicker\" formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm A'\" placeholder=\"Start Time\" (onTimeChange)=\"DelGroupForm.controls['StartTime'].setValue($event);\" />\r\n                            <div *ngIf=\"DelGroupForm.controls['StartTime'].invalid && (DelGroupForm.controls['StartTime'].dirty || DelGroupForm.controls['StartTime'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['StartTime'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"StartDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" placeholder=\"Start Date\" [minDate]=\"MinCalendarDate\" [maxDate]=\"MaxCalendarDate\"\r\n                                   (onDateChange)=\"setSelectedDate($event);\" autocomplete=\"off\" />\r\n                            <div *ngIf=\"DelGroupForm.controls['StartDate'].invalid && (DelGroupForm.controls['StartDate'].dirty || DelGroupForm.controls['StartDate'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['StartDate'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm A'\" placeholder=\"End Time\" class=\"form-control timepicker\" (onTimeChange)=\"DelGroupForm.controls['EndTime'].setValue($event);\" />\r\n                            <div *ngIf=\"DelGroupForm.controls['EndTime'].invalid && (DelGroupForm.controls['EndTime'].dirty || DelGroupForm.controls['EndTime'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['EndTime'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 mt10\">\r\n                    <div class=\"float-left mt5\" *ngIf=\"!this.DelGroupForm.controls['IsPreLoadInfo'].value\">\r\n                        <!--<label>\r\n                    <input type=\"checkbox\" formControlName=\"IsCommonPickup\" (change)=\"onCommonPickupChkChange()\" />Common Pick-up Location\r\n                </label>-->\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"comm-pick-Ckbox1\" formControlName=\"IsCommonPickup\" (change)=\"onCommonPickupChkChange()\">\r\n                            <label class=\"form-check-label\" for=\"comm-pick-Ckbox1\">Common Pick-up Location</label>\r\n                        </div>\r\n                    </div>\r\n                    <button *ngIf=\"!this.DelGroupForm.controls['IsPreLoadInfo'].value\" class=\"btn btn-default btn-sm float-left ml10\" (click)=\"editPickupLocation(null)\"\r\n                            [disabled]=\"!this.DelGroupForm.controls['IsCommonPickup'].value\" data-toggle=\"modal\" #idCommonPickUpBtn data-target=\"#pickup-location\">\r\n                        <i class=\"fas fa-map-marker-alt\"></i> Choose Pick-up\r\n                    </button>\r\n                    <div class=\"pr5 clearboth\">\r\n                        <div *ngIf=\"DelGroupForm.controls['PickupLocationType'].value!=2; else bulkPlant;\">\r\n                            {{DelGroupForm.controls['Terminal']['controls'].Name.value}}\r\n                            <div *ngIf=\"DelGroupForm.controls['Terminal'].invalid && (DelGroupForm.controls['Terminal'].dirty || DelGroupForm.controls['Terminal'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <ng-template #bulkPlant>\r\n                            {{DelGroupForm.controls['BulkPlant']['controls'].SiteName.value}}  {{DelGroupForm.controls['BulkPlant']['controls'].City.value}}\r\n                            {{DelGroupForm.controls['BulkPlant']['controls'].State['controls'].Code.value}} {{DelGroupForm.controls['BulkPlant']['controls'].ZipCode.value}}\r\n                            <div *ngIf=\"DelGroupForm.controls['BulkPlant'].invalid && (DelGroupForm.controls['BulkPlant'].dirty || DelGroupForm.controls['BulkPlant'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['BulkPlant'].invalid\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-sm-12 text-right mt15\">\r\n            <!--<button type=\"button\" class=\"btn btn-lg\" (click)=\"cancelDeliveryGroupChanges()\">Cancel</button>-->\r\n            <button type=\"button\" [disabled]=\"!validStartDate\" *ngIf=\"DelGroupForm.controls['DeliveryGroupPrevStatus'].value!=2\" class=\"btn btn-default btn-lg\" (click)=\"draftDeliveryGroup()\">Save</button>\r\n            <button type=\"button\" [disabled]=\"DelGroupForm.invalid || !validStartDate\" class=\"btn btn-success btn-lg\" (click)=\"publishDeliveryGroup()\"><i class=\"fas fa-paper-plane mr5 fs13\"></i> Publish</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<div class=\"modal fade confirm-box\" id=\"confirm-reset\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Reset Load?</h2>\r\n                <p class=\"pb10\">Are you sure?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteDeliveryGroup(true)\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style=\"z-index: 1051!important;\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <!--<div class=\"btn-group btn-filter\" data-toggle=\"buttons\">\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            Terminal &nbsp;\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            Bulk Plant\r\n                        </div>-->\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"updatePickupLocation()\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\">\r\n                    <!-- terminal start -->\r\n                    <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                        <div class=\"col-sm-10\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" (input)=\"onTerminalSearched($event);PickupForm.controls['Terminal']['controls'].Id.patchValue(0)\" (focus)=\"onTerminalSearched($event);\" (blur)=\"validateTerminal(PickupForm.controls['Terminal'],$event)\" placeholder=\"Terminal Name\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup);\" />\r\n\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li class=\"form-text\" *ngIf=\"minCharRequired\"><small>Enter minimum 3 characters to search.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"searchError\"><small>Something went wrong.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"_loadingTerminals\"><small>Loading...</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"noTerminalFound && !minCharRequired && !searchError && !_loadingTerminals \"><small>{{SearchTerminalKey.length > 0 ? \"Matching terminal\" : \"Terminal\"}} not found for Fuel Type : {{SearchTerminalFuelType}}</small></li>\r\n                                    <li *ngFor=\"let terminal of Terminals;\" (click)=\"onTerminalSelected(terminal)\"\r\n                                        [attr.selected]=\"terminal.Id==PickupForm.controls['Terminal']['controls'].Id.value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                                <ng-container *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.invalid\r\n                                      && (PickupForm.controls['Terminal']['controls'].Name.touched || PickupForm.controls['Terminal']['controls'].Name.dirty)\">\r\n                                    <label style=\"color:red\" *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                        Required\r\n                                    </label>\r\n                                </ng-container>\r\n                                <!--<div class=\"ng-autocomplete\">\r\n                                    <ng-autocomplete #terminal_AutoComplete\r\n                                                     [data]=\"Terminals\"\r\n                                                     [searchKeyword]=\"keyword\"\r\n                                                     [initialValue]=\"initialValue\"\r\n                                                     placeholder=\"Terminal Name\"\r\n                                                     (inputChanged)=\"onTerminalSearched($event)\"\r\n                                                     (selected)='onTerminalSelected($event)'\r\n                                                     [itemTemplate]=\"itemTemplate\"\r\n                                                     [notFoundTemplate]=\"notFoundTemplate\">\r\n                                    </ng-autocomplete>\r\n\r\n                                    <ng-template #itemTemplate let-item>\r\n                                        <a [innerHTML]=\"item.Name\"></a>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template #notFoundTemplate let-notFound>\r\n                                        <div [innerHTML]=\"notFound\"></div>\r\n                                    </ng-template>\r\n                                </div>-->\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"padding-left: 10px;padding-top:7px;\">\r\n                            <a (click)=\"deletePickupInfo(PickupForm.controls['Terminal'])\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <!-- terminal ends -->\r\n                    <!-- bulk plant starts -->\r\n                    <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Bulk Plant</label>\r\n                                        <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur($event)\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup);\" />\r\n                                        <ul class=\"auto-select border-dash\">\r\n                                            <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected(plant)\"\r\n                                                [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                        </ul>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Address\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup);\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                        <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip($event)\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup)\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                Invalid {{ CountryBasedZipcodeLabel }}\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                        <label>State</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode($event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                        <label>Country/Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" (change)=\"OnCountryChanged($event)\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                        <label>Country Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>County</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Latitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Longitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- bulk plant ends -->\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn\" data-dismiss=\"modal\" id=\"btnPickupClose\">Cancel</button>\r\n                    <button type=\"button\" *ngIf=\"IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocationForBlend()\" class=\"btn btn-primary\">Add</button>\r\n                    <button type=\"button\" *ngIf=\"!IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocation()\" class=\"btn btn-primary\">Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btnconfirm-delete-dr\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-delete-dr\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-dr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\" id=\"deleteDrHeading\">Driver is on the way to job.</h2>\r\n                <p class=\"pb10\">Are you sure?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"deleteDeliveryRequestFromLoadNo()\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteDeliveryRequestFromLoad()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"addsub-dr\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #form=\"ngForm\" novalidate>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Create Sub DR(s)</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <!--Spilt DR Logic-->\r\n                    <ng-container>\r\n                        <div *ngFor=\"let spiltDR of addSubDrModel.SpiltDRs;let i = index;\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-5\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                            <span>Quantity Type</span>\r\n                                        </label>\r\n                                        <select class=\"form-control\" [(ngModel)]=\"spiltDR.ScheduleQuantityType\" name=\"ScheduleQuantityType_{{i}}\" #ScheduleQuantityType=\"ngModel\">\r\n                                            <option [id]=\"1\" [value]=\"1\">\r\n                                                Quantity\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"name\" class=\"mr5\">\r\n                                            <span>Required Quantity</span>\r\n                                            <span *ngIf=\"addSubDrModel?.UoM==1; else litres\"> (G)</span>\r\n                                            <ng-template #litres> (L)</ng-template>\r\n                                        </label>\r\n                                        <input type=\"text\" class=\"form-control\" name=\"SpiltRequiredQuantity_{{i}}\" [(ngModel)]=\"spiltDR.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-1\"><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeItem(i)\"></a></div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addEmptySubDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeSubDrPanel\">Cancel</button>\r\n                        <button type=\"submit\" (click)=\"onSubDrCreate()\" class=\"btn btn-primary btn-lg\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-group-cancel-ds\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-group-cancel-ds\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-group-cancel-ds\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Do you want to cancel DS(s)?</h2>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"CancelDSGroupDriverSchedule()\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"RejectDSGroupDriverSchedule()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Cancel DS Infomration-->\r\n<button type=\"button\" id=\"btn-group-cancel-ds-info\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-group-cancel-ds-info\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-group-cancel-ds-info\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Delivery Schedule Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" id=\"confirm-group-cancel-ds-dismiss\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\" *ngIf=\"cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                                <thead>\r\n                                    <tr class=\"f-bold\">\r\n                                        <th><input id=\"selectAllDSBGroupCancel\" type=\"checkbox\" class=\"form-check-input\" (change)=\"checkAll()\" /></th>\r\n                                        <th>Driver Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Fuel Type</th>\r\n                                        <th>Current State</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let dsInfo of cancelDSDeliveryScheduleViewModel;let j = index\">\r\n                                        <td><input type=\"checkbox\" class=\"form-check-input\" id=\"dsCheck{{j}}\" (change)=\"checkDSChange(j,dsInfo)\" [(ngModel)]='dsInfo.IsChecked'></td>\r\n                                        <td>{{dsInfo.DriverName}}</td>\r\n                                        <td>{{dsInfo.Quantity}}</td>\r\n                                        <td>{{dsInfo.FuelType}}</td>\r\n                                        <td>{{dsInfo.CurrentState}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"text-right mt-2\" *ngIf=\"this.cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <button type=\"button\" (click)=\"CancelSelectedDS()\" class=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- blend dr modal -->\r\n<div id=\"_openBlendModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#_blendModal\"></div>\r\n<div class=\"modal fade\" id=\"_blendModal\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\"\r\n     aria-labelledby=\"blendModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header py-1\">\r\n                <h4 class=\"modal-title\">Blend Details</h4>\r\n                <button type=\"button\" class=\"close mt-n2\" data-dismiss=\"modal\" (click)=\"IsPickupForBlendRequest=false\">&times;</button>\r\n            </div>\r\n\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\" *ngIf=\"DelGroupForm.get('DeliveryRequests') && DelGroupForm.get('DeliveryRequests').value && DelGroupForm.get('DeliveryRequests').value.length>0\">\r\n                <!-- parent/total blend quantity -->\r\n                <div class=\"row\" *ngIf=\"blendRequestForm.get('BlendedRequests').value && blendRequestForm.get('BlendedRequests').value.length>0\">\r\n                    <div class=\"col-sm-3\">\r\n                        <label class=\"form-check-label\">Total Quantity</label>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input type=\"number\" name=\"_totalBlendedQuantity\" [(ngModel)]=\"totalBlendedQuantity\" #_totalBlendedQuantity=\"ngModel\"\r\n                                       numberWithDecimal class=\"form-control\" placeholder=\"Total Quantity\" (input)=\"onBlendTotalQuantityChange($event.target.value)\" required />\r\n                                <div class=\"input-group-addon\">\r\n                                    <span *ngIf=\"blendRequestForm.get('BlendedRequests').value[0].UoM==1; else litres\">G</span>\r\n                                    <ng-template #litres>L</ng-template>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"color-maroon\"\r\n                                 *ngIf=\"_totalBlendedQuantity.errors\">\r\n                                <div>Total quantity is required</div>\r\n                            </div>\r\n\r\n                            <div class=\"color-maroon\"\r\n                                 *ngIf=\"!isTankMaxFillValid()\">\r\n                                <div>Required quantity is more than Max Fill.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label class=\"form-check-label fs18\">Products</label>\r\n                    <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0)\"></a>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"blendRequestForm.get('BlendedRequests').value && blendRequestForm.get('BlendedRequests').value.length>0\">\r\n                    <form [formGroup]=\"blendRequestForm\">\r\n                        <ng-container *ngFor=\"let blendedRequest of blendRequestForm.get('BlendedRequests')['controls']; let x = index;let first = first;let last = last;\">\r\n\r\n                            <ng-container formArrayName=\"BlendedRequests\">\r\n                                <ng-container [formGroupName]=\"x\">\r\n                                    <!-- additive label -->\r\n                                    <ng-container *ngIf=\"blendedRequest.get('IsAdditive').value && (first || !blendRequestForm.get('BlendedRequests')['controls'][+x - 1].get('IsAdditive').value)\">\r\n\r\n                                        <!-- validation -->\r\n                                        <div class=\"\" *ngIf=\"blendRequestForm.valid\">\r\n                                            <div *ngIf=\"totalBlendedQuantity && blendRequestForm.valid && blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2 mt-2\">Sum of entered quantity should match with {{totalBlendedQuantity}}.</div>\r\n                                        </div>\r\n\r\n                                        <div class=\"row mt-3\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <label class=\"form-check-label fs18\">Additive</label>\r\n                                                <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, x, true)\"></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div>\r\n                                                <!-- order ddl -->\r\n                                                <select *ngIf=\"!blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\"\r\n                                                        (change)=\"orderChangedForBlendRequest($event.target.value, blendedRequest)\">\r\n                                                    <option disabled value=\"null\">Select Order</option>\r\n                                                    <option *ngFor=\"let order of getUnUsedOrdersForBlendedRequest(blendedRequest)\" [value]=\"order.OrderId\">\r\n                                                        {{order.PoNumber}}\r\n                                                    </option>\r\n                                                </select>\r\n\r\n                                                <!-- additive order ddl -->\r\n                                                <select *ngIf=\"blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\">\r\n\r\n                                                    <option disabled value=\"null\">Select Order</option>\r\n                                                    <ng-container *ngFor=\"let additiveOrder of getUnUsedBlendOrders(blendedRequest.get('OrderId').value)\">\r\n                                                        <option *ngIf=\"additiveOrder.JobId == blendedRequest.get('JobId').value\" [ngValue]=\"additiveOrder.Id\" [selected]=\"additiveOrder.Id==blendedRequest.controls['OrderId'].value\">\r\n                                                            {{additiveOrder.Name}}\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <div class=\"color-maroon\" *ngIf=\"blendedRequest.get('OrderId').touched && blendedRequest.get('OrderId').errors\">\r\n                                                <div>Order is required </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- required quantity -->\r\n                                        <div class=\"col-sm-3\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"number\" formControlName=\"RequiredQuantity\"\r\n                                                           numberWithDecimal class=\"form-control\" placeholder=\"Quantity\" (change)=\"onDeliveryRequestChange(blendedRequest);\" (input)=\"blendDrQuantityChanged($event.target.value,x);\" />\r\n                                                    <div class=\"input-group-addon\">\r\n                                                        <span *ngIf=\"blendedRequest.controls['UoM'].value==1; else litres\">G</span>\r\n                                                        <ng-template #litres>L</ng-template>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"color-maroon\"\r\n                                                     *ngIf=\"((blendRequestForm.touched && blendedRequest.get('IsAdditive').value) || blendedRequest.get('RequiredQuantity').touched || blendedRequest.get('QuantityInPercent').touched) && blendedRequest.get('RequiredQuantity').errors\">\r\n                                                    <div> Quantity is required </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-sm-3\" *ngIf=\"!blendedRequest.get('IsAdditive').value\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"number\" formControlName=\"QuantityInPercent\"\r\n                                                           numberWithDecimal class=\"form-control\"\r\n                                                           placeholder=\"Quantity In Percent\" (input)=\"blendDrPercentChanged($event.target.value,x);\" />\r\n                                                    <div class=\"input-group-addon\">%</div>\r\n                                                </div>\r\n\r\n                                                <div class=\"color-maroon\"\r\n                                                     *ngIf=\"(blendedRequest.get('QuantityInPercent').touched || blendedRequest.get('RequiredQuantity').touched) && blendedRequest.get('QuantityInPercent').invalid\">\r\n                                                    <div>Invalid percentage</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <!-- remove row -->\r\n                                        <div class=\"col-sm-2 input-group\">\r\n                                            <a type=\"button\" title=\"Remove\" class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\" (click)=\"addRemoveBlendedProduct(false, x)\"></a>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <!-- pickup loc -->\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 mt-1\" *ngIf=\"DelGroupForm.controls['DeliveryRequests']['controls'].length>0 && !DelGroupForm.controls['DeliveryRequests']['controls']['IsCommonPickup']?.value && !blendedRequest.get('IsAdditive').value && !DelGroupForm.controls['DeliveryRequests']['controls'][DrForEditBlendedRequestIndex].get('IsCommonPickupForBlend').value\">\r\n                                            <div class=\"input-group\">\r\n                                                <div class=\"pull-left\">\r\n                                                    <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                    <span class=\"pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else location;\">Terminal</span>\r\n                                                    <ng-template #location><span class=\"pr5\">Location</span></ng-template>\r\n                                                </div>\r\n                                                <div class=\"pull-left pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                    {{blendedRequest.controls['Terminal']?.controls['Name']?.value}}\r\n                                                    <div *ngIf=\"blendedRequest.controls['Terminal']?.invalid && (blendedRequest.controls['Terminal']?.dirty || blendedRequest.controls['Terminal']?.touched)\">\r\n                                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                    <span class=\"pull-left pl5 pr5\">\r\n                                                        {{blendedRequest.controls['BulkPlant']?.controls['SiteName'].value}}, {{blendedRequest.controls['BulkPlant']?.controls['City'].value}},\r\n                                                        {{blendedRequest.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{blendedRequest.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                    </span>\r\n                                                    <div *ngIf=\"blendedRequest.controls['BulkPlant'].invalid && (blendedRequest.controls['BulkPlant'].dirty || blendedRequest.controls['BulkPlant'].touched)\">\r\n                                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['BulkPlant'].invalid\">Required</label>\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                    <a class=\"float-left\" (click)=\"IsPickupForBlendRequest=true;editPickupLocationForBlend(x);\" data-toggle=\"modal\" data-target=\"#pickup-location\" placement=\"bottom\" ngbTooltip=\"Edit Pickup Location\"><i class=\"fa fa-edit fs18 ml-3 mt2\"></i></a>\r\n                                                </span>\r\n                                                <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                    <a (click)=\"RemoveBlendPickupLocation(blendedRequest)\" placement=\"bottom\" ngbTooltip=\"Remove Pickup Location\" class=\"float-left color-maroon\"><i class=\"fa fa-close fs18 ml-2 mt2\"></i></a>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <!-- additive label -->\r\n                                    <ng-container *ngIf=\"(last && !blendedRequest.get('IsAdditive').value)\">\r\n\r\n                                        <!-- validations -->\r\n                                        <div class=\"mt10\" *ngIf=\"blendRequestForm.valid\">\r\n                                            <div *ngIf=\"totalBlendedQuantity && blendRequestForm.valid && blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2 mt-2\">Sum of entered quantity should match with {{totalBlendedQuantity}}.</div>\r\n                                        </div>\r\n\r\n                                        <div class=\"row mt-3\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <label class=\"form-check-label fs18\">Additive</label>\r\n                                                <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, x, true)\"></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n\r\n                        <!-- validations -->\r\n                        <ng-container *ngIf=\"blendRequestForm.valid\">\r\n                            <div class=\"mt10\">\r\n                                <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length<2\" class=\"alert alert-danger mb-2 p-2\">Please add at least two rows.</div>\r\n                            </div>\r\n                        </ng-container>\r\n\r\n                        <div class=\"text-right\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-lg\" (click)=\"IsPickupForBlendRequest=false\">Cancel</button>\r\n                            <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"blendRequestForm.invalid || blendRequestForm.get('BlendedRequests')['controls'].length<2 || !isBlendedRequestQuantityValid() || !isTankMaxFillValid()\" (click)=\"submitBlendedForm()\" data-dismiss=\"modal\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { DeliveryRequestViewModel } from '../../models/DispatchSchedulerModels';\r\nimport { Subject } from 'rxjs';\r\nimport { DropdownItemExt, DropdownItem } from '../../../statelist.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DispatcherService } from '../../service/dispatcher.service';\r\nimport { CarrierService } from '../../service/carrier.service';\r\nimport { Declarations } from '../../../declarations.module';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { BrokeredDrCarrierStatus, TfxModule } from 'src/app/app.enum';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-assigned-by-me',\r\n    templateUrl: './assigned-by-me.component.html',\r\n    styleUrls: ['./assigned-by-me.component.scss']\r\n})\r\nexport class AssignedByMeComponent implements OnInit, OnDestroy {\r\n    @Input() regionId: string;\r\n    @Input() SelectedDate: string;\r\n    public MustGoDrs: any = [];\r\n    public ShouldGoDrs: any = [];\r\n    public CouldGoDrs: any = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    public customerList: any = [];\r\n    public locationList: any = [];\r\n    public priorityList: any = [];\r\n    public SelectedLocations: any = [];\r\n    public SelectedCustomers: any = [];\r\n    public SelectedPriorities: any = [];\r\n    public FilterForm: FormGroup;\r\n    public showMustGo: boolean = true;\r\n    public showShouldGo: boolean = true;\r\n    public showCouldGo: boolean = true;\r\n    public multiDropdownSettings: IDropdownSettings;\r\n    public brokeredDrRequestedByMe: DeliveryRequestViewModel[] = [];\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public IsLoading: boolean = false;\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: DispatcherService, private sbService: ScheduleBuilderService, private dataService: DataService, private carrierService: CarrierService) { }\r\n\r\n    ngOnInit() {\r\n        this.priorityList = LoadPriorities;\r\n\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.initializeFilterForm();\r\n        this.initializeMustGo();\r\n        this.initializeShouldGo();\r\n        this.initializeCouldGo();\r\n        this.GetFilters();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();\r\n    }\r\n\r\n    public initializeFilterForm() {\r\n        this.FilterForm = this.fb.group({\r\n            SelectedCustomers: this.fb.control([]),\r\n            SelectedLocations: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([])\r\n        });\r\n    }\r\n\r\n    setGridData() {\r\n        this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1);\r\n        this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2);\r\n        this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3);\r\n        this.getCustomers();\r\n        this.getLocations();\r\n    }\r\n\r\n    getCustomers() {\r\n        this.customerList = this.brokeredDrRequestedByMe.map(item => {\r\n            const customer = new DropdownItemExt();\r\n\r\n            customer.Id = item.CustomerCompany;\r\n            customer.Name = item.CustomerCompany;\r\n\r\n            return customer;\r\n        });\r\n        this.customerList = this.customerList.filter((loc, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === loc.Id)) === i;\r\n        });\r\n    }\r\n\r\n    getLocations() {\r\n        this.locationList = this.brokeredDrRequestedByMe.map(item => {\r\n            const location = new DropdownItem();\r\n\r\n            location.Id = item.JobId;\r\n            location.Name = item.JobName;\r\n\r\n            return location;\r\n        });\r\n        this.locationList = this.locationList.filter((loc, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === loc.Id)) === i;\r\n        });\r\n    }\r\n\r\n    public recallBrokeredDrRequest(delReq: DeliveryRequestViewModel) {\r\n        this.requestToUpdate = Object.assign({}, delReq);\r\n        let element = document.getElementById(\"recallBrokeredDrBtn\");\r\n        element ? element.click() : null;\r\n    }\r\n\r\n    onCustomerChange() {\r\n        this.SelectedCustomers = this.FilterForm.get('SelectedCustomers').value;\r\n        var selectedCustomers = this.SelectedCustomers.map(t => t.Name);\r\n        if (this.SelectedCustomers.length > 0) {\r\n            this.locationList = this.brokeredDrRequestedByMe.filter(t => selectedCustomers.some(t1 => t1 == t.CustomerCompany)).map(item => {\r\n                const location = new DropdownItem();\r\n\r\n                location.Id = item.JobId;\r\n                location.Name = item.JobName;\r\n\r\n                return location;\r\n            });\r\n            this.locationList = this.locationList.filter((loc, i, arr) => {\r\n                return arr.indexOf(arr.find(t => t.Id === loc.Id)) === i;\r\n            });\r\n        }\r\n        else {\r\n            this.getLocations();\r\n        }\r\n    }\r\n\r\n    recallBrokeredDr(dr: any): void {\r\n        this.IsLoading = true;\r\n        this.sbService.recallDrFromCarrier(dr).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode != 1) {\r\n                dr.CarrierStatus = BrokeredDrCarrierStatus.Recalled;\r\n                dr.Compartments = dr.Compartments || [];\r\n                dr['WindowMode'] = 1;\r\n                dr['QueueMode'] = 1;\r\n\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                Declarations.hideModal('#recallBrokeredDrModal');\r\n                this.dataService.setRestoreDeletedRequestSubject([dr]);\r\n                this.getBrokeredDrAssignedByMe(this.regionId, this.SelectedDate);\r\n                this.dataService.setDrQueueChangesForFilter(true);\r\n            } else {\r\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    getBrokeredDrAssignedByMe(regionId: string, selectedDate?: string) {\r\n        this.IsLoading = true;\r\n        this.carrierService.getBrokeredDrAssignedByMe(regionId, selectedDate).subscribe(drs => {\r\n            this.IsLoading = false;\r\n            this.brokeredDrRequestedByMe = drs || [];\r\n            this.getCustomers();\r\n            this.getLocations();\r\n            this.ApplyFilters(true);\r\n        });\r\n    }\r\n\r\n    onLocationChange() {\r\n        this.SelectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n    }\r\n\r\n    onPriorityChange() {\r\n        this.SelectedPriorities = this.FilterForm.get('SelectedPriorities').value;\r\n    }\r\n\r\n    openAssignedByMePanel() {\r\n        this.getBrokeredDrAssignedByMe(this.regionId, this.SelectedDate);\r\n    }\r\n\r\n    ResetFilters() {\r\n        this.SelectedCustomers = [];\r\n        this.SelectedLocations = [];\r\n        this.SelectedPriorities = [];\r\n        this.initializeFilterForm();\r\n        this.showCouldGo = this.showMustGo = this.showShouldGo = true;\r\n        this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1);\r\n        this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2);\r\n        this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3);\r\n        this.SaveFilters();\r\n    }\r\n\r\n    ApplyFilters(isFromGetFilter: boolean = false) {\r\n        this.showMustGo = this.SelectedPriorities.length == 0 || this.SelectedPriorities.some(t => t.Id == 1);\r\n        this.showShouldGo = this.SelectedPriorities.length == 0 || this.SelectedPriorities.some(t => t.Id == 2);\r\n        this.showCouldGo = this.SelectedPriorities.length == 0 || this.SelectedPriorities.some(t => t.Id == 3);\r\n\r\n\r\n        if (this.SelectedCustomers.length > 0) {\r\n            this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1 && this.SelectedCustomers.some(t1 => t1.Id == t.CustomerCompany));\r\n            this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2 && this.SelectedCustomers.some(t1 => t1.Id == t.CustomerCompany));\r\n            this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3 && this.SelectedCustomers.some(t1 => t1.Id == t.CustomerCompany));\r\n            if (this.SelectedLocations.length > 0) {\r\n                this.MustGoDrs = this.MustGoDrs.filter(t => this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n                this.ShouldGoDrs = this.ShouldGoDrs.filter(t => this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n                this.CouldGoDrs = this.CouldGoDrs.filter(t => this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n            }\r\n        }\r\n        else if (this.SelectedLocations.length > 0) {\r\n            this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1 && this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n            this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2 && this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n            this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3 && this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n        }\r\n        else {\r\n            this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1);\r\n            this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2);\r\n            this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3);\r\n        }\r\n        if (!isFromGetFilter) {\r\n            this.SaveFilters();\r\n        }\r\n    }\r\n\r\n    public GetFilters() {\r\n        this.dispatcherService.getFilters(TfxModule.AssignedByMeDeliveryRequests).subscribe(res => {\r\n            if (res && res.length > 0) {\r\n                var filterData = JSON.parse(res);\r\n                this.FilterForm.patchValue(filterData);\r\n                this.SelectedCustomers = filterData.SelectedCustomers;\r\n                this.SelectedLocations = filterData.SelectedLocations;\r\n                this.SelectedPriorities = filterData.SelectedPriorities;\r\n                this.getCustomers();\r\n                this.getLocations();\r\n                this.ApplyFilters(true);\r\n            }\r\n            else {\r\n                this.setGridData();\r\n            }\r\n        });\r\n    }\r\n\r\n    public SaveFilters() {\r\n        var filterData = this.FilterForm.value;\r\n        var filterModel = JSON.stringify(filterData);\r\n        this.dispatcherService.postFiltersData(TfxModule.AssignedByMeDeliveryRequests, filterModel).subscribe(res => {\r\n            if (res) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    initializeMustGo() {\r\n\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtMustGoOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'MustGo', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'MustGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            fixedHeader: false,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    initializeCouldGo() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtCouldGoOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'CouldGo', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'CouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            fixedHeader: false,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    initializeShouldGo() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtShouldGoOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'ShouldGo', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'ShouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            fixedHeader: false,\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n\r\n    }\r\n}\r\n","<button id=\"btn-assignedByMe\" type=\"button\" class=\"btn btn-link pa0 fs13\" data-target=\"divAssignedByMe\" (click)=\"openAssignedByMePanel();\" onclick=\"slidePanel('#divAssignedByMe','80%')\"> <i class=\"fa fa-user mt3 pull-left mr-3\"></i> Assigned By Me</button>\r\n\r\n<div class=\"dip-test-container\">\r\n    <div class=\"side-panel pl5 pr5\" id=\"divAssignedByMe\">\r\n        <div class=\"side-panel-wrapper p-3\">\r\n            <div class=\"mb-2\">\r\n                <a class=\"close-panel float-left\" onclick=\"closeSlidePanel();\">\r\n                    <i class=\"fa fa-close fs18\"></i>\r\n                </a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Assigned By Me</h3>\r\n            </div>\r\n            <div class=\"card shadow p-3\">\r\n                <div class=\"row mr15\" [formGroup]=\"FilterForm\">\r\n                    <div class=\"col-sm-3\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Customer'\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedCustomers']\"\r\n                                                 [settings]=\"multiDropdownSettings\"\r\n                                                 [data]=\"customerList\"\r\n                                                 (onSelect)=\"onCustomerChange()\" (onDeSelect)=\"onCustomerChange()\" (onSelectAll)=\"onCustomerChange()\" (onDeSelectAll)=\"onCustomerChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Location'\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedLocations']\"\r\n                                                 [settings]=\"multiDropdownSettings\"\r\n                                                 [data]=\"locationList\"\r\n                                                 (onSelect)=\"onLocationChange()\" (onDeSelect)=\"onLocationChange()\" (onSelectAll)=\"onLocationChange()\" (onDeSelectAll)=\"onLocationChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Priority'\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                 [settings]=\"multiDropdownSettings\"\r\n                                                 [data]=\"priorityList\"\r\n                                                 (onSelect)=\"onPriorityChange()\" (onDeSelect)=\"onPriorityChange()\" (onSelectAll)=\"onPriorityChange()\" (onDeSelectAll)=\"onPriorityChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <button type=\"button\" id=\"apply\" (click)=\"ApplyFilters();\" class=\"btn btn-primary mr-2\">\r\n                            Filter\r\n                        </button>\r\n                        <button type=\"button\" id=\"reset\" (click)=\"ResetFilters();\" class=\"btn btn-link\">\r\n                            Clear Filters\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"body-panel p-0 pr-2 mt-2\">\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsLoading\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\" id=\"grid-view\">\r\n                        <div *ngIf=\"showMustGo == true\">\r\n                            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \">Must Go</h4>\r\n                            <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                                            <table id=\"table-mustgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"Customer\">Customer Name</th>\r\n                                                        <th data-key=\"Loc\">Location Address</th>\r\n                                                        <th data-key=\"Product\">Product</th>\r\n                                                        <th data-key=\"Quantity\">Requested Quantity</th>\r\n                                                        <th data-key=\"RW\">Retain Window</th>\r\n                                                        <th data-key=\"CI\">Current Inventory</th>\r\n                                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                                        <th data-key=\"Status\">Status</th>\r\n                                                        <th data-key=\"CR\">Carrier Rejected</th>\r\n                                                        <th data-key=\"CC\">Current Carrier</th>\r\n                                                        <th data-key=\"UC\">Upcoming Carrier</th>\r\n                                                        <th data-key=\"Recal\">Recall</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"MustGoDrs?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of MustGoDrs\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName}}, {{row.JobAddress}}, {{row.JobCity}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow != '' && row.DeliveryWindow != null ?row.DeliveryWindow:\"--\"}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory !='--'\">{{row.CurrentInventory}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory =='--'\">{{row.CurrentInventory}}</td>\r\n                                                        <td>{{row.Ullage}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td>\r\n                                                            <div [ngSwitch]=\"true\">\r\n                                                                <div *ngSwitchCase=\"row.Status == 3\"><b>Schedule Created</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status == 5\"><b>Draft</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 2\"><b>Accepted</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 3\"><b>Rejected</b></div>\r\n                                                                <div *ngSwitchDefault><b>Pending</b></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{{row.CarrierRejected != '' && row.CarrierRejected != null ? row.CarrierRejected : \"--\"}}</td>\r\n                                                        <td>{{row.CurrentCarrier != '' && row.CurrentCarrier != null ? row.CurrentCarrier : \"--\"}}</td>\r\n                                                        <td>{{row.UpcomingCarrier != '' && row.UpcomingCarrier != null ? row.UpcomingCarrier : \"--\"}}</td>\r\n                                                        <td>\r\n                                                            <a *ngIf=\"row.Status != 3\" class=\"fs12 color-black\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Recall this delivery request\" (click)=\"recallBrokeredDrRequest(row)\"><i class=\"fas fa-undo-alt fs13 mr5 ml5\"></i></a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"MustGoDrs?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"showShouldGo == true\">\r\n                            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\">Should Go</h4>\r\n                            <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                                            <table id=\"table-shouldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"Customer\">Customer Name</th>\r\n                                                        <th data-key=\"Loc\">Location Address</th>\r\n                                                        <th data-key=\"Product\">Product</th>\r\n                                                        <th data-key=\"Quantity\">Requested Quantity</th>\r\n                                                        <th data-key=\"RW\">Retain Window</th>\r\n                                                        <th data-key=\"CI\">Current Inventory</th>\r\n                                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                                        <th data-key=\"Status\">Status</th>\r\n                                                        <th data-key=\"CR\">Carrier Rejected</th>\r\n                                                        <th data-key=\"CC\">Current Carrier</th>\r\n                                                        <th data-key=\"UC\">Upcoming Carrier</th>\r\n                                                        <th data-key=\"Recal\">Recall</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"ShouldGoDrs?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of ShouldGoDrs\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName}}, {{row.JobAddress}}, {{row.JobCity}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow != '' && row.DeliveryWindow != null ?row.DeliveryWindow:\"--\"}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory !='--'\">{{row.CurrentInventory}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory =='--'\">{{row.CurrentInventory}}</td>\r\n                                                        <td>{{row.Ullage}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td>\r\n                                                            <div [ngSwitch]=\"true\">\r\n                                                                <div *ngSwitchCase=\"row.Status == 3\"><b>Schedule Created</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status == 5\"><b>Draft</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 2\"><b>Accepted</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 3\"><b>Rejected</b></div>\r\n                                                                <div *ngSwitchDefault><b>Pending</b></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{{row.CarrierRejected != '' && row.CarrierRejected != null ? row.CarrierRejected : \"--\"}}</td>\r\n                                                        <td>{{row.CurrentCarrier != '' && row.CurrentCarrier != null ? row.CurrentCarrier : \"--\"}}</td>\r\n                                                        <td>{{row.UpcomingCarrier != '' && row.UpcomingCarrier != null ? row.UpcomingCarrier : \"--\"}}</td>\r\n                                                        <td>\r\n                                                            <a *ngIf=\"row.Status != 3\" class=\"fs12 color-black\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Recall this delivery request\" (click)=\"recallBrokeredDrRequest(row)\"><i class=\"fas fa-undo-alt fs13 mr5 ml5\"></i></a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"ShouldGoDrs?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"showCouldGo == true\">\r\n                            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\">Could Go</h4>\r\n                            <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                                            <table id=\"table-couldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"Customer\">Customer Name</th>\r\n                                                        <th data-key=\"Loc\">Location Address</th>\r\n                                                        <th data-key=\"Product\">Product</th>\r\n                                                        <th data-key=\"Quantity\">Requested Quantity</th>\r\n                                                        <th data-key=\"RW\">Retain Window</th>\r\n                                                        <th data-key=\"CI\">Current Inventory</th>\r\n                                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                                        <th data-key=\"Status\">Status</th>\r\n                                                        <th data-key=\"CR\">Carrier Rejected</th>\r\n                                                        <th data-key=\"CC\">Current Carrier</th>\r\n                                                        <th data-key=\"UC\">Upcoming Carrier</th>\r\n                                                        <th data-key=\"Recal\">Recall</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"CouldGoDrs?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of CouldGoDrs\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName}}, {{row.JobAddress}}, {{row.JobCity}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow != '' && row.DeliveryWindow != null ?row.DeliveryWindow:\"--\"}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory !='--'\">{{row.CurrentInventory}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory =='--'\">{{row.CurrentInventory}}</td>\r\n                                                        <td>{{row.Ullage}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td>\r\n                                                            <div [ngSwitch]=\"true\">\r\n                                                                <div *ngSwitchCase=\"row.Status == 3\"><b>Schedule Created</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status == 5\"><b>Draft</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 2\"><b>Accepted</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 3\"><b>Rejected</b></div>\r\n                                                                <div *ngSwitchDefault><b>Pending</b></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{{row.CarrierRejected != '' && row.CarrierRejected != null ? row.CarrierRejected : \"--\"}}</td>\r\n                                                        <td>{{row.CurrentCarrier != '' && row.CurrentCarrier != null ? row.CurrentCarrier : \"--\"}}</td>\r\n                                                        <td>{{row.UpcomingCarrier != '' && row.UpcomingCarrier != null ? row.UpcomingCarrier : \"--\"}}</td>\r\n                                                        <td>\r\n                                                            <a *ngIf=\"row.Status != 3\" class=\"fs12 color-black\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Recall this delivery request\" (click)=\"recallBrokeredDrRequest(row)\"><i class=\"fas fa-undo-alt fs13 mr5 ml5\"></i></a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"CouldGoDrs?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- recall brokered dr start -->\r\n<div id=\"recallBrokeredDrBtn\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#recallBrokeredDrModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"recallBrokeredDrModal\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Recall Brokered Delivery Request?</h2>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6 form-group\">\r\n                        <label *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">\r\n                            {{requestToUpdate?.ProductType}}\r\n                        </label>\r\n                        <label *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">\r\n                            {{requestToUpdate.BlendedProductName}}, {{requestToUpdate.AdditiveProductName}}\r\n                        </label>\r\n                        <label class=\"mb10 fs10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </label>\r\n                    </div>\r\n                    <div class=\"col-sm-6 form-group\">\r\n                        <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                        <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                            <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                        </div>\r\n                        <ng-template #quantity>\r\n                            <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                            <ng-template #litres>(L)</ng-template>\r\n                            <div *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">{{requestToUpdate?.RequiredQuantity}}</div>\r\n                            <div *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">{{requestToUpdate?.TotalBlendedQuantity}}</div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"recallBrokeredDr(requestToUpdate)\" class=\"btn btn-primary btn-lg\">Recall</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- recall brokered dr end -->","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { DeliveryRequestViewModel, DropAddressModel, DelRequestsByJobModel, JobDetailsWithOrders, CustomerJobsForCarrier } from '../models/DispatchSchedulerModels';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { DataService } from '../service/data.service';\r\nimport { sortBy } from 'src/app/my.functions';\r\nimport { CarrierService } from '../service/carrier.service';\r\nimport { DeliveryRequestService } from 'src/app/delivery-request-display/services/DeliveryRequestService';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\r\nimport { BrokeredDrCarrierStatus } from 'src/app/app.enum';\r\nimport { UtilService } from '../service/util.service';\r\ndeclare var IsCarrierCompany: boolean;\r\n\r\n@Component({\r\n    selector: 'app-delivery-request',\r\n    templateUrl: './delivery-request.component.html',\r\n    styleUrls: ['./delivery-request.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DeliveryRequestComponent implements OnInit {\r\n\r\n    @Input() public Title: string = '';\r\n    @Input() public TitleClass: string = 'mustgo';\r\n    @Input() public CollapaseId: string = 'collapse1';\r\n    @Input() public CollapaseInClass: string = '';\r\n    @Input() public isToggleDrPanel: boolean = false;\r\n    @Input() public Locations: DelRequestsByJobModel[] = [];\r\n    @Input() public PriorityTabCount: number = 0;\r\n    public tempDeliveryRequest: DeliveryRequestViewModel[] = [];\r\n    public DrForm: FormGroup;\r\n    public _showQueueIcon: boolean = true;\r\n    public _dragEnabled: boolean = true;\r\n    public IsCarrierCompany: boolean = false;\r\n\r\n    @Output() onDeliveryRequestEdit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private deliveryRequestService: DeliveryRequestService,\r\n        private carrierService: CarrierService,\r\n        private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private utilService: UtilService) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this._showQueueIcon = true;\r\n        this.tempDeliveryRequest = [];\r\n        this.deliveryRequestService.localQueueIcon.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this._showQueueIcon = data as boolean;\r\n            }\r\n        });\r\n        if (typeof IsCarrierCompany !== 'undefined') {\r\n            this.IsCarrierCompany = IsCarrierCompany ? true : false;\r\n        }\r\n\r\n        this.DrForm = this.fb.group({\r\n            DeliveryRequests: this.getDeliveryRequestFormArray([])\r\n        });\r\n    }\r\n    bindDeliveryRequests(jobId: number) {\r\n        let location = this.Locations.find(t => t.JobId == jobId);\r\n        if (location) {\r\n            //var drs = location.DeliveryRequests;\r\n            //if (location.DeliveryRequests.some(x => x.IsBlendedRequest === true)){\r\n            //    drs = groupDrsByBlendGroupId(location.DeliveryRequests);\r\n            //}\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(location.DeliveryRequests)\r\n            });\r\n        }\r\n    }\r\n\r\n    bindTBDDeliveryRequests(TbdGroupId: string) {\r\n        let location = this.Locations.find(t => t.TBDGroupId == TbdGroupId);\r\n        if (location) {\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(location.DeliveryRequests)\r\n            });\r\n        }\r\n    }\r\n    \r\n    getDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[]): FormArray {\r\n        delReqs = sortBy(delReqs, 'ProductType');\r\n        let _drArray = this.fb.array([]);\r\n        delReqs && delReqs.forEach(x => {\r\n            var _form = this.utilService.getDeliveryRequestFormNew(x);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    EditDeliveryRequest(deliveryReq: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: deliveryReq, isDeleted: false, isAssignCarrier: false });\r\n    }\r\n\r\n    DeleteDeliveryRequest(deliveryReq: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: deliveryReq, isDeleted: true, isAssignCarrier: false });\r\n    }\r\n\r\n    MakeDrop(deliveryReq: any) {\r\n        let delReq = deliveryReq.value as DeliveryRequestViewModel;\r\n        if (!delReq.IsTBD) {\r\n            this.carrierService.getDeliveryRequestById(delReq.ParentId).subscribe(x => {\r\n                if (x.OrderId != null && x.TrackableScheduleId != null) {\r\n                    let dropUrl = '/Supplier/Invoice/CreateNew?orderId=' + x.OrderId + '&trackableScheduleId=' + x.TrackableScheduleId;\r\n                    window.location.href = dropUrl;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.AddLocationForMissedTBD(deliveryReq);\r\n        }\r\n    }\r\n\r\n    MoveActiveQueueRequest(drId: string, jobId: number, blendGroupId: string) {\r\n        let drIds: string[] = [];\r\n        let delReqs: DeliveryRequestViewModel[] = [];\r\n        if (blendGroupId) {\r\n            this.DrForm.controls['DeliveryRequests'].value.filter(t => t.BlendedGroupId == blendGroupId).forEach(t => {\r\n                drIds.push(t.Id);\r\n            });\r\n        }\r\n        else {\r\n            drIds.push(drId);\r\n        }\r\n        drIds.forEach(dr => {\r\n            let index = this.tempDeliveryRequest.findIndex(top => top.Id == dr);\r\n            if (index === -1) {\r\n                let drLocationIndex = this.Locations.findIndex(location =>\r\n                    location.JobId == jobId);\r\n                if (this.Locations[drLocationIndex] && this.Locations[drLocationIndex].DeliveryRequests) {\r\n                    var delReq = this.Locations[drLocationIndex].DeliveryRequests.find(t => t.Id == dr);\r\n                    if (delReq != null) {\r\n                        delReq.WindowMode = 1;\r\n                        delReq.QueueMode = 2;\r\n                        this.tempDeliveryRequest.push(delReq);\r\n                        delReqs.push(delReq);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.deliveryRequestService.pushItemData(delReqs);\r\n    }\r\n\r\n    MoveToActiveQueue(drId: string, jobId: number) {\r\n        let index = this.tempDeliveryRequest.findIndex(top => top.Id == drId);\r\n        if (index === -1) {\r\n            let drLocationIndex = this.Locations.findIndex(location =>\r\n                location.JobId == jobId);\r\n            if (this.Locations[drLocationIndex] && this.Locations[drLocationIndex].DeliveryRequests) {\r\n                var dr = this.Locations[drLocationIndex].DeliveryRequests.find(t => t.Id == drId);\r\n                if (dr != null) {\r\n                    dr.WindowMode = 1;\r\n                    dr.QueueMode = 2;\r\n                    this.tempDeliveryRequest.push(dr);\r\n                    this.deliveryRequestService.pushItemData(dr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public trackByDrId(index: number, dr): any {\r\n        return dr.controls['Id'].value\r\n    }\r\n\r\n    public onDrag() {\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    public getDraggedDrs(item: any, isLocation: boolean): any {\r\n        let jobId, Id, GroupParentId: string = '', isTBDRequest: boolean = false, tbdGroupId: string = '';\r\n        let isMarineDR = false;\r\n        if (isLocation) {\r\n            jobId = item.JobId;\r\n            Id = null;\r\n            isTBDRequest = item.IsTBD;\r\n            tbdGroupId = item.TBDGroupId;\r\n        }\r\n        else {\r\n            jobId = item.controls['JobId'].value;\r\n            Id = item.controls['Id'].value;\r\n            isMarineDR = item.controls['IsMarine'].value;\r\n            GroupParentId = item.controls['GroupParentDRId'].value;\r\n            isTBDRequest = item.controls['IsTBD'].value;\r\n            tbdGroupId = item.controls['TBDGroupId'].value;\r\n        }\r\n        let drs = this.dataService.AllDeliveryRequestsSubject.value;\r\n\r\n        if (GroupParentId == '' && !isMarineDR) {\r\n            let filtered = [];\r\n            if (!isTBDRequest) {\r\n                filtered = drs.filter(x => x.JobId == jobId && !x.IsMarine && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n            }\r\n            else {\r\n                filtered = drs.filter(x => x.TBDGroupId == tbdGroupId && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n            }\r\n            if (filtered.length == 0 && !Id) { //if a location is dragged and it is having only one marine dr, drag it to load\r\n                if (!isTBDRequest) {\r\n                    filtered = drs.filter(x => x.JobId == jobId && x.IsMarine && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n                }\r\n                else {\r\n                    filtered = drs.filter(x => x.TBDGroupId == tbdGroupId && x.IsMarine && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n                }\r\n                if (filtered.length > 1) {\r\n                    filtered = [];\r\n                }\r\n            }\r\n            if (filtered.length == 0 && !Id) {\r\n                if (!isTBDRequest) {\r\n                    filtered = drs.filter(x => x.JobId == jobId && !x.IsMarine && !x.IsBrokered);\r\n                }\r\n                else {\r\n                    filtered = drs.filter(x => x.TBDGroupId == tbdGroupId && !x.IsMarine && !x.IsBrokered);\r\n                }\r\n                if (filtered.length > 1) {\r\n                    filtered = [];\r\n                }\r\n            }\r\n            if (filtered.length > 0) {\r\n                filtered.forEach(x => {\r\n                    x.PreLoadedFor = null;\r\n                    x.PreLoadInfo = null;\r\n                    x.PostLoadedFor = null;\r\n                    x.PostLoadInfo = null;\r\n                });\r\n                let brokeredDrs = filtered.filter(x => x.CarrierStatus == 2);\r\n                let nonbrokeredDrs = filtered.filter(x => x.CarrierStatus == 0 || x.CarrierStatus == 3 || x.CarrierStatus == 4);\r\n                filtered = sortBy(nonbrokeredDrs, 'ProductType');\r\n                if (brokeredDrs.length > 0) {\r\n                    brokeredDrs.forEach(x => {\r\n                        filtered.push(x);\r\n                    });\r\n                }\r\n            }\r\n            //if (isMultipleSplitDrs) {\r\n            //    Declarations.msgwarning(\"Selected job is having multiple split delivery requests.\", undefined, undefined);\r\n            //}\r\n            return filtered;\r\n        }\r\n        else {\r\n            let filtered = drs.filter(x => x.Id == Id);\r\n            if (filtered && filtered.length && filtered[0].BlendedGroupId) {\r\n                filtered = drs.filter(x => x.BlendedGroupId == filtered[0].BlendedGroupId);\r\n            }\r\n            filtered.forEach(x => {\r\n                x.PreLoadedFor = null;\r\n                x.PreLoadInfo = null;\r\n                x.PostLoadedFor = null;\r\n                x.PostLoadInfo = null;\r\n            });\r\n            return filtered;\r\n        }\r\n    }\r\n\r\n    public AssignCarrier(dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isAssignCarrier: true, });\r\n    }\r\n\r\n    public recallBrokeredDrRequest(dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isDeleted: false, isRecallDr: true });\r\n    }\r\n    public AddLocationForMissedTBD(dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isCreateDeliveryForTBD: true, isDeliveryGroup: false });\r\n    }\r\n\r\n    public changeBrokeredDrStatus(status: BrokeredDrCarrierStatus, dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isApproveRejectBrokeredDr: true, CarrierStatus: status });\r\n    }\r\n    public SpiltDeliveryRequests(inputData: any) {\r\n        let deliveryReq = inputData.value as DeliveryRequestViewModel;\r\n        let drs: DeliveryRequestViewModel[] = [];\r\n        if (!deliveryReq.IsBlendedRequest) {\r\n            drs.push(deliveryReq);\r\n        }\r\n        else {\r\n            this.DrForm.controls['DeliveryRequests'].value.filter(t => t.BlendedGroupId == deliveryReq.BlendedGroupId).forEach(t => {\r\n                drs.push(t);\r\n            });\r\n        }\r\n        this.dataService.setSplitDRsInfoSubject(drs);\r\n    }\r\n}\r\n","<div class=\"{{TitleClass}} dr-panel-body\">\r\n    <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#{{CollapaseId}}\" [attr.aria-expanded]=\"CollapaseInClass ? true : false \" id=\"icon_{{CollapaseId}}\">\r\n        <div class=\"panel-heading  {{TitleClass}}_bg\">\r\n            <h2 class=\"mt0 ml5 font-weight-600 fs13 {{TitleClass}} d-flex align-items-center justify-content-between\">\r\n                <span class=\"text-color\">{{Title}}</span>\r\n\r\n                <span class=\"fa-stack fa-sm icon-color-b mr5\">\r\n                    <i class=\"fas fa-circle fa-stack-2x color-lightgrey\"></i>\r\n                    <i class=\"fas  fa-stack-1x fa-inverse {{CollapaseId}}_icon \" [ngClass]=\"CollapaseInClass == 'show' ? 'fa-chevron-up' : 'fa-chevron-down'\"></i>\r\n                </span>\r\n            </h2>\r\n\r\n        </div>\r\n    </a>\r\n    <div id=\"{{CollapaseId}}\" class=\"panel-collapse collapse {{CollapaseInClass}}\">\r\n        <div class=\"panel-body\" [ngClass]=\"{'max-height-single': PriorityTabCount === 1, 'max-height-twice':PriorityTabCount === 2 }\">\r\n            <ng-container *ngFor=\"let location of Locations; let i = index;\">\r\n                <div class=\"dr-queue dr-color-default\" [ngClass]=\"{'mustgo-status': (location.Priority==1 && TitleClass == 'missed') , 'shouldgo-status': (location.Priority==2 && TitleClass == 'missed') ,'couldgo-status': (location.Priority==3 && TitleClass == 'missed')}\">\r\n                    <div *ngIf=\"!location.IsTBD\" class=\"row\"  draggable [dragEnabled]=\"_dragEnabled\" [dragData]=\"{Data: getDraggedDrs(location, true)}\" (onDrag)=\"onDrag()\">\r\n                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\"{{(location.DRQueueAttributes && location.DRQueueAttributes.CustomerName)? location.CustomerCompany +' -'  :''}} {{location.JobName}}- {{location.JobAddress}}, {{location.JobCity}} {{(location.DRQueueAttributes && location.DRQueueAttributes.TrailerCompatibility)? location.TrailerCompatibility :''}}\">\r\n                            <div class=\"job-location\">\r\n                                {{(location.JobName.length > 8) ? (location.JobName | slice:0:8)+'..':(location.JobName) }}-&nbsp;\r\n                            </div>\r\n                            <div class=\"job-city\">\r\n                                {{(location.JobAddress.length > 8) ? (location.JobAddress | slice:0:8)+'..':(location.JobAddress) }},&nbsp;\r\n                            </div>\r\n                            <div class=\"job-city\">\r\n                                {{(location.JobCity.length > 8) ? (location.JobCity | slice:0:8)+'..':(location.JobCity) }}\r\n                            </div>\r\n                            <div class=\"custom_settings\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.TrailerCompatibility\">\r\n                                <div class=\"compability-type\">\r\n                                    {{location.TrailerCompatibility}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"custom_settings\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.HoursToCoverDistance\">\r\n                            <span class=\"duration\" *ngIf=\"location.HoursToCoverDistance\">\r\n                                {{location.HoursToCoverDistance}} hrs\r\n                            </span>\r\n                        </div>\r\n                        <span class=\"click-icon\">\r\n                            <span class=\"custom_settings mr5\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.DeliveryShift\">\r\n                                <i class=\"fas fa-moon fs12\" *ngIf=\"location.IsOnlyNightDelivery == true\"></i>\r\n                            </span>\r\n                            <a id=\"{{TitleClass}}-dr-{{i}}\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" (click)=\"bindDeliveryRequests(location.JobId)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                    <div *ngIf=\"location.IsTBD\" class=\"row\" draggable [dragEnabled]=\"_dragEnabled\" [dragData]=\"{Data: getDraggedDrs(location, true)}\" (onDrag)=\"onDrag()\">\r\n                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\" TBD- {{location.ProductType +' -'}} {{ location.RequiredQuantity==0?location.ScheduleQuantityTypeText:location.RequiredQuantity + (( location.UoM == 1 ? ' G' : ' L'))}}\">\r\n                            <!-- <div class=\"custom_settings\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.CustomerName\"> -->\r\n                            <div class=\"brand-name\" *ngIf=\"location.RequiredQuantity > 0;else ScheduleQuantityTypeText\">\r\n                                TBD - {{\r\n (location.ProductType.length>10)? (location.ProductType | slice:0:8)+'..':\r\n                                   (location.ProductType)\r\n                                }} {{'(' +location.RequiredQuantity + ( location.UoM == 1 ? ' G' : ' L' ) +')'  }}\r\n\r\n                                {{ (location.DeliveryRequests.length >1)?': (+'+ (location.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                            </div>\r\n                            <ng-template #ScheduleQuantityTypeText>\r\n                                <div class=\"brand-name\">\r\n                                    TBD - {{ (location.ProductType.length>10)? (location.ProductType | slice:0:8)+'..':(location.ProductType)}} {{'(' +location.ScheduleQuantityTypeText+')' }} {{ (location.DeliveryRequests.length >1)?': (+'+ (location.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                </div>\r\n                            </ng-template>\r\n                            <!-- </div>                           -->\r\n                        </div>\r\n                        <span class=\"click-icon\">\r\n                            <span class=\"custom_settings mr5\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.DeliveryShift\">\r\n                                <i class=\"fas fa-moon fs12\" *ngIf=\"location.IsOnlyNightDelivery == true\"></i>\r\n                            </span>\r\n                            <a id=\"{{TitleClass}}-dr-{{i}}\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" (click)=\"bindTBDDeliveryRequests(location.TBDGroupId)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <div class=\"col-sm-12 text-center\" *ngIf=\"Locations.length==0\">\r\n                <i class=\"fa fas fa-exclamation-triangle opacity8 fs12\"></i>\r\n                <label class=\"color-grey fs12 mb0 ml10\">No request available</label>\r\n            </div>\r\n            <!-- <div class=\"bg-white z-index5 loading-wrapper2\" *ngIf=\"_showsmallLoder\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" id=\"expandDS\">\r\n        <div class=\"row\">\r\n            <ng-container *ngFor=\"let dr of DrForm.controls['DeliveryRequests']['controls']; let i = index; trackBy: trackByDrId\">\r\n                <div *ngIf=\"dr.controls['IsBlendedRequest'].value==false || dr.controls['IsBlendedDrParent'].value==true\" class=\"col-12 product-details\" [ngClass]=\"{'mustgo-status': (dr.controls['Priority'].value==1) , 'shouldgo-status': (dr.controls['Priority'].value==2) ,'couldgo-status': (dr.controls['Priority'].value==3)}\" draggable [dragEnabled]=\"_dragEnabled\" [dragData]=\"{Data: getDraggedDrs(dr, false)}\" (onDrag)=\"onDrag()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <div class=\"product-name\">\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value === true\">{{dr.controls['AdditiveProductName'].value}} {{dr.controls['BlendedProductName'].value}}</span>\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value != true\">{{dr.controls['ProductType'].value}}</span>\r\n                                <span class=\"recurring_text ml5\" *ngIf=\"dr.controls['GroupParentDRId'].value!=''\"><i class=\"fas fa-unlink color-black\" title=\"Sub DR\"></i></span>\r\n                                <span class=\"recurring_text ml5\" *ngIf=\"dr.controls['isRecurringSchedule'].value===true\"><i class=\"fas fa-sync color-black\" title=\"Recurring\"></i></span>\r\n                                <span *ngIf=\"dr.controls['IsAutoCreatedDR'].value==true\">\r\n                                    <i class=\"fas fa-magic ml10\" title=\"Auto-Generated\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"product-sub-text\">\r\n                                <p class=\"deliverywindow fs10\" *ngIf=\"dr.controls['DeliveryWindow'].value!=''\">{{dr.controls['DeliveryWindow'].value}}</p>\r\n                                <p class=\"recurring_dr\" *ngIf=\"dr.controls['isRecurringSchedule'].value==true\">{{dr.controls['RecurringScheduleInfo'].value}}</p>\r\n                            </div>\r\n                            <div class=\"product-sub-text\">\r\n                                <p class=\"deliverywindow fs10\" *ngIf=\"dr.controls['IsMarine'].value==true\">{{dr.controls['DeliveryDateStartTime'].value}}</p>\r\n\r\n                                <ng-container *ngIf=\"dr.controls['IsMarine'].value\">\r\n\r\n                                    <p class=\"recurring_dr\" *ngIf=\"dr.controls['Berth'].value\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.controls['Vessel'].value}}-{{dr.controls['Berth'].value}}\">\r\n                                        {{(dr.controls['Vessel'].value.length > 8) ? (dr.controls['Vessel'].value | slice:0:8)+'..':(dr.controls['Vessel'].value) }}\r\n                                        -\r\n                                        {{(dr.controls['Berth'].value.length > 8) ? (dr.controls['Berth'].value | slice:0:8)+'..':(dr.controls['Berth'].value) }}\r\n                                    </p>\r\n\r\n                                    <p class=\"recurring_dr\" *ngIf=\"!dr.controls['Berth'].value\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.controls['Vessel'].value}}\">\r\n                                        {{(dr.controls['Vessel'].value.length > 8) ? (dr.controls['Vessel'].value | slice:0:8)+'..':(dr.controls['Vessel'].value) }}\r\n                                    </p>\r\n\r\n                                </ng-container>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==false\">{{dr.controls['RequiredQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==true\">{{dr.controls['TotalBlendedQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value == 0\">{{dr.controls['ScheduleQuantityTypeText'].value}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"dr.controls['ScheduleStartTime'].value && dr.controls['ScheduleEndTime'].value\">\r\n                            <div class=\"col-md-6\" style=\"font-size:11px;\">\r\n                                <label >\r\n                                    {{dr.controls['ScheduleStartTime'].value}} - {{ dr.controls['ScheduleEndTime'].value}}\r\n                                </label>\r\n                            </div>\r\n                    </div>\r\n                    <div class=\"icon-tray\">\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Split DR\" *ngIf=\"dr.controls['IsSpiltDRIconVisible'].value && !dr.get('IsBlendedRequest').value\">\r\n                            <a (click)=\"SpiltDeliveryRequests(dr)\" data-toggle=\"modal\" data-target=\"#splitDR\"><i class=\"fa fa-unlink fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Edit\">\r\n                            <a (click)=\"EditDeliveryRequest(dr)\"><i class=\"fa fa-edit fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Delete\" *ngIf=\"!(dr.controls['CreatedByCompanyId'].value != dr.controls['AssignedToCompanyId'].value && dr.controls['CarrierStatus'].value==2)\">\r\n                            <a (click)=\"DeleteDeliveryRequest(dr)\"><i class=\"fa fa-trash-alt fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Move to Clipboard\" *ngIf=\"_showQueueIcon===true\">\r\n                            <a (click)=\"MoveActiveQueueRequest(dr.controls['Id'].value, dr.controls['JobId'].value, dr.controls['BlendedGroupId'].value)\"><i class=\"fas fa-running fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Assign Carrier/Supplier\" *ngIf=\"dr.controls['isRecurringSchedule'].value==false && IsCarrierCompany==false && dr.controls['IsTBD'].value==false\">\r\n                            <a (click)=\"AssignCarrier(dr)\"><img src=\"/Content/images/frontal-truck.svg\" class=\"color-black mtm5\" width=\"15\"></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Drop\" *ngIf=\"dr.controls['ParentId'].value != null\">\r\n                            <a (click)=\"MakeDrop(dr)\"><i class=\"fa fas fa-dollar fs13\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"dr.controls['IsBlendedRequest']?.value\">\r\n                        <span class=\"fs12 pull-right font-weight-bold\">Blend</span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport { CarrierService } from '../../service/carrier.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { DeliveryRequestViewModel, SplitBlendDRModel } from '../../models/DispatchSchedulerModels';\r\nimport { getUniqueId } from '../../../my.functions';\r\nimport { RegExConstants } from 'src/app/app.constants';\r\ndeclare var jQuery: any;\r\n@Component({\r\n    selector: 'app-split-delivery-request',\r\n    templateUrl: './split-delivery-request.component.html',\r\n    styleUrls: ['./split-delivery-request.component.css'],\r\n})\r\nexport class SplitDeliveryRequestComponent implements OnInit {\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService) { }\r\n    public SplitDRForm: FormGroup;\r\n    public SplitBlendDRForm: FormGroup;\r\n    public defaultSplitDRsValue = 2;\r\n    public productType: string;\r\n    public siteId: string;\r\n    public jobName: string;\r\n    public jobAddress: string;\r\n    public jobCity: string;\r\n    public totalQuantity: number;\r\n    public originalTotalQuantity: number;\r\n    public remainingQuantity: number;\r\n    public UoM: string;\r\n    public IsBlendRequest: boolean = false;\r\n    public validateQtyStatus: boolean = true;\r\n    public validateQtyMessage: string = '';\r\n    public splitDrs: SplitBlendDRModel[] = [];\r\n    public _loading: boolean = false;\r\n    public deliveryLevelPO: string ;\r\n    @Output() onRaiseDR: EventEmitter<any> = new EventEmitter<any>();\r\n    ngOnInit() {\r\n        this.SplitDRForm = this.initForm();\r\n        this.SplitBlendDRForm = this.initSplitBlendDRForm([]);\r\n    }\r\n    public getDeliveryRequestInfo(deliveryReqs: DeliveryRequestViewModel[]) {\r\n        this.IsBlendRequest = deliveryReqs.some(t => t.IsBlendedRequest);\r\n        this.splitDrs = [];\r\n        if (this.IsBlendRequest) {\r\n            deliveryReqs.forEach(t => {\r\n                this.splitDrs.push({ OrderId: t.OrderId, ParentDrId: t.Id, RequiredQuantity: null, ProductType: t.ProductType, FuelType: t.FuelType, UoM: t.UoM });\r\n            });\r\n            this.SplitBlendDRForm = this.initSplitBlendDRForm(this.splitDrs);\r\n        }\r\n        let deliveryReq = deliveryReqs[0];\r\n        this.productType = this.IsBlendRequest ? deliveryReq.AdditiveProductName + ' ' + deliveryReq.BlendedProductName : deliveryReq.ProductType;\r\n        this.siteId = deliveryReq.SiteId;\r\n        this.jobName = deliveryReq.JobName;\r\n        this.jobAddress = deliveryReq.JobAddress;\r\n        this.jobCity = deliveryReq.JobCity;\r\n        this.totalQuantity = this.IsBlendRequest ? deliveryReq.TotalBlendedQuantity : deliveryReq.RequiredQuantity;\r\n        this.originalTotalQuantity = this.IsBlendRequest ? deliveryReq.TotalBlendedQuantity : deliveryReq.RequiredQuantity;\r\n        this.remainingQuantity = this.IsBlendRequest ? deliveryReq.TotalBlendedQuantity : deliveryReq.RequiredQuantity;\r\n        this.deliveryLevelPO = deliveryReq.DeliveryLevelPO;\r\n        this.UoM = deliveryReq.UoM == 1 ? \"G\" : \"L\";\r\n        this.SplitDRForm = this.initForm();\r\n        let parentDRId = this.SplitDRForm.get('ParentDRId') as FormControl;\r\n        parentDRId.patchValue(deliveryReq.Id);\r\n        let requiredQtyDetais = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n            requiredQtyDetais.push(this.getRequiredQty());\r\n        }\r\n        if (requiredQtyDetais.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n        }\r\n    }\r\n    initForm(): FormGroup {\r\n        return this.fb.group({\r\n            ParentDRId: this.fb.control(''),\r\n            NoOfSubDRs: this.fb.control('0', [Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0)]),\r\n            SubDRType: this.fb.control('1'),\r\n            RequiredQtyDetails: this.fb.array([])\r\n        });\r\n    }\r\n\r\n    initSplitBlendDRForm(blendDrs: SplitBlendDRModel[]): FormGroup {\r\n        let _formGroup = this.fb.group({\r\n            splitDrArray: this.fb.array([])\r\n        });\r\n\r\n        let splitDrArray = _formGroup.get('splitDrArray') as FormArray;\r\n        for (var i = 0; i < 2; i++) {\r\n            splitDrArray.push(this.getsplitDrArray(blendDrs));\r\n        }\r\n        return _formGroup;\r\n    }\r\n\r\n    getsplitDrArray(blendDrs: SplitBlendDRModel[]) {\r\n        let _formGroup = this.fb.group({\r\n            BlendDrArray: this.fb.array([]),\r\n            BlendGroupId: this.fb.control(getUniqueId())\r\n        });\r\n\r\n        let blendDrArr = _formGroup.get('BlendDrArray') as FormArray;\r\n        blendDrs.forEach(t => {\r\n            blendDrArr.push(this.getSplitDRForm(t));\r\n        })\r\n\r\n        return _formGroup;\r\n    }\r\n\r\n    getSplitDRForm(blendDr: SplitBlendDRModel) {\r\n        return this.fb.group({\r\n            OrderId: this.fb.control(blendDr.OrderId, [Validators.required]),\r\n            ParentDrId: this.fb.control(blendDr.ParentDrId, [Validators.required]),\r\n            RequiredQuantity: this.fb.control(null, [Validators.required, Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0.00001)]),\r\n            ProductType: this.fb.control(blendDr.ProductType),\r\n            FuelType: this.fb.control(blendDr.FuelType),\r\n            UoM: this.fb.control(blendDr.UoM)\r\n        });\r\n    }\r\n\r\n    getRequiredQty(): FormGroup {\r\n        return this.fb.group({\r\n            RequiredQty: this.fb.control('', [Validators.required, Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0.00001)]),\r\n            DeliveryLevelPO : this.fb.control(this.deliveryLevelPO)\r\n        })\r\n    }\r\n    get f() {\r\n        return this.SplitDRForm.controls;\r\n    }\r\n    removeItem(j: number) {\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.removeAt(j);\r\n        if (requiredQtyDetails.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateQtyDetails();\r\n        }\r\n        let subDRType = this.SplitDRForm.get('SubDRType') as FormControl;\r\n        if (subDRType.value == 2) {\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                noOfSubDRs.setValue(parseFloat(noOfSubDRs.value) - 1);\r\n            }\r\n        }\r\n    }\r\n    removeBlendDr(i: number) {\r\n        let splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        splitDrArray.removeAt(i);\r\n        if (splitDrArray.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateBlendDrQtyDetails();\r\n        }\r\n    }\r\n    removeBlendDrItem(i: number, j: number) {\r\n        let splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        let blendDrArray = splitDrArray.controls[i].get('BlendDrArray') as FormArray;\r\n        blendDrArray.removeAt(j);\r\n        if (blendDrArray.controls.length == 0) {\r\n            splitDrArray.removeAt(i);\r\n        }\r\n        if (splitDrArray.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateBlendDrQtyDetails();\r\n        }\r\n    }\r\n    validateBlendDrQtyInfo() {\r\n        var totalQty = 0;\r\n        var splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        for (var i = 0; i < splitDrArray.controls.length; i++) {\r\n            var blendDrArray = splitDrArray.controls[i].get('BlendDrArray') as FormArray;\r\n            for (var j = 0; j < blendDrArray.controls.length; j++) {\r\n                let requiredQ = blendDrArray.controls[j].get('RequiredQuantity').value;\r\n                if (requiredQ) {\r\n                    totalQty = totalQty + parseFloat(requiredQ);\r\n                }\r\n            }\r\n        }\r\n        if (totalQty >= this.originalTotalQuantity) {\r\n            this.totalQuantity = totalQty\r\n            this.remainingQuantity = 0\r\n        }\r\n        else\r\n            this.remainingQuantity = this.totalQuantity - totalQty;\r\n\r\n        if (this.remainingQuantity >= 0) {\r\n            this.validateQtyStatus = true;\r\n        }\r\n        else {\r\n            if (this.remainingQuantity <= 0) {\r\n                this.totalQuantity = totalQty\r\n                this.remainingQuantity = 0;\r\n            }\r\n            this.validateQtyStatus = true;\r\n        }\r\n    }\r\n    caculateBlendDrQtyDetails() {\r\n        var totalQty = 0;\r\n        var splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        for (var i = 0; i < splitDrArray.controls.length; i++) {\r\n            var blendDrArray = splitDrArray.controls[i].get('BlendDrArray') as FormArray;\r\n            for (var j = 0; j < blendDrArray.controls.length; j++) {\r\n                let requiredQ = blendDrArray.controls[j].get('RequiredQuantity').value;\r\n                if (requiredQ) {\r\n                    totalQty = totalQty + parseFloat(requiredQ);\r\n                }\r\n            }\r\n        }\r\n        this.remainingQuantity = this.totalQuantity - totalQty;\r\n    }\r\n\r\n    addBlendDR() {\r\n        let splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        splitDrArray.push(this.getsplitDrArray(this.splitDrs));\r\n\r\n        if (splitDrArray.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateBlendDrQtyDetails();\r\n        }\r\n    }\r\n\r\n    addDR() {\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.push(this.getRequiredQty());\r\n        if (requiredQtyDetails.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateQtyDetails();\r\n        }\r\n        let subDRType = this.SplitDRForm.get('SubDRType') as FormControl;\r\n        if (subDRType.value == 2) {\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                noOfSubDRs.setValue(parseFloat(noOfSubDRs.value) + 1);\r\n            }\r\n        }\r\n    }\r\n    validateQty(tfxQty: any) {\r\n        this.validateQtyMessage = '';\r\n\r\n        var currentQty = tfxQty.controls['RequiredQty'].value;\r\n        if (RegExConstants.Integer.test(currentQty) || RegExConstants.Float.test(currentQty)) {\r\n            var requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n            if (requiredQtyDetails.controls.length < this.defaultSplitDRsValue) {\r\n                this.validateQtyStatus = false;\r\n                this.validateQtyMessage = 'Atleast 2 sub delivery request required.';\r\n                return;\r\n            }\r\n            this.validateQtyInfo();\r\n        }\r\n    }\r\n    validateBlendDrQty(tfxQty: any) {\r\n        this.validateQtyMessage = '';\r\n\r\n        var currentQty = tfxQty.controls['RequiredQuantity'].value;\r\n        if (RegExConstants.Integer.test(currentQty) || RegExConstants.Float.test(currentQty)) {\r\n            var splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n            if (splitDrArray.controls.length < this.defaultSplitDRsValue) {\r\n                this.validateQtyStatus = false;\r\n                this.validateQtyMessage = 'Atleast 2 sub delivery request required.';\r\n                return;\r\n            }\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n    }\r\n    validateQtyInfo() {\r\n        var totalQty = 0;\r\n        var requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        for (var i = 0; i < requiredQtyDetails.controls.length; i++) {\r\n            var requiredQ = requiredQtyDetails.controls[i].get('RequiredQty').value;\r\n            if (requiredQ != '') {\r\n                totalQty = totalQty + parseFloat(requiredQ);\r\n            }\r\n        }\r\n        if (totalQty >= this.originalTotalQuantity) {\r\n            this.totalQuantity = totalQty\r\n            this.remainingQuantity = 0\r\n        }\r\n        else\r\n            this.remainingQuantity = this.totalQuantity - totalQty;\r\n\r\n        if (this.remainingQuantity >= 0) {\r\n            this.validateQtyStatus = true;\r\n        }\r\n        else {\r\n            if (this.remainingQuantity <= 0) {\r\n                this.totalQuantity = totalQty\r\n                this.remainingQuantity = 0;\r\n            }\r\n            this.validateQtyStatus = true;\r\n        }\r\n    }\r\n    caculateQtyDetails() {\r\n        var totalQty = 0;\r\n        var requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        for (var i = 0; i < requiredQtyDetails.controls.length; i++) {\r\n            var requiredQ = requiredQtyDetails.controls[i].get('RequiredQty').value;\r\n            if (requiredQ != '') {\r\n                totalQty = totalQty + parseFloat(requiredQ);\r\n            }\r\n        }\r\n        this.remainingQuantity = this.totalQuantity - totalQty;\r\n    }\r\n    submitSplitInfo() {\r\n        this._loading = true;\r\n        this.carrierService.splitDeliveryRequests(this.SplitDRForm.value).subscribe(detail => {\r\n            this._loading = false;\r\n            $('#btnSplitCancel').click();\r\n            if (detail.StatusCode == 0) {\r\n                this.onRaiseDR.emit();\r\n                Declarations.msgsuccess(\"Split DRs created successfully.\", undefined, undefined);\r\n                if (this.remainingQuantity > 0) {\r\n                    Declarations.msgwarning(\"The total quantity of sub DRs created is less than the requested quantity.\", undefined, undefined);\r\n                }\r\n            }\r\n            else {\r\n                Declarations.msgerror(detail.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    submitSplitBlendDrInfo() {\r\n        this._loading = true;\r\n        this.carrierService.splitBlendDeliveryRequests(this.SplitBlendDRForm.value).subscribe(detail => {\r\n            this._loading = false;\r\n            $('#btnSplitCancel').click();\r\n            if (detail.StatusCode == 0) {\r\n                this.onRaiseDR.emit();\r\n                Declarations.msgsuccess(\"Split DRs created successfully.\", undefined, undefined);\r\n                if (this.remainingQuantity > 0) {\r\n                    Declarations.msgwarning(\"The total quantity of sub DRs created is less than the requested quantity.\", undefined, undefined);\r\n                }\r\n            }\r\n            else {\r\n                Declarations.msgerror(detail.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n    GenerateSubDRs() {\r\n        let subDRType = this.SplitDRForm.get('SubDRType') as FormArray;\r\n\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.clear();\r\n        if (subDRType.value == 2) {\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                var subDFDRsQty = parseFloat((this.totalQuantity / noOfSubDRs.value).toFixed(2));\r\n                var subDRsQty = parseFloat((this.totalQuantity / noOfSubDRs.value).toFixed(0));\r\n                var finalDRAdditions = subDFDRsQty - subDRsQty;\r\n                finalDRAdditions = finalDRAdditions * noOfSubDRs.value;\r\n                for (var i = 0; i < noOfSubDRs.value; i++) {\r\n                    if (noOfSubDRs.value - 1 == i) {\r\n                        subDRsQty = subDRsQty + Math.round(finalDRAdditions);\r\n                        requiredQtyDetails.push(this.getRequiredQtyWithValue(subDRsQty));\r\n                    }\r\n                    else {\r\n                        requiredQtyDetails.push(this.getRequiredQtyWithValue(subDRsQty));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n                    requiredQtyDetails.push(this.getRequiredQty());\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var requiredfQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                var fQty = noOfSubDRs.value;\r\n                var totalNoOfDRs = Math.round(this.totalQuantity / fQty);\r\n                for (var i = 0; i < totalNoOfDRs; i++) {\r\n                    var totalSubDRQty = this.caculateQty();\r\n                    if (totalSubDRQty > 0) {\r\n                        var finalQty = this.totalQuantity - totalSubDRQty;\r\n                        if (finalQty > fQty) {\r\n                            requiredQtyDetails.push(this.getRequiredQtyWithValue(fQty));\r\n                        }\r\n                        else {\r\n                            requiredQtyDetails.push(this.getRequiredQtyWithValue(finalQty));\r\n                        }\r\n                    }\r\n                    else {\r\n                        requiredQtyDetails.push(this.getRequiredQtyWithValue(fQty));\r\n                    }\r\n                }\r\n                var totalQty = 0;\r\n                for (var i = 0; i < requiredfQtyDetails.controls.length; i++) {\r\n                    var requiredQ = requiredfQtyDetails.controls[i].get('RequiredQty').value;\r\n                    if (requiredQ != '') {\r\n                        totalQty = totalQty + parseFloat(requiredQ);\r\n                    }\r\n                }\r\n                var finalQty = this.totalQuantity - totalQty;\r\n                if (finalQty > 0) {\r\n                    requiredQtyDetails.push(this.getRequiredQtyWithValue(finalQty));\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n                    requiredQtyDetails.push(this.getRequiredQty());\r\n                }\r\n            }\r\n        }\r\n        this.validateQtyInfo();\r\n    }\r\n    getRequiredQtyWithValue(subDRsQty: number): FormGroup {\r\n        return this.fb.group({\r\n            RequiredQty: this.fb.control(subDRsQty, [Validators.required, Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0.00001)]),\r\n            DeliveryLevelPO: this.fb.control(this.deliveryLevelPO)\r\n        })\r\n    }\r\n    clearForm() {\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.clear();\r\n        let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n        noOfSubDRs.setValue(0);\r\n        this.validateQtyInfo();\r\n        for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n            requiredQtyDetails.push(this.getRequiredQty());\r\n        }\r\n    }\r\n    caculateQty(): number {\r\n        var requiredfQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        var totalQty = 0;\r\n        for (var i = 0; i < requiredfQtyDetails.controls.length; i++) {\r\n            var requiredQ = requiredfQtyDetails.controls[i].get('RequiredQty').value;\r\n            if (requiredQ != '') {\r\n                totalQty = totalQty + parseFloat(requiredQ);\r\n            }\r\n        }\r\n        return totalQty;\r\n    }\r\n}\r\n","<div id=\"splitDR\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"SplitDRForm\" *ngIf=\"!IsBlendRequest\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Create Sub DRs</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"fs14 f-normal\">{{productType}}, Location ID: {{siteId}}</div>\r\n                            <small class=\"mb10 fs12 opacity8\">\r\n                                <b>{{jobName}},</b>  {{jobAddress}}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10 align-items-center\">\r\n                        <div class=\"col-sm-8\">\r\n                            <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                                <div class=\"btn-group btn-filter\">\r\n                                    <div class=\"form-check form-check-inline mr-0\">\r\n                                        <input id=\"SubDRType1\" class=\"hide-element\" type=\"radio\" value=\"1\" formControlName=\"SubDRType\" (change)=\"clearForm();\">\r\n                                        <label class=\"btn ml-0\" for=\"SubDRType1\"> Load Per Truck</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline  mr-0\">\r\n                                        <input class=\"hide-element\" type=\"radio\" formControlName=\"SubDRType\" id=\"SubDRType2\" value=\"2\" (change)=\"clearForm();\">\r\n                                        <label class=\"btn\" for=\"SubDRType2\">Equal Sub-DRs</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt5\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"card alert-success pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\">Total</span>\r\n                                {{totalQuantity | number:'1.0-0'}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"card alert-warning pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\">Remaining</span>\r\n                                {{remainingQuantity}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"card alert-warning pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\" *ngIf=\"SplitDRForm.controls['SubDRType'].value==2\"># equal Sub-DRs</span>\r\n                                <span class=\"fs12\" *ngIf=\"SplitDRForm.controls['SubDRType'].value==1\"># Load Per Truck</span>\r\n                                <input type=\"text\" numbersOnly class=\"form-control\" placeholder=\"(Optional)\" formControlName=\"NoOfSubDRs\" (change)=\"GenerateSubDRs()\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"splitdr-height\">\r\n                        <div class=\"row mt5\" [formArrayName]=\"'RequiredQtyDetails'\" *ngFor=\"let tfxQty of SplitDRForm.controls['RequiredQtyDetails']['controls'];  let j = index;\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"mt7\">\r\n                                    <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                        <span>Sub DR <span class=\"badge\">{{j+1}}</span></span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container [formGroupName]=\"j\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Quantity\" formControlName=\"RequiredQty\" (change)=\"validateQty(tfxQty)\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">{{UoM}}</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"tfxQty.controls['RequiredQty'].touched && tfxQty.controls['RequiredQty'].invalid\">\r\n                                            <span class=\"color-maroon\" *ngIf=\"tfxQty.controls['RequiredQty'].errors.required\">Quantity is required.</span>\r\n                                            <span class=\"color-maroon\" *ngIf=\"tfxQty.controls['RequiredQty'].errors.pattern\">Enter only number.</span>\r\n                                            <span class=\"color-maroon\" *ngIf=\"tfxQty.controls['RequiredQty'].errors.min\">Invalid quantity.</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"validateQtyMessage!=''\">\r\n                                            <span class=\"color-maroon\">{{validateQtyMessage}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" placeholder=\"Delivery-Level PO#\" />\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                            <div class=\"col-sm-1\"><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeItem(j)\"></a></div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <button type=\"button\" id=\"btnSplitCancel\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"!SplitDRForm.valid\" (click)=\"submitSplitInfo()\">Create</button>\r\n                        <!-- !validateQtyStatus || -->\r\n                    </div>\r\n                </form>\r\n\r\n                <form [formGroup]=\"SplitBlendDRForm\" *ngIf=\"IsBlendRequest\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Create Sub DRs</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"fs14 f-normal\">{{productType}}, Location ID: {{siteId}}</div>\r\n                            <small class=\"mb10 fs12 opacity8\">\r\n                                <b>{{jobName}},</b>  {{jobAddress}}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt5 mb-2\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"card alert-success pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs13\">Total</span>\r\n                                {{totalQuantity}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"card alert-warning pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\">Remaining</span>\r\n                                {{remainingQuantity}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"splitdr-height\">\r\n                        <ng-container class=\"row mt5\" [formArrayName]=\"'splitDrArray'\" *ngFor=\"let splitDr of SplitBlendDRForm.get('splitDrArray')['controls'];let i = index\">\r\n                            <div class=\"col-sm-12 pl-0\">\r\n                                <div class=\"mt7\">\r\n                                    <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                        <span class=\"font-weight-bold fs12\">Sub DR<span class=\"badge ml-2\">{{i+1}}</span></span>\r\n                                    </label>\r\n                                    <span><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeBlendDr(i)\"></a></span>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"mt-0 mr-2\">\r\n                            <div [formGroupName]=\"i\">\r\n                                <ng-container formArrayName=\"BlendDrArray\" *ngFor=\"let blendDr of splitDr.controls.BlendDrArray.controls;let j = index\">\r\n                                    <div [formGroupName]=\"j\" class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"mt7\">\r\n                                                <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                                    <span>{{blendDr.controls['ProductType'].value}} - {{blendDr.controls['FuelType'].value}} </span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" placeholder=\"Quantity\" formControlName=\"RequiredQuantity\" (change)=\"validateBlendDrQty(blendDr)\">\r\n                                                <div class=\"input-group-append\">\r\n                                                    <span class=\"input-group-text fs11\">{{UoM}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div *ngIf=\"blendDr.controls['RequiredQuantity'].touched && blendDr.controls['RequiredQuantity'].invalid\">\r\n                                                <span class=\"color-maroon\" *ngIf=\"blendDr.controls['RequiredQuantity'].errors.required\">Quantity is required.</span>\r\n                                                <span class=\"color-maroon\" *ngIf=\"blendDr.controls['RequiredQuantity'].errors.pattern\">Enter only number.</span>\r\n                                                <span class=\"color-maroon\" *ngIf=\"blendDr.controls['RequiredQuantity'].errors.min\">Invalid quantity.</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"validateQtyMessage!=''\">\r\n                                                <span class=\"color-maroon\">{{validateQtyMessage}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-2\"><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeBlendDrItem(i,j)\"></a></div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addBlendDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <button type=\"button\" id=\"btnSplitCancel\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"!SplitBlendDRForm.valid\" (click)=\"submitSplitBlendDrInfo()\">Create</button>\r\n                        <!-- !validateQtyStatus || -->\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SbFilterModel } from './models/DispatchSchedulerModels';\r\n\r\n@Component({\r\n    selector: 'app-schedule-builder-filter',\r\n    templateUrl: './schedule-builder-filter.component.html',\r\n    styleUrls: ['./schedule-builder-filter.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScheduleBuilderFilterComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    @Input() public SbFilterData: SbFilterModel;\r\n    @Input() public isDisableControl: boolean;\r\n    @Output() public OnSbFilterApply: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public trailerDdlSettings = {};\r\n    public driverDdlSettings = {};\r\n    public pickupDdlSettings = {};\r\n    @Input() public IsTrailerExists: boolean;\r\n\r\n    ngOnInit() {\r\n        this.pickupDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        this.driverDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        this.trailerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'TrailerId',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 2,\r\n            allowSearchFilter: true,\r\n        };\r\n    }\r\n\r\n    onApplyFilter() {\r\n        this.OnSbFilterApply.emit({ SelectedPickups: this.SbFilterData.SelectedPickups, SelectedDrivers: this.SbFilterData.SelectedDrivers, SelectedTrailers: this.SbFilterData.SelectedTrailers });\r\n    }\r\n\r\n    onTrailerSelect(trailer: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onTrailerDeSelect(trailer: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onTrailerSelectAll(trailers: any) {\r\n        this.SbFilterData.SelectedTrailers = [];\r\n        trailers.forEach(obj => this.SbFilterData.SelectedTrailers.push(obj));\r\n        this.onApplyFilter();\r\n    }\r\n    onTrailerDeSelectAll() {\r\n        this.SbFilterData.SelectedTrailers = [];\r\n        this.onApplyFilter();\r\n    }\r\n\r\n    onDriverSelect(driver: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onDriverDeSelect(driver: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onDriverSelectAll(drivers: any) {\r\n        this.SbFilterData.SelectedDrivers = [];\r\n        drivers.forEach(obj => this.SbFilterData.SelectedDrivers.push(obj));\r\n        this.onApplyFilter();\r\n    }\r\n    onDriverDeSelectAll() {\r\n        this.SbFilterData.SelectedDrivers = [];\r\n        this.onApplyFilter();\r\n    }\r\n\r\n    onPickupSelect(pickup: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onPickupDeSelect(pickup: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onPickupSelectAll(pikups: any) {\r\n        this.SbFilterData.SelectedPickups = [];\r\n        pikups.forEach(obj => this.SbFilterData.SelectedPickups.push(obj));\r\n        this.onApplyFilter();\r\n    }\r\n    onPickupDeSelectAll() {\r\n        this.SbFilterData.SelectedPickups = [];\r\n        this.onApplyFilter();\r\n    }\r\n\r\n    resetFilter() {\r\n        this.SbFilterData.SelectedDrivers = [];\r\n        this.SbFilterData.SelectedTrailers = [];\r\n        this.SbFilterData.SelectedPickups = [];\r\n        this.onApplyFilter();\r\n    }\r\n}\r\n","<div id=\"sb-filter-panel\">\r\n    <div class=\"row btn-schedule-filter\">\r\n        <div class=\"col-sm-12\">\r\n            <a class=\"ml10\" onclick=\"showHideElements('schedule-filter','btn-schedule-filter')\"><i class=\"fas fa-filter\"></i> Filters</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"hide-element schedule-filter\">\r\n        <div class=\"row\">\r\n            <div [ngClass]=\"isDisableControl ? 'col-sm-3' : 'col-sm-4'\" *ngIf=\"IsTrailerExists\">\r\n                <div class=\"form-group mb5\">\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Trailer(s)'\"\r\n                                             [settings]=\"trailerDdlSettings\"\r\n                                             [data]=\"SbFilterData?.Trailers\"\r\n                                             [(ngModel)]=\"SbFilterData.SelectedTrailers\"\r\n                                             (onSelect)=\"onTrailerSelect($event)\" (onDeSelect)=\"onTrailerDeSelect($event)\"\r\n                                             (onSelectAll)=\"onTrailerSelectAll($event)\"\r\n                                             (onDeSelectAll)=\"onTrailerDeSelectAll()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"isDisableControl ? 'col-sm-3' : 'col-sm-4'\">\r\n                <div class=\"form-group mb5\">\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\"\r\n                                             [settings]=\"driverDdlSettings\"\r\n                                             [data]=\"SbFilterData?.Drivers\"\r\n                                             [(ngModel)]=\"SbFilterData.SelectedDrivers\"\r\n                                             (onSelect)=\"onDriverSelect($event)\" (onDeSelect)=\"onDriverDeSelect($event)\"\r\n                                             (onSelectAll)=\"onDriverSelectAll($event)\"\r\n                                             (onDeSelectAll)=\"onDriverDeSelectAll()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"isDisableControl ? 'col-sm-3' : 'col-sm-4'\">\r\n                <div class=\"form-group mb5\">\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Pickup(s)'\"\r\n                                             [settings]=\"pickupDdlSettings\"\r\n                                             [data]=\"SbFilterData?.Pickups\"\r\n                                             [(ngModel)]=\"SbFilterData.SelectedPickups\"\r\n                                             (onSelect)=\"onPickupSelect($event)\" (onDeSelect)=\"onPickupDeSelect($event)\"\r\n                                             (onSelectAll)=\"onPickupSelectAll($event)\"\r\n                                             (onDeSelectAll)=\"onPickupDeSelectAll()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"f-bold\" [ngClass]=\"isDisableControl ? 'col-sm-3 mt10' : 'col-sm-12'\">\r\n                <a class=\"fs12 mr10\" (click)=\"resetFilter()\">Reset Filters</a>\r\n                <a onclick=\"showHideElements('btn-schedule-filter','schedule-filter')\" class=\"fs12\">Close</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { SbGridViewFilterModel } from './models/DispatchSchedulerModels';\n@Component({\n    selector: 'app-schedule-builder-grid-filter',\n    templateUrl: './schedule-builder-grid-filter.component.html',\n    styleUrls: ['./schedule-builder-grid-filter.component.css']\n})\nexport class ScheduleBuilderGridFilterComponent implements OnInit {\n\n    constructor() { }\n    @Input() public SbGridFilterData: SbGridViewFilterModel;\r\n    @Output() public OnSbGridFilterApply: EventEmitter<any> = new EventEmitter<any>();\n    @Input() public isDisableControl: boolean;\n\n    ngOnInit() {\n    }\n    filterLocation() {\n        this.OnSbGridFilterApply.emit({ SearchLocation: this.SbGridFilterData.SearchLocation});\r\n    }\n    resetfilterLocation() {\n        this.SbGridFilterData.SearchLocation = '';\n        this.OnSbGridFilterApply.emit({ SearchLocation: this.SbGridFilterData.SearchLocation });\r\n    }\n}\n","<div id=\"sb-filter-panel\">\r\n    <div class=\"row\">\r\n        <div [ngClass]=\"isDisableControl ? 'col-sm-12' : 'col-sm-12'\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search location\" [(ngModel)]=\"SbGridFilterData.SearchLocation\">\r\n                <div class=\"input-group-append mr5\">\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"filterLocation()\">\r\n                        <i class=\"fa fa-search\"></i>\r\n                    </button>\r\n                </div>\r\n                <button class=\"btn btn-link\" (click)=\"resetfilterLocation()\">\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter, ViewEncapsulation, ViewChild, OnDestroy } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { AddLocationService } from './add-location.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UtilService } from '../../service/util.service';\r\nimport { Geocode, MapConstants, StateModel } from './add-location.model';\r\nimport { DropdownItem, StatelistService } from 'src/app/statelist.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { AddressModel } from 'src/app/invoice/models/DropDetail';\r\nimport * as moment from 'moment';\r\nimport { ConfirmationDialogService } from 'src/app/shared-components/confirmation-dialog/confirmation-dialog.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PricingSectionComponent } from '../../../shared-components/pricing-section/pricing-section.component';\r\nimport { Country, TierPricingType } from 'src/app/app.enum';\r\nimport { DropDown, RegExConstants } from 'src/app/app.constants';\r\n\r\n\r\n@Component({\r\n    selector: 'app-add-location',\r\n    templateUrl: './add-location.component.html',\r\n    styleUrls: ['./add-location.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AddLocationComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() RegionId: FormGroup;\r\n    @Input() MapsApiKey: string;\r\n    @Output() OnTheFlyLocationCreate: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChild(PricingSectionComponent) private pricingModuleComponent: PricingSectionComponent;\r\n    locationForm: FormGroup;\r\n    PickupForm: FormGroup;\r\n    formSubmited = false;\r\n\r\n    _isLoadingProducts = false;\r\n    _opened: boolean = false;\r\n    _loading: boolean = false;\r\n    _initiated: boolean = false;\r\n\r\n    mapConstants: MapConstants = new MapConstants();\r\n    preferencesSetting: any = null;\r\n    isCompanyNameExist: boolean = false;\r\n    isJobNameExist: boolean = false;\r\n    isPhoneNumberValid: boolean = null;\r\n\r\n    allJobList: Array<DropDown> = [];\r\n    currucyList = [];\r\n    CountryList: DropdownItem[] = [];\r\n    CountryGroupList: DropdownItem[] = [];\r\n    statesList: StateModel[] = [];\r\n    filteredStatesList: StateModel[] = [];\r\n    FuelProductsList = [];\r\n    MarineProductsList = [];\r\n    FeeTypesList = [];\r\n    defaultCompanyCountryId = 0;\r\n    CompanyContactPersonsList = [];\r\n\r\n    CompanyContactPersonsDetails: any;\r\n    AllTPOCompaniesList: Array<DropDown> = [];\r\n    //pickup for dr\r\n    BulkPlants: DropdownItem[] = [];\r\n    BulkplantList: DropdownItem[] = [];\r\n    isReadOnly: boolean = false;\r\n    UoM: number = 0;\r\n    Terminals = [];\r\n    _minimumConst = 0.00001;\r\n    CountryBasedZipcodeLabel: string = \"Zip\";\r\n    _loadingAddress: boolean = false;\r\n    IsTBDRequest: boolean = false;\r\n    FuelTypeId: number = null;\r\n    ProductTypeName: string = \"\";\r\n    productDetails: any;\r\n    tbdDrProductId: number;\r\n    tbdDrProductTypeId: number;\r\n    public CompDdlSetting = {};\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private addLocationService: AddLocationService,\r\n        private utilService: UtilService,\r\n        private modalService: NgbModal,\r\n        private stateService: StatelistService,\r\n        private addresService: AddressService,\r\n        private confirmationDialogService: ConfirmationDialogService,\r\n        private dataService: DataService,) { }\r\n\r\n    get f() { return this.locationForm['controls']; }\r\n\r\n    tbdAddLocationSubscription: Subscription = new Subscription();\r\n\r\n    ngOnInit() { this.subscribeTbdAddLocation();\r\n        this.CompDdlSetting = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'id',\r\n            textField: 'text',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n     }\r\n\r\n    ngOnDestroy() { this.tbdAddLocationSubscription ? this.tbdAddLocationSubscription.unsubscribe() : null; }\r\n\r\n    onCompSelect(company: any, isSelected: boolean) {\r\n\r\n        if(isSelected){\r\n          this.f.CustomerDetails.get('CompanyId').setValue(company.id);\r\n          this.companyChanged(company.id);\r\n        }\r\n        else{\r\n          this.CompanyContactPersonsList = [];\r\n          this.allJobList = [];\r\n        }\r\n    \r\n        this.f.CustomerDetails.get('UserId').setValue(null);\r\n        this.f.CustomerDetails.get('PhoneNumber').setValue(null);\r\n        this.f.CustomerDetails.get('Email').setValue(null);\r\n        // this.f.AddressDetails.get('JobId').setValue(null);\r\n        // this.f.AddressDetails.get('JobName').setValue(null);\r\n      }\r\n\r\n    openPanel(TBD_DR?: any) {\r\n\r\n        if (!this.RegionId) {\r\n            Declarations.msgerror(\"Region not selected.\", null, null);\r\n            return;\r\n        }\r\n\r\n        this._initiated ? null : this._initiated = true\r\n        this._opened = true;\r\n        this.formSubmited = false;\r\n        this.mapConstants = new MapConstants();\r\n\r\n        this.IsTBDRequest = TBD_DR? true: false;\r\n        this.initailizeLocationForm();\r\n        this.f.IsTBDRequest.setValue(this.IsTBDRequest);\r\n\r\n        if (TBD_DR) {\r\n            let _this = this;\r\n            if (TBD_DR.ProductTypeId != 10) {\r\n                this.addLocationService.getTfxProduct(TBD_DR.FuelTypeId).subscribe(data => {\r\n                    _this.productDetails = data;\r\n                    if (data) {\r\n                        if (_this.f.FuelDetails.get('FuelDisplayGroupId').value != data.DisplayGroupId) {\r\n                            _this.deliveryTypeChanged(data.DisplayGroupId);\r\n                        }\r\n                        _this.f.FuelDetails.get('FuelDisplayGroupId').setValue(data.DisplayGroupId);\r\n                        _this.f.FuelDetails.get('FuelTypeId').setValue(data.Id);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.f.FuelDetails.get('FuelTypeId').setValue(this.tbdDrProductId);\r\n                this.f.FuelDetails.get('FuelDisplayGroupId').setValue(3);\r\n            }\r\n        }\r\n        else {\r\n            this.IsTBDRequest = false;\r\n            this.FuelTypeId = null;\r\n            this.ProductTypeName = null;\r\n        }\r\n        this.initPickupForm();\r\n        this.getAllTPOCompanies();\r\n        this.getCurrecyList();\r\n        this.getFuelProducts();\r\n        this.getCountries();\r\n        this.getCountryGroup();\r\n        this.getStatesOfAllCountries();\r\n        this.getPreferencesSettings();\r\n    }\r\n\r\n    initailizeLocationForm() {\r\n\r\n        this.locationForm = this.fb.group({\r\n\r\n            //Id: this.fb.control(null),\r\n            SendInvitationLink: this.fb.control(false),\r\n            RegionId: this.fb.control(this.RegionId),\r\n            IsSupressOrderPricing: this.fb.control(true),\r\n            IsMarineLocation: this.fb.control(false),\r\n            PreferenceSettingId: this.fb.control(0),\r\n            IsTBDRequest: this.fb.control(false),\r\n            IsRegularBuyer: this.fb.control(true),\r\n            CustomerDetails: this.fb.group({\r\n                //Id: this.fb.control(null),\r\n                UserId: this.fb.control(null),\r\n                CompanyId: this.fb.control(null),\r\n                IsNewUser: this.fb.control(true),\r\n                IsNewCompany: this.fb.control(true),\r\n                CompanyName: this.fb.control(null, Validators.required),\r\n                Name: this.fb.control(null, Validators.required),\r\n                PhoneNumber: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Phone)]),\r\n                Email: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Email)]),\r\n                IsInvitationEnabled: this.fb.control(false),\r\n                IsNotifySchedules: this.fb.control(false),\r\n            }),\r\n\r\n            AddressDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                IsNewJob: this.fb.control(true),\r\n                JobName: this.fb.control(null, Validators.required),\r\n                DisplayJobID: this.fb.control(null),\r\n                JobId: this.fb.control(null),\r\n                Address: this.fb.control(null),\r\n                City: this.fb.control(null),\r\n                StateId: this.fb.control(null, Validators.required),\r\n                CountryId: this.fb.control(1, Validators.required),\r\n                CountryGroupId: this.fb.control(null),\r\n                CountyName: this.fb.control(null),\r\n                CountryCode: this.fb.control(null),\r\n                Country: this.fb.control({ Id: null, Name: 'Dummy', Code: 'Dummy', Currency: 1, UoM: 1 }),\r\n                CountryGroup: this.fb.control({ Id: null, Name: 'Dummy', Code: 'Dummy', Currency: 1, UoM: 1 }),\r\n                //Country: this.fb.group({ Id: this.fb.control(1, Validators.required), Name: this.fb.control('Dummy'), Code: this.fb.control('Dummy'), Currency: this.fb.control(1), UoM: this.fb.control(1) }),\r\n                StateName: this.fb.control(null),\r\n                State: this.fb.control({ Id: null, Name: 'Dummy', Code: 'Dummy' }),\r\n                //State: this.fb.control({ Id: this.fb.control(null, Validators.required), Name: this.fb.control('Dummy'), Code: this.fb.control('Dummy') }),\r\n                Currency: this.fb.control(1),\r\n                ZipCode: this.fb.control(null),\r\n                IsProFormaPoEnabled: this.fb.control(false),\r\n                SignatureEnabled: this.fb.control(false),\r\n                IsGeocodeUsed: this.fb.control(false),\r\n                Latitude: this.fb.control(null, Validators.pattern('^[0-9.-]*$')),\r\n                Longitude: this.fb.control(null, Validators.pattern('^[0-9.-]*$')),\r\n                TimeZoneName: this.fb.control(null),\r\n                LocationManagedType: this.fb.control(0),\r\n                IsCompanyOwned: this.fb.control(false),\r\n                MarineUoM: this.fb.control(0),\r\n                IsMarineLocation: this.fb.control(false),\r\n                InventoryDataCaptureType: this.fb.control(0),\r\n                UOM: this.fb.control(1)\r\n            }),\r\n\r\n            FuelDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                FuelDisplayGroupId: this.fb.control(1),\r\n                FuelTypeId: this.fb.control(null, Validators.required),\r\n                NonStandardFuelName: this.fb.control(null),\r\n                NonStandardFuelDescription: this.fb.control(null),\r\n                FuelRequestFees: this.intilizeFuelRequestFees(),\r\n                FuelQuantity: this.fb.group({\r\n                    Quantity: this.fb.control(0),\r\n                    QuantityTypeId: this.fb.control(3),\r\n                    MinimumQuantity: this.fb.control(0),\r\n                    MaximumQuantity: this.fb.control(0),\r\n                    QuantityIndicatorTypes: this.fb.control(1),\r\n                }, { validator: this.CompareNumbers }),\r\n                FuelPricing: this.fb.group({\r\n                    FuelPricingDetails: this.fb.group({\r\n                        FreightOnBoardTypes: this.fb.control(0)\r\n                    })\r\n                })\r\n            }),\r\n\r\n            FuelDeliveryDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                DeliveryTypeId: this.fb.control(1),\r\n                StartDate: this.fb.control(moment(new Date()).format('MM/DD/YYYY')),\r\n                EndDate: this.fb.control(null),\r\n                StartTime: this.fb.control('08:00'),\r\n                EndTime: this.fb.control('17:00'),\r\n                SingleDeliverySubTypes: this.fb.control(0),\r\n            }),\r\n\r\n            FuelPricingDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                PricingTypeId: this.fb.control(3),\r\n                PricePerGallon: this.fb.control(null),\r\n                Code: this.fb.control(null),\r\n                CodeId: this.fb.control(null),\r\n                CodeDescription: this.fb.control(null),\r\n                TempPricingCodeDetails: this.fb.control(null),\r\n                RackAvgTypeId: this.fb.control(1),\r\n                RackPrice: this.fb.control(0),\r\n                EnableCityRack: this.fb.control(null),\r\n                TerminalName: this.fb.control(null),\r\n                TerminalId: this.fb.control(null),\r\n                SupplierCostMarkupTypeId: this.fb.control(1),\r\n                SupplierCostMarkupValue: this.fb.control(0),\r\n                SupplierCost: this.fb.control(null),\r\n                CityGroupTerminalId: this.fb.control(null),\r\n                FuelPricingDetails: this.fb.group({\r\n                    PricingSourceId: this.fb.control(1),\r\n                    PricingCode: this.fb.control({ Id: null, Code: null, Description: null })\r\n                }),\r\n                //TIER PRICING\r\n                IsTierPricingRequired: this.fb.control(null),\r\n                TierPricing: this.fb.group({\r\n                    TierPricingType: this.fb.control(TierPricingType.VolumeBased),\r\n                    IsResetCumulation: this.fb.control(null),\r\n                    AboveQuantityPricing: this.fb.control(null),\r\n                    Pricings: this.fb.array([]),\r\n                    ResetCumulationSetting: this.fb.group({\r\n                        CumulationType: this.fb.control(1),\r\n                        Day: this.fb.control(null),\r\n                        Date: this.fb.control(null),\r\n                    }),\r\n                    DisplayCumulationFrequency: this.fb.control(null)\r\n                }),\r\n            }),\r\n\r\n            DeliveryRequest: this.fb.group({\r\n                Priority: this.fb.control(1),\r\n                ScheduleQuantityType: this.fb.control(1),\r\n                RequiredQuantity: this.fb.control(null, this.IsTBDRequest ? [] : [Validators.required, Validators.min(this._minimumConst)]),\r\n                DeliveryLevelPO: this.fb.control(''),\r\n                BadgeNo1: this.fb.control(null),\r\n                BadgeNo2: this.fb.control(null),\r\n                BadgeNo3: this.fb.control(null),\r\n                DispatcherNote: this.fb.control(null),\r\n                PickupLocationType: this.fb.control(0),\r\n                Terminal: this.utilService.getTerminalForm(null, false),\r\n                BulkPlant: this.utilService.getBulkPlantForm(null, false),\r\n            })\r\n        });\r\n        this.setAddressValidators(Country.USA);\r\n\r\n    }\r\n\r\n    intilizeFuelRequestFees() {\r\n        let _FRFArray = this.fb.array([]);\r\n        _FRFArray.push(this.fb.group({\r\n            FeeTypeId: this.fb.control(null),\r\n            FeeSubTypeId: this.fb.control(null),\r\n            FeeSubTypeName: this.fb.control(null),\r\n            Fee: this.fb.control(null),\r\n            FeeDetails: this.fb.control(null),\r\n            FeeConstraintTypeId: this.fb.control(null),\r\n            IncludeInPPG: this.fb.control(null),\r\n            OtherFeeTypeId: this.fb.control(null),\r\n        }));\r\n        return _FRFArray;\r\n    }\r\n\r\n    updateFormControlValidators(control: any, validators: any[]) {\r\n        control.setValidators(validators);\r\n        control.updateValueAndValidity();\r\n    }\r\n\r\n    CompareNumbers(control: AbstractControl) {\r\n        if (control.get('MinimumQuantity').value > control.get('MaximumQuantity').value) {\r\n            control.get('MaximumQuantity').setErrors({ compareNumber: true })\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    getPreferencesSettings() {\r\n        let _this = this;\r\n        if (this.preferencesSetting) {\r\n            //this.setTreferenceSetting()\r\n            return;\r\n        }\r\n        this.preferencesSetting = null;\r\n        this.addLocationService.GetPreferencesSettings().subscribe(data => {\r\n            if (data) {\r\n                _this.locationForm.patchValue(data);\r\n                _this.defaultCompanyCountryId = data.AddressDetails.Country.Id;\r\n                _this.mapConstants = new MapConstants(_this.defaultCompanyCountryId);\r\n                _this.locationForm.get('AddressDetails').get('CountryId').setValue(_this.defaultCompanyCountryId);\r\n                _this.UoM = _this.defaultCompanyCountryId == 1 ? 1 : 2;\r\n                _this.locationForm.get('FuelDeliveryDetails.StartDate').patchValue(moment(new Date()).format('MM/DD/YYYY'));\r\n                _this.locationForm.get('RegionId').patchValue(_this.RegionId);\r\n                if (!_this.f.IsSupressOrderPricing.value) {\r\n                    _this.f.FuelPricingDetails.get('PricePerGallon').setValidators([Validators.required]);\r\n                }\r\n                if (this.IsTBDRequest) {\r\n                    _this.f.IsTBDRequest.setValue(this.IsTBDRequest);\r\n                    if (_this.tbdDrProductTypeId != 10) {\r\n                        if (_this.productDetails) {\r\n                            if (_this.f.FuelDetails.get('FuelDisplayGroupId').value != _this.productDetails.DisplayGroupId) {\r\n                                _this.deliveryTypeChanged(_this.productDetails.DisplayGroupId);\r\n                            }\r\n                            _this.f.FuelDetails.get('FuelDisplayGroupId').setValue(_this.productDetails.DisplayGroupId);\r\n                            _this.f.FuelDetails.get('FuelTypeId').setValue(_this.productDetails.Id);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.f.FuelDetails.get('FuelTypeId').setValue(_this.tbdDrProductId);\r\n                        _this.f.FuelDetails.get('FuelDisplayGroupId').setValue(3);\r\n                    }\r\n                }\r\n                _this.f.FuelPricingDetails.get('TierPricing').get('ResetCumulationSetting').get('CumulationType').setValue(1);\r\n                if (_this.pricingModuleComponent) {\r\n                    _this.pricingModuleComponent.setPricingCode();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    quantityTypeChanged(type: number) {\r\n\r\n        this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('Quantity'), []);\r\n        this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MinimumQuantity'), []);\r\n        //this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MaximumQuantity'), []);\r\n\r\n        this.f.FuelDetails.get('FuelQuantity').get('Quantity').setValue(0);\r\n        this.f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').setValue(0);\r\n        this.f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').setValue(0);\r\n\r\n        //Fixed\r\n        if (type == 1) {\r\n            //add validation for Quantity\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('Quantity'), [Validators.required, Validators.min(this._minimumConst)]);\r\n        }\r\n        //Range\r\n        else if (type == 2) {\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MinimumQuantity'), [Validators.required, Validators.min(this._minimumConst)]);\r\n            //this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MaximumQuantity'), [Validators.required]);\r\n        }\r\n        //Not Specified//No validation required\r\n    }\r\n\r\n    setFuelTypevalidation(type: number) {\r\n        //other\r\n        if (type == 3) {\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), []);\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), [Validators.required]);\r\n        }\r\n        //In Location Area//Common//Less common\r\n        else {\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), [Validators.required]);\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), []);\r\n        }\r\n    }\r\n\r\n    deliveryTypeChanged(type: number) {\r\n\r\n        //SET VALIDATION\r\n        this.setFuelTypevalidation(type);\r\n\r\n        //GET PRODUCTS\r\n        if (type == 1 || type == 2) {\r\n            this.getFuelProducts();\r\n        }\r\n        else if (type == 4) {\r\n            this.getProductListByZip();\r\n        }\r\n        if (type == 3 && this.pricingModuleComponent) {\r\n            this.f.FuelPricingDetails.get('PricingTypeId').setValue(2);\r\n            //DONT UPDATE VALIDATION IF TIER PRICING ALREADU CHECKED\r\n            if(!this.f.FuelPricingDetails.get('IsTierPricingRequired').value){\r\n                this.pricingModuleComponent.pricingTypeChanged(2)\r\n            }\r\n        }\r\n    }\r\n\r\n    getStatesOfAllCountries() {\r\n\r\n        if (this.statesList.length > 0) {\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\r\n            return;\r\n        }\r\n\r\n        this.addLocationService.getStatesOfAllCountries().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.statesList = data;\r\n                this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\r\n            }\r\n        });\r\n    }\r\n\r\n    get StatesListByCountry(): any[] {\r\n        let countryCode = this.PickupForm.controls['BulkPlant']['controls'].Country.get(\"Code\").value;\r\n        if (countryCode && this.CountryList && this.CountryList.length > 0) {\r\n            \r\n            countryCode = countryCode == \"US\" ? \"USA\" : countryCode;\r\n            let countryId = 0;\r\n            let county = this.CountryList.find(c => c.Code == countryCode);\r\n            if (county && county.Id)\r\n                countryId = county.Id;\r\n                \r\n            if (countryId == 4) {\r\n                let countryGroupCode = this.PickupForm.controls['BulkPlant']['controls'].CountryGroup.get(\"Id\").value;\r\n                return this.statesList.filter(t => t.CountryId == 4 && t.CountryGroupId == countryGroupCode);\r\n            }\r\n            else {\r\n                return this.statesList.filter(t => t.CountryId == countryId);\r\n            }\r\n        } \r\n    }\r\n    countryChanged() {\r\n        this.f.AddressDetails.get('StateId').setValue(null)\r\n        let _countryId = this.f.AddressDetails.get('CountryId').value;\r\n        _countryId == 2 ? this.UoM = 2 : this.UoM = 1\r\n\r\n        if (_countryId != 4) {\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\r\n        } else {\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryGroupId == this.f.AddressDetails.get('CountryGroupId').value) || [];\r\n        }        \r\n\r\n        //UPDATE MAP POINTER\r\n        // this.mapConstants = new MapConstants(_countryId);\r\n        // this.f.AddressDetails.get('Latitude').setValue(this.mapConstants.CenterLat);\r\n        // this.f.AddressDetails.get('Longitude').setValue(this.mapConstants.CenterLon);\r\n\r\n        this.getAddress();\r\n        this.setAddressValidators(_countryId);\r\n\r\n    }\r\n\r\n    getTPOContactPersonDetails(userId: number) {\r\n\r\n        this.addLocationService.getTPOContactPersonDetails(userId).subscribe(data => {\r\n            if (data) {\r\n                this.CompanyContactPersonsDetails = data;\r\n                this.locationForm.get('CustomerDetails').get('PhoneNumber').setValue(this.CompanyContactPersonsDetails.PhoneNumber);\r\n                this.locationForm.get('CustomerDetails').get('Email').setValue(this.CompanyContactPersonsDetails.Email);\r\n            }\r\n        });\r\n    }\r\n\r\n    getFuelProducts() {\r\n\r\n        if(this.f.AddressDetails.get('IsMarineLocation').value){\r\n            return;\r\n        }\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n        this.FuelProductsList = [];\r\n\r\n        let companyId = this.f.CustomerDetails['controls']['CompanyId'].value || 0;\r\n        let jobId = this.f.AddressDetails['controls']['JobId'].value || 0;\r\n        let productDisplayGroupId = this.f.FuelDetails.get('FuelDisplayGroupId').value ? this.f.FuelDetails.get('FuelDisplayGroupId').value : 1;\r\n\r\n        this._isLoadingProducts = true;\r\n        this.addLocationService.getFuelProducts(productDisplayGroupId, companyId, jobId).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.FuelProductsList = data;\r\n                //this.f.FuelDetails.get('FuelTypeId').setValue(data[0].Id);\r\n            }\r\n            this._isLoadingProducts = false;\r\n        });\r\n    }\r\n\r\n    currentRadious: number = 100;\r\n    getProductListByZip(radious?: number) {\r\n\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n        //this.FuelProductsList = [];\r\n\r\n        if(!this.AddressRawData){\r\n            return;\r\n        }\r\n\r\n        let address = this.f.AddressDetails.get('Address').value;\r\n        let state = this.AddressRawData.StateName;\r\n        let city = this.AddressRawData.City;\r\n        let country = (this.AddressRawData.CountryCode == 'US') ? 'USA' : (address.CountryCode == 'CA' ? 'CAN' : 'IND');\r\n        let zipcode = this.AddressRawData.ZipCode;\r\n        let input = address + ' ' + city + ' ' + state + ' ' + country + ' ' + zipcode;\r\n        !radious ? this.currentRadious = 100 : null;\r\n\r\n        if (zipcode) {\r\n            this._isLoadingProducts = true;\r\n            this.addLocationService.getProductListByZip(input, this.currentRadious).subscribe(data => {\r\n                this._isLoadingProducts = false;\r\n                if (data && data.length > 0) {\r\n                    if (this.currentRadious == 100) {\r\n                        this.FuelProductsList = data;\r\n                    }\r\n                    else {\r\n                        this.FuelProductsList = this.FuelProductsList.concat(data);\r\n                    }\r\n                    this.f.FuelDetails.get('FuelTypeId').setValue(data[0].Id);\r\n                }\r\n                this.currentRadious += 100;\r\n                this._isLoadingProducts = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    fuelTypeIdChanged(value: string) {\r\n        if (value == 'seeMore') {\r\n            this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n            this.getProductListByZip(this.currentRadious);\r\n        }\r\n    }\r\n\r\n    markerDragEnd(event: any) {\r\n        let state = this.f.AddressDetails.get('StateName').value || '';\r\n        let country = this.f.AddressDetails.get('CountryCode').value || ''\r\n        let city = this.f.AddressDetails.get('City').value || '';\r\n        let zipcode = this.f.AddressDetails.get('ZipCode').value || '';\r\n        if (city == \"\" || state == \"\" || country == \"\" || zipcode == \"\") {\r\n            this.updateGeoCode(event.coords.lat, event.coords.lng);\r\n        }\r\n        else {\r\n            this.confirmationDialogService.confirm('Map update', 'Geo Codes shifted to a new location!')\r\n                .then((confirmed) => (confirmed == true) ? this.updateGeoCode(event.coords.lat, event.coords.lng) : this.previousLatLon())\r\n                .catch(() => this.previousLatLon());\r\n        }\r\n    }\r\n\r\n    updateGeoCode(lat: any, lng: any) {\r\n        this.addLocationService.GetAddressByLongLat(lat, lng).subscribe(response => {\r\n            if (response) {\r\n                this.updateAddress(response, true);\r\n                this.f.AddressDetails.get('Latitude').patchValue(lat.toFixed(8));\r\n                this.f.AddressDetails.get('Longitude').patchValue(lng.toFixed(8));\r\n                this.getTimeZoneUsingLatLng(lat, lng);\r\n            }\r\n        });\r\n    }\r\n\r\n    previousLatLon() {\r\n        if (!this.f.AddressDetails.get('Latitude').value || !this.f.AddressDetails.get('Longitude').value) {\r\n            // let _mapConstants = new MapConstants(this.f.AddressDetails.get('CountryId').value)\r\n            // this.f.AddressDetails.get('Latitude').setValue(_mapConstants.CenterLat);\r\n            // this.f.AddressDetails.get('Longitude').setValue(_mapConstants.CenterLon);\r\n        }\r\n        else {\r\n            this.mapConstants.CenterLat = this.f.AddressDetails.get('Latitude').value;\r\n            this.mapConstants.CenterLon = this.f.AddressDetails.get('Longitude').value;\r\n        }\r\n    }\r\n\r\n    getAddressByZip() {\r\n        let zipCode = this.f.AddressDetails.get('ZipCode').value;\r\n        let address = this.f.AddressDetails.get('Address').value || \"\";\r\n        if (zipCode) {\r\n            this.addLocationService.getAddressByZip(zipCode, address).subscribe((response) => {\r\n                if (response) {\r\n                    this.updateAddress(response)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAddress() {\r\n\r\n        let address = this.f.AddressDetails.get('Address').value || '';\r\n        let state = this.f.AddressDetails.get('StateName').value || '';\r\n        let country = this.f.AddressDetails.get('CountryCode').value || ''\r\n        let city = this.f.AddressDetails.get('City').value || '';\r\n        let zipcode = this.f.AddressDetails.get('ZipCode').value || '';\r\n\r\n        if (address == '' || state == '' || country == '' || zipcode == '')\r\n            return;\r\n\r\n        address = address + \" \" + city + \" \" + state + \" \" + country + \" \" + zipcode;\r\n\r\n        this.addLocationService.GetAddress(address).subscribe((data) => {\r\n            this.updateAddress(data)\r\n        })\r\n    }\r\n\r\n    stateChanged() {\r\n        if (this.pricingModuleComponent) {\r\n            this.pricingModuleComponent.getCityGroupTerminals();\r\n        }\r\n        this.getAddress();\r\n        this.setBillableQuantity();\r\n    }\r\n\r\n    setBillableQuantity() {\r\n        let state = this.statesList.find(st => st.StateId == this.f.AddressDetails.get('StateId').value);\r\n        if (state && state.QuantityIndicatorId) {\r\n            this.f.FuelDetails.get('FuelQuantity').get('QuantityIndicatorTypes').setValue(state.QuantityIndicatorId);\r\n        }\r\n    }\r\n\r\n    getTimeZoneUsingLatLng(lat, lng) {\r\n        var times_Stamp = (Math.round((new Date().getTime()) / 1000)).toString();\r\n        let _this = this;\r\n        this.addLocationService.getTimeZoneName(lat, lng, times_Stamp, this.MapsApiKey).subscribe((data: any) => {\r\n            if (data.timeZoneId != null) {\r\n                var timeZoneName = data.timeZoneName;\r\n                timeZoneName = _this.ParseTimeZone(timeZoneName);\r\n                this.f.AddressDetails.get('TimeZoneName').patchValue(timeZoneName);\r\n            }\r\n        });\r\n    }\r\n\r\n    ParseTimeZone(timeZoneName) {\r\n        if (timeZoneName != undefined && timeZoneName != null) {\r\n            timeZoneName = timeZoneName.replace(\"Daylight\", \"Standard\");\r\n            timeZoneName = timeZoneName.replace(\"Alaska \", \"Alaskan \");\r\n            timeZoneName = timeZoneName.replace(\"Hawaii-Aleutian\", \"Hawaiian\");\r\n        }\r\n        return timeZoneName\r\n    }\r\n\r\n    AddressRawData: Geocode = null;\r\n    updateAddress(address: Geocode, isDragged?: boolean) {\r\n        if (address.CountryCode && address.StateName) {\r\n            this.AddressRawData = address;\r\n            let countryId = (address.CountryCode == 'USA') ? 1 : (address.CountryCode == 'CAN' ? 2 : this.f.AddressDetails.get('CountryId').value);\r\n            let state = this.statesList.find(st => st.StateName.toLowerCase() == address.StateName.toLowerCase());\r\n            let stateId = (state && state.StateId) ? state.StateId : this.f.AddressDetails.get('StateId').value;\r\n            this.UoM = countryId == 1 ? 1 : 2;\r\n            this.f.AddressDetails.get('City').patchValue(address.City);\r\n            this.f.AddressDetails.get('ZipCode').patchValue(address.ZipCode);\r\n            this.f.AddressDetails.get('CountyName').patchValue(address.CountyName);\r\n            this.f.AddressDetails.get('CountryCode').patchValue(address.CountryCode);\r\n            this.f.AddressDetails.get('CountryId').patchValue(countryId);\r\n            this.f.AddressDetails.get('StateName').patchValue(address.StateName);\r\n            this.f.AddressDetails.get('StateId').patchValue(stateId);\r\n            this.f.AddressDetails.get('State').patchValue({ Id: stateId, Code: address.StateName, Name: address.StateName });\r\n            if (countryId == Country.USA) {\r\n                this.f.AddressDetails.get('MarineUoM').patchValue(1);\r\n                this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: address.CountryCode, Name: address.CountryCode, Currency: 1, UoM: 1 });\r\n            }\r\n            else if (countryId == Country.CAN) {\r\n                this.f.AddressDetails.get('MarineUoM').patchValue(2);\r\n                this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: address.CountryCode, Name: address.CountryCode, Currency: 2, UoM: 2 });\r\n            }\r\n            else {\r\n                this.f.AddressDetails.get('MarineUoM').patchValue(1);\r\n                this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: address.CountryCode, Name: address.CountryCode, Currency: 2, UoM: 2 });\r\n            }\r\n            if (isDragged) {\r\n                this.f.AddressDetails.get('Address').patchValue(address.Address);\r\n            }\r\n            if (address.Latitude) {\r\n                this.f.AddressDetails.get('Latitude').patchValue(address.Latitude.toFixed(8));\r\n                this.f.AddressDetails.get('Longitude').patchValue(address.Longitude.toFixed(8));\r\n                this.mapConstants.CenterLat = address.Latitude;\r\n                this.mapConstants.CenterLon = address.Longitude;\r\n                this.getTimeZoneUsingLatLng(address.Latitude, address.Longitude);\r\n            }\r\n\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n        }\r\n    }\r\n\r\n    isCompanyExits() {\r\n        this.isCompanyNameExist = false;\r\n        if (this.f.CustomerDetails.get('CompanyName').value) {\r\n            this.addLocationService.isTpoCompanyExist(this.f.CustomerDetails.get('IsNewCompany').value, this.f.CustomerDetails.get('CompanyName').value).subscribe(data => {\r\n                if (data != null || data != undefined) {\r\n                    this.isCompanyNameExist = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    isJobExist(companyId?: string) {\r\n        this.isJobNameExist = false;\r\n        if (!this.f.CustomerDetails.get('IsNewCompany').value && this.f.AddressDetails.get('JobName').value && (companyId || this.f.CustomerDetails.get('CompanyId').value)) {\r\n            this.addLocationService.isJobNameExist(this.f.AddressDetails.get('JobName').value, companyId || this.f.CustomerDetails.get('CompanyId').value).subscribe(response => {\r\n                if (response != null && response != undefined) {\r\n                    this.isJobNameExist = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    IsPhoneNumberValid() {\r\n\r\n        this.isPhoneNumberValid = true;\r\n        let phone = this.f.CustomerDetails.get('PhoneNumber').value;\r\n\r\n        if (phone && this.f.CustomerDetails.get('PhoneNumber').valid) {\r\n            this.addLocationService.IsPhoneNumberValid(phone).subscribe(data => {\r\n                if (data != null || data != undefined) {\r\n                    this.isPhoneNumberValid = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    newCompanyChecked(isNewCompany: boolean) {\r\n\r\n        this.f.CustomerDetails.get('CompanyId').setValue(null);\r\n        this.f.CustomerDetails.get('UserId').setValue(null);\r\n        this.f.CustomerDetails.get('IsNewUser').setValue(true);\r\n\r\n        this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), [Validators.required]);\r\n        this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), []);\r\n\r\n        if (isNewCompany) {\r\n            this.f.CustomerDetails.get('Email').setValue(null);\r\n            this.f.CustomerDetails.get('PhoneNumber').setValue(null);\r\n            this.f.CustomerDetails.get('CompanyName').setValue(null);\r\n\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyName'), [Validators.required]);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyId'), []);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyName'), []);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyId'), [Validators.required]);\r\n\r\n            this.isJobExist();\r\n        }\r\n\r\n    }\r\n\r\n    companyChanged(companyId: string) {\r\n        this.getTPOCompanyContactPersons(companyId);\r\n        this.isJobExist(companyId)\r\n    }\r\n\r\n    _isLoadingPerson: boolean = false;\r\n    getTPOCompanyContactPersons(companyId: string) {\r\n        if (companyId) {\r\n\r\n            this.f.CustomerDetails.get('IsNewUser').setValue(false);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), []);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), [Validators.required]);\r\n\r\n            this.CompanyContactPersonsList = [];\r\n            this._isLoadingPerson = true;\r\n            this.addLocationService.getTPOCompanyContactPersons(companyId).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    this.CompanyContactPersonsList = data;\r\n                    let companyname = this.AllTPOCompaniesList.filter(x => x.id == companyId);\r\n                    this.locationForm.get('CustomerDetails').get('CompanyName').setValue(companyname[0].text);\r\n                }\r\n                this._isLoadingPerson = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    getCurrecyList() {\r\n\r\n        if (this.currucyList.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this.addLocationService.getCurrenyList().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.currucyList = data;\r\n            }\r\n        });\r\n    }\r\n\r\n    getAllTPOCompanies() {\r\n\r\n        if (this.AllTPOCompaniesList.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this._isLoadingProducts = true;\r\n        this.addLocationService.getAllTPOCompanies().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.AllTPOCompaniesList = data.map((item: any) => {\r\n                    return { id: item.Id, text: item.Name }\r\n                });\r\n            }\r\n            this._isLoadingProducts = false;\r\n        });\r\n    }\r\n\r\n    clickNewPerson(isnew: boolean) {\r\n        if (isnew) {\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), [Validators.required]);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), []);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), []);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), [Validators.required]);\r\n        }\r\n        this.f.CustomerDetails.get('IsNewUser').setValue(isnew);\r\n    }\r\n\r\n    getCountries() {\r\n        if (this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n\r\n    }\r\n\r\n    getCountryGroup() {\r\n        if (this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n\r\n    }\r\n\r\n    //DR - PICKUP LOCATION BULK PLANT\r\n    editPickupLocation(): void {\r\n\r\n        this.initPickupForm();\r\n        let pricingCode = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').value;\r\n        let jobCountryId = this.f.AddressDetails.get('CountryId').value,\r\n            pricingCodeId = pricingCode ? pricingCode.Id : 0,\r\n            fuelType = this.f.FuelDetails.get('FuelTypeId').value,\r\n            jobLatitude = this.f.AddressDetails.get('Latitude').value,\r\n            jobLongitude = this.f.AddressDetails.get('Longitude').value,\r\n            isSupressOrderPricing = this.locationForm.get('IsSupressOrderPricing').value;\r\n        if (jobCountryId > 0 && pricingCodeId > 0 && fuelType > 0 && jobLatitude != 0 && jobLongitude != 0) {\r\n            this.addLocationService.getFuelTerminals(jobCountryId, pricingCodeId, fuelType, this.defaultCompanyCountryId, isSupressOrderPricing, jobLatitude, jobLongitude, '').subscribe((data: DropdownItem[]) => {\r\n                this.Terminals = data;\r\n            });\r\n        }\r\n        if (this.BulkPlants.length == 0) {\r\n            this.addresService.getBulkPlants('').subscribe(data => {\r\n                this.BulkPlants = data.slice();\r\n                this.BulkplantList = data;\r\n            });\r\n        }\r\n\r\n        this.isReadOnly = false;\r\n    }\r\n\r\n    initPickupForm() {\r\n        this.PickupForm = this.fb.group({\r\n            PickupLocationType: this.fb.control(1),\r\n            Terminal: this.utilService.getTerminalForm(null, true),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, true)\r\n        });\r\n    }\r\n\r\n    onTerminalSelected(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n    }\r\n\r\n    removePickupLocation() {\r\n        this.locationForm.controls.DeliveryRequest.get('PickupLocationType').setValue(0);\r\n        this.locationForm.controls.DeliveryRequest.get('Terminal').patchValue(this.utilService.getTerminalForm(null, false).value);\r\n        this.locationForm.controls.DeliveryRequest.get('BulkPlant').patchValue(this.utilService.getBulkPlantForm(null, false).value);\r\n    }\r\n\r\n    setStateCode(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    onBulkPlantSearched(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n\r\n    onBulkPlantSelected(event: any): void {\r\n\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress(event.Name);\r\n\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n\r\n    getBulkPlantAddress(bulkPlantName: string) {\r\n        this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: { Id: response.State.Id, Code: response.State.Code, Name: response.State.Code },\r\n                Country: { Id: response.Country.Id, Code: response.Country.Code, Name: response.Country.Code },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n        });\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n\r\n    updatePickupLocation() {\r\n\r\n        let pickupDetails = this.PickupForm.getRawValue();\r\n        this.locationForm.controls.DeliveryRequest.get('PickupLocationType').setValue(pickupDetails.PickupLocationType);\r\n\r\n        if ((this.PickupForm.get('PickupLocationType').value == 1 && this.PickupForm.get('Terminal').valid)) {\r\n            this.locationForm.controls.DeliveryRequest.get('Terminal').patchValue(pickupDetails.Terminal);\r\n        }\r\n        else if ((this.PickupForm.get('PickupLocationType').value == 2 && this.PickupForm.get('BulkPlant').valid)) {\r\n            this.locationForm.controls.DeliveryRequest.get('BulkPlant').patchValue(pickupDetails.BulkPlant);\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Invalid pickup details.\", null, null);\r\n        }\r\n\r\n        let dismiss = document.getElementById('btnDrPickupClose2') as HTMLElement;\r\n        dismiss.click();\r\n\r\n    }\r\n\r\n    getAddressByZipForPickup(event: any): void {\r\n        let zipCode = event.target.value;\r\n        let regexUsa = new RegExp(RegExConstants.UsaZip);\r\n        let regexCan = new RegExp(RegExConstants.CanZip);\r\n\r\n        if (regexUsa.test(zipCode) || regexCan.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        let addressModel = this.addressMapper(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: addressModel.Country,\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n\r\n                        this.mapConstants.CenterLat = data.Latitude;\r\n                        this.mapConstants.CenterLon = data.Longitude;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    addressMapper(data: any): AddressModel {\r\n\r\n        let state = this.statesList.find(x => x.StateCode == data.StateCode);\r\n        let country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n\r\n        let _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = { Id: state.StateId, Code: state.StateCode, Name: state.StateName };\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.formSubmited = true;\r\n\r\n        if (this.f.CustomerDetails.get('IsNewCompany').value) {\r\n            //JOB VALIDATION NOT REQUIRED FOR NEW COMPANY\r\n            this.isJobNameExist = false;\r\n        }\r\n        else {\r\n            //COMPANY NAME VALIDATION NOT REQUIRED FOR EXISTING COMPANY\r\n            this.isCompanyNameExist = false;\r\n        }\r\n\r\n        if (this.locationForm.valid && !this.isCompanyNameExist && !this.isJobNameExist)\r\n        {\r\n            //SET STATE COUNTRY DETAILS\r\n            // let stateName = this.f.AddressDetails.get('StateName').value;\r\n            // let stateId = this.f.AddressDetails.get('StateId').value;\r\n            // let countryCode = this.f.AddressDetails.get('CountryCode').value;\r\n            // let countryId = this.f.AddressDetails.get('CountryId').value;\r\n            //let countryName = this.f.AddressDetails.get('CountryName').value;\r\n            // this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: countryCode, Name: countryCode, Currency: this.UoM, UoM: this.UoM });\r\n            // this.f.AddressDetails.get('State').patchValue({ Id: stateId, Code: stateName, Name: stateName });\r\n            \r\n            if(this.f.FuelPricingDetails.get('IsTierPricingRequired').value){\r\n                let pricings = this.f.FuelPricingDetails.get('TierPricing').get('Pricings') as FormArray;                \r\n                pricings.controls.forEach((pricing: FormGroup)=>{\r\n                    pricing.get('UoM').setValue(this.UoM);\r\n                    pricing.get('Currency').setValue(this.UoM);\r\n                })\r\n            }\r\n            \r\n            var formValue = this.locationForm.getRawValue();\r\n            if (formValue.DeliveryRequest.PickupLocationType != 2) {\r\n                formValue.DeliveryRequest.BulkPlant = null;\r\n            }\r\n            else {\r\n                let state = this.statesList.find(x => x.StateId == formValue.DeliveryRequest.BulkPlant.State.Id);\r\n                formValue.DeliveryRequest.BulkPlant.State.Name = state.StateName;\r\n                formValue.DeliveryRequest.BulkPlant.Country.Name = formValue.DeliveryRequest.BulkPlant.Country.Code;\r\n            }\r\n            this._loading = true;\r\n            this.addLocationService.createOrder(formValue).subscribe((data: any) => {\r\n                this._loading = false;\r\n                if (data != null && parseInt(data.StatusCode) == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this._opened = false;\r\n                    //closeSlidePanel();\r\n                    //this.clearForm();   \r\n                    if (this.IsTBDRequest) {\r\n                        this.dataService.setGetOnTheFlyLocationDetailsSubject(data);\r\n                    }\r\n                    else {\r\n                        this.OnTheFlyLocationCreate.emit();\r\n                    }\r\n                }\r\n                else {\r\n                    const statusMessage = data == null ? 'Failed' : data.StatusMessage;\r\n                    Declarations.msgerror(statusMessage, undefined, undefined);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    marineCheckBoxChanged(value: boolean){\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n        if(value){\r\n            //\r\n            this.f.FuelDetails.get('FuelDisplayGroupId').setValue(1);\r\n            this.deliveryTypeChanged(1);\r\n            //\r\n            if(this.pricingModuleComponent){\r\n                this.f.FuelPricingDetails.get('IsTierPricingRequired').setValue(false);\r\n                this.pricingModuleComponent.tierPricingEnabled(false);\r\n            }\r\n            //\r\n            this.getMarineProductList();\r\n        }\r\n        else {\r\n            this.getFuelProducts();\r\n        }\r\n    }\r\n\r\n    deliveryTypeIdChanged(deliveryTypeId: number) {\r\n        if (deliveryTypeId == 1) {\r\n            this.f.FuelPricingDetails.get('TierPricing').get('TierPricingType').setValue(2);\r\n        }\r\n    }\r\n    getMarineProductList() {\r\n        this.MarineProductsList = [];\r\n        //let productDisplayGroupId = this.f.FuelDetails.get('FuelDisplayGroupId').value ? this.f.FuelDetails.get('FuelDisplayGroupId').value : 1;\r\n        this._isLoadingProducts = true;\r\n        this.addLocationService.getMarineProductList(6, 0,'', 1).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.MarineProductsList = data;\r\n            }\r\n            this._isLoadingProducts = false;\r\n        });\r\n    }\r\n    subscribeTbdAddLocation() {\r\n        this.tbdAddLocationSubscription = this.dataService.OpenOnTheFlyLocationFormSubject.subscribe((data: any) => {\r\n            this.tbdDrProductId = data.FuelTypeId;\r\n            this.tbdDrProductTypeId = data.ProductTypeId;\r\n            this.openPanel(data);\r\n        })\r\n    }\r\n\r\n\r\n    setAddressValidators(countryId: any) {\r\n        if (countryId == Country.CAR) {\r\n            this.f.AddressDetails.get('Address').clearValidators();\r\n            this.f.AddressDetails.get('Address').updateValueAndValidity();\r\n            this.f.AddressDetails.get('City').clearValidators();\r\n            this.f.AddressDetails.get('City').updateValueAndValidity();\r\n            this.f.AddressDetails.get('CountyName').clearValidators();\r\n            this.f.AddressDetails.get('CountyName').updateValueAndValidity();\r\n            this.f.AddressDetails.get('ZipCode').clearValidators();\r\n            this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\r\n        }\r\n        else {\r\n            let validator = [Validators.required];\r\n            this.f.AddressDetails.get('Address').setValidators(validator);\r\n            this.f.AddressDetails.get('Address').updateValueAndValidity();\r\n            this.f.AddressDetails.get('City').setValidators(validator);\r\n            this.f.AddressDetails.get('City').updateValueAndValidity();\r\n            this.f.AddressDetails.get('CountyName').setValidators(validator);\r\n            this.f.AddressDetails.get('CountyName').updateValueAndValidity();\r\n            this.f.AddressDetails.get('ZipCode').setValidators(validator);\r\n            this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    isRequiredField(countryId: any) {        \r\n        if (countryId == 1 || countryId == 2) {\r\n            return true;\r\n        }\r\n        else if (countryId == 4) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","<div class=\"add-location-container\">\r\n    <a (click)=\"openPanel()\" placement=\"bottom\" ngbTooltip=\"Add a New TPO Location\" class=\"btn border border-secondary pull-right\"><i class=\"fa fa-map-marker-alt fs18\"></i></a>\r\n\r\n    <div *ngIf=\"_initiated\">\r\n        <ng-sidebar-container style=\"z-index: 99;\">\r\n            <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'right'\" [showBackdrop]=\"true\"\r\n                        style=\"height: 100vh\">\r\n                <div class=\"loader\" *ngIf=\"_loading\">\r\n                    <div class=\"loading-content text-center\">\r\n                        <div class=\"spinner\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"header-panel\">\r\n                    <div class=\"heading\">\r\n                        <a (click)=\"_opened=false\"><i class=\"fa fa-close fs18 float-left mr10 mt3\"></i></a>\r\n                        <h3 *ngIf=\"!IsTBDRequest\" class=\"dib title\">Add Location</h3>\r\n                        <h3 *ngIf=\"IsTBDRequest\" class=\"dib title\">Add Location (TBD)</h3>\r\n                    </div>\r\n\r\n                    <form [formGroup]=\"locationForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"row\" formGroupName=\"CustomerDetails\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"well col-sm-12\">\r\n                                            <h4>Customer Information</h4>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" formControlName=\"IsNewCompany\"\r\n                                                               id=\"radio-newcustomer\" type=\"radio\" [value]=\"true\"\r\n                                                               (change)=\"newCompanyChecked(true)\">\r\n                                                        <label class=\"form-check-label\"\r\n                                                               for=\"radio-newcustomer\">New</label>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"radio-existingcustomer\"\r\n                                                               formControlName=\"IsNewCompany\" type=\"radio\" [value]=\"false\"\r\n                                                               (change)=\"newCompanyChecked(false)\">\r\n                                                        <label class=\"form-check-label\"\r\n                                                               for=\"radio-existingcustomer\">Existing</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 col-md-3\">\r\n                                                    <div class=\"form-group mb0\">\r\n                                                        <label for=\"CustomerDetails_CompanyName\">\r\n                                                            Company Name<span class=\"required pl4\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <div class=\"mtm1 new-CompanyName\"\r\n                                                             *ngIf=\"f.CustomerDetails['controls']['IsNewCompany'].value\">\r\n                                                            <input class=\"form-control\" id=\"CustomerDetails_CompanyName\"\r\n                                                                   formControlName=\"CompanyName\" placeholder=\"Company\"\r\n                                                                   type=\"text\" value=\"\" (change)=\"isCompanyExits()\">\r\n                                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyName').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CustomerDetails.get('CompanyName').errors?.required\">\r\n                                                                    Company\r\n                                                                    Name is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"isCompanyNameExist && !f.CustomerDetails.get('CompanyName').errors\">\r\n                                                                <span class=\"text-danger\">\r\n                                                                    Company already\r\n                                                                    exists\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"existing-CompanyName\"\r\n                                                             *ngIf=\"f.CustomerDetails['controls']['IsNewCompany'].value!=true\">\r\n                                                            <!-- {{f.CustomerDetails.get('CompanyId').value}} -->\r\n\r\n\r\n                                                            <ng-multiselect-dropdown class=\"single-select\"\r\n                                                                                     style=\"width: 100%;\"\r\n                                                                                     [settings]=\"CompDdlSetting\"\r\n                                                                                     [data]=\"AllTPOCompaniesList\"\r\n                                                                                     (onSelect)=\"onCompSelect($event, true)\"\r\n                                                                                     (onDeSelect)=\"onCompSelect($event, false)\">\r\n                                                            </ng-multiselect-dropdown>\r\n\r\n                                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyId').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CustomerDetails.get('CompanyId').errors?.required\">\r\n                                                                    Company is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-8 col-md-9\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 new-company\"\r\n                                                             *ngIf=\"f.CustomerDetails.get('CompanyId').value==null || f.CustomerDetails.get('IsNewCompany').value || (!f.CustomerDetails.get('IsNewCompany').value && f.CustomerDetails.get('IsNewUser').value)\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <div id=\"newContactPersonInput\">\r\n                                                                    <label for=\"CustomerDetails_Name\">\r\n                                                                        Contact\r\n                                                                        Person<span class=\"required pl4\"\r\n                                                                                    aria-required=\"true\">*</span>\r\n                                                                    </label>\r\n                                                                    <input class=\"form-control newContactPerson\"\r\n                                                                           id=\"CustomerDetails_Name\" formControlName=\"Name\"\r\n                                                                           placeholder=\"Contact Person\" type=\"text\"\r\n                                                                           value=\"\">\r\n                                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('Name').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.CustomerDetails.get('Name').errors?.required\">\r\n                                                                            Contact Person is required\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <a id=\"useExisting\" class=\"\"\r\n                                                                       *ngIf=\"f.CustomerDetails.get('IsNewCompany').value!=true && f.CustomerDetails.get('IsNewUser').value && f.CustomerDetails.get('CompanyId').value!=null\"\r\n                                                                       (click)=\"clickNewPerson(false)\">\r\n                                                                        <span class=\"fa fa-arrow-left mt7\"></span> Use\r\n                                                                        Existing\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 existing-company\"\r\n                                                             *ngIf=\"(f.CustomerDetails.get('CompanyId').value!=null && !f.CustomerDetails.get('IsNewCompany').value && !f.CustomerDetails.get('IsNewUser').value)\">\r\n                                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper customer-contact hide-element\">\r\n                                                                <span class=\"spinner-dashboard pa\"></span>\r\n                                                            </div>\r\n                                                            <div class=\"form-group\">\r\n                                                                <div id=\"existingContactPersonDropdown\">\r\n\r\n                                                                    <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\r\n                                                                         *ngIf=\"_isLoadingPerson\">\r\n                                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                                    </div>\r\n\r\n                                                                    <label for=\"CustomerDetails_Name\">\r\n                                                                        Contact\r\n                                                                        Person\r\n                                                                    </label>\r\n                                                                    <select class=\"form-control existingContactPerson\"\r\n                                                                            id=\"CustomerDetails_UserId\"\r\n                                                                            formControlName=\"UserId\"\r\n                                                                            (change)=\"getTPOContactPersonDetails($event.target.value)\">\r\n                                                                        <option value=\"null\" disabled>\r\n                                                                            Select Contact\r\n                                                                            Person\r\n                                                                        </option>\r\n                                                                        <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\r\n                                                                                *ngFor=\"let item of CompanyContactPersonsList\"\r\n                                                                                [selected]=\"item.Id== f.CustomerDetails.get('UserId').value\">\r\n                                                                            {{item.Name}}\r\n                                                                        </option>\r\n                                                                    </select>\r\n                                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('UserId').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.CustomerDetails.get('UserId').errors?.required\">\r\n                                                                            Contact Person is required\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <a id=\"createNew\"\r\n                                                                       *ngIf=\"f.CustomerDetails.get('IsNewCompany').value!=true && f.CustomerDetails.get('IsNewUser').value!=true && f.CustomerDetails.get('CompanyId').value!=null\"\r\n                                                                       (click)=\"clickNewPerson(true)\">\r\n                                                                        <span class=\"fa fa-plus-circle mt7\"></span>\r\n                                                                        Create\r\n                                                                        New\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <label for=\"CustomerDetails_PhoneNumber\">\r\n                                                                    Mobile\r\n                                                                    Number<span class=\"required pl4\"\r\n                                                                                aria-required=\"true\">*</span>\r\n                                                                </label>\r\n                                                                <input [disableControl]=\"f.CustomerDetails.get('IsNewUser').value!=true\"\r\n                                                                       class=\"form-control input-phoneformat phoneNumber\"\r\n                                                                       id=\"CustomerDetails_PhoneNumber\" name=\"PhoneNumber\"\r\n                                                                       formControlName=\"PhoneNumber\" type=\"text\"\r\n                                                                       (input)=\"IsPhoneNumberValid()\">\r\n                                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('PhoneNumber').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('PhoneNumber').errors?.required\">\r\n                                                                        Mobile Number is required\r\n                                                                    </span>\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('PhoneNumber').errors?.pattern\">\r\n                                                                        Please enter a valid 10 digit Mobile\r\n                                                                        Number.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                                <div *ngIf=\"f.CustomerDetails.get('IsNewUser').value && f.CustomerDetails.get('PhoneNumber').value && !f.CustomerDetails.get('PhoneNumber').errors && !isPhoneNumberValid\">\r\n                                                                    <span class=\"color-orange fs12\">\r\n                                                                        Unable to verify number! You will miss Text\r\n                                                                        Alerts.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <div class=\"form-group custEmail\">\r\n                                                                <label for=\"CustomerDetails_Email\">\r\n                                                                    Email<span class=\"required pl4\"\r\n                                                                               aria-required=\"true\">*</span>\r\n                                                                </label>\r\n                                                                <input [disableControl]=\"f.CustomerDetails.get('IsNewUser').value!=true\"\r\n                                                                       class=\"form-control email\"\r\n                                                                       id=\"CustomerDetails_Email\" name=\"Email\"\r\n                                                                       formControlName=\"Email\" type=\"text\" value=\"\" />\r\n                                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('Email').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.required\">\r\n                                                                        Email\r\n                                                                        is required\r\n                                                                    </span>\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.pattern\">\r\n                                                                        Invalid email.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" formGroupName=\"AddressDetails\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"well\">\r\n                                            <h4 class=\"job-site-info\">Location Information</h4>\r\n                                            <div class=\"row mt20\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-7\">\r\n                                                            <div class=\"row\">\r\n                                                                <div class=\"col-sm-8\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-6\">\r\n                                                                            <div class=\"new-job\">\r\n                                                                                <label class=\"job-site-info\"\r\n                                                                                       for=\"AddressDetails_JobName\">\r\n                                                                                    Location\r\n                                                                                    Name <span class=\"required pl4\"\r\n                                                                                               aria-required=\"true\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control\"\r\n                                                                                       id=\"AddressDetails_JobName\"\r\n                                                                                       formControlName=\"JobName\"\r\n                                                                                       type=\"text\" (change)=\"isJobExist()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('JobName').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('JobName').errors?.required\">\r\n                                                                                        Location Name is\r\n                                                                                        required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                                <div *ngIf=\"!f.AddressDetails.get('JobName').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"isJobNameExist && !f.CustomerDetails.get('IsNewCompany').value && f.CustomerDetails.get('CompanyId').value\">\r\n                                                                                        Location with same name already\r\n                                                                                        exist.\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\">\r\n                                                                            <div class=\"address-controls\">\r\n                                                                                <div class=\"form-group combineDiv\">\r\n                                                                                    <label class=\"job-site-info\"\r\n                                                                                           for=\"AddressDetails_DisplayJobID\">\r\n                                                                                        Third\r\n                                                                                        Party Location ID\r\n                                                                                    </label>\r\n                                                                                    <input class=\"form-control\"\r\n                                                                                           id=\"AddressDetails_DisplayJobID\"\r\n                                                                                           formControlName=\"DisplayJobID\"\r\n                                                                                           type=\"text\" value=\"\">\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"col-sm-4\">\r\n                                                                    <div class=\"row address-controls\">\r\n                                                                        <div class=\"col-sm-6\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_Country_Id\">Country/Group</label>\r\n                                                                                <select class=\"form-control country addressInput\"\r\n                                                                                        id=\"AddressDetails_Country_Id\"\r\n                                                                                        formControlName=\"CountryId\"\r\n                                                                                        (change)=\"countryChanged()\">\r\n                                                                                    <!-- <option [value]=\"null\">Select Country</option> -->\r\n                                                                                    <option *ngFor=\"let ct of CountryList\"\r\n                                                                                            [value]=\"ct.Id\"\r\n                                                                                            [selected]=\"ct.Id==1\">\r\n                                                                                        {{ct.Code}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('CountryId').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('CountryId').errors?.required\">\r\n                                                                                        Country is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\" *ngIf=\"f.AddressDetails.get('CountryId').value==4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_CountryGroup_Id\">Country</label>\r\n                                                                                <select class=\"form-control country addressInput\"\r\n                                                                                        id=\"AddressDetails_CountryGroup_Id\"\r\n                                                                                        formControlName=\"CountryGroupId\"\r\n                                                                                        (change)=\"countryChanged()\">\r\n                                                                                    <option *ngFor=\"let ct of CountryGroupList\"\r\n                                                                                            [value]=\"ct.Id\"\r\n                                                                                            [selected]=\"ct.Id==1\">\r\n                                                                                        {{ct.Name}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"wrapper-location\">\r\n                                                                <div class=\"address-controls\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-8\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_Address\">\r\n                                                                                    Address<span class=\"required pl4\"\r\n                                                                                                 aria-required=\"true\" *ngIf=\"isRequiredField(f.AddressDetails.get('CountryId').value)\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control address addressInput\"\r\n                                                                                       id=\"AddressDetails_Address\"\r\n                                                                                       name=\"AddressDetails.Address\"\r\n                                                                                       type=\"text\"\r\n                                                                                       formControlName=\"Address\"\r\n                                                                                       (change)=\"getAddress()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('Address').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('Address').errors?.required\">\r\n                                                                                        Address is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_ZipCode\">\r\n                                                                                    Zip<span class=\"required pl4\"\r\n                                                                                             aria-required=\"true\" *ngIf=\"isRequiredField(f.AddressDetails.get('CountryId').value)\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control zipcode addressInput\"\r\n                                                                                       id=\"AddressDetails_ZipCode\"\r\n                                                                                       name=\"AddressDetails.ZipCode\"\r\n                                                                                       formControlName=\"ZipCode\"\r\n                                                                                       type=\"text\" value=\"\"\r\n                                                                                       (change)=\"getAddressByZip()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('ZipCode').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('ZipCode').errors?.required\">\r\n                                                                                        Zip is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_City\">\r\n                                                                                    City<span class=\"required pl4\"\r\n                                                                                              aria-required=\"true\" *ngIf=\"isRequiredField(f.AddressDetails.get('CountryId').value)\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control city addressInput\"\r\n                                                                                       id=\"AddressDetails_City\"\r\n                                                                                       formControlName=\"City\" type=\"text\"\r\n                                                                                       (change)=\"getAddress()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('City').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('City').errors?.required\">\r\n                                                                                        City is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_CountyName\">\r\n                                                                                    County\r\n                                                                                    Name\r\n                                                                                </label>\r\n                                                                                <i class=\"fa fa-info-circle ml5\"\r\n                                                                                   data-toggle=\"tooltip\"\r\n                                                                                   data-placement=\"top\"\r\n                                                                                   title=\"Correct County name is required by our Tax service to calculate taxes accurately.\"></i>\r\n                                                                                <input class=\"form-control county addressInput\"\r\n                                                                                       id=\"AddressDetails_CountyName\"\r\n                                                                                       formControlName=\"CountyName\"\r\n                                                                                       type=\"text\" value=\"\"\r\n                                                                                       autocomplete=\"off\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_State_Id\">State</label>\r\n                                                                                <select class=\"form-control state addressInput triggerTerminalChange\"\r\n                                                                                        id=\"AddressDetails_State_Id\"\r\n                                                                                        name=\"AddressDetails.State.Id\"\r\n                                                                                        formControlName=\"StateId\"\r\n                                                                                        (change)=\"stateChanged();\">\r\n                                                                                    <option [value]=null>\r\n                                                                                        Select\r\n                                                                                        State\r\n                                                                                    </option>\r\n                                                                                    <option id=\"{{item.StateId}}\"\r\n                                                                                            [value]=\"item.StateId\"\r\n                                                                                            *ngFor=\"let item of filteredStatesList\">\r\n                                                                                        {{item.StateName}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('StateId').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('StateId').errors?.required\">\r\n                                                                                        State is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <!-- Hiding marine location flag as ports are introduced-->\r\n                                                                    <div class=\"row hide-element\">\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <div class=\"form-check form-check-inline\">\r\n                                                                                    <input type=\"checkbox\"\r\n                                                                                           (change)=\"marineCheckBoxChanged($event.target.checked)\"\r\n                                                                                           [disableControl]=\"this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value==2 || IsTBDRequest\"\r\n                                                                                           formControlName=\"IsMarineLocation\"\r\n                                                                                           class=\"enablecityrack form-check-input\"\r\n                                                                                           id=\"chk-is-marine\">\r\n                                                                                    <label class=\"form-check-label\"\r\n                                                                                           for=\"chk-is-marine\">\r\n                                                                                        Is\r\n                                                                                        Marine Location\r\n                                                                                    </label>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-5\">\r\n                                                            <agm-map [zoom]=\"mapConstants.ZoomArea\"\r\n                                                                     [latitude]=\"mapConstants.CenterLat\"\r\n                                                                     [longitude]=\"mapConstants.CenterLon\">\r\n                                                                <agm-marker [latitude]=\"mapConstants.CenterLat\"\r\n                                                                            [longitude]=\"mapConstants.CenterLon\"\r\n                                                                            [markerDraggable]=\"true\"\r\n                                                                            (dragEnd)=\"markerDragEnd($event)\"\r\n                                                                            [iconUrl]=\"mapConstants.IconUrl\">\r\n                                                                </agm-marker>\r\n                                                            </agm-map>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" id=\"Delivery_Details\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <div class=\"well\">\r\n                                            <h4>Delivery</h4>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-3\">\r\n                                                    <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\r\n                                                        <div class=\"col-sm-12 single-delivery\">\r\n                                                            <label for=\"FuelDeliveryDetails_SingleDeliverySubTypes\">Delivery Type</label>\r\n                                                            <select class=\"form-control\"\r\n                                                                    formControlName=\"DeliveryTypeId\"\r\n                                                                    (change)=\"deliveryTypeIdChanged($event.target.value)\">\r\n                                                                <option [value]=\"1\">Single Delivery</option>\r\n                                                                <option [value]=\"2\">Multiple Delivery</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-6\">\r\n                                                    <ng-container formGroupName=\"FuelDetails\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12 disable-in-tpo-edit\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\r\n                                                                         *ngIf=\"_isLoadingProducts\">\r\n                                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                                    </div>\r\n                                                                    <div class=\"row standard-fuels\">\r\n                                                                        <div *ngIf=\"!f.AddressDetails.get('IsMarineLocation').value\" class=\"col-sm-6\">\r\n                                                                            <div>\r\n                                                                                <label>Fuel Type</label>\r\n                                                                                <select class=\"form-control\"\r\n                                                                                        [disableControl]=\"IsTBDRequest\"\r\n                                                                                        formControlName=\"FuelDisplayGroupId\"\r\n                                                                                        (change)=\"deliveryTypeChanged($event.target.value)\">\r\n                                                                                    <option [value]=\"4\">\r\n                                                                                        In Location Area\r\n                                                                                    </option>\r\n                                                                                    <option [value]=\"1\">Common</option>\r\n                                                                                    <option [value]=\"2\">Less Common</option>\r\n                                                                                    <option [value]=\"3\">Other</option>\r\n                                                                                </select>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\"\r\n                                                                             *ngIf=\"(f.FuelDetails['controls']['FuelDisplayGroupId'].value)!=3\">\r\n                                                                            <label>Fuel</label>\r\n                                                                            <select [disableControl]=\"IsTBDRequest\"\r\n                                                                                    class=\"form-control\" id=\"FuelDetails_FuelTypeId\"\r\n                                                                                    formControlName=\"FuelTypeId\"\r\n                                                                                    (change)=\"fuelTypeIdChanged($event.target.value)\">\r\n                                                                                <option value=\"null\" disabled>Select</option>\r\n                                                                                <!-- NON-MARINE FUEL -->\r\n                                                                                <ng-container *ngIf=\"!f.AddressDetails.get('IsMarineLocation').value\">\r\n                                                                                    <option *ngFor=\"let item of FuelProductsList\" [value]=\"item.Id\"\r\n                                                                                            [selected]=\"item.Id==f.FuelDetails.get('FuelTypeId').value\">\r\n                                                                                        {{item.Name}}\r\n                                                                                    </option>\r\n                                                                                </ng-container>\r\n                                                                                <!-- MARINE FUEL -->\r\n                                                                                <ng-container *ngIf=\"f.AddressDetails.get('IsMarineLocation').value\">\r\n                                                                                    <option *ngFor=\"let item of MarineProductsList\" [value]=\"item.Id\"\r\n                                                                                            [selected]=\"item.Id==f.FuelDetails.get('FuelTypeId').value\">\r\n                                                                                        {{item.Name}}\r\n                                                                                    </option>\r\n                                                                                </ng-container>\r\n\r\n                                                                                <ng-container *ngIf=\"f.FuelDetails.get('FuelDisplayGroupId').value==4\">\r\n                                                                                    <option class=\"seeMore\" value=\"seeMore\">See More</option>\r\n                                                                                </ng-container>\r\n                                                                            </select>\r\n\r\n                                                                            <!--<input *ngIf=\"IsTBDRequest\" [attr.readonly]=\"true\" class=\"form-control\" type=\"text\" [value]=\"ProductTypeName\">-->\r\n\r\n                                                                            <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelTypeId').errors\">\r\n                                                                                <span class=\"text-danger\"\r\n                                                                                      *ngIf=\"f.FuelDetails.get('FuelTypeId').errors?.required\">\r\n                                                                                    Fuel is required.\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\" *ngIf=\"(f.FuelDetails['controls']['FuelDisplayGroupId'].value)==3\">\r\n                                                                            <label for=\"FuelDetails_NonStandardFuelName\">\r\n                                                                                Product\r\n                                                                                Name<span class=\"required pl4\"\r\n                                                                                          aria-required=\"true\">*</span>\r\n                                                                            </label>\r\n                                                                            <input class=\"form-control\"\r\n                                                                                   id=\"FuelDetails_NonStandardFuelName\"\r\n                                                                                   formControlName=\"NonStandardFuelName\"\r\n                                                                                   type=\"text\" value=\"\" autocomplete=\"off\">\r\n\r\n                                                                            <div *ngIf=\"formSubmited && f.FuelDetails.get('NonStandardFuelName').errors\">\r\n                                                                                <span class=\"text-danger\"\r\n                                                                                      *ngIf=\"f.FuelDetails.get('NonStandardFuelName').errors.required\">\r\n                                                                                    Name\r\n                                                                                    is required.\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\"\r\n                                                                             *ngIf=\"(f.FuelDetails['controls']['FuelDisplayGroupId'].value)==3\">\r\n                                                                            <label for=\"FuelDetails_NonStandardFuelDescription\">\r\n                                                                                Product\r\n                                                                                Description\r\n                                                                            </label>\r\n                                                                            <textarea class=\"form-control\" cols=\"20\"\r\n                                                                                      id=\"FuelDetails_NonStandardFuelDescription\"\r\n                                                                                      formControlName=\"NonStandardFuelDescription\"\r\n                                                                                      rows=\"2\"></textarea>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <ng-container formGroupName=\"FuelDetails\">\r\n                                                <div class=\"row mt-2\" formGroupName=\"FuelQuantity\">\r\n                                                    <div class=\"col-sm-3 fixed-quantity\">\r\n                                                        <div class=\"single-delivery-sub-types\">\r\n                                                            <label>Quantity Type</label>\r\n                                                            <select class=\"form-control\" formControlName=\"QuantityTypeId\" (change)=\"quantityTypeChanged($event.target.value)\">\r\n                                                                <option [value]=\"1\">Fixed</option>\r\n                                                                <option [value]=\"2\">Range</option>\r\n                                                                <option [value]=\"3\"> Not Specified</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-6 range-quantity\"\r\n                                                         *ngIf=\"f.FuelDetails['controls']['FuelQuantity']['controls']['QuantityTypeId'].value==2\">\r\n                                                        <div class=\"resetleftspace\">\r\n                                                            <div class=\"row\">\r\n                                                                <div class=\"col\">\r\n                                                                    <div class=\"dib\">\r\n                                                                        <label for=\"FuelDetails_FuelQuantity_MinimumQuantity\">\r\n                                                                            Min Quantity<span class=\"required pl4\"\r\n                                                                                              aria-required=\"true\">*</span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div class=\"input-group pull-left\">\r\n                                                                        <input class=\"form-control datatype-decimal\"\r\n                                                                               id=\"FuelDetails_FuelQuantity_MinimumQuantity\"\r\n                                                                               formControlName=\"MinimumQuantity\"\r\n                                                                               type='number' [value]=\"0\">\r\n                                                                        <span class=\"input-group-addon uom quantity-uom\">\r\n                                                                            {{\r\n                                                                                UoM == 1 ? 'Gallons' : 'Litres'\r\n                                                                            }}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors.pattern || f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors?.min\">\r\n                                                                            Invalid minimum quantity field.\r\n                                                                        </span>\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors.required\">\r\n                                                                            Minimum Quantity is\r\n                                                                            Required.\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"col\">\r\n                                                                    <div class=\"dib\">\r\n                                                                        <label for=\"FuelDetails_FuelQuantity_MaximumQuantity\">\r\n                                                                            Max Quantity<span class=\"required pl4\"\r\n                                                                                              aria-required=\"true\">*</span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div class=\"input-group pull-left\">\r\n                                                                        <input class=\"form-control datatype-decimal total-gallons-required\"\r\n                                                                               id=\"FuelDetails_FuelQuantity_MaximumQuantity\"\r\n                                                                               formControlName=\"MaximumQuantity\"\r\n                                                                               type=\"number\" [value]=\"0\">\r\n                                                                        <!-- (change)=\"validateMinMaxValue(this.f.FuelDetails.get('MaximumQuantity'))\" -->\r\n                                                                        <span class=\"input-group-addon uom quantity-uom\">\r\n                                                                            {{\r\n                                                                            UoM\r\n                                                                            == 1 ? 'Gallons' : 'Litres'\r\n                                                                            }}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors.pattern\">\r\n                                                                            Invalid maximum quantity field.\r\n                                                                        </span>\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors.required\">\r\n                                                                            Maximum Quantity is\r\n                                                                            Required.\r\n                                                                        </span>\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors.compareNumber\">\r\n                                                                            Max quantity should be greater than\r\n                                                                            minimum quantity.\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3 ftl-controls ftl-billable-quantity\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <label>Billable Quantity</label>\r\n                                                            <select class=\"form-control enum-ddl qty-ind\"\r\n                                                                    id=\"FuelDetails_FuelQuantity_QuantityIndicatorTypes\"\r\n                                                                    formControlName=\"QuantityIndicatorTypes\">\r\n                                                                <option [value]=\"1\" [selected]=\"true\">\r\n                                                                    Net\r\n                                                                </option>\r\n                                                                <option [value]=\"2\">\r\n                                                                    Gross\r\n                                                                </option>\r\n                                                            </select>\r\n                                                            <div *ngIf=\"f.FuelDetails.get('FuelQuantity').get('QuantityIndicatorTypes').value==2\"\r\n                                                                 class=\"row\">\r\n                                                                <div class=\"text-danger col-12 fs12 mt5\">\r\n                                                                    <span class=\"qty-ind-err warning\">\r\n                                                                        Changes\r\n                                                                        will be updated\r\n                                                                        on\r\n                                                                        BOL.\r\n                                                                        Taxes will continue to\r\n                                                                        be\r\n                                                                        calculated as per\r\n                                                                        state\r\n                                                                        quantity\r\n                                                                        regulations.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3 fixed-quantity\">\r\n                                                        <div *ngIf=\"(f.FuelDetails['controls']['FuelQuantity']['controls']['QuantityTypeId'].value)==1\" class=\"form-group\"\r\n                                                             style=\"pointer-events: visible;\">\r\n                                                            <label>Quantity</label>\r\n                                                            <div class=\"input-group\">\r\n                                                                <input class=\"form-control datatype-decimal total-gallons-required\"\r\n                                                                       id=\"FuelDetails_FuelQuantity_Quantity\"\r\n                                                                       formControlName=\"Quantity\" type=\"number\"\r\n                                                                       value=\"0\">\r\n                                                                <span class=\"input-group-addon uom quantity-uom\">\r\n                                                                    {{\r\nUoM\r\n                                                                                == 1 ? 'Gallons' : 'Litres'\r\n                                                                    }}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('Quantity').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors?.required\">\r\n                                                                    The Quantity field is\r\n                                                                    required.\r\n                                                                </span>\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors?.pattern || f.FuelDetails.get('FuelQuantity').get('Quantity').errors?.min\">\r\n                                                                    Invalid quantity field.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors.pattern\">\r\n                                                                    Invalid.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <app-pricing-section [locationForm]=\"locationForm\" [formSubmited]=\"formSubmited\" [UoM]=\"UoM\" [IsTBD]=\"IsTBDRequest\" [tbdDrProductTypeId]=\"tbdDrProductTypeId\" [tbdDrProductId]=\"tbdDrProductId\" [productDetails]=\"productDetails\"></app-pricing-section>\r\n\r\n                                <div *ngIf=\"!IsTBDRequest\" class=\"row mb25\">\r\n                                    <div class=\"col-12\" id=\"Delivery_Request\">\r\n                                        <div class=\"well\">\r\n                                            <h4>Delivery Request</h4>\r\n                                            <ng-container formGroupName=\"DeliveryRequest\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" formControlName=\"Priority\"\r\n                                                                   type=\"radio\" [value]=\"1\" id=\"radio-must-go\">\r\n                                                            <label class=\"form-check-label\" for=\"radio-must-go\">\r\n                                                                Must\r\n                                                                Go\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" formControlName=\"Priority\"\r\n                                                                   type=\"radio\" [value]=\"2\" id=\"radio-should-go\">\r\n                                                            <label class=\"form-check-label\" for=\"radio-should-go\">\r\n                                                                Should\r\n                                                                Go\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" formControlName=\"Priority\"\r\n                                                                   type=\"radio\" [value]=\"3\" id=\"radio-could-go\">\r\n                                                            <label class=\"form-check-label\" for=\"radio-could-go\">\r\n                                                                Could\r\n                                                                Go\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-12 mt10 mb10\">\r\n                                                        <div>\r\n                                                            <div>\r\n                                                                <span>\r\n                                                                    <a (click)=\"editPickupLocation()\"\r\n                                                                       data-toggle=\"modal\"\r\n                                                                       data-target=\"#dr-pickup-location2\">\r\n                                                                        <i class=\"fa fa-edit fs18\"></i>\r\n                                                                    </a>\r\n                                                                </span>\r\n                                                                <span class=\"ml10\">\r\n                                                                    <i class=\"fas fa-map-marker-alt\">\r\n                                                                    </i>\r\n                                                                    &nbsp;Pickup :\r\n                                                                </span>\r\n                                                                <span class=\"pr5\"\r\n                                                                      *ngIf=\"f.DeliveryRequest.get('PickupLocationType')?.value!=2; else location;\">\r\n                                                                    Terminal\r\n                                                                </span>\r\n                                                                <ng-template #location>\r\n                                                                    <span class=\"pr5\">\r\n                                                                        Location\r\n                                                                    </span>\r\n                                                                </ng-template>\r\n                                                            </div>\r\n                                                            <div class=\"pull-left pr5\"\r\n                                                                 *ngIf=\"(f.DeliveryRequest.get('PickupLocationType').value==1 && f.DeliveryRequest.get('Terminal')['controls']['Name']?.value); else bulkPlant;\">\r\n                                                                <span>\r\n                                                                    {{f.DeliveryRequest.get('Terminal')['controls']['Name']?.value}}\r\n                                                                </span>\r\n                                                                <span>\r\n                                                                    <a (click)=\"removePickupLocation()\">\r\n                                                                        <i class=\"fa fa-trash text-danger fs18\"\r\n                                                                           data-placement=\"top\" data-toggle=\"tooltip\"\r\n                                                                           title=\"Remove Location\"></i>\r\n                                                                    </a>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                <ng-container *ngIf=\"f.DeliveryRequest.get('BulkPlant')['controls']['SiteName'].value\">\r\n                                                                    <span>\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['SiteName'].value}},\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['City'].value}},\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['State']?.controls['Code'].value}}\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['ZipCode'].value}}\r\n                                                                    </span>\r\n                                                                    <span>\r\n                                                                        <a (click)=\"removePickupLocation()\">\r\n                                                                            <i class=\"fa fa-trash text-danger fs18\"\r\n                                                                               data-placement=\"top\"\r\n                                                                               data-toggle=\"tooltip\"\r\n                                                                               title=\"Remove Bulk Plant\"></i>\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </ng-container>\r\n                                                            </ng-template>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <select formControlName=\"ScheduleQuantityType\"\r\n                                                                    class=\"form-control country addressInput\">\r\n                                                                <option value=\"1\"> Quantity </option>\r\n                                                                <option value=\"2\"> Balance </option>\r\n                                                                <option value=\"3\"> Full Load </option>\r\n                                                                <option value=\"4\"> Small Compartment </option>\r\n                                                                <option value=\"5\"> Not Specified </option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input type=\"number\" formControlName=\"RequiredQuantity\"\r\n                                                                   class=\"form-control\"\r\n                                                                   placeholder=\"Required Fuel\"\r\n                                                                   [disableControl]=\"f.DeliveryRequest.get('ScheduleQuantityType').value!=1\" />\r\n                                                        </div>\r\n                                                        <div *ngIf=\"formSubmited && f.DeliveryRequest.get('RequiredQuantity').invalid\">\r\n                                                            <label class=\"fs12\" style=\"color:red\">\r\n                                                                Quantity is required\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input  formControlName=\"DeliveryLevelPO\"\r\n                                                                   class=\"form-control\"\r\n                                                                   placeholder=\"Delivery Level PO#\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group mb5\">\r\n                                                            <input type=\"text\" class=\"form-control\"\r\n                                                                   formControlName=\"BadgeNo1\" placeholder=\"Badge #1\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2 pr10 pl10\">\r\n                                                        <div class=\"form-group mb5 \">\r\n                                                            <input type=\"text\" class=\"form-control\"\r\n                                                                   formControlName=\"BadgeNo2\" placeholder=\"Badge #2\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2 pl5\">\r\n                                                        <div class=\"form-group mb5 \">\r\n                                                            <input type=\"text\" class=\"form-control\"\r\n                                                                   formControlName=\"BadgeNo3\" placeholder=\"Badge #3\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <textarea class=\"form-control\"\r\n                                                                      formControlName=\"DispatcherNote\"\r\n                                                                      placeholder=\"Dispatcher Note\">\r\n                                                                </textarea>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right\">\r\n                                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"_opened=false\">\r\n                                <input id=\"Submit\" type=\"button\" value=\"Submit\" (click)=\"onSubmit()\"\r\n                                       class=\"btn btn-lg btn-primary btnSubmit\">\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </ng-sidebar>\r\n        </ng-sidebar-container>\r\n        <div id=\"modal-pricing-codes\" class=\"modal fade\" role=\"dialog\" tabindex=\"-1\" data-backdrop=\"static\"\r\n             keyboard=\"false\">\r\n            <div class=\"modal-dialog modal-lg modal-pricingcode-details\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header pb0 pl20 no-border\">\r\n                        <h2 class=\"text-left mt0 mb0 fs21\">\r\n                            Pricing Code <a class=\"close color-grey pull-right pa actions\" data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"><span aria-hidden=\"true\">×</span></a>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal fade\" id=\"dr-pickup-location2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"overflow-h\">\r\n                            <div class=\"dib border pa5 radius-capsule\">\r\n                                <!--<div class=\"btn-group btn-filter\" data-toggle=\"buttons\">\r\n                                    <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                                    Terminal &nbsp;\r\n                                    <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                                    Bulk Plant\r\n                                </div>-->\r\n                                <div class=\"form-check form-check-inline\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\"\r\n                                           formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                                    <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                                </div>\r\n                                <div class=\"form-check form-check-inline\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\"\r\n                                           formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                                    <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" (click)=\"initPickupForm()\" class=\"close color-grey pull-right pa\"\r\n                                    data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <i class=\"fas fa-times\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"mt10 mb10\">\r\n                            <!-- terminal start -->\r\n                            <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\"\r\n                                 *ngIf=\"this.PickupForm.get('PickupLocationType').value==1\">\r\n                                <div class=\"col-sm-10\">\r\n                                    <div class=\"ng-autocomplete\">\r\n                                        <ng-autocomplete [data]=\"Terminals\" searchKeyword=\"Name\"\r\n                                                         placeholder=\"Terminal Name\" (selected)='onTerminalSelected($event)'\r\n                                                         [itemTemplate]=\"itemTemplate\" [notFoundTemplate]=\"notFoundTemplate\">\r\n                                        </ng-autocomplete>\r\n                                        <ng-template #itemTemplate let-item>\r\n                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                        </ng-template>\r\n                                        <ng-template #notFoundTemplate let-notFound>\r\n                                            <div [innerHTML]=\"notFound\"></div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- terminal ends -->\r\n                            <!-- bulk plant starts -->\r\n                            <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\"\r\n                                 *ngIf=\"this.PickupForm.get('PickupLocationType').value==2\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Bulk Plant</label>\r\n                                                <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\"\r\n                                                       (input)=\"onBulkPlantSearched($event)\"\r\n                                                       placeholder=\"Bulk Plant Name\" />\r\n                                                <ul class=\"auto-select border-dash\">\r\n                                                    <li *ngFor=\"let plant of BulkPlants;\"\r\n                                                        (click)=\"onBulkPlantSelected(plant)\"\r\n                                                        [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">\r\n                                                        {{plant.Name}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Address</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"Address\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                        Invalid (alphanumeric with comma spaces only)\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                                <input type=\"text\" class=\"form-control zip-code\"\r\n                                                       formControlName=\"ZipCode\" (input)=\"getAddressByZipForPickup($event)\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                        Invalid {{ CountryBasedZipcodeLabel }}\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>City</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"City\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                        Invalid (alphanumeric with comma spaces only)\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\"\r\n                                                 [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                                <label>State</label>\r\n                                                <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\"\r\n                                                        placeholder=\"Select State\" (change)=\"setStateCode($event)\"\r\n                                                        [attr.readonly]=\"isReadOnly\">\r\n                                                    <option [value]=\"null\">Select State</option>\r\n                                                    <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.StateId\">\r\n                                                        {{st.StateCode}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\"\r\n                                                        placeholder=\"Select State\" (change)=\"setStateCode($event)\">\r\n                                                    <option [value]=\"null\">Select State</option>\r\n                                                    <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.StateId\">\r\n                                                        {{st.StateCode}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                                <input type=\"hidden\" formControlName=\"Code\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\"\r\n                                                 [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                                <label>Country</label>\r\n                                                <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\"\r\n                                                        placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                                    <option [value]=\"null\">Select Country</option>\r\n                                                    <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                        {{ct.Code}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\"\r\n                                                        placeholder=\"Select Country\">\r\n                                                    <option [value]=\"null\">Select Country</option>\r\n                                                    <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                        {{ct.Code}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <ng-container *ngIf=\"formSubmited && PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                                <label>Country Group</label>\r\n                                                <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                                    <option [value]=\"null\">Select Country Group</option>\r\n                                                    <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                        {{ct.Name}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                                    <option [value]=\"null\">Select Country Group</option>\r\n                                                    <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                        {{ct.Name}}\r\n                                                    </option>\r\n                                                </select>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>County</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                        Invalid (alphanumeric with comma spaces only)\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Latitude</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                        Invalid\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Longitude</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                        Invalid\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </div>\r\n                            </div>\r\n                            <!-- bulk plant ends -->\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"button\" class=\"btn\" data-dismiss=\"modal\"\r\n                                    id=\"btnDrPickupClose2\">\r\n                                Cancel\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"updatePickupLocation()\" class=\"btn btn-primary\">Add</button>\r\n                            <!-- [disabled]=\"!PickupForm.valid\" -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, Input, ChangeDetectorRef, OnDestroy, AfterViewInit, SimpleChanges, OnChanges, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, AbstractControl } from '@angular/forms';\r\nimport { chatService } from 'src/app/shared-components/sendbird//services/sendbird.service';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { UtilService } from '../../service/util.service';\r\nimport { TrailerViewModel, ScheduleShiftModel, TripModel, DeliveryRequestViewModel, UnAssignDriverFromShiftModel, ProductDeliveryScheduleInfo, OptionalPickupDetailModel, BlendDRDetails } from '../../models/DispatchSchedulerModels';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { Subscription } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { LoadQueueService } from '../dsb-load-queue/load-queue.service';\r\nimport { DSBLoadQueueModel } from '../dsb-load-queue/dsb-load.model';\r\nimport { DeliveryrequestService } from '../../service/deliveryrequest.service';\r\nimport { SBConstants } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-driver-schedule-column-view',\r\n    templateUrl: './driver-schedule-column-view.component.html',\r\n    styleUrls: ['./driver-schedule-column-view.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DriverScheduleColumnViewComponent implements OnInit {\r\n    @Input() public i: number; //shift index\r\n    @Input() public j: number; //schedule or column index\r\n    @Input() public SbForm: FormGroup;\r\n    @Input() public schedule: FormGroup;\r\n    @Input() public ScheduleLength: number;\r\n    @Input() public ShiftId: string;\r\n    @Input() public shiftOrderNo: number; //shift order number\r\n    public SelectedTrailers: TrailerViewModel[] = [];\r\n    public UnassignedDrivers: DropdownItem[] = [];\r\n\r\n    public IsTrailerExists: boolean = false;\r\n    //public SelectedRegionId: string;//not in use\r\n    public SbFormDate: string;\r\n    public draggedDelReqData: any;\r\n    public droppedTrip: any;\r\n    public disableControl: boolean = false;\r\n    public preloadOption: any = { TripIndex: 0, Preloaded: false };\r\n    private RegionDetailTrailers: TrailerViewModel[] = [];\r\n    private UpdateDriverSubscription: Subscription;\r\n    private GroupChangeDetectSubscription: Subscription;\r\n    private ScheduleChangeDetectSubscription: Subscription;\r\n    private DisableControlsSubscription: Subscription;\r\n    private DeliveryPreloadOptionSubscription: Subscription;\r\n    private TrailerInformationChangeDetectSubscription: Subscription;\r\n    private GridViewSearchSubscription: Subscription;\r\n    public _valMessageBadgeNumbers: string;\r\n    RouteListForTrip: any[] = [];\r\n    SelectedTrip: any = null;\r\n    DeleteDrByRoutes: Subscription;\r\n    IsLoadingRoute: boolean = false;\r\n    public CompletedScheduleStatuses: number[] = [7, 8, 9, 10];\r\n    public DoNotShowPushButtonStatuses: number[] = [5, 7, 8, 9, 11, 12, 21, 22, 25];\r\n    public DeliveryScheduleInfo: ProductDeliveryScheduleInfo[] = [];\r\n    public LocationName: string;\r\n    public CustomerName: string;\r\n    public IsTBDRequest: boolean;\r\n    public tempRouteList: any[] = [];\r\n  \r\n    constructor(private sbService: ScheduleBuilderService, private dataService: DataService, private loadQueueService: LoadQueueService,\r\n        private utilService: UtilService, private chatService: chatService, private changeDetectorRef: ChangeDetectorRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.AllTrailersSubject.pipe(debounceTime(1000)).subscribe(x => {\r\n            this.RegionDetailTrailers = x;\r\n            this.IsTrailerExists = x.length > 0;\r\n            if (!this.changeDetectorRef['destroyed']) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n        this.subscribeScheduleChangeDetectSubject();\r\n        this.subscribeDisableControlsSubject();\r\n        this.subscribeDeliveryPreloadOption();\r\n        this.subscribeGridViewSearchEvents();\r\n\r\n\r\n    }\r\n    public ngAfterViewInit(): void {\r\n        window.setTimeout(() => {\r\n            this.dataService.setDeliveryPreloadOption({ ShiftIndex: this.i, ScheduleIndex: this.j, Reset: true });\r\n        }, 2000);\r\n    }\r\n\r\n    private resetPreLoadedFlag(): void {\r\n        this.preloadOption = { TripIndex: 0, Preloaded: false };\r\n    }\r\n    private setPreLoadedFlag(): void {\r\n        this.schedule.controls['Trips']['controls'].forEach((x: FormGroup, index: number) => {\r\n            let tripDrs = x.controls['DeliveryRequests']['controls'];\r\n            if (tripDrs.length > 0) {\r\n                let preloadedDrs = tripDrs.filter((y: FormGroup) => y.controls['PreLoadedFor']);\r\n                if (preloadedDrs.length == 0 && this.preloadOption['Preloaded'] == false) {\r\n                    this.preloadOption['TripIndex'] = index;\r\n                } else if (preloadedDrs.length > 0 && this.preloadOption['Preloaded'] == false) {\r\n                    this.preloadOption['TripIndex'] = index;\r\n                    this.preloadOption['Preloaded'] = true;\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.markForCheck();\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    public ngOnDestroy() {\r\n        this.unsubscribeFormChange();\r\n        this.unsubscribeScheduleChangeDetectSubject();\r\n        this.unsubscribeDeliveryPreloadOption();\r\n        if (this.DisableControlsSubscription) {\r\n            this.DisableControlsSubscription.unsubscribe();\r\n        }\r\n        if (this.GridViewSearchSubscription) {\r\n            this.GridViewSearchSubscription.unsubscribe();\r\n        }\r\n    }\r\n    public unsubscribeUpdateDriverTrailerSubject(): void {\r\n        if (this.UpdateDriverSubscription) {\r\n            this.UpdateDriverSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private unsubscribeGroupChangeDetectSubject(): void {\r\n        if (this.GroupChangeDetectSubscription) {\r\n            this.GroupChangeDetectSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private unsubscribeScheduleChangeDetectSubject(): void {\r\n        if (this.ScheduleChangeDetectSubscription) {\r\n            this.ScheduleChangeDetectSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public unsubscribeFormChange(): void {\r\n        this.dataService.FormChangeSubscription && this.dataService.FormChangeSubscription.forEach(t => {\r\n            if (t) {\r\n                t.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    private unsubscribeDeliveryPreloadOption(): void {\r\n        if (this.DeliveryPreloadOptionSubscription) {\r\n            this.DeliveryPreloadOptionSubscription.unsubscribe();\r\n        }\r\n    }\r\n    private subscribeFormChange(): void {\r\n        this.unsubscribeFormChange();\r\n        let _trips = this.schedule.controls['Trips'] as FormArray;\r\n        for (var k = 0; k < _trips.length; k++) {\r\n            let _initialValues = JSON.stringify(_trips.controls[k].value);\r\n            var formChanges = _trips.controls[k].valueChanges.pipe().subscribe(x => {\r\n                if (x) {\r\n                    let _currentValues = JSON.stringify(x);\r\n                    if (_initialValues != _currentValues) {\r\n                        this.dataService.setUnsavedChangesSubject(x);\r\n                    }\r\n                }\r\n            });\r\n            this.dataService.FormChangeSubscription && this.dataService.FormChangeSubscription.push(formChanges);\r\n        }\r\n    }\r\n\r\n    private subscribeUpdateDriverTrailerSubject(): void {\r\n        this.unsubscribeUpdateDriverTrailerSubject();\r\n        this.UpdateDriverSubscription = this.dataService.UpdateDriverTrailerSubject.subscribe(data => {\r\n            if (data) {\r\n                if (data.Driver) {\r\n                    var _dArray = this.schedule.controls['Drivers'] as FormArray;\r\n                    _dArray.clear();\r\n                    _dArray.push(this.utilService.getDriverForm(data.Driver));\r\n\r\n                    var _tArray = this.schedule.controls['Trailers'] as FormArray;\r\n                    var prevTrailer = _tArray.value;\r\n                    _tArray.clear();\r\n                    let _selectedTrailers = this.RegionDetailTrailers.filter(x => {\r\n                        return data.Trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n                    });\r\n                    _selectedTrailers.forEach(x => {\r\n                        _tArray.push(this.utilService.getAssignedTrailerForm(x));\r\n                    });\r\n                    this.updateCompartmentinfo(prevTrailer, _selectedTrailers);\r\n                    this.changeDetectorRef.detectChanges();\r\n                    this.dataService.setSaveDriverAssignmentSubject({ Index1: data.Index1, Index2: data.Index2 });\r\n                }\r\n            }\r\n            this.unsubscribeUpdateDriverTrailerSubject();\r\n        });\r\n    }\r\n\r\n    private subscribeGroupChangeDetectSubject(): void {\r\n        this.GroupChangeDetectSubscription = this.dataService.GroupChangeDetectSubject.subscribe(x => {\r\n            if (x) {\r\n                this.changeDetectorRef.detectChanges();\r\n                this.unsubscribeGroupChangeDetectSubject();\r\n                this.unsubscribeFormChange();\r\n            }\r\n        });\r\n    }\r\n    private subscribeScheduleChangeDetectSubject(): void {\r\n        this.ScheduleChangeDetectSubscription = this.dataService.ScheduleChangeDetectSubject.subscribe(x => {\r\n            if (x) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    private subscribeDisableControlsSubject(): void {\r\n        this.DisableControlsSubscription = this.dataService.DisableDSBControlsSubject.subscribe(x => {\r\n            this.disableControl = x;\r\n        });\r\n    }\r\n\r\n    private subscribeDeliveryPreloadOption(): void {\r\n        this.DeliveryPreloadOptionSubscription = this.dataService.DeliveryPreloadOption.pipe(debounceTime(2000)).subscribe(x => {\r\n            if (x) {//&& x.ShiftIndex == this.i && x.ScheduleIndex == this.j\r\n                if (x.Reset) {\r\n                    this.resetPreLoadedFlag();\r\n                }\r\n                this.setPreLoadedFlag();\r\n            }\r\n        });\r\n    }\r\n    addLoad(shiftIdx: number, scheduleIdx: number): void {\r\n        var _tArray = this.schedule.controls['Trips'] as FormArray;\r\n        let _startDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n        var shift = this.SbForm.controls['Shifts']['controls'][shiftIdx] as FormGroup;\r\n        let shiftId = shift.controls['Id'].value;\r\n        let selectedShift = this.getSelectedShift(shiftId);\r\n        let _startTime = selectedShift.StartTime;\r\n        if (_tArray.controls.length > 0) {\r\n            let lastTripStartTime = _tArray.controls[_tArray.controls.length - 1].get('StartTime').value;\r\n            let lastTripStartDate = _tArray.controls[_tArray.controls.length - 1].get('StartDate').value;\r\n            if (lastTripStartDate == '') {\r\n                lastTripStartDate = _startDate;\r\n            }\r\n            _startTime = _tArray.controls[_tArray.controls.length - 1].get('EndTime').value;\r\n            _startDate = this.getNewLoadStartDate(moment(lastTripStartDate + ' ' + lastTripStartTime).toDate(), moment(lastTripStartDate + ' ' + _startTime).toDate());\r\n        }\r\n        let startTime = moment(_startDate + ' ' + _startTime).toDate();\r\n        let trip = this.getTrailerTrip(startTime, selectedShift.SlotPeriod, scheduleIdx, _tArray.controls.length);\r\n        trip.ShiftStartTime = shift.get('StartTime').value;\r\n        trip.ShiftEndTime = shift.get('EndTime').value;\r\n        trip.SlotPeriod = shift.get('SlotPeriod').value;\r\n        trip.ShiftId = shiftId;\r\n        trip.ShiftIndex = shiftIdx;\r\n        _tArray.push(this.utilService.getTripFormGroup(trip));\r\n    }\r\n\r\n    getSelectedShift(shiftId: string): ScheduleShiftModel {\r\n        let _shifts = this.dataService.AllShiftsSubject.value as ScheduleShiftModel[];\r\n        return _shifts.find(x => x.Id == shiftId);\r\n    }\r\n\r\n    getNewLoadStartDate(startDateTime: Date, endDateTime: Date) {\r\n        if (startDateTime > endDateTime) {\r\n            endDateTime.setDate(endDateTime.getDate() + 1);\r\n        }\r\n        return moment(endDateTime).format('MM/DD/YYYY');\r\n    }\r\n\r\n    getTrailerTrip(startTime: Date, slotPeriod: number, rowIndex: number, colIndex: number): TripModel {\r\n        if (slotPeriod <= 0) { slotPeriod = 3; }\r\n        let trip = new TripModel();\r\n        trip.StartDate = moment(startTime).format('MM/DD/YYYY');\r\n        trip.StartTime = moment(startTime).format('hh:mm A');\r\n        let endTime = moment(startTime).add(slotPeriod, 'hours').toDate();\r\n        trip.EndTime = moment(endTime).format('hh:mm A');\r\n        trip.IsEditable = true;\r\n        trip.DriverRowIndex = rowIndex;\r\n        trip.DriverColIndex = colIndex;\r\n        return trip;\r\n    }\r\n\r\n    public editDriverTrailers(shiftIdx: number, scheduleIdx: number): void {\r\n        var driver: DropdownItem = { Id: null, Name: '', Code: '' };\r\n        if (this.schedule.controls['Drivers']['controls'].length > 0) {\r\n            driver = this.schedule.controls['Drivers']['controls'][0].value;\r\n        }\r\n        let _isPublishedRequestsExists = this.IsPublishedRequestsExists();\r\n        var trailers = this.schedule.controls['Trailers'].value;\r\n        let data = {\r\n            Index1: shiftIdx,\r\n            Index2: scheduleIdx,\r\n            Driver: driver.Id,\r\n            Trailers: trailers,\r\n            IsPublishedRequestsExists: _isPublishedRequestsExists,\r\n            IsIncludeAllRegionDriver: this.schedule.controls['IsIncludeAllRegionDriver'].value\r\n        };\r\n        this.SelectedTrailers = trailers;\r\n        this.dataService.setEditDriverTrailerSubject(data);\r\n        this.subscribeUpdateDriverTrailerSubject();\r\n    }\r\n    public IsPublishedRequestsExists(): boolean {\r\n        let isPublished = false;\r\n        let trips = this.schedule.controls['Trips']['controls'] as FormArray;\r\n        for (let i = 0; i < trips.length; i++) {\r\n            var drs = trips[i].controls['DeliveryRequests']['controls'] as FormArray;\r\n            for (let k = 0; k < drs.length; k++) {\r\n                if (drs[k]['controls'].PreviousStatus.value === 3) {\r\n                    isPublished = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isPublished) {\r\n                break;\r\n            }\r\n        }\r\n        return isPublished;\r\n    }\r\n    public IsDSBGridViewPublishedRequestsExists(shiftRow: any): boolean {\r\n        let isPublished = false;\r\n        let trips = shiftRow.controls['Trips']['controls'] as FormArray;\r\n        for (let i = 0; i < trips.length; i++) {\r\n            var drs = trips[i].controls['DeliveryRequests']['controls'] as FormArray;\r\n            for (let k = 0; k < drs.length; k++) {\r\n                if (drs[k]['controls'].PreviousStatus.value === 3) {\r\n                    isPublished = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isPublished) {\r\n                break;\r\n            }\r\n        }\r\n        return isPublished;\r\n    }\r\n    publishEntireRow(shiftIndex: number, rowIndex: number): void {\r\n        this.dataService.setPublishEntireRowSubject({ ShiftIndex: shiftIndex, ScheduleIndex: rowIndex, IsOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n\r\n    CheckForCancelDSButton(shiftIndex: number, rowIndex: number): boolean {\r\n        let schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        let trips = schedule.controls['Trips'] as FormArray;\r\n        let _deliveryRequests = this.utilService.GetAllLoadsDR(trips);\r\n        if (_deliveryRequests.length > 0) {\r\n            let DsCount = _deliveryRequests.length;\r\n            let check = this.sbService.returnCommonTracableElements(SBConstants.CancelCompletedDraftStatus, _deliveryRequests, true);\r\n            if (check.length > 0 && DsCount == check.length) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    draftScheduleBuilder(trip: FormGroup): void {\r\n        this.dataService.setDraftDeliveryGroupSubject({ trip: trip, filterChanged: false });\r\n    }\r\n\r\n    publishScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup): void {\r\n\r\n        this.dataService.setPublishDeliveryGroupSubject({ shiftIndex: i, rowIndex: j, colIndex: k, schedule: schedule, trip: trip, isOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n    onItemDrop(trip: FormGroup, event: any, shiftIndex: number, rowIndex: number, colIndex: number, schedule: any): void {\r\n        if (this.preloadOption[\"Preloaded\"] == false && this.preloadOption[\"TripIndex\"] < colIndex) {\r\n            this.preloadOption[\"TripIndex\"] = colIndex\r\n        }\r\n        this.dataService.setDragDropItemSubject({ trip: trip, event: event, shiftIndex: shiftIndex, rowIndex: rowIndex, colIndex: colIndex, schedule: schedule });\r\n        this.subscribeGroupChangeDetectSubject();\r\n        this.subscribeFormChange();\r\n        this.sorDrByProductSequence(trip);\r\n    }\r\n    private sorDrByProductSequence(trip: FormGroup) {\r\n        var drForm = trip.controls['DeliveryRequests'] as FormArray;\r\n        let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n        let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n        let drList = drForm.value || [];\r\n        //drList = sortArrayTwice(drList, 'JobId', 'ProductSequence');\r\n        drForm.clear();\r\n        var _drFormArray = this.utilService.getDeliveryRequestFormArray(drList, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            drForm.push(_drForm);\r\n        });\r\n    }\r\n\r\n    validateTrailerJobCompatibility(drData: any, schedule: any): void {\r\n        var _deliveryRequests = [];\r\n        _deliveryRequests.push(drData.Data.value);\r\n        let _selectedTrailers = schedule.controls[\"Trailers\"].value;\r\n        var trips = schedule.get('Trips') as FormArray;\r\n        if ((_selectedTrailers && _selectedTrailers.length > 0) && (_deliveryRequests && _deliveryRequests.length > 0)) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests).subscribe(data => {\r\n                if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                    this.highLightDRDiv(trips, data);\r\n                    Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                } else {\r\n                    this.highLightDRDiv(trips, null);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    highLightDRDiv(trips: FormArray, data) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.controls[\"IsNotCompatible\"].patchValue(false);\r\n                    deliveryRequest.controls[\"IsBlinkDR\"].patchValue(false);\r\n                    if (data) {\r\n                        if (data.deliveryRequestsNotCompatible.find(t => t.Id == deliveryRequest.controls[\"Id\"].value)) {\r\n                            deliveryRequest.controls[\"IsNotCompatible\"].patchValue(true);\r\n                            deliveryRequest.controls[\"IsBlinkDR\"].patchValue(true);\r\n                            setTimeout(() => {\r\n                                this.removeClassForAllLoad(trips);\r\n                            }, 10000);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private removeClassForAllLoad(trips: FormArray) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.controls[\"IsBlinkDR\"].patchValue(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public editExisingGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false): void {\r\n        this.editGroup(_trip, _shiftIndex, _rowIndex, _tripIndex, _schedule, _isPublishLoadInvalid);\r\n        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n    }\r\n\r\n    public editGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false, route: any = null) {\r\n\r\n        this.dataService.setEditDeliveryGroupSubject({\r\n            trip: _trip,\r\n            shiftIndex: _shiftIndex,\r\n            rowIndex: _rowIndex,\r\n            tripIndex: _tripIndex,\r\n            schedule: _schedule,\r\n            isPublishLoadInvalid: _isPublishLoadInvalid,\r\n            isOptionalPickup: false,\r\n            routeName: route,\r\n            OptionalPickupInfo: null,\r\n            OrderFuelInfo: null\r\n        });\r\n        this.subscribeFormChange();\r\n        this.subscribeGroupChangeDetectSubject();\r\n    }\r\n\r\n    private setDeletePostloadedDrsSubject(drs: DeliveryRequestViewModel[]): void {\r\n        let postloadedDrInfo = drs.filter(x => x.PostLoadInfo);\r\n        if (postloadedDrInfo.length > 0) {\r\n            this.dataService.setDeletePostloadSubject(postloadedDrInfo);\r\n        }\r\n    }\r\n    public deleteScheduleDetails(tripDetails: FormGroup, drIndex: number) {\r\n        var scheduleDetails = {\r\n            trip: tripDetails,\r\n            index: drIndex\r\n        };\r\n        this.setDeletePostloadedDrsSubject([tripDetails.controls['DeliveryRequests']['controls'][drIndex].value]);\r\n        this.dataService.setDeleteDRRequestSubject(scheduleDetails);\r\n        this.dataService.setDeliveryPreloadOption({ ShiftIndex: this.i, ScheduleIndex: this.j, Reset: true });\r\n    }\r\n    resetDrByRoutes(_shiftIndex: number, _rowIndex: number, _tripIndex: number, _trip: FormGroup, _schedule: any) {\r\n        let _data = {\r\n            i: _shiftIndex, j: _rowIndex, k: _tripIndex, trip: _trip, schedule: _schedule\r\n        }\r\n        this.resetRouteDetails(_data);\r\n    }\r\n\r\n    public deleteDrsForRoute(route: DropdownItem) {\r\n        let _trip = this.SelectedTrip.trip;\r\n        this.editGroup(_trip, _trip.i, _trip.j, _trip.k, _trip.schedule, false, route);\r\n    }\r\n\r\n    deleteDrsFromTrip(indexList: number[]) {\r\n        let _trip = this.SelectedTrip.trip;\r\n        let delieveryRequestForm = _trip.controls['DeliveryRequests'] as FormArray;\r\n        let removedDrCount = 0;\r\n        var deletedRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        for (let currentIndex = 0; currentIndex < indexList.length; currentIndex++) {\r\n\r\n            let formIndex = indexList[currentIndex];\r\n            deletedRequests.push(_trip.controls['DeliveryRequests']['controls'][formIndex - removedDrCount].value);\r\n            delieveryRequestForm.removeAt((formIndex - removedDrCount));\r\n            removedDrCount++;\r\n\r\n            if (currentIndex == indexList.length - 1) {\r\n                this.setDeletePostloadedDrsSubject(deletedRequests);\r\n                this.dataService.setRestoreDeletedRequestSubject(deletedRequests);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n\r\n                this.editExisingGroup(this.SelectedTrip.trip, this.SelectedTrip.i, this.SelectedTrip.j, this.SelectedTrip.k, this.SelectedTrip.schedule)\r\n            }\r\n        }\r\n\r\n        //close modal if no routes \r\n        if (this.RouteListForTrip.length == 0) {\r\n            let elem = document.getElementById('closeResetDrByRouteModal'); elem.click();\r\n        }\r\n        //\r\n        this.resetDrByRoutes(this.SelectedTrip.i, this.SelectedTrip.j, this.SelectedTrip.k, _trip, this.SelectedTrip.schedule);\r\n    }\r\n\r\n    public getDraggableDrsFromLoad(trip: FormGroup): any {\r\n        let drs = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        let filtered = drs.filter(x => !x.PreLoadedFor && !x.PostLoadedFor && SBConstants.DraggableScheduleStatuses.indexOf(x.TrackScheduleStatus) != -1);\r\n        return filtered;\r\n    }\r\n\r\n    public getDraggedDrs(jobId: number, trip: FormGroup): any {\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filtered = drs.filter(x => x.JobId == jobId && !x.PreLoadedFor && !x.PostLoadedFor);\r\n        return filtered;\r\n    }\r\n    public preloadDelieryForThisLoc(trip: FormGroup, tripIndex: number, jobId: number): void {\r\n        let driverTrailerInfo = this.getAssignedDriverTrailerInfo();\r\n        if (driverTrailerInfo.Trailers.length > 0 || driverTrailerInfo.Drivers.length > 0) {\r\n            let shift = this.SbForm.controls['Shifts']['controls'][this.i] as FormGroup;\r\n            let _drArray = trip.controls['DeliveryRequests'].value;\r\n            let drs = _drArray.filter(x => x.JobId == jobId);\r\n            if (drs && drs.length > 0) {\r\n                let isValidDrs = this.validatePreloadDrs(trip, drs);\r\n                if (isValidDrs) {\r\n                    this.dataService.setCreatePreloadSubject({\r\n                        ShiftId: shift.controls['Id'].value,\r\n                        ShiftIndex: this.i,\r\n                        ScheduleIndex: this.j,\r\n                        TripIndex: tripIndex,\r\n                        PreloadTrailers: driverTrailerInfo.Trailers,\r\n                        PreloadDrivers: driverTrailerInfo.Drivers,\r\n                        IsTrailerExists: this.IsTrailerExists,\r\n                        PreloadDrs: drs\r\n                    });\r\n                } else {\r\n                    let schedule = shift.controls['Schedules']['controls'][this.j] as FormGroup;\r\n                    this.editExisingGroup(trip, this.i, this.j, tripIndex, schedule, false);\r\n                }\r\n            }\r\n        } else {\r\n            Declarations.msgerror(driverTrailerInfo.ErrorMessage, undefined, undefined);\r\n        }\r\n    }\r\n\r\n    public isLastTdr(trip: any, tdr: any, isLast: boolean): boolean {\r\n        if (!tdr.controls['IsBlendedRequest'].value) {\r\n            return isLast;\r\n        }\r\n        else {\r\n            let tripDrLength = trip.value.DeliveryRequests.length;\r\n            return trip.controls['DeliveryRequests'].controls[tripDrLength - 1].controls['BlendedGroupId'].value === tdr.controls['BlendedGroupId'].value;\r\n        }\r\n    }\r\n\r\n    private validatePreloadDrs(trip: FormGroup, drs: any): boolean {\r\n        let isValid = true;\r\n        if (trip.controls['IsCommonPickup'].value == true) {\r\n            isValid = trip.valid;\r\n            if (isValid) {\r\n                let pickupType = trip.controls['PickupLocationType'].value;\r\n                if (pickupType == 2) {\r\n                    drs.forEach(x => {\r\n                        x['PickupLocationType'] = pickupType;\r\n                        x['BulkPlant'] = trip.controls['BulkPlant'].value;\r\n                        x['Terminal'] = {};\r\n                    });\r\n                } else {\r\n                    drs.forEach(x => {\r\n                        x['PickupLocationType'] = pickupType;\r\n                        x['BulkPlant'] = {};\r\n                        x['Terminal'] = trip.controls['Terminal'].value;\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            drs.forEach(x => {\r\n                if (x.IsAdditive === false) {\r\n                    if (x.PickupLocationType == 2) {\r\n                        if (!x.BulkPlant || !x.BulkPlant.SiteName || x.BulkPlant.SiteName == '') {\r\n                            isValid = false;\r\n                        }\r\n                    } else {\r\n                        if (!x.Terminal || !x.Terminal.Id || x.Terminal.Id == 0 || x.Terminal.Id == '') {\r\n                            isValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    private getAssignedDriverTrailerInfo(): any {\r\n        let info = { Drivers: [], Trailers: [], IsTrailerExists: this.IsTrailerExists, ErrorMessage: '' };\r\n        if (info.IsTrailerExists) {\r\n            info.Trailers = this.getAssignedTrailers();\r\n            if (info.Trailers.length == 0) {\r\n                info.ErrorMessage = 'Please assign a trailer to preload this delivery';\r\n            }\r\n        } else {\r\n            info.Drivers = this.getAssignedDrivers();\r\n            if (info.Drivers.length == 0) {\r\n                info.ErrorMessage = 'Please assign a driver to preload this delivery';\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n\r\n    private getAssignedTrailers(): [] {\r\n        let trailers = this.schedule.controls['Trailers'].value || [];\r\n        return trailers;\r\n    }\r\n\r\n    private getAssignedDrivers(): [] {\r\n        let drivers = this.schedule.controls['Drivers'].value || [];\r\n        return drivers;\r\n    }\r\n\r\n    public IntializeChat(driverId: any) {\r\n        this.chatService.pushDriverDetails(driverId);\r\n    }\r\n\r\n    public trackByTripIndex(index: number, schedule: any): any {\r\n        return index;\r\n    }\r\n\r\n    public trackByTrailerId(index: number, trailer: any): any {\r\n        return trailer.controls[\"TrailerId\"].value;\r\n    }\r\n\r\n    public trackByDrId(index: number, dr: any): any {\r\n        return dr.controls[\"Id\"].value;\r\n    }\r\n\r\n    public trackByDriverId(index: number, driver: any): any {\r\n        return driver.controls[\"Id\"].value;\r\n    }\r\n    public UnAssignDriverFromShift(shiftrow: any, type: any, trailerId: string = '', sbGridView: number = 0) {\r\n        if (shiftrow != undefined && shiftrow != null) {\r\n            var _trips = shiftrow.controls['Trips'].value;\r\n            var _drivers = shiftrow.controls['Drivers'].value;\r\n            let _trailers = shiftrow.controls['Trailers'].value;\r\n\r\n            if (_trips.length > 0 && (_drivers.length > 0 || _trailers.length > 0)) {\r\n                let IsAnyLoadPublished = false;\r\n                if (sbGridView == 1) {\r\n                    IsAnyLoadPublished = this.IsDSBGridViewPublishedRequestsExists(shiftrow);\r\n                }\r\n                else {\r\n                    IsAnyLoadPublished = this.IsPublishedRequestsExists();\r\n                }\r\n                if (IsAnyLoadPublished) {\r\n                    this.dataService.setRemoveTrailer('ERROR');\r\n                    Declarations.msgerror(\"A load has already been published for this driver. Cannot unassign this driver\", undefined, undefined);\r\n                } else {\r\n                    let UnAssignDriverFromShift = new UnAssignDriverFromShiftModel();\r\n                    let _sbId = this.SbForm.controls['Id'].value;\r\n                    let timeStamp = this.SbForm.controls['TimeStamp'].value;\r\n                    if (_trips.length > 0 && (_drivers.length || _trailers.length)) {\r\n                        let _rowIdx = _trips[0].DriverRowIndex;\r\n                        let _shiftIdx = _trips[0].ShiftIndex;\r\n                        UnAssignDriverFromShift.DriverRowIdx = _rowIdx;\r\n                        if (type === 'driver') {\r\n                            UnAssignDriverFromShift.Drivers = _drivers;\r\n                        }\r\n                        UnAssignDriverFromShift.sbId = _sbId;\r\n                        if (type === 'trailer' && trailerId && trailerId != '') {\r\n                            var data = _trailers.filter(top => top.Id.toString() == trailerId);\r\n                            if (data.length > 0) {\r\n                                _trailers = data;\r\n                            }\r\n                            UnAssignDriverFromShift.Trailers = _trailers;\r\n                        }\r\n                        UnAssignDriverFromShift.Trips = _trips;\r\n                        UnAssignDriverFromShift.TimeStamp = timeStamp;\r\n                        UnAssignDriverFromShift.shiftIdx = _shiftIdx;\r\n                    }\r\n                    this.sbService.UnAssignDriverTrailerFromShift(UnAssignDriverFromShift).subscribe((response) => {\r\n                        if (response) {\r\n                            if (response.StatusCode == 0) {\r\n                                Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                            } else {\r\n                                this.dataService.setRemoveTrailer('ERROR');\r\n                                Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                            }\r\n                            if (response.StatusCode == 0) {\r\n                                var tripsToUpdate = shiftrow.controls['Trips'] as FormArray;\r\n                                var updatedTimeStamp = response.Trips[0].TimeStamp;\r\n                                for (var i = 0; i < tripsToUpdate.length; i++) {\r\n                                    let thisTrip = tripsToUpdate.controls[i] as FormGroup;\r\n                                    thisTrip.patchValue({ TimeStamp: updatedTimeStamp });\r\n                                }\r\n                                let driverctrlarray = shiftrow.controls['Drivers'] as FormArray;\r\n                                if (type === 'driver') {\r\n                                    driverctrlarray.clear();// Clear driver formarray controls\r\n                                    this.schedule.controls['IsIncludeAllRegionDriver'].patchValue(false);\r\n                                }\r\n                                if (type === 'trailer') {\r\n                                    this.unassignTrailers(shiftrow, type, trailerId);\r\n                                }\r\n                                this.changeDetectorRef.detectChanges();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private unassignTrailers(shiftrow: any, type: any, trailerId: string = ''): void {\r\n        if (type === 'trailer') {\r\n            let trailerctrlarray = shiftrow.get('Trailers') as FormArray;\r\n            if (trailerId != '') {\r\n                var trailerIndex = trailerctrlarray.value.findIndex(top => top.Id.toString() == trailerId);\r\n                if (trailerIndex != -1) {\r\n                    this.dataService.setRemoveTrailer(trailerId);\r\n                    trailerctrlarray.removeAt(trailerIndex);\r\n                    var removeTrailer = [trailerId];\r\n                    this.removeCompartmentinfo(removeTrailer, shiftrow);\r\n                    this.dataService.setTrailerInformationSubject(shiftrow);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public editCompartmentAssignments(): void {\r\n        Declarations.slidePanel(\"#compartment-assigning\", \"97%\");\r\n        this.dataService.setEditCompartmentAssigmentSubject({ Schedule: this.schedule.value, ShiftIndex: this.i, RowIndex: this.j });\r\n    }\r\n    private updateCompartmentinfo(prevTrailer: any[], _selectedTrailers: any[]): void {\r\n        var removedTrailer = [];\r\n        for (var i = 0, len = prevTrailer.length; i < len; i++) {\r\n            var missingTrailerIndex = _selectedTrailers.findIndex(x => x.Id.toString() == prevTrailer[i].Id.toString());\r\n            if (missingTrailerIndex == -1) {\r\n                removedTrailer.push(prevTrailer[i].Id);\r\n            }\r\n        }\r\n        this.removeCompartmentinfo(removedTrailer, this.schedule);\r\n    }\r\n    private removeCompartmentinfo(removedTrailer: any[], shiftrow: any): void {\r\n        if (this.IsTrailerExists && removedTrailer.length > 0) {\r\n            var _tripsInfo = shiftrow.controls['Trips']['controls'] as FormArray;\r\n            for (var k = 0; k < _tripsInfo.length; k++) {\r\n                var tripsInfoControl = _tripsInfo[k].controls as FormGroup;\r\n                tripsInfoControl['IsTrailerExists'].patchValue(this.IsTrailerExists);\r\n                var deliveryRequest = _tripsInfo[k].controls['DeliveryRequests']['controls'] as FormArray;\r\n                for (var j = 0; j < deliveryRequest.length; j++) {\r\n                    var compartmentInfo = deliveryRequest[j].controls[\"Compartments\"] as FormArray;\r\n                    for (var i = 0; i < removedTrailer.length; i++) {\r\n                        var compartmentIndex = compartmentInfo.value.findIndex(x => x.TrailerId.toString() == removedTrailer[i].toString());\r\n                        if (compartmentIndex != -1) {\r\n                            compartmentInfo.removeAt(compartmentIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var _tripsInfo = shiftrow.controls['Trips']['controls'] as FormArray;\r\n            for (var k = 0; k < _tripsInfo.length; k++) {\r\n                var tripsInfoControl = _tripsInfo[k].controls as FormGroup;\r\n                tripsInfoControl['IsTrailerExists'].patchValue(this.IsTrailerExists);\r\n            }\r\n        }\r\n    }\r\n    truncatestring(source: any, size) {\r\n        let trailerName = '';\r\n        if (source) {\r\n            trailerName = $.map(source.value, function (obj) {\r\n                return obj.TrailerId\r\n            }).join(',');\r\n        }\r\n        if (trailerName != '') {\r\n            return trailerName.length > size ? trailerName.slice(0, size - 1) + \"...\" : trailerName;\r\n        }\r\n        return trailerName;\r\n    }\r\n    displayBulkPlanName(source: any) {\r\n        var str = '';\r\n        if (source != null && source != '') {\r\n            var stringInfo = source.split(/[ ,-]+/);\r\n            if (stringInfo.length == 1) {\r\n                str = source.substr(0, 1);\r\n                str = str + source.substr(source.length - 1);\r\n                return str;\r\n            }\r\n            else {\r\n                var firststring = stringInfo[0];\r\n                var lastString = stringInfo[stringInfo.length - 1];\r\n                str = firststring.substr(0, 1);\r\n                str = str + lastString.substr(0, 1);\r\n                return str;\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n    GetDeliveryScheduleInfo(jobId: number, tripControl: any, tripIndex: number, drInfo: DeliveryRequestViewModel) {\r\n        this.DeliveryScheduleInfo = [];\r\n        var deliveryRequest = tripControl.controls['DeliveryRequests'] as FormArray;\r\n        var tBDGroupId = drInfo.TBDGroupId;\r\n        //var ScheduleStartTime1 = drInfo.ScheduleStartTime;\r\n        //var ScheduleEndTime2 = drInfo.ScheduleEndTime;\r\n        deliveryRequest.controls.forEach((_drForm: any) => {\r\n            var productDeliveryScheduleInfo = new ProductDeliveryScheduleInfo();\r\n            var jobInfo = _drForm.controls['JobId'].value;\r\n            var tBDFGroupInfo = _drForm.controls['TBDGroupId'].value;\r\n            if (jobId == jobInfo && !drInfo.IsTBD) {\r\n                productDeliveryScheduleInfo.BlendGroupId = _drForm.controls['BlendedGroupId'].value;\r\n                if (_drForm.controls['IsBlendedRequest'].value == false || !this.DeliveryScheduleInfo.some(t => t.BlendGroupId == productDeliveryScheduleInfo.BlendGroupId)) {\r\n                    productDeliveryScheduleInfo.LocationName = _drForm.controls['JobName'].value;\r\n                    this.LocationName = productDeliveryScheduleInfo.LocationName;\r\n                    productDeliveryScheduleInfo.CustomerName = _drForm.controls['CustomerCompany'].value;\r\n                    this.CustomerName = productDeliveryScheduleInfo.CustomerName;\r\n                    productDeliveryScheduleInfo.ScheduleStartTime = _drForm.controls['ScheduleStartTime'].value;\r\n                    productDeliveryScheduleInfo.ScheduleEndTime = _drForm.controls['ScheduleEndTime'].value;\r\n                    this.IsTBDRequest = _drForm.controls['IsTBD'].value;\r\n                    productDeliveryScheduleInfo.Status = _drForm.controls['Status'].value;\r\n                    productDeliveryScheduleInfo.StatusClassId = _drForm.controls['StatusClassId'].value;\r\n                    productDeliveryScheduleInfo.Priority = _drForm.controls['Priority'].value;\r\n                    productDeliveryScheduleInfo.IsBlinkDR = _drForm.controls['IsBlinkDR'].value;\r\n                    productDeliveryScheduleInfo.ScheduleQuantityType = _drForm.controls['ScheduleQuantityType'].value;\r\n                    productDeliveryScheduleInfo.UoM = _drForm.controls['UoM'].value;\r\n                    productDeliveryScheduleInfo.IsAutoCreatedDR = _drForm.controls['IsAutoCreatedDR'].value;\r\n                    productDeliveryScheduleInfo.DelReqSource = _drForm.controls['DelReqSource'].value;\r\n                    productDeliveryScheduleInfo.isRecurringSchedule = _drForm.controls['isRecurringSchedule'].value;\r\n                    productDeliveryScheduleInfo.IsCommonPickup = tripControl.controls['IsCommonPickup'].value;\r\n                    productDeliveryScheduleInfo.CommonPickupLocationType = tripControl.controls['PickupLocationType'].value;\r\n                    productDeliveryScheduleInfo.ScheduleQuantityTypeText = _drForm.controls['ScheduleQuantityTypeText'].value;\r\n                    this.getDRInfo(_drForm, productDeliveryScheduleInfo);\r\n                    if (productDeliveryScheduleInfo.IsCommonPickup) {\r\n                        if (productDeliveryScheduleInfo.CommonPickupLocationType == 2) {\r\n                            productDeliveryScheduleInfo.Address = tripControl.controls['BulkPlant'].controls['Address'].value;\r\n                            productDeliveryScheduleInfo.City = tripControl.controls['BulkPlant'].controls['City'].value;\r\n                            productDeliveryScheduleInfo.Code = tripControl.controls['BulkPlant'].controls['State'].controls['Code'].value;\r\n                            productDeliveryScheduleInfo.ZipCode = tripControl.controls['BulkPlant'].controls['ZipCode'].value;\r\n                        }\r\n                        else {\r\n                            productDeliveryScheduleInfo.PickupLocationName = tripControl.controls['Terminal'].controls['Name'].value;\r\n                        }\r\n                    }\r\n                    productDeliveryScheduleInfo.IsFilldInvoke = _drForm.controls['IsFilldInvoke'].value;\r\n                    productDeliveryScheduleInfo.BadgeNo1 = _drForm.controls['BadgeNo1'].value;\r\n                    productDeliveryScheduleInfo.BadgeNo2 = _drForm.controls['BadgeNo2'].value;\r\n                    productDeliveryScheduleInfo.BadgeNo3 = _drForm.controls['BadgeNo3'].value;\r\n                    if (_drForm.controls['RouteInfo'].value && _drForm.controls['RouteInfo'].value.Name) {\r\n                        productDeliveryScheduleInfo.RouteName = _drForm.controls['RouteInfo'].value.Name;\r\n                    }\r\n                    var badgeInfo = [productDeliveryScheduleInfo.BadgeNo1, productDeliveryScheduleInfo.BadgeNo2, productDeliveryScheduleInfo.BadgeNo3];\r\n                    productDeliveryScheduleInfo.BadgeNoInfo = badgeInfo.filter(function (val) { return val; }).join(\", \");\r\n                    productDeliveryScheduleInfo.TankMaxFill = _drForm.controls['TankMaxFill'].value;\r\n                    if (_drForm.controls['PreLoadedFor']) {\r\n                        productDeliveryScheduleInfo.isPreload = true;\r\n                    }\r\n                    if (_drForm.controls['PostLoadedFor']) {\r\n                        productDeliveryScheduleInfo.isPostload = true;\r\n                    }\r\n                    productDeliveryScheduleInfo.TripIndex = tripIndex;\r\n                    productDeliveryScheduleInfo.IsSelectedForAssignment = _drForm.controls['IsSelectedForAssignment'].value;\r\n                    //Marine Nomination                \r\n                    productDeliveryScheduleInfo.IsMarine = _drForm.controls['IsMarine'].value;\r\n                    this.DeliveryScheduleInfo.push(productDeliveryScheduleInfo);\r\n                }\r\n                else {\r\n                    productDeliveryScheduleInfo = this.DeliveryScheduleInfo.find(t => t.BlendGroupId == productDeliveryScheduleInfo.BlendGroupId);\r\n                    this.getDRInfo(_drForm, productDeliveryScheduleInfo);\r\n                }\r\n            }\r\n            else if (tBDGroupId != null && tBDGroupId == tBDFGroupInfo && drInfo.IsTBD == true) {\r\n                productDeliveryScheduleInfo.LocationName = _drForm.controls['JobName'].value;\r\n                this.LocationName = productDeliveryScheduleInfo.LocationName;\r\n                productDeliveryScheduleInfo.CustomerName = _drForm.controls['CustomerCompany'].value;\r\n                this.CustomerName = productDeliveryScheduleInfo.CustomerName;\r\n                productDeliveryScheduleInfo.ScheduleStartTime = _drForm.controls['ScheduleStartTime'].value;\r\n                productDeliveryScheduleInfo.ScheduleEndTime = _drForm.controls['ScheduleEndTime'].value;\r\n                this.IsTBDRequest = _drForm.controls['IsTBD'].value;\r\n                productDeliveryScheduleInfo.Status = _drForm.controls['Status'].value;\r\n                productDeliveryScheduleInfo.StatusClassId = _drForm.controls['StatusClassId'].value;\r\n                productDeliveryScheduleInfo.Priority = _drForm.controls['Priority'].value;\r\n                productDeliveryScheduleInfo.IsBlinkDR = _drForm.controls['IsBlinkDR'].value;\r\n                productDeliveryScheduleInfo.ScheduleQuantityType = _drForm.controls['ScheduleQuantityType'].value;\r\n                productDeliveryScheduleInfo.UoM = _drForm.controls['UoM'].value;\r\n                productDeliveryScheduleInfo.IsAutoCreatedDR = _drForm.controls['IsAutoCreatedDR'].value;\r\n                productDeliveryScheduleInfo.DelReqSource = _drForm.controls['DelReqSource'].value;\r\n                productDeliveryScheduleInfo.isRecurringSchedule = _drForm.controls['isRecurringSchedule'].value;\r\n                productDeliveryScheduleInfo.IsCommonPickup = tripControl.controls['IsCommonPickup'].value;\r\n                productDeliveryScheduleInfo.CommonPickupLocationType = tripControl.controls['PickupLocationType'].value;\r\n                productDeliveryScheduleInfo.ScheduleQuantityTypeText = _drForm.controls['ScheduleQuantityTypeText'].value;\r\n                this.getDRInfo(_drForm, productDeliveryScheduleInfo);\r\n                if (productDeliveryScheduleInfo.IsCommonPickup) {\r\n                    if (productDeliveryScheduleInfo.CommonPickupLocationType == 2) {\r\n                        productDeliveryScheduleInfo.Address = tripControl.controls['BulkPlant'].controls['Address'].value;\r\n                        productDeliveryScheduleInfo.City = tripControl.controls['BulkPlant'].controls['City'].value;\r\n                        productDeliveryScheduleInfo.Code = tripControl.controls['BulkPlant'].controls['State'].controls['Code'].value;\r\n                        productDeliveryScheduleInfo.ZipCode = tripControl.controls['BulkPlant'].controls['ZipCode'].value;\r\n                    }\r\n                    else {\r\n                        productDeliveryScheduleInfo.PickupLocationName = tripControl.controls['Terminal'].controls['Name'].value;\r\n                    }\r\n                }\r\n                productDeliveryScheduleInfo.IsFilldInvoke = _drForm.controls['IsFilldInvoke'].value;\r\n                productDeliveryScheduleInfo.BadgeNo1 = _drForm.controls['BadgeNo1'].value;\r\n                productDeliveryScheduleInfo.BadgeNo2 = _drForm.controls['BadgeNo2'].value;\r\n                productDeliveryScheduleInfo.BadgeNo3 = _drForm.controls['BadgeNo3'].value;\r\n                if (_drForm.controls['RouteInfo'].value && _drForm.controls['RouteInfo'].value.Name) {\r\n                    productDeliveryScheduleInfo.RouteName = _drForm.controls['RouteInfo'].value.Name;\r\n                }\r\n                var badgeInfo = [productDeliveryScheduleInfo.BadgeNo1, productDeliveryScheduleInfo.BadgeNo2, productDeliveryScheduleInfo.BadgeNo3];\r\n                productDeliveryScheduleInfo.BadgeNoInfo = badgeInfo.filter(function (val) { return val; }).join(\", \");\r\n                productDeliveryScheduleInfo.TankMaxFill = _drForm.controls['TankMaxFill'].value;\r\n                if (_drForm.controls['PreLoadedFor']) {\r\n                    productDeliveryScheduleInfo.isPreload = true;\r\n                }\r\n                if (_drForm.controls['PostLoadedFor']) {\r\n                    productDeliveryScheduleInfo.isPostload = true;\r\n                }\r\n                productDeliveryScheduleInfo.TripIndex = tripIndex;\r\n                productDeliveryScheduleInfo.IsSelectedForAssignment = _drForm.controls['IsSelectedForAssignment'].value;\r\n                //Marine Nomination                \r\n                productDeliveryScheduleInfo.IsMarine = _drForm.controls['IsMarine'].value;\r\n                this.DeliveryScheduleInfo.push(productDeliveryScheduleInfo);\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private getDRInfo(_drForm: any, productDeliveryScheduleInfo: ProductDeliveryScheduleInfo) {\r\n        let drInfo = new BlendDRDetails();\r\n        if (_drForm.controls['IsAdditive'].value == true) {\r\n            drInfo.ProductName = _drForm.controls['FuelType'].value;\r\n        }\r\n        else {\r\n            drInfo.ProductName = _drForm.controls['ProductType'].value;\r\n        }\r\n        drInfo.IsAdditive = _drForm.controls['IsAdditive'].value;\r\n        drInfo.RequiredQuantity = _drForm.controls['RequiredQuantity'].value;\r\n        drInfo.PickupLocationType = _drForm.controls['PickupLocationType'].value;\r\n        drInfo.Id = _drForm.controls['Id'].value;\r\n        drInfo.DeliveryDateStartTime = _drForm.controls['DeliveryDateStartTime'].value;\r\n        drInfo.TrackScheduleStatusName = _drForm.controls['TrackScheduleStatusName'].value;\r\n        drInfo.Vessel = _drForm.controls['Vessel'].value;\r\n        drInfo.Berth = _drForm.controls['Berth'].value;\r\n        drInfo.IsBlendedRequest = _drForm.controls['IsBlendedRequest'].value;\r\n        drInfo.Priority = _drForm.controls['Priority'].value;\r\n        drInfo.StatusClassId = _drForm.controls['StatusClassId'].value;\r\n        drInfo.IsBlinkDR = _drForm.controls['IsBlinkDR'].value;\r\n        drInfo.ScheduleStartTime = _drForm.controls['ScheduleStartTime'].value;\r\n        drInfo.ScheduleEndTime = _drForm.controls['ScheduleEndTime'].value;\r\n        if (drInfo.PickupLocationType == 2) {\r\n            drInfo.Address = _drForm.controls['BulkPlant'].controls['Address'].value;\r\n            drInfo.City = _drForm.controls['BulkPlant'].controls['City'].value;\r\n            drInfo.Code = _drForm.controls['BulkPlant'].controls['State'].controls['Code'].value;\r\n            drInfo.ZipCode = _drForm.controls['BulkPlant'].controls['ZipCode'].value;\r\n        }\r\n        else {\r\n            drInfo.PickupLocationName = _drForm.controls['Terminal'].controls['Name'].value;\r\n        }\r\n        productDeliveryScheduleInfo.DrInfo.push(drInfo);\r\n    }\r\n\r\n    public TransferDS(jobId: number, trip: FormGroup, DrIndex: number, ShiftIndex: number, RowIndex: number, ColIndex: number, schedule: any) {\r\n        let data = {\r\n            jobId: jobId,\r\n            trip: trip,\r\n            DrIndex: DrIndex,\r\n            ShiftIndex: ShiftIndex,\r\n            RowIndex: RowIndex,\r\n            ColIndex: ColIndex,\r\n            schedule: schedule\r\n        };\r\n        this.dataService.setTransferDSSubject(data);\r\n    }\r\n\r\n    public fnIsLastDr(trip, tdr) {\r\n        var drInfo = tdr.value as DeliveryRequestViewModel;\r\n        var isLastReq = false;\r\n        if (!drInfo.IsTBD) {\r\n            var jobId = drInfo.JobId;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var drs = trip.value.DeliveryRequests as DeliveryRequestViewModel[];\r\n            var finalDRs = [];\r\n            drs.forEach(x => {\r\n                if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                    finalDRs.push(x);\r\n                }\r\n                else {\r\n                    finalDRs.push(x);\r\n                }\r\n            });\r\n            var jobDrs = finalDRs.filter(t => t.JobId == jobId);\r\n            isLastReq = drID == jobDrs[jobDrs.length - 1].Id;\r\n        }\r\n        else {\r\n            var TBDGroupId = tdr.controls[\"TBDGroupId\"].value;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var tbddrs = trip.value.DeliveryRequests;\r\n            var jobtbDrs = tbddrs.filter(t => t.TBDGroupId == TBDGroupId);\r\n            isLastReq = drID == jobtbDrs[jobtbDrs.length - 1].Id;\r\n        }\r\n        return isLastReq;\r\n    }\r\n    public fnIsLastDrSeq(trip, tdr) {\r\n        var drInfo = tdr.value as DeliveryRequestViewModel;\r\n        var isLastReq = false;\r\n        if (!drInfo.IsTBD) {\r\n            var jobId = drInfo.JobId;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var drs = trip.value.DeliveryRequests as DeliveryRequestViewModel[];\r\n            var finalDRs = [];\r\n            drs.forEach(x => {\r\n                if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                    finalDRs.push(x);\r\n                }\r\n                else {\r\n                    finalDRs.push(x);\r\n                }\r\n            });\r\n            var jobDrs = finalDRs.filter(t => t.JobId == jobId);\r\n            isLastReq = drID == jobDrs[jobDrs.length - 1].Id;\r\n        }\r\n        else {\r\n            var TBDGroupId = drInfo.TBDGroupId;\r\n            var drTBDID = drInfo.Id;\r\n            var drTBDs = trip.value.DeliveryRequests;\r\n            var jobTBDDrs = drTBDs.filter(t => t.TBDGroupId == TBDGroupId);\r\n            isLastReq = drTBDID == jobTBDDrs[jobTBDDrs.length - 1].Id;\r\n        }\r\n        return isLastReq;\r\n    }\r\n    public getTrailerInfo(trailerControl: any) {\r\n        if (this.TrailerInformationChangeDetectSubscription) {\r\n            this.TrailerInformationChangeDetectSubscription.unsubscribe();\r\n        }\r\n        this.subscribeTrailerInformationDetectSubject();\r\n        this.dataService.setTrailerInformationSubject(trailerControl);\r\n    }\r\n    subscribeTrailerInformationDetectSubject(): void {\r\n        this.TrailerInformationChangeDetectSubscription = this.dataService.UnAssignTrailerFromShift.subscribe(x => {\r\n            if (x) {\r\n                this.UnAssignDriverFromShift(x.schedule, x.type, x.trailerId, 1);\r\n            }\r\n        });\r\n    }\r\n    private resetRouteDetails(x: any) {\r\n        this.RouteListForTrip = [];\r\n        if (x) {\r\n\r\n            this.SelectedTrip = x;\r\n            let drForm = this.SelectedTrip.trip.controls['DeliveryRequests'] as FormArray;\r\n            let drValue = drForm ? drForm.value as DeliveryRequestViewModel[] : [];\r\n            drValue.forEach(dr => {\r\n                if (dr && dr.RouteInfo && dr.PostLoadedFor == undefined) {\r\n                    let drIndex = this.RouteListForTrip.findIndex(a => a.Id == dr.RouteInfo.Id);\r\n                    if (drIndex === -1) { this.RouteListForTrip.push(dr.RouteInfo); }\r\n                }\r\n            });\r\n            if (this.RouteListForTrip.length > 0) {\r\n                var routeParamInfo = {\r\n                    SelectedTrip: this.SelectedTrip,\r\n                    RouteListForTrip: this.RouteListForTrip\r\n                };\r\n                let _trip = this.SelectedTrip;\r\n                let _routeTripInfo = this.RouteListForTrip;\r\n                this.dataService.setRouteDetailsSubject(routeParamInfo);\r\n                this.editGroup(_trip.trip, _trip.i, _trip.j, _trip.k, _trip.schedule, false, _routeTripInfo);\r\n            }\r\n            else {\r\n                var routeParamInfo = {\r\n                    SelectedTrip: this.SelectedTrip,\r\n                    RouteListForTrip: this.RouteListForTrip\r\n                };\r\n                this.dataService.setRouteDetailsSubject(routeParamInfo);\r\n                let elem = document.getElementById('closeResetDrByRouteModal'); elem.click();\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    subscribeGridViewSearchEvents(): void {\r\n        this.GridViewSearchSubscription = this.dataService.GridViewSearchGroupSubject.subscribe(x => {\r\n            if (x) {\r\n\r\n                let searchLocation = x.searchLocation;\r\n                this.filterGridView(searchLocation);\r\n\r\n            }\r\n        });\r\n    }\r\n    public filterGridView(searchLocation: string) {\r\n        try {\r\n            let shiftCounts = 0;\r\n            var shifts = this.SbForm.controls[\"Shifts\"] as FormArray;\r\n            shiftCounts = shifts.length;\r\n            for (var i = 0; i < shifts.controls.length; i++) {\r\n                let shiftInfo = shifts.controls[i] as FormGroup;\r\n                let _schedules = shiftInfo.controls['Schedules'] as FormArray;\r\n                for (var j = 0; j < _schedules.controls.length; j++) {\r\n                    let scheduleInfo = _schedules.controls[j] as FormGroup;\r\n                    let trips = scheduleInfo.get('Trips') as FormArray;\r\n                    for (var k = 0; k < trips.controls.length; k++) {\r\n                        let tripInfo = trips.controls[k] as FormGroup;\r\n                        let deliveryReqs = tripInfo.get('DeliveryRequests') as FormArray;\r\n                        for (var l = 0; l < deliveryReqs.controls.length; l++) {\r\n                            let delReq = deliveryReqs.controls[l] as FormGroup;\r\n                            if (searchLocation != '') {\r\n                                searchLocation = searchLocation.trim().toLowerCase();\r\n                                let jobName = delReq.controls['JobName'].value;\r\n                                if (jobName != '' && jobName != null) {\r\n                                    jobName = jobName.trim().toLowerCase();\r\n                                    if (jobName.indexOf(searchLocation) != -1) {\r\n                                        delReq.controls['IsJobFilter'].patchValue(true);\r\n                                    }\r\n                                    else {\r\n                                        delReq.controls['IsJobFilter'].patchValue(false);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    delReq.controls['IsJobFilter'].patchValue(true);\r\n                                }\r\n                            }\r\n                            else {\r\n                                delReq.controls['IsJobFilter'].patchValue(true);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if ((i + 1) == shiftCounts) {\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    moveColumnToLoadQueue(): void {\r\n\r\n        //apply client side first\r\n        this.schedule.get('IsLoadQueueCollapsed').patchValue(true);\r\n        this.loadQueueService.setLoadQueueColumnMoved(true);\r\n        this.changeDetectorRef.markForCheck();\r\n        this.dataService.setDriverColumnChangeDetect(true);\r\n\r\n        //send collapsed columns to api\r\n        const data: DSBLoadQueueModel = {\r\n            Id: null,\r\n            RegionId: this.SbForm.get('RegionId').value,\r\n            ShiftIndex: this.i,\r\n            Date: this.SbForm.get('Date').value,\r\n            DriverRowIndex: this.j,\r\n            ScheduleBuilderId: '',\r\n            ShiftId: this.ShiftId,\r\n        };\r\n\r\n        this.loadQueueService.createLoadQueue([data]).subscribe((data) => {\r\n            if (data && data.StatusCode == 0) {\r\n                if (data.DsbLoadQueueSuccess && data.DsbLoadQueueSuccess.length > 0) {\r\n                    this.schedule.get('LoadQueueId').patchValue(data.DsbLoadQueueSuccess[0].Id);\r\n                }\r\n            } else {\r\n                Declarations.msgerror(\"Unable to collapse column. Please try later.\", undefined, undefined);\r\n                //if api fail, revert client side changes also\r\n                this.schedule.get('IsLoadQueueCollapsed').patchValue(false);\r\n                this.loadQueueService.setLoadQueueColumnMoved(true);\r\n                this.changeDetectorRef.markForCheck();\r\n                this.dataService.setDriverColumnChangeDetect(true);\r\n            }\r\n        });\r\n    }\r\n    //carrier assignmnet\r\n    drSelectedForCarrierAssignment(event: any, drId: string, tripIndex: number) {\r\n        let drs = this.schedule.controls['Trips']['controls'][tripIndex]['controls']['DeliveryRequests'] as FormArray;\r\n        drs.controls.forEach((drForm: FormControl) => {\r\n            if (drForm.get('Id').value == drId) {\r\n                drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n            }\r\n        })\r\n    }\r\n    isAllTipsDrSelected(_drs: any) {\r\n        let drs = _drs.value || [];\r\n        return drs.every(dr => dr.IsSelectedForAssignment == true);\r\n    }\r\n    triptSelectedForCarrierAssignment(event: any, tripIndex: number) {\r\n        let drs = this.schedule.controls['Trips']['controls'][tripIndex]['controls']['DeliveryRequests'] as FormArray;\r\n        drs.controls.forEach((drForm: FormControl) => {\r\n            if (drForm.get('IsSelectedForAssignment').value != event.target.checked) {\r\n                drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n            }\r\n        })\r\n    }\r\n    isDrExistInColumn(_Trips: AbstractControl) {\r\n        let TripsArray = _Trips.value || [];\r\n        return TripsArray.some(trip => trip.DeliveryRequests.length > 0);\r\n    }\r\n    isAllColumnDrSelected(_Trips: AbstractControl) {\r\n        let TripsArray = _Trips.value || [];\r\n        return TripsArray.every(trip => trip.DeliveryRequests.every(dr => dr.IsSelectedForAssignment == true));\r\n    }\r\n    columnSelectedForCarrierAssignment(event, _Trips: AbstractControl) {\r\n        _Trips['controls'].forEach((trip: FormControl) => {\r\n            let drs = trip['controls']['DeliveryRequests'] as FormArray;\r\n            drs.controls.forEach((drForm: FormControl) => {\r\n                if (drForm.get('IsSelectedForAssignment').value != event.target.checked) {\r\n                    drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    //add Optional pickup for particular column in DSB.\r\n    addOptionalPickup(schedule: FormGroup) {\r\n        var orderIds = [];\r\n        let tripsControl = schedule['controls']['Trips'] as FormArray;\r\n        tripsControl.controls.forEach((delR: FormGroup) => {\r\n            let drControl = delR.controls['DeliveryRequests'] as FormArray;\r\n            drControl.controls.forEach((delGroup: FormGroup) => {\r\n                if (orderIds.findIndex(x => x == delGroup.get('OrderId').value) == -1) {\r\n                    orderIds.push(delGroup.get('OrderId').value);\r\n                }\r\n            });\r\n        });\r\n        if (orderIds.length > 0) {\r\n            this.sbService.getOrderFuelTypes(orderIds).subscribe(data => {\r\n                let finalObj = { shiftIndex: this.i, shiftOrderNo: this.shiftOrderNo, ShiftId: this.ShiftId, RegionId: this.SbForm.get('RegionId').value, ScheduleBuilderId: this.SbForm.get('Id').value, ColIndex: this.j, scheduleInfo: schedule, FuelTypeInfo: data };\r\n                this.dataService.setOptionalPickupInfo(finalObj);\r\n            });\r\n        }\r\n        else {\r\n            let finalObj = { shiftIndex: this.i, shiftOrderNo: this.shiftOrderNo, ShiftId: this.ShiftId, RegionId: this.SbForm.get('RegionId').value, ScheduleBuilderId: this.SbForm.get('Id').value, ColIndex: this.j, scheduleInfo: schedule, FuelTypeInfo: null };\r\n            this.dataService.setOptionalPickupInfo(finalObj);\r\n\r\n        }\r\n\r\n    }\r\n    cancelEntireRow(shiftIndex: number, rowIndex: number): void {\r\n        this.dataService.setCancelEntireRowSubject({ ShiftIndex: shiftIndex, ScheduleIndex: rowIndex, IsOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n\r\n    LoadLevelCacelButtonHideShow(trip: FormGroup): boolean {\r\n        let delReqs = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n        if (delReqs.length > 0) {\r\n            let loadDrLength = delReqs.length;\r\n            let checkCommonElements = this.sbService.returnCommonTracableElements(SBConstants.CancelCompletedDraftStatus, delReqs, true);\r\n            if (checkCommonElements.length > 0 && loadDrLength == checkCommonElements.length) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    cancelScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup): void {\r\n        this.dataService.setCancelDSDeliveryGroupSubject({ shiftIndex: i, rowIndex: j, colIndex: k, schedule: schedule, trip: trip, isOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n    public CancelLocationDS(jobId: number, trip: FormGroup, isTBD: number = 0, TBDGroupId: string = '') {\r\n        let data = {\r\n            jobId: jobId,\r\n            trip: trip,\r\n            isTBD: isTBD,\r\n            TBDGroupId: TBDGroupId\r\n        };\r\n        this.dataService.setCancelDSLocationDSSubject(data);\r\n    }\r\n    DoNotShowCancelDSButton(jobId: number, trip: FormGroup) {\r\n        let buttonstatus = true;\r\n        let EnrouteInCompleted = [3, 7, 8, 9, 22, 23];\r\n        let EnrouteInProgress = [1, 3, 11, 12, 13, 14, 15, 16, 17, 18];\r\n        if (this.disableControl) {\r\n            buttonstatus = false;\r\n        }\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filteredDRs = drs.filter(x => x.JobId == jobId && !x.PreLoadedFor && !x.PostLoadedFor && x.TrackableScheduleId > 0) as DeliveryRequestViewModel[];\r\n        if (filteredDRs.length == 0) {\r\n            buttonstatus = false;\r\n        }\r\n        else {\r\n            filteredDRs.forEach(x => {\r\n                if (EnrouteInProgress.indexOf(x.TrackScheduleEnrouteStatus) == -1 || EnrouteInCompleted.indexOf(x.TrackScheduleStatus) == -1) {\r\n                    buttonstatus = false;\r\n                }\r\n            });\r\n        }\r\n        return buttonstatus;\r\n    }\r\n    public CancelButtonVisible(trip, tdr) {\r\n        var buttonShowStatus = false;\r\n        var jobId = tdr.controls[\"JobId\"].value;\r\n        var drs = trip.value.DeliveryRequests;\r\n        var isTBD = drs.filter(t => t.IsTBD == true).length > 0 ? true : false;\r\n        var jobDrs = drs.filter(t => t.JobId == jobId) as DeliveryRequestViewModel[];\r\n        if (jobDrs.length > 0 && !isTBD) {\r\n            buttonShowStatus = this.CancelButtonVisibleInfo(jobDrs);\r\n        }\r\n        else {\r\n            var tBDGroupId = tdr.controls[\"TBDGroupId\"].value;\r\n            var drs = trip.value.DeliveryRequests;\r\n            var jobDrs = drs.filter(t => t.JobId == jobId) as DeliveryRequestViewModel[];\r\n            var tbdDrs = drs.filter(t => t.TBDGroupId == tBDGroupId) as DeliveryRequestViewModel[];\r\n            if (jobDrs.length > 0) {\r\n                buttonShowStatus = this.CancelButtonVisibleInfo(jobDrs);\r\n            }\r\n            if (tbdDrs.length > 0) {\r\n                buttonShowStatus = this.CancelButtonVisibleInfo(tbdDrs);\r\n            }\r\n        }\r\n        return buttonShowStatus;\r\n    }\r\n    public CancelButtonVisibleInfo(jobDrs: DeliveryRequestViewModel[]) {\r\n        let buttonShowStatus = true;\r\n        if (jobDrs.filter(x1 => x1.StatusClassId != 3).length >= 0) {\r\n            if (jobDrs.filter(x1 => x1.StatusClassId == 5).length == jobDrs.length) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            else if (jobDrs.filter(x1 => x1.StatusClassId == 0).length == jobDrs.length) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            else if (jobDrs.filter(x1 => x1.StatusClassId == 0).length > 0) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            else if (jobDrs.filter(x1 => x1.TrackScheduleStatus == 5).length == jobDrs.length) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            buttonShowStatus = true;\r\n        }\r\n        return buttonShowStatus;\r\n    }\r\n    public LocationSequenceTrip(direction: number, jobId: number, drInfo: DeliveryRequestViewModel, lIndex: number, trip: FormGroup) {\r\n        var drs = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        if (direction == 1) {\r\n            if (!drInfo.IsTBD) {\r\n                var fjobId = this.findLocationSeq(drs, direction, jobId);\r\n                var jobDRs = drs.filter(x => x.JobId == jobId);\r\n                var finalDRs = drs.filter(x => x.JobId != jobId);\r\n                var finalDRsIndex = finalDRs.findIndex(x => x.JobId == fjobId);\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(finalDRsIndex, 0, x);\r\n                    finalDRsIndex = finalDRsIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n            else {\r\n                let currentDRIndex = drs.findIndex(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                currentDRIndex = currentDRIndex - 1;\r\n                var finalDRJobID = drs[currentDRIndex].JobId;\r\n                var finalDRIsTBD = drs[currentDRIndex].IsTBD;\r\n                var finalDRTBDGroupId = drs[currentDRIndex].TBDGroupId;\r\n                if (finalDRIsTBD) {\r\n                    currentDRIndex = drs.findIndex(x => x.TBDGroupId == finalDRTBDGroupId)\r\n                }\r\n                else {\r\n                    currentDRIndex = drs.findIndex(x => x.JobId == finalDRJobID)\r\n                }\r\n                var jobDRs = drs.filter(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                var finalDRs = drs.filter(x => x.TBDGroupId != drInfo.TBDGroupId);\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(currentDRIndex, 0, x);\r\n                    currentDRIndex = currentDRIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n        }\r\n        else {\r\n            if (!drInfo.IsTBD) {\r\n                var fjobId = this.findLocationSeq(drs, direction, jobId);\r\n                var jobDRs = drs.filter(x => x.JobId == jobId);\r\n                var finalDRs = drs.filter(x => x.JobId != jobId);\r\n                var finalDRsIndex = -1;\r\n                finalDRs.forEach((x, index: number) => {\r\n                    if (x.JobId == fjobId) {\r\n                        finalDRsIndex = index;\r\n                    }\r\n                });\r\n                finalDRsIndex = finalDRsIndex + 1;\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(finalDRsIndex, 0, x);\r\n                    finalDRsIndex = finalDRsIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n            else {\r\n                let currentDRIndex = drs.findIndex(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                currentDRIndex = lIndex;\r\n                var finalDRJobID = drs[currentDRIndex + 1].JobId;\r\n                var finalDRIsTBD = drs[currentDRIndex + 1].IsTBD;\r\n                var finalDRTBDGroupId = drs[currentDRIndex + 1].TBDGroupId;\r\n                var jobDRs = drs.filter(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                var finalDRs = drs.filter(x => x.TBDGroupId != drInfo.TBDGroupId);\r\n                finalDRs.forEach((x, index: number) => {\r\n                    if (x.JobId == finalDRJobID && !finalDRIsTBD) {\r\n                        currentDRIndex = index;\r\n                    }\r\n                    else if (x.TBDGroupId == finalDRTBDGroupId && finalDRIsTBD && finalDRTBDGroupId != null) {\r\n                        currentDRIndex = index;\r\n                    }\r\n                });\r\n                currentDRIndex = currentDRIndex + 1;\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(currentDRIndex, 0, x);\r\n                    currentDRIndex = currentDRIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n        }\r\n    }\r\n    public findLocationSeq(drs: DeliveryRequestViewModel[], direction: number, jobId: number) {\r\n        let lastDRIndex = drs.length;\r\n        let currentJObDRIndex = drs.findIndex(x => x.JobId == jobId);\r\n        let findex = -1;\r\n        if (direction == 1) {\r\n            findex = drs[currentJObDRIndex - 1].JobId;\r\n        }\r\n        else {\r\n            let finaldrs = drs.filter((value, index) => index >= currentJObDRIndex && index <= lastDRIndex);\r\n            finaldrs.forEach((value) => {\r\n                if (value.JobId != jobId) {\r\n                    if (findex == -1) {\r\n                        findex = value.JobId;\r\n                    }\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        return findex;\r\n    }\r\n    public findFirstJobInfo(trip: any, tdr: DeliveryRequestViewModel, jobId: number): boolean {\r\n        var firstRecord = true;\r\n        let drs = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        var finalDRs = [];\r\n        drs.forEach(x => {\r\n            if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                finalDRs.push(x);\r\n            }\r\n            else {\r\n                finalDRs.push(x);\r\n            }\r\n        });\r\n        if (!tdr.IsTBD) {\r\n            var drJobINdex = finalDRs.findIndex(x => x.JobId == jobId);\r\n            if (drJobINdex == 0) {\r\n                firstRecord = false;\r\n            }\r\n        }\r\n        else {\r\n            var drJobINdex = finalDRs.findIndex(x => x.TBDGroupId == tdr.TBDGroupId);\r\n            if (drJobINdex == 0) {\r\n                firstRecord = false;\r\n            }\r\n        }\r\n        return firstRecord;\r\n    }\r\n    setJobSequence(trip: FormGroup) {\r\n        this.dataService.setLoadLocationSequenceSubject(trip)\r\n    }\r\n    public findLastInfo(trip, tdr) {\r\n        var drInfo = tdr.value as DeliveryRequestViewModel;\r\n        var isLastReq = false;\r\n        if (!drInfo.IsTBD) {\r\n            var jobId = drInfo.JobId;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var drs = trip.value.DeliveryRequests as DeliveryRequestViewModel[];\r\n            var finalDRs = [];\r\n            drs.forEach(x => {\r\n                if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                    finalDRs.push(x);\r\n                }\r\n                else {\r\n                    finalDRs.push(x);\r\n                }\r\n            });\r\n            var jobDrs = finalDRs.filter(t => t.JobId == jobId);\r\n            isLastReq = drID == jobDrs[jobDrs.length - 1].Id;\r\n            if (isLastReq == true) {\r\n                if (drID == finalDRs[finalDRs.length - 1].Id) {\r\n                    isLastReq = false;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var TBDGroupId = tdr.controls[\"TBDGroupId\"].value;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var tbddrs = trip.value.DeliveryRequests;\r\n            var jobtbDrs = tbddrs.filter(t => t.TBDGroupId == TBDGroupId);\r\n            isLastReq = drID == jobtbDrs[jobtbDrs.length - 1].Id;\r\n        }\r\n        return isLastReq;\r\n    }\r\n\r\n    getClasses(deliveryScheduleInfo: any, dr: any) {\r\n\r\n        if (deliveryScheduleInfo && deliveryScheduleInfo.DrInfo && deliveryScheduleInfo.DrInfo.length > 0 && deliveryScheduleInfo.DrInfo.some(dr => dr.IsBlendedRequest)) {\r\n            return dr ? this.getClassString(dr, true) : 'border pt-2'; //parent div\r\n        } else {\r\n            return this.getClassString(deliveryScheduleInfo, false);\r\n        }\r\n    }\r\n\r\n    getClassString(deliveryScheduleInfo: any, isblend: boolean) {\r\n        let classes = isblend ? 'overflow-hidden dr-round ' : ''; //child div\r\n\r\n        //status\r\n        if (deliveryScheduleInfo.StatusClassId == 1)\r\n            classes += 'dr-new';\r\n        else if (deliveryScheduleInfo.StatusClassId == 2)\r\n            classes += 'dr-inprogress';\r\n        else if (deliveryScheduleInfo.StatusClassId == 3)\r\n            classes += 'dr-cancelled dr-text-white';\r\n        else if (deliveryScheduleInfo.StatusClassId == 4)\r\n            classes += 'dr-completed';\r\n        else if (deliveryScheduleInfo.StatusClassId == 5)\r\n            classes += 'diverted-status dr-text-white';\r\n        //priority\r\n        if (deliveryScheduleInfo.Priority == 1)\r\n            classes += ' must-go';\r\n        else if (deliveryScheduleInfo.Priority == 2)\r\n            classes += ' should-go';\r\n        else if (deliveryScheduleInfo.Priority == 3)\r\n            classes += ' could-go';\r\n\r\n        //blink\r\n        if (deliveryScheduleInfo.IsBlinkDR)\r\n            classes += ' dr-notCompatible animated infinite flash';\r\n\r\n        return classes;\r\n    }\r\n}","<div class=\"driver-panel\" [formGroup]=\"schedule\" [ngClass]=\"{'last-driver': ((i == SbForm.controls['Shifts']['controls'].length-1) && (j== ScheduleLength - 1))}\">\r\n    <div class=\"driver-header-well\">\r\n        <ng-container *ngIf=\"schedule.controls['Drivers']['controls'].length==0 && schedule.controls['Trailers']['controls'].length==0\">\r\n            <div class=\"column-inital-div\">\r\n                <span class=\"column-inital\">C{{schedule.controls['DriverRowIndex'].value+1}}</span>\r\n            </div>\r\n            <div class=\"driver-name-col\">\r\n                <h6 class=\"driver-name\">\r\n                    <a class=\"\" data-toggle=\"modal\" data-target=\"#driverTrailerModel\"\r\n                       (click)=\"editDriverTrailers(i, j)\" placement=\"top\"\r\n                       ngbTooltip=\"{{IsTrailerExists ? 'Assign Driver/Trailer' :'Assign Driver'}}\"\r\n                       *ngIf=\"disableControl==false\">\r\n                        <span>\r\n                            {{IsTrailerExists ? 'Assign Driver/Trailer' :'Assign Driver'}}\r\n                        </span>\r\n                        <!--<i class=\"fas fa-user-plus fas fa-user-plus fs18 mt-2 ml-1\" data-statusid=\"11\" *ngIf=\"!schedule.controls['IsDriverScheduleExists'].value && !IsTrailerExists\"></i>-->\r\n                    </a>\r\n                </h6>\r\n            </div>\r\n            <div class=\"option-menu\" dropdown *ngIf=\"disableControl==false && schedule.controls['IsDriverScheduleExists'].value\">\r\n                <a class=\"option-menu-link dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\r\n                   aria-haspopup=\"true\" aria-expanded=\"false\" href=\"javascript:void(0);\">\r\n                    <i class=\"fas fa-ellipsis-v\"></i>\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n            <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n                <a (click)=\"addLoad(i,j)\" class=\"db\">\r\n                    <span><i class=\"fa fa-plus mt4 fs16\"></i></span>\r\n                    Load\r\n                </a>\r\n            </li>\r\n            <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n                <a (click)=\"moveColumnToLoadQueue()\" class=\"db\">\r\n                    <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n                    Move to Load Queue\r\n                </a>\r\n            </li>\r\n            <li class=\"dropdown-item\">\r\n                <a data-toggle=\"modal\" data-target=\"#optional-pickup-location\" placement=\"top\" (click)=\"addOptionalPickup(schedule)\" class=\"db\">\r\n                    <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n                    Optional Pickup\r\n                </a>\r\n            </li>\r\n    </div>\r\n</div>\r\n        </ng-container>\r\n<ng-container *ngIf=\"schedule.controls['Drivers']['controls'].length>0 || schedule.controls['Trailers']['controls'].length>0\">\r\n    <div class=\"column-inital-div\">\r\n        <span class=\"column-inital\">C{{schedule.controls['DriverRowIndex'].value+1}}</span>\r\n    </div>\r\n    <div class=\"driver-name-col\">\r\n        <ng-container [formArrayName]=\"'Drivers'\" *ngIf=\"schedule.controls['IsDriverScheduleExists'].value || schedule.controls['IsIncludeAllRegionDriver'].value\">\r\n            <ng-container *ngFor=\"let driver of schedule.controls['Drivers']['controls']; let x = index; let islast = last; trackBy: trackByDriverId\">\r\n                <ng-container [formGroupName]=\"x\">\r\n                    <h6 class=\"driver-name\" placement=\"bottom\"\r\n                        ngbTooltip=\"{{driver.controls['Name'].value}}\">\r\n                        {{driver.controls['Name'].value}}\r\n                    </h6>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container [formArrayName]=\"'Trailers'\">\r\n            <ng-container *ngFor=\"let trailer of schedule.controls['Trailers']['controls']; let y = index; let isfirst = first; trackBy: trackByTrailerId\">\r\n                <ng-container [formGroupName]=\"y\" *ngIf=\"isfirst\">\r\n                    <div class=\"trailer-name\" placement=\"bottom\"\r\n                         ngbTooltip=\"Edit Compartment Assignments\">\r\n                        <a (click)=\"editCompartmentAssignments()\" *ngIf=\"disableControl==false\">{{trailer.controls['TrailerId'].value}}</a>\r\n                        <a *ngIf=\"disableControl==true\">{{trailer.controls['TrailerId'].value}}</a>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"option-menu\" dropdown>\r\n        <a class=\"option-menu-link dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\r\n           aria-haspopup=\"true\" aria-expanded=\"false\" href=\"javascript:void(0);\">\r\n            <i class=\"fas fa-ellipsis-v\"></i>\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"editDriverTrailers(i, j)\" data-toggle=\"modal\" data-target=\"#driverTrailerModel\" class=\"db\">\r\n            <span><i class=\"fa fa-edit mt4 fs16\"></i></span>\r\n            Edit\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"publishEntireRow(i, j)\" class=\"db\">\r\n            <span><i class=\"fas fa-paper-plane mt4 fs16\"></i></span>\r\n            Publish\r\n        </a>\r\n    </li>\r\n    <ng-container [formArrayName]=\"'Drivers'\">\r\n        <ng-container *ngFor=\"let driver of schedule.controls['Drivers']['controls']; let x = index; let islast = last; trackBy: trackByDriverId\">\r\n            <ng-container [formGroupName]=\"x\">\r\n                <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n                    <a (click)=\"IntializeChat(driver.controls['Id'].value)\" class=\"db\">\r\n                        <span><i class=\"far fa-comment mt4 fs16\"></i></span>\r\n                        Chat\r\n                    </a>\r\n                </li>\r\n                <li class=\"dropdown-item\" *ngIf=\"schedule.controls['AllowDriverChange'].value == true && disableControl==false\">\r\n                    <a (click)=\"UnAssignDriverFromShift(schedule,'driver')\" *ngIf=\"disableControl==false\" class=\"db\" title=\"Unassign driver\">\r\n                        <span><i class=\"far fa-times-circle mt4 fs16\"></i></span>\r\n                        Driver\r\n                    </a>\r\n                </li>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"addLoad(i,j)\" class=\"db\">\r\n            <span><i class=\"fa fa-plus mt4 fs16\"></i></span>\r\n            Load\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"schedule.controls['Trailers']['controls'].length>0 && IsTrailerExists && schedule.controls['AllowDriverChange'].value == true\">\r\n        <a data-toggle=\"modal\" data-target=\"#TrailerInformation\" (click)=\"getTrailerInfo(schedule)\" class=\"db\">\r\n            <span><i class=\"fa fa-info mt4 fs16\"></i></span>\r\n            Trailers\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"moveColumnToLoadQueue()\" class=\"db\">\r\n            <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n            Move to Load Queue\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\">\r\n        <a data-toggle=\"modal\" data-target=\"#optional-pickup-location\" placement=\"top\" (click)=\"addOptionalPickup(schedule)\" class=\"db\">\r\n            <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n            Optional Pickup\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false && CheckForCancelDSButton(i,j)\">\r\n        <a class=\"db\" (click)=\"cancelEntireRow(i, j)\" placement=\"top\">\r\n            <span><i class=\"far fa-arrow-alt-circle-right mt4 fs16\"></i></span>\r\n            Cancel DS(s)\r\n        </a>\r\n    </li>\r\n    </div>\r\n    </div>\r\n</ng-container>\r\n<span class=\"pull-right\">\r\n    <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value && isDrExistInColumn(schedule.controls['Trips'])\"\r\n           type=\"checkbox\"\r\n           id=\"column_{{i}}\"\r\n           name=\"column_{{i}}\"\r\n           [checked]=\"isAllColumnDrSelected(schedule.controls['Trips'])\"\r\n           (change)=\"columnSelectedForCarrierAssignment($event, schedule.controls['Trips'])\">\r\n</span>\r\n    </div>\r\n<ng-container [formArrayName]=\"'Trips'\">\r\n    <ng-container *ngFor=\"let trip of schedule.controls['Trips']['controls']; let k = index; let lastTrip = last; trackBy: trackByTripIndex\">\r\n        <div class=\"load-panel\">\r\n            <div class=\"load-header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-5\" draggable\r\n                         [dragData]=\"{Data: getDraggableDrsFromLoad(trip), TripFrom: trip, ShiftIndex: i, RowIndex:j, ColIndex: k, Schedule: schedule}\"\r\n                         [dragEnabled]=\"!disableControl && trip.controls['DeliveryRequests']['controls'].length>0\"\r\n                         [class.zoom]=\"!disableControl && trip.controls['DeliveryRequests']['controls'].length>0\"\r\n                         [ngbTooltip]=\"(!disableControl && trip.controls['DeliveryRequests']['controls'].length>0) ? 'Drag Load' : ''\"\r\n                         placement=\"top\">\r\n                        <h6 class=\"load-name\">Load {{k+1}}</h6>\r\n                    </div>\r\n                    <div class=\"col load-time\">\r\n                        <i class=\"far fa-clock mr-1\"></i>\r\n                        <span [class.mr5]=\"SbForm.get('IsAssignDrEnabled').value\">{{trip.controls['StartTime'].value}}</span>\r\n\r\n                        <span class=\"pull-right\">\r\n                            <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value && trip.controls['DeliveryRequests'].controls.length>0\"\r\n                                   type=\"checkbox\"\r\n                                   id=\"trip_{{k}}\"\r\n                                   name=\"trip_{{k}}\"\r\n                                   [checked]=\"isAllTipsDrSelected(trip.controls['DeliveryRequests'])\"\r\n                                   (change)=\"triptSelectedForCarrierAssignment($event, k)\">\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container [formGroupName]=\"k\">\r\n                <div id=\"drop{{k+1}}\">\r\n                    <div class=\"location-body\" droppable\r\n                         (onDrop)=\"onItemDrop(schedule.controls['Trips']['controls'][k], $event, i, j, k, schedule);\">\r\n                        <ng-container [formArrayName]=\"'DeliveryRequests'\">\r\n                            <ng-container *ngFor=\"let tdr of trip.controls['DeliveryRequests'].controls; let l = index; let lastTdr = last; trackBy: trackByDrId\">\r\n                                <ng-container [formGroupName]=\"l\" *ngIf=\"!tdr.controls['IsBlendedRequest'].value || tdr.controls['IsBlendedDrParent'].value\">\r\n                                    <div class=\"location-body-panel\" draggable\r\n                                         [dragData]=\"{Data: getDraggedDrs(tdr.controls['JobId'].value, trip), TripFrom:trip, DrIndex:l, ShiftIndex: i, RowIndex:j, ColIndex: k, Schedule:schedule}\"\r\n                                         [dragEnabled]=\"disableControl===false\"\r\n                                         *ngIf=\"tdr.controls['IsJobFilter'].value\"\r\n                                         [ngClass]=\"{'diverted-status':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==5) || tdr.controls['BlendDrScheduleStatus'].value==5),'dr-completed':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==4)||tdr.controls['BlendDrScheduleStatus'].value==4),'dr-cancelled':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==3)||tdr.controls['BlendDrScheduleStatus'].value==3),'dr-inprogress':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==2)||tdr.controls['BlendDrScheduleStatus'].value==2),'dr-new':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==1)||tdr.controls['BlendDrScheduleStatus'].value==1),'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3,'dr-notCompatible animated infinite flash':tdr.controls['IsBlinkDR'].value == true, 'last-div': fnIsLastDr(trip, tdr) == true }\">\r\n                                        <div class=\"header\">\r\n                                            <div class=\"location-name\"\r\n                                                 *ngIf=\"tdr.controls['JobId'].value > 0 && (l==0 || (tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].CustomerCompany.value || tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value))\">\r\n                                                <h6 class=\"break-word\">{{tdr.controls['JobName'].value}}</h6>\r\n                                                <span class=\"customer-name\">{{tdr.controls['CustomerCompany'].value}} </span>\r\n                                                <a class=\"btn-sm pr-0\" *ngIf=\"disableControl===false && CancelButtonVisible(trip,tdr)\" title=\"Cancel DS\" (click)=\"CancelLocationDS(tdr.controls['JobId'].value, trip,0)\"><i class=\"fas fa-remove\"></i></a>\r\n                                                <a class=\"btn-sm\" title=\"Preload delivery for this location\" (click)=\"preloadDelieryForThisLoc(trip, k, tdr.controls['JobId'].value)\"\r\n                                                   *ngIf=\"preloadOption['TripIndex']==k && !tdr.controls['PreLoadedFor'] && !tdr.controls['PostLoadedFor'] && !disableControl && DoNotShowPushButtonStatuses.indexOf(tdr.controls['TrackScheduleStatus'].value) == -1\">\r\n                                                    <i class=\"fas fa-tint\"></i>\r\n                                                </a>\r\n                                                <a class=\"btn-sm\" title=\"Transfer DS\" *ngIf=\"disableControl===false && tdr.controls['StatusClassId'].value !=3\" data-toggle=\"modal\" data-target=\"#TransferDSModel\" (click)=\"TransferDS(tdr.controls['JobId'].value, trip,l,i,j,k,schedule)\"><i class=\"fas fa-exchange-alt\"></i></a>\r\n                                            </div>\r\n                                            <div class=\"location-name\"\r\n                                                 *ngIf=\"tdr.controls['JobId'].value == 0 && (l==0 || (tdr.controls['TBDGroupId'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].TBDGroupId.value|| tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value))\">\r\n                                                <h6>TBD</h6>\r\n                                                <span class=\"customer-name\">{{tdr.controls['PickupLocationType'].value == 2 ?tdr.controls['BulkPlant'].controls['SiteName'].value :tdr.controls['Terminal'].controls['Name'].value}} </span>\r\n                                                <a class=\"btn-sm pr-0\" *ngIf=\"disableControl===false && CancelButtonVisible(trip,tdr)\" title=\"Cancel DS\" (click)=\"CancelLocationDS(tdr.controls['TBDGroupId'].value, trip,1,tdr.controls['TBDGroupId'].value)\"><i class=\"fas fa-remove\"></i></a>\r\n                                                <a class=\"btn-sm\" title=\"Transfer DS\" *ngIf=\"disableControl===false && tdr.controls['StatusClassId'].value !=3\" data-toggle=\"modal\" data-target=\"#TransferDSModel\" (click)=\"TransferDS(tdr.controls['JobId'].value, trip,l,i,j,k,schedule)\"><i class=\"fas fa-exchange-alt\"></i></a>\r\n                                            </div>\r\n                                            <ng-container *ngIf=\"l==0 || (tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].CustomerCompany.value || tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value)\">\r\n                                                <ng-container *ngIf=\"trip.controls['IsCommonPickup'].value==true;\">\r\n                                                    <ng-container *ngIf=\"trip.controls['PickupLocationType'].value==2 && trip.controls['BulkPlant'].controls['SiteName'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(trip.controls['BulkPlant'].controls['SiteName'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"trip.controls['PickupLocationType'].value!=2 && trip.controls['Terminal'].controls['Name'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(trip.controls['Terminal'].controls['Name'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"trip.controls['IsCommonPickup'].value==false;\">\r\n                                                    <ng-container *ngIf=\"tdr.controls['PickupLocationType'].value==2 && tdr.controls['BulkPlant'].controls['SiteName'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(tdr.controls['BulkPlant'].controls['SiteName'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"tdr.controls['PickupLocationType'].value!=2 && tdr.controls['Terminal'].controls['Name'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(tdr.controls['Terminal'].controls['Name'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <div class=\"body\">\r\n                                            <div class=\"product-name-row\">\r\n                                                <div class=\"product-name\" placement=\"top\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==false\"\r\n                                                     ngbTooltip=\"{{tdr.controls['ProductType'].value}}\">\r\n                                                    {{tdr.controls['ProductType'].value}}\r\n                                                </div>\r\n                                                <div class=\"product-name\" placement=\"top\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==true\"\r\n                                                     ngbTooltip=\"{{tdr.controls['AdditiveProductName'].value}} {{tdr.controls['BlendedProductName'].value}}\">\r\n                                                    Blend\r\n                                                </div>\r\n                                                <div class=\"product-qty\">\r\n                                                    <ng-container *ngIf=\"tdr.controls['ScheduleQuantityType'].value==1 || tdr.controls['ScheduleQuantityType'].value==0\">\r\n                                                        <span class=\"mr-1\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==false\">{{tdr.controls['RequiredQuantity'].value | number:'1.0-2'}}</span>\r\n                                                        <span class=\"mr-1\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==true\">{{tdr.controls['TotalBlendedQuantity'].value | number:'1.0-2'}}</span>\r\n                                                        <span *ngIf=\"tdr.controls['UoM'].value==1; else litres\">G</span>\r\n                                                        <ng-template #litres>L</ng-template>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"tdr.controls['ScheduleQuantityType'].value !=1\">\r\n                                                        <span class=\"mr-1\">{{tdr.controls['ScheduleQuantityTypeText'].value}}</span>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div *ngIf=\"lastTdr || isLastTdr(trip, tdr, lastTdr) || ((trip.controls['DeliveryRequests'].controls.length>l+1) && tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l+1]['controls'].CustomerCompany.value && tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l+1]['controls'].JobName.value)\">\r\n                                            <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PreLoadedFor']\"><i>Pre-Load</i></span>\r\n                                            <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PostLoadedFor']\"><i>Post-Load</i></span>\r\n                                        </div>\r\n                                        <div *ngIf=\"fnIsLastDrSeq(trip, tdr) == true\">\r\n                                            <a title=\"Up Delivery Schedule\" (click)=\"LocationSequenceTrip(1,tdr.controls['JobId'].value,tdr.value,l,trip)\" *ngIf=\"disableControl===false && findFirstJobInfo(trip,tdr, tdr.controls['JobId'].value)\"><i class=\"fas fa-arrow-circle-up\"></i></a>\r\n                                            <a style=\"padding-left:10px;\" title=\"Down Delivery Schedule\" (click)=\"LocationSequenceTrip(2,tdr.controls['JobId'].value,tdr.value,l,trip)\" *ngIf=\"disableControl===false && findLastInfo(trip,tdr)\"><i class=\"fas fa-arrow-circle-down\"></i></a>\r\n                                        </div>\r\n                                        <div class=\"float-popover\"\r\n                                             *ngIf=\"l==0 || (tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].CustomerCompany.value || tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value)\">\r\n                                            <button type=\"button\" class=\"btn btn-link p-0\" placement=\"{{((i == SbForm.controls['Shifts']['controls'].length-1) && (j== ScheduleLength - 1)) ? 'left' : 'right' }}\"\r\n                                                    [ngbPopover]=\"popContent\" container=\"body\"\r\n                                                    popoverClass=\"dsb-popover\" (click)=\"GetDeliveryScheduleInfo(tdr.controls['JobId'].value,trip,k,tdr.value);\">\r\n                                                <i class=\"fas fa-chevron-circle-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <div class=\"load-menu-panel text-center\" *ngIf=\"disableControl==false && trip.controls['IsEditable'].value == true && trip.controls['IsPreloadDisable'].value == false\">\r\n                <a class=\"circle-icon\" data-toggle=\"modal\" data-target=\"#resetDrByRouteModal\" id=\"btnRoute{{i}}{{j}}{{k}}\"\r\n                   (click)=\"resetDrByRoutes(i, j, k, trip, schedule)\" placement=\"right\" ngbTooltip=\"Route\"\r\n                   container=\"body\">\r\n                    <i class=\"fas fa-route fs14\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\"\r\n                   (click)=\"editExisingGroup(schedule.controls['Trips']['controls'][k],i,j,k,schedule);\"\r\n                   placement=\"right\" ngbTooltip=\"Edit\" container=\"body\">\r\n                    <i class=\"fa fa-edit fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnDraftTrip{{i}}{{j}}{{k}}\" (click)=\"draftScheduleBuilder(trip)\"\r\n                   placement=\"right\" ngbTooltip=\"Save\" container=\"body\"\r\n                   *ngIf=\"(trip.controls['TripId'] != null||trip.controls['DeliveryRequests'].length>0) && trip.controls['DeliveryGroupPrevStatus'].value!=2 && disableControl==false\">\r\n                    <i class=\"far fa-save fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnPublishTrip{{i}}{{j}}{{k}}\"\r\n                   (click)=\"publishScheduleBuilder(i, j, k, schedule, trip);\" placement=\"right\"\r\n                   ngbTooltip=\"Publish\" container=\"body\">\r\n                    <i class=\"fas fa-paper-plane fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnMoveDRQueue{{i}}{{j}}{{k}}\" data-toggle=\"modal\" data-target=\"#confirm-reset\"\r\n                   (click)=\"editGroup(trip,i,j,k,schedule);\" placement=\"right\" ngbTooltip=\"Move to DR Queue\" container=\"body\">\r\n                    <i class=\"fas fa-undo fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnCancelTrip{{i}}{{j}}{{k}}\" *ngIf=\"LoadLevelCacelButtonHideShow(trip)\"\r\n                   (click)=\"cancelScheduleBuilder(i, j, k, schedule, trip);\" placement=\"right\" ngbTooltip=\"Cancel\" container=\"body\">\r\n                    <i class=\"fas fa-remove fs13\"></i>\r\n                </a>\r\n\r\n                <a class=\"circle-icon\" id=\"btnSequence{{i}}{{j}}{{k}}\" (click)=\"setJobSequence(trip)\" placement=\"right\"\r\n                   ngbTooltip=\"Location Sequence\" container=\"body\">\r\n                    <i class=\"fas fa-map-marked-alt fs14\"></i>\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n</div>\r\n\r\n\r\n<ng-template #popContent>\r\n    <div class=\"pop-header\" id=\"drCustomerDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\" *ngIf=\"IsTBDRequest == false\">\r\n                <span class=\"location-name\">{{LocationName}},</span>\r\n                <span class=\"customer-name\">{{CustomerName}}</span>\r\n            </div>\r\n            <div class=\"col-12\" *ngIf=\"IsTBDRequest == true\">\r\n                <span class=\"location-name\">TBD</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"popover-details\" id=\"drFuelDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 product-details\" *ngFor=\"let deliveryScheduleInfo of DeliveryScheduleInfo; let i = index\"\r\n                 [ngClass]=\"getClasses(deliveryScheduleInfo, null)\">\r\n\r\n                <div *ngFor=\"let dr of deliveryScheduleInfo.DrInfo\" [ngClass]=\"getClasses(deliveryScheduleInfo, dr)\">\r\n                    <p class=\"product-name\">\r\n                        {{dr.ProductName}}\r\n                        <span *ngIf=\"deliveryScheduleInfo.Status==3\" class=\"status-flag mt-1\">\r\n                            <i class=\"far fa-clock mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==1\"></i>\r\n                            <i class=\"fas fa-times mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==3\"></i>\r\n                            <i class=\"fas fa-hourglass-half mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==2\"></i>\r\n                            <i class=\"fas fa-check mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==4\"></i>\r\n                            <i class=\"glyphicon glyphicon-share-alt mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==5\"></i>\r\n                            {{dr.TrackScheduleStatusName}}\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType==1 || deliveryScheduleInfo.ScheduleQuantityType==0\">\r\n                            - {{dr.RequiredQuantity | number:'1.0-2'}}\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType==1 || deliveryScheduleInfo.ScheduleQuantityType==0\">\r\n                            <span *ngIf=\"deliveryScheduleInfo.UoM==1; else litres\">G </span>\r\n                            <ng-template #litres>L </ng-template>\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType !=1\">\r\n                            <span>- {{deliveryScheduleInfo.ScheduleQuantityTypeText}}</span>\r\n                        </span>\r\n                        <span class=\"recurring-schedule\" *ngIf=\"deliveryScheduleInfo.isRecurringSchedule==true\" placement=\"bottom\"\r\n                              ngbTooltip=\"Recurring\">\r\n                            <i class=\"fas fa-sync color-black\"></i>\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.Status==11\" class=\"diverted-label\" placement=\"bottom\"\r\n                              ngbTooltip=\"Diverted\">\r\n                            <i class=\"fas fa-step-forward color-black\"></i>\r\n                        </span>\r\n                        <span class=\"auto-generated\"\r\n                              *ngIf=\"deliveryScheduleInfo.IsAutoCreatedDR==true && deliveryScheduleInfo.DelReqSource!=9\" placement=\"bottom\"\r\n                              ngbTooltip=\"Auto-Generated\">\r\n                            <i class=\"fas fa-magic ml10\"></i>\r\n                        </span>\r\n                        <span class=\"pull-right mr2 mt2\">\r\n                            <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value\"\r\n                                   type=\"checkbox\"\r\n                                   id=\"{{dr.Id}}\"\r\n                                   name=\"{{dr.Id}}\"\r\n                                   [checked]=\"deliveryScheduleInfo.IsSelectedForAssignment\"\r\n                                   (change)=\"drSelectedForCarrierAssignment($event, dr.Id, deliveryScheduleInfo.TripIndex)\">\r\n                        </span>\r\n                    </p>\r\n\r\n                    <span class=\"otto-generated\" *ngIf=\"deliveryScheduleInfo.DelReqSource==9\">\r\n                        Otto Generated\r\n                    </span>\r\n                    <span *ngIf=\"deliveryScheduleInfo.IsFilldInvoke\" class=\"filldInvoke\">\r\n                        Filld\r\n                    </span>\r\n                    <ng-container *ngIf=\"deliveryScheduleInfo.IsCommonPickup==true && dr.IsAdditive==false;\">\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.CommonPickupLocationType==2;\">\r\n                            <p class=\"terminal-name\">\r\n                                {{deliveryScheduleInfo.Address}},\r\n                                {{deliveryScheduleInfo.City}},{{deliveryScheduleInfo.Code}},\r\n                                {{deliveryScheduleInfo.ZipCode}}\r\n                            </p>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.CommonPickupLocationType!=2;\">\r\n                            <p class=\"terminal-name\">{{deliveryScheduleInfo.PickupLocationName}}</p>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"deliveryScheduleInfo.IsCommonPickup==false && dr.IsAdditive==false;\">\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.PickupLocationType==2;\">\r\n                            <p class=\"terminal-name\">\r\n                                {{dr.Address}},\r\n                                {{dr.City}},{{dr.Code}},\r\n                                {{dr.ZipCode}}\r\n                            </p>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.PickupLocationType!=2;\">\r\n                            <p class=\"terminal-name\">{{dr.PickupLocationName}}</p>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.IsMarine==true\">\r\n                        {{dr.DeliveryDateStartTime}}\r\n                    </p>\r\n                    <!-- <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.IsMarine==true\">\r\n            {{dr.Vessel}} - {{dr.Berth}}\r\n        </p> -->\r\n\r\n                    <ng-container *ngIf=\"deliveryScheduleInfo.IsMarine\">\r\n\r\n                        <p class=\"badges\" *ngIf=\"dr.Berth\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.Vessel}}-{{dr.Berth}}\">\r\n                            {{(dr.Vessel.length > 15) ? (dr.Vessel | slice:0:15)+'..':(dr.Vessel) }}\r\n                            -\r\n                            {{(dr.Berth.length > 15) ? (dr.Berth | slice:0:15)+'..':(dr.Berth) }}\r\n                        </p>\r\n\r\n                        <p class=\"badges\" *ngIf=\"!dr.Berth\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.Vessel}}\">\r\n                            {{(dr.Vessel.length > 15) ? (dr.Vessel | slice:0:15)+'..':(dr.Vessel) }}\r\n                        </p>\r\n\r\n                    </ng-container>\r\n\r\n                </div>\r\n                <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.RouteName!='';\">\r\n                    {{deliveryScheduleInfo.RouteName}}\r\n                </p>\r\n                <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.BadgeNoInfo!='';\">{{deliveryScheduleInfo.BadgeNoInfo}}</p>\r\n                <span class=\"preload color-white fs10 blinking float-left ml10\" *ngIf=\"deliveryScheduleInfo.isPreload\"><i>Pre-Load</i></span>\r\n                <span class=\"postload color-white fs10 blinking float-left ml10\" *ngIf=\"deliveryScheduleInfo.isPostload\"><i>Post-Load</i></span>\r\n                <span class=\"max-fill mt-1 mr-2\">\r\n                    MaxFill - {{deliveryScheduleInfo.TankMaxFill}}\r\n                    <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType==1 || deliveryScheduleInfo.ScheduleQuantityType==0\">\r\n                        <span *ngIf=\"deliveryScheduleInfo.UoM==1; else litres\">G</span>\r\n                        <ng-template #litres>L</ng-template>\r\n                    </span>\r\n                </span>\r\n                <span  class=\"fs12\">\r\n                    <b>  {{deliveryScheduleInfo.ScheduleStartTime}}-{{deliveryScheduleInfo.ScheduleEndTime}} </b>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\n\n@Directive({\n    selector: '[ValidateCompartmentsQuantity]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: CompartmentQuantityValidatorDirective,\n        multi: true\n    }]\n})\nexport class CompartmentQuantityValidatorDirective {\n\n    @Input(\"ValidateCompartmentsQuantity\")\n    public DeliveryRequest: AbstractControl = null;\n\n    validate(drControl: AbstractControl): { [key: string]: any } | null {\n        if (drControl.value && this.DeliveryRequest) {\n            let _compartments = this.DeliveryRequest['controls'].Compartments['controls'];\n            if (_compartments && _compartments.length > 0) {\n                let drQty = drControl.value; let compQty = 0;\n                let regexp = new RegExp(/^([0-9]\\d*(\\.\\d+)?)$/);\n                for (var idx = 0; idx < _compartments.length; idx++) {\r\n                    let compartment = _compartments[idx]['controls']['Quantity'];\r\n                    if (compartment && compartment.value && regexp.test(compartment.value))\r\n                        compQty = compQty + parseFloat(compartment.value);\r\n                }\n                if (compQty > drQty) {\n                    return { CompartmentQuantity: true };\r\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { DeliveryRequestTypes, DeliveryShiftEnum, DrFilterPreferencesModel, OrderType, TrailerTypeEnum } from \"src/app/app.enum\";\r\nimport { DropDownItem } from \"src/app/buyer-wally-board/Models/BuyerWallyBoard\";\r\nimport { HandleError } from \"src/app/errors/HandleError\";\r\nimport { DeliveryRequestViewModel, DelRequestsByJobModel } from \"../models/DispatchSchedulerModels\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class DrFilterService extends HandleError {\r\n\r\n    private urlSaveDrFilterPreferences = '/Freight/SaveDrFilterPreferences';\r\n    private urlGetDrFilterPreferences = '/Freight/GetDrFilterPreferences';\r\n\r\n    constructor(private fb: FormBuilder, private httpClient: HttpClient) { super(); }\r\n\r\n    drFilterFormFromModel(drFilterModel: DrFilterModel) {\r\n\r\n        let form = this.fb.group({\r\n            Terminals: this.fb.control(drFilterModel.Terminals),\r\n            BulkPlants: this.fb.control(drFilterModel.Bulkplants),\r\n            Priority: this.fb.group({\r\n                Missed: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.Missed) ? true : false),\r\n                MustGo: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.MustGo) ? true : false),\r\n                ShouldGo: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.ShouldGo) ? true : false),\r\n                CouldGo: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.CouldGo) ? true : false),\r\n                AssignedToMe: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.AssignedToMe) ? true : false),\r\n                AssignedByMe: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.AssignedByMe) ? true : false)\r\n            }),\r\n            TrailerType: this.fb.group({\r\n                Lead: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Lead) ? true : false),\r\n                Pup: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Pup) ? true : false),\r\n                Tandem: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Tandem) ? true : false),\r\n                Quad: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Quad) ? true : false),\r\n                Tridem: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Tridem) ? true : false),\r\n            }),\r\n            DeliveryShift: this.fb.group({\r\n                Morning: this.fb.control(drFilterModel.DeliveryShift.includes(DeliveryShiftEnum.Morning) ? true : false),\r\n                Evening: this.fb.control(drFilterModel.DeliveryShift.includes(DeliveryShiftEnum.Evening) ? true : false)\r\n            }),\r\n            IsFilterApplied: this.fb.control(drFilterModel.IsFilterApplied),\r\n            IsTBDRequest: this.fb.control(drFilterModel.IsTBDRequest),\r\n            DeliveryBrokeredDR: this.fb.group({\r\n                brokeredDrs: this.fb.control(drFilterModel.IsBrokeredDRs),\r\n            }),\r\n            Customers: this.fb.control(drFilterModel.Customers)\r\n        });\r\n\r\n        return form;\r\n    }\r\n\r\n    getDrFilterForm(isFilterApplied?: boolean) {\r\n\r\n        return this.fb.group({\r\n            Terminals: this.fb.control([]),\r\n            BulkPlants: this.fb.control([]),\r\n            Priority: this.fb.group({\r\n                Missed: this.fb.control(false),\r\n                MustGo: this.fb.control(isFilterApplied ? true : false),\r\n                ShouldGo: this.fb.control(false),\r\n                CouldGo: this.fb.control(false),\r\n                AssignedToMe: this.fb.control(false),\r\n                AssignedByMe: this.fb.control(false)\r\n            }),\r\n            TrailerType: this.fb.group({\r\n                Lead: this.fb.control(false),\r\n                Pup: this.fb.control(false),\r\n                Tandem: this.fb.control(false),\r\n                Quad: this.fb.control(false),\r\n                Tridem: this.fb.control(false)\r\n            }),\r\n            DeliveryShift: this.fb.group({\r\n                Morning: this.fb.control(false),\r\n                Evening: this.fb.control(false)\r\n            }),\r\n            DeliveryBrokeredDR: this.fb.group({\r\n                brokeredDrs: this.fb.control(false),\r\n            }),\r\n            IsTBDRequest: this.fb.control(false),\r\n            IsFilterApplied: this.fb.control(isFilterApplied ? true : false),\r\n            OrderType: this.fb.group({\r\n                OrderTypeLTL: this.fb.control(false),\r\n                OrderTypeFTL: this.fb.control(false),\r\n                OrderTypeALL: this.fb.control(false),\r\n            }),\r\n            Customers: this.fb.control([])\r\n        });\r\n    }\r\n\r\n    drFilterFormToModel(drFilterForm: FormGroup, IsCarrierCompany: boolean) {\r\n\r\n        let formValue = drFilterForm.value;\r\n        let model = new DrFilterModel();\r\n\r\n        //SHIFTS\r\n        if (formValue.DeliveryShift.Evening)\r\n            model.DeliveryShift.push(DeliveryShiftEnum.Evening)\r\n        if (formValue.DeliveryShift.Morning)\r\n            model.DeliveryShift.push(DeliveryShiftEnum.Morning)\r\n        //PRIORITY\r\n        if (formValue.Priority.MustGo)\r\n            model.Priority.push(DeliveryRequestTypes.MustGo);\r\n        if (formValue.Priority.ShouldGo)\r\n            model.Priority.push(DeliveryRequestTypes.ShouldGo);\r\n        if (formValue.Priority.CouldGo)\r\n            model.Priority.push(DeliveryRequestTypes.CouldGo);\r\n        if (formValue.Priority.Missed)\r\n            model.Priority.push(DeliveryRequestTypes.Missed);\r\n        if (formValue.Priority.AssignedToMe)\r\n            model.Priority.push(DeliveryRequestTypes.AssignedToMe);\r\n        if (formValue.Priority.AssignedByMe)\r\n            model.Priority.push(DeliveryRequestTypes.AssignedByMe);\r\n        //TRAILER\r\n        if (formValue.TrailerType.Lead)\r\n            model.TrailerType.push(TrailerTypeEnum.Lead);\r\n        if (formValue.TrailerType.Pup)\r\n            model.TrailerType.push(TrailerTypeEnum.Pup);\r\n        if (formValue.TrailerType.Quad)\r\n            model.TrailerType.push(TrailerTypeEnum.Quad);\r\n        if (formValue.TrailerType.Tandem)\r\n            model.TrailerType.push(TrailerTypeEnum.Tandem);\r\n        if (formValue.TrailerType.Tridem)\r\n            model.TrailerType.push(TrailerTypeEnum.Tridem);\r\n\r\n        //LOCATIONS\r\n        model.Terminals = formValue.Terminals;\r\n        model.Bulkplants = formValue.BulkPlants;\r\n        model.IsFilterApplied = formValue.IsFilterApplied;\r\n        model.IsTBDRequest = formValue.IsTBDRequest;\r\n        if (IsCarrierCompany) {\r\n            model.IsBrokeredDRs = false;\r\n            if (formValue.DeliveryBrokeredDR.brokeredDrs) {\r\n                model.IsBrokeredDRs = true;\r\n            }\r\n        }\r\n        else {\r\n            model.IsBrokeredDRs = false;\r\n        }\r\n\r\n        //ORDER TYPE.\r\n        if (formValue.OrderType) {\r\n            if (formValue.OrderType.OrderTypeLTL)\r\n                model.OrderType.push(OrderType.LTL);\r\n            if (formValue.OrderType.OrderTypeFTL)\r\n                model.OrderType.push(OrderType.FTL);\r\n            if (formValue.Priority.OrderTypeALL)\r\n                model.OrderType.push(OrderType.ALL);\r\n        }\r\n        model.Customers = formValue.Customers;\r\n        return model;\r\n    }\r\n\r\n    validateFilterForm(formValue: any) {\r\n        if ((formValue.Priority) && (formValue.Priority.AssignedByMe || formValue.Priority.AssignedToMe || formValue.Priority.CouldGo || formValue.Priority.Missed || formValue.Priority.MustGo || formValue.Priority.ShouldGo))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    getLocationsFromDr(drs: DeliveryRequestViewModel[]) {\r\n\r\n        let _terminals: DropDownItem[] = [];\r\n        let _bulkPlants: DropDownItem[] = [];\r\n        let _cusomterCompanies: DropDownItem[] = [];\r\n\r\n        for (let i = 0; i < drs.length; i++) {\r\n\r\n            let _dr = drs[i];\r\n\r\n            //terminal\r\n            if (_dr.PickupLocationType != 2 && _dr.Terminal && _dr.Terminal.Id > 0 && !_terminals.some((term) => term.Id == _dr.Terminal.Id)) {\r\n                _terminals.push(\r\n                    { Name: _dr.Terminal.Name, Id: _dr.Terminal.Id }\r\n                );\r\n            }\r\n            //bulk plant\r\n            else if (_dr.PickupLocationType == 2 && _dr.BulkPlant && _dr.BulkPlant.SiteName && !_bulkPlants.some((bulk) => bulk.Name.toLocaleLowerCase() == _dr.BulkPlant.SiteName.toLocaleLowerCase())) {\r\n                _bulkPlants.push(\r\n                    { Name: _dr.BulkPlant.SiteName, Id: 0 }\r\n                );\r\n            }\r\n            //Customers\r\n            if (_dr.CustomerCompany && _dr.CustomerCompany.length > 0 && _dr.AssignedToCompanyId > 0) {\r\n                _cusomterCompanies.push(\r\n                    {\r\n                        Name: _dr.CustomerCompany,\r\n                        Id: _dr.AssignedToCompanyId\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        return { terminals: _terminals, bulkPlants: _bulkPlants, customerCompanies: _cusomterCompanies};\r\n    }\r\n\r\n\r\n    getDrsFromJob(deliveryRequests: DelRequestsByJobModel[]) {\r\n\r\n        let _drRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        deliveryRequests && deliveryRequests.length && deliveryRequests.forEach(job => {\r\n            if (job && job.DeliveryRequests) {\r\n                job.DeliveryRequests.forEach(dr => { dr && _drRequests.push(dr); });\r\n            }\r\n        });\r\n\r\n        return _drRequests;\r\n    }\r\n\r\n    applyFilterToDrs(deliveryRequests: DeliveryRequestViewModel[], filterModel: DrFilterModel) {\r\n\r\n        let searchedRecords = deliveryRequests.filter((dr: DeliveryRequestViewModel) => (\r\n            //1.day/night delivery\r\n            ((filterModel.DeliveryShift.length == 0)\r\n                || (dr.IsAcceptNightDeliveries && filterModel.DeliveryShift.includes(DeliveryShiftEnum.Evening))\r\n                || (!dr.IsAcceptNightDeliveries && filterModel.DeliveryShift.includes(DeliveryShiftEnum.Morning)))\r\n            &&\r\n            //2.TrailerType\r\n            ((filterModel.TrailerType.length == 0) || dr.JobId == 0\r\n                || (dr.TrailerTypes.some((tr) => filterModel.TrailerType.includes(tr.Id))))\r\n            &&\r\n            //Terminals\r\n            ((filterModel.Terminals.length == 0 && filterModel.Bulkplants.length == 0)\r\n                || ((filterModel.Terminals.length > 0) && (dr.PickupLocationType != 2 && dr.Terminal && dr.Terminal.Id > 0 && filterModel.Terminals.some((loc) => loc.Id == dr.Terminal.Id)))\r\n                || ((filterModel.Bulkplants.length > 0) && (dr.PickupLocationType == 2 && dr.BulkPlant && dr.BulkPlant.SiteName && filterModel.Bulkplants.some((bulk) => bulk.Name.toLowerCase() == dr.BulkPlant.SiteName.toLowerCase()))))\r\n\r\n            &&\r\n            //Customers\r\n            ((filterModel.Customers.length == 0) \r\n                || ((filterModel.Customers.length > 0) && filterModel.Customers.some((cus) => cus.CompanyName == dr.CustomerCompany)))\r\n        ));\r\n        return searchedRecords;\r\n    }\r\n\r\n    searchRequests(deliveryRequests: DeliveryRequestViewModel[], terms: string) {\r\n\r\n        let searchedDrs = deliveryRequests.filter((dr: DeliveryRequestViewModel) =>\r\n        ((dr.CustomerCompany && dr.CustomerCompany.toLowerCase().startsWith(terms))\r\n            || (dr.JobName && dr.JobName.toLowerCase().startsWith(terms))\r\n            || (dr.JobAddress && dr.JobAddress.toLowerCase().startsWith(terms))\r\n            || (dr.RouteInfo && dr.RouteInfo.Name && dr.RouteInfo.Name.toLowerCase().startsWith(terms))\r\n            || (dr.ProductType && dr.ProductType.toLowerCase().startsWith(terms))\r\n            || dr.RequiredQuantity.toString().startsWith(terms)));\r\n\r\n        return searchedDrs;\r\n    }\r\n\r\n    searchRequestsWithParams(deliveryRequests: DeliveryRequestViewModel[], terms: string, queueMode: number, windowMode: number, drType: DeliveryRequestTypes) {\r\n\r\n        let searchedDrs = deliveryRequests.filter((dr: DeliveryRequestViewModel) =>\r\n            ((dr.CustomerCompany && dr.CustomerCompany.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.JobName && dr.JobName.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.JobAddress && dr.JobAddress.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.JobCity && dr.JobCity.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.RouteInfo && dr.RouteInfo.Name && dr.RouteInfo.Name.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.ProductType && dr.ProductType.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.Vessel && dr.Vessel.toLowerCase().indexOf(terms) != -1)\r\n                || dr.RequiredQuantity.toString().startsWith(terms))\r\n            && dr.WindowMode == windowMode\r\n            && dr.QueueMode === queueMode\r\n            && ((drType == DeliveryRequestTypes.Missed && dr.ParentId != null) || (drType != DeliveryRequestTypes.Missed && dr.ParentId == null)));\r\n\r\n        return searchedDrs;\r\n    }\r\n\r\n    saveDrFilterPreferences(filter: DrFilterPreferencesModel) {\r\n        return this.httpClient.post<DrFilterPreferencesModel>(this.urlSaveDrFilterPreferences, filter)\r\n            .pipe(catchError(this.handleError<DrFilterPreferencesModel>('saveDrFilterPreferences', null)));\r\n    }\r\n\r\n    getDrFilterPreferences() {\r\n        return this.httpClient.get<DrFilterPreferencesModel>(this.urlGetDrFilterPreferences)\r\n            .pipe(catchError(this.handleError<DrFilterPreferencesModel>('getDrFilterPreferences', null)));\r\n    }\r\n}\r\n\r\nexport class DrFilterModel {\r\n    public Terminals: DropDownItem[];\r\n    public Bulkplants: DropDownItem[];\r\n    public Priority: number[];\r\n    public TrailerType: number[];\r\n    public DeliveryShift: number[];\r\n    public IsFilterApplied: boolean;\r\n    public IsBrokeredDRs: boolean;\r\n    public IsTBDRequest: boolean;\r\n    public OrderType: number[];\r\n    public Customers: any[];\r\n\r\n    constructor() {\r\n        this.Terminals = [];\r\n        this.Bulkplants = []\r\n        this.Priority = [];\r\n        this.TrailerType = [];\r\n        this.DeliveryShift = [];\r\n        this.IsFilterApplied = false;\r\n        this.IsTBDRequest = false;\r\n        this.IsBrokeredDRs = false;\r\n        this.OrderType = [];\r\n        this.Customers = [];\r\n    }\r\n}\r\n","import { Component, OnInit, Input, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, ViewChildren, QueryList, NgZone, ViewEncapsulation, ViewChild, Optional } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { DeliveryRequestViewModel, ScheduleShiftModel, TrailerModel, TripModel, RegionDetailModel, TrailerViewModel, DriverViewFilterModel, DSBSaveModel, PreLoadDrViewModel, PreLoadDrResponseViewModel, ModifiedTripInfo, LoadInfo, CompartmentModel, TrailerCompartment, DriverAdditionalDetailModel, DropAddressModel, TransferDSInfo, ShiftColumnInfo, ShiftViewModel, ShiftLoadInfo, DragDSInfo, OrderPickupDetailModel, OptionalPickupDetailModel, OrderFuelInfo, OptionalPickupLocationInfo, OrderFuelDetails, CancelDeliverySchedule, CancelDSDeliveryScheduleInfo, CancelDSDeliverySchedule, CancelDSDeliveryScheduleViewModel, ResetDeliveryGroupScheduleModel, DispatcherMapSeq } from '../../models/DispatchSchedulerModels';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { Subscription, BehaviorSubject, interval } from 'rxjs';\r\nimport { DataService } from '../../service/data.service';\r\nimport { CustomAbstractControls } from '../../customAbstractControl';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport * as moment from 'moment';\r\nimport { DriverScheduleColumnViewComponent } from '../child-components/driver-schedule-column-view.component';\r\nimport { UtilService } from '../../service/util.service';\r\nimport { TrailerFuelRetainModel } from 'src/app/tractor/model';\r\nimport { sortArrayTwice, groupDrsByProduct, sortBy, sortByKeyAsc } from 'src/app/my.functions';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { DropdownItem, StatelistService } from 'src/app/statelist.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { LoadQueueService } from '../dsb-load-queue/load-queue.service';\r\nimport { DSBLoadQueueModel, DSBLoadQueueNotificationModel } from '../dsb-load-queue/dsb-load.model';\r\nimport { AddressService } from '../../../address.service';\r\nimport { AddressModel } from '../../../invoice/models/DropDetail';\r\nimport { RegExConstants, SBConstants } from '../../../app.constants';\r\nimport { DeliveryGroupStatus, DeliveryReqStatus, DSBLoadQueueStatus, TripStatus } from 'src/app/app.enum';\r\nimport { forEach } from '@angular-devkit/schematics';\r\n\r\n@Component({\r\n    selector: 'app-driver-column-view',\r\n    templateUrl: './driver-column-view.component.html',\r\n    styleUrls: ['./driver-column-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DriverColumnViewComponent implements OnInit {\r\n    @Input() public SbForm: FormGroup;\r\n    @Input() public Shifts: ScheduleShiftModel[];\r\n    @Input() public RegionDetail: RegionDetailModel;\r\n    @Input() public SelectedRegionId: string;\r\n    @Input() public IsTrailerExists: boolean;\r\n    @Input() public HeaderToggle: boolean;\r\n    @Input() public IsNoDriverShiftFound: number = 0;\r\n    public _loadingRequests = false;\r\n    public _loadingDrivers = false;\r\n    public _savingBuilder = false;\r\n    public _loadingCmprts = false;\r\n    //public _otherRegionDriver = false;\r\n    public _otherRegionDriverSubject: BehaviorSubject<any>;\r\n    public _publishedRequestExists = false;\r\n\r\n    public PreLoadInfo: any = null;\r\n    private preloadSelectedTrailerId: string;\r\n\r\n    public SelectedDriverName: string = '';\r\n\r\n    public SelectedTrailers: TrailerViewModel[] = [];\r\n    public UnassignedTrailers: TrailerViewModel[] = [];\r\n    public UnassignedDrivers: DriverAdditionalDetailModel[] = [];\r\n    public AllUnassignedDrivers: DriverAdditionalDetailModel[] = [];\r\n    public chatDriverDetails = [];\r\n    public TrailerDdlSettings = {};\r\n    public Collapsed = [];\r\n    public CollapsedIcons = [];\r\n    public draggedDelReqData: any;\r\n    public droppedTrip: any;\r\n    public CompletedScheduleStatuses: number[] = [7, 8, 9, 10, 24];\r\n    public OnTheWayScheduleStatuses: number[] = [1, 3, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20];\r\n    public ScheduleStatuses: number[] = [3, 15, 11]; /*if any scheduled status or missed status*/\r\n    public CompartmentEditModel: any = {};\r\n    public TrailerCompartments: any = {};\r\n    public TrailerCompartmentRetains: TrailerCompartment[] = [];\r\n    public CompartmentDetails: TrailerFuelRetainModel[];\r\n    public CompartmentViewFormGroup: FormGroup;\r\n    public selTrailerIndex: number;\r\n    public selTrailerlist: [];\r\n    public updateDrFormGroup: FormGroup;\r\n    public DriverTrailerForm: FormGroup;\r\n    public DraftDeliveryGroupSubscription: Subscription;\r\n    public SaveModifiedLoadsSubscription: Subscription;\r\n    public PublishDeliveryGroupSubscription: Subscription;\r\n    public CancelDeliveryGroupSubscription: Subscription;\r\n    public DeleteDeliveryGroupSubscription: Subscription;\r\n    public DeliveryScheduleRemoveSubject: Subscription;\r\n    private DeletedGroup: any;\r\n    private PublishedGroup: any;\r\n    private EditDriverData: any;\r\n    private EditDriverTrailerSubscription: Subscription;\r\n    private SaveDriverAssignmentSubscription: Subscription;\r\n    private PublishEntireRowSubscription: Subscription;\r\n    private DragDropItemSubscription: Subscription;\r\n    private CreateLoadCancelSubscription: Subscription;\r\n    private CreateLoadSuccessSubscription: Subscription;\r\n    private CreatePreloadSubscription: Subscription;\r\n    private DisableControlsSubscription: Subscription;\r\n    private UpdatePostloadSubscription: Subscription;\r\n    private DeletePostloadSubscription: Subscription;\r\n    public disableControl: boolean = false;\r\n    private TrasnferDSSubscription: Subscription;\r\n    private TrailerInfoDSSubscription: Subscription;\r\n    private RemoveTrailerGroupSubject: Subscription;\r\n    private RouteInfoDSSubscription: Subscription;\r\n    public DSShifts: ShiftViewModel[] = [];\r\n    public SelectedShift: ShiftViewModel;\r\n    public SelectedShiftIndex: number;\r\n    public ShiftColumn: ShiftColumnInfo[] = [];\r\n    public SelectedShiftColumn: ShiftColumnInfo;\r\n    public ShiftLoad: ShiftLoadInfo[] = [];\r\n    public SelectedLoad: ShiftLoadInfo;\r\n    public _loadingDSData: boolean = false;\r\n    public SelectedDSDriverName: string = '';\r\n    public $eventDataTransfer: TransferDSInfo = new TransferDSInfo();\r\n    public selectedDefaultShiftIndex: number = -1;\r\n    public selectedRowIndex: number = -1;\r\n    public selectedColIndex: number = -1;\r\n    public scheduleTrailerInfo: any;\r\n    public _loadingRemoveTrailer: boolean = false;\r\n    SelectedTrip: any = null;\r\n    RouteListForTrip: any[] = [];\r\n    private ShiftVisibility: Subscription;\r\n    public RouteDeleteDeliveryGroupSubject: Subscription;\r\n    private DsbLoadQueueNotification: Subscription;\r\n    public routeInfo: any = null;\r\n    public _loadingRemoveRoute: boolean = false;\r\n    @ViewChildren(DriverScheduleColumnViewComponent) driverSchedules: QueryList<DriverScheduleColumnViewComponent>;\r\n    DriverColCDRSubscription: Subscription;\r\n    public PickupForm: FormGroup;\r\n    public LocationType: number = 1;\r\n    private DGSubscription: Subscription = new Subscription();\r\n    public FuelTypeDetails: DropdownItem[] = [];\r\n    public SelectedFuelTypeDetails: DropdownItem[] = [];\r\n    public FuelTypeDdlSettings = {};\r\n    public BulkPlants: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    public isReadOnly: boolean = false;\r\n    public Terminals = [];\r\n    public OptionalPickupLocationInfo: OptionalPickupDetailModel[] = [];\r\n    public _loadingOptionTerminal: boolean = true;\r\n    private OptionalPickupSubscription: Subscription;\r\n    public StateList: DropdownItem[] = [];\r\n    public CountryList: DropdownItem[] = [];\r\n    public CountryBasedZipcodeLabel: string = \"Zip\";\r\n    public _loadingAddress: boolean = false;\r\n    public OptionPickupOrderIds = [];\r\n    public OptionalPickupShiftIndex = 0;\r\n    public OptionalPickupShiftOrderNo = 0;\r\n    public OptionalPickupDriverColIndex = 0;\r\n    public OptionalPickupShiftId: string = '';\r\n    public OptionalPickupRegionId: string = '';\r\n    public OptionalPickupScheduleBuilderId: string = '';\r\n    public OrderFuelDetails: OrderFuelDetails[] = [];\r\n    public OptionPickupScheduleGroup: FormGroup;\r\n    public OptionalPickupLocationDeleteInfo: OptionalPickupDetailModel;\r\n    public cancelDSScheduleInfo: any = {};\r\n    private CancelEntireRowSubscription: Subscription;\r\n    public CancelDSScheduleLoadInfo: any = {};\r\n    keyword = 'Name';\r\n    @ViewChildren('autoCompleteInput') autoCompleteInput: QueryList<DriverScheduleColumnViewComponent>;\r\n    public ScheduleOptionalPickupDetailModel: OptionalPickupDetailModel[] = [];\r\n    public ScheduleOrderFuelInfo: OrderFuelDetails[] = [];\r\n    public CancelDSDeliveryGroupSubscription: Subscription;\r\n    public CancelDSDeliveryGroupNormalGroupDSSubject: Subscription;\r\n    public CancelDSLocationGroupSubscription: Subscription;\r\n    public cancelDSDeliveryScheduleViewModel: CancelDSDeliveryScheduleViewModel[] = [];\r\n    public DeliveryReqCancelScheduleUpdateModel: CancelDeliverySchedule[] = [];\r\n    public DispatcherLoadDragDropSubscription: Subscription;\r\n    public DispatcherLoadDragDropMapSubscription: Subscription;\r\n    constructor(private fb: FormBuilder, private sbService: ScheduleBuilderService,\r\n        public dataService: DataService, private chatService: chatService,\r\n        private utilService: UtilService, private changeDetectorRef: ChangeDetectorRef,\r\n        private zone: NgZone, private loadQueueService: LoadQueueService,\r\n        private addresService: AddressService, private stateService: StatelistService) {\r\n        this._otherRegionDriverSubject = new BehaviorSubject(false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.DriverTrailerForm = this.utilService.getDriverTrailerForm();\r\n        this.TrailerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'TrailerId',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n        };\r\n        this.CompartmentViewFormGroup = this.utilService.getCompartmentViewForm([], null);\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        this.subscribeDeliveryGroupEvents();\r\n        this.subscribeSaveModifiedLoadsSubject();\r\n        this.subscribeEditDriverTrailerEvents();\r\n        this.subscribeDraftAndPublishEvents();\r\n        this.subscribeDragDropItemSubject();\r\n        this.subscribeDisableControlsSubject();\r\n        this.subscriberCreateLoadCancelSubject();\r\n        this.subscribeCreateLoadSuccessSubject();\r\n        this.subscribeCreatePreloadSubject();\r\n        this.subscribeUpdatePostloadSubject();\r\n        this.subscribeDeletePostloadSubject();\r\n        this.subscribeEditCompartmentAssigmentSubject();\r\n        this.CompartmentDetails = [];\r\n        this.TrailerCompartmentRetains = [];\r\n        this.subscribeTransferDSEvents();\r\n        this.subscribeTrailerInfoDSEvents();\r\n        this.subscribeRouteInfoDSEvents();\r\n        this.subscribeTrailerRemoveDSEvents();\r\n        this.subscribeLoadQueueNotifications();\r\n        this.subscribeChangeDetectDsbLoadQueueNotification();\r\n        this.subscribeDriverColumnChangeDetect();\r\n        this.FuelTypeDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n        };\r\n        this.subscribeOptionPickupEvents();\r\n        this.PickupForm = this.initOptionalPickupForm(new OrderPickupDetailModel());\r\n        this.subscribeShowScheduleBuilderLoadingSubject();\r\n        this.subscribeCancelScheduleEvents();\r\n        this.subscribeCancelDSLocationGroupSubject();\r\n        this.subscribeDispatcherLoadDragDropSubscription();\r\n        this.subscribeDispatcherLoadDragDropMapSubscription();\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.Shifts && change.Shifts.currentValue) {\r\n            this.dataService.setShowDeliveryGroupSubject(false);\r\n            this.subscribeDisableControlsSubject();\r\n            this.initShifts(this.Shifts);\r\n            this.dataService.setAllShiftsSubject(this.Shifts);\r\n            this.resetDriverTrailerForm();\r\n        }\r\n        if (change.RegionDetail && change.RegionDetail.currentValue) {\r\n            this.dataService.setAllTrailersSubject(this.RegionDetail.Trailers);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dataService.setUnsavedChangesAsEmptySubject();\r\n        this.setUnsavedChanges();\r\n        this.subscribeOptionalPickupLocationChange();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeDeliveryGroupEvents();\r\n        this.unsubscribeEditDriverTrailerEvents();\r\n        this.unsubscribeDraftAndPublishEvents();\r\n        this.unsubscribeDragDropItemSubject();\r\n        this.unsubscriberCreateLoadCancelSubject();\r\n        this.unsubscribeCreateLoadSuccessSubject();\r\n        this.unsubscribeCreatePreloadSubject();\r\n        this.unsubscribeUpdatePostloadSubject();\r\n        this.unsubscribeDeletePostloadSubject();\r\n        var _shifts = this.SbForm.get('Shifts') as FormArray;\r\n        if (_shifts) {\r\n            _shifts.clear(); // Clear shifts of driver view\r\n        }\r\n        if (this.DisableControlsSubscription) {\r\n            this.DisableControlsSubscription.unsubscribe();\r\n        }\r\n        if (this.TrasnferDSSubscription) {\r\n            this.TrasnferDSSubscription.unsubscribe();\r\n        }\r\n        if (this.TrailerInfoDSSubscription) {\r\n            this.TrailerInfoDSSubscription.unsubscribe();\r\n        }\r\n        if (this.RouteInfoDSSubscription) {\r\n            this.RouteInfoDSSubscription.unsubscribe();\r\n        }\r\n        if (this.RemoveTrailerGroupSubject) {\r\n            this.RemoveTrailerGroupSubject.unsubscribe();\r\n        }\r\n        if (this.ShiftVisibility) {\r\n            this.ShiftVisibility.unsubscribe();\r\n        }\r\n        if (this.DriverColCDRSubscription) {\r\n            this.DriverColCDRSubscription.unsubscribe();\r\n        }\r\n        if (this.OptionalPickupSubscription) {\r\n            this.OptionalPickupSubscription.unsubscribe();\r\n        }\r\n        this.unsubscribeAllDGSubscriptions();\r\n        this.unsubscribeCancelScheduleEvents();\r\n        this.unsubscribeCancelLocationScheduleEvents();\r\n        if (this.DispatcherLoadDragDropSubscription) {\r\n            this.DispatcherLoadDragDropSubscription.unsubscribe();\r\n        }\r\n        if (this.DispatcherLoadDragDropMapSubscription) {\r\n            this.DispatcherLoadDragDropMapSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    subscribeDeliveryGroupEvents(): void {\r\n        this.subscribeDraftDeliveryGroupSubject();\r\n        this.subscribePublishDeliveryGroupSubject();\r\n        this.subscribeCancelDeliveryGroupSubject();\r\n        this.subscribeDeleteDeliveryGroupSubject();\r\n        this.subscribeRouteDeleteDeliveryGroupSubject();\r\n        this.subscribeCancelDSDeliveryGroupSubject();\r\n        this.subscribeCancelDeliveryGroupNormalGroupDSSubject();\r\n        this.subscribeDeliveryScheduleRemoveSubject();\r\n    }\r\n\r\n    unsubscribeDeliveryGroupEvents(): void {\r\n        if (this.DraftDeliveryGroupSubscription) {\r\n            this.DraftDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.SaveModifiedLoadsSubscription) {\r\n            this.SaveModifiedLoadsSubscription.unsubscribe();\r\n        }\r\n        if (this.PublishDeliveryGroupSubscription) {\r\n            this.PublishDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.DeleteDeliveryGroupSubscription) {\r\n            this.DeleteDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.CancelDeliveryGroupSubscription) {\r\n            this.CancelDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.CancelDSDeliveryGroupSubscription) {\r\n            this.CancelDSDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.CancelDSDeliveryGroupNormalGroupDSSubject) {\r\n            this.CancelDSDeliveryGroupNormalGroupDSSubject.unsubscribe();\r\n        }\r\n        if (this.DeliveryScheduleRemoveSubject) {\r\n            this.DeliveryScheduleRemoveSubject.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeEditDriverTrailerEvents(): void {\r\n        if (this.EditDriverTrailerSubscription) {\r\n            this.EditDriverTrailerSubscription.unsubscribe();\r\n        }\r\n        if (this.SaveDriverAssignmentSubscription) {\r\n            this.SaveDriverAssignmentSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeDraftAndPublishEvents(): void {\r\n        if (this.PublishEntireRowSubscription) {\r\n            this.PublishEntireRowSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeDragDropItemSubject(): void {\r\n        if (this.DragDropItemSubscription) {\r\n            this.DragDropItemSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscriberCreateLoadCancelSubject(): void {\r\n        if (this.CreateLoadCancelSubscription) {\r\n            this.CreateLoadCancelSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeCreateLoadSuccessSubject(): void {\r\n        if (this.CreateLoadSuccessSubscription) {\r\n            this.CreateLoadSuccessSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeCreatePreloadSubject(): void {\r\n        if (this.CreatePreloadSubscription) {\r\n            this.CreatePreloadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeUpdatePostloadSubject(): void {\r\n        if (this.UpdatePostloadSubscription) {\r\n            this.UpdatePostloadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeDeletePostloadSubject(): void {\r\n        if (this.DeletePostloadSubscription) {\r\n            this.DeletePostloadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    subscribeDraftDeliveryGroupSubject(): void {\r\n        this.DraftDeliveryGroupSubscription = this.dataService.DraftDeliveryGroupSubject.subscribe(x => {\r\n            this.draftScheduleBuilder(x.trip, x.filterChanged);\r\n        });\r\n    }\r\n\r\n    subscribeSaveModifiedLoadsSubject(): void {\r\n        this.SaveModifiedLoadsSubscription = this.dataService.SaveModifiedLoadsSubject.subscribe(x => {\r\n            if (x && x.length > 0) {\r\n                this.saveScheduleBuilderData(x, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribePublishDeliveryGroupSubject(): void {\r\n        this.PublishDeliveryGroupSubscription = this.dataService.PublishDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.ScheduleOptionalPickupDetailModel = [];\r\n                this.ScheduleOrderFuelInfo = null;\r\n                if (x.isOptionalPickup) {\r\n                    this.ScheduleOptionalPickupDetailModel = x.OptionalPickupInfo;\r\n                    this.ScheduleOrderFuelInfo = x.OrderFuelInfo;\r\n                }\r\n                this.publishScheduleBuilder(x.shiftIndex, x.rowIndex, x.colIndex, x.schedule, x.trip, x.isOptionalPickup);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDisableControlsSubject(): void {\r\n        this.DisableControlsSubscription = this.dataService.DisableDSBControlsSubject.subscribe(x => {\r\n            this.disableControl = x;\r\n        });\r\n    }\r\n\r\n    subscribeCancelDeliveryGroupSubject(): void {\r\n        this.CancelDeliveryGroupSubscription = this.dataService.CancelDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.cancelScheduleBuilder(x.shiftIndex, x.rowIndex, x.tripIndex, x.trip);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDeleteDeliveryGroupSubject(): void {\r\n        this.DeleteDeliveryGroupSubscription = this.dataService.DeleteDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deleteGroup(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeEditDriverTrailerEvents(): void {\r\n        this.EditDriverTrailerSubscription = this.dataService.EditDriverTrailerSubject.subscribe(x => {\r\n            if (x) {\r\n                this.editDriverTrailers(x);\r\n            }\r\n        });\r\n        this.SaveDriverAssignmentSubscription = this.dataService.SaveDriverAssignmentSubject.subscribe(x => {\r\n            if (x) {\r\n                this.saveDriverAssignment(x.Index1, x.Index2);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDraftAndPublishEvents(): void {\r\n        this.PublishEntireRowSubscription = this.dataService.PublishEntireRowSubject.subscribe(x => {\r\n            if (x) {\r\n                this.ScheduleOptionalPickupDetailModel = [];\r\n                this.ScheduleOrderFuelInfo = null;\r\n                if (x.IsOptionalPickup) {\r\n                    this.ScheduleOptionalPickupDetailModel = x.OptionalPickupInfo;\r\n                    this.ScheduleOrderFuelInfo = x.OrderFuelInfo;\r\n                }\r\n                this.validateRowPublish(x.ShiftIndex, x.ScheduleIndex, x.IsOptionalPickup);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDragDropItemSubject(): void {\r\n        this.DragDropItemSubscription = this.dataService.DragDropItemSubject.subscribe(x => {\r\n            if (x) {\r\n                this.onItemDrop(x.trip, x.event, x.shiftIndex, x.rowIndex, x.colIndex, x.schedule);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscriberCreateLoadCancelSubject(): void {\r\n        this.CreateLoadCancelSubscription = this.dataService.CreateLoadCancelSubject.subscribe(x => {\r\n            if (x) {\r\n                this.cancelCreateLoad(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeCreateLoadSuccessSubject(): void {\r\n        this.CreateLoadSuccessSubscription = this.dataService.CreateLoadSuccessSubject.subscribe(x => {\r\n            if (x) {\r\n                this.updateTripOnCreateLoadSucess(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeCreatePreloadSubject(): void {\r\n        this.CreatePreloadSubscription = this.dataService.CreatePreloadSubject.subscribe(x => {\r\n            if (x) {\r\n                this.processPreloadDeliveryCreation(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeUpdatePostloadSubject(): void {\r\n        this.UpdatePostloadSubscription = this.dataService.UpdatePostloadSubject.subscribe(x => {\r\n            if (x) {\r\n                this.updateEditedPostloadDrs(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDeletePostloadSubject(): void {\r\n        this.DeletePostloadSubscription = this.dataService.DeletePostloadSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deletePreAndPostloadDrs(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeEditCompartmentAssigmentSubject(): void {\r\n        this.dataService.EditCompartmentAssigmentSubject.subscribe(x => {\r\n            if (x) {\r\n                this.editCompartmentAssignments(x);\r\n            }\r\n        });\r\n    }\r\n    subscribeDeliveryScheduleRemoveSubject(): void {\r\n        this.DeliveryScheduleRemoveSubject = this.dataService.DeliveryScheduleRemoveSubject.subscribe(x => {\r\n            this.deleteSingleLoad(x);\r\n        });\r\n    }\r\n    initShifts(shifts: ScheduleShiftModel[]): void {\r\n\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        _shiftArray.clear();\r\n\r\n        shifts.forEach((x, i) => {\r\n\r\n            let _shiftForm = this.fb.group({\r\n                Id: this.fb.control(x.Id),\r\n                Schedules: this.fb.array([]), // Rows in the shift \r\n                StartTime: this.fb.control(x.StartTime),\r\n                EndTime: this.fb.control(x.EndTime),\r\n                SlotPeriod: this.fb.control(x.SlotPeriod),\r\n                IsCollapsed: this.fb.control(x.IsCollapsed),\r\n                IsVisible: this.fb.control(true),\r\n                OrderNo: this.fb.control(x.OrderNo),\r\n            })\r\n\r\n            let _sArray = this.getSchedulesFormArray(x.Schedules);\r\n            let _schedules = _shiftForm.controls['Schedules'] as FormArray;\r\n            _sArray.controls.forEach(x => _schedules.push(x));\r\n\r\n            _shiftArray.push(_shiftForm);\r\n\r\n            this.Collapsed.push((x.IsCollapsed ? '' : 'show'));\r\n            this.CollapsedIcons.push((x.IsCollapsed ? 'collapsed' : ''));\r\n        });\r\n    }\r\n    getSchedulesFormArray(schedules: TrailerModel[]): FormArray {\r\n        var _sArray = this.fb.array([]);\r\n        schedules.forEach(x => {\r\n            _sArray.push(this.fb.group({\r\n                AllowDriverChange: this.fb.control(x.AllowDriverChange),\r\n                Drivers: this.utilService.getDriversFormArray(x.Drivers),\r\n                Trailers: this.utilService.getTrailersFormArray(x.Trailers),\r\n                Trips: this.utilService.getTripsFormArray(x.Trips),\r\n                LoadQueueId: this.fb.control(x.LoadQueueId),\r\n                IsLoadQueueCollapsed: this.fb.control(x.IsLoadQueueCollapsed),\r\n                IsColumnSelected: this.fb.control(x.IsColumnSelected),\r\n                IsLoadQueueColumnBlocked: this.fb.control(x.IsLoadQueueColumnBlocked),\r\n                IsIncludeAllRegionDriver: this.fb.control(x.IsIncludeAllRegionDriver),\r\n                LoadQueueColumnStatus: this.fb.control(x.LoadQueueColumnStatus),\r\n                LoadQueueFilterVisibility: this.fb.control(true),\r\n                IsDriverScheduleExists: this.fb.control(x.IsDriverScheduleExists),\r\n                DriverRowIndex: this.fb.control(x.DriverRowIndex),\r\n            }));\r\n        });\r\n        return _sArray;\r\n    }\r\n\r\n    private resetDriverTrailerForm(): void {\r\n        this.SelectedTrailers = [];\r\n        this.UnassignedTrailers = [];\r\n        if (this.DriverTrailerForm) {\r\n            this.DriverTrailerForm.reset();\r\n        }\r\n    }\r\n\r\n    validateTrailerJobCompatibility(drData: any, schedule: FormGroup): void {\r\n        var _deliveryRequests = drData.Data.value;\r\n        let _selectedTrailers = schedule.controls[\"Trailers\"].value;\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        if ((_selectedTrailers && _selectedTrailers.length > 0) && (_deliveryRequests && _deliveryRequests.length > 0)) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n                    if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                        this.highLightDRDiv(trips, data);\r\n                        Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                    } else {\r\n                        this.highLightDRDiv(trips, null);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    highLightDRDiv(trips: FormArray, data) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.controls[\"IsNotCompatible\"].patchValue(false);\r\n                    deliveryRequest.controls[\"IsBlinkDR\"].patchValue(false);\r\n                    if (data) {\r\n                        if (data.deliveryRequestsNotCompatible.find(t => t.Id == deliveryRequest.controls[\"Id\"].value)) {\r\n                            deliveryRequest.controls[\"IsNotCompatible\"].patchValue(true);\r\n                            deliveryRequest.controls[\"IsBlinkDR\"].patchValue(true);\r\n                            setTimeout(() => {\r\n                                this.removeClassForAllLoad(trips);\r\n                            }, 10000);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    highLightDRDivOneLoad(trip: FormGroup, data) {\r\n        var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n        if (deliveryRequests) {\r\n            for (var j = 0; j < deliveryRequests.length; j++) {\r\n                var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                deliveryRequest.get(\"IsNotCompatible\").patchValue(false);\r\n                deliveryRequest.get(\"IsBlinkDR\").patchValue(false);\r\n                if (data && data.deliveryRequestsNotCompatible) {\r\n                    if (data.deliveryRequestsNotCompatible.find(t => t.Id == deliveryRequest.get(\"Id\").value)) {\r\n                        deliveryRequest.get(\"IsNotCompatible\").patchValue(true);\r\n                        deliveryRequest.get(\"IsBlinkDR\").patchValue(true);\r\n                        setTimeout(() => {\r\n                            this.removeClassForLoad(trip);\r\n                        }, 10000);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    removeClassForAllLoad(trips: FormArray) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.get(\"IsBlinkDR\").patchValue(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    removeClassForLoad(trip: FormGroup) {\r\n        var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n        if (deliveryRequests) {\r\n            for (var j = 0; j < deliveryRequests.length; j++) {\r\n                var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                deliveryRequest.get(\"IsBlinkDR\").patchValue(false);\r\n            }\r\n        }\r\n    }\r\n    IsDRCompatible(trip: FormGroup) {\r\n        var isDRCompatible = true;\r\n        var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n        if (deliveryRequests) {\r\n            for (var j = 0; j < deliveryRequests.length; j++) {\r\n                var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                if (deliveryRequest && deliveryRequest.get(\"IsNotCompatible\").value) {\r\n                    isDRCompatible = false;\r\n                }\r\n            }\r\n        }\r\n        return isDRCompatible;\r\n    }\r\n\r\n    onItemDrop(trip: FormGroup, event: any, shiftIndex: number, rowIndex: number, colIndex: number, schedule: any): void {\r\n        let drData = event.dragData;\r\n        let dragToLoad = false;\r\n        if (drData && drData.Data && drData.Data.length == 0) {\r\n            return; //There is no dr in dragged data, so don't take any action.\r\n        }\r\n        if (drData.TripFrom) {\r\n            if (drData.TripFrom.controls['DriverRowIndex'].value == trip.controls['DriverRowIndex'].value && drData.TripFrom.controls['DriverColIndex'].value == trip.controls['DriverColIndex'].value && drData.TripFrom.controls['ShiftIndex'].value == trip.controls['ShiftIndex'].value)\r\n                return;\r\n        }\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        let drDataCopied = JSON.parse(JSON.stringify(drData.Data));\r\n        if (drData.TripFrom) {\r\n            let isCommonPickup = trip.get('IsCommonPickup').value as boolean;\r\n            let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n            if ((drData.TripFrom.controls['DriverRowIndex'].value != trip.controls['DriverRowIndex'].value) || (drData.TripFrom.controls['ShiftIndex'].value == trip.controls['ShiftIndex'].value)) {\r\n                drData.Data = this.utilService.getDeliveryRequestFormArray(drData.Data, isCommonPickup, IsDispatcherDragDropSequence, 1, drData.TripFrom);\r\n            }\r\n            else {\r\n                drData.Data = this.utilService.getDeliveryRequestFormArray(drData.Data, isCommonPickup, IsDispatcherDragDropSequence, 0, drData.TripFrom);\r\n            }\r\n            this.draggedDelReqData = event.dragData;\r\n            this.droppedTrip = { Trip: trip, ShiftIndex: shiftIndex, RowIndex: rowIndex, ColIndex: colIndex, Schedule: schedule };\r\n            if (this.isDraggedDRsPublished(drData.Data.value) || (drData.TripFrom.value && drData.TripFrom.value.DeliveryRequests.length > 1 && drData.TripFrom.controls['DeliveryGroupPrevStatus'].value == 2) || trip.controls['DeliveryGroupPrevStatus'].value == 2) {\r\n                var scheduleIds: number[] = this.getPublishedDRsTrackableScheduleIds(drData.Data.value);\r\n                if (scheduleIds.length > 0) {\r\n                    this.dragDelReqToAnotherLoad(scheduleIds);\r\n                } else {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                    jQuery('#btnconfirm-dragdrop-dr').click();\r\n                }\r\n            }\r\n            else {\r\n                dragToLoad = true;\r\n            }\r\n        } else {\r\n            let isCommonPickup = trip.get('IsCommonPickup').value as boolean;\r\n            let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n            drData.Data = this.utilService.getDeliveryRequestFormArray(drData.Data, isCommonPickup, IsDispatcherDragDropSequence, 0, drData.TripFrom);\r\n            trip.controls['IsEditable'].setValue(true);\r\n            dragToLoad = true;\r\n        }\r\n        if (dragToLoad == true) {\r\n            this._savingBuilder = true;\r\n            this.createLoad({\r\n                RegionId: this.SelectedRegionId,\r\n                Customer: drDataCopied[0].CustomerCompany,\r\n                JobId: drDataCopied[0].JobId,\r\n                JobName: drDataCopied[0].JobName,\r\n                Drs: drDataCopied,\r\n                ShiftIndex: shiftIndex,\r\n                RowIndex: rowIndex,\r\n                ColIndex: colIndex,\r\n                Schedule: schedule,\r\n                Trip: trip,\r\n                DrData: drData,\r\n                IsDragFromLoad: drData.TripFrom != null\r\n            });\r\n        }\r\n        this.dataService.setDeliveryPreloadOption({ ShiftIndex: shiftIndex, ScheduleIndex: colIndex, Reset: true });\r\n    }\r\n\r\n    isDraggedDRsPublished(delRequests: DeliveryRequestViewModel[]) {\r\n        return delRequests.filter(t => t.PreviousStatus == 3).length > 0;\r\n    }\r\n\r\n    getPublishedDRsTrackableScheduleIds(delRequests: DeliveryRequestViewModel[]) {\r\n        return delRequests.filter(t => t.PreviousStatus == 3).map(t => t.TrackableScheduleId);\r\n    }\r\n\r\n    dragDelReqToAnotherLoad(scheduleIds: any) {\r\n        this._savingBuilder = true;\r\n        this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n            this._savingBuilder = false;\r\n            if (response != null && response != undefined && response.length > 0) {\r\n                let completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                let isCompletedSchedule = completedSchedules.length > 0;\r\n                let onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                let cancelledSchedules = this.sbService.returnCommonElements(SBConstants.CancelledScheduleStatuses, response, true);\r\n                if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                    Declarations.msgerror(\"Can't delete from this load as drop has been made already\", 'Warning', 2500);\r\n                    this.droppedTrip = null;\r\n                    this.draggedDelReqData = null;\r\n                    return;\r\n                } else if (onTheWaySchedules.length > 0) {\r\n                    this.sbService.setConfirmationHeadingForDR(onTheWaySchedules[0]);\r\n                    jQuery('#btnconfirm-dragdrop-dr').click();\r\n                    return;\r\n                } else if (cancelledSchedules.length > 0) {\r\n                    Declarations.msgerror(\"Can't drag from this load as drop has been cancelled\", 'Warning', 2500);\r\n                    this.droppedTrip = null;\r\n                    this.draggedDelReqData = null;\r\n                    return;\r\n                }\r\n                else {\r\n                    if (this.draggedDelReqData.TripFrom.get('DeliveryGroupPrevStatus').value == 2 || this.draggedDelReqData.get('DeliveryGroupPrevStatus').value == 2) {\r\n                        jQuery('#btnconfirm-dragdrop-dr').click();\r\n                    } else {\r\n                        this.dragDelReqToAnotherLoadYes();\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.draggedDelReqData.TripFrom.get('DeliveryGroupPrevStatus').value == 2 || this.draggedDelReqData.get('DeliveryGroupPrevStatus').value == 2) {\r\n                    jQuery('#btnconfirm-dragdrop-dr').click();\r\n                } else {\r\n                    this.dragDelReqToAnotherLoadYes();\r\n                }\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    private DropDelReqToLoad(droppedToSchedule: any, droppedToTrip: FormGroup, drData: any, drsToRemove: any) {\r\n        var isDraggedFromLoad = drData.TripFrom != undefined && drData.TripFrom != null;\r\n        let isCommonPickup = droppedToTrip.controls['IsCommonPickup'].value as boolean;\r\n        var locationType = droppedToTrip.controls['PickupLocationType'].value;\r\n        var pickupLocation = null;\r\n        if (isCommonPickup) {\r\n            if (locationType != 2)\r\n                pickupLocation = droppedToTrip.controls['Terminal'].value\r\n            else\r\n                pickupLocation = droppedToTrip.controls['BulkPlant'].value;\r\n        }\r\n\r\n        var _drArray = droppedToTrip.controls['DeliveryRequests'] as FormArray;\r\n        var _drArrayValue = droppedToTrip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        var _drFormArray = drData.Data as FormArray;\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                if (isDraggedFromLoad) {\r\n                    if (!(locationType == 2 && _drForm.value.BulkPlant && _drForm.value.BulkPlant.SiteName == droppedToTrip.value.BulkPlant.SiteName)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!(locationType != 2 && _drForm.value.Terminal && _drForm.value.Terminal.Id == droppedToTrip.value.Terminal.Id)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!isCommonPickup) {\r\n                        droppedToTrip.controls['IsCommonPickup'].setValue(false);\r\n                        droppedToTrip.controls['Terminal'].disable();\r\n                        droppedToTrip.controls['BulkPlant'].disable();\r\n                        _drArray.controls.forEach((_toDrForm: FormGroup) => {\r\n                            if (locationType != 2) {\r\n                                _toDrForm.controls['Terminal'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(1);\r\n                            }\r\n                            else {\r\n                                _toDrForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(2);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                _drForm.controls['Terminal'].disable();\r\n                _drForm.controls['BulkPlant'].disable();\r\n            }\r\n            else {\r\n                var drValue = _drForm.value;\r\n                var isDRPickupExists = (drValue.PickupLocationType != 2 && drValue.Terminal && drValue.Terminal.Id > 0) || (drValue.PickupLocationType == 2 && drValue.BulkPlant && drValue.BulkPlant.SiteName && drValue.BulkPlant.SiteName.length > 0);\r\n                if (pickupLocation) {\r\n                    if (!isDRPickupExists) {\r\n                        if (locationType != 2) {\r\n                            _drForm.controls['Terminal'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(1);\r\n                        }\r\n                        else {\r\n                            _drForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!isDraggedFromLoad) {\r\n                _drForm.controls['ScheduleStatus'].setValue(14);\r\n                _drForm.controls['Status'].setValue(5);\r\n            }\r\n            if (droppedToTrip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                var drFormJobId = _drForm.controls['JobId'].value;\r\n                if (_drArrayValue.find(x => x.JobId == drFormJobId) != null) {\r\n                    var jobInfoIndex = _drArrayValue.findIndex(x => x.JobId == drFormJobId);\r\n                    _drArray.insert(jobInfoIndex, _drForm);\r\n                }\r\n                else {\r\n                    _drArray.push(_drForm);\r\n                }\r\n            }\r\n            else {\r\n                _drArray.push(_drForm);\r\n            }\r\n        });\r\n\r\n        if (isDraggedFromLoad) {\r\n            var drInFromTrip = drData.TripFrom.controls['DeliveryRequests'] as FormArray;\r\n            for (let idx = 0; idx < _drFormArray.controls.length; idx++) {\r\n                let drIndex = drInFromTrip.controls.findIndex((x: FormGroup) => {\r\n                    return x.controls['Id'].value == _drFormArray.controls[idx]['controls'].Id.value\r\n                });\r\n                _drFormArray.controls[idx].get('SourceTripId').setValue(drData.TripFrom.controls['TripId'].value);\r\n                drInFromTrip.removeAt(drIndex);\r\n            }\r\n            if (droppedToTrip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                droppedToTrip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n            }\r\n            this.dragDropDeliveryRequestsSave(drData.TripFrom, droppedToTrip, drData.Schedule, droppedToSchedule);\r\n        } else {\r\n            if (droppedToTrip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                droppedToTrip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n            }\r\n            this.dataService.setRemoveDroppedRequestSubject(drsToRemove);\r\n            if (droppedToTrip.value && (this.isDraggedDRsPublished(droppedToTrip.value.DeliveryRequests) || (droppedToTrip.value.DeliveryRequests.length > 1 && droppedToTrip.controls['DeliveryGroupPrevStatus'].value == 2))) {\r\n                this.publishScheduleBuilder(droppedToTrip.controls['ShiftIndex'].value, droppedToTrip.controls['DriverRowIndex'].value, droppedToTrip.controls['DriverColIndex'].value, droppedToSchedule, droppedToTrip);\r\n            }\r\n            else {\r\n                this.draftScheduleBuilder(droppedToTrip);\r\n            }\r\n        }\r\n        this.validateTrailerJobCompatibility(drData, droppedToSchedule);\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.markForCheck();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n\r\n    }\r\n\r\n    dragDelReqToAnotherLoadYes() {\r\n        this._savingBuilder = true;\r\n        let isCommonPickup = this.droppedTrip.Trip.controls['IsCommonPickup'].value as boolean;\r\n        var locationType = this.droppedTrip.Trip.controls['PickupLocationType'].value;\r\n        var pickupLocation = null;\r\n        if (isCommonPickup) {\r\n            if (locationType != 2)\r\n                pickupLocation = this.droppedTrip.Trip.controls['Terminal'].value\r\n            else\r\n                pickupLocation = this.droppedTrip.Trip.controls['BulkPlant'].value;\r\n        }\r\n        var _drArray = this.droppedTrip.Trip.controls['DeliveryRequests'] as FormArray;\r\n        var _drArrayValue = this.droppedTrip.Trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        let isDraggedFromLoad = this.draggedDelReqData != null && this.draggedDelReqData.TripFrom != undefined && this.draggedDelReqData.TripFrom != null;\r\n        var _drFormArray = this.draggedDelReqData.Data as FormArray;\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                if (isDraggedFromLoad) {\r\n                    if (!(locationType == 2 && _drForm.value.BulkPlant && _drForm.value.BulkPlant.SiteName == this.droppedTrip.Trip.value.BulkPlant.SiteName)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!(locationType != 2 && _drForm.value.Terminal && _drForm.value.Terminal.Id == this.droppedTrip.Trip.value.Terminal.Id)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!isCommonPickup) {\r\n                        this.droppedTrip.Trip.controls['IsCommonPickup'].setValue(false);\r\n                        this.droppedTrip.Trip.controls['Terminal'].disable();\r\n                        this.droppedTrip.Trip.controls['BulkPlant'].disable();\r\n                        _drArray.controls.forEach((_toDrForm: FormGroup) => {\r\n                            if (locationType != 2) {\r\n                                _toDrForm.controls['Terminal'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(1);\r\n                            }\r\n                            else {\r\n                                _toDrForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(2);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                _drForm.controls['Terminal'].disable();\r\n                _drForm.controls['BulkPlant'].disable();\r\n            }\r\n            else {\r\n                var drValue = _drForm.value;\r\n                var isDRPickupExists = (drValue.PickupLocationType != 2 && drValue.Terminal && drValue.Terminal.Id > 0) || (drValue.PickupLocationType == 2 && drValue.BulkPlant && drValue.BulkPlant.SiteName && drValue.BulkPlant.SiteName.length > 0);\r\n                if (pickupLocation) {\r\n                    if (!isDRPickupExists) {\r\n                        if (locationType != 2) {\r\n                            _drForm.controls['Terminal'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(1);\r\n                        }\r\n                        else {\r\n                            _drForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.droppedTrip.Trip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                var drFormJobId = _drForm.controls['JobId'].value;\r\n                if (_drArrayValue.find(x => x.JobId == drFormJobId) != null) {\r\n                    var jobInfoIndex = _drArrayValue.findIndex(x => x.JobId == drFormJobId);\r\n                    _drArray.insert(jobInfoIndex, _drForm);\r\n                }\r\n                else {\r\n                    _drArray.push(_drForm);\r\n                }\r\n            }\r\n            else {\r\n                _drArray.push(_drForm);\r\n            }\r\n        });\r\n        if (isDraggedFromLoad) {\r\n            var drInFromTrip = this.draggedDelReqData.TripFrom.controls['DeliveryRequests'] as FormArray;\r\n            for (let idx = 0; idx < _drFormArray.controls.length; idx++) {\r\n                let drIndex = drInFromTrip.controls.findIndex((x: FormGroup) => {\r\n                    return x.controls['Id'].value == _drFormArray.controls[idx]['controls'].Id.value\r\n                });\r\n                _drFormArray.controls[idx].get('SourceTripId').setValue(this.draggedDelReqData.TripFrom.controls['TripId'].value);\r\n                drInFromTrip.removeAt(drIndex);\r\n            }\r\n        }\r\n        if (this.droppedTrip.Trip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n            this.droppedTrip.Trip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n        }\r\n        this._savingBuilder = false;\r\n        this.validateTrailerJobCompatibility(this.draggedDelReqData, this.draggedDelReqData.Schedule);\r\n        this.draggedDelReqData.TripFrom.controls['ShiftIndex'].setValue(this.draggedDelReqData.ShiftIndex);\r\n        this.droppedTrip.Trip.controls['ShiftIndex'].setValue(this.droppedTrip.ShiftIndex);\r\n        this.dragDropDeliveryRequestsPublish(this.draggedDelReqData.TripFrom, this.droppedTrip.Trip, this.draggedDelReqData.Schedule, this.droppedTrip.Schedule);\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n\r\n    dragDropDeliveryRequestsSave(tripFrom: FormGroup, tripTo: FormGroup, tripFromSchedule: FormGroup, tripToSchedule: FormGroup): void {\r\n        this._savingBuilder = true;\r\n        if (tripFrom.controls['DeliveryRequests'].value.length == 0) {\r\n            tripFrom.controls['IsCommonPickup'].setValue(false);\r\n            tripFrom.controls['Terminal'].disable();\r\n            tripFrom.controls['BulkPlant'].disable();\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n        var sourceTrip = tripFrom.value;\r\n        var destTrip = tripTo.value;\r\n        this.setTripStatus(sourceTrip);\r\n        this.setDeliveryGroupStatus(sourceTrip, DeliveryGroupStatus.Draft);\r\n        this.setTripStatus(destTrip);\r\n        this.setDeliveryGroupStatus(destTrip, DeliveryGroupStatus.Draft);\r\n        var dataToSave = this.getDSBSaveModel();\r\n        sourceTrip.Drivers = tripFromSchedule.get('Drivers').value;\r\n        sourceTrip.Trailers = tripFromSchedule.get('Trailers').value;\r\n        this.setDeliveryRequestStatusAsDraft(sourceTrip.DeliveryRequests);\r\n        dataToSave.Trips.push(sourceTrip);\r\n        destTrip.Drivers = tripToSchedule.get('Drivers').value;\r\n        destTrip.Trailers = tripToSchedule.get('Trailers').value;\r\n        this.setDeliveryRequestStatusAsDraft(destTrip.DeliveryRequests);\r\n        dataToSave.Trips.push(destTrip);\r\n        dataToSave.Status = 5;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        this.sbService.saveDriverView(dataToSave).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            var trips = [];\r\n            trips.push(tripFrom);\r\n            trips.push(tripTo);\r\n            this.updateLoadForm(data, trips);\r\n        });\r\n    }\r\n\r\n    dragDropDeliveryRequestsPublish(tripFrom: FormGroup, tripTo: FormGroup, tripFromSchedule: FormGroup, tripToSchedule: FormGroup): void {\r\n        var isDraggedDRsPublished = this.isDraggedDRsPublished(this.draggedDelReqData.Data.value), isDestTripPublished = false;\r\n        if (tripFrom != null && tripFrom != undefined) {\r\n            if (tripFrom.get('GroupId').value > 0) {\r\n                if (tripFrom && tripFrom.invalid) {\r\n                    let invalidctrls = CustomAbstractControls.findRecursiveErrors(tripFrom);\r\n                    var i = tripFrom.get('ShiftIndex').value;\r\n                    var j = tripFrom.get('DriverRowIndex').value;\r\n                    var k = tripFrom.get('DriverColIndex').value;\r\n                    if (tripFrom.get('DeliveryRequests').value.length > 0) {\r\n                        this.editExisingGroup(tripFrom, i, j, k, tripFromSchedule, true);\r\n                        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        tripFrom.controls['IsCommonPickup'].setValue(false);\r\n                        tripFrom.controls['Terminal'].disable();\r\n                        tripFrom.controls['BulkPlant'].disable();\r\n                    }\r\n                }\r\n                else {\r\n                    this.dataService.setShowDeliveryGroupSubject(false);\r\n                }\r\n            }\r\n        }\r\n        if (tripTo != null && tripTo != undefined) {\r\n            if (tripTo.get('GroupId').value > 0) {\r\n                isDestTripPublished = true;\r\n                if (tripTo.invalid) {\r\n                    var i = tripTo.get('ShiftIndex').value;\r\n                    var j = tripTo.get('DriverRowIndex').value;\r\n                    var k = tripTo.get('DriverColIndex').value;\r\n                    let invalidctrls = CustomAbstractControls.findRecursiveErrors(tripTo);\r\n                    if (tripTo.get('DeliveryRequests').value.length > 0) {\r\n                        this.editExisingGroup(tripTo, i, j, k, tripToSchedule, true);\r\n                        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    this.dataService.setShowDeliveryGroupSubject(false);\r\n                }\r\n            }\r\n        }\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var sourceTripValue = tripFrom.value;\r\n        var destTripValue = tripTo.value;\r\n        if (sourceTripValue.GroupId > 0) {\r\n            this.setTripStatus(sourceTripValue);\r\n            this.setDeliveryGroupStatus(sourceTripValue, DeliveryGroupStatus.Published);\r\n        }\r\n        else {\r\n            this.setTripStatus(sourceTripValue);\r\n            this.setDeliveryGroupStatus(sourceTripValue, DeliveryGroupStatus.Draft);\r\n        }\r\n        sourceTripValue.Drivers = tripFromSchedule.get('Drivers').value;\r\n        sourceTripValue.Trailers = tripFromSchedule.get('Trailers').value;\r\n        if (destTripValue.GroupId > 0) {\r\n            this.setTripStatus(destTripValue);\r\n            this.setDeliveryGroupStatus(destTripValue, DeliveryGroupStatus.Published);\r\n        }\r\n        else {\r\n            this.setTripStatus(destTripValue);\r\n            this.setDeliveryGroupStatus(destTripValue, DeliveryGroupStatus.Draft);\r\n        }\r\n        destTripValue.Drivers = tripToSchedule.get('Drivers').value;\r\n        destTripValue.Trailers = tripToSchedule.get('Trailers').value;\r\n\r\n        if (isDraggedDRsPublished && destTripValue.DeliveryGroupPrevStatus != 2) {\r\n            this.setDeliveryRequestStatusAsDraft(destTripValue.DeliveryRequests);\r\n        }\r\n        else if (!isDraggedDRsPublished && destTripValue.DeliveryGroupPrevStatus == 2) {\r\n            this.setDeliveryRequestStatusAsPublished(this.draggedDelReqData.Data.value, destTripValue.DeliveryRequests);\r\n        }\r\n        else if (isDraggedDRsPublished && destTripValue.DeliveryGroupPrevStatus == 2) {\r\n            this.setDeliveryRequestStatusAsPublished(this.draggedDelReqData.Data.value, destTripValue.DeliveryRequests);\r\n        }\r\n        dsbModel.Trips.push(sourceTripValue);\r\n        dsbModel.Trips.push(destTripValue);\r\n        dsbModel.Status = 5;\r\n        var tripArray = [];\r\n        tripArray.push(tripFrom);\r\n        tripArray.push(tripTo);\r\n        if (isDraggedDRsPublished || isDestTripPublished) {\r\n            this.sbService.publishDriverView(dsbModel).subscribe(data => {\r\n                this._savingBuilder = false;\r\n                this.updateLoadForm(data, tripArray);\r\n            });\r\n        }\r\n        else {\r\n            this.sbService.saveDriverView(dsbModel).subscribe(data => {\r\n                this._savingBuilder = false;\r\n                this.updateLoadForm(data, tripArray);\r\n            });\r\n        }\r\n    }\r\n\r\n    setDeliveryRequestStatusAsDraft(deliveryRequests: DeliveryRequestViewModel[]) {\r\n        deliveryRequests.forEach(t => {\r\n            t.Status = 5;\r\n            t.ScheduleStatus = 14;\r\n            t.DeliveryGroupId = null;\r\n            t.DeliveryScheduleId = null;\r\n            t.TrackableScheduleId = null;\r\n            t.TrackScheduleStatus = 0;\r\n            t.TrackScheduleEnrouteStatus = 0;\r\n            t.TrackScheduleStatusName = '';\r\n            t.StatusClassId = 0;\r\n        });\r\n    }\r\n\r\n    setDeliveryRequestStatusAsPublished(draggedDeliveryRequests: DeliveryRequestViewModel[], destTripDeliveryRequests: DeliveryRequestViewModel[]) {\r\n        for (var i = 0; i < draggedDeliveryRequests.length; i++) {\r\n            var destLoadDR = destTripDeliveryRequests.filter(t => t.Id == draggedDeliveryRequests[i].Id);\r\n            destLoadDR.forEach(t => {\r\n                t.Status = 3;\r\n                t.ScheduleStatus = 14;\r\n            });\r\n        }\r\n    }\r\n\r\n    dragDelReqToAnotherLoadNo(): void {\r\n        this.droppedTrip = null;\r\n        this.draggedDelReqData = null;\r\n    }\r\n\r\n    resetLoad(trip: FormGroup) {\r\n        if (trip) {\r\n            if (this.routeInfo == null) {\r\n                let reserveValue = {\r\n                    TripId: trip.controls['TripId'].value,\r\n                    ShiftId: trip.controls['ShiftId'].value,\r\n                    ShiftStartTime: trip.controls['ShiftStartTime'].value,\r\n                    ShiftEndTime: trip.controls['ShiftEndTime'].value,\r\n                    SlotPeriod: trip.controls['SlotPeriod'].value,\r\n                    StartDate: trip.controls['StartDate'].value,\r\n                    StartTime: trip.controls['StartTime'].value,\r\n                    EndTime: trip.controls['EndTime'].value,\r\n                    Carrier: trip.controls['Carrier'].value,\r\n                    ShiftIndex: trip.controls['ShiftIndex'].value,\r\n                    DriverRowIndex: trip.controls['DriverRowIndex'].value,\r\n                    DriverColIndex: trip.controls['DriverColIndex'].value,\r\n                    TrailerRowIndex: trip.controls['TrailerRowIndex'].value,\r\n                    TrailerColIndex: trip.controls['TrailerColIndex'].value,\r\n                    IsEditable: true,\r\n                    IsPreloadDisable: false\r\n                }\r\n                trip.reset();\r\n                (trip.controls['DeliveryRequests'] as FormArray).clear();\r\n                trip.reset(reserveValue);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n            }\r\n            if (this.routeInfo != null) {\r\n                this._loadingRemoveRoute = false;\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    deleteGroup(data: any) {\r\n        this.routeInfo = null;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        if (data.get('GroupId').value != null && data.get('GroupId').value > 0) {\r\n            this._savingBuilder = true;\r\n            this.changeDetectorRef.detectChanges();\r\n            var delRequests = data.get('DeliveryRequests') as FormArray;\r\n            var scheduleIds = delRequests.value.filter(top => top.TrackScheduleStatus != 5).map(t => t.TrackableScheduleId);\r\n            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                this._savingBuilder = false;\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                        var scheduleStatuses = this.sbService.returnCommonElements(this.ScheduleStatuses, response, true);\r\n                        if (scheduleStatuses.length > 0) {\r\n                            this.deleteLoad(data);\r\n                        }\r\n                        else {\r\n                            Declarations.msgerror(\"Can't delete/reset group. For one or more schedule(s) drop has been made already\", 'Warning', 2500);\r\n                            return;\r\n                        }\r\n                    } else if (onTheWaySchedules.length > 0) {\r\n                        this.sbService.setConfirmationHeadingForDeleteGroup(onTheWaySchedules[0]);\r\n                        this.DeletedGroup = data;\r\n                        jQuery('#btnconfirm-delete-delgrp').click();\r\n                        return;\r\n                    } else {\r\n                        this.deleteLoad(data);\r\n                    }\r\n                } else {\r\n                    this.deleteLoad(data);\r\n                }\r\n                //this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n        else {\r\n            this.deleteLoad(data);\r\n        }\r\n    }\r\n\r\n    public deleteLoadYes() {\r\n        Declarations.hideModal('#confirm-delete-delgrp');\r\n        if (this.routeInfo == null) {\r\n            this.deleteLoad(this.DeletedGroup);\r\n        }\r\n        else {\r\n            this.deleteRouteLoad(this.DeletedGroup);\r\n        }\r\n        this.DeletedGroup = null;\r\n    }\r\n\r\n    public deleteLoadNo() {\r\n        Declarations.hideModal('#confirm-delete-delgrp');\r\n        this.DeletedGroup = null;\r\n        if (this.routeInfo != null) {\r\n            this._loadingRemoveRoute = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    deleteLoad(trip: FormGroup) {\r\n        var tripId = trip.controls['TripId'].value;\r\n        var delRequests = trip.controls['DeliveryRequests'] as FormArray;\r\n        delRequests.value.forEach(t => { t.WindowMode = 1; t.QueueMode = 1; t.Compartments = [] });\r\n        if (tripId != null && tripId != undefined && tripId != '') {\r\n            var completedDRs = [];\r\n            var removedDRs = [];\r\n            var deliveryRequestsValue = delRequests.value as DeliveryRequestViewModel[];\r\n            deliveryRequestsValue.forEach(x => {\r\n                if (this.CompletedScheduleStatuses.filter(x1 => x1 == x.TrackScheduleStatus).length > 0) {\r\n                    completedDRs.push(x);\r\n                }\r\n                else {\r\n                    removedDRs.push(x);\r\n                }\r\n            })\r\n            if (completedDRs.length > 0) {\r\n                deliveryRequestsValue = removedDRs;\r\n            }\r\n            else {\r\n                delRequests.clear();\r\n            }\r\n            var dsbModel = this.getDSBSaveModel();\r\n            dsbModel.DeletedGroupId = trip.controls['GroupId'].value;\r\n            dsbModel.DeletedTripId = tripId;\r\n            let preloadInfo = this.getPreloadedInfoFromLoad(trip);\r\n            let preloadedTrips = this.getPrePostLoadedTrips(preloadInfo);\r\n            let postloadInfo = this.getPostloadedInfoFromLoad(trip);\r\n            let postloadedTrips = this.getPrePostLoadedTrips(postloadInfo);\r\n            dsbModel.PreloadedDRs = this.getPreloadAcrossTheDateInfoFromLoad(trip);\r\n            dsbModel.PostloadedDRs = this.getPostloadAcrossTheDateInfoFromLoad(trip);\r\n            var schedule = this.SbForm.get('Shifts.' + trip.controls['ShiftIndex'].value + '.Schedules.' + trip.controls['DriverRowIndex'].value) as FormGroup;\r\n            trip.value.Drivers = schedule.controls['Drivers'].value;\r\n            trip.value.Trailers = schedule.controls['Trailers'].value;\r\n            dsbModel.Trips.push(trip.value);\r\n            dsbModel.Status = 4;\r\n\r\n            let tripArray = [];\r\n            tripArray.push(trip);\r\n            preloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n            postloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n            this._savingBuilder = true;\r\n            this.sbService.deleteGroup(dsbModel).subscribe(response => {\r\n                if (response != null) {\r\n                    if (response.StatusCode == 0 || response.StatusCode == 2) {\r\n                        let drsToRestore = deliveryRequestsValue.filter(t => !t.PostLoadedFor);\r\n                        this.dataService.setRestoreDeletedRequestSubject(drsToRestore);\r\n                        this.resetLoad(trip);\r\n                        if (completedDRs.length > 0) {\r\n                            let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                            let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n                            var _drFormArray = this.utilService.getDeliveryRequestFormArray(completedDRs, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n                            var drForm = trip.controls['DeliveryRequests'] as FormArray;\r\n                            _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                                drForm.push(_drForm);\r\n                            });\r\n                        }\r\n                    }\r\n                    this.updateLoadForm(response, tripArray);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                }\r\n                this._savingBuilder = false;\r\n            });\r\n        } else {\r\n            this.dataService.setRestoreDeletedRequestSubject(delRequests.value);\r\n            this.resetLoad(trip);\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        }\r\n    }\r\n\r\n    private getPreloadedInfoFromLoad(trip: FormGroup): LoadInfo[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let preloadInfo = _drs.filter(x => x.PreLoadInfo).map(m => m.PreLoadInfo);\r\n        return preloadInfo;\r\n    }\r\n\r\n    private getPostloadedInfoFromLoad(trip: FormGroup): LoadInfo[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let postloadInfo = _drs.filter(x => x.PostLoadInfo).map(m => m.PostLoadInfo);\r\n        return postloadInfo;\r\n    }\r\n\r\n    private getPreloadAcrossTheDateInfoFromLoad(trip: FormGroup): any[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let preloadInfo = _drs.filter(x => !x.PostLoadInfo && x.PostLoadedFor && !x.IsRetainFuelLoaded).map(m => m.PostLoadedFor);\r\n        preloadInfo = preloadInfo.filter((value, index, self) => self.indexOf(value) === index);\r\n        return preloadInfo;\r\n    }\r\n\r\n    private getPostloadAcrossTheDateInfoFromLoad(trip: FormGroup): any[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let preloadInfo = _drs.filter(x => !x.PreLoadInfo && x.PreLoadedFor).map(m => m.PreLoadedFor);\r\n        return preloadInfo;\r\n    }\r\n\r\n    private getPrePostLoadedTrips(loadInfo: LoadInfo[]): FormGroup[] {\r\n        let loadedTrips = [];\r\n        loadInfo.forEach(x => {\r\n            let thisShift = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == x.ShiftId) as FormGroup;\r\n            if (thisShift) {\r\n                let thisSchedule = thisShift.get('Schedules.' + x.ScheduleIndex) as FormGroup;\r\n                let thisTrip = thisSchedule.get(\"Trips.\" + x.TripIndex) as FormGroup;\r\n                if (thisTrip) {\r\n                    thisTrip.value.Drivers = thisSchedule.controls['Drivers'].value;\r\n                    thisTrip.value.Trailers = thisSchedule.controls['Trailers'].value;\r\n                    loadedTrips.push(thisTrip);\r\n                }\r\n            }\r\n        });\r\n        loadedTrips = loadedTrips.filter((value, index, self) => self.indexOf(value) === index);\r\n        return loadedTrips;\r\n    }\r\n\r\n    getAssignedDrivers(shiftIdx: number): DriverAdditionalDetailModel[] {\r\n        var _drivers = [];\r\n        var _shift = this.SbForm.controls['Shifts']['controls'][shiftIdx] as FormGroup;\r\n        if (_shift != null && _shift != undefined) {\r\n            var _schArray = _shift.controls['Schedules'] as FormArray;\r\n            _schArray.controls.forEach((sc: FormGroup) => {\r\n                var _dArray = sc.controls['Drivers'] as FormArray;\r\n                if (_dArray && _dArray.length > 0) {\r\n                    _drivers = _drivers.concat(_dArray.value);\r\n                }\r\n            });\r\n        }\r\n        return _drivers;\r\n    }\r\n\r\n    getAssignedTrailers(shiftIdx: number): TrailerViewModel[] {\r\n        var _trailers = [];\r\n        var _shift = this.SbForm.get('Shifts.' + shiftIdx) as FormGroup;\r\n        if (_shift != null && _shift != undefined) {\r\n            var _schArray = _shift.get('Schedules') as FormArray;\r\n            _schArray.controls.forEach(sc => {\r\n                var _tArray = sc.get('Trailers') as FormArray;\r\n                if (_tArray && _tArray.length > 0) {\r\n                    _trailers = _trailers.concat(_tArray.value);\r\n                }\r\n            });\r\n        }\r\n        return _trailers;\r\n    }\r\n\r\n    getUnassignedDrivers(isFilldToggle = false): DriverAdditionalDetailModel[] {\r\n        let currentDriverId = this.DriverTrailerForm.controls['Driver'].value;\r\n        let drivers = this.AllUnassignedDrivers;\r\n        if (drivers && drivers.length > 0) {\r\n            this._loadingDrivers = true;\r\n            let shiftIdx = this.DriverTrailerForm.controls['Index1'].value;\r\n            let assigned = this.getAssignedDrivers(shiftIdx);\r\n            if (!isFilldToggle) {\r\n                assigned = assigned.filter(x => x.Id != currentDriverId);\r\n                drivers = drivers.filter(this.IdNotInComparer(assigned));\r\n            }\r\n            let isFilldCompatible = this.DriverTrailerForm.get('IsFilldCompatible').value;\r\n            if (isFilldCompatible != undefined) {\r\n                assigned = assigned.filter(x => x.Id != currentDriverId && x.IsFilldCompatible == isFilldCompatible);\r\n                drivers = drivers.filter(t => t.IsFilldCompatible == isFilldCompatible);\r\n                drivers = drivers.filter(this.IdNotInComparer(assigned));\r\n            }\r\n            this._loadingDrivers = false;\r\n        }\r\n        return drivers;\r\n    }\r\n\r\n    getUnassignedTrailers(shiftIdx: number, currentTrailers: TrailerViewModel[], IsFilldToggle: boolean = false): TrailerViewModel[] {\r\n        let _trailers = this.RegionDetail.Trailers;\r\n        if (!IsFilldToggle) {\r\n            let assignedTrailers = this.getAssignedTrailers(shiftIdx);\r\n            assignedTrailers = assignedTrailers.filter(this.IdNotInComparer(currentTrailers));\r\n            _trailers = _trailers.filter(this.IdNotInComparer(assignedTrailers));\r\n        }\r\n        let isFilldCompatible = this.DriverTrailerForm.get('IsFilldCompatible').value;\r\n        if (isFilldCompatible != undefined) {\r\n            _trailers = _trailers.filter(t => t.IsFilldCompatible == isFilldCompatible);\r\n        }\r\n        return _trailers;\r\n    }\r\n\r\n    editDriverTrailers(data: any): void {\r\n        //this.changeDetectorRef.detach();\r\n        this.EditDriverData = data;\r\n        var driverId = data.Driver;\r\n        var trailers = data.Trailers;\r\n\r\n        this.DriverTrailerForm.patchValue({\r\n            Index1: data.Index1,\r\n            Index2: data.Index2,\r\n            Driver: driverId,\r\n            Trailers: trailers,\r\n            IsIncludeAllRegionDriver: data.IsIncludeAllRegionDriver\r\n        });\r\n        this.SelectedTrailers = trailers;\r\n        if (this.SelectedTrailers.length > 0) {\r\n            let trailer1 = trailers[0];\r\n            this.DriverTrailerForm.get('IsFilldCompatible').patchValue(trailer1.IsFilldCompatible);\r\n        }\r\n        this.selTrailerIndex = data.Index1;\r\n        this.selTrailerlist = trailers;\r\n        this.UnassignedTrailers = this.getUnassignedTrailers(data.Index1, trailers);\r\n        this._loadingDrivers = true;\r\n        this.getDriverdetails();\r\n        this.changeDetectorRef.detectChanges();\r\n        // this._otherRegionDriver = false;\r\n        this._otherRegionDriverSubject.next(false);\r\n        this._publishedRequestExists = false;\r\n        //this.subscribeFormChange();\r\n    }\r\n\r\n    checkOtherRegionDriver(): void {\r\n        if (this.DriverTrailerForm.get('Driver').value == \"null\") {\r\n            this.DriverTrailerForm.get('Driver').setErrors({ 'incorrect': true });\r\n        }\r\n        this.DriverTrailerForm.markAllAsTouched();\r\n\r\n        if (this.DriverTrailerForm.valid) {\r\n            var _form = this.DriverTrailerForm.value;\r\n            var status = this.validatePrePostLoadTrailer(_form);\r\n            if (status) {\r\n                var shiftId = this.SbForm.get('Shifts.' + _form.Index1 + '.Id').value;\r\n                //newly added\r\n                var driverObj = this.RegionDetail.Drivers.find(x => x.Id == _form.Driver);\r\n\r\n                if (this.DriverTrailerForm.get('IsIncludeAllRegionDriver').value) {\r\n                    var assignedDrivers = this.AllUnassignedDrivers.find(t => t.Id == _form.Driver);\r\n                    driverObj = assignedDrivers;\r\n                }\r\n\r\n                this.dataService.IsLoadingButtonSubject.next(true);\r\n                this.sbService.getSelectedDateDriverScheduleByDriverIdGridView(_form.Driver, new Date(this.SbForm.controls.Date.value).toUTCString(), shiftId).subscribe(data => {\r\n                    if (data && data.filter(f => f.ShiftId == shiftId).length > 0) {\r\n                        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n                        if (!this.EditDriverData.IsPublishedRequestsExists) {\r\n                            this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                        }\r\n                        else {\r\n                            var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n                            var trips = schedule.controls['Trips'] as FormArray;\r\n                            var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n                            var scheduleIds: number[] = this.getPublishedDRsTrackableScheduleIds(_deliveryRequests);\r\n                            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                                if (response != null && response != undefined && response.length > 0) {\r\n                                    let isDriverChange = false, isTrailerChange = false;\r\n                                    let _selectedTrailers = _form.Trailers.map(y => y.Id); var trips = schedule.controls['Trips'] as FormArray;\r\n                                    let currentTrailers = schedule.get('Trailers').value.map(y => y.Id);\r\n                                    let currentDriver = schedule.get('Drivers').value;\r\n                                    isTrailerChange = currentTrailers.filter(x => {\r\n                                        return _selectedTrailers.find(y => y == x) != undefined;\r\n                                    }).length != currentTrailers.length || (currentTrailers.length == 0 && _selectedTrailers.length > 0);\r\n                                    isDriverChange = (currentDriver.length == 0 && driverObj.Id > 0) || driverObj.Id != currentDriver[0].Id;\r\n                                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver/trailer for this column as drop has been made already\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    } else if (isDriverChange && onTheWaySchedules.length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver is on the way to job\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else if (isDriverChange && _deliveryRequests.filter(t => t.TrackScheduleStatus == 23).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver accepted the schedule.\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else {\r\n                                        this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n                        if (!this.EditDriverData.IsPublishedRequestsExists || this.DriverTrailerForm.get('IsIncludeAllRegionDriver').value) {\r\n                            this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                        }\r\n                        else if (this.EditDriverData.IsPublishedRequestsExists) {\r\n                            var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n\r\n                            let isDriverChange = false, isTrailerChange = false;\r\n                            let _selectedTrailers = _form.Trailers.map(y => y.Id); var trips = schedule.controls['Trips'] as FormArray;\r\n                            let currentTrailers = schedule.get('Trailers').value.map(y => y.Id);\r\n                            let currentDriver = schedule.get('Drivers').value;\r\n                            isTrailerChange = currentTrailers.filter(x => {\r\n                                return _selectedTrailers.find(y => y == x) != undefined;\r\n                            }).length != currentTrailers.length || (currentTrailers.length == 0 && _selectedTrailers.length > 0);\r\n                            isDriverChange = (currentDriver.length == 0 && driverObj.Id > 0) || driverObj.Id != currentDriver[0].Id;\r\n                            var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n                            var scheduleIds: number[] = this.getPublishedDRsTrackableScheduleIds(_deliveryRequests);\r\n                            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                                if (response != null && response != undefined && response.length > 0) {\r\n                                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver/trailer for this column as drop has been made already\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    } else if (onTheWaySchedules.length > 0 && isDriverChange) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver is on the way to job\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else if (isDriverChange && _deliveryRequests.filter(t => t.TrackScheduleStatus == 23).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver accepted the schedule.\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else {\r\n                                        this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        //this._otherRegionDriverSubject.next(true);//never come due to driver's load based on shift.\r\n\r\n                    }\r\n                    this.dataService.IsLoadingButtonSubject.next(false);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    checkForPublishedRequests(schedule: FormGroup): void {\r\n        //this._otherRegionDriver = false;\r\n        this._otherRegionDriverSubject.next(false);\r\n        if (this.checkAnyPublishedTrip(schedule)) {\r\n            this._publishedRequestExists = true;\r\n        } else {\r\n            this._publishedRequestExists = false;\r\n        }\r\n    }\r\n\r\n    editDriverCancel(): void {\r\n        if (this.driverSchedules) {\r\n            this.driverSchedules.forEach(t => t.unsubscribeUpdateDriverTrailerSubject());\r\n        }\r\n    }\r\n\r\n    onPublishChangesNo(): void {\r\n        this._publishedRequestExists = false;\r\n    }\r\n\r\n    onPublishChangesYes(): void {\r\n        var _form = this.DriverTrailerForm.value;\r\n        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n        if (schedule != null && schedule != undefined) {\r\n            this.EditDriverData.IsPublishedRequestsExists = false;\r\n            var driverObj = this.RegionDetail.Drivers.find(x => x.Id == _form.Driver);\r\n            this.assignDriverToSchedule(driverObj, schedule, _form);\r\n        }\r\n    }\r\n\r\n\r\n    onOtherRegionDriverNo(): void {\r\n        //this._otherRegionDriver = false;\r\n        this._otherRegionDriverSubject.next(false);\r\n    }\r\n\r\n    onOtherRegionDriverYes(): void {\r\n        if (this.DriverTrailerForm.valid) {\r\n            var _form = this.DriverTrailerForm.value;\r\n            var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n            if (schedule != null && schedule != undefined) {\r\n                var driverObj = this.RegionDetail.Drivers.find(x => x.Id == _form.Driver);\r\n                //this.checkForPublishedRequests(schedule);\r\n                this._otherRegionDriverSubject.next(false);\r\n                this._publishedRequestExists = this.EditDriverData.IsPublishedRequestsExists;\r\n                if (!this.EditDriverData.IsPublishedRequestsExists) {\r\n                    this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                    let driverInfo = {\r\n                        driverId: driverObj.Id,\r\n                        regionId: this.SelectedRegionId\r\n                    };\r\n                    this.chatService.intializeChatDefault(driverInfo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    GetAllLoadsDR(trips: FormArray) {\r\n        var _deliveryRequests = [];\r\n        if (trips) {\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var trip = trips.controls[i] as FormGroup;\r\n                var deliveryRequests = trip.controls[\"DeliveryRequests\"].value;\r\n                if (deliveryRequests) {\r\n                    for (var j = 0; j < deliveryRequests.length; j++) {\r\n                        var deliveryRequest = deliveryRequests[j];\r\n                        if (deliveryRequest) {\r\n                            _deliveryRequests.push(deliveryRequest);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _deliveryRequests;\r\n    }\r\n\r\n    allowDriverChange(data, driverObj: DriverAdditionalDetailModel) {\r\n        var isAllow = true;\r\n        if (data && data.deliverySchedules && data.deliverySchedules.length > 0) {\r\n            if (driverObj) {\r\n                if (data.deliverySchedules.find(driverId => driverObj.Id != driverId)) {\r\n                    isAllow = false;\r\n                }\r\n            }\r\n        }\r\n        return isAllow;\r\n    }\r\n\r\n    assignDriverToSchedule(driverObj: DriverAdditionalDetailModel, schedule: FormGroup, _form: any): void {\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        schedule.get('IsIncludeAllRegionDriver').patchValue(_form.IsIncludeAllRegionDriver);\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return _form.Trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n        var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n        // Validate Delivery Requests with trailer type\r\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n\r\n                    if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                        this.highLightDRDiv(trips, data);\r\n                        Declarations.hideModal('#driverTrailerModel');\r\n                        Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                        this.editDriverCancel();\r\n\r\n                    } else if (!this.allowDriverChange(data, driverObj)) {\r\n                        Declarations.msgerror(\"The user cannot change the driver once drop is done\", undefined, undefined);\r\n                        this.editDriverCancel();\r\n                    }\r\n                    else {\r\n                        this.assignDriverToScheduleSave(driverObj, schedule, _form);\r\n                        this.highLightDRDiv(trips, null);\r\n                    }\r\n                    if (_selectedTrailers.length > 0) {\r\n                        var trailerIds = [];\r\n                        _selectedTrailers.forEach(x => {\r\n                            trailerIds.push(x.Id);\r\n                        });\r\n                        this.GetfuelRetainDetails(trailerIds);\r\n                    }\r\n                });\r\n        } else {\r\n            this.assignDriverToScheduleSave(driverObj, schedule, _form);\r\n            this.highLightDRDiv(trips, null);\r\n            if (_selectedTrailers.length > 0) {\r\n                var trailerIds = [];\r\n                _selectedTrailers.forEach(x => {\r\n                    trailerIds.push(x.Id);\r\n                });\r\n                this.GetfuelRetainDetails(trailerIds);\r\n            }\r\n        }\r\n    }\r\n\r\n    assignDriverToScheduleSave(driverObj: DriverAdditionalDetailModel, schedule: FormGroup, _form: any): void {\r\n        Declarations.hideModal('#driverTrailerModel');\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return _form.Trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n        let data = {\r\n            Index1: _form.Index1,\r\n            Index2: _form.Index2,\r\n            Driver: driverObj,\r\n            Trailers: _selectedTrailers,\r\n            IsIncludeAllRegionDriver: _form.IsIncludeAllRegionDriver\r\n        };\r\n        this.dataService.setUpdateDriverTrailerSubject(data);\r\n    }\r\n\r\n    public saveDriverAssignment(shiftIndex: number, scheduleIndex: number): void {\r\n        var schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + scheduleIndex) as FormGroup;\r\n        var drivers = schedule.get('Drivers').value;\r\n        var trailers = schedule.get('Trailers').value;\r\n        var trips = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + scheduleIndex + '.Trips') as FormArray;\r\n\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dataToSave = this.getDSBSaveModel();\r\n        for (var i = 0; i < trips.length; i++) {\r\n            trips.value[i].Drivers = drivers;\r\n            trips.value[i].Trailers = trailers;\r\n            trips.value[i].IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value;\r\n            dataToSave.Trips.push(trips.value[i]);\r\n        }\r\n        dataToSave.Status = 2;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        this._savingBuilder = true;\r\n        this.sbService.assignDriverAndTrailer(dataToSave).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadsFromRow(data, trips);\r\n        });\r\n    }\r\n\r\n    getDSBSaveModel() {\r\n        var sbModel = this.SbForm.value;\r\n        var dataToSave = new DSBSaveModel();\r\n        dataToSave.Id = sbModel.Id;\r\n        dataToSave.Date = sbModel.Date;\r\n        dataToSave.RegionId = sbModel.RegionId;\r\n        dataToSave.ObjectFilter = sbModel.ObjectFilter;\r\n        dataToSave.RegionFilter = sbModel.RegionFilter;\r\n        dataToSave.DateFilter = sbModel.DateFilter;\r\n        dataToSave.DSBFilter = sbModel.DSBFilter;\r\n        dataToSave.TimeStamp = sbModel.TimeStamp;\r\n        dataToSave.Status = sbModel.Status;\r\n        dataToSave.WindowMode = sbModel.WindowMode;\r\n        dataToSave.ToggleRequestMode = sbModel.ToggleRequestMode;\r\n        if (sbModel.Id == null) {\r\n            for (var i = 0; i < sbModel.Shifts.length; i++) {\r\n                var shift = new ScheduleShiftModel();\r\n                shift.Id = sbModel.Shifts[i].Id;\r\n                shift.StartTime = sbModel.Shifts[i].StartTime;\r\n                shift.EndTime = sbModel.Shifts[i].EndTime;\r\n                shift.SlotPeriod = sbModel.Shifts[i].SlotPeriod;\r\n                dataToSave.Shifts.push(shift);\r\n            }\r\n        }\r\n        return dataToSave;\r\n    }\r\n\r\n    setTripStatus(trip: TripModel): void {\r\n        if (trip) {\r\n            var tripPrevStatusId = trip.TripPrevStatus;\r\n            var tripStatusId = TripStatus.Added;\r\n            if (tripPrevStatusId == TripStatus.None) {\r\n                tripStatusId = TripStatus.Added;\r\n            } else if (tripPrevStatusId == TripStatus.Added || tripPrevStatusId == TripStatus.Modified) {\r\n                tripStatusId = TripStatus.Modified;\r\n            }\r\n            trip.TripStatus = tripStatusId;\r\n        }\r\n    }\r\n\r\n    setDeliveryGroupStatus(trip: TripModel, statusId: DeliveryGroupStatus): void {\r\n        if (trip) {\r\n            trip.DeliveryGroupStatus = statusId;\r\n        }\r\n    }\r\n\r\n    setDeliveryRequestStatus(trip: TripModel, statusId: DeliveryReqStatus, updateScheduleStatus: boolean = false): void {\r\n        if (trip) {\r\n            var deliveryRequests = trip.DeliveryRequests;\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                deliveryRequests[i].Status = statusId;\r\n                //let isCompletedDrop = deliveryRequests.controls[i].get('StatusClassId').value == 4;\r\n                if (updateScheduleStatus) {\r\n                    var scheduleStatus = deliveryRequests[i].ScheduleStatus;\r\n                    if (scheduleStatus == 5) {\r\n                        continue;\r\n                    }\r\n                    else if (scheduleStatus == 14) {\r\n                        deliveryRequests[i].ScheduleStatus = 15;\r\n                    }\r\n                    else {\r\n                        deliveryRequests[i].ScheduleStatus = 14;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private processPostloadedDrToSaveEditedData(postloadInfo: LoadInfo[], modifiedTrips: ModifiedTripInfo[]): void {\r\n        let shifts = this.SbForm.controls['Shifts'].value;\r\n        let postloadInfoClone = JSON.parse(JSON.stringify(postloadInfo)) as LoadInfo[];\r\n        postloadInfoClone.forEach(f => { f.ShiftIndex = shifts.indexOf(shifts.find(t => t.Id == f.ShiftId)), f.DrId = ''; f.ShiftId = '' });\r\n        let postloadInfoArray: LoadInfo[] = [];\r\n        postloadInfoClone.forEach(t => {\r\n            if (!postloadInfoArray.find(x => x.ShiftIndex == t.ShiftIndex && x.ScheduleIndex == t.ScheduleIndex && x.TripIndex == t.TripIndex)) {\r\n                postloadInfoArray.push({ ShiftIndex: t.ShiftIndex, ScheduleIndex: t.ScheduleIndex, TripIndex: t.TripIndex, DrId: '', ShiftId: t.ShiftId });\r\n            }\r\n        });\r\n        for (var index = 0; index < postloadInfoArray.length; index++) {\r\n            let modifiedPreloadedTripInfo = {\r\n                ShiftIndex: postloadInfoArray[index].ShiftIndex,\r\n                DriverRowIndex: postloadInfoArray[index].ScheduleIndex,\r\n                DriverColIndex: postloadInfoArray[index].TripIndex,\r\n                ShiftId: postloadInfoArray[index].ShiftId,\r\n            };\r\n            modifiedTrips.push(modifiedPreloadedTripInfo);\r\n        }\r\n    }\r\n\r\n    draftScheduleBuilder(trip: FormGroup, filterChanged = false): void {\r\n        let shiftIndex = trip.controls['ShiftIndex'].value;\r\n        let shiftId = trip.controls['ShiftId'].value;\r\n        let rowIndex = trip.controls['DriverRowIndex'].value;\r\n        let loadIndex = trip.controls['DriverColIndex'].value;\r\n        let modifiedTrips = [{ ShiftIndex: shiftIndex, DriverRowIndex: rowIndex, DriverColIndex: loadIndex, ShiftId: shiftId }] as ModifiedTripInfo[];\r\n        let postloadInfo = this.getPostloadedInfoFromLoad(trip);\r\n        if (postloadInfo && postloadInfo.length > 0) {\r\n            this.processPostloadedDrToSaveEditedData(postloadInfo, modifiedTrips);\r\n        }\r\n        this.draftScheduleBuilderData(modifiedTrips, filterChanged)\r\n    }\r\n\r\n    public draftScheduleBuilderData(_unsavedChanges: ModifiedTripInfo[], isDateChange: boolean) {\r\n        if (_unsavedChanges.length > 0) {\r\n            var isValidTrips = this.validateTrips(_unsavedChanges);\r\n            if (!isValidTrips) {\r\n                return;\r\n            }\r\n            this._savingBuilder = true;\r\n            var trips = [];\r\n            var dataToSave = this.getDSBSaveModel();\r\n            _unsavedChanges.forEach(t => {\r\n                let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == t.ShiftId) as FormGroup;\r\n                if (shiftInfo != null) {\r\n                    let schedule = shiftInfo.controls['Schedules']['controls'][t.DriverRowIndex] as FormGroup;\r\n                    var trip = schedule.get('Trips.' + t.DriverColIndex) as FormGroup;\r\n                    trips.push(trip);\r\n                    var tripModel = trip.value;\r\n                    this.setTripStatus(tripModel);\r\n                    this.setDeliveryGroupStatus(tripModel, DeliveryGroupStatus.Draft);\r\n                    tripModel.Drivers = schedule.controls['Drivers'].value;\r\n                    tripModel.Trailers = schedule.controls['Trailers'].value;\r\n                    dataToSave.Trips.push(tripModel);\r\n                }\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n            this.dataService.setShowDeliveryGroupSubject(false);\r\n            if (dataToSave.Trips.length > 0) {\r\n                dataToSave.Status = 1;\r\n                this.sbService.saveDriverView(dataToSave).subscribe(data => {\r\n                    this._savingBuilder = false;\r\n                    this.updateLoadForm(data, trips, isDateChange);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setAllowDriverChange(i: number, j: number) {\r\n        let _thisRow = this.SbForm.get('Shifts.' + i + '.Schedules.' + j) as FormGroup;\r\n        var schedule = _thisRow.value as TrailerModel;\r\n        var allowDriverchange = true;\r\n        for (var k = 0; k < schedule.Trips.length; k++) {\r\n            let thisTrip = schedule.Trips[k] as TripModel;\r\n            if (thisTrip.DeliveryGroupStatus == DeliveryGroupStatus.Published || thisTrip.DeliveryGroupPrevStatus == DeliveryGroupStatus.Published) {\r\n                allowDriverchange = false;\r\n                this.SbForm.get('Shifts.' + i + '.Schedules.' + j).get('AllowDriverChange').setValue(allowDriverchange);\r\n                return;\r\n            }\r\n            var deliveryReqs = thisTrip.DeliveryRequests as DeliveryRequestViewModel[];\r\n            if (deliveryReqs.findIndex(t => (t.PreLoadedFor != null && t.PreLoadedFor.trim() != '') || (t.PostLoadedFor != null && t.PostLoadedFor.trim() != '')) != -1) {\r\n                allowDriverchange = false;\r\n                this.SbForm.get('Shifts.' + i + '.Schedules.' + j).get('AllowDriverChange').setValue(allowDriverchange);\r\n                return;\r\n            }\r\n        }\r\n        this.SbForm.get('Shifts.' + i + '.Schedules.' + j).get('AllowDriverChange').setValue(allowDriverchange);\r\n    }\r\n\r\n    cancelScheduleBuilder(i: number, j: number, k: number, trip: FormGroup): void {\r\n        let _thisTrip = this.SbForm.get('Shifts.' + i + '.Schedules.' + j + '.Trips.' + k) as FormGroup;\r\n        let _thisDrArray = _thisTrip.get('DeliveryRequests') as FormArray;\r\n        _thisDrArray.clear();\r\n        let oldTripValue = trip.value;\r\n        trip.value.DeliveryRequests.forEach(x => {\r\n            _thisDrArray.push(this.utilService.getDeliveryRequestForm(x, oldTripValue.IsCommonPickup));\r\n        });\r\n        _thisTrip.patchValue(trip.value);\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    publishScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup, isOptionalPickup: boolean = false): void {\r\n        this._savingBuilder = true;\r\n        var drivers = schedule.get('Drivers').value;\r\n        var trailers: TrailerViewModel[] = schedule.get('Trailers').value;\r\n        if (drivers == null || drivers == undefined || drivers.length == 0 || ((this.IsTrailerExists) && (trailers == null || trailers == undefined || trailers.length == 0))) {\r\n            if (this.IsTrailerExists) {\r\n                Declarations.msgwarning('Please assign a driver / trailer to publish Load ' + (k + 1), 'Driver/Trailer Required', 2500);\r\n            }\r\n            else {\r\n                Declarations.msgwarning('Please assign a driver to publish Load ' + (k + 1), 'Driver Required', 2500);\r\n            }\r\n            this._savingBuilder = false;\r\n            return;\r\n        }\r\n        if (drivers != null && drivers.length > 0) {\r\n            var delReqs = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n            if (delReqs.length > 0 && delReqs.some(t => t.IsFilldInvoke == true)) {\r\n                if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver / trailer to publish Load ' + (k + 1), 'Driver/Trailer Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n                else if (drivers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver to publish Load ' + (k + 1), 'Driver Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (isOptionalPickup) {\r\n            let isValid = true;\r\n            var delControlReqs = trip.controls['DeliveryRequests'] as FormArray;\r\n            delControlReqs.controls.forEach((x: FormGroup) => {\r\n                let OrderId = x.get('OrderId').value;\r\n                let ProductType = x.get('ProductType').value;\r\n                let terminalInfo = x.get('Terminal').value;\r\n                let bulkplantInfo = x.get('BulkPlant').value;\r\n                let fuelTypeInfo = this.ScheduleOrderFuelInfo.find(x => x.OrderId == OrderId);\r\n                if (terminalInfo.Id == 0 && (bulkplantInfo.Address == null || bulkplantInfo.Address == '')) {\r\n                    if (fuelTypeInfo != null) {\r\n                        var fuelTypeDetails = fuelTypeInfo.FuelTypeDetails;\r\n                        let result = this.ScheduleOptionalPickupDetailModel.filter(o1 => fuelTypeDetails.some(o2 => o1.TfxFuelTypeId === o2.Id));\r\n                        if (result.length == 0) {\r\n                            Declarations.msgerror('Please assign optional pickup/pickup location for product type : ' + ProductType, 'Pickup Location Required', 2500);\r\n                            isValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (isValid) {\r\n                delControlReqs.controls.forEach((x: FormGroup) => {\r\n                    this.setDRPickupValidators(x);\r\n                });\r\n            }\r\n        }\r\n        if (trip != null && trip != undefined) {\r\n            if (trip.invalid || !this.validatePublishLoad(trip)) {\r\n                let invalidctrls = CustomAbstractControls.findRecursiveErrors(trip);\r\n                this.editExisingGroup(trip, i, j, k, schedule, true);\r\n                this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                this._savingBuilder = false;\r\n                return;\r\n            } else {\r\n                this.dataService.setShowDeliveryGroupSubject(false);\r\n            }\r\n        }\r\n        //Check Job and Trailer Compatibility\r\n        var _deliveryRequests = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n\r\n        if (!this.validateLoadWithTrailerCapacity(_deliveryRequests, _selectedTrailers)) {\r\n            this._savingBuilder = false;\r\n            return;\r\n        }\r\n\r\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n                    if (data) {\r\n                        if (data.trackableScheduleStatuses && data.trackableScheduleStatuses.length > 0) {\r\n                            var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, data.trackableScheduleStatuses, true);\r\n                            var isCompletedSchedule = completedSchedules.length > 0;\r\n                            if (isCompletedSchedule || data.trackableScheduleStatuses.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                                var scheduleStatuses = this.sbService.returnCommonElements(this.ScheduleStatuses, data.trackableScheduleStatuses, true);\r\n                                if (scheduleStatuses.length == 0) {\r\n                                    this._savingBuilder = false;\r\n                                    Declarations.msgerror(\"Can't edit group. For one or more schedule(s) drop has been made already\", 'Warning', 2500);\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                            this.highLightDRDivOneLoad(trip, data);\r\n                            this._savingBuilder = false;\r\n                            Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                            return;\r\n                        }\r\n                        if (data.trackableScheduleStatuses && data.trackableScheduleStatuses.length > 0) {\r\n                            var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, data.trackableScheduleStatuses, false);\r\n                            if (onTheWaySchedules.length > 0) {\r\n                                this.sbService.setConfirmationHeadingForDeleteGroup(onTheWaySchedules[0]);\r\n                                this.PublishedGroup = { shiftIndex: i, rowIndex: j, colIndex: k, schedule: schedule, trip: trip };\r\n                                this._savingBuilder = false;\r\n                                jQuery('#btnconfirm-publish-delgrp').click();\r\n                                return;\r\n                            }\r\n                        }\r\n                        this.highLightDRDivOneLoad(trip, data);\r\n                        this.publishLoadSave(i, j, k, schedule, trip, isOptionalPickup);\r\n                        //if (delReqs.some(t => t.IsFilldInvoke == true)) {\r\n                        //    var delReqOrderIds = delReqs.map(t => { if (t.IsFilldInvoke == true) return t.OrderId; });\r\n                        //    this.sbService.validateFilldOrderCompatibility(delReqOrderIds)\r\n                        //        .subscribe(data => {\r\n                        //            if (data && data.Result == false) {\r\n                        //                this._savingBuilder = false;\r\n                        //                Declarations.msgerror(data.Message, undefined, undefined);\r\n                        //                this.changeDetectorRef.detectChanges();\r\n                        //                return;\r\n                        //            }\r\n                        //            this.highLightDRDivOneLoad(trip, data);\r\n                        //            this.publishLoadSave(i, j, k, schedule, trip, isOptionalPickup);\r\n                        //        });\r\n                        //} else {\r\n                        //    this.highLightDRDivOneLoad(trip, data);\r\n                        //    this.publishLoadSave(i, j, k, schedule, trip, isOptionalPickup);\r\n                        //}\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    validateDraftLoad(trip: FormGroup) {\r\n        var isValid = true;\r\n        if (trip.controls['StartTime'].invalid || trip.controls['EndTime'].invalid || trip.controls['StartDate'].invalid) {\r\n            isValid = false;\r\n            trip.controls['StartDate'].touched;\r\n            !trip.controls['StartDate'].value ? Declarations.msgerror('', 'Invalid Date', 5000) : Declarations.msgerror('', 'Please fill required field', 5000);\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validatePublishLoad(trip: FormGroup) {\r\n        var isValid = true;\r\n        if (trip.controls.IsCommonPickup.value && !(trip.controls.Terminal.valid || trip.controls.BulkPlant.valid)) {\r\n            isValid = false;\r\n            Declarations.msgerror('', 'Please select common pickup location', 5000);\r\n        }\r\n        var _deliveryRequests = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n        if (_deliveryRequests.length > 0) {\r\n            _deliveryRequests.forEach(x => {\r\n                if (x.OrderId == 0 || x.OrderId == null) {\r\n                    isValid = false;\r\n                    Declarations.msgerror('', 'Please select an order to publish the load', 5000);\r\n                }\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    public publishLoadYes() {\r\n        Declarations.hideModal('#confirm-publish-delgrp');\r\n        this.publishLoadSave(this.PublishedGroup.shiftIndex, this.PublishedGroup.rowIndex, this.PublishedGroup.colIndex, this.PublishedGroup.schedule, this.PublishedGroup.trip);\r\n        this.PublishedGroup = null;\r\n    }\r\n\r\n    public publishLoadNo() {\r\n        Declarations.hideModal('#confirm-publish-delgrp');\r\n        this.PublishedGroup = null;\r\n    }\r\n\r\n    publishLoadSave(i: number, j: number, k: number, schedule: any, trip: FormGroup, isOptionalPickup: boolean = false) {\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var tripValue = trip.value;\r\n        this.setTripStatus(tripValue);\r\n        this.setDeliveryGroupStatus(tripValue, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(tripValue, DeliveryReqStatus.ScheduleCreated);\r\n        tripValue.Drivers = schedule.get('Drivers').value;\r\n        tripValue.Trailers = schedule.get('Trailers').value;\r\n        tripValue.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value;\r\n        dsbModel.Trips.push(tripValue);\r\n        dsbModel.Status = 3;\r\n        this.sbService.publishDriverView(dsbModel).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadForm(data, trip);\r\n        });\r\n    }\r\n\r\n    validateLoadWithTrailerCapacity(delReqs: any[], _selectedTrailers: any[]) {\r\n        if (delReqs.length > 0 && _selectedTrailers.length > 0) {\r\n            let terminal = [];\r\n            let bulkPlant = [];\r\n            let FuelRequestQty = 0;\r\n            delReqs.forEach(t => {\r\n                if (t.Terminal && t.Terminal.Id > 0) {\r\n                    terminal.push(t.Terminal);\r\n                }\r\n                if (t.bulkPlant && t.bulkPlant.SiteId > 0 && t.bulkPlant.SiteName != null) {\r\n                    bulkPlant.push(t.bulkPlant);\r\n                }\r\n                if (t.ScheduleQuantityType == 1) {\r\n                    FuelRequestQty += t.RequiredQuantity;\r\n                }\r\n            });\r\n            let trailerCapacity = 0;\r\n            if (_selectedTrailers.length > 0) {\r\n                for (let Capacity of _selectedTrailers) {\r\n                    trailerCapacity += Capacity.FuelCapacity;\r\n                }\r\n            }\r\n            if (trailerCapacity > 0) {\r\n                if (terminal.length > 0 && bulkPlant.length == 0) {\r\n                    let Uniqueterminals = terminal.map(item => item.Id).filter((value, index, self) => self.indexOf(value) === index);\r\n                    if (Uniqueterminals.length == 1) {\r\n                        if (_selectedTrailers.length > 0) {\r\n                            if (FuelRequestQty > trailerCapacity) {\r\n                                Declarations.msgerror(\"Fuel request quantity is greater than trailer capacity\", undefined, undefined);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (bulkPlant.length > 0 && terminal.length == 0) {\r\n\r\n                        let UniquebulkPlants = bulkPlant.map(item => item.SiteId).filter((value, index, self) => self.indexOf(value) === index);\r\n                        if (UniquebulkPlants.length == 1) {\r\n                            if (FuelRequestQty > trailerCapacity) {\r\n                                Declarations.msgerror(\"Fuel request quantity is greater than trailer capacity\", undefined, undefined);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validateRowPublish(shiftIndex: number, rowIndex: number, isOptionalPickup: boolean): void {\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        let schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        var drivers = schedule.controls['Drivers'].value;\r\n        var trailers = schedule.controls['Trailers'].value;\r\n        if (drivers == null || drivers == undefined || drivers.length == 0 || (this.IsTrailerExists && (trailers == null || trailers == undefined || trailers.length == 0))) {\r\n            if (this.IsTrailerExists)\r\n                Declarations.msgwarning('Please assign a driver / trailer to publish', 'Driver/Trailer Required', 2500);\r\n            else\r\n                Declarations.msgwarning('Please assign a driver to publish', 'Driver Required', 2500);\r\n            return;\r\n        }\r\n\r\n        //Check Job and Trailer Compatibility\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n\r\n        if (drivers != null && drivers.length > 0) {\r\n            var delReqs = _deliveryRequests;\r\n            if (delReqs.length > 0 && delReqs.some(t => t.IsFilldInvoke == true)) {\r\n                if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver / trailer to publish', 'Driver/Trailer Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n                else if (drivers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver to publish', 'Driver Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n            }\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var load = trips.controls[i] as FormGroup;\r\n                var drs = load.controls[\"DeliveryRequests\"].value\r\n                if (!this.validateLoadWithTrailerCapacity(drs, _selectedTrailers)) {\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n                    if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                        this.highLightDRDiv(trips, data);\r\n                        Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                        //} else if (_deliveryRequests.some(t => t.IsFilldInvoke == true)) {\r\n                        //    var delReqOrderIds = _deliveryRequests.map(t => { if (t.IsFilldInvoke == true) return t.OrderId; });\r\n\r\n                        //    this.sbService.validateFilldOrderCompatibility(delReqOrderIds)\r\n                        //        .subscribe(data => {\r\n                        //            if (data && data.Result == false) {\r\n                        //                Declarations.msgerror(data.Message, undefined, undefined);\r\n\r\n                        //            } else {\r\n                        //                this.publishEntireRow(schedule, shiftIndex, rowIndex, trips, isOptionalPickup);\r\n                        //                this.highLightDRDiv(trips, null);\r\n                        //            }\r\n                        //        });\r\n                    } else {\r\n                        this.publishEntireRow(schedule, shiftIndex, rowIndex, trips, isOptionalPickup);\r\n                        this.highLightDRDiv(trips, null);\r\n                    }\r\n                });\r\n        } else {\r\n            this.publishEntireRow(schedule, shiftIndex, rowIndex, trips, isOptionalPickup);\r\n            this.highLightDRDiv(trips, null);\r\n        }\r\n        //End Check Job and Trailer Compatibility\r\n    }\r\n    publishEntireRow(schedule: FormGroup, shiftIndex: number, rowIndex: number, trips: FormArray, isOptionalPickup: boolean = false): void {\r\n        var validTrips = [];\r\n        for (var i = 0, j = 1; i < trips.length; i++, j++) {\r\n            let thisTrip = trips.controls[i] as FormGroup;\r\n            if (isOptionalPickup) {\r\n                let isValid = true;\r\n                var delReqs = thisTrip.controls['DeliveryRequests'] as FormArray;\r\n                delReqs.controls.forEach((x: FormGroup) => {\r\n                    let OrderId = x.get('OrderId').value;\r\n                    let ProductType = x.get('ProductType').value;\r\n                    let terminalInfo = x.get('Terminal').value;\r\n                    let bulkplantInfo = x.get('BulkPlant').value;\r\n                    if (terminalInfo.Id == 0 && (bulkplantInfo.Address == null || bulkplantInfo.Address == '')) {\r\n                        let fuelTypeInfo = this.ScheduleOrderFuelInfo.find(x => x.OrderId == OrderId);\r\n                        if (fuelTypeInfo != null) {\r\n                            var fuelTypeDetails = fuelTypeInfo.FuelTypeDetails;\r\n                            let result = this.ScheduleOptionalPickupDetailModel.filter(o1 => fuelTypeDetails.some(o2 => o1.TfxFuelTypeId === o2.Id));\r\n                            if (result.length == 0) {\r\n                                Declarations.msgerror('Please assign optional pickup/pickup location for product type : ' + ProductType, 'Pickup Location Required', 2500);\r\n                                isValid = false;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                if (isValid) {\r\n                    var delReqs = thisTrip.controls['DeliveryRequests'] as FormArray;\r\n                    delReqs.controls.forEach((x: FormGroup) => {\r\n                        this.setDRPickupValidators(x);\r\n                    });\r\n                }\r\n            }\r\n            if (thisTrip && (thisTrip.invalid || !this.validatePublishLoad(thisTrip))) {\r\n                let invalidctrls = CustomAbstractControls.findRecursiveErrors(thisTrip);\r\n                if (thisTrip.get('DeliveryRequests').value.length > 0) {\r\n                    this.editExisingGroup(thisTrip, shiftIndex, rowIndex, i, schedule, true);\r\n                    this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                    return;\r\n                }\r\n            } else {\r\n                validTrips.push(i);\r\n            }\r\n        }\r\n\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var drivers = schedule.controls['Drivers'].value;\r\n        var trailers = schedule.controls['Trailers'].value;\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var tripValue = trips.value[i];\r\n            if (validTrips.includes(tripValue.DriverColIndex)) {\r\n                this.setTripStatusToPublish(tripValue);\r\n            }\r\n            dsbModel.Trips.push(tripValue);\r\n        }\r\n        dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers, t.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value });\r\n        dsbModel.Status = 3;\r\n        this.sbService.publishDriverView(dsbModel).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadForm(data, trips);\r\n        });\r\n    }\r\n\r\n    setTripStatusToPublish(trip: any) {\r\n        this.setTripStatus(trip);\r\n        this.setDeliveryGroupStatus(trip, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(trip, DeliveryReqStatus.ScheduleCreated);\r\n    }\r\n\r\n    updateLoadForm(data: DSBSaveModel, trip: any, isDateChange: boolean = false): void {\r\n        if (data == null) {\r\n            Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            return;\r\n        }\r\n        if (data.StatusCode == 0 || data.StatusCode == 2) {\r\n            this.droppedTrip = null;\r\n            this.draggedDelReqData = null;\r\n            this.setUnsavedChanges();\r\n            if (!isDateChange) {\r\n                this.SbForm.patchValue({\r\n                    Id: data.Id,\r\n                    TimeStamp: data.TimeStamp,\r\n                    Status: 0\r\n                });\r\n                if (data && data.Trips && data.Trips.length > 0) {\r\n                    if (trip instanceof FormGroup) {\r\n                        data.Trips[0].DeliveryRequests = this.sorDrByProductSequence(data.Trips[0].IsDispatcherDragDropSequence, data.Trips[0].DeliveryRequests);\r\n                        trip.patchValue(data.Trips[0]);\r\n\r\n                        //remove existing drs from the trip\r\n                        let tripDrArray = trip.get('DeliveryRequests') as FormArray;\r\n                        tripDrArray.clear();\r\n                        //insert newly sorted drs in trip\r\n                        let newDrArray = this.utilService.getDeliveryRequestFormArray(data.Trips[0].DeliveryRequests, data.Trips[0].IsCommonPickup, data.Trips[0].IsDispatcherDragDropSequence, 0);\r\n                        newDrArray.controls.forEach(drForm => {\r\n                            tripDrArray.push(drForm);\r\n                        });\r\n                        \r\n                        let sIndex = trip.controls['ShiftIndex'].value;\r\n                        let rIndex = trip.controls['DriverRowIndex'].value;\r\n                        this.setAllowDriverChange(sIndex, rIndex);\r\n                        this.dataService.setSavedChangesSubject(trip.value);\r\n                    }\r\n                    else if (trip instanceof FormArray) {\r\n                        for (let i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip.controls[i] as FormGroup;\r\n                            let shiftId = thisTrip.controls['ShiftId'].value;\r\n                            let shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            let rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            let colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            let savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            savedTrip.DeliveryRequests = this.sorDrByProductSequence(savedTrip.IsDispatcherDragDropSequence, savedTrip.DeliveryRequests);\r\n                            if (savedTrip) {\r\n                                thisTrip.patchValue(savedTrip);\r\n\r\n                                //remove existing drs from the trip\r\n                                let tripDrArray = thisTrip.get('DeliveryRequests') as FormArray;\r\n                                tripDrArray.clear();\r\n                                //insert newly sorted drs in trip\r\n                                let newDrArray = this.utilService.getDeliveryRequestFormArray(savedTrip.DeliveryRequests, savedTrip.IsCommonPickup, savedTrip.IsDispatcherDragDropSequence, 0);\r\n                                newDrArray.controls.forEach(drForm => {\r\n                                    tripDrArray.push(drForm);\r\n                                });\r\n                                \r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(thisTrip.value);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip[i] as FormGroup;\r\n                            let shiftId = thisTrip.controls['ShiftId'].value;\r\n                            let shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            let rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            let colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            let savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            savedTrip.DeliveryRequests = this.sorDrByProductSequence(savedTrip.IsDispatcherDragDropSequence, savedTrip.DeliveryRequests);\r\n                            if (savedTrip) {\r\n                                thisTrip.patchValue(savedTrip);\r\n                                //remove existing drs from the trip\r\n                                let tripDrArray = thisTrip.get('DeliveryRequests') as FormArray;\r\n                                tripDrArray.clear();\r\n                                //insert newly sorted drs in trip\r\n                                let newDrArray = this.utilService.getDeliveryRequestFormArray(savedTrip.DeliveryRequests, savedTrip.IsCommonPickup, savedTrip.IsDispatcherDragDropSequence, 0);\r\n                                newDrArray.controls.forEach(drForm => {\r\n                                    tripDrArray.push(drForm);\r\n                                });\r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(thisTrip.value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (data.StatusCode == 0)\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            else\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            if (isDateChange) {\r\n                this.dataService.setUnsavedChangesAsEmptySubject();\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n        }\r\n\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n        //this.dataService.FormUnsavedChangesSubject.unsubscribe();\r\n    }\r\n\r\n    updateLoadsFromRow(data: DSBSaveModel, trips: FormArray): void {\r\n        if (data == null) {\r\n            Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            this.editDriverCancel();\r\n            return;\r\n        }\r\n        if (data.StatusCode == 0 || data.StatusCode == 2) {\r\n            this.setUnsavedChanges();\r\n            this.SbForm.patchValue({\r\n                Id: data.Id,\r\n                TimeStamp: data.TimeStamp,\r\n                Status: 0\r\n            });\r\n            for (var i = 0, j = 1; i < trips.length; i++, j++) {\r\n                let thisTrip = trips.controls[i] as FormGroup;\r\n                var shiftId = thisTrip.get('ShiftId').value;\r\n                var rowIndex = thisTrip.get('DriverRowIndex').value;\r\n                var colIndex = thisTrip.get('DriverColIndex').value;\r\n                var savedTrip = data.Trips.filter(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                if (savedTrip && savedTrip != null && savedTrip.length > 0) {\r\n                    thisTrip.patchValue({\r\n                        TripId: savedTrip[0].TripId,\r\n                        TimeStamp: savedTrip[0].TimeStamp\r\n                    });\r\n                }\r\n            }\r\n            if (data.StatusCode == 0)\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            else\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n        }\r\n        else {\r\n            Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            this.editDriverCancel();\r\n        }\r\n\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n        //this.dataService.FormUnsavedChangesSubject.unsubscribe();\r\n    }\r\n\r\n    isTrailersSelected(): boolean {\r\n        let _trailers = this.DriverTrailerForm.get('Trailers').value\r\n        return _trailers && _trailers.length > 0;\r\n    }\r\n\r\n    addShift(shiftIdx: number, scheduleIdx: number): void {\r\n        var _tArray = this.SbForm.get('Shifts.' + shiftIdx + '.Schedules.' + scheduleIdx + '.Trips') as FormArray;\r\n        let _startDate = this.SbForm.get('Date').value;\r\n        var shift = this.SbForm.get('Shifts.' + shiftIdx) as FormGroup;\r\n        let shiftId = shift.get('Id').value;\r\n        let selectedShift = this.Shifts.find(x => x.Id == shiftId);\r\n        let _startTime = selectedShift.StartTime;\r\n        if (_tArray.controls.length > 0) {\r\n            let lastTripStartTime = _tArray.controls[_tArray.controls.length - 1].get('StartTime').value;\r\n            let lastTripStartDate = _tArray.controls[_tArray.controls.length - 1].get('StartDate').value;\r\n            _startTime = _tArray.controls[_tArray.controls.length - 1].get('EndTime').value;\r\n            _startDate = this.getNewLoadStartDate(moment(lastTripStartDate + ' ' + lastTripStartTime).toDate(), moment(lastTripStartDate + ' ' + _startTime).toDate());\r\n        }\r\n        let startTime = moment(_startDate + ' ' + _startTime).toDate();\r\n        let trip = this.getTrailerTrip(startTime, selectedShift.SlotPeriod, scheduleIdx, _tArray.controls.length);\r\n        trip.ShiftStartTime = shift.get('StartTime').value;\r\n        trip.ShiftEndTime = shift.get('EndTime').value;\r\n        trip.SlotPeriod = shift.get('SlotPeriod').value;\r\n        trip.ShiftId = shiftId;\r\n        trip.ShiftIndex = shiftIdx;\r\n        _tArray.push(this.utilService.getTripFormGroup(trip));\r\n    }\r\n\r\n    getNewLoadStartDate(startDateTime: Date, endDateTime: Date) {\r\n        if (startDateTime > endDateTime) {\r\n            endDateTime.setDate(endDateTime.getDate() + 1);\r\n        }\r\n        return moment(endDateTime).format('MM/DD/YYYY');\r\n    }\r\n\r\n    getTrailerTrip(startTime: Date, slotPeriod: number, rowIndex: number, colIndex: number): TripModel {\r\n        if (slotPeriod <= 0) { slotPeriod = 3; }\r\n        let trip = new TripModel();\r\n        trip.StartDate = moment(startTime).format('MM/DD/YYYY');\r\n        trip.StartTime = moment(startTime).format('hh:mm A');\r\n        let endTime = moment(startTime).add(slotPeriod, 'hours').toDate();\r\n        trip.EndTime = moment(endTime).format('hh:mm A');\r\n        trip.IsEditable = true;\r\n        trip.IsPreloadDisable = false;\r\n        trip.DriverRowIndex = rowIndex;\r\n        trip.DriverColIndex = colIndex;\r\n        return trip;\r\n    }\r\n\r\n\r\n    onTrailerSelectAll(items: any): void {\r\n        this.DriverTrailerForm.get('Trailers').setValue(items);\r\n    }\r\n    onTrailerDeSelectAll(): void {\r\n        this.DriverTrailerForm.get('Trailers').setValue([]);\r\n    }\r\n\r\n    getDriverdetails() {\r\n        let shift = this.SbForm.controls['Shifts']['controls'][this.EditDriverData.Index1] as FormGroup;\r\n        if (shift != null) {\r\n            let ShiftId = shift.get('Id').value;\r\n            this.sbService.getShiftCompanyDrivers(this.SelectedRegionId, this.DriverTrailerForm.get('IsIncludeAllRegionDriver').value ? \"AllowOtherRegion\" : \"\", this.SbForm.controls.Date.value, ShiftId).subscribe((drivers: DriverAdditionalDetailModel[]) => {\r\n                this.AllUnassignedDrivers = drivers;\r\n                this.UnassignedDrivers = this.getUnassignedDrivers();\r\n                if (this.UnassignedDrivers.length == 0) {\r\n                    this.UnassignedDrivers = [];\r\n                }\r\n                this._loadingDrivers = false;\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n\r\n    IdNotInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length == 0;\r\n        }\r\n    }\r\n\r\n    CodeComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Code == current.Code\r\n            }).length == 0;\r\n        }\r\n    }\r\n\r\n    public checkAnyPublishedTrip(schedule: FormGroup): Boolean {\r\n        let isPublished = false;\r\n        var trips = schedule.get('Trips') as FormArray;\r\n        for (var i = 0; i < trips.length; i++) {\r\n            if (trips[i] != null && trips[i] != undefined && !isPublished) {\r\n                var drs = trips[i].get('DeliveryRequests') as FormArray;\r\n                for (let k = 0; k < drs.length; k++) {\r\n                    if (drs.controls[k].get('PreviousStatus').value === 3) {\r\n                        isPublished = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (isPublished)\r\n                    break;\r\n            }\r\n        }\r\n        return isPublished;\r\n    }\r\n\r\n    editExisingGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false) {\r\n        this.editGroup(_trip, _shiftIndex, _rowIndex, _tripIndex, _schedule, _isPublishLoadInvalid);\r\n        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n    }\r\n\r\n    editDroppedGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false) {\r\n        this.editGroup(_trip, _shiftIndex, _rowIndex, _tripIndex, _schedule, _isPublishLoadInvalid);\r\n        this.dataService.setShowDeliveryGroupSubject(true);\r\n    }\r\n\r\n    editGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false) {\r\n\r\n        const drsFormArray = _trip.controls['DeliveryRequests'] as FormArray;\r\n        let drs = drsFormArray.value || [];\r\n        drs = sortArrayTwice(drs, 'JobId', 'ProductSequence');\r\n        drsFormArray.patchValue(drs);\r\n\r\n        this.dataService.setEditDeliveryGroupSubject({\r\n            trip: _trip,\r\n            shiftIndex: _shiftIndex,\r\n            rowIndex: _rowIndex,\r\n            tripIndex: _tripIndex,\r\n            schedule: _schedule,\r\n            isPublishLoadInvalid: _isPublishLoadInvalid\r\n        });\r\n    }\r\n\r\n    private cancelCreateLoad(data: any): void {\r\n        let trip = this.SbForm.get('Shifts.' + data.ShiftIndex + '.Schedules.' + data.RowIndex + '.Trips.' + data.ColIndex) as FormGroup;\r\n        if (trip) {\r\n            let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n            if (_drArray) {\r\n                data.Drs.forEach(x => {\r\n                    let drIndex = _drArray.controls.findIndex((y: FormGroup) => y.controls['Id'].value == x.Id);\r\n                    if (drIndex >= 0) {\r\n                        _drArray.removeAt(drIndex);\r\n                    }\r\n                });\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setRestoreDeletedRequestSubject(data.Drs);\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        }\r\n    }\r\n\r\n    private updateTripOnCreateLoadSucess(data: any): void {\r\n        let schedule = this.SbForm.get('Shifts.' + data.ShiftIndex + '.Schedules.' + data.RowIndex) as FormGroup;\r\n        let trip = schedule.get('Trips.' + data.ColIndex) as FormGroup;\r\n        if (trip && data.Drs.length > 0) {\r\n            data.Drs.forEach(t => t.Status = 5);\r\n            let groupParentDrs = data.Drs.filter(x => x.GroupParentDRId != '').length;\r\n            let jobId = data.Drs[0].JobId;\r\n            let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n            if (_drArray) {\r\n                let existingDrsIndexes = [];\r\n                let existingDrs = _drArray.controls.filter((x: FormGroup, index: number) => {\r\n                    let groupParentDRId = x.controls['GroupParentDRId'].value;\r\n                    let drId = x.controls['Id'].value;\r\n                    if (groupParentDrs > 0) {\r\n                        if (data.Drs.find(x => x.GroupParentDRId == groupParentDRId && x.Id == drId)) {\r\n                            existingDrsIndexes.push(index);\r\n                        }\r\n                    }\r\n                    else if (x.controls['JobId'].value == jobId && (x.controls['Status'].value == 0 || x.controls['Status'].value == 1 || x.controls['Status'].value == 2 || x.controls['Status'].value == 5)) {\r\n                        existingDrsIndexes.push(index);\r\n                    }\r\n                    return x.controls['JobId'].value == jobId;\r\n                });\r\n                for (let index = existingDrsIndexes.length - 1; index >= 0; index--) {\r\n                    _drArray.removeAt(existingDrsIndexes[index]);\r\n                }\r\n                let isCommonPickup = trip.controls['IsCommonPickup'].value as boolean;\r\n                if (existingDrsIndexes.length > 0 && _drArray.controls.length > 0) {\r\n                    for (let index = data.Drs.length - 1; index >= 0; index--) {\r\n                        let _drForm = this.utilService.getDeliveryRequestForm(data.Drs[index], isCommonPickup);\r\n                        _drArray.insert(existingDrsIndexes[0], _drForm);\r\n                    }\r\n                } else {\r\n                    for (let index = 0; index < data.Drs.length; index++) {\r\n                        let _drForm = this.utilService.getDeliveryRequestForm(data.Drs[index], isCommonPickup);\r\n                        _drArray.push(_drForm);\r\n                    }\r\n                }\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n            this.addNewDrsInDataService(jobId, data);\r\n        }\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        // if (trip && data.Drs) {\r\n        //    this.editDroppedGroup(trip, data.ShiftIndex, data.RowIndex, data.ColIndex, schedule, false);\r\n        //}\r\n    }\r\n\r\n    private addNewDrsInDataService(jobId: number, data): void {\r\n        let AllDrs = this.dataService.AllDeliveryRequestsSubject.value as DeliveryRequestViewModel[];\r\n        //let drsToRemove = AllDrs.filter(t => t.JobId == jobId);\r\n        let subDRs = AllDrs.filter(t => t.GroupParentDRId && t.GroupParentDRId != '' && t.JobId == jobId);\r\n        let subJobDRs = AllDrs.filter(t => t.GroupParentDRId == '' && t.JobId == jobId);\r\n        AllDrs = AllDrs.filter(t => t.JobId != jobId);\r\n        AllDrs = AllDrs.concat(data.Drs);\r\n        AllDrs = AllDrs.concat(subDRs);\r\n        if (subDRs.length > 0) {\r\n            AllDrs = AllDrs.concat(subJobDRs);\r\n        }\r\n        this.dataService.setAllDeliveryRequestsSubject(AllDrs);\r\n        //this.dataService.setRemoveDroppedRequestSubject(drsToRemove);\r\n    }\r\n\r\n    private setUnsavedChanges(): void {\r\n        if (this.driverSchedules) {\r\n            this.driverSchedules.forEach(x => x.unsubscribeFormChange());\r\n        }\r\n    }\r\n\r\n    private getPreloadDrViewModel(preLoadInfo: any, drIds: any, shiftEndDate: string): PreLoadDrViewModel {\r\n        var model = new PreLoadDrViewModel();\r\n        model.PreloadDrs = drIds;\r\n        model.PreloadTrailers = preLoadInfo.PreloadTrailers;\r\n        model.PreloadDrivers = preLoadInfo.PreloadDrivers;\r\n        model.IsTrailerExists = preLoadInfo.IsTrailerExists;\r\n        model.RegionId = this.SbForm.controls['RegionId'].value;\r\n        model.SbView = this.SbForm.controls['ObjectFilter'].value;\r\n        model.ShiftEndDate = shiftEndDate;\r\n        model.ShiftId = preLoadInfo.ShiftId;\r\n        model.SbDsbView = this.SbForm.controls['DSBFilter'].value;\r\n        return model;\r\n    }\r\n\r\n    private getModifiedLoadTripInfo(loadInfo: any): any {\r\n        let _modifiedTripInfo = new ModifiedTripInfo();\r\n        _modifiedTripInfo.ShiftIndex = loadInfo.ShiftIndex;\r\n        _modifiedTripInfo.DriverRowIndex = loadInfo.ScheduleIndex;\r\n        _modifiedTripInfo.DriverColIndex = loadInfo.TripIndex;\r\n        return _modifiedTripInfo;\r\n    }\r\n\r\n    private createPreloadForAcrossTheDate(preLoadInfo: any, shiftEndDate: string): void {\r\n        // shift cross the date, need to create a draft schedule builder (or update existing)\r\n        var model = this.getPreloadDrViewModel(preLoadInfo, preLoadInfo.PreloadDrs, shiftEndDate);\r\n        this._savingBuilder = true;\r\n        this.sbService.createPreloadForAcrossTheDate(model).subscribe(data => {\r\n            if (data == null) {\r\n                Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            } else if (data.StatusCode == 0) {\r\n                this.updateAcrossTheDateDrsPreloadInfo(preLoadInfo, data);\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            } else {\r\n                this._savingBuilder = false;\r\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            }\r\n            if (data.StatusCode == 0) {\r\n                let _modifiedTripInfo = this.getModifiedLoadTripInfo(preLoadInfo);\r\n                this.saveScheduleBuilderData([_modifiedTripInfo], false);\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    private createPreloadForSameDate(preLoadInfo: any, shifts: any, shiftEndDate: string): void {\r\n        let postLoadInfo = this.getShiftInfoWithDriverTrailerInOtherShift(preLoadInfo, shifts);\r\n        if (postLoadInfo == undefined) {\r\n            if (preLoadInfo.IsTrailerExists) {\r\n                let trailerNames = preLoadInfo.PreloadTrailers.map(t => t.TrailerId).join(\", \");\r\n                trailerNames = preLoadInfo.PreloadTrailers.length > 1 ? 'trailers ' + trailerNames + ' are' : 'trailer ' + trailerNames + ' is'\r\n                Declarations.msgerror('Preload can not be done as ' + trailerNames + ' not assigned to any other shift', undefined, undefined);\r\n            } else {\r\n                Declarations.msgerror('Preload can not be done as driver is not assigned to any other shift', undefined, undefined);\r\n            }\r\n        } else {\r\n            this._savingBuilder = true;\r\n            let drIds = preLoadInfo.PreloadDrs.map(t => t.Id);\r\n            this.sbService.cloneDrsForPreload(drIds).subscribe(data => {\r\n                if (data == null) {\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                } else if (data.length > 0) {\r\n                    postLoadInfo[\"PostloadDrs\"] = data;\r\n                    this.updatePreloadDrsOnSuccess(preLoadInfo, postLoadInfo);\r\n                    Declarations.msgsuccess('Preload created successfully for the date ' + shiftEndDate, undefined, undefined);\r\n\r\n                    let _modifiedPreloadTripInfo = this.getModifiedLoadTripInfo(preLoadInfo);\r\n                    let _modifiedPostloadTripInfo = this.getModifiedLoadTripInfo(postLoadInfo);\r\n                    this.saveScheduleBuilderData([_modifiedPreloadTripInfo, _modifiedPostloadTripInfo], false);\r\n\r\n                    this.dataService.setDeliveryPreloadOption({ ShiftIndex: preLoadInfo.ShiftIndex, ScheduleIndex: preLoadInfo.ScheduleIndex, Reset: false });\r\n                } else {\r\n                    Declarations.msgsuccess('Failed to create preload. Please contact the administrator.', undefined, undefined);\r\n                }\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n\r\n    public onPreloadTrailerChange(event: any): void {\r\n        let trailerId = event.target.value;\r\n        if (trailerId) {\r\n            this.preloadSelectedTrailerId = trailerId;\r\n        }\r\n    }\r\n\r\n    public onPreloadTrailerSubmit(): void {\r\n        if (this.preloadSelectedTrailerId) {\r\n            Declarations.hideModal(\"#select-preload-trailer\");\r\n            let selectedTrailer = this.PreLoadInfo.PreloadTrailers.find(x => x.Id == this.preloadSelectedTrailerId);\r\n            this.PreLoadInfo.PreloadTrailers = [selectedTrailer];\r\n            this.processPreloadDeliveryCreation(this.PreLoadInfo);\r\n            this.preloadSelectedTrailerId = null;\r\n        }\r\n    }\r\n\r\n    private processPreloadDeliveryCreation(preLoadInfo: any): void {\r\n        let shifts = this.SbForm.controls['Shifts'].value as ScheduleShiftModel[];\r\n        let preloadShift = shifts.find(x => x.Id == preLoadInfo.ShiftId) as ScheduleShiftModel;\r\n        let result = this.isAcrossTheDateShift(preloadShift);\r\n        if (result.IsAcrossTheDateShift) {\r\n            // shift cross the date, need to create a draft schedule builder (or update existing)\r\n            this.createPreloadForAcrossTheDate(preLoadInfo, result.ShiftEndDate);\r\n        } else {\r\n            // shift is ending in same date, so search for same trailers\r\n            this.createPreloadForSameDate(preLoadInfo, shifts, result.ShiftEndDate);\r\n        }\r\n    }\r\n\r\n    private isAcrossTheDateShift(preloadShift: ScheduleShiftModel): any {\r\n        let shiftStartTime = preloadShift.StartTime;\r\n        let shifEndTime = preloadShift.EndTime;\r\n        let dsbDate = this.SbForm.controls['Date'].value;\r\n        let startDate = moment(dsbDate + ' ' + shiftStartTime).toDate();\r\n        let endDate = moment(dsbDate + ' ' + shifEndTime).toDate();\r\n        if (startDate > endDate) {\r\n            endDate.setDate(endDate.getDate() + 1);\r\n        }\r\n        let shiftEndDate = moment(endDate).format('MM/DD/YYYY');\r\n        let _isAcrossTheDateShift = dsbDate != shiftEndDate;\r\n        return {\r\n            IsAcrossTheDateShift: _isAcrossTheDateShift,\r\n            ShiftEndDate: shiftEndDate\r\n        };\r\n    }\r\n\r\n    private validateTrips(_unsavedChanges: ModifiedTripInfo[]) {\r\n        var isValidTrips = true;\r\n        _unsavedChanges.forEach(t => {\r\n            let schedule = this.SbForm.get('Shifts.' + t.ShiftIndex + '.Schedules.' + t.DriverRowIndex) as FormGroup;\r\n            var trip = schedule.get('Trips.' + t.DriverColIndex) as FormGroup;\r\n            if (trip.get('GroupId').value > 0) {\r\n                if (!trip.valid) {\r\n                    if (trip.get('DeliveryRequests').value.length > 0) {\r\n                        //log max fill validation issue.\r\n                        this.logDRMaxFillIssue(trip);\r\n                        this.editExisingGroup(trip, t.ShiftIndex, t.DriverRowIndex, t.DriverColIndex, schedule, true);\r\n                        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                        isValidTrips = false;\r\n                        return isValidTrips;\r\n                    }\r\n                }\r\n            }\r\n            else if (trip.invalid && trip.get('DeliveryRequests').value.length > 0) {\r\n                //log max fill validation issue.\r\n                this.logDRMaxFillIssue(trip);\r\n            }\r\n\r\n        });\r\n        return isValidTrips;\r\n    }\r\n\r\n    public saveScheduleBuilderData(_unsavedChanges: ModifiedTripInfo[], isDateChange: boolean) {\r\n        if (_unsavedChanges.length > 0) {\r\n            var isValidTrips = this.validateTrips(_unsavedChanges);\r\n            if (!isValidTrips) {\r\n                return;\r\n            }\r\n            this._savingBuilder = true;\r\n            var isPublish = false;\r\n            var trips = [];\r\n            var dataToSave = this.getDSBSaveModel();\r\n            _unsavedChanges.forEach(t => {\r\n                let schedule = this.SbForm.get('Shifts.' + t.ShiftIndex + '.Schedules.' + t.DriverRowIndex) as FormGroup;\r\n                var trip = schedule.get('Trips.' + t.DriverColIndex) as FormGroup;\r\n                trips.push(trip);\r\n                var tripModel = trip.value;\r\n                if (trip.controls['GroupId'].value > 0) {\r\n                    this.setTripStatus(tripModel);\r\n                    this.setDeliveryGroupStatus(tripModel, DeliveryGroupStatus.Published);\r\n                    this.setDeliveryRequestStatus(tripModel, DeliveryReqStatus.ScheduleCreated);\r\n                    isPublish = true;\r\n                }\r\n                else {\r\n                    this.setTripStatus(tripModel);\r\n                    this.setDeliveryGroupStatus(tripModel, DeliveryGroupStatus.Draft);\r\n                }\r\n\r\n                tripModel.Drivers = schedule.controls['Drivers'].value;\r\n                tripModel.Trailers = schedule.controls['Trailers'].value;\r\n                tripModel.IsIncludeAllRegionDriver = schedule.controls['IsIncludeAllRegionDriver'].value;\r\n                dataToSave.Trips.push(tripModel);\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n            this.dataService.setShowDeliveryGroupSubject(false);\r\n            if (dataToSave.Trips.length > 0) {\r\n                if (isPublish) {\r\n                    dataToSave.Status = 3;\r\n                    this.sbService.publishDriverView(dataToSave).subscribe(data => {\r\n                        this._savingBuilder = false;\r\n                        this.updateLoadForm(data, trips, isDateChange);\r\n                    });\r\n                }\r\n                else {\r\n                    dataToSave.Status = 1;\r\n                    this.sbService.saveDriverView(dataToSave).subscribe(data => {\r\n                        this._savingBuilder = false;\r\n                        this.updateLoadForm(data, trips, isDateChange);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getShiftInfoWithDriverTrailerInOtherShift(data: any, allShifts: ScheduleShiftModel[]): any {\r\n        let shiftWithSameDriverTrailer = undefined;\r\n        for (var shiftIdx = data.ShiftIndex + 1; shiftIdx < allShifts.length; shiftIdx++) {\r\n            let schedules = allShifts[shiftIdx].Schedules;\r\n            for (var scheduleIdx = 0; scheduleIdx < schedules.length; scheduleIdx++) {\r\n                shiftWithSameDriverTrailer = this.getMatchedDriverTrailerInfo(data, allShifts, shiftIdx, scheduleIdx);\r\n                if (shiftWithSameDriverTrailer != undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            if (shiftWithSameDriverTrailer != undefined) {\r\n                break;\r\n            }\r\n        }\r\n        return shiftWithSameDriverTrailer;\r\n    }\r\n\r\n    private getMatchedDriverTrailerInfo(data: any, allShifts: ScheduleShiftModel[], shiftIdx: number, scheduleIdx: number): any {\r\n        let shiftWithSameTrailer = undefined;\r\n        let schedules = allShifts[shiftIdx].Schedules;\r\n        let matchedDriverTrailers = [];\r\n        if (data.IsTrailerExists) {\r\n            matchedDriverTrailers = schedules[scheduleIdx].Trailers.filter(this.IdInComparer(data.PreloadTrailers));\r\n        } else {\r\n            matchedDriverTrailers = schedules[scheduleIdx].Drivers.filter(this.IdInComparer(data.PreloadDrivers));\r\n        }\r\n        if (matchedDriverTrailers.length > 0) {\r\n            shiftWithSameTrailer = {\r\n                Shift: allShifts[shiftIdx],\r\n                ShiftIndex: shiftIdx,\r\n                ShiftId: allShifts[shiftIdx].Id,\r\n                Schedule: schedules[scheduleIdx],\r\n                ScheduleIndex: scheduleIdx,\r\n                TripIndex: 0\r\n            };\r\n        }\r\n        return shiftWithSameTrailer;\r\n    }\r\n\r\n    IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length > 0;\r\n        }\r\n    }\r\n\r\n    private updatePreloadDrsOnSuccess(preLoadInfo: any, postLoadInfo: any): void {\r\n        this.updatePostLoadedForIds(preLoadInfo, postLoadInfo);\r\n        this.updatePreloadDrs(preLoadInfo, postLoadInfo);\r\n        this.updatePostloadDrs(preLoadInfo, postLoadInfo);\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n\r\n    private updatePostLoadedForIds(preLoadInfo: any, postLoadInfo: any): void {\r\n        preLoadInfo.PreloadDrs.forEach(x => {\r\n            var postLoadedDr = postLoadInfo.PostloadDrs.find(y => y.PostLoadedFor == x.Id);\r\n            if (postLoadedDr) {\r\n                x['PreLoadedFor'] = postLoadedDr.Id;\r\n            }\r\n        });\r\n    }\r\n\r\n    private updatePreloadDrs(preLoadInfo: any, postLoadInfo: any): void {\r\n        let trip = this.SbForm.get('Shifts.' + preLoadInfo.ShiftIndex + '.Schedules.' + preLoadInfo.ScheduleIndex + '.Trips.' + preLoadInfo.TripIndex) as FormGroup;\r\n        if (trip) {\r\n            let preloadDrIds = preLoadInfo.PreloadDrs.map(t => t.Id);\r\n            let preloadDrs = trip.controls['DeliveryRequests'] as FormArray;\r\n            let drsToUpdate = preloadDrs.controls.filter((x: FormGroup) => preloadDrIds.indexOf(x.controls['Id'].value) >= 0) as FormGroup[];\r\n            drsToUpdate.forEach((x: FormGroup) => {\r\n                let postLoadDr = postLoadInfo.PostloadDrs.find(y => y.PostLoadedFor == x.controls['Id'].value);\r\n                if (postLoadDr) { //Add post load refernce to preload DRs\r\n                    x.addControl('PreLoadedFor', this.fb.control(postLoadDr.Id));\r\n                    x.addControl('PostLoadInfo', this.utilService.getLoadInfoForm({\r\n                        ShiftId: postLoadInfo.ShiftId,\r\n                        ScheduleIndex: postLoadInfo.ScheduleIndex,\r\n                        TripIndex: postLoadInfo.TripIndex,\r\n                        DrId: postLoadDr.Id\r\n                    }));\r\n                    x.controls['ScheduleStatus'].patchValue(15);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private updatePostloadDrs(preLoadInfo: any, postLoadInfo: any): void {\r\n        let trip = this.SbForm.get('Shifts.' + postLoadInfo.ShiftIndex + '.Schedules.' + postLoadInfo.ScheduleIndex + '.Trips.' + postLoadInfo.TripIndex) as FormGroup;\r\n        if (trip) {\r\n            let postloadDrs = trip.controls['DeliveryRequests'] as FormArray;\r\n            for (var index = postLoadInfo.PostloadDrs.length - 1; index >= 0; index--) {\r\n                postLoadInfo.PostloadDrs[index].Status = 5; // New DR\r\n                postLoadInfo.PostloadDrs[index].ScheduleStatus = 14; // New DR\r\n                let preLoadDr = preLoadInfo.PreloadDrs.find(y => y.PreLoadedFor == postLoadInfo.PostloadDrs[index].Id);\r\n                let postLoadDr = this.utilService.getDeliveryRequestForm(postLoadInfo.PostloadDrs[index], false);\r\n                postLoadDr.patchValue({\r\n                    Terminal: preLoadDr.Terminal,\r\n                    BulkPlant: preLoadDr.BulkPlant,\r\n                    OrderId: preLoadDr.OrderId,\r\n                    PickupLocationType: preLoadDr.PickupLocationType\r\n                });\r\n                //Add pre load refernce to postload DRs\r\n                postLoadDr.addControl('PreLoadInfo', this.utilService.getLoadInfoForm({\r\n                    ShiftId: preLoadInfo.ShiftId,\r\n                    ScheduleIndex: preLoadInfo.ScheduleIndex,\r\n                    TripIndex: preLoadInfo.TripIndex,\r\n                    DrId: preLoadDr.Id\r\n                }));\r\n                postloadDrs.insert(0, postLoadDr);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateAcrossTheDateDrsPreloadInfo(preLoadInfo: any, data: PreLoadDrResponseViewModel): void {\r\n        let trip = this.SbForm.get('Shifts.' + preLoadInfo.ShiftIndex + '.Schedules.' + preLoadInfo.ScheduleIndex + '.Trips.' + preLoadInfo.TripIndex) as FormGroup;\r\n        if (trip) {\r\n            let preloadDrIds = preLoadInfo.PreloadDrs.map(t => t.Id);\r\n            let preloadDrs = trip.controls['DeliveryRequests'] as FormArray;\r\n            let drsToUpdate = preloadDrs.controls.filter((x: FormGroup) => preloadDrIds.indexOf(x.controls['Id'].value) >= 0) as FormGroup[];\r\n            drsToUpdate.forEach((x: FormGroup) => {\r\n                let preLoadDrModel = data.PreloadDrs.find(y => y.Id == x.controls['Id'].value);\r\n                if (preLoadDrModel) { //Add post load refernce to preload DRs\r\n                    x.addControl('PreLoadedFor', this.fb.control(preLoadDrModel.PreLoadedForId));\r\n                    x.controls['ScheduleStatus'].patchValue(15);\r\n                    trip.controls['TripStatus'].patchValue(TripStatus.Modified);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateEditedPostloadDrs(drs: DeliveryRequestViewModel[]): void {\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        drs.forEach(x => {\r\n            let postLoadInfo = x.PostLoadInfo;\r\n            if (postLoadInfo) {\r\n                let thisShift = _shiftArray.controls.find((s: FormGroup) => s.controls['Id'].value == postLoadInfo.ShiftId) as FormGroup;\r\n                if (thisShift) {\r\n                    let thisTrip = thisShift.get('Schedules.' + postLoadInfo.ScheduleIndex + \".Trips.\" + postLoadInfo.TripIndex) as FormGroup;\r\n                    if (thisTrip) {\r\n                        let thisDr = thisTrip.controls['DeliveryRequests']['controls'].find((d: FormGroup) => d.controls['Id'].value == postLoadInfo.DrId) as FormGroup;\r\n                        if (thisDr) {\r\n                            let updatedValues = {\r\n                                RequiredQuantity: x.RequiredQuantity,\r\n                                ScheduleStatus: 15,\r\n                                Terminal: x.Terminal == undefined ? new DropdownItem() : x.Terminal,\r\n                                BulkPlant: x.BulkPlant == undefined ? new DropAddressModel : x.BulkPlant,\r\n                                OrderId: x.OrderId\r\n                            };\r\n                            if (!thisDr.controls['IsCommonBadge'].value && !x.IsCommonBadge) {\r\n                                updatedValues['BadgeNo1'] = x.BadgeNo1 == null ? \"\" : x.BadgeNo1;\r\n                                updatedValues['BadgeNo2'] = x.BadgeNo2 == null ? \"\" : x.BadgeNo2;\r\n                                updatedValues['BadgeNo3'] = x.BadgeNo3 == null ? \"\" : x.BadgeNo3;\r\n                                updatedValues['DispactherNote'] = x.DispactherNote == null ? \"\" : x.DispactherNote;\r\n                            }\r\n                            thisDr.patchValue(updatedValues);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    private updateCompartmentPostloadDrs(drs: DeliveryRequestViewModel[], prepostloadStatus: number): void {\r\n        var posttripInfo = null;\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        drs.forEach(x => {\r\n            let postLoadInfo = null;\r\n            if (prepostloadStatus == 1) {\r\n                postLoadInfo = x.PostLoadInfo;\r\n            }\r\n            else {\r\n                postLoadInfo = x.PreLoadInfo;\r\n            }\r\n            if (postLoadInfo) {\r\n                let thisShift = _shiftArray.controls.find((s: FormGroup) => s.controls['Id'].value == postLoadInfo.ShiftId) as FormGroup;\r\n                if (thisShift) {\r\n                    let thisTrip = thisShift.get('Schedules.' + postLoadInfo.ScheduleIndex + \".Trips.\" + postLoadInfo.TripIndex) as FormGroup;\r\n                    if (thisTrip) {\r\n                        posttripInfo = new ModifiedTripInfo();\r\n                        posttripInfo.ShiftIndex = thisTrip['controls']['ShiftIndex'].value;\r\n                        posttripInfo.DriverRowIndex = thisTrip['controls']['DriverRowIndex'].value;\r\n                        posttripInfo.DriverColIndex = thisTrip['controls']['DriverColIndex'].value;\r\n                        let thisDr = thisTrip.controls['DeliveryRequests']['controls'].find((d: FormGroup) => d.controls['Id'].value == postLoadInfo.DrId) as FormGroup;\r\n                        if (thisDr) {\r\n                            let compartmentInfo = x.Compartments;\r\n                            let compartmentArray = thisDr.get('Compartments') as FormArray;\r\n                            let prevCompartment = compartmentArray.getRawValue();\r\n                            compartmentArray.clear();\r\n                            let disabledControl = false;\r\n                            if (x.TrackScheduleEnrouteStatus == 16 || x.TrackScheduleStatus == 7 || x.TrackScheduleStatus == 8 || x.TrackScheduleStatus == 9) {\r\n                                disabledControl = true;\r\n                            }\r\n                            for (var i = 0; i < compartmentInfo.length; i++) {\r\n                                if (prevCompartment.length > 0) {\r\n                                    var trailerExists = prevCompartment.find(top => top.TrailerId == compartmentInfo[i].TrailerId);\r\n                                    if (trailerExists) {\r\n                                        compartmentArray.push(this.utilService.getCompartmentsFormGroup(x, compartmentInfo[i], disabledControl));\r\n                                    }\r\n                                    else {\r\n                                        compartmentArray.push(this.utilService.getCompartmentsFormGroup(x, compartmentInfo[i], disabledControl));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (compartmentInfo[i].TrailerId != null && compartmentInfo[i].CompartmentId != null) {\r\n                                        compartmentArray.push(this.utilService.getCompartmentsFormGroup(x, compartmentInfo[i], disabledControl));\r\n                                    }\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < compartmentInfo.length; i++) {\r\n\r\n                            }\r\n                            window.setTimeout(() => { this.validateDrQuantity(thisDr.controls['RequiredQuantity']); }, 1);\r\n                            thisDr.controls['ScheduleStatus'].patchValue(15);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n        return posttripInfo;\r\n\r\n    }\r\n    private deletePreAndPostloadDrs(drs: DeliveryRequestViewModel[]): void {\r\n        let drsToRestore = [];\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        let postloadInfo = drs.filter(t => t.PostLoadInfo).map(m => m.PostLoadInfo);\r\n        let preloadInfo = drs.filter(t => t.PreLoadInfo).map(m => m.PreLoadInfo);\r\n        let prepostloadInfo = postloadInfo.concat(preloadInfo);\r\n        prepostloadInfo = prepostloadInfo.filter((value, index, self) => self.indexOf(value) === index);\r\n        prepostloadInfo.forEach(x => {\r\n            if (x) {\r\n                let thisShift = _shiftArray.controls.find((s: FormGroup) => s.controls['Id'].value == x.ShiftId) as FormGroup;\r\n                if (thisShift) {\r\n                    let thisTrip = thisShift.get('Schedules.' + x.ScheduleIndex + \".Trips.\" + x.TripIndex) as FormGroup;\r\n                    if (thisTrip) {\r\n                        let _drArray = thisTrip.controls['DeliveryRequests'] as FormArray;\r\n                        let thisDr = _drArray.controls.find((d: FormGroup) => d.controls['Id'].value == x.DrId) as FormGroup;\r\n                        if (thisDr) {\r\n                            _drArray.removeAt(_drArray.controls.indexOf(thisDr));\r\n                            if (!thisDr.controls['PostLoadedFor'] || !thisDr.controls['PostLoadedFor'].value) {\r\n                                thisDr.value.Compartments = [];\r\n                                drsToRestore.push(thisDr.value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n        if (drsToRestore && drsToRestore.length > 0) {\r\n            this.dataService.setRestoreDeletedRequestSubject(drsToRestore);\r\n        }\r\n    }\r\n\r\n    private editCompartmentAssignments(model: any): void {\r\n        this.CompartmentDetails = [];\r\n        this.CompartmentEditModel = model;\r\n        let trailerIds = this.CompartmentEditModel.Schedule.Trailers.map(t => t.Id);\r\n        let selectedTrailerId = 'null';\r\n        if (trailerIds.length == 1) {\r\n            selectedTrailerId = trailerIds[0];\r\n        }\r\n        this.CompartmentViewFormGroup = this.utilService.getCompartmentViewForm(this.CompartmentEditModel.Schedule.Trips, selectedTrailerId);\r\n        this._loadingCmprts = true;\r\n        this.sbService.getTrailerCompartments(trailerIds).subscribe(data => {\r\n            this._loadingCmprts = false;\r\n            if (data) {\r\n                this.TrailerCompartmentRetains = data;\r\n                for (var idx = 0; idx < data.length; idx++) {\r\n                    if (data[idx].IsCompartmentAvailable) {\r\n                        this.TrailerCompartments[data[idx].TrailerId] = data[idx].Compartments;\r\n                    }\r\n                }\r\n                this.intializeTrailerRetainVal(trailerIds);\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n\r\n        });\r\n    }\r\n    intializeTrailerRetainVal(trailerIds: []) {\r\n        if (trailerIds.length > 0) {\r\n            var tripsArray = this.CompartmentViewFormGroup.controls['Trips'] as FormArray;\r\n            tripsArray.controls.forEach((trips: FormGroup) => {\r\n                var deliveryReqArray = trips.controls['DeliveryRequests'] as FormArray;\r\n                deliveryReqArray.controls.forEach((delReq: FormGroup) => {\r\n                    var compartmentInfo = delReq.controls['Compartments'] as FormArray;\r\n                    if (compartmentInfo.length == 1) {\r\n                        compartmentInfo.controls.forEach((comp: FormGroup) => {\r\n                            var compTrailerId = comp.controls[\"TrailerId\"].value;\r\n                            var compQuantity = comp.controls[\"Quantity\"].value;\r\n                            var trailerExists = this.TrailerCompartmentRetains.find(x => x.TrailerId == compTrailerId);\r\n                            if (trailerExists != null && trailerExists.IsCompartmentAvailable == false) {\r\n                                if (compQuantity <= 0) {\r\n                                    this.getRetainTrailerInfo(comp, delReq);\r\n                                }\r\n\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n    public addCompartment(dr: FormGroup, trailerId: string): void {\r\n        let compartments = dr.controls['Compartments'] as FormArray;\r\n        if (!trailerId) {\r\n            let trailerIds = this.CompartmentEditModel.Schedule.Trailers.map(t => t.Id);\r\n            trailerId = trailerIds[0];\r\n        }\r\n        let model = new CompartmentModel();\r\n        model.TrailerId = trailerId;\r\n        let newComp = this.utilService.getCompartmentsFormGroup(dr.value, model, false);\r\n        compartments.push(newComp);\r\n    }\r\n\r\n    public removeCompartment(dr: FormGroup, index: number): void {\r\n        let compartments = dr.controls['Compartments'] as FormArray;\r\n        compartments.removeAt(index);\r\n        window.setTimeout(() => { this.validateDrQuantity(dr.controls['RequiredQuantity']); }, 1);\r\n    }\r\n\r\n    public saveCompartmentAssignment(): void {\r\n        let trips = this.CompartmentViewFormGroup.controls['Trips'] as FormArray;\r\n        trips.controls.forEach((x: FormGroup) => {\r\n            if (!x.valid) {\r\n                var delRequest = x.controls[\"DeliveryRequests\"] as FormArray;\r\n                delRequest.controls.forEach((_drForm: FormGroup) => {\r\n                    let isRetainFuelLoaded = _drForm.controls['IsRetainFuelLoaded'].value;\r\n                    let compartments = _drForm.controls[\"Compartments\"] as FormArray;\r\n                    compartments.controls.forEach((comp: FormGroup) => {\r\n                        let compId = comp.get('CompartmentId').value;\r\n                        if (compId == null || compId == '') {\r\n                            comp.get('CompartmentId').setValidators(null);\r\n                            comp.get('CompartmentId').updateValueAndValidity();\r\n                            comp.get('Quantity').setValidators(null);\r\n                            comp.get('Quantity').updateValueAndValidity();\r\n                        }\r\n                        else if (isRetainFuelLoaded) {\r\n                            comp.get('Quantity').setValidators(null);\r\n                            comp.get('Quantity').updateValueAndValidity();\r\n                        }\r\n                    });\r\n                });\r\n                x.markAllAsTouched();\r\n            }\r\n        });\r\n        this.CompartmentViewFormGroup.markAllAsTouched();\r\n        if (this.CompartmentViewFormGroup.invalid) {\r\n            Declarations.msgerror('Please resolve highlighted errors', undefined, undefined);\r\n            return;\r\n        } else {\r\n            let modifiedTrips = this.setCompartmentInfoToRow();\r\n            if (modifiedTrips.length > 0) {\r\n                this.saveScheduleBuilderData(modifiedTrips, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setCompartmentInfoToRow(): ModifiedTripInfo[] {\r\n        let modifiedTrips = [];\r\n        let shiftIndex = this.CompartmentEditModel.ShiftIndex;\r\n        let rowIndex = this.CompartmentEditModel.RowIndex;\r\n        let targetRow = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        if (targetRow) {\r\n            let sourceLoads = this.CompartmentViewFormGroup.controls['Trips']['controls'];\r\n            let targetLoads = targetRow.controls['Trips']['controls'];\r\n            for (var loadIdx = 0; loadIdx < targetLoads.length; loadIdx++) {\r\n                let sourceLoad = sourceLoads[loadIdx];\r\n                let targetLoad = targetLoads[loadIdx];\r\n                let sourceDrs = sourceLoad['controls']['DeliveryRequests']['controls'];\r\n                let targetDrs = targetLoad['controls']['DeliveryRequests']['controls'];\r\n                let tripInfo = null;\r\n                for (var drIdx = 0; drIdx < targetDrs.length; drIdx++) {\r\n                    let sourceDr = sourceDrs[drIdx];\r\n                    let compartments = sourceDr['controls'].Compartments.getRawValue();\r\n                    let targetDr = targetDrs[drIdx] as FormGroup;\r\n                    let targetDrCompArray = targetDr.controls['Compartments'] as FormArray;\r\n\r\n                    let delRequestUpdate = this.checkDeliveryRequestStatus(targetDr.controls['TrackScheduleStatus'].value, targetDr.controls['TrackScheduleEnrouteStatus'].value);\r\n                    if (delRequestUpdate == false) {\r\n                        targetDrCompArray.clear();\r\n                        for (var cIdx = 0; cIdx < compartments.length; cIdx++) {\r\n                            let compartment = compartments[cIdx];\r\n                            targetDrCompArray.push(this.utilService.getCompartmentsFormGroupForDR(compartment));\r\n                            if (sourceDr['controls'].IsRetainFuelLoaded.value && sourceDr['controls'].PostLoadedFor) {\r\n                                targetDr.controls[\"IsRetainFuelLoaded\"].patchValue(sourceDr['controls'].IsRetainFuelLoaded.value);\r\n                                this.setDrValues(targetDr, sourceDr['controls'].RequiredQuantity.value, 1);\r\n                                this.setPostLoadedFor(targetDr, sourceDr['controls'].PostLoadedFor.value);\r\n                                this.setDrPickupLocation(targetDr, sourceDr.value);\r\n                            }\r\n                            targetDr.controls['ScheduleStatus'].patchValue(15);\r\n                            tripInfo = new ModifiedTripInfo();\r\n                            tripInfo.ShiftIndex = targetLoad['controls']['ShiftIndex'].value;\r\n                            tripInfo.DriverRowIndex = targetLoad['controls']['DriverRowIndex'].value;\r\n                            tripInfo.DriverColIndex = targetLoad['controls']['DriverColIndex'].value;\r\n                        }\r\n                    }\r\n                }\r\n                if (tripInfo) {\r\n                    modifiedTrips.push(tripInfo);\r\n                }\r\n                var pretripInfo = this.intializePrePostLoadCompartmentInfo(targetLoad, 1);\r\n                if (pretripInfo) {\r\n                    modifiedTrips.push(pretripInfo);\r\n                }\r\n                //var posttripInfo = this.intializePreLoadCompartmentInfo(targetLoad); // not required - due to not provide edit value on postload DR.\r\n                //if (posttripInfo) {\r\n                //    modifiedTrips.push(posttripInfo);\r\n                //}\r\n            }\r\n            Declarations.closeSlidePanel();\r\n        }\r\n        return modifiedTrips;\r\n    }\r\n\r\n    validateDrQuantity(drQty: any): void {\r\n        drQty.updateValueAndValidity();\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    trackByShiftId(index: number, shift: any): any {\r\n        return shift.controls[\"Id\"].value;\r\n    }\r\n\r\n    trackByScheduleIndex(index: number, schedule: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByTripIndex(index: number, schedule: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByDrId(index: number, dr: any): any {\r\n        return dr.controls[\"Id\"].value;\r\n    }\r\n\r\n    trackByDriverId(index: number, driver: any): any {\r\n        return driver.controls[\"Id\"].value;\r\n    }\r\n\r\n    trackByTrailerId(index: number, trailer: any): any {\r\n        return trailer.controls[\"TrailerId\"].value;\r\n    }\r\n\r\n    intializePrePostLoadCompartmentInfo(targetLoad: any, prepostDRStatus: number) {\r\n        var tripInfo = null;\r\n        let updatedPrePostloadedDrs = targetLoad['controls']['DeliveryRequests'].value;\r\n        if (updatedPrePostloadedDrs.length > 0) {\r\n            var prepostloadedDrsStatus = null;\r\n            if (prepostDRStatus) {\r\n                prepostloadedDrsStatus = updatedPrePostloadedDrs.filter(x => x.PostLoadInfo);\r\n            }\r\n            else {\r\n                prepostloadedDrsStatus = updatedPrePostloadedDrs.filter(x => x.PreLoadInfo);\r\n            }\r\n            if (prepostloadedDrsStatus.length > 0) {\r\n                tripInfo = this.updateCompartmentPostloadDrs(prepostloadedDrsStatus, prepostDRStatus);\r\n            }\r\n        }\r\n        return tripInfo;\r\n    }\r\n\r\n    public TrailerRetainDetails(TrailerId: string) {\r\n        var Id = [TrailerId];\r\n        this.CompartmentDetails = [];\r\n        this._loadingCmprts = true;\r\n        this.sbService.getTrailerFuelRetain(Id).subscribe(data => {\r\n            this.CompartmentDetails = data;\r\n            this._loadingCmprts = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    public closeRetainInfo(): void {\r\n        this.CompartmentDetails = [];\r\n    }\r\n\r\n    GetfuelRetainDetails(trailerIds: any[]): void {\r\n        this.sbService.getTrailerFuelRetain(trailerIds).subscribe(data => {\r\n            if (data != null && data.length > 0) {\r\n                var trailerFuelRetainInfo = data as TrailerFuelRetainModel[];\r\n                var trailerNames = '';\r\n                trailerFuelRetainInfo.forEach(x => {\r\n                    if (trailerNames == '') {\r\n                        trailerNames = x.TrailerId;\r\n                    }\r\n                    else {\r\n                        if (trailerNames.indexOf(x.TrailerId) == -1) {\r\n                            trailerNames = trailerNames + \", \" + x.TrailerId;\r\n                        }\r\n                    }\r\n                });\r\n                Declarations.msgwarning(\"There is some fuel retained in the \" + trailerNames + \".\", undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    checkIfTrailerFuelRetainExists(trailerId: string): boolean {\r\n        let status = false;\r\n        var trailerInfo = this.TrailerCompartmentRetains.find(x => x.TrailerId.toString() == trailerId);\r\n        if (trailerInfo != null) {\r\n            status = trailerInfo.IsFuelRetain;\r\n        }\r\n        return status;\r\n    }\r\n\r\n    checkDeliveryRequestStatus(delStatus: any, delEncStatus: any) {\r\n        if (delEncStatus == 16 || this.CompletedScheduleStatuses.filter(x => x == delStatus).length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleFilldCompatible() {\r\n        this.SelectedTrailers = [];\r\n        this.UnassignedDrivers = [];\r\n        this.DriverTrailerForm.get('Driver').patchValue(null);\r\n        this.UnassignedTrailers = this.getUnassignedTrailers(this.selTrailerIndex, this.selTrailerlist)\r\n        this.UnassignedDrivers = this.getUnassignedDrivers(true);\r\n    }\r\n\r\n    getRetainCompartmentInfo(comp: FormGroup, dr: any) {\r\n        let compartmentCtrl = comp.value;\r\n        let delRequestCtrl = dr.value;\r\n        var fuelRetain = this.TrailerCompartmentRetains.find(x => x.IsFuelRetain == true && x.TrailerId == compartmentCtrl.TrailerId);\r\n        if (fuelRetain) {\r\n            var compartment = fuelRetain.Compartments.find(x => x.CompartmentId == compartmentCtrl.CompartmentId);\r\n            if (compartment && compartment.RetainInfo) {\r\n                comp.controls[\"Quantity\"].patchValue(compartment.RetainInfo.Quantity);\r\n                dr.controls[\"IsRetainFuelLoaded\"].patchValue(true);\r\n                let drQty = this.getDRTotalQuantity(dr);\r\n                this.setDrValues(dr, drQty, 1);\r\n                this.setPostLoadedFor(dr, compartment.RetainInfo.DeliveryReqId);\r\n                this.setDrPickupLocation(dr, {\r\n                    PickupLocationType: compartment.RetainInfo.PickupLocationType,\r\n                    Terminal: compartment.RetainInfo.TfxTerminal,\r\n                    BulkPlant: compartment.RetainInfo.TfxBulkPlant\r\n                });\r\n            } else {\r\n                comp.controls[\"Quantity\"].enable();\r\n                comp.controls[\"Quantity\"].patchValue(0);\r\n                this.resetQuantity(dr, delRequestCtrl);\r\n            }\r\n        } else {\r\n            this.resetQuantity(dr, delRequestCtrl);\r\n        }\r\n        delRequestCtrl = dr.value;\r\n        if (delRequestCtrl.ScheduleQuantityType <= 1) {\r\n            let quantityValidators = [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.min(0.00000001), Validators.max(delRequestCtrl.RequiredQuantity)];\r\n            comp.controls['Quantity'].setValidators(quantityValidators);\r\n            comp.updateValueAndValidity();\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    getRetainTrailerInfo(comp: FormGroup, dr: any) {\r\n        let compartmentCtrl = comp.value;\r\n        let delRequestCtrl = dr.value;\r\n        var fuelRetain = this.TrailerCompartmentRetains.find(x => x.IsFuelRetain == true && x.TrailerId == compartmentCtrl.TrailerId);\r\n        if (fuelRetain && fuelRetain.IsCompartmentAvailable == false && fuelRetain.IsFuelRetain) {\r\n            comp.controls[\"CompartmentId\"].disable();\r\n            comp.controls[\"Quantity\"].disable();\r\n            var compartment = fuelRetain.Compartments[0];\r\n            if (compartment && compartment.RetainInfo) {\r\n                comp.controls[\"Quantity\"].patchValue(compartment.RetainInfo.Quantity);\r\n                dr.controls[\"IsRetainFuelLoaded\"].patchValue(true);\r\n                this.setDrValues(dr, compartment.RetainInfo.Quantity, 1);\r\n                this.setPostLoadedFor(dr, compartment.RetainInfo.DeliveryReqId);\r\n                this.setDrPickupLocation(dr, {\r\n                    PickupLocationType: compartment.RetainInfo.PickupLocationType,\r\n                    Terminal: compartment.RetainInfo.TfxTerminal,\r\n                    BulkPlant: compartment.RetainInfo.TfxBulkPlant\r\n                });\r\n\r\n            } else {\r\n                comp.controls[\"CompartmentId\"].enable();\r\n                comp.controls[\"Quantity\"].enable();\r\n                comp.controls[\"Quantity\"].patchValue(0);\r\n                this.resetQuantity(dr, delRequestCtrl);\r\n            }\r\n        } else {\r\n            comp.controls[\"CompartmentId\"].enable();\r\n            comp.controls[\"Quantity\"].enable();\r\n            comp.controls[\"Quantity\"].patchValue(0);\r\n            this.resetQuantity(dr, delRequestCtrl);\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    private getDRTotalQuantity(dr: any): number {\r\n        let drValue = dr.value; let quantity = 0;\r\n        let assignedComps = drValue.Compartments.map(x => { return { TrailerId: x.TrailerId, CompartmentId: x.CompartmentId }; });\r\n        for (var i = 0; i < this.TrailerCompartmentRetains.length; i++) {\r\n            let trailer = this.TrailerCompartmentRetains[i];\r\n            for (var j = 0; j < trailer.Compartments.length; j++) {\r\n                let comp = trailer.Compartments[j];\r\n                let assigned = assignedComps.find(x => x.TrailerId == trailer.TrailerId && x.CompartmentId == comp.CompartmentId);\r\n                if (assigned && comp.RetainInfo) {\r\n                    quantity += comp.RetainInfo.Quantity;\r\n                }\r\n            }\r\n        }\r\n        return quantity;\r\n    }\r\n\r\n    private resetQuantity(dr: any, delRequestCtrl: any): void {\r\n        if (delRequestCtrl.ScheduleQuantityTypeText == 'Not Specified') {\r\n            this.setDrValues(dr, 0, 5);\r\n        } else if (delRequestCtrl.ScheduleQuantityTypeText == 'Small Compartment') {\r\n            this.setDrValues(dr, 0, 4);\r\n        } else if (delRequestCtrl.ScheduleQuantityTypeText == 'Full Load') {\r\n            this.setDrValues(dr, 0, 3);\r\n        } else if (delRequestCtrl.ScheduleQuantityTypeText == 'Balance') {\r\n            this.setDrValues(dr, 0, 2);\r\n        } else {\r\n            this.setDrValues(dr, delRequestCtrl.RequiredQuantity, 1);\r\n        }\r\n        dr.controls[\"IsRetainFuelLoaded\"].patchValue(false);\r\n        let drQuantity = dr.controls[\"DrQuantity\"].value;\r\n        dr.patchValue({ IsRetainFuelLoaded: false, RequiredQuantity: drQuantity });\r\n    }\r\n\r\n    private setDrValues(dr: any, quantity: number, type: number): void {\r\n        dr.patchValue({\r\n            ScheduleQuantityType: type,\r\n            RequiredQuantity: quantity\r\n        });\r\n    }\r\n\r\n    private setDrPickupLocation(dr: any, source: any): void {\r\n        if (source.PickupLocationType == 2 && source.BulkPlant) {\r\n            dr.patchValue({\r\n                BulkPlant: source.BulkPlant,\r\n                PickupLocationType: source.PickupLocationType,\r\n            });\r\n        } else if (source.Terminal) {\r\n            dr.patchValue({\r\n                Terminal: source.Terminal,\r\n                PickupLocationType: source.PickupLocationType,\r\n            });\r\n        }\r\n    }\r\n\r\n    private setPostLoadedFor(dr: any, drId: string): void {\r\n        if (dr.controls['PostLoadedFor']) {\r\n            dr.controls['PostLoadedFor'].patchValue(drId);\r\n        } else {\r\n            dr.addControl(\"PostLoadedFor\", this.fb.control(drId));\r\n        }\r\n    }\r\n\r\n    validatePrePostLoadTrailer(_form: any) {\r\n        var status = true;\r\n        var trailerDetails = this.DriverTrailerForm.controls['Trailers'].value;\r\n        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n        var assignedTrailer = schedule.get('Trailers').value;\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n        var PreLoadInfoLength = _deliveryRequests.filter(x => x.PreLoadedFor).length;\r\n        var PostLoadInfoLength = _deliveryRequests.filter(x => x.PostLoadedFor).length;\r\n        if (PostLoadInfoLength > 0 || PreLoadInfoLength > 0) {\r\n            for (var i = 0; i < assignedTrailer.length; i++) {\r\n                if (trailerDetails.findIndex(x => x.Id == assignedTrailer[i].Id) == -1) {\r\n                    Declarations.msgerror('There is Preload/Postload DS in the shift. Please remove the Preload/Postload in order to change the assignment.', undefined, undefined);\r\n                    status = false;\r\n                    return status;\r\n                }\r\n            }\r\n        }\r\n        return status;\r\n    }\r\n    TransferDS(jobId: number, trip: FormGroup, DrIndex: number, ShiftIndex: number, RowIndex: number, ColIndex: number, schedule: any) {\r\n        var schgeduleFormGroup = schedule as FormGroup;\r\n        this.selectedColIndex = ColIndex;\r\n        this.selectedRowIndex = RowIndex;\r\n        this.selectedDefaultShiftIndex = ShiftIndex;\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filteredDRs = drs.filter(x => x.JobId == jobId && !x.PreLoadedFor && !x.PostLoadedFor);\r\n        this.$eventDataTransfer.dragData = new DragDSInfo();\r\n        this.$eventDataTransfer.dragData.Data = filteredDRs;\r\n        this.$eventDataTransfer.dragData.TripFrom = trip;\r\n        this.$eventDataTransfer.dragData.DrIndex = DrIndex;\r\n        this.$eventDataTransfer.dragData.ShiftIndex = ShiftIndex;\r\n        this.$eventDataTransfer.dragData.RowIndex = RowIndex;\r\n        this.$eventDataTransfer.dragData.ColIndex = ColIndex;\r\n        this.$eventDataTransfer.dragData.Schedule = schgeduleFormGroup;\r\n        this.GetShiftColumnInformation();\r\n\r\n    }\r\n    GetShiftColumnInformation() {\r\n        this._loadingDSData = true;\r\n        this.SelectedRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\r\n        var selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n        this.sbService.getDriversShifts(this.SelectedRegionId, selectedDate).subscribe(x => {\r\n            this._loadingDSData = false;\r\n            if (x) {\r\n                this.DSShifts = x;\r\n                this.DSShifts.forEach(top => {\r\n                    top.ShiftInfo = \"Shift - \" + top.StartTime + \" - \" + top.EndTime;\r\n                });\r\n                if (this.DSShifts.length > 0) {\r\n                    this.SelectedShift = this.DSShifts[0];\r\n                    this.GetShiftColInfo(this.SelectedShift);\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    TransferDSInfo() {\r\n        let shiftInfoDetails = this.DSShifts.find(top => top.Id == this.SelectedShift.Id && top.StartTime == this.SelectedShift.StartTime);\r\n        if (shiftInfoDetails != null) {\r\n            let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == shiftInfoDetails.Id) as FormGroup;\r\n            let shiftColIndexDetails = this.ShiftColumn.find(top => top.ColIndex == this.SelectedShiftColumn.ColIndex);\r\n            if (shiftColIndexDetails != null) {\r\n                this.$eventDataTransfer.dragData.DropSchedule = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex];\r\n                let shiftLoadIndexDetails = this.ShiftLoad.find(top => top.LoadIndex == this.SelectedLoad.LoadIndex);\r\n                if (shiftLoadIndexDetails != null) {\r\n                    this.$eventDataTransfer.dragData.DropTrip = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex][\"controls\"][\"Trips\"][\"controls\"][shiftLoadIndexDetails.LoadIndex];\r\n                    this.onItemDrop(this.$eventDataTransfer.dragData.DropTrip, this.$eventDataTransfer, this.SelectedShiftIndex, this.SelectedShiftColumn.ColIndex, this.SelectedLoad.LoadIndex, this.$eventDataTransfer.dragData.DropSchedule);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    GetShiftColInfo(shift: ShiftViewModel) {\r\n        this.ShiftColumn = [];\r\n        let shiftInfoDetails = this.DSShifts.findIndex(top => top.Id == shift.Id && top.StartTime == shift.StartTime);\r\n        if (shiftInfoDetails != -1) {\r\n            this.SelectedShift = this.DSShifts[shiftInfoDetails];\r\n            let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == this.SelectedShift.Id) as FormGroup;\r\n            this.SelectedShiftIndex = this.SbForm.controls['Shifts']['controls'].findIndex((f: FormGroup) => f.controls['Id'].value == this.SelectedShift.Id);\r\n            var columnInfo = shiftInfo.controls[\"Schedules\"].value.length;\r\n            var scheduleInfo = shiftInfo.controls[\"Schedules\"].value as any[];\r\n            for (var i = 0; i < columnInfo; i++) {\r\n                var scheduleColIndex = scheduleInfo.findIndex(x => x.DriverRowIndex == i);\r\n                if (scheduleColIndex >= 0) {\r\n                    var shiftColumnInfo = new ShiftColumnInfo();\r\n                    shiftColumnInfo.ColIndex = i;\r\n                    shiftColumnInfo.ColIndexName = \"C\" + (i + 1);\r\n                    this.ShiftColumn.push(shiftColumnInfo);\r\n                }\r\n            }\r\n            if (this.ShiftColumn.length > 0) {\r\n                this.SelectedShiftColumn = this.ShiftColumn[0];\r\n            }\r\n            this.GetShiftLoadInfo(this.SelectedShiftColumn);\r\n        }\r\n    }\r\n    GetShiftLoadInfo(shiftColumn: ShiftColumnInfo, colIndex: number = -1, rowIndex: number = -1) {\r\n        this.SelectedDriverName = '';\r\n        this.ShiftLoad = [];\r\n        let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == this.SelectedShift.Id) as FormGroup;\r\n        let shiftColIndexDetails = this.ShiftColumn.find(top => top.ColIndex == shiftColumn.ColIndex);\r\n        if (shiftColIndexDetails != null) {\r\n            var loadDetails = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex][\"controls\"][\"Trips\"].value.length;\r\n            for (var i = 0; i < loadDetails; i++) {\r\n                var shiftLoadInfo = new ShiftLoadInfo();\r\n                if (this.selectedRowIndex == shiftColIndexDetails.ColIndex && this.selectedDefaultShiftIndex == this.SelectedShiftIndex) {\r\n                    if (this.selectedColIndex != i) {\r\n                        shiftLoadInfo.LoadIndex = i;\r\n                        this.initShiftLoad(shiftLoadInfo, i);\r\n                    }\r\n                }\r\n                else {\r\n                    shiftLoadInfo.LoadIndex = i;\r\n                    this.initShiftLoad(shiftLoadInfo, i);\r\n                }\r\n            }\r\n            let driverDetails = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex][\"controls\"][\"Drivers\"].value;\r\n            if (driverDetails) {\r\n                this.SelectedDriverName = $.map(driverDetails, function (obj) {\r\n                    return obj.Name\r\n                }).join(',');\r\n            }\r\n        }\r\n        if (this.ShiftLoad.length > 0) {\r\n            this.SelectedLoad = this.ShiftLoad[0];\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    subscribeTransferDSEvents(): void {\r\n        this.TrasnferDSSubscription = this.dataService.TransferDSInfoSubject.subscribe(x => {\r\n            if (x) {\r\n                this.TransferDS(x.jobId, x.trip, x.DrIndex, x.ShiftIndex, x.RowIndex, x.ColIndex, x.schedule);\r\n            }\r\n        });\r\n    }\r\n    initShiftLoad(shiftLoadInfo: any, i: number) {\r\n        if (i < 10) {\r\n            shiftLoadInfo.LoadName = \"0\" + (i + 1);\r\n        }\r\n        else {\r\n            shiftLoadInfo.LoadName = (i + 1).toString();\r\n        }\r\n        this.ShiftLoad.push(shiftLoadInfo);\r\n    }\r\n    subscribeTrailerInfoDSEvents(): void {\r\n        this.TrailerInfoDSSubscription = this.dataService.TrailerDSInfoSubject.subscribe(x => {\r\n            if (x) {\r\n                this.scheduleTrailerInfo = x;\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    subscribeTrailerRemoveDSEvents(): void {\r\n        this.RemoveTrailerGroupSubject = this.dataService.RemoveTrailerGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this._loadingRemoveTrailer = false;\r\n                this.changeDetectorRef.detectChanges();\r\n                //hide trailer information popup if no trailer found.\r\n                setTimeout(() => {\r\n                    if (this.scheduleTrailerInfo != null) {\r\n                        var scInfo = this.scheduleTrailerInfo.controls['Trips']['controls'][0];\r\n                        if (scInfo != null) {\r\n                            var schedule = this.SbForm.get('Shifts.' + scInfo.controls['ShiftIndex'].value + '.Schedules.' + scInfo.controls['DriverRowIndex'].value) as FormGroup;\r\n                            if (schedule != null) {\r\n                                if (schedule.controls['Trailers'].value.length == 0) {\r\n                                    $(\"#closeTrailerInformationModal\").click();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n    }\r\n    subscribeRouteInfoDSEvents(): void {\r\n        this.RouteInfoDSSubscription = this.dataService.RouteDetailsSubject.subscribe(x => {\r\n            if (x) {\r\n                this.SelectedTrip = x.SelectedTrip;\r\n                this.RouteListForTrip = x.RouteListForTrip;\r\n            }\r\n        });\r\n    }\r\n\r\n    UnAssignTrailerFromShift(schedule: any, type: any, trailerId: string = '') {\r\n        let data = {\r\n            schedule: schedule,\r\n            type: type,\r\n            trailerId: trailerId\r\n        }\r\n        this._loadingRemoveTrailer = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.unassignTrailerInformationSubject(data);\r\n    }\r\n    public deleteDrsForRoute(route: DropdownItem) {\r\n        this._loadingRemoveRoute = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setRouteResetGroupSubject(route);\r\n    }\r\n    public hideDeliveryGroup() {\r\n        this.dataService.setHideDeliveryGroupSubject(true);\r\n    }\r\n    subscribeRouteDeleteDeliveryGroupSubject(): void {\r\n        this.RouteDeleteDeliveryGroupSubject = this.dataService.RouteDeleteDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deleteRouteGroup(x);\r\n                this.changeDetectorRef.detectChanges();\r\n\r\n            }\r\n        });\r\n    }\r\n    deleteRouteGroup(routeDelete: any) {\r\n        var data = routeDelete.DelGroupForm;\r\n        this.routeInfo = routeDelete.routeName;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        if (data.get('GroupId').value != null && data.get('GroupId').value > 0) {\r\n            this._savingBuilder = true;\r\n            this.changeDetectorRef.detectChanges();\r\n            var delRequests = data.get('DeliveryRequests') as FormArray;\r\n            var scheduleIds;\r\n            if (this.routeInfo != null) {\r\n                scheduleIds = delRequests.value.filter(top => top.RouteInfo != null && top.RouteInfo.Id == this.routeInfo.Id).map(t => t.TrackableScheduleId);\r\n            }\r\n            else {\r\n                scheduleIds = delRequests.value.map(t => t.TrackableScheduleId)\r\n            }\r\n            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                this._savingBuilder = false;\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                        Declarations.msgerror(\"Can't delete/reset group. For one or more schedule(s) drop has been made already\", 'Warning', 2500);\r\n                        return;\r\n                    } else if (onTheWaySchedules.length > 0) {\r\n                        this.sbService.setConfirmationHeadingForDeleteGroup(onTheWaySchedules[0]);\r\n                        this.DeletedGroup = data;\r\n                        jQuery('#btnconfirm-delete-delgrp').click();\r\n                        return;\r\n                    } else {\r\n                        this.deleteRouteLoad(data);\r\n                    }\r\n                } else {\r\n                    this.deleteRouteLoad(data);\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            this.deleteRouteLoad(data);\r\n        }\r\n    }\r\n    deleteRouteLoad(trip: FormGroup) {\r\n        var delRequestIndex = [];\r\n        var tempDeliveryReq = [];\r\n        var delRequests = trip.controls['DeliveryRequests'] as FormArray;\r\n        delRequests.value.forEach(t => { t.WindowMode = 1; t.QueueMode = 1; t.Compartments = [] });\r\n        if (this.routeInfo != null) {\r\n            delRequests.controls.forEach((element: any) => {\r\n                var drRouteInfo = element.controls['RouteInfo'].value;\r\n                if (drRouteInfo != null && drRouteInfo.Id == this.routeInfo.Id) {\r\n                    tempDeliveryReq.push(element.value);\r\n                    delRequestIndex.push(element.controls['Id'].value);\r\n                }\r\n            });\r\n            if (delRequestIndex.length > 0) {\r\n                delRequestIndex.forEach(x => {\r\n                    var drIndex = delRequests.controls.findIndex(top => top.get('Id').value == x);\r\n                    if (drIndex >= 0) {\r\n                        delRequests.removeAt(drIndex);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        var tripId = trip.controls['TripId'].value;\r\n        if (tripId != null && tripId != undefined && tripId != '') {\r\n            var deliveryRequestsValue;\r\n            if (this.routeInfo != null) {\r\n                deliveryRequestsValue = tempDeliveryReq;\r\n            }\r\n            else {\r\n                deliveryRequestsValue = delRequests.value;\r\n            }\r\n            var dsbModel = this.getDSBSaveModel();\r\n            dsbModel.DeletedGroupId = trip.controls['GroupId'].value;\r\n            dsbModel.DeletedTripId = tripId;\r\n\r\n            let preloadInfo = this.getPreloadedInfoFromLoad(trip);\r\n            let preloadedTrips = this.getPrePostLoadedTrips(preloadInfo);\r\n            let postloadInfo = this.getPostloadedInfoFromLoad(trip);\r\n            let postloadedTrips = this.getPrePostLoadedTrips(postloadInfo);\r\n            dsbModel.PreloadedDRs = this.getPreloadAcrossTheDateInfoFromLoad(trip);\r\n            dsbModel.PostloadedDRs = this.getPostloadAcrossTheDateInfoFromLoad(trip);\r\n            if (this.routeInfo == null) {\r\n                delRequests.clear();\r\n            }\r\n            var schedule = this.SbForm.get('Shifts.' + trip.controls['ShiftIndex'].value + '.Schedules.' + trip.controls['DriverRowIndex'].value) as FormGroup;\r\n            trip.value.Drivers = schedule.controls['Drivers'].value;\r\n            trip.value.Trailers = schedule.controls['Trailers'].value;\r\n            if (this.routeInfo != null) {\r\n                let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n                var drForm = trip.controls['DeliveryRequests'] as FormArray;\r\n                let tripDeliveryRequests = drForm.value;\r\n                drForm.clear();\r\n                var _drFormArray = this.utilService.getDeliveryRequestFormArray(tripDeliveryRequests, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n                _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                    drForm.push(_drForm);\r\n                });\r\n                trip.value.DeliveryRequests = trip.controls['DeliveryRequests'].value;\r\n            }\r\n            dsbModel.Trips.push(trip.value);\r\n            dsbModel.Status = 4;\r\n\r\n            let tripArray = [];\r\n            tripArray.push(trip);\r\n            preloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n            postloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n\r\n            this._savingBuilder = true;\r\n            this.sbService.deleteGroup(dsbModel).subscribe(response => {\r\n                if (response != null) {\r\n                    if (response.StatusCode == 0 || response.StatusCode == 2) {\r\n                        let drsToRestore = deliveryRequestsValue.filter(t => !t.PostLoadedFor);\r\n                        this.dataService.setRestoreDeletedRequestSubject(drsToRestore);\r\n                        this.resetLoad(trip);\r\n                    }\r\n                    this.updateLoadForm(response, tripArray);\r\n                    if (this.routeInfo != null) {\r\n                        this.RouteListForTrip = [];\r\n                        let drValue = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n                        drValue.forEach(dr => {\r\n                            if (dr && dr.RouteInfo && dr.PostLoadedFor == undefined) {\r\n                                let drIndex = this.RouteListForTrip.findIndex(a => a.Id == dr.RouteInfo.Id);\r\n                                if (drIndex === -1) { this.RouteListForTrip.push(dr.RouteInfo); }\r\n                            }\r\n                        });\r\n                        if (this.RouteListForTrip.length == 0) {\r\n                            $(\"#closeResetDrByRouteModal\").click();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                }\r\n                this._savingBuilder = false;\r\n            });\r\n        } else {\r\n            this.RouteListForTrip = [];\r\n            var deliveryRequestsValue;\r\n            if (this.routeInfo != null) {\r\n                deliveryRequestsValue = tempDeliveryReq;\r\n            }\r\n            else {\r\n                deliveryRequestsValue = delRequests.value;\r\n            }\r\n            this.dataService.setRestoreDeletedRequestSubject(deliveryRequestsValue);\r\n            let drValue = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n            drValue.forEach(dr => {\r\n                if (dr && dr.RouteInfo && dr.PostLoadedFor == undefined) {\r\n                    let drIndex = this.RouteListForTrip.findIndex(a => a.Id == dr.RouteInfo.Id);\r\n                    if (drIndex === -1) { this.RouteListForTrip.push(dr.RouteInfo); }\r\n                }\r\n            });\r\n            if (this.RouteListForTrip.length == 0) {\r\n                $(\"#closeResetDrByRouteModal\").click();\r\n            }\r\n            this.resetLoad(trip);\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        }\r\n    }\r\n\r\n    public createLoad(x: any) {\r\n        if (x.IsDragFromLoad == true) {\r\n            this.DropDelReqToLoad(x.Schedule, x.Trip, x.DrData, x.Drs);\r\n            return;\r\n        }\r\n        if (x && x.Drs.length > 0) {\r\n            let drs = x.Drs as DeliveryRequestViewModel[];\r\n            var recurringDeliveryRequests = drs.filter(top => top.isRecurringSchedule == true && top.IsBlendedRequest == false);\r\n            recurringDeliveryRequests = recurringDeliveryRequests.filter((el, i, a) => i === a.indexOf(el));\r\n            var recurringBlendedDeliveryRequests = drs.filter(top => top.isRecurringSchedule == true && top.IsBlendedRequest == true);\r\n            recurringBlendedDeliveryRequests = recurringBlendedDeliveryRequests.filter((el, i, a) => i === a.indexOf(el));\r\n\r\n            var deliveryRequests = sortBy(drs.filter(top => top.isRecurringSchedule == false && top.GroupParentDRId == '' && (top.CarrierStatus == 0 || top.CarrierStatus == 3 || top.CarrierStatus == 4)), 'ProductType');\r\n            var brokeredDeliveryRequests = drs.filter(top => top.isRecurringSchedule == false && top.GroupParentDRId == '' && top.CarrierStatus == 2);\r\n            var splitDeliveryRequests = drs.filter(top => top.GroupParentDRId != '' && top.IsBlendedRequest === false);\r\n            var tbdDrs = deliveryRequests.filter(t => t.IsTBD == true);\r\n            var groupedDeliveryRequests = groupDrsByProduct(deliveryRequests.filter(t => t.IsTBD == false && t.IsBlendedRequest === false && t.IsMarine === false && !t.UniqueOrderNo));\r\n            var splitBlendedDeliveryRequests = drs.filter(top => top.GroupParentDRId != '' && top.IsBlendedRequest === true);\r\n            deliveryRequests.filter(t => (t.IsMarine === true || t.UniqueOrderNo != null) && t.GroupParentDRId == '' && t.IsTBD == false && t.IsBlendedRequest === false).forEach(x => {\r\n                groupedDeliveryRequests.push(x);\r\n            });\r\n            deliveryRequests.filter(t => t.IsBlendedRequest === true).forEach(x => {\r\n                if (!groupedDeliveryRequests.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                    var blendDrs = deliveryRequests.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                    blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                }\r\n            });\r\n            //recurring schedule blended DRs.\r\n            if (recurringBlendedDeliveryRequests.length > 0) {\r\n                recurringBlendedDeliveryRequests.forEach(x => {\r\n                    if (!groupedDeliveryRequests.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                        var blendDrs = recurringBlendedDeliveryRequests.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                        blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                        blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                        blendDrs.filter(b => b.IsAdditive).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    }\r\n                });\r\n            }\r\n            tbdDrs.forEach(x => {\r\n                groupedDeliveryRequests.push(x);\r\n            });\r\n            recurringDeliveryRequests.forEach(x => {\r\n                groupedDeliveryRequests.push(x);\r\n            });\r\n\r\n            if (groupedDeliveryRequests.length == 0) {\r\n                brokeredDeliveryRequests.forEach(x => {\r\n                    groupedDeliveryRequests.push(x);\r\n                });\r\n            }\r\n            if (groupedDeliveryRequests.length == 0) {\r\n                splitDeliveryRequests.forEach(x => {\r\n                    groupedDeliveryRequests.push(x);\r\n                });\r\n            }\r\n            splitBlendedDeliveryRequests.filter(t => t.IsBlendedRequest === true).forEach(x => {\r\n                if (!groupedDeliveryRequests.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                    var blendDrs = splitBlendedDeliveryRequests.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                    blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => b.IsAdditive).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                }\r\n            });\r\n            groupedDeliveryRequests.slice();\r\n            let drIds = deliveryRequests.filter(t => t.isRecurringSchedule == false && (t.CarrierStatus == 0 || t.CarrierStatus == 3 || t.CarrierStatus == 4)).map(m => m.Id);\r\n            var input = { jobId: x.JobId, regionId: x.RegionId, customer: x.Customer, deliveryReqs: groupedDeliveryRequests, existingDrIds: drIds };\r\n            this.sbService.getDeliveryReqDemands(input).subscribe(response => {\r\n                if (response == null) {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                }\r\n                else if (response.Status && response.Status.StatusCode != 0) {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                    Declarations.msgerror(response.Status.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    if (response.Data && response.Data.length > 0) {\r\n                        let isCommonPickup = x.Trip.get('IsCommonPickup').value as boolean;\r\n                        let IsDispatcherDragDropSequence = x.Trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n                        x.DrData.Data = new FormArray([]);\r\n                        x.DrData.Data = this.utilService.getDeliveryRequestFormArray(response.Data, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n                        x.Drs.forEach((req, i) => {\r\n                            if (response.Data.findIndex(t => t.Id == req.Id || (t.ProductTypeId == req.ProductTypeId\r\n                                && (t.CarrierStatus == 0 || t.CarrierStatus == 3 || t.CarrierStatus == 4))) == -1) {\r\n                                x.Drs.splice(i, 1);\r\n                            }\r\n                        })\r\n                        this.DropDelReqToLoad(x.Schedule, x.Trip, x.DrData, x.Drs);\r\n                        this.dataService.setDrUpdatedSubject(response.Data);\r\n                    }\r\n                    else {\r\n                        this._savingBuilder = false;\r\n                        this.changeDetectorRef.detectChanges();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //if all columns collapsed, then dont show shift\r\n    checkShiftVisibility(shift: FormGroup) {\r\n        const _schedules = shift.controls['Schedules'].value as any[];\r\n        if (_schedules.every(x => x.IsLoadQueueCollapsed == true))\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n    //collapse all columns of shift\r\n    moveShiftToLoadQueue(shiftIndex: number, shift: FormGroup) {\r\n\r\n        let data: DSBLoadQueueModel[] = [];\r\n        let _Schedules = shift.controls['Schedules'] as FormArray;\r\n\r\n        _Schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\r\n            //all columns (one shift) collapsed in client side\r\n            schedule.get('IsLoadQueueCollapsed').patchValue(true);\r\n            data.push({\r\n                Id: null,\r\n                RegionId: this.SbForm.get('RegionId').value,\r\n                ShiftIndex: shiftIndex,\r\n                Date: this.SbForm.get('Date').value,\r\n                DriverRowIndex: scheduleIndex,\r\n                ScheduleBuilderId: '',\r\n                ShiftId: shift.controls['Id'].value,\r\n            })\r\n        });\r\n\r\n        this.loadQueueService.setLoadQueueColumnMoved(true);\r\n        this.changeDetectorRef.markForCheck();\r\n        this.dataService.setDriverColumnChangeDetect(true);\r\n\r\n        //collapsed column data sent to api\r\n        this.loadQueueService.createLoadQueue(data).subscribe((data) => {\r\n            if (data && data.StatusCode == 0) {\r\n                if (data.DsbLoadQueueSuccess && data.DsbLoadQueueSuccess.length > 0) {\r\n                    _Schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\r\n                        schedule.get('LoadQueueId').patchValue(data.DsbLoadQueueSuccess[scheduleIndex].Id);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                Declarations.msgerror(\"Unable to collapse shift. Please try later.\", undefined, undefined);\r\n                //if api call fails, revert changes in client side\r\n                _Schedules.controls.forEach((schedule: FormGroup) => {\r\n                    schedule.get('IsLoadQueueCollapsed').patchValue(false);\r\n                });\r\n                this.loadQueueService.setLoadQueueColumnMoved(true);\r\n                this.changeDetectorRef.markForCheck();\r\n                this.dataService.setDriverColumnChangeDetect(true);\r\n            }\r\n        });\r\n    }\r\n    getLoadQueueNotifications() {\r\n        let refreshScheduleBuilder = false;\r\n        let dsbNotificationModel: DSBLoadQueueNotificationModel[] = [];\r\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\r\n        _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\r\n            let schedules = shift.controls['Schedules'] as FormArray;\r\n            schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\r\n                if (schedule.get('IsLoadQueueCollapsed').value && (schedule.get('LoadQueueColumnStatus').value == DSBLoadQueueStatus.New || schedule.get('LoadQueueColumnStatus').value == DSBLoadQueueStatus.InProgress)) {\r\n                    let dsbNotification = new DSBLoadQueueNotificationModel();\r\n                    dsbNotification.Date = this.SbForm.get('Date').value;\r\n                    dsbNotification.RegionId = this.SbForm.get('RegionId').value;\r\n                    dsbNotification.ScheduleBuilderId = this.SbForm.get('Id').value;\r\n                    dsbNotification.ShiftId = shift.get('Id').value;\r\n                    dsbNotification.ShiftIndex = shiftIndex;\r\n                    dsbNotification.DriverColIndex = scheduleIndex;\r\n                    dsbNotificationModel.push(dsbNotification);\r\n                }\r\n            });\r\n        });\r\n        if (dsbNotificationModel.length > 0) {\r\n            this.loadQueueService.getLoadQueueNotifications(dsbNotificationModel).subscribe(response => {\r\n                if (response.length > 0) {\r\n                    var publishColResponse = response.filter(x => x.Status == DSBLoadQueueStatus.Success);\r\n                    if (publishColResponse.length > 0) {\r\n                        publishColResponse.forEach(x => {\r\n                            var shift = this.SbForm.controls['Shifts']['controls'][x.ShiftIndex] as FormGroup;\r\n                            if (shift != null) {\r\n                                let schedule = shift.controls['Schedules']['controls'][x.DriverColIndex] as FormGroup;\r\n                                if (schedule != null) {\r\n                                    var trips = schedule.controls['Trips'] as FormArray;\r\n                                    for (var i = 0; i < trips.length; i++) {\r\n                                        var tripValue = trips.value[i];\r\n                                        this.setTripStatusToPublish(tripValue);\r\n                                    }\r\n                                    this.updateDsbLoadQueueForm(x.DSBSaveModel, trips);\r\n                                    schedule.get('LoadQueueColumnStatus').patchValue(DSBLoadQueueStatus.Success);\r\n                                    schedule.get('IsLoadQueueColumnBlocked').patchValue(false);\r\n                                    this.changeDetectorRef.detectChanges();\r\n                                }\r\n                                else {\r\n                                    refreshScheduleBuilder = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        var scheduleColResponse = response.filter(x => x.Status != DSBLoadQueueStatus.Success);\r\n                        if (scheduleColResponse.length > 0) {\r\n                            scheduleColResponse.forEach(x => {\r\n                                var shift = this.SbForm.controls['Shifts']['controls'][x.ShiftIndex] as FormGroup;\r\n                                if (shift != null) {\r\n                                    let schedule = shift.controls['Schedules']['controls'][x.DriverColIndex] as FormGroup;\r\n                                    if (schedule != null && schedule.get('LoadQueueColumnStatus').value != x.Status) {\r\n                                        schedule.get('LoadQueueColumnStatus').patchValue(x.Status);\r\n                                        if (x.Status == DSBLoadQueueStatus.Failed) {\r\n                                            schedule.get('IsLoadQueueColumnBlocked').patchValue(false);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            this.changeDetectorRef.detectChanges();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (refreshScheduleBuilder) {\r\n            Declarations.msgerror(\"Please refresh the schedule builder as load queue column(s) published successfully.\", undefined, undefined);\r\n        }\r\n    }\r\n    subscribeLoadQueueNotifications() {\r\n        interval(15000) //every 15 seconds\r\n            .pipe()\r\n            .subscribe(() => {\r\n                this.getLoadQueueNotifications();\r\n            });\r\n\r\n    }\r\n    updateDsbLoadQueueForm(data: DSBSaveModel, trip: any, isDateChange: boolean = false): void {\r\n        if (data == null) {\r\n            Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            return;\r\n        }\r\n        if (data.StatusCode == 0 || data.StatusCode == 2) {\r\n            this.droppedTrip = null;\r\n            this.draggedDelReqData = null;\r\n            this.setUnsavedChanges();\r\n            if (!isDateChange) {\r\n                this.SbForm.patchValue({\r\n                    Id: data.Id,\r\n                    TimeStamp: data.TimeStamp,\r\n                    Status: 0\r\n                });\r\n                if (data && data.Trips && data.Trips.length > 0) {\r\n                    if (trip instanceof FormGroup) {\r\n                        trip.patchValue(data.Trips[0]);\r\n                        var sIndex = trip.controls['ShiftIndex'].value;\r\n                        var rIndex = trip.controls['DriverRowIndex'].value;\r\n                        this.setAllowDriverChange(sIndex, rIndex);\r\n                        this.dataService.setSavedChangesSubject(trip.value);\r\n                    }\r\n                    else if (trip instanceof FormArray) {\r\n                        for (var i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip.controls[i] as FormGroup;\r\n                            var shiftId = thisTrip.controls['ShiftId'].value;\r\n                            var shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            var rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            var colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            var savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            if (savedTrip) {\r\n                                trip.controls[i].patchValue(savedTrip);\r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(trip.controls[i].value);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (var i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip[i] as FormGroup;\r\n                            var shiftId = thisTrip.controls['ShiftId'].value;\r\n                            var shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            var rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            var colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            var savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            if (savedTrip) {\r\n                                trip[i].patchValue(savedTrip);\r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(trip[i].value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n        }\r\n\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n    subscribeChangeDetectDsbLoadQueueNotification(): void {\r\n        this.DsbLoadQueueNotification = this.dataService.DsbQueueChangesForNotification.subscribe(x => {\r\n            if (x) {\r\n                this.subscribeLoadQueueNotifications();\r\n            }\r\n        });\r\n    }\r\n\r\n    private subscribeDriverColumnChangeDetect(): void {\r\n        this.DriverColCDRSubscription = this.dataService.DriverColumnChangeDetect.subscribe(x => {\r\n            if (x) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    initOptionalPickupForm(order: OrderPickupDetailModel): FormGroup {\r\n\r\n        let isTerminalPickup = order && order.PickupLocationType != 2;\r\n        let _pForm = this.fb.group({\r\n            SelectedFuelTypeDetails: this.fb.control([], [Validators.required]),\r\n            PickupLocationType: this.fb.control(order.PickupLocationType),\r\n            Terminal: this.utilService.getTerminalForm(null, isTerminalPickup),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, !isTerminalPickup),\r\n            BadgeNo1: this.fb.control(''),\r\n            BadgeNo2: this.fb.control(''),\r\n            BadgeNo3: this.fb.control('')\r\n        });\r\n        if (order != null || order != undefined) {\r\n            if (order.PickupLocationType != 2) {\r\n                _pForm.controls['Terminal'].patchValue({ Id: order.TerminalId, Name: order.TerminalName });\r\n            } else {\r\n                _pForm.controls['BulkPlant'].patchValue({\r\n                    Address: order.Address,\r\n                    City: order.City,\r\n                    State: { Id: order.StateId, Code: order.StateCode },\r\n                    Country: { Code: order.CountryCode },\r\n                    ZipCode: order.ZipCode,\r\n                    CountyName: order.CountyName,\r\n                    Latitude: order.Latitude,\r\n                    Longitude: order.Longitude,\r\n                    SiteName: order.BulkplantName\r\n                });\r\n            }\r\n        }\r\n        this.DGSubscription.add(_pForm.controls['PickupLocationType'].valueChanges.subscribe(x => { this.LocationType = x; }));\r\n        return _pForm;\r\n    }\r\n    private subscribeOptionalPickupLocationChange(): void {\r\n        this.DGSubscription.add(this.PickupForm.controls['PickupLocationType'].valueChanges.subscribe((data) => {\r\n            this.PickupForm.markAllAsTouched;\r\n            this.PickupForm.markAsDirty();\r\n            this.setPickupValidators_(this.PickupForm, data);\r\n        }));\r\n    }\r\n    setPickupValidators_(form: FormGroup, pickupType: number): void {\r\n        if (pickupType != 2) {\r\n            this.setBulkPlantValidators_(form, false);\r\n            this.setTerminalValidators_(form, true);\r\n        } else {\r\n            this.setTerminalValidators_(form, false);\r\n            this.setBulkPlantValidators_(form, true);\r\n        }\r\n    }\r\n    setBulkPlantValidators_(form: FormGroup, required: boolean) {\r\n        form.get('BulkPlant.Address').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n        form.get('BulkPlant.City').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n        form.get('BulkPlant.State.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n        form.get('BulkPlant.Country.Code').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n        form.get('BulkPlant.ZipCode').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        form.get('BulkPlant.CountyName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        form.get('BulkPlant.Latitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        form.get('BulkPlant.Longitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n        form.get('BulkPlant.SiteName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n    }\r\n    setTerminalValidators_(form: FormGroup, required: boolean) {\r\n        form.get('Terminal.Name').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Name').updateValueAndValidity();\r\n        form.get('Terminal.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Id').updateValueAndValidity();\r\n    }\r\n    onTerminalSelected_(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n    }\r\n    onBulkPlantSelected_(event: any): void {\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress_(event.Name);\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n    onBulkPlantSearched_(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n    onBulkPlantBlur_(event: any): void {\r\n        if (this.BulkPlants.filter(t => t.Name && t.Name.toLowerCase() == event.target.value.toLowerCase()).length > 0) {\r\n            let bulkPlant = this.BulkPlants.find(t => t.Name.toLowerCase() == event.target.value.toLowerCase());\r\n            this.PickupForm.get('BulkPlant.SiteName').setValue(bulkPlant.Name);\r\n            this.PickupForm.get('BulkPlant.SiteId').setValue(bulkPlant.Id);\r\n            this.getBulkPlantAddress_(bulkPlant.Name);\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n    getBulkPlantAddress_(bulkPlantName: string) {\r\n        this.DGSubscription.add(this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: response.State,\r\n                Country: { Code: response.Country.Code, Id: response.Country.Id, Name: response.CountyName },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n        }));\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n    private unsubscribeAllDGSubscriptions(): void {\r\n        if (this.DGSubscription) {\r\n            this.DGSubscription.unsubscribe();\r\n        }\r\n    }\r\n    onFuelTypeSelect(item: any) {\r\n        this.SelectedFuelTypeDetails = this.PickupForm.get('SelectedFuelTypeDetails').value;\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, this.SelectedFuelTypeDetails.map(x => x.Id));\r\n    }\r\n    onFuelTypeDeSelect(item: any) {\r\n        this.SelectedFuelTypeDetails = this.PickupForm.get('SelectedFuelTypeDetails').value;\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, this.SelectedFuelTypeDetails.map(x => x.Id));\r\n    }\r\n    onFuelTypeSelectAll(items: any): void {\r\n        this.SelectedFuelTypeDetails = items;\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, this.SelectedFuelTypeDetails.map(x => x.Id));\r\n    }\r\n    onFuelTypeDeSelectAll(): void {\r\n        this.SelectedFuelTypeDetails = [];\r\n        this.PickupForm.get('SelectedFuelTypeDetails').setValue([]);\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, []);\r\n    }\r\n    addOptionalPickupLocation() {\r\n        if (this.PickupForm.valid) {\r\n            let xNumber = this.OptionalPickupLocationInfo.length;\r\n            this.SelectedFuelTypeDetails.forEach(x => {\r\n                let isDuplicateRecord = false;\r\n                if (this.PickupForm.get('PickupLocationType').value == 1) {\r\n                    let TfxTerminal = this.PickupForm.get('Terminal').get('Name').value as DropdownItem;\r\n                    let optionalPickupIndex = this.OptionalPickupLocationInfo.findIndex(x1 => x1.TfxFuelTypeId == x.Id && x1.DSBPickupLocationInfo.PickupLocationType == 1 && x1.DSBPickupLocationInfo.TfxTerminal.Id == TfxTerminal.Id);\r\n                    if (optionalPickupIndex >= 0) {\r\n                        isDuplicateRecord = true;\r\n                    }\r\n                }\r\n                else {\r\n                    let TfxBulkPlant = this.PickupForm.get('BulkPlant').value as DropAddressModel\r\n                    let optionalPickupIndex = this.OptionalPickupLocationInfo.findIndex(x1 => x1.TfxFuelTypeId == x.Id && x1.DSBPickupLocationInfo.PickupLocationType == 2 && x1.DSBPickupLocationInfo.TfxBulkPlant.SiteName == TfxBulkPlant.SiteName);\r\n                    if (optionalPickupIndex >= 0) {\r\n                        isDuplicateRecord = true;\r\n                    }\r\n                }\r\n                if (!isDuplicateRecord) {\r\n                    xNumber = xNumber + 1;\r\n                    let pickupModel = new OptionalPickupDetailModel();\r\n                    pickupModel.incId = xNumber;\r\n                    pickupModel.isAdded = 1;\r\n                    pickupModel.Id = '';\r\n                    pickupModel.RegionId = this.OptionalPickupRegionId;\r\n                    pickupModel.ScheduleBuilderId = this.OptionalPickupScheduleBuilderId;\r\n                    pickupModel.ShiftId = this.OptionalPickupShiftId;\r\n                    pickupModel.ShiftIndex = this.OptionalPickupShiftIndex;\r\n                    pickupModel.ShiftOrderNumber = this.OptionalPickupShiftOrderNo;\r\n                    pickupModel.DriverColIndex = this.OptionalPickupDriverColIndex;\r\n                    pickupModel.TfxFuelTypeId = x.Id;\r\n                    pickupModel.TfxFuelTypeName = x.Name;\r\n                    pickupModel.DSBPickupLocationInfo.PickupLocationType = this.PickupForm.get('PickupLocationType').value;\r\n                    if (pickupModel.DSBPickupLocationInfo.PickupLocationType == 1) {\r\n                        pickupModel.DSBPickupLocationInfo.TfxTerminal = this.PickupForm.get('Terminal').get('Name').value as DropdownItem;\r\n                    }\r\n                    else {\r\n                        pickupModel.DSBPickupLocationInfo.TfxBulkPlant = this.PickupForm.get('BulkPlant').value as DropAddressModel;\r\n                    }\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNo1 = this.PickupForm.get('BadgeNo1').value;\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNo2 = this.PickupForm.get('BadgeNo2').value;\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNo3 = this.PickupForm.get('BadgeNo3').value;\r\n                    var BadgeNoInfo = [pickupModel.DSBPickupLocationInfo.BadgeNo1, pickupModel.DSBPickupLocationInfo.BadgeNo2, pickupModel.DSBPickupLocationInfo.BadgeNo3];\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNoInfo = BadgeNoInfo.filter(Boolean).join(',');\r\n                    if (this.OptionPickupScheduleGroup.controls['Drivers']['controls'].length > 0) {\r\n                        pickupModel.DriverId = this.OptionPickupScheduleGroup.controls['Drivers'][\"controls\"][0][\"controls\"][\"Id\"].value;\r\n                    }\r\n                    this.OptionalPickupLocationInfo.push(pickupModel);\r\n                }\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n            this.resetPickupForm();\r\n        }\r\n    }\r\n    resetPickupForm() {\r\n        this.PickupForm.get('SelectedFuelTypeDetails').setValue([]);\r\n        this.PickupForm.get('PickupLocationType').setValue(1);\r\n        this.PickupForm.get('Terminal').setValue({\r\n            Id: 0,\r\n            Name: ''\r\n        });\r\n        this.PickupForm.get('BulkPlant').setValue({\r\n            Address: '',\r\n            City: '',\r\n            State: { Id: 0, Code: '' },\r\n            Country: { Id: 0, Code: '' },\r\n            CountryGroup: { Id: 0, Code: '' },\r\n            ZipCode: '',\r\n            CountyName: '',\r\n            Latitude: '',\r\n            Longitude: '',\r\n            SiteName: '',\r\n            SiteId: ''\r\n        });\r\n        this.PickupForm.get('BadgeNo1').setValue('');\r\n        this.PickupForm.get('BadgeNo2').setValue('');\r\n        this.PickupForm.get('BadgeNo3').setValue('');\r\n    }\r\n    getBulkPlanDetails() {\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => this.StateList = x);\r\n        }\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n        if (!this.BulkPlants || this.BulkPlants.length == 0) {\r\n            this.addresService.getBulkPlants('').subscribe(data => {\r\n                this.BulkPlants = data.slice();\r\n                this.BulkplantList = data;\r\n            });\r\n        }\r\n\r\n    }\r\n    setStateCode_(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n    addressMapper_(data: any): AddressModel {\r\n        let state = this.StateList.find(x => x.Code == data.StateCode);\r\n        let country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        let _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n    getAddressByZip_(event: any): void {\r\n        let zipCode = event.target.value;\r\n\r\n        if (RegExConstants.UsaZip.test(zipCode) || RegExConstants.CanZip.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.DGSubscription.add(this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        let addressModel = this.addressMapper_(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: { Code: addressModel.Country.Code },\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n                    }\r\n                    this.changeDetectorRef.detectChanges();\r\n                }));\r\n        }\r\n    }\r\n    getTerimalDetails(orderIds: number[], fuelTypeIds: number[]) {\r\n        this._loadingOptionTerminal = true;\r\n        this.DGSubscription.add(this.sbService.getOptioanlPickupTerminals(orderIds, fuelTypeIds, '').subscribe((data: DropdownItem[]) => {\r\n            this._loadingOptionTerminal = false;\r\n            this.Terminals = data;\r\n            this.changeDetectorRef.detectChanges();\r\n        }));\r\n    }\r\n    subscribeOptionPickupEvents(): void {\r\n        this.OptionalPickupSubscription = this.dataService.OptionalPickupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.OptionPickupScheduleGroup = x.scheduleInfo;\r\n                this.OptionalPickupShiftIndex = x.shiftIndex;\r\n                this.OptionalPickupDriverColIndex = x.ColIndex;\r\n                this.OptionalPickupShiftId = x.ShiftId;\r\n                this.OptionalPickupRegionId = x.RegionId;\r\n                this.OptionalPickupScheduleBuilderId = x.ScheduleBuilderId;\r\n                this.OptionalPickupShiftOrderNo = x.shiftOrderNo;\r\n                this.OptionalPickupLocationInfo = [];\r\n                this.OrderFuelDetails = [];\r\n                this.SelectedFuelTypeDetails = [];\r\n                this.OptionPickupOrderIds = [];\r\n                this.FuelTypeDetails = [];\r\n                this.OptionalPickupLocationDeleteInfo = null;\r\n                this.PickupForm.get('SelectedFuelTypeDetails').setValue([]);\r\n                this.PickupForm.get('PickupLocationType').setValue(1);\r\n                this.PickupForm.get('Terminal').setValue({ Id: 0, Name: \"\" });\r\n                var BulkPlantForm = {\r\n                    Address: '',\r\n                    City: '',\r\n                    State: { Id: 0, Code: '' },\r\n                    Country: { Id: 0, Code: '' },\r\n                    CountryGroup: { Id: 0, Code: '' },\r\n                    ZipCode: '',\r\n                    CountyName: '',\r\n                    Latitude: '',\r\n                    Longitude: '',\r\n                    SiteName: '',\r\n                    SiteId: ''\r\n                };\r\n                this.PickupForm.get('BulkPlant').setValue(BulkPlantForm);\r\n                this.PickupForm.get('BadgeNo1').setValue('');\r\n                this.PickupForm.get('BadgeNo2').setValue('');\r\n                this.PickupForm.get('BadgeNo3').setValue('');\r\n                if (x.FuelTypeInfo != null) {\r\n                    var orderInfo = x.FuelTypeInfo as OrderFuelInfo;\r\n                    if (orderInfo.StatusCode == 0) {\r\n                        this.OrderFuelDetails = orderInfo.OrderFuelDetails;\r\n                        orderInfo.OrderFuelDetails.forEach(x => {\r\n                            this.OptionPickupOrderIds.push(x.OrderId);\r\n                            x.FuelTypeDetails.forEach(xItem => {\r\n                                var fuelIndex = this.FuelTypeDetails.findIndex(x => x.Id == xItem.Id);\r\n                                if (fuelIndex == -1) {\r\n                                    var fuelDetails = new DropdownItem();\r\n                                    fuelDetails.Id = xItem.Id;\r\n                                    fuelDetails.Name = xItem.Name;\r\n                                    this.FuelTypeDetails.push(fuelDetails);\r\n                                }\r\n                            });\r\n                        });\r\n                        this.getBulkPlanDetails();\r\n                        this.getOptionalPickupInfo(x, x.scheduleInfo);\r\n                    }\r\n                    this._loadingOptionTerminal = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n                else {\r\n                    this._loadingOptionTerminal = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    submitOptionalPickupLocation() {\r\n        if (this.OptionalPickupLocationInfo.length > 0) {\r\n            this._loadingOptionTerminal = true;\r\n            this.sbService.addOptionalPickup(this.OptionalPickupLocationInfo).subscribe((data: any) => {\r\n                this._loadingOptionTerminal = false;\r\n                if (data.StatusCode == 0) {\r\n                    $(\"#optional-pickup-location\").click();\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    //carrier assignmnet\r\n    isDrExistInShift(_schedules: FormArray) {\r\n        let schedules = _schedules.value as any[] || [];\r\n        return schedules.some(schedule => schedule.Trips.some(trip => trip.DeliveryRequests.length > 0));\r\n    }\r\n    isAllShiftDrSelected(_schedules: FormArray) {\r\n        let schedules = _schedules.value as any[] || [];\r\n        return schedules.every(schedule => schedule.Trips.every(trip => trip.DeliveryRequests.every(dr => dr.IsSelectedForAssignment == true)));\r\n    }\r\n    shiftSelectedForCarrierAssignment(event, _schedules: FormArray) {\r\n        _schedules.controls.forEach((schedule: FormControl) => {\r\n            let trips = schedule['controls']['Trips'] as FormArray;\r\n            trips.controls.forEach((trip: FormControl) => {\r\n                let drs = trip['controls']['DeliveryRequests'] as FormArray;\r\n                drs.controls.forEach((drForm: FormControl) => {\r\n                    if (drForm.get('IsSelectedForAssignment').value != event.target.checked) {\r\n                        drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n    getOptionalPickupInfo(x: any, scheduleInfo: any) {\r\n        this._loadingOptionTerminal = true;\r\n        this.OptionalPickupLocationInfo = [];\r\n        var optionalPickupModel = new OptionalPickupDetailModel();\r\n        optionalPickupModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n        optionalPickupModel.ShiftId = x.ShiftId;\r\n        optionalPickupModel.DriverColIndex = x.ColIndex;\r\n        this.sbService.getOptionalPickup(optionalPickupModel).subscribe(response => {\r\n            this._loadingOptionTerminal = false;\r\n            if (response != null) {\r\n                response.forEach(x1 => {\r\n                    var BadgeNoInfo = [x1.DSBPickupLocationInfo.BadgeNo1, x1.DSBPickupLocationInfo.BadgeNo2, x1.DSBPickupLocationInfo.BadgeNo3];\r\n                    x1.DSBPickupLocationInfo.BadgeNoInfo = BadgeNoInfo.filter(Boolean).join(',');\r\n                    x1.ShiftOrderNumber = x.shiftOrderNo;\r\n                    if (scheduleInfo.controls['Drivers']['controls'].length > 0) {\r\n                        x1.DriverId = scheduleInfo.controls['Drivers'][\"controls\"][0][\"controls\"][\"Id\"].value;\r\n                    }\r\n                    this.OptionalPickupLocationInfo.push(x1);\r\n                });\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n\r\n    }\r\n    deleteOptionPickup(optionalPickup: OptionalPickupDetailModel) {\r\n        let enrouteInProgress = [3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\r\n        let IsDSCompleted = false;\r\n        let IsDSProgress = false;\r\n        if (optionalPickup != null) {\r\n            if (optionalPickup.Id != '') {\r\n                this._loadingOptionTerminal = true;\r\n                let OrderIds = [];\r\n                this.OrderFuelDetails.forEach(x => {\r\n                    if (x.FuelTypeDetails.findIndex(x => x.Id == optionalPickup.TfxFuelTypeId) >= 0) {\r\n                        if (OrderIds.findIndex(x1 => x1 == x.OrderId) == -1) {\r\n                            OrderIds.push(x.OrderId);\r\n                        }\r\n                    }\r\n                });\r\n                if (OrderIds.length > 0) {\r\n                    let trips = this.OptionPickupScheduleGroup['controls']['Trips'] as FormArray;\r\n                    trips.controls.forEach((trip: FormControl) => {\r\n                        let drs = trip['controls']['DeliveryRequests'] as FormArray;\r\n                        if (drs.controls.length > 0) {\r\n                            drs.controls.forEach((drForm: FormControl) => {\r\n                                if (!IsDSCompleted && !IsDSProgress) {\r\n                                    var OrderId = drForm.get('OrderId').value;\r\n                                    var StatusClassId = drForm.get('StatusClassId').value;\r\n                                    if (StatusClassId == 4 || StatusClassId == 5)\r\n                                        if (OrderIds.findIndex(x => x == OrderId) >= 0) {\r\n                                            IsDSCompleted = true;\r\n                                            return false;\r\n                                        }\r\n                                    if (enrouteInProgress.findIndex(x => x == StatusClassId) >= 0) {\r\n                                        this.OptionalPickupLocationDeleteInfo = optionalPickup;\r\n                                        IsDSProgress = true;\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n                if (!IsDSCompleted && !IsDSProgress) {\r\n                    var findIndex = this.OptionalPickupLocationInfo.findIndex(x => x.incId == optionalPickup.incId);\r\n                    if (findIndex >= 0) {\r\n                        this.OptionalPickupLocationInfo.splice(findIndex, 1);\r\n                    }\r\n                    this.sbService.deleteOptionalPickup(optionalPickup.Id, optionalPickup.DriverId).subscribe(x => {\r\n                        this._loadingOptionTerminal = false;\r\n                        if (x != null && x.StatusCode == 0) {\r\n                            Declarations.msgsuccess(x.StatusMessage, undefined, undefined);\r\n                        }\r\n                        else {\r\n                            Declarations.msgerror(x.StatusMessage, undefined, undefined);\r\n                        }\r\n                        this.changeDetectorRef.detectChanges();\r\n                    });\r\n                }\r\n                else {\r\n                    this._loadingOptionTerminal = false;\r\n                    if (IsDSProgress) {\r\n                        $(\"#btn-inprogress-onthewayoptionpickup\").click();\r\n                    }\r\n                    else {\r\n                        $(\"#btn-completed-optionpickup\").click();\r\n                    }\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            }\r\n            else {\r\n                var findIndex = this.OptionalPickupLocationInfo.findIndex(x => x.incId == optionalPickup.incId);\r\n                if (findIndex >= 0) {\r\n                    this.OptionalPickupLocationInfo.splice(findIndex, 1);\r\n                }\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n\r\n        }\r\n    }\r\n    deleteOptionalPickupNo() {\r\n        this.OptionalPickupLocationDeleteInfo = null;\r\n    }\r\n    deleteOptionalPickupYes() {\r\n        if (this.OptionalPickupLocationDeleteInfo != null) {\r\n            var findIndex = this.OptionalPickupLocationInfo.findIndex(x => x.incId == this.OptionalPickupLocationDeleteInfo.incId);\r\n            if (findIndex >= 0) {\r\n                this.OptionalPickupLocationInfo.splice(findIndex, 1);\r\n            }\r\n            this.sbService.deleteOptionalPickup(this.OptionalPickupLocationDeleteInfo.Id, this.OptionalPickupLocationDeleteInfo.DriverId).subscribe(x => {\r\n                if (x != null && x.StatusCode == 0) {\r\n                    Declarations.msgsuccess(x.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(x.StatusMessage, undefined, undefined);\r\n                }\r\n                $(\"#btn-completed-onthewayoptionpickup\").click();\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n    setDRPickupValidators(form: FormGroup): void {\r\n        form.get('BulkPlant.Address').setValidators(null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n        form.get('BulkPlant.City').setValidators(null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n        form.get('BulkPlant.State.Id').setValidators(null);\r\n        form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n        form.get('BulkPlant.Country.Code').setValidators(null);\r\n        form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n        form.get('BulkPlant.ZipCode').setValidators(null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        form.get('BulkPlant.CountyName').setValidators(null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        form.get('BulkPlant.Latitude').setValidators(null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        form.get('BulkPlant.Longitude').setValidators(null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n        form.get('BulkPlant.SiteName').setValidators(null);\r\n        form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n        form.get('Terminal.Name').setValidators(null);\r\n        form.get('Terminal.Name').updateValueAndValidity();\r\n        form.get('Terminal.Id').setValidators(null);\r\n        form.get('Terminal.Id').updateValueAndValidity();\r\n    }\r\n    private subscribeShowScheduleBuilderLoadingSubject(): void {\r\n        let subs = this.dataService.IsScheduleBuilderSubject.subscribe(x => {\r\n            if (x != null && x != undefined) {\r\n                if (x) {\r\n                    this._savingBuilder = true;\r\n                }\r\n                else {\r\n                    this._savingBuilder = false;\r\n                }\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n\r\n        });\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    get getTrailerByIdFrolList() {\r\n        return this.UnassignedTrailers.reduce((prev, curr) => {\r\n            prev[curr.Id] = curr;\r\n            return prev;\r\n        }, {});\r\n    }\r\n    hoveredTrailer: TrailerViewModel = new TrailerViewModel();\r\n    bindRetainInfo(id: string) {\r\n        this.hoveredTrailer = this.getTrailerByIdFrolList[id];\r\n    }\r\n    subscribeCancelScheduleEvents(): void {\r\n        this.CancelEntireRowSubscription = this.dataService.CancelEntireRowSubject.subscribe(x => {\r\n            if (x) {\r\n                this.CancelDSScheduleLoadInfo = null;\r\n                let cancelDSinfo = { ShiftIndex: x.ShiftIndex, ScheduleIndex: x.ScheduleIndex };\r\n                this.cancelDSScheduleInfo = cancelDSinfo;\r\n                $(\"#btn-cancel-ds\").click();\r\n\r\n            }\r\n        });\r\n    }\r\n    unsubscribeCancelScheduleEvents(): void {\r\n        if (this.CancelEntireRowSubscription) {\r\n            this.CancelEntireRowSubscription.unsubscribe();\r\n        }\r\n    }\r\n    cancelRowPublish(shiftIndex: number, rowIndex: number): void {\r\n        let schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        this.cancelEntireRow(schedule, shiftIndex, rowIndex, trips);\r\n    }\r\n    cancelEntireRow(schedule: FormGroup, shiftIndex: number, rowIndex: number, trips: FormArray): void {\r\n        var validTrips = [];\r\n        for (var i = 0, j = 1; i < trips.length; i++, j++) {\r\n            let thisTrip = trips.controls[i] as FormGroup;\r\n            if (thisTrip && (thisTrip.valid || this.validatePublishLoad(thisTrip))) {\r\n                if (thisTrip.get('DeliveryRequests').value.length > 0) {\r\n                    validTrips.push(i);\r\n                }\r\n            }\r\n        }\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var drivers = schedule.controls['Drivers'].value;\r\n        var trailers = schedule.controls['Trailers'].value;\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var tripValue = trips.value[i];\r\n            if (validTrips.includes(tripValue.DriverColIndex)) {\r\n                this.setTripStatusToCancel(tripValue);\r\n            }\r\n            dsbModel.Trips.push(tripValue);\r\n        }\r\n        dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers, t.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value });\r\n        dsbModel.Status = 3;\r\n        if (dsbModel.Trips.length > 0) {\r\n            this.sbService.CancelDriverSchedule(dsbModel).subscribe(data => {\r\n                this._savingBuilder = false;\r\n                this.updateLoadForm(data, trips);\r\n            });\r\n        }\r\n        else {\r\n            this._savingBuilder = false;\r\n        }\r\n    }\r\n    setTripStatusToCancel(trip: any) {\r\n        this.setTripStatus(trip);\r\n        this.setDeliveryGroupStatus(trip, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(trip, DeliveryReqStatus.ScheduleCreated);\r\n    }\r\n    public cancelDriverSchedule() {\r\n        if (Object.keys(this.cancelDSScheduleInfo).length > 0) {\r\n            this.cancelRowPublish(this.cancelDSScheduleInfo.ShiftIndex, this.cancelDSScheduleInfo.ScheduleIndex);\r\n        }\r\n        else if (Object.keys(this.CancelDSScheduleLoadInfo).length > 0) {\r\n            this.cancelDSScheduleBuilder(this.CancelDSScheduleLoadInfo.shiftIndex, this.CancelDSScheduleLoadInfo.rowIndex, this.CancelDSScheduleLoadInfo.colIndex, this.CancelDSScheduleLoadInfo.schedule, this.CancelDSScheduleLoadInfo.trip);\r\n        }\r\n    }\r\n    public rejectDriverSchedule() {\r\n        this.cancelDSScheduleInfo == null;\r\n        this.CancelDSScheduleLoadInfo = null;\r\n    }\r\n    subscribeCancelDSDeliveryGroupSubject(): void {\r\n        this.CancelDSDeliveryGroupSubscription = this.dataService.CancelDSDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.cancelDSScheduleInfo == null;\r\n                $(\"#btn-cancel-ds\").click();\r\n                this.CancelDSScheduleLoadInfo = { shiftIndex: x.shiftIndex, rowIndex: x.rowIndex, colIndex: x.colIndex, schedule: x.schedule, trip: x.trip };\r\n            }\r\n        });\r\n    }\r\n    cancelDSScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup): void {\r\n        if (trip != null && trip != undefined) {\r\n            if (trip.valid || this.validatePublishLoad(trip)) {\r\n                this.dataService.setShowDeliveryGroupSubject(false);\r\n                this.cancelDSLoadSave(i, j, k, schedule, trip);\r\n            }\r\n        }\r\n    }\r\n    cancelDSLoadSave(i: number, j: number, k: number, schedule: any, trip: FormGroup) {\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var tripValue = trip.value;\r\n        this.setTripStatus(tripValue);\r\n        this.setDeliveryGroupStatus(tripValue, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(tripValue, DeliveryReqStatus.ScheduleCreated);\r\n        tripValue.Drivers = schedule.get('Drivers').value;\r\n        tripValue.Trailers = schedule.get('Trailers').value;\r\n        tripValue.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value;\r\n        dsbModel.Trips.push(tripValue);\r\n        dsbModel.Status = 3;\r\n        this.sbService.CancelDriverSchedule(dsbModel).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadForm(data, trip);\r\n        });\r\n    }\r\n    subscribeCancelDeliveryGroupNormalGroupDSSubject(): void {\r\n        this.CancelDSDeliveryGroupNormalGroupDSSubject = this.dataService.CancelDSDeliveryGroupNormalGroupDSSubject.subscribe(x1 => {\r\n            if (x1) {\r\n                this.CancelDSInfo(x1);\r\n            }\r\n        });\r\n    }\r\n    subscribeCancelDSLocationGroupSubject(): void {\r\n        this.CancelDSLocationGroupSubscription = this.dataService.CancelDSLocationSubject.subscribe(x => {\r\n            if (x) {\r\n                this.GetCancelDS(x.jobId, x.trip, x.isTBD, x.TBDGroupId);\r\n            }\r\n        });\r\n    }\r\n    subscribeDispatcherLoadDragDropSubscription(): void {\r\n        this.DispatcherLoadDragDropSubscription = this.dataService.DispatcherLoadDragDropSubject.subscribe(x => {\r\n            if (x) {\r\n\r\n                let trip = this.SbForm.get('Shifts.' + x.trip.value.ShiftIndex + '.Schedules.' + x.trip.value.DriverRowIndex + '.Trips.' + x.trip.value.DriverColIndex) as FormGroup;\r\n                if (trip) {\r\n                    trip.controls['IsDispatcherDragDropSequence'].setValue(true);\r\n                    trip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n                    this._savingBuilder = true;\r\n                    let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                    let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n                    _drArray.clear();\r\n                    let DRsDetails = x.DRs as DeliveryRequestViewModel[];\r\n                    var _drFormArray = this.utilService.getDispatcherDeliveryRequestFormArray(DRsDetails, isCommonPickup, 0);\r\n                    _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                        _drArray.push(_drForm);\r\n                    });\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setScheduleChangeDetectSubject(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    subscribeDispatcherLoadDragDropMapSubscription(): void {\r\n        this.DispatcherLoadDragDropMapSubscription = this.dataService.DispatcherLoadDragDropMapSubject.subscribe(x => {\r\n            if (x) {\r\n\r\n                let trip = this.SbForm.get('Shifts.' + x.trip.value.ShiftIndex + '.Schedules.' + x.trip.value.DriverRowIndex + '.Trips.' + x.trip.value.DriverColIndex) as FormGroup;\r\n                if (trip) {\r\n                    this._savingBuilder = true;\r\n                    let sortedDRs = [];\r\n                    let LocationSeqInfo = x.JobIds as DispatcherMapSeq[];\r\n                    trip.controls['IsDispatcherDragDropSequence'].setValue(true);\r\n                    trip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n                    let deliveryRequests = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n                    if (LocationSeqInfo.length > 0) {\r\n                        LocationSeqInfo.forEach(x1 => {\r\n                            if (x1.IsTBD == false) {\r\n                                var drDetails = deliveryRequests.filter(x => x.JobId == x1.JobId);\r\n                                drDetails.forEach(x2 => {\r\n                                    sortedDRs.push(x2);\r\n                                });\r\n                            }\r\n                            else {\r\n                                var drDetails = deliveryRequests.filter(x => x.TBDGroupId == x1.TBDGroupId);\r\n                                drDetails.forEach(x2 => {\r\n                                    sortedDRs.push(x2);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                    let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                    let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n                    _drArray.clear();\r\n                    var _drFormArray = this.utilService.getDispatcherDeliveryRequestFormArray(sortedDRs, isCommonPickup, 0);\r\n                    _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                        _drArray.push(_drForm);\r\n                    });\r\n                    this.changeDetectorRef.markForCheck();\r\n                    if ((trip.controls['TripId'] != null || trip.controls['DeliveryRequests'].value.length > 0) && trip.controls['DeliveryGroupPrevStatus'].value != 2) {\r\n                        this.draftScheduleBuilder(trip);\r\n                    }\r\n                    else {\r\n                        var schedule = this.SbForm.get('Shifts.' + x.trip.value.ShiftIndex + '.Schedules.' + x.trip.value.DriverRowIndex) as FormGroup;\r\n                        if (schedule) {\r\n                            this.publishScheduleBuilder(x.trip.value.ShiftIndex, x.trip.value.DriverRowIndex, x.trip.value.DriverColIndex, schedule, trip);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    unsubscribeCancelLocationScheduleEvents(): void {\r\n        if (this.CancelDSLocationGroupSubscription) {\r\n            this.CancelDSLocationGroupSubscription.unsubscribe();\r\n        }\r\n    }\r\n    GetCancelDS(jobId: number, trip: FormGroup, isTBD: number, TBDGroupId: string) {\r\n        this.cancelDSDeliveryScheduleViewModel = [];\r\n        var isGroupDRs = false;\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filteredDRs = [];\r\n        if (isTBD == 0) {\r\n            filteredDRs = drs.filter(x => x.JobId == jobId && x.TrackableScheduleId > 0) as DeliveryRequestViewModel[];\r\n            if (filteredDRs.filter(x => x.GroupParentDRId != '' && x.GroupParentDRId != null).length > 0) {\r\n                isGroupDRs = true;\r\n            }\r\n        }\r\n        else {\r\n            filteredDRs = drs.filter(x => x.TBDGroupId == TBDGroupId && x.TrackableScheduleId > 0) as DeliveryRequestViewModel[];\r\n            if (filteredDRs.filter(x => x.GroupParentDRId != '' && x.GroupParentDRId != null).length > 0) {\r\n                isGroupDRs = true;\r\n            }\r\n        }\r\n        if (!isGroupDRs) {\r\n            if (filteredDRs.length > 0) {\r\n                //intialize the model.\r\n                this._savingBuilder = true;\r\n                let cancelDSDeliveryScheduleInfo = new CancelDSDeliveryScheduleInfo();\r\n                cancelDSDeliveryScheduleInfo.RegionId = this.SelectedRegionId;\r\n                cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules = [];\r\n                filteredDRs.forEach(x1 => {\r\n                    //normal DR\r\n                    let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n                    cancelDSDeliverySchedule.DeliveryReqId = x1.Id;\r\n                    cancelDSDeliverySchedule.IsSubDR = false;\r\n                    if (x1.PostLoadInfo != null) {\r\n                        cancelDSDeliverySchedule.IsPreLoadDR = true;\r\n                    }\r\n                    cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n                    //post load info\r\n                    if (x1.PostLoadInfo != null) {\r\n                        let cancelDSPostLoadDeliverySchedule = new CancelDSDeliverySchedule();\r\n                        cancelDSPostLoadDeliverySchedule.DeliveryReqId = x1.PostLoadInfo.DrId;\r\n                        cancelDSPostLoadDeliverySchedule.IsSubDR = false;\r\n                        cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSPostLoadDeliverySchedule);\r\n                    }\r\n                });\r\n                this.sbService.GetSubDRInfoCancelDS(cancelDSDeliveryScheduleInfo).subscribe(response => {\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.cancelDSDeliveryScheduleViewModel = response as CancelDSDeliveryScheduleViewModel[];\r\n                        this.cancelDSDeliveryScheduleViewModel.forEach(x1 => {\r\n                            x1.IsChecked = true;\r\n                        });\r\n                        $(\"#btn-cancel-location-ds\").click();\r\n                    }\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                });\r\n\r\n            }\r\n        }\r\n        else {\r\n            if (filteredDRs.length > 0) {\r\n                this._savingBuilder = true;\r\n                let cancelDSDeliveryScheduleInfo = new CancelDSDeliveryScheduleInfo();\r\n                cancelDSDeliveryScheduleInfo.RegionId = this.SelectedRegionId;\r\n                cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules = [];\r\n                filteredDRs.forEach(x => {\r\n                    let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n                    cancelDSDeliverySchedule.DeliveryReqId = x.Id;\r\n                    cancelDSDeliverySchedule.IsSubDR = false;\r\n                    cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n                    if (x.GroupParentDRId != '' && cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.findIndex(x1 => x1.DeliveryReqId == x.GroupParentDRId) == -1) {\r\n                        let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n                        cancelDSDeliverySchedule.DeliveryReqId = x.GroupParentDRId;\r\n                        cancelDSDeliverySchedule.IsSubDR = true;\r\n                        cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n                    }\r\n                });\r\n                this.sbService.GetSubDRInfoCancelDS(cancelDSDeliveryScheduleInfo).subscribe(response => {\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.cancelDSDeliveryScheduleViewModel = response as CancelDSDeliveryScheduleViewModel[];\r\n                        $(\"#btn-location-cancel-ds-info\").click();\r\n                    }\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    cancelLocationDriverSchedule() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true).length > 0) {\r\n            let cancelDSfinalInfo = this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true);\r\n            cancelDSfinalInfo.forEach(x => {\r\n                let delRequestCancelModel = new CancelDeliverySchedule();\r\n                delRequestCancelModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n                delRequestCancelModel.DeliveryReqId = x.DeliveryReqId;\r\n                delRequestCancelModel.DriverColIndex = x.DriverColIndex;\r\n                delRequestCancelModel.DriverId = x.DriverId;\r\n                delRequestCancelModel.DriverRowIndex = x.DriverRowIndex;\r\n                delRequestCancelModel.ShiftId = x.ShiftId;\r\n                delRequestCancelModel.ShiftIndex = x.ShiftIndex;\r\n                delRequestCancelModel.TrackableScheduleId = x.TrackableScheduleId;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            });\r\n            if (this.DeliveryReqCancelScheduleUpdateModel.length > 0) {\r\n                $(\"#cancelLocationDS\").click();\r\n                this._savingBuilder = true;\r\n                this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.CancelDSInfo(response);\r\n                        Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    CancelDSInfo(x1: any) {\r\n        var cancelDsData = x1 as CancelDeliverySchedule[];\r\n        cancelDsData.forEach(x => {\r\n            var scheduleBuilderId = this.SbForm.controls[\"Id\"].value;\r\n            if (scheduleBuilderId == x.ScheduleBuilderId) {\r\n                let trip = this.SbForm.get('Shifts.' + x.ShiftIndex + '.Schedules.' + x.DriverRowIndex + '.Trips.' + x.DriverColIndex) as FormGroup;\r\n                if (trip != null) {\r\n                    var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n                    if (deliveryRequests) {\r\n                        for (var j = 0; j < deliveryRequests.length; j++) {\r\n                            var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                            if (x.DeliveryReqId == deliveryRequest.controls[\"Id\"].value) {\r\n                                deliveryRequest.controls[\"ScheduleStatus\"].patchValue(x.ScheduleStatus);\r\n                                deliveryRequest.controls[\"TrackScheduleStatus\"].patchValue(x.TrackScheduleStatus);\r\n                                deliveryRequest.controls[\"TrackScheduleStatusName\"].patchValue(x.TrackScheduleStatusName);\r\n                                deliveryRequest.controls[\"StatusClassId\"].patchValue(x.StatusClassId);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n    public checkAllLocationDS() {\r\n        if ($(\"#selectAllLocationDSBGroupCancel\").is(\":checked\")) {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = true;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = false;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    public checkLocationDSChange(ele: number, ds: CancelDSDeliveryScheduleViewModel) {\r\n        var eleId = \"dsLocationCheck\" + ele;\r\n        var eleIdDom = $(\"#\" + eleId).is(\":checked\");\r\n        if (eleIdDom) {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = true;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = false;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    CancelSelectedLocationDS() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true).length > 0) {\r\n            let cancelDSfinalInfo = this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true);\r\n            cancelDSfinalInfo.forEach(x => {\r\n                let delRequestCancelModel = new CancelDeliverySchedule();\r\n                delRequestCancelModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n                delRequestCancelModel.DeliveryReqId = x.DeliveryReqId;\r\n                delRequestCancelModel.DriverColIndex = x.DriverColIndex;\r\n                delRequestCancelModel.DriverId = x.DriverId;\r\n                delRequestCancelModel.DriverRowIndex = x.DriverRowIndex;\r\n                delRequestCancelModel.ShiftId = x.ShiftId;\r\n                delRequestCancelModel.ShiftIndex = x.ShiftIndex;\r\n                delRequestCancelModel.TrackableScheduleId = x.TrackableScheduleId;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            });\r\n            if (this.DeliveryReqCancelScheduleUpdateModel.length > 0) {\r\n                $(\"#confirm-location-cancel-ds-dismiss\").click();\r\n                this._savingBuilder = true;\r\n                this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.CancelDSInfo(response);\r\n                        Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Select at least one DS for cancel schedule.\", 'Success', 2500);\r\n        }\r\n    }\r\n    deleteSingleLoad(dsbModel: ResetDeliveryGroupScheduleModel) {\r\n        dsbModel.ScheduleBuilderId = this.SbForm.get('Id').value;\r\n        this._savingBuilder = true;\r\n        this.sbService.deleteDeliverySchedule(dsbModel).subscribe(response => {\r\n            if (response != null) {\r\n                this._savingBuilder = false;\r\n            }\r\n            else {\r\n                Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            }\r\n            this._savingBuilder = false;\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        });\r\n    }\r\n    private sorDrByProductSequence(IsDispatcherDragDropSequence: boolean, drList: DeliveryRequestViewModel[]): DeliveryRequestViewModel[] {\r\n        drList = sortArrayTwice(drList, 'JobId', 'ProductSequence');\r\n        if (IsDispatcherDragDropSequence) {\r\n            drList = sortByKeyAsc(drList, 'DispatcherDragDropSequence');\r\n        }\r\n        return drList;\r\n    }\r\n    private logDRMaxFillIssue(trip: any) {\r\n        //log max fill validation issue.\r\n        var delRequests: DeliveryRequestViewModel[] = [];\r\n        var _thisDrArray = trip.get('DeliveryRequests') as FormArray;\r\n        _thisDrArray.controls.forEach((delReq: FormGroup) => {\r\n            if (delReq.invalid) {\r\n                var invalidctrls = CustomAbstractControls.findErrors(delReq);\r\n                if (invalidctrls.indexOf(\"RequiredQuantity\") > -1) {\r\n                    //call api for debug log.\r\n                    delRequests.push(delReq.value);\r\n\r\n                }\r\n            }\r\n        });\r\n        if (delRequests.length > 0) {\r\n            this.sbService.postValidateDRMaxFill(delRequests).subscribe(response => {\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"driver-column-view-container\" [formGroup]=\"SbForm\">\r\n    <ng-container [formArrayName]=\"'Shifts'\">\r\n        <div class=\"row flex-nowrap mx-0\" style=\"min-height: 92%;\">\r\n            <ng-container *ngFor=\"let shift of SbForm.controls['Shifts']['controls'];  let i = index; trackBy: trackByShiftId\">\r\n                <div *ngIf=\"checkShiftVisibility(shift);\">\r\n                    <div class=\"shift-view\" id=\"shift\" *ngIf=\"shift.controls['IsVisible'].value\">\r\n                        <ng-container [formGroupName]=\"i\">\r\n                            <div class=\"shift-info\">\r\n                                <span class=\"row-number mr5 fs12 mt1\">Shift {{shift.controls['OrderNo'].value+1}}</span>\r\n                                <i class=\"far fa-clock mr5\"></i> Shift - {{shift.controls['StartTime'].value}} - {{shift.controls['EndTime'].value}}\r\n                                <a (click)=\"moveShiftToLoadQueue(i, shift)\" *ngIf=\"disableControl==false\" placement=\"top\" ngbTooltip=\"Move Shift to Load Queue\" class=\"fs14 ml10 pointer\">\r\n                                    <i class=\"far fa-arrow-alt-circle-left\"></i>\r\n                                </a>\r\n                                <span class=\"mt2 ml5\">\r\n                                    <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value && isDrExistInShift(shift.controls['Schedules'])\"\r\n                                           type=\"checkbox\"\r\n                                           id=\"shift_{{i}}\"\r\n                                           name=\"shift_{{i}}\"\r\n                                           [checked]=\"isAllShiftDrSelected(shift.controls['Schedules'])\"\r\n                                           (change)=\"shiftSelectedForCarrierAssignment($event, shift.controls['Schedules'])\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"row flex-nowrap plr-5\" [formArrayName]=\"'Schedules'\" id=\"shift{{i+1}}\">\r\n                                <ng-container *ngFor=\"let schedule of shift.controls['Schedules'].controls; let j = index; let firstSchedule = first; let isLast=last; trackBy: trackByScheduleIndex\">\r\n                                    <ng-container [formGroupName]=\"j\">\r\n                                        <ng-container *ngIf=\"schedule && schedule.get('IsLoadQueueCollapsed').value != true\">\r\n                                            <app-driver-schedule-column-view [i]=\"i\" [j]=\"j\" [shiftOrderNo]=\"shift.controls['OrderNo'].value+1\" [ShiftId]=\"shift.controls['Id'].value\" [SbForm]=\"SbForm\" [schedule]=\"schedule\" [ScheduleLength]=\"shift.controls['Schedules'].controls.length\"></app-driver-schedule-column-view>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <div id=\"visibilityObserver{{i}}\" [attr.data-shiftIndex]=\"i\" style=\"height:5px; background: transparent;\"></div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <div *ngIf=\"SbForm.controls['Shifts']['controls'].length==0 && IsNoDriverShiftFound==0\" class=\"text-center shift-wrapper\">\r\n        <i class=\"fa fas fa-exclamation-triangle opacity8\"></i>\r\n        <label class=\"color-grey mb0 ml10\">No shifts available in this region</label>\r\n    </div>\r\n</div>\r\n<div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_savingBuilder\" style=\"position:fixed !important\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"driverTrailerModel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" [ngClass]=\"{' modal-sm': !IsTrailerExists}\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\" [formGroup]=\"DriverTrailerForm\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mt2 mb15 pt0 pb0\">{{IsTrailerExists ? 'Assign Driver / Trailers' : 'Assign Driver'}}</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"editDriverCancel()\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <input type=\"hidden\" formControlName=\"Index1\" />\r\n                <input type=\"hidden\" formControlName=\"Index2\" />\r\n                <input type=\"hidden\" formControlName=\"StartTime\" />\r\n                <input type=\"hidden\" formControlName=\"EndTime\" />\r\n                <input type=\"hidden\" formControlName=\"Compartments\" />\r\n                <input type=\"hidden\" formControlName=\"TrailerType\" />\r\n                <div id=\"dt-section\" *ngIf=\"!(_otherRegionDriverSubject | async) && !_publishedRequestExists\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-check form-check-inline pull-right\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsFilldCompatible\" (change)=\"toggleFilldCompatible();\" id=\"FilldCompatible\">\r\n                                <label class=\"form-check-label\" for=\"FilldCompatible\">TrueFill Inc. Compatible</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"(DriverTrailerForm.controls['IsIncludeAllRegionDriver'].value || (!UnassignedDrivers || UnassignedDrivers.length == 0)) && SbForm.get('IsDsbDriverSchedule').value\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-check form-check-inline pull-right\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsIncludeAllRegionDriver\" (change)=\"getDriverdetails();\" id=\"IncludeAllRegion\">\r\n                                <label class=\"form-check-label\" for=\"IncludeAllRegion\">Other Regions' Drivers</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6 form-group\" *ngIf=\"IsTrailerExists\">\r\n                            <label>Trailers</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Trailers\" [(ngModel)]=\"SelectedTrailers\" [placeholder]=\"'Select Trailers'\"\r\n                                                     [settings]=\"TrailerDdlSettings\" [data]=\"UnassignedTrailers||[]\" (onSelectAll)=\"onTrailerSelectAll($event)\"\r\n                                                     (onDeSelectAll)=\"onTrailerDeSelectAll()\">\r\n\r\n                                <ng-template #optionsTemplate let-item let-option=\"option\" let-id=\"id\" let-isSelected=\"isSelected\">\r\n                                    <div>\r\n                                        <label>\r\n                                            {{getTrailerByIdFrolList[id].TrailerId}}\r\n\r\n                                            <label *ngIf=\"getTrailerByIdFrolList[id].RetainFuel && getTrailerByIdFrolList[id].RetainFuel.length>0\"\r\n                                                   class=\"multiselect-letf-text\"\r\n                                                   placement=\"right\"\r\n                                                   [ngbPopover]=\"retain_popContent\"\r\n                                                   #p=\"ngbPopover\"\r\n                                                   container=\"body\"\r\n                                                   popoverClass=\"dsb-popover-retain\"\r\n                                                   (mouseenter)=\"p.open();bindRetainInfo(id);\"\r\n                                                   (mouseleave)=\"p.close();\">\r\n                                                ({{getTrailerByIdFrolList[id].RetainFuel.length}})\r\n                                            </label>\r\n                                        </label>\r\n                                    </div>\r\n                                </ng-template>\r\n\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"form-group\" [ngClass]=\"{' col-sm-12 ': !IsTrailerExists,' col-sm-6':IsTrailerExists }\">\r\n                            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingDrivers\">\r\n                                <span class='spinner-dashboard pa'></span>\r\n                            </div>\r\n                            <label>Driver</label>\r\n                            <select class=\"form-control\" formControlName=\"Driver\" id=\"scheduleDriver\">\r\n                                <option [value]=\"null\">Select Driver</option>\r\n                                <ng-container *ngFor=\"let driver Of UnassignedDrivers||[]\">\r\n                                    <option [value]=\"driver.Id\" [selected]=\"driver.Id == DriverTrailerForm.controls['Driver'].value\">\r\n                                        {{driver.Name}}\r\n                                    </option>\r\n                                </ng-container>\r\n                            </select>\r\n                            <span class=\"color-maroon\" *ngIf=\"DriverTrailerForm.controls['Driver'].errors && (DriverTrailerForm.controls['Driver'].touched ||\r\n                                  DriverTrailerForm.controls['Driver'].dirty)\">\r\n                                <span *ngIf=\"DriverTrailerForm.controls['Driver'].errors.required\">\r\n                                    Required.\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnDriverTrailerDismiss\" class=\"btn btn-lg\" data-dismiss=\"modal\" (click)=\"editDriverCancel()\">Cancel</button>\r\n                        <button type=\"button\" id=\"btnDriverTrailerUpdate\" class=\"btn btn-lg btn-primary\" (click)=\"checkOtherRegionDriver()\">\r\n                            Save &nbsp;\r\n                            <i *ngIf=\"(dataService.IsLoadingButtonSubject | async)\" class=\"fa fa-circle-o-notch fa-spin\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"dt-alert\" *ngIf=\"(_otherRegionDriverSubject | async)\">\r\n                    <label><b>{{SelectedDriverName}}</b> does not work in this shift. Do you really want to assign?</label>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnOtherRegionDriverNo\" class=\"btn btn-lg\" (click)=\"onOtherRegionDriverNo()\">No</button>\r\n                        <button type=\"button\" id=\"btnOtherRegionDriverYes\" class=\"btn btn-lg btn-primary\" (click)=\"onOtherRegionDriverYes()\">Yes</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"dt-alert\" *ngIf=\"_publishedRequestExists\">\r\n                    <label> Do you want to reflect this changes to already published group(s)?</label>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnPublishChangesNo\" class=\"btn btn-lg\" (click)=\"onPublishChangesNo()\">No</button>\r\n                        <button type=\"button\" id=\"btnPublishChangesYes\" class=\"btn btn-lg btn-danger\" (click)=\"onPublishChangesYes()\">Yes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btnconfirm-delete-delgrp\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-delete-delgrp\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-delgrp\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Driver is on the way to job.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"deleteLoadNo()\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteLoadYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-publish-delgrp\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-publish-delgrp\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-publish-delgrp\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"publishDelGrpHeading\">Driver is on the way to job.</p>\r\n                <div class=\"text-right mt10\">\r\n                    <button type=\"button\" (click)=\"publishLoadNo()\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"publishLoadYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" id=\"btnconfirm-dragdrop-dr\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-dragdrop-dr\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-dragdrop-dr\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDrHeading\">Changes will reflect for already published load(s).</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" (click)=\"dragDelReqToAnotherLoadNo()\">No</button>\r\n                    <button type=\"button\" (click)=\"dragDelReqToAnotherLoadYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Yes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"compartment-assigning\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper col-sm-12\">\r\n        <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingCmprts\"><span class=\"spinner-dashboard pa\"></span></div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-8 pt10\">\r\n                <a class=\"close-panel\" onclick=\"closeSlidePanel();\">\r\n                    <i class=\"fa fa-close fs18\"></i>\r\n                </a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">\r\n                    <ng-container *ngFor=\"let trailer of CompartmentEditModel.Schedule?.Trailers||[]; let isLast= last\">\r\n                        {{trailer.TrailerId}} <a (click)=\"TrailerRetainDetails(trailer.Id);\" title=\"Fuel Retain Details\" *ngIf=\"checkIfTrailerFuelRetainExists(trailer.Id)\"><i class=\"fa fa-info-circle color-maroon\"></i> </a> <span *ngIf=\"!isLast\">,</span>\r\n                    </ng-container> : <small>Assign products to compartments</small>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"compartment-wrapper\">\r\n            <div class=\"row\" *ngIf=\"CompartmentDetails.length>0\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"alert alert-warning pa5 pb0 mb0\">\r\n                        <h2 class=\"fs12 f-bold mb10 mt0\">There is some fuel retained in container <a class=\"fa fa-times color-maroon pull-right\" (click)=\"closeRetainInfo()\"></a></h2>\r\n                        <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                            <thead>\r\n                                <tr class=\"f-bold\">\r\n                                    <th>Compartment</th>\r\n                                    <th>Fuel Type</th>\r\n                                    <th>Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let compData of CompartmentDetails\">\r\n                                    <td>{{compData.CompartmentId}}</td>\r\n                                    <td>{{compData.ProductType}}</td>\r\n                                    <td>\r\n                                        {{compData.Quantity}}\r\n                                        <span *ngIf=\"compData.UOM==1\">G</span>\r\n                                        <span *ngIf=\"compData.UOM!=1\">L</span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row row-mlr5\" [formGroup]=\"CompartmentViewFormGroup\">\r\n                <ng-container [formArrayName]=\"'Trips'\">\r\n                    <ng-container *ngFor=\"let trip of CompartmentViewFormGroup.controls['Trips']['controls']; let i = index;\">\r\n                        <div class=\"col-sm-3 col-plr5 mb10\" [formGroupName]=\"i\">\r\n                            <div class=\"border pa5 shadow-b radius-5 mt10 mb15 full-height\">\r\n                                <div class=\"mt0 mb0 fs14\">\r\n                                    Load {{i+1}} -\r\n                                    <span class=\"opacity8\"><i class=\"far fa-clock\"></i></span>\r\n                                    <span class=\"ml5 mr5 opacity8\">{{trip.controls['StartTime'].value}}</span>\r\n                                </div>\r\n                                <input type=\"hidden\" formControlName=\"ShiftIndex\" />\r\n                                <input type=\"hidden\" formControlName=\"DriverRowIndex\" />\r\n                                <input type=\"hidden\" formControlName=\"DriverColIndex\" />\r\n                                <ng-container [formArrayName]=\"'DeliveryRequests'\">\r\n                                    <ng-container *ngFor=\"let dr of trip.controls['DeliveryRequests']['controls']; let j = index;\">\r\n                                        <div class=\"bg-lightgrey pa5 shadow-b radius-5\" [formGroupName]=\"j\">\r\n                                            <input type=\"hidden\" formControlName=\"RequiredQuantity\" [ValidateCompartmentsQuantity]=\"dr\" />\r\n                                            <h5 class=\"fs14\">\r\n                                                {{dr.controls['ProductType'].value}},\r\n                                                <span *ngIf=\"dr.controls['ScheduleQuantityType'].value==1\">{{dr.controls['RequiredQuantity'].value | number:'1.0-2'}} {{dr.controls['UoM'].value==1 ? 'G' : 'L'}}</span>\r\n                                                <span *ngIf=\"dr.controls['ScheduleQuantityType'].value>1\">{{dr.controls['ScheduleQuantityTypeText'].value}}</span> -\r\n                                                <small>{{dr.controls['PickupName'].value}}</small>\r\n                                            </h5>\r\n                                            <ng-container [formArrayName]=\"'Compartments'\">\r\n                                                <ng-container *ngFor=\"let comp of dr.controls['Compartments']['controls']; let k = index; let isLast = last;\">\r\n                                                    <div class=\"row row-mlr5\" [formGroupName]=\"k\">\r\n                                                        <div class=\"col-sm-12 col-plr5\" [ngClass]=\"{'hide-element': CompartmentEditModel.Schedule.Trailers.length<=1}\">\r\n                                                            <select class=\"form-control mb5\" formControlName=\"TrailerId\" [ngClass]=\"{'border-red' : comp.controls['TrailerId'].touched && comp.controls['TrailerId'].errors?.required}\" (change)=\"getRetainTrailerInfo(comp, dr)\">\r\n                                                                <option [value]=\"null\">Select Trailer</option>\r\n                                                                <ng-container *ngFor=\"let trailer of CompartmentEditModel.Schedule.Trailers\">\r\n                                                                    <option [value]=\"trailer.Id\">{{trailer.TrailerId}}</option>\r\n                                                                </ng-container>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-7 col-plr5\">\r\n                                                            <select class=\"form-control\" formControlName=\"CompartmentId\" [ngClass]=\"{'border-red' : comp.controls['CompartmentId'].touched && comp.controls['CompartmentId'].errors?.required}\" (change)=\"getRetainCompartmentInfo(comp, dr)\">\r\n                                                                <option [value]=null>Select Compartment</option>\r\n                                                                <ng-container *ngFor=\"let cpt of TrailerCompartments[comp.controls['TrailerId'].value]||[]; let l = index\">\r\n                                                                    <option [value]=\"cpt.CompartmentId\">\r\n                                                                        {{cpt.CompartmentId}} ({{cpt.Capacity | number:'1.0-2'}} {{dr.controls['UoM'].value==1 ? 'G' : 'L'}})\r\n                                                                    </option>\r\n                                                                </ng-container>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-5 col-plr5\">\r\n                                                            <div class=\"input-group\" *ngIf=\"dr.controls['ScheduleQuantityType'].value<=1\">\r\n                                                                <input [readonly]=\"(dr.controls['disabledControl'].value || dr.controls['IsRetainFuelLoaded']?.value)?true:null\" type=\"text\" formControlName=\"Quantity\" class=\"form-control\" placeholder=\"Quantity\" (change)=\"validateDrQuantity(dr.controls['RequiredQuantity'])\"\r\n                                                                       [ngClass]=\"{'border-red' : comp.controls['Quantity'].touched && comp.controls['Quantity'].errors}\" />\r\n                                                                <div class=\"input-group-append\">\r\n                                                                    <span class=\"input-group-text fs12\">\r\n                                                                        {{dr.controls['UoM'].value==1 ? 'G' : 'L'}}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"mt9\" *ngIf=\"dr.controls['ScheduleQuantityType'].value>1\">\r\n                                                                {{dr.controls['ScheduleQuantityTypeText'].value}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-12 col-plr5\" *ngIf=\"!dr.controls['disabledControl'].value\">\r\n                                                            <button type=\"button\" class=\"btn btn-link mr5 fs11 mb5 pt0 mt2\" (click)=\"removeCompartment(dr, k)\">\r\n                                                                <i class=\"fa fa-trash-alt color-maroon float-left mr5 mt3 fs11\"></i><span class=\"float-left mt1\">Remove</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-6 col-plr5\" *ngIf=\"isLast && !dr.controls['disabledControl'].value\">\r\n                                                            <button type=\"button\" class=\"btn btn-link mr5 pt0\" (click)=\"addCompartment(dr, comp.controls['TrailerId'].value)\">\r\n                                                                <i class=\"fa fa-plus-circle float-left mr5 mt3\"></i><span class=\"float-left\">Compartment</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                            <div *ngIf=\"dr.controls['RequiredQuantity'].errors?.CompartmentQuantity\">\r\n                                                <span class=\"color-maroon\">Compartment(s) exceeded DR quantity.</span>\r\n                                            </div>\r\n                                            <button *ngIf=\"dr.controls['Compartments']['controls'].length==0\" type=\"button\" class=\"btn btn-link mr5\" (click)=\"addCompartment(dr, null)\">\r\n                                                <i class=\"fa fa-plus-circle float-left mr5 mt3\"></i><span class=\"float-left\">Compartment</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"text-right col-sm-12\">\r\n                <button class=\"btn btn-lg\" type=\"button\" onclick=\"closeSlidePanel();\">Cancel</button>\r\n                <button class=\"btn btn-primary btn-lg\" (click)=\"saveCompartmentAssignment()\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"TransferDSModel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingDSData\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mt2 mb15 pt0 pb0 heading\">Transfer DS to another load</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectshift\">Shift</label>\r\n                                <select class=\"form-control\" id=\"selectshift\" [(ngModel)]=\"SelectedShift\" (change)=\"GetShiftColInfo(SelectedShift)\">\r\n                                    <option *ngFor=\"let shift of DSShifts\" [ngValue]=\"shift\">{{shift.ShiftInfo}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectcolumn\">Column</label>\r\n                                <select class=\"form-control\" [(ngModel)]=\"SelectedShiftColumn\" (change)=\"GetShiftLoadInfo(SelectedShiftColumn)\">\r\n                                    <option *ngFor=\"let shiftCol of ShiftColumn\" [ngValue]=\"shiftCol\">{{shiftCol.ColIndexName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectload\">Loads</label>\r\n                                <select class=\"form-control\" id=\"selectload\" [(ngModel)]=\"SelectedLoad\">\r\n                                    <option *ngFor=\"let shiftld of ShiftLoad\" [ngValue]=\"shiftld\">{{shiftld.LoadName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\" *ngIf=\"SelectedDriverName!=''\">\r\n                                <label class=\"d-block mb-1\">Driver</label>\r\n                                <label class=\"driver-name d-block\">{{SelectedDriverName}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnTransferDS\" class=\"btn btn-primary btn-lg\" data-dismiss=\"modal\" (click)=\"TransferDSInfo()\">Transfer</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"TrailerInformation\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingRemoveTrailer\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb15 pt0 pb0 heading\">Trailer Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"closeTrailerInformationModal\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <ng-container *ngIf=\"scheduleTrailerInfo\">\r\n                                <ng-container *ngFor=\"let trailer of scheduleTrailerInfo.controls['Trailers']['controls']; let y = index; let islast = last; trackBy: trackByTrailerId\">\r\n                                    <ng-container>\r\n                                        <div class=\"card mb5\">\r\n                                            <div class=\"card-body pt5 pb5 pl10 pr10\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-9\"><span class=\"mt2 dib\">{{trailer.controls['TrailerId'].value}}</span></div>\r\n                                                    <div class=\"col-sm-3 text-right\" *ngIf=\"disableControl==false\">\r\n                                                        <a (click)=\"UnAssignTrailerFromShift(scheduleTrailerInfo,'trailer',trailer.controls['Id'].value)\" class=\"dib\" placement=\"bottom\" ngbTooltip=\"Unassign Trailer\">\r\n                                                            <i class=\"far fa-times-circle mt4 fs16\"></i>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<a class=\"hidden-element\" data-toggle=\"modal\" data-target=\"#resetDrByRouteModal\" id=\"openRouteListModal\"></a>\r\n<div id=\"resetDrByRouteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width: 350px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingRemoveRoute\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Reset Delivery Request(s) By Route</h4>\r\n                    <button type=\"button\" id=\"closeResetDrByRouteModal\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\"\r\n                            aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <div class=\"mt20\">\r\n                    <table class=\"table\">\r\n                        <tr *ngFor=\"let route of RouteListForTrip\">\r\n                            <td>\r\n                                {{route.Name}}\r\n                                <a class=\"ml20 pull-right\" (click)=\"deleteDrsForRoute(route);\">\r\n                                    <i class=\"fa fa-trash-alt mt14 color-maroon\"></i>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div class=\"text-right mt15\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"optional-pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingOptionTerminal\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Optional Pickup(s) Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n\r\n                <div class=\"mt10 mb10\" *ngIf=\"disableControl==false\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-10\">\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedFuelTypeDetails\"\r\n                                                     [placeholder]=\"'Select Fuel Type'\" [settings]=\"FuelTypeDdlSettings\" [data]=\"FuelTypeDetails\" \r\n                                                     (onSelect)=\"onFuelTypeSelect($event)\" (onDeSelect)=\"onFuelTypeDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onFuelTypeSelectAll($event)\"\r\n                                                     (onDeSelectAll)=\"onFuelTypeDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"PickupForm.get('SelectedFuelTypeDetails').invalid && PickupForm.get('SelectedFuelTypeDetails').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"PickupForm.get('SelectedFuelTypeDetails').errors.required\">\r\n                                    Fuel Type is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"overflow-h\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"section-optpickup pr-2\">\r\n                    <div class=\"mt10 mb10\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                        <!-- terminal start -->\r\n                        <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                            <div class=\"col-sm-10\">\r\n                                <div class=\"ng-autocomplete\">\r\n                                    <ng-autocomplete [data]=\"Terminals\" formControlName=\"Name\"\r\n                                                     [searchKeyword]=\"keyword\"\r\n                                                     placeholder=\"Terminal Name\"\r\n                                                     (selected)='onTerminalSelected_($event)'\r\n                                                     [itemTemplate]=\"itemTemplate\"\r\n                                                     [notFoundTemplate]=\"notFoundTemplate\">\r\n                                    </ng-autocomplete>\r\n\r\n                                    <ng-template #itemTemplate let-item>\r\n                                        <a [innerHTML]=\"item.Name\"></a>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template #notFoundTemplate let-notFound>\r\n                                        <div [innerHTML]=\"notFound\"></div>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <!-- terminal ends -->\r\n                        <!-- bulk plant starts -->\r\n                        <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Bulk Plant</label>\r\n                                            <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched_($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur_($event)\" />\r\n                                            <ul class=\"auto-select border-dash\">\r\n                                                <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected_(plant)\"\r\n                                                    [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                            </ul>\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Address</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Address\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                    Invalid (alphanumeric with comma spaces only)\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                            <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip_($event)\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                    Invalid {{ CountryBasedZipcodeLabel }}\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>City</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                    Invalid (alphanumeric with comma spaces only)\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                            <label>State</label>\r\n                                            <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                                <option [value]=\"null\">Select State</option>\r\n                                                <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                                                    {{st.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\">\r\n                                                <option [value]=\"null\">Select State</option>\r\n                                                <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                                                    {{st.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                            </ng-container>\r\n                                            <input type=\"hidden\" formControlName=\"Code\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                            <label>Country</label>\r\n                                            <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                                <option [value]=\"null\">Select Country</option>\r\n                                                <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                    {{ct.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\">\r\n                                                <option [value]=\"null\">Select Country</option>\r\n                                                <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                    {{ct.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>County</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                    Invalid (alphanumeric with comma spaces only)\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Latitude</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                    Invalid\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Longitude</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                    Invalid\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                                <span class='spinner-dashboard pa'></span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- bulk plant ends -->\r\n                    </div>\r\n                    <div class=\"mt10 mb10\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" placeholder=\"Badge#\" />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\" placeholder=\"Badge#\" />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\" placeholder=\"Badge#\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                        <button type=\"button\" [disabled]=\"!PickupForm.valid\" (click)=\"addOptionalPickupLocation()\" class=\"btn btn-primary\">Add</button>\r\n                    </div>\r\n                    <div class=\"mt10 mb10\" *ngIf=\"OptionalPickupLocationInfo.length>0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                                    <thead>\r\n                                        <tr class=\"f-bold\">\r\n                                            <th>Fuel Type</th>\r\n                                            <th>Location Type</th>\r\n                                            <th>Location Info</th>\r\n                                            <th>BadgeNo#</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let optionPickupInfo of OptionalPickupLocationInfo\">\r\n                                            <td>{{optionPickupInfo.TfxFuelTypeName}}</td>\r\n                                            <td>{{optionPickupInfo.DSBPickupLocationInfo.PickupLocationType==1?'Terminal':'Bulk Plant'}}</td>\r\n                                            <td *ngIf=\"optionPickupInfo.DSBPickupLocationInfo.PickupLocationType==1\">\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxTerminal.Name}}\r\n                                            </td>\r\n                                            <td *ngIf=\"optionPickupInfo.DSBPickupLocationInfo.PickupLocationType==2\">\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.SiteName}} -\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.Address}},\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.City}},\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.State.Name}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.BadgeNoInfo}}\r\n                                            </td>\r\n                                            <td>\r\n                                                <a class=\"ml20 pull-left\" *ngIf=\"disableControl==false\" (click)=\"deleteOptionPickup(optionPickupInfo);\">\r\n                                                    <i class=\"fa fa-trash-alt mt14 color-maroon\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"text-right mt-2\" *ngIf=\"this.OptionalPickupLocationInfo.length>0 && disableControl==false\">\r\n                    <button type=\"button\" (click)=\"submitOptionalPickupLocation()\" class=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-completed-optionpickup\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-completed-optionpickup\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-completed-optionpickup\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Optional Pickup Information:</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Unable to delete the optional pickup information due to some of DS in completed state.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-inprogress-onthewayoptionpickup\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-delete-onthewayoptionpickup\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-onthewayoptionpickup\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Driver is on the way to job OR Some of DS are in-progress.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"deleteOptionalPickupNo()\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteOptionalPickupYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #retain_popContent>\r\n    <div class=\"pop-header\"></div>\r\n    <div class=\"popover-details\">\r\n        <table class=\"table table-sm table-striped table-borderless\">\r\n            <tbody>\r\n                <tr *ngFor=\"let retain of hoveredTrailer.RetainFuel; let i = index;\">\r\n                    <td>{{retain.CompartmentId}}</td>\r\n                    <td>{{retain.ProductType}}</td>\r\n                    <td>{{retain.Quantity}}&nbsp;{{retain.UOM==1 ? 'G' : 'L'}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</ng-template>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-cancel-ds\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-cancel-ds\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-cancel-ds\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Do you want to cancel DS(s)?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Only Accepted/Scheduled/on the way to pick up DS are cancelled.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"rejectDriverSchedule()\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"cancelDriverSchedule()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-cancel-location-ds\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-location-cancel-ds\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-location-cancel-ds\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Do you want to cancel DS(s)?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Only Accepted/Scheduled/on the way to pick up DS are cancelled.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" id=\"cancelLocationDS\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"cancelLocationDriverSchedule()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--Cancel DS Infomration-->\r\n<button type=\"button\" id=\"btn-location-cancel-ds-info\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-location-cancel-ds-info\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-location-cancel-ds-info\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Delivery Schedule Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" id=\"confirm-location-cancel-ds-dismiss\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\" *ngIf=\"cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                                <thead>\r\n                                    <tr class=\"f-bold\">\r\n                                        <th><input id=\"selectAllLocationDSBGroupCancel\" type=\"checkbox\" class=\"form-check-input\" (change)=\"checkAllLocationDS()\" /></th>\r\n                                        <th>Driver Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Fuel Type</th>\r\n                                        <th>Current State</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let dsInfo of cancelDSDeliveryScheduleViewModel;let j = index\">\r\n                                        <td><input type=\"checkbox\" class=\"form-check-input\" id=\"dsLocationCheck{{j}}\" (change)=\"checkLocationDSChange(j,dsInfo)\" [(ngModel)]='dsInfo.IsChecked'></td>\r\n                                        <td>{{dsInfo.DriverName}}</td>\r\n                                        <td>{{dsInfo.Quantity}}</td>\r\n                                        <td>{{dsInfo.FuelType}}</td>\r\n                                        <td>{{dsInfo.CurrentState}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"text-right mt-2\" *ngIf=\"this.cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <button type=\"button\" (click)=\"CancelSelectedLocationDS()\" class=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { LoadQueueService } from './load-queue.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropdownItem, ShiftLoadQueueDropdownItem } from 'src/app/statelist.service';\nimport { Subscription } from 'rxjs';\nimport { LoadQueueColumnValidations, LoadQueueStatusViewModel, TrailerJobNonCompatibleDrs, TrailersDeliveryRequestViewModel, TripError } from './dsb-load.model';\nimport { DSBSaveModel, RegionDetailModel, TripModel, DeliveryRequestViewModel, OrderPickupLocationModel } from '../../models/DispatchSchedulerModels';\nimport { DataService } from '../../service/data.service';\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\nimport { ColumnStatusEnum, DeliveryReqStatus, DSBLoadQueueStatus, TripStatus } from 'src/app/app.enum';\n\n@Component({\n    selector: 'app-dsb-load-queue',\n    templateUrl: './dsb-load-queue.component.html',\n    styleUrls: ['./dsb-load-queue.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class DsbLoadQueueComponent implements OnInit, OnDestroy {\n\n    @Input() SbForm: FormGroup;\n    @Input() public RegionDetail: RegionDetailModel;\n    @Input() public IsTrailerExists: boolean;\n\n    LoadQueueFilterForm: FormGroup;\n    subscriptions: Subscription = new Subscription();\n    columnValidations: LoadQueueColumnValidations[] = [];\n    validationObj = new LoadQueueColumnValidations();\n    InCompatibleDrs: TrailerJobNonCompatibleDrs[] = [];\n    compatibilityModels: TrailersDeliveryRequestViewModel[] = [];\n    dsbModelsToPublish: DSBSaveModel[] = [];\n    public OrderList: any = {};\n    public statuses: DropdownItem[] = [\n        { Id: ColumnStatusEnum.Completed, Code: null, Name: 'Completed' },\n        { Id: ColumnStatusEnum.Partial, Code: null, Name: 'Partially Completed' },\n        { Id: ColumnStatusEnum.Empty, Code: null, Name: 'Empty' },\n        { Id: ColumnStatusEnum.Published, Code: null, Name: 'Published' },\n    ];\n    public selectedStatuses: DropdownItem[] = []\n    public settings: IDropdownSettings = {\n        singleSelection: false,\n        idField: 'Id',\n        textField: 'Name',\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        itemsShowLimit: 1,\n        allowSearchFilter: true\n    };\n    public shifts: ShiftLoadQueueDropdownItem[] = [];\n    public selectedShifts: DropdownItem[] = [];\n    public _opened: boolean = false;\n    public _isQueuePanelInitiated: boolean = false;\n    public _selectAll: boolean = false;\n    _loading: boolean = false;\n    public panels: string[] = ['panel-1', 'panel-2', 'panel-3'];\n    @Input() public isDisableControl: boolean;\n\n    constructor(\n        private loadQueueService: LoadQueueService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private dataService: DataService, private sbService: ScheduleBuilderService) { }\n\n    ngOnInit() {\n        this.LoadQueueFilterForm = this.loadQueueService.getFilterForm();\n        this.subscribeFormChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.unSubscribeFormChanges();\n    }\n    subscribeFormChanges() {\n        this.subscriptions.add(this.LoadQueueFilterForm.valueChanges\n            .subscribe(change => {\n                this.applyFilter();\n            }))\n\n        this.subscriptions.add(this.loadQueueService.loadQueueColumnMovedSubject\n            .subscribe(value => {\n                this.setSelectAllButtonvalue();\n                this.bindShifts();\n                this.bindValidation();\n            }))\n    }\n\n    openPanel() {\n        this._opened = true;\n        if (!this._isQueuePanelInitiated) {\n            this._isQueuePanelInitiated = true;\n            this.loadQueueService.setLoadQueueColumnMoved(true);\n        }\n    }\n\n    unSubscribeFormChanges() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n\n    setSelectAllButtonvalue() {\n        let allSchedules = 0;\n        let selectedSchedules = 0;\n\n        let _shifts = this.SbForm.controls['Shifts'].value as any[] || [];\n        _shifts.forEach((shift) => {\n            shift && shift.Schedules && shift.Schedules.forEach((schedule) => {\n                if (schedule.IsLoadQueueCollapsed) {\n                    allSchedules++;\n                    if (schedule.IsColumnSelected)\n                        selectedSchedules++;\n                }\n            });\n        });\n\n        if (allSchedules && selectedSchedules == allSchedules)\n            this._selectAll = true;\n        else\n            this._selectAll = false;\n    }\n\n    applyFilter() {\n        this.selectedShifts = this.LoadQueueFilterForm.controls['Shift'].value || [];\n        this.selectedStatuses = this.LoadQueueFilterForm.controls['Status'].value || [];\n        this._selectAll = false;\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            let shiftId = shift.controls['Id'].value;\n            schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\n                //un-select all columns\n                schedule.get('IsColumnSelected').setValue(false);\n                //apply filter only for collapsed columns\n                if (schedule.get('IsLoadQueueCollapsed').value) {\n                    //both\n                    if (this.selectedShifts.length > 0 && this.selectedStatuses.length > 0) {\n                        if (this.selectedShifts.some(sh => sh.Id == shift.get('Id').value && this.getColumnStatus(shiftIndex, scheduleIndex, shiftId))) {\n                            schedule.get('LoadQueueFilterVisibility').setValue(true);\n                        }\n                        else {\n                            schedule.get('LoadQueueFilterVisibility').setValue(false);\n                        }\n                    }\n                    //shift\n                    else if ((this.selectedShifts.length > 0 && this.selectedStatuses.length == 0)) {\n                        if (this.selectedShifts.some(sh => sh.Id == shift.get('Id').value)) {\n                            schedule.get('LoadQueueFilterVisibility').setValue(true);\n                        }\n                        else {\n                            schedule.get('LoadQueueFilterVisibility').setValue(false);\n                        }\n                    }\n                    //status\n                    else if ((this.selectedShifts.length == 0 && this.selectedStatuses.length > 0)) {\n                        if (this.getColumnStatus(shiftIndex, scheduleIndex, shiftId)) {\n                            schedule.get('LoadQueueFilterVisibility').setValue(true);\n                        }\n                        else {\n                            schedule.get('LoadQueueFilterVisibility').setValue(false);\n                        }\n                    }\n                    else {\n                        schedule.get('LoadQueueFilterVisibility').setValue(true);\n                    }\n                }\n            });\n        });\n\n    }\n\n    getColumnStatus(shiftIndex: number, scheduleIndex: number, shiftId: string) {\n        let obj = this.columnValidations.find(val => val.ShiftId == shiftId && val.ScheduleIndex == scheduleIndex && this.selectedStatuses.some(s => s.Id == val.ColumnStatus));\n        if (obj) {\n            return true;\n        }\n        else\n            return false;\n    }\n\n    bindShifts() {\n        this.shifts = [];\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup, index: number) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup) => {\n                if (schedule.get('IsLoadQueueCollapsed').value && !this.shifts.some(sh => sh.Id == shift.get('Id').value)) {\n                    this.shifts.push({ Id: shift.get('Id').value, Code: shift.get('OrderNo').value.toString(), Name: 'Shift ' + (shift.get('OrderNo').value + 1), OrderNo: shift.get('OrderNo').value + 1 });\n                }\n            });\n        });\n        this.shifts = this.shifts.sort(this.SortByOrder);\n    }\n\n    checkShiftVisibility(shift: FormGroup) {\n        let _shiftSelected = this.LoadQueueFilterForm.controls['Shift'].value as ShiftLoadQueueDropdownItem[];\n        if (_shiftSelected == null) {\n            let _schedules = shift.controls['Schedules'].value as any[];\n            if (_schedules.some(x => x.IsLoadQueueCollapsed == true) && _schedules.some(x => x.LoadQueueFilterVisibility == true))//&& shift.get('LoadQueueFilterVisibility').value\n                return true;\n            else\n                return false;\n        }\n        else if (_shiftSelected.length == 0) {\n            let _schedules = shift.controls['Schedules'].value as any[];\n            if (_schedules.some(x => x.IsLoadQueueCollapsed == true) && _schedules.some(x => x.LoadQueueFilterVisibility == true))//&& shift.get('LoadQueueFilterVisibility').value\n                return true;\n            else\n                return false;\n        }\n        else {\n            var shiftIndex = _shiftSelected.findIndex(x => x.Id == shift.controls[\"Id\"].value);\n            if (shiftIndex >= 0) {\n                let _schedules = shift.controls['Schedules'].value as any[];\n                if (_schedules.some(x => x.IsLoadQueueCollapsed == true) && _schedules.some(x => x.LoadQueueFilterVisibility == true))//&& shift.get('LoadQueueFilterVisibility').value\n                    return true;\n                else\n                    return false;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n\n    getClassByStatus(i: number, j: number) {\n        let obj = this.columnValidations.find(val => val.ShiftIndex == i && val.ScheduleIndex == j) || new LoadQueueColumnValidations();\n        let schedule = this.SbForm.get('Shifts.' + i + '.Schedules.' + j + '') as FormGroup;\n        switch (obj.ColumnStatus) {\n            case ColumnStatusEnum.Completed:\n                //here verify the completed column published from notifcation or not.\n                if (schedule != null) {\n                    let loadQueueColumnStatus = schedule.get('LoadQueueColumnStatus').value;\n                    if (loadQueueColumnStatus == DSBLoadQueueStatus.Success) {\n                        return \"published\";\n                    }\n                }\n                return 'completed';\n            case ColumnStatusEnum.Published:\n                return 'published';\n            case ColumnStatusEnum.Empty:\n                return 'empty';\n            case ColumnStatusEnum.Partial:\n                return 'partial';\n            case ColumnStatusEnum.None:\n                return 'partial';\n        }\n    }\n    selectColumn(event: any, schedule: FormGroup) {\n        schedule.get('IsColumnSelected').setValue(event.target.checked);\n        this.setSelectAllButtonvalue();\n    }\n\n    selectAllColumn() {\n        this._selectAll = !this._selectAll;\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup) => {\n                if (schedule.get('IsLoadQueueCollapsed').value) {\n                    schedule.get('IsColumnSelected').setValue(this._selectAll);\n                }\n            });\n        });\n    }\n\n    moveColumnsToGrid() {\n        //updated client side first\n        let shifts = this.SbForm.controls['Shifts'] as FormArray;\n        let loadQueueIds: string[] = [];\n\n        shifts.controls.forEach((shift: FormGroup) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup) => {\n                if (schedule.get('IsColumnSelected').value) {\n                    schedule.get('IsLoadQueueCollapsed').setValue(false);\n                    schedule.get('IsColumnSelected').setValue(false);////unselect\n                    loadQueueIds.push(schedule.get('LoadQueueId').value);////collect object ids\n                }\n            });\n        });\n\n        if (loadQueueIds.length) {\n\n            this.loadQueueService.setLoadQueueColumnMoved(true);//refresh load queue panel\n            this.changeDetectorRef.markForCheck();//detect form changes\n            this.dataService.setDriverColumnChangeDetect(true);\n\n            //delete expanded column data from api\n            this.loadQueueService.deleteLoadQueue(loadQueueIds).subscribe((data) => {\n                if (!data || data.StatusCode !== 0) {\n                    Declarations.msgerror(\"Unable to move selected column(s). Please try later.\", undefined, undefined);\n                    //if api fails to update, revert changes\n                    shifts.controls.forEach((shift: FormGroup) => {\n                        let schedules = shift.controls['Schedules'] as FormArray;\n                        schedules.controls.forEach((schedule: FormGroup) => {\n                            if (schedule.get('IsColumnSelected').value) {\n                                schedule.get('IsLoadQueueCollapsed').setValue(true);\n                            }\n                        });\n                    });\n                    this.loadQueueService.setLoadQueueColumnMoved(true);\n                    this.changeDetectorRef.markForCheck();\n                    this.dataService.setDriverColumnChangeDetect(true);\n                }\n            });\n        }\n    }\n\n    getValidationsAndDrsFromLoad(trips: FormArray, validation: LoadQueueColumnValidations, scheduleIndex: number, shiftIndex: number) {\n\n        var _drList = [];\n\n        for (let tripIndex = 0; tripIndex < trips.length; tripIndex++) {\n\n            let tripError = new TripError();\n            tripError.TripIndex = tripIndex;\n\n            let trip = trips.controls[tripIndex] as FormGroup;\n            var isCommonPickup: boolean = trip.controls['IsCommonPickup'].value;\n            var _drsForm = trip.controls[\"DeliveryRequests\"] as FormArray;\n\n            /////LOAD LEVEL PICKUP VALIDATION/////////////\n            if (_drsForm.controls.length > 0 && isCommonPickup && !(trip.controls.Terminal.get('Name').value || trip.controls.BulkPlant.get('SiteName').value)) {\n                tripError.Errors.push('Please select common pickup location.');\n            }\n\n            for (let i = 0; i < _drsForm.controls.length; i++) {\n                var x = _drsForm.controls[i] as FormGroup;\n                let dr = x.value\n                if (x) {\n                    if (dr.ScheduleQuantityType == 1 && dr.TankMaxFill > 0 && dr.RequiredQuantity > dr.TankMaxFill) {\n                        tripError.Errors.push('Required quantity is more than Max Fill for dr ' + (i + 1) + '.');\n                    }\n                    _drList.push(dr);\n                    this.getOrderList(x, isCommonPickup, trip.controls['StartDate'].value, tripError, i);\n                }\n            }\n            validation.TripErrors.push(tripError);\n        }\n        return _drList;\n    }\n\n    getValidationsByColumn(schedule: FormGroup, validation: LoadQueueColumnValidations, scheduleIndex: number, shiftIndex: number) {\n        let completedDRStatus = [3, 7, 8, 9, 11, 12, 14, 21, 22, 23, 25];\n        var trips = schedule.controls['Trips'] as FormArray;\n        var _deliveryRequests: DeliveryRequestViewModel[] = this.getValidationsAndDrsFromLoad(trips, validation, scheduleIndex, shiftIndex);\n        let NotpublishTripCount = 0;\n\n        var drivers = schedule.controls['Drivers'].value;\n        var trailers = schedule.controls['Trailers'].value;\n\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\n\n            let jobAndCustomers = this.loadQueueService.getCustomerAndJobFromDr(_deliveryRequests);\n            validation.Customers = jobAndCustomers.customers;\n            validation.Locations = jobAndCustomers.Locations;\n            validation.DrCount = _deliveryRequests.length;\n\n            _deliveryRequests.forEach(dr => {\n                if (completedDRStatus.indexOf(dr.TrackScheduleStatus) == -1) {\n                    NotpublishTripCount = NotpublishTripCount + 1;\n                }\n                else if (dr.TrackScheduleStatus == DeliveryReqStatus.ScheduleCreated && dr.TrackableScheduleId == null) {\n                    NotpublishTripCount = NotpublishTripCount + 1;\n                }\n            });\n\n            if (drivers == null || drivers == undefined || drivers.length == 0 || (this.IsTrailerExists && (trailers == null || trailers == undefined || trailers.length == 0))) {\n                if (this.IsTrailerExists) {\n                    validation.Errors.push('Please assign a driver / trailer to publish');\n                }\n                else {\n                    validation.Errors.push('Please assign a driver to publish');\n                }\n            }\n\n            if (drivers != null && drivers.length > 0) {\n                var delReqs = _deliveryRequests;\n                if (delReqs.length > 0 && delReqs.some(t => t.IsFilldInvoke == true)) {\n                    if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\n                        validation.Errors.push('Please assign a Filld compatible driver / trailer to publish', 'Driver/Trailer Required');\n                    }\n                    else if (drivers.some(t => t.IsFilldCompatible == false)) {\n                        validation.Errors.push('Please assign a Filld compatible driver to publish', 'Driver Required');\n                    }\n                }\n            }\n        }\n\n        //ColumnStatus\n        if (validation.DrCount == 0) {\n            validation.ColumnStatus = ColumnStatusEnum.Empty;\n        }\n        else if (validation.Errors.length > 0 || validation.TripErrors.some(tr => tr.Errors.length > 0)) {\n            validation.ColumnStatus = ColumnStatusEnum.Partial;\n        }\n        else if (NotpublishTripCount == 0) {\n            validation.ColumnStatus = ColumnStatusEnum.Published;\n        }\n        else {\n            validation.ColumnStatus = ColumnStatusEnum.Completed;\n        }\n        this.columnValidations.push(validation);\n    }\n\n    setColumnStatusAfterApi() {\n        this.columnValidations.forEach((validation: LoadQueueColumnValidations) => {\n            if (validation.DrCount == 0) {\n                validation.ColumnStatus = ColumnStatusEnum.Empty;\n            }\n            else if (validation.Errors.length > 0 || validation.TripErrors.some(tr => tr.Errors.length > 0)) {\n                validation.ColumnStatus = ColumnStatusEnum.Partial;\n            }\n        });\n    }\n\n    bindValidation() {\n\n        this.columnValidations = [];\n\n        if (this.RegionDetail) {\n            let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n            _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\n                let schedules = shift.controls['Schedules'] as FormArray;\n                let shiftId = shift.controls['Id'].value;\n                schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\n                    if (schedule.get('IsLoadQueueCollapsed').value) {\n                        let validation = new LoadQueueColumnValidations();\n                        validation.ShiftIndex = shiftIndex;\n                        validation.ScheduleIndex = scheduleIndex;\n                        validation.ShiftId = shiftId;\n                        this.getValidationsByColumn(schedule, validation, scheduleIndex, shiftIndex);\n                    }\n                });\n            });\n        }\n    }\n\n    setValidationObjectFromList(i: number, j: number) {\n        this.validationObj = this.columnValidations.find(val => val.ShiftIndex == i && val.ScheduleIndex == j) || new LoadQueueColumnValidations();\n    }\n\n    setTripStatus(trip: TripModel): void {\n        if (trip) {\n            var tripPrevStatusId = trip.TripPrevStatus;\n            var tripStatusId = TripStatus.Added;\n            if (tripPrevStatusId == TripStatus.None) {\n                tripStatusId = TripStatus.Added;\n            } else if (tripPrevStatusId == TripStatus.Added || tripPrevStatusId == TripStatus.Modified) {\n                tripStatusId = TripStatus.Modified;\n            }\n            trip.TripStatus = tripStatusId;\n        }\n    }\n\n    iniatePublishColumns() {\n        this.getColumnForCompatibilityCheck();\n        this.getTrailerJobCompatibility();\n    }\n\n    getTrailerJobCompatibility() {\n        if (this.IsTrailerExists) {\n            if (this.compatibilityModels && this.compatibilityModels.length > 0) {\n\n                this._loading = true;\n                this.InCompatibleDrs = []\n\n                this.loadQueueService.getTrailerJobCompatibility(this.compatibilityModels).subscribe(\n                    (response) => {\n\n                        this._loading = false;\n                        if (response && response.deliveryRequestsNotCompatible && response.deliveryRequestsNotCompatible.length > 0) {\n                            this.InCompatibleDrs = response.deliveryRequestsNotCompatible;\n\n                            if (this.InCompatibleDrs.some(el => el.drCount > 0)) {\n                                let tempString = ''\n                                this.InCompatibleDrs.forEach(element => {\n                                    if (element.drCount > 0) {\n                                        tempString + '' + element.scheduleIndex + ', ';\n                                    }\n                                })\n                                Declarations.msgerror(\"Non-compatible trailer(s) is assigned to Location(s) in columns \" + tempString, 'Warning', 4000);\n                            }\n                            else {\n                                this.publishValidatedColumns();\n                            }\n                        }\n                    }\n                );\n            }\n            else {\n                Declarations.msgwarning('No completed columns(s) found for publish load queue.', 'Warning', 4000);\n            }\n        }\n        else {\n            this.publishValidatedColumns();\r\n        }\n    }\n\n    publishValidatedColumns() {\n\n        let selected_schedule = [];\n        let selectedSchedules = 0;\n        let selectedDSBModelsToPublish: DSBSaveModel[] = [];\n        let _shifts = this.SbForm.controls['Shifts'].value as any[] || [];\n\n        _shifts.forEach((shift, shiftIndex: number) => {\n            shift && shift.Schedules && shift.Schedules.forEach((schedule, scheduleIndex: number) => {\n                if (schedule.IsLoadQueueCollapsed) {\n                    if (schedule.IsColumnSelected) {\n                        selectedSchedules++;\n                        var obj = {\n                            shiftIndex: shiftIndex,\n                            scheduleIndex: scheduleIndex,\n                            shiftId: shift.Id\n                        }\n                        selected_schedule.push(obj);\n                    }\n                }\n            });\n        });\n        if (selectedSchedules > 0) {\n            for (var i = 0; i < selected_schedule.length; i++) {\n                let obj = this.columnValidations.find(val => val.ShiftId == selected_schedule[i].shiftId && val.ScheduleIndex == selected_schedule[i].scheduleIndex);\n                if (obj.ColumnStatus == ColumnStatusEnum.Completed) {\n                    let _shifts = this.SbForm.controls['Shifts'][\"controls\"][selected_schedule[i].shiftId] as FormGroup;\n                    if (_shifts != null) {\n                        let schedule = _shifts.controls['Schedules'][\"controls\"][selected_schedule[i].scheduleIndex] as FormGroup;\n                        var dsbModel = this.loadQueueService.getDSBSaveModel(this.SbForm);\n                        var drivers = schedule.controls['Drivers'].value;\n                        var trailers = schedule.controls['Trailers'].value;\n                        var trips = schedule.controls['Trips'] as FormArray;\n                        for (let i = 0; i < trips.length; i++) {\n                            var tripValue = trips.value[i];\n                            this.setTripStatus(tripValue);\n                            dsbModel.Trips.push(tripValue);\n                        }\n                        dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers });\n                        dsbModel.Status = 3;\n                        selectedDSBModelsToPublish.push(dsbModel);\n                    }\n                }\n            }\n            //start publish\n            if (selectedDSBModelsToPublish.length == 0) {\n                Declarations.msgwarning('No completed columns(s) found for publish load queue.', 'Warning', 4000);\n            }\n            else {\n                Declarations.msgwarning('Only completed columns(s) publish from load queue.', 'Warning', 4000);\n                this.intializePublish(selectedDSBModelsToPublish, 1);\n            }\n        }\n        else {\n            //start publish\n            this.intializePublish(this.dsbModelsToPublish, 0);\n        }\n    }\n\n    getColumnForCompatibilityCheck() {\n        this._loading = true;\n        this.compatibilityModels = [];\n        this.dsbModelsToPublish = [];\n\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\n\n                if (schedule.get('IsLoadQueueCollapsed').value && schedule.get('LoadQueueFilterVisibility').value && schedule.get('IsLoadQueueColumnBlocked').value != true) {\n\n                    let isValidForCompatibilityCheck = true;\n                    var drivers = schedule.controls['Drivers'].value;\n                    var trailers = schedule.controls['Trailers'].value;\n                    if (drivers == null || drivers == undefined || drivers.length == 0 || (this.IsTrailerExists && (trailers == null || trailers == undefined || trailers.length == 0))) {\n                        isValidForCompatibilityCheck = false;\n                    }\n                    else {\n                        var trips = schedule.controls['Trips'] as FormArray;\n                        var _deliveryRequests = this.loadQueueService.GetAllLoadsDR(trips);\n                        var _deliveryRequests = this.loadQueueService.GetAllLoadsDR(trips);\n                        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\n                            return trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\n                        });\n\n                        if (drivers != null && drivers.length > 0) {\n\n                            if (_deliveryRequests.length > 0 && _deliveryRequests.some(t => t.IsFilldInvoke == true)) {\n                                if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\n                                    isValidForCompatibilityCheck = false;\n                                }\n                                else if (drivers.some(t => t.IsFilldCompatible == false)) {\n                                    isValidForCompatibilityCheck = false;\n                                }\n                            }\n                        }\n\n                        if (isValidForCompatibilityCheck && _deliveryRequests && _deliveryRequests.length > 0 && ((this.IsTrailerExists === true && _selectedTrailers && _selectedTrailers.length > 0) || this.IsTrailerExists === false)) {\n\n                            var validTrips = [];\n\n                            trips.controls.forEach((thisTrip: FormGroup, tripIndex: number) => {\n                                if (thisTrip && (thisTrip.valid && this.loadQueueService.validatePublishLoad(thisTrip))) {\n                                    ////////////////////////\n                                    let model = new TrailersDeliveryRequestViewModel();\n                                    model.deliveryRequests = _deliveryRequests;\n                                    model.trailers = _selectedTrailers;\n                                    model.scheduleIndex = scheduleIndex;\n                                    model.shiftIndex = shiftIndex;\n                                    this.compatibilityModels.push(model);\n                                    ///////////////\n                                    validTrips.push(tripIndex);\n                                }\n                            });\n\n\n                            if (validTrips.length > 0) {\n                                var dsbModel = this.loadQueueService.getDSBSaveModel(this.SbForm);\n                                var drivers = schedule.controls['Drivers'].value;\n                                var trailers = schedule.controls['Trailers'].value;\n\n                                for (let i = 0; i < trips.length; i++) {\n                                    var tripValue = trips.value[i];\n                                    if (validTrips.includes(tripValue.DriverColIndex)) {\n                                        this.setTripStatus(tripValue);\n                                    }\n                                    dsbModel.Trips.push(tripValue);\n                                }\n                                dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers });\n                                dsbModel.Status = 3;\n                                let obj = this.columnValidations.find(val => val.ShiftIndex == shiftIndex && val.ScheduleIndex == scheduleIndex);\n                                if (obj != null && obj.ColumnStatus == ColumnStatusEnum.Completed) {\n                                    this.dsbModelsToPublish.push(dsbModel);\n                                }\n                            }\n\n                        }\n                    }\n                }\n            });\n        });\n        this._loading = false;\n    }\n    getLoadQueueStatus(status: number, shiftIndex: number, scheduleIndex: number) {\n        if (status == 0) {\n            return \"In-Queue\";\n        }\n        else if (status == 1) {\n            return \"In-Progress\"\n        }\n        else if (status == 2) {\n            return \"Success\"\n        }\n        else if (status == 3) {\n            var columnValidations = this.columnValidations.find(top => top.ShiftIndex == shiftIndex && top.ScheduleIndex == scheduleIndex);\n            if (columnValidations != null) {\n                if (columnValidations.ColumnStatus == ColumnStatusEnum.Published) {\n                    return \"\";\n                }\n            }\n            return \"Failed\"\n        }\n    }\n    private getOrderList(delReq: FormGroup, isCommonPickup: boolean, startDate: string, tripError: TripError, drIndex: number): void {\n\n        var _jobId = delReq.controls['JobId'].value;\n        var _productTypeId = delReq.controls['ProductTypeId'].value;\n        var _orderId = delReq.controls['OrderId'];\n        var _carrierStatus = delReq.controls['CarrierStatus'].value;\n        let isBlendReq = delReq.controls['IsBlendedRequest'].value;\n        var existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)];\n\n        if (existing == undefined || existing == null || existing.length == 0) {\n            this._loading = true;\n            this.sbService.getOrders(_jobId, _productTypeId, startDate, _carrierStatus, isBlendReq).subscribe(data => {\n                this._loading = false;\n                this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)] = data;\n                if (data.length > 0) {\n                    var order = data[0];\n                    if (_orderId && _orderId.value > 0) {\n                        var orderFromData = data.filter(t => t.OrderId == _orderId.value);\n                        if (orderFromData != null && orderFromData.length > 0) {\n                            order = orderFromData[0];\n                        }\n                    }\n                    if (_orderId.value == null || _orderId.value == 0) {\n                        delReq.controls['OrderId'].setValue(order.OrderId);\n                    }\n                    if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\n                        let location = OrderPickupLocationModel.ToLocation(order);\n                        this.setPickupLocation(delReq, location);\n                    }\n                    this.setTruckLoadType(delReq, order);\n                }\n                else {\n                    if (delReq.value.OrderId == null || delReq.value.OrderId == 0 || delReq.value.OrderId == undefined || delReq.value.OrderId == '') {\n                        tripError.Errors.push('Order not available for dr number ' + (drIndex + 1) + '.');\n                        this.setColumnStatusAfterApi();\n                    }\n                }\n                /////DR LEVEL PICKUP VALIDATION/////////////\n                if (!isCommonPickup && delReq.get('PickupLocationType').value != 2 && !delReq.controls.Terminal.get('Name').value) {\n                    tripError.Errors.push('Please select pickup location for dr number ' + (drIndex + 1) + '.');\n                    this.setColumnStatusAfterApi();\n                }\n                else if (!isCommonPickup && delReq.get('PickupLocationType').value == 2 && !delReq.controls.BulkPlant.get('SiteName').value) {\n                    tripError.Errors.push('Please select bulk plant for dr number ' + (drIndex + 1) + '.');\n                    this.setColumnStatusAfterApi();\n                }\n            });\n        }\n        else {\n\n            if (_orderId.value == undefined || _orderId.value == null || _orderId.value == '') {\n                _orderId.setValue(existing[0].OrderId);\n                let location = OrderPickupLocationModel.ToLocation(existing[0]);\n                this.setPickupLocation(delReq, location);\n                this.setTruckLoadType(delReq, existing[0]);\n            }\n            else if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\n                var order = existing[0];\n                if (_orderId.value != undefined && _orderId.value != null && _orderId.value > 0) {\n                    var orderFromData = existing.filter(t => t.OrderId == _orderId.value);\n                    if (orderFromData != null && orderFromData.length > 0) {\n                        order = orderFromData[0];\n                    }\n                }\n                let location = OrderPickupLocationModel.ToLocation(order);\n                this.setPickupLocation(delReq, location);\n                this.setTruckLoadType(delReq, order);\n            }\n            else {\n                if (delReq.value.OrderId == null || delReq.value.OrderId == 0 || delReq.value.OrderId == undefined || delReq.value.OrderId == '') {\n                    tripError.Errors.push('Order not available for dr number ' + (drIndex + 1) + '.');\n                    this.setColumnStatusAfterApi();\n                }\n            }\n            /////DR LEVEL PICKUP VALIDATION/////////////\n            if (!isCommonPickup && delReq.get('PickupLocationType').value != 2 && !delReq.controls.Terminal.get('Name').value) {\n                tripError.Errors.push('Please select pickup location for dr number ' + (drIndex + 1) + '.');\n                this.setColumnStatusAfterApi();\n            }\n            else if (!isCommonPickup && delReq.get('PickupLocationType').value == 2 && !delReq.controls.BulkPlant.get('SiteName').value) {\n                tripError.Errors.push('Please select bulk plant for dr number ' + (drIndex + 1) + '.');\n                this.setColumnStatusAfterApi();\n            }\n        }\n    }\n    setPickupLocation(form: FormGroup, order: OrderPickupLocationModel): void {\n        form.controls['PickupLocationType'].patchValue(order.PickupLocationType);\n        if (order.PickupLocationType != 2) {\n            if (order.Terminal) {\n                form.controls['Terminal'].patchValue(order.Terminal);\n            }\n        } else {\n            if (order.BulkPlant) {\n                if (order.BulkPlant.ZipCode) {\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\n                }\n                form.controls['BulkPlant'].patchValue(order.BulkPlant);\n            }\n        }\n    }\n    setTruckLoadType(delReq: FormGroup, order) {\n        delReq.controls['TruckLoadType'].setValue(order.TruckLoadType);\n        if (order.TruckLoadType != 1) {\n            delReq.controls['IsFilldInvoke'].setValue(false);\n        }\n    }\n\n    public intializePublish(dsbModelsToPublish: DSBSaveModel[], status: number = 0) {\n        if (dsbModelsToPublish.length > 0) {\n            this._loading = true;\n            this.loadQueueService.saveDsbLoadQueue(dsbModelsToPublish).subscribe((responce: LoadQueueStatusViewModel) => {\n                if (responce && responce.StatusCode == 0) {\n\n                    //get all error messages if exist\n                    let apiErrSring = '';\n                    if (responce.LoadQueueErrorInfo.length) {\n                        responce.LoadQueueErrorInfo.forEach(loadQueue => {\n                            if (loadQueue.Messages.length) {\n                                apiErrSring = apiErrSring + loadQueue.Messages.join(\", \");\n                            }\n                        });\n                    }\n                    if (status == 0) {\n                        if (responce.LoadQueueSuccessInfo.length > 0 && responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for ' + responce.LoadQueueSuccessInfo.length + ' out of ' + (responce.LoadQueueSuccessInfo.length + responce.LoadQueueErrorInfo.length) + ' columns.', 'Success', 4000);\n                            Declarations.msgerror('Publish falied for ' + responce.LoadQueueErrorInfo.length + ' columns with errors -' + apiErrSring, 'Error', 4000);\n                        }\n                        else if (responce.LoadQueueSuccessInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for all the columns.', 'Success', 4000);\n                        }\n                        else if (responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgerror('All the columns you are trying to publish have been failed.' + apiErrSring, 'Error', 4000);\n                        }\n                    }\n                    else {\n                        if (responce.LoadQueueSuccessInfo.length > 0 && responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for ' + responce.LoadQueueSuccessInfo.length + ' out of ' + (responce.LoadQueueSuccessInfo.length + responce.LoadQueueErrorInfo.length) + ' columns.', 'Success', 4000);\n                            Declarations.msgerror('Publish falied for ' + responce.LoadQueueErrorInfo.length + ' columns with errors -' + apiErrSring, 'Error', 4000);\n                        }\n                        else if (responce.LoadQueueSuccessInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for ' + responce.LoadQueueSuccessInfo.length + ' columns.', 'Success', 4000);\n                        }\n                        else if (responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgerror('Selected the columns you are trying to publish have been failed.' + apiErrSring, 'Error', 4000);\n                        }\n                    }\n                    //bind status and block columns\n                    if (responce && responce.LoadQueueSuccessInfo.length > 0) {\n                        responce.LoadQueueSuccessInfo.forEach(sch => {\n                            var columnValidation = this.columnValidations.find(top => top.ShiftIndex == sch.ShiftIndex && top.ScheduleIndex == sch.DriverColIndex);\n                            if (columnValidation != null && columnValidation.ColumnStatus != ColumnStatusEnum.Published) {\n                                let schedule = this.SbForm.get('Shifts.' + sch.ShiftIndex + '.Schedules.' + sch.DriverColIndex + '') as FormGroup;\n                                schedule.get('IsLoadQueueColumnBlocked').setValue(true);\n                                schedule.get('IsColumnSelected').setValue(false);\n                                schedule.get('LoadQueueColumnStatus').setValue(DSBLoadQueueStatus.New);\n                            }\n                        });\n                        this.dataService.setDsbQueueChangesForNotification(true);\n                    }\n                }\n                else {\n                    Declarations.msgerror('Unable to Publish columns. Please try again later.', 'Error', 4000);\n                }\n                this._loading = false;\n            })\n        }\n        else {\n            Declarations.msgwarning('No completed columns(s) found for publish load queue.', 'Warning', 4000);\n        }\n    }\n    public SortByOrder(a: ShiftLoadQueueDropdownItem, b: ShiftLoadQueueDropdownItem) {\n        var aOrderNo = a.OrderNo;\n        var bOrderNo = b.OrderNo;\n        return ((aOrderNo < bOrderNo) ? -1 : ((aOrderNo > bOrderNo) ? 1 : 0));\n    }\n}\n\n\n","<div class=\"load-queue-container\">\r\n    <button *ngIf=\"SbForm.controls['DSBFilter'].value==2 && isDisableControl==false\" type=\"button\" class=\"btn btn-primary btn-block btn-sm mt3\"\r\n        (click)=\"openPanel()\">\r\n        Load Queue\r\n    </button>\r\n    <ng-sidebar-container style=\"z-index: 99;\" *ngIf=\"_isQueuePanelInitiated\">\r\n        <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'left'\" style=\"height: 100vh\">\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <form [formGroup]=\"LoadQueueFilterForm\">\r\n                <div class=\"header-panel\">\r\n                    <div class=\"heading\">\r\n                        <h3 class=\"dib title\">Load Queue</h3>\r\n                        <a (click)=\"_opened=false\"><i class=\"fa fa-close fs18 float-right\"></i></a>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <ng-multiselect-dropdown #multiSelect_shift [placeholder]=\"'Select Shift'\"\r\n                                [settings]=\"settings\" [data]=\"shifts\"\r\n                                [formControl]=\"LoadQueueFilterForm.controls['Shift']\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <ng-multiselect-dropdown #multiSelect_shift [placeholder]=\"'Select Status'\"\r\n                                [settings]=\"settings\" [data]=\"statuses\"\r\n                                [formControl]=\"LoadQueueFilterForm.controls['Status']\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"status-panel\">\r\n                        <span class=\"text\"><span class=\"dot empty mr5\"></span>Empty</span>\r\n                        <span class=\"text\"><span class=\"dot partial mr5\"></span>Partially Completed</span>\r\n                        <span class=\"text\"><span class=\"dot completed mr5\"></span>Completed</span>\r\n                        <span class=\"text\"><span class=\"dot published mr5\"></span>Published</span>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <div class=\"scroll-body\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"panels\">\r\n                        <ng-container *ngFor=\"let shift of SbForm.controls['Shifts']['controls'];  let i = index;\">\r\n                            <ng-container *ngIf=\"checkShiftVisibility(shift)\">\r\n                                <!-- shift -->\r\n                                <ngb-panel id=\"panel-{{i+1}}\">\r\n                                    <ng-template ngbPanelTitle>\r\n                                        <div>\r\n                                            <span class=\"shift-name\">Shift {{i+1}}&nbsp;</span>\r\n                                            <span class=\"shift-time\">{{shift.get('StartTime').value}}&nbsp;-&nbsp;{{shift.get('EndTime').value}}</span>\r\n                                            <i class=\"fas fa-chevron-up ml10\"></i>\r\n                                            <i class=\"fas fa-chevron-down ml10\"></i>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <ng-template ngbPanelContent>\r\n                                        <!-- column -->\r\n                                        <div class=\"load-panel-row\">\r\n                                            <ng-container *ngFor=\"let schedule of shift.controls['Schedules'].controls; let j = index;\">\r\n                                                <!-- [schedule.isValid?'completed':'', !schedule.isValid?'partial':''] -->\r\n                                                <div class=\"load-panel\" [ngClass]=\"getClassByStatus(i, j)\"\r\n                                                    placement=\"right\" [ngbPopover]=\"popContent\" container=\"body\"\r\n                                                    popoverClass=\"load-queue-popover\" [autoClose]=\"'outside'\"\r\n                                                    *ngIf=\"schedule.get('IsLoadQueueCollapsed').value && schedule.get('LoadQueueFilterVisibility').value\"\r\n                                                    (click)=\"setValidationObjectFromList(i, j)\">\r\n                                                    <div class=\"column-inital-div\">\r\n                                                        <div class=\"column-inital\">\r\n                                                            C{{j+1}}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"driver-name\">\r\n                                                        <div>\r\n                                                            <ng-container *ngIf=\"schedule.get('Drivers').value.length;else naTemplate\">\r\n                                                                <span placement=\"top\"\r\n                                                                    ngbTooltip=\"{{schedule.get('Drivers').value[0].Name}}\">{{schedule.get('Drivers').value[0].Name}}</span>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        <small *ngIf=\"schedule.get('LoadQueueColumnStatus').value!=-1 && schedule.get('LoadQueueColumnStatus').value!=2 && getLoadQueueStatus(schedule.get('LoadQueueColumnStatus').value,i,j)!=''\">{{getLoadQueueStatus(schedule.get('LoadQueueColumnStatus').value,i,j)}}</small>\r\n                                                    </div>\r\n                                                    <div class=\"col-check\"\r\n                                                        *ngIf=\"!schedule.get('IsLoadQueueColumnBlocked').value\">\r\n                                                        <div class=\"custom-control custom-checkbox\">\r\n                                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"checkbox_{{i\r\n                                                                   }}_{{j}}\"\r\n                                                                [checked]=\"schedule.get('IsColumnSelected').value\"\r\n                                                                (change)=\"selectColumn($event, schedule)\">\r\n                                                            <label class=\"custom-control-label\"\r\n                                                                for=\"checkbox_{{i}}_{{j}}\"></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </ngb-panel>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ngb-accordion>\r\n                </div>\r\n                <div class=\"footer\" *ngIf=\"shifts.length\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <button type=\"button\" class=\"btn btn-large\"\r\n                                [ngClass]=\" _selectAll== true ? 'btn-danger' : 'btn-primary'\"\r\n                                (click)=\"selectAllColumn();\">\r\n                                <span>{{ _selectAll ? 'UnSelect All' :' Select All' }}</span>\r\n                            </button>\r\n                            <button type=\"button\" placement=\"top\" container=\"body\" ngbTooltip=\"Move To Grid\"\r\n                                (click)=\"moveColumnsToGrid()\" class=\"btn btn-danger\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-4 text-right\">\r\n                            <button type=\"button\" class=\"btn btn-large btn-success\" (click)=\"iniatePublishColumns()\">\r\n                                Publish\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <ul class=\"nav nav-tabs\" id=\"popoverTabs\" role=\"tablist\">\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <a class=\"nav-link active\" id=\"validation-tab\" data-toggle=\"tab\" href=\"#validation\" role=\"tab\"\r\n                    aria-controls=\"validation\" aria-selected=\"true\">Validations</a>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <a class=\"nav-link\" id=\"location-tab\" data-toggle=\"tab\" href=\"#location\" role=\"tab\"\r\n                    aria-controls=\"location\" aria-selected=\"false\">Locations/Customers</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"tab-content\" id=\"popoverTabsContent\">\r\n            <div class=\"tab-pane fade show active\" id=\"validation\" role=\"tabpanel\" aria-labelledby=\"validation-tab\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <ng-container *ngIf=\"validationObj.DrCount>0; else emptyLoad\">\r\n                            \r\n                            <ng-container>\r\n                                <!-- *ngIf=\"validationObj.Errors && validationObj.Errors.length\" -->\r\n                                <h4 *ngIf=\"validationObj.Errors.length\" class=\"title\">Column</h4>\r\n                                <ng-container *ngFor=\"let colErr of validationObj.Errors; let colIndex = index;\">\r\n                                    <p class=\"sub-text error-text\">\r\n                                        <i class=\"fa fa-arrow-circle-right\"\r\n                                           aria-hidden=\"true\"></i> {{colErr}}\r\n                                    </p>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"validationObj.TripErrors.length\">\r\n                                <ng-container\r\n                                    *ngFor=\"let trErrors of validationObj.TripErrors; let trErrIndex = index;\">\r\n\r\n                                    <h4 *ngIf=\"trErrors.Errors.length\" class=\"title\">\r\n                                        Load {{(+trErrIndex+1)}}\r\n                                    </h4>\r\n\r\n                                    <p class=\"sub-text error-text\" *ngFor=\"let err of trErrors.Errors;\">\r\n                                        <i class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\r\n                                        {{err}}\r\n                                    </p>\r\n                                </ng-container>                               \r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"validationObj.TripErrors.length==0\">\r\n                                <h4 class=\"title\">No error found.</h4>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"location\" role=\"tabpanel\" aria-labelledby=\"location-tab\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n\r\n                        <!-- <h4 *ngIf=\"validationObj.Locations && validationObj.Locations.length\" class=\"title\">Locations</h4> -->\r\n\r\n                        <p *ngFor=\"let jb of validationObj.Locations; let jbIndex = index;\" class=\"sub-text\">\r\n                            {{+jbIndex+1}}) {{jb}}--{{validationObj.Customers[jbIndex]}}\r\n                        </p>\r\n\r\n                        <!-- <h4 *ngIf=\"validationObj.Customers && validationObj.Customers.length\" class=\"title\">\r\n                            Customers</h4>\r\n\r\n                        <p *ngFor=\"let cst of validationObj.Customers; let cstIndex = index;\" class=\"sub-text\">\r\n                            {{+cstIndex+1}}) {{cst}}</p> -->\r\n\r\n                        <p *ngIf=\"validationObj.Locations.length==0\">Locations\r\n                            and customers not available.</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #naTemplate>\r\n    <div class=\"fs12 text-truncate\" container=\"body\" placement=\"bottom\" ngbTooltip=\"Driver not assigned\">Driver not\r\n        assigned</div>\r\n</ng-template>\r\n<ng-template #emptyLoad>\r\n    <p>Delivery requests does not exist in selected column.</p>\r\n</ng-template>\r\n<ng-template #validColumn>\r\n    <p>Valid column.</p>\r\n</ng-template>","import { ColumnStatusEnum } from \"src/app/app.enum\";\r\nimport { DropDownItem } from \"src/app/buyer-wally-board/Models/BuyerWallyBoard\";\r\nimport { DropdownItem } from \"src/app/statelist.service\";\r\nimport { DeliveryRequestViewModel, TrailerModel } from \"../../models/DispatchSchedulerModels\";\r\n\r\nimport { DSBSaveModel} from '../../models/DispatchSchedulerModels';\r\nexport class DSBLoadQueueModel {\r\n    Id: string;\r\n    ScheduleBuilderId: string;\r\n    RegionId: string;\r\n    Date: string;\r\n    ShiftId: string;\r\n    ShiftIndex: number;\r\n    DriverRowIndex: number;\r\n}\r\n\r\nexport class DsbLoadQueueSuccess {\r\n    Id: string;\r\n    RegionId: string;\r\n    ShiftId: string;\r\n    ShiftIndex: number;\r\n    DriverRowIndex: number;\r\n}\r\n\r\n\r\nexport class DrError {\r\n    DrIndex: number;\r\n    Errors: string[];\r\n\r\n    constructor() {\r\n        this.DrIndex = 0;\r\n        this.Errors = [];\r\n    }\r\n}\r\n\r\n\r\nexport class TripError {\r\n    TripIndex: number;\r\n    Errors: string[];\r\n    //DrErrors: DrError[];\r\n\r\n    constructor() {\r\n        this.TripIndex = 0;\r\n        this.Errors = [];\r\n        //this.DrErrors = [];\r\n    }\r\n}\r\nexport class LoadQueueColumnValidations {\r\n    DrCount: number;\r\n    TrailerJobIncompatibleDrs: number;\r\n    ShiftIndex: number;\r\n    ShiftId: string;\r\n    ScheduleIndex: number;\r\n    Errors: string[];\r\n    TripErrors: TripError[];\r\n    ColumnStatus: ColumnStatusEnum;\r\n    Customers: string[];\r\n    Locations: string[];\r\n\r\n    constructor() {\r\n        this.DrCount = 0;\r\n        this.ShiftIndex = 0;\r\n        this.ScheduleIndex = 0;\r\n        this.Errors = [];\r\n        this.TripErrors = [];\r\n        this.ColumnStatus = 0;\r\n        this.Customers = [];\r\n        this.Locations = [];\r\n    }\r\n}\r\n\r\nexport class TrailersDeliveryRequestViewModel {\r\n    trailers: any[];//TrailerModel\r\n    deliveryRequests: DeliveryRequestViewModel[];\r\n    shiftIndex: number;\r\n    scheduleIndex: number;\r\n\r\n    constructor() {\r\n        this.trailers = [];\r\n        this.deliveryRequests = [];\r\n    }\r\n}\r\n\r\nexport class TrailerJobNonCompatibleDrs {\r\n    drCount: number;\r\n    shiftIndex: number;\r\n    scheduleIndex: number;\r\n}\r\n\r\nexport class LoadQueueStatusViewModel {\r\n    StatusCode: number;\r\n    LoadQueueSuccessInfo: DsbLoadQueueStatusViewModel[];\r\n    LoadQueueErrorInfo: DsbLoadQueueStatusViewModel[];\r\n}\r\n\r\nexport class DsbLoadQueueStatusViewModel {\r\n    ShiftIndex: number;\r\n    DriverColIndex: number;\r\n    TfxDriverName: string;\r\n    TfxUserId: number;\r\n    TfxCompanyId: number;\r\n    Messages: LoadQueueStatus[];\r\n}\r\n\r\nexport class LoadQueueStatus {\r\n    StatusMessage: string;\r\n}\r\n\r\n\r\nexport class DSBLoadQueueNotificationResponse {\r\n    public ScheduleBuilderId: string;\r\n    public RegionId: string;\r\n    public Date: string;\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public DriverColIndex: number;\r\n    public Status: number;\r\n    public DSBSaveModel: DSBSaveModel = new DSBSaveModel();\r\n\r\n}\r\nexport class DSBLoadQueueNotificationModel {\r\n    public ScheduleBuilderId: string;\r\n    public RegionId: string;\r\n    public Date: string;\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HandleError } from '../../../errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { FormArray, FormControl, FormGroup } from \"@angular/forms\";\r\nimport { DSBLoadQueueModel, DSBLoadQueueNotificationModel, DSBLoadQueueNotificationResponse, TrailersDeliveryRequestViewModel } from \"./dsb-load.model\";\r\nimport { DeliveryRequestViewModel, DSBSaveModel, ScheduleShiftModel } from \"../../models/DispatchSchedulerModels\";\r\n\r\n\r\n@Injectable()\r\n\r\nexport class LoadQueueService extends HandleError {\r\n\r\n    private validateTrailerJobCompatibilityUrl = '/Carrier/ScheduleBuilder/ValidateTrailerJobCompatibilityForLoadQueue';\r\n    private createLoadQueueUrl = '/Carrier/Freight/CreateLoadQueue';\r\n    private deleteLoadQueueUrl = '/Carrier/Freight/DeleteLoadQueue';\r\n    private saveLoadQueueUrl = '/Carrier/ScheduleBuilder/SaveDsbLoadQueue';\r\n    private getLoadQueueNotificationsUrl = '/Carrier/Freight/GetLoadQueueNotifications';\r\n\r\n    public loadQueueColumnMovedSubject: Subject<boolean> = new Subject<boolean>();\r\n\r\n    constructor(private httpClient: HttpClient) { super(); }\r\n\r\n    getTrailerJobCompatibility(models: TrailersDeliveryRequestViewModel[]): Observable<any> {\r\n        return this.httpClient.post(this.validateTrailerJobCompatibilityUrl, models).pipe(catchError(this.handleError<any>('getTrailerJobCompatibility', null)));\r\n    }\r\n\r\n    createLoadQueue(data: DSBLoadQueueModel[]): Observable<any> {\r\n        return this.httpClient.post(this.createLoadQueueUrl, data).pipe(catchError(this.handleError<any>('createLoadQueue', null)));\r\n    }\r\n\r\n    deleteLoadQueue(ids: string[]): Observable<any> {\r\n        return this.httpClient.post(this.deleteLoadQueueUrl, ids).pipe(catchError(this.handleError<any>('deleteLoadQueue', null)));\r\n    }\r\n\r\n    saveDsbLoadQueue(data: any[]): Observable<any> {\r\n        return this.httpClient.post(this.saveLoadQueueUrl, data).pipe(catchError(this.handleError<any>('saveDsbLoadQueue', null)));\r\n    }\r\n\r\n    getFilterForm() {\r\n        return new FormGroup({ Shift: new FormControl(null), Status: new FormControl(null) });\r\n    }\r\n\r\n    getLoadQueueNotifications(data: DSBLoadQueueNotificationModel[]): Observable<DSBLoadQueueNotificationResponse[]> {\r\n        return this.httpClient.post(this.getLoadQueueNotificationsUrl, data).pipe(catchError(this.handleError<any>('getLoadQueueNotifications', null)));\r\n    }\r\n\r\n    setLoadQueueColumnMoved(data: boolean) {\r\n        this.loadQueueColumnMovedSubject.next(data);\r\n    }\r\n\r\n    validatePublishLoad(trip: FormGroup) {\r\n        var isValid = true;\r\n        if (trip.controls.IsCommonPickup.value && !(trip.controls.Terminal.valid || trip.controls.BulkPlant.valid))\r\n            isValid = false;\r\n        return isValid;\r\n    }\r\n\r\n    getCustomerAndJobFromDr(drs: DeliveryRequestViewModel[]) {\r\n\r\n        let _jobs: string[] = [];\r\n        let _customers: string[] = [];\r\n\r\n        drs.forEach(dr => {\r\n            if (dr.CustomerCompany && !_customers.includes(dr.CustomerCompany)) {\r\n                _customers.push(dr.CustomerCompany);\r\n                _jobs.push(dr.JobName || '');\r\n            }\r\n        });\r\n        return { Locations: _jobs, customers: _customers };\r\n    }\r\n\r\n    GetAllLoadsDR(trips: FormArray) {\r\n        var _deliveryRequests = [];\r\n        if (trips) {\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var trip = trips.controls[i] as FormGroup;\r\n                var deliveryRequests = trip.controls[\"DeliveryRequests\"].value;\r\n                if (deliveryRequests) {\r\n                    for (var j = 0; j < deliveryRequests.length; j++) {\r\n                        var deliveryRequest = deliveryRequests[j];\r\n                        if (deliveryRequest) {\r\n                            _deliveryRequests.push(deliveryRequest);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _deliveryRequests;\r\n    }\r\n\r\n    getDSBSaveModel(SbForm: FormGroup) {\r\n        var sbModel = SbForm.value;\r\n        var dataToSave = new DSBSaveModel();\r\n        dataToSave.Id = sbModel.Id;\r\n        dataToSave.Date = sbModel.Date;\r\n        dataToSave.RegionId = sbModel.RegionId;\r\n        dataToSave.ObjectFilter = sbModel.ObjectFilter;\r\n        dataToSave.RegionFilter = sbModel.RegionFilter;\r\n        dataToSave.DateFilter = sbModel.DateFilter;\r\n        dataToSave.DSBFilter = sbModel.DSBFilter;\r\n        dataToSave.TimeStamp = sbModel.TimeStamp;\r\n        dataToSave.Status = sbModel.Status;\r\n        dataToSave.WindowMode = sbModel.WindowMode;\r\n        dataToSave.ToggleRequestMode = sbModel.ToggleRequestMode;\r\n        if (sbModel.Id == null) {\r\n            for (var i = 0; i < sbModel.Shifts.length; i++) {\r\n                var shift = new ScheduleShiftModel();\r\n                shift.Id = sbModel.Shifts[i].Id;\r\n                shift.StartTime = sbModel.Shifts[i].StartTime;\r\n                shift.EndTime = sbModel.Shifts[i].EndTime;\r\n                shift.SlotPeriod = sbModel.Shifts[i].SlotPeriod;\r\n                dataToSave.Shifts.push(shift);\r\n            }\r\n        }\r\n        return dataToSave;\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, AfterViewInit, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { ShiftViewModel, DeliveryRequestViewModel, OttoTripModel, OttoBuilder } from '../models/DispatchSchedulerModels';\r\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DataService } from '../service/data.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n    selector: 'app-otto-builder',\r\n    templateUrl: './otto-builder.component.html',\r\n    styleUrls: ['./otto-builder.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OttoBuilderComponent implements OnInit, AfterViewInit {\r\n    public _loadingOttoDRs: boolean = true;\r\n    public _loadingShifts: boolean = true;\r\n    public _EnableScheduleDR: boolean = false;\r\n\r\n    @Input() public SelectedDate: string;\r\n    @Input() public DSBFilter: number;\r\n\r\n    public SelectedRegionId: string;\r\n    public SelectedShiftId: string;\r\n    private ShiftStartTime: string = null;\r\n    private ShiftEndTime: string = null;\r\n\r\n    public MinInputDate: Date = new Date();\r\n    public MaxInputDate: Date = new Date();\r\n\r\n    public Shifts: ShiftViewModel[] = [];\r\n    public Loads: OttoTripModel[] = [];\r\n    public AllDeliveryRequests: DeliveryRequestViewModel[] = [];\r\n    public SelectedDeliveryRequests: DeliveryRequestViewModel[] = [];\r\n    public SelectedLoads: Map<number, DeliveryRequestViewModel[]> = new Map<number, DeliveryRequestViewModel[]>();\r\n\r\n    constructor(private sbService: ScheduleBuilderService, private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef) {\r\n        this.MaxInputDate.setDate(this.MinInputDate.getDate() + 30);\r\n        this.SelectedRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\r\n        //this.SelectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n        this.SelectedShiftId = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.DSBFilter == 1) {\r\n            this.sbService.getShifts(this.SelectedRegionId).subscribe(x => {\r\n                if (x) {\r\n                    this.Shifts = x;\r\n                    if (this.Shifts && this.Shifts.length > 0) {\r\n                        this.SelectedShiftId = this.Shifts[0].Id;\r\n                        this.ShiftStartTime = this.Shifts[0].StartTime;\r\n                        this.ShiftEndTime = this.Shifts[0].EndTime;\r\n                    }\r\n                }\r\n                this._loadingShifts = false;\r\n                this.changeDetectorRef.detectChanges();\r\n                if (this.ShiftStartTime && this.ShiftEndTime) {\r\n                    this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n                }\r\n                else {\r\n                    this._loadingOttoDRs = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.sbService.getDriversShifts(this.SelectedRegionId, this.SelectedDate).subscribe(x => {\r\n                if (x) {\r\n                    this.Shifts = x;\r\n                    if (this.Shifts && this.Shifts.length > 0) {\r\n                        this.SelectedShiftId = this.Shifts[0].Id;\r\n                        this.ShiftStartTime = this.Shifts[0].StartTime;\r\n                        this.ShiftEndTime = this.Shifts[0].EndTime;\r\n                    }\r\n                }\r\n                this._loadingShifts = false;\r\n                this.changeDetectorRef.detectChanges();\r\n                if (this.ShiftStartTime && this.ShiftEndTime) {\r\n                    this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n                }\r\n                else {\r\n                    this._loadingOttoDRs = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        //this.getScheduleDetails(this.SelectedRegionId, this.SelectedDate);\r\n    }\r\n\r\n    public closeSlider(): void {\r\n        this.dataService.setOpenDsbOttoBuilderSubject(false);\r\n    }\r\n\r\n    public filterByShift(): void {\r\n\r\n        let selectedShift: ShiftViewModel = null;\r\n        if (this.SelectedShiftId) {\r\n            selectedShift = this.Shifts.find(x => x.Id == this.SelectedShiftId);\r\n        }\r\n        if (selectedShift) {\r\n            this.ShiftStartTime = selectedShift.StartTime;\r\n            this.ShiftEndTime = selectedShift.EndTime;\r\n            this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n            this.SelectedLoads.clear();\r\n            this._EnableScheduleDR = false;\r\n        }\r\n    }\r\n\r\n    public selectDR(loadIdx: number, drIdx: number) {\r\n        let indexvalue = loadIdx + \"_\" + drIdx;\r\n        let dr = this.Loads[loadIdx].DeliveryRequests[drIdx];\r\n        if ($(\"#ottoschedule_\" + indexvalue).hasClass(\"selected-dr\")) {\r\n            $(\"#ottoschedule_\" + indexvalue).removeClass(\"selected-dr\");\r\n            let drs = this.SelectedLoads.get(loadIdx) || [];\r\n            let drIndex = drs.findIndex(x => x == dr);\r\n            if (drIndex >= 0) {\r\n                drs.splice(drIndex, 1);\r\n                this.SelectedLoads.set(loadIdx, drs);\r\n                this._EnableScheduleDR = drs.length != 0;\r\n            }\r\n        } else {\r\n            let drs = this.SelectedLoads.get(loadIdx) || [];\r\n            drs.push(dr);\r\n            this.SelectedLoads.set(loadIdx, drs);\r\n            this._EnableScheduleDR = drs.length != 0;\r\n            $(\"#ottoschedule_\" + indexvalue).addClass(\"selected-dr\");\r\n        }\r\n        //console.log(this.SelectedLoads.get(loadIdx));\r\n    }\r\n\r\n    public filterScheduleDetails(date: string): void {\r\n        if (date && date != '' && this.SelectedDate != date) {\r\n            this.SelectedDate = date;\r\n            if (this.DSBFilter == 2) {\r\n                this.ShiftStartTime = null;\r\n                this.ShiftEndTime = null;\r\n                this.sbService.getDriversShifts(this.SelectedRegionId, this.SelectedDate).subscribe(x => {\r\n                    if (x) {\r\n                        this.Shifts = x;\r\n                        if (this.Shifts && this.Shifts.length > 0) {\r\n                            this.SelectedShiftId = this.Shifts[0].Id;\r\n                            this.ShiftStartTime = this.Shifts[0].StartTime;\r\n                            this.ShiftEndTime = this.Shifts[0].EndTime;\r\n                        }\r\n                    }\r\n                    this.changeDetectorRef.detectChanges();\r\n                    if (this.ShiftStartTime && this.ShiftEndTime) {\r\n                        this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n                        this.SelectedLoads.clear();\r\n                        this._EnableScheduleDR = false;\r\n                    }\r\n                    else {\r\n                        this._loadingOttoDRs = false;\r\n                        this.changeDetectorRef.detectChanges();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, date);\r\n                this.SelectedLoads.clear();\r\n                this._EnableScheduleDR = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getScheduleDetails(regionId: string, shiftStartTime: string, shiftEndTime: string, date: string) {\r\n        this._loadingOttoDRs = true;\r\n        this.sbService.getOttoScheduleDetails(regionId, shiftStartTime, shiftEndTime, date).subscribe(data => {\r\n            if (data != null && data.length > 0) {\r\n                this.Loads = data;\r\n            }\r\n            this._loadingOttoDRs = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    public ScheduleDRs(): void {\r\n        let ottoBuilder = new OttoBuilder();\r\n        ottoBuilder.Date = this.SelectedDate;\r\n        ottoBuilder.RegionId = this.SelectedRegionId;\r\n        ottoBuilder.ShiftId = this.SelectedShiftId;\r\n        this.SelectedLoads.forEach((value, key) => {\r\n            let load = new OttoTripModel();\r\n            load.DriverRowIndex = 0;\r\n            load.DriverColIndex = key;\r\n            load.StartTime = this.Loads[key].StartTime;\r\n            load.EndTime = this.Loads[key].EndTime;\r\n            load.DeliveryRequests = value;\r\n            ottoBuilder.Loads.push(load);\r\n        });\r\n        this._loadingOttoDRs = true;\r\n        this.sbService.scheduleOttoDRs(ottoBuilder).subscribe(x => {\r\n            this._loadingOttoDRs = false;\r\n            this.changeDetectorRef.detectChanges();\r\n            if (x.StatusCode == 0) {\r\n                this.dataService.setOpenDsbOttoBuilderSubject(false);\r\n                this.dataService.refreshDsbOttoBuilderSubject(true);\r\n                Declarations.msgsuccess(x.StatusMessage, undefined, undefined);\r\n            } else {\r\n                Declarations.msgerror(x.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"pt10 pb10 border-b\">\r\n    <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\" (click)=\"closeSlider()\"><i class=\"fa fa-close fs18\"></i></a>\r\n    <div class=\"dib ml15 mr15\"><input type=\"text\" class=\"form-control datepicker\" [(ngModel)]=\"SelectedDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinInputDate\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"filterScheduleDetails($event);\" /></div>\r\n    <div class=\"dib\">\r\n        <select [(ngModel)]=\"SelectedShiftId\" class=\"form-control\" (change)=\"filterByShift()\">\r\n            <option [ngValue]=\"null\" selected>Select Shift</option>\r\n            <option *ngFor=\"let shift of Shifts\" [ngValue]=\"shift.Id\">\r\n                {{'Shift - ' + shift.StartTime + ' - ' + shift.EndTime}}\r\n            </option>\r\n        </select>\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingShifts\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"col-sm-12\">\r\n    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingOttoDRs\">\r\n        <span class='spinner-dashboard pa'></span>\r\n    </div>\r\n    <div class=\"text-center mt10\" *ngIf=\"Loads.length==0\">\r\n        <i class=\"fa fas fa-exclamation-triangle opacity8 fs12\"></i>\r\n        <label class=\"color-grey fs12 mb0 ml10\">No delivery request exists</label>\r\n    </div>\r\n        <div class=\"row mt10 otto-drpanel mb10\">\r\n            <div class=\"col-sm-2\" *ngFor=\"let load of Loads; let i = index\">\r\n                <label>{{load.StartTime}} - {{load.EndTime}}</label>\r\n                <ng-container *ngIf=\"load.DeliveryRequests.length > 0\">\r\n                    <div class=\"drwrapper pr5\" *ngFor=\"let dr of load.DeliveryRequests; let j = index\">\r\n                        <!--add selected-dr class if div is selected-->\r\n                        <div id=\"ottoschedule_{{i}}_{{j}}\" (click)=\"selectDR(i,j)\" class=\"radius-5 mb2 pr pa5 handpointer\" [ngClass]=\"{'mustgo_bg':dr.Priority == 1,'shouldgo_bg':dr.Priority == 2,'couldgo_bg':dr.Priority == 3}\">\r\n                            <i class=\"fas fa-check-circle pa fs16 checkbox animated bounceIn\"></i>\r\n                            <label class=\"f-bold fs11 mb0\">{{dr.DeliveryWindow}}</label>\r\n                            <div>\r\n                                {{dr.CustomerCompany}} | {{dr.JobName}}<br />\r\n                                <span class=\"mr5\">{{dr.ProductType}}</span>\r\n                                <span class=\"mr5\" *ngIf=\"dr.ScheduleQuantityType==1 || dr.ScheduleQuantityType==0\">{{dr.RequiredQuantity | number:'1.0-2'}}</span>\r\n                                <span class=\"mr5\" *ngIf=\"dr.ScheduleQuantityType==1 || dr.ScheduleQuantityType==0\">\r\n                                    <span *ngIf=\"dr.UoM==1; else litres\">G</span>\r\n                                    <ng-template #litres>L</ng-template>\r\n                                </span>\r\n                                <!--{dr.TankName}, {dr.LocationName}<br />-->\r\n                                <!--<span class=\"pull-left mr5\">{dr.TankMaxFill}</span>\r\n        <span class=\"pull-left mr5\" *ngIf=\"dr.ScheduleQuantityType==1 || dr.ScheduleQuantityType==0\">\r\n            <span *ngIf=\"dr.UoM==1; else litres\">G</span>\r\n            <ng-template #litres>L</ng-template>\r\n        </span>-->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"!_EnableScheduleDR\" (click)=\"ScheduleDRs()\">Schedule DRs</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { OttoNotifications } from '../../models/DispatchSchedulerModels';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DataService } from '../../service/data.service';\r\ndeclare function closeSlidePanel(): any;\n@Component({\n    selector: 'app-otto-notification',\n    templateUrl: './otto-notification.component.html',\n    styleUrls: ['./otto-notification.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OttoNotificationComponent implements OnInit {\n    public SelectedRegionId: string;\n    public _loadingOttoNotification: boolean = false;\n    public OttoNotificationsDetails: OttoNotifications[] = [];\n    constructor(private sbService: ScheduleBuilderService, private dataService: DataService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        this.SelectedRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\n    }\n\n    ngOnInit() {\n        this.getOttoNotification();\n    }\n    public closeSlider(): void {\r\n        this.dataService.setOpenDsbOttoNotificationSubject(false);\r\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n    public getOttoNotification() {\n        this._loadingOttoNotification = true;\n        this.sbService.getOttoNotificationDetails(this.SelectedRegionId)\r\n            .subscribe(detail => {\r\n                this.OttoNotificationsDetails = detail;\r\n                this.dataService.setDsbOttoNotificationCountSubject(this.OttoNotificationsDetails.length);\r\n                this._loadingOttoNotification = false;\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n    }\n    public updateNotificationStatus(Id:string) {\n        this._loadingOttoNotification = true;\n        this.sbService.updateNotificationStatus(Id)\r\n            .subscribe(detail => {\r\n                this._loadingOttoNotification = false;\r\n                if (detail.StatusCode == 0) {\r\n                    this.getOttoNotification();\r\n                }\r\n            });\r\n    }\n}\n","<div class=\"pt10 pb0\"><a class=\"ml20 close-panel\" (click)=\"closeSlider()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a><h3 class=\"dib mt0 mb0 ml15\">Change in Delivery Window</h3></div>\r\n<div class=\"pt10 pb10 pl20 pr20\" *ngIf=\"OttoNotificationsDetails.length>0\">\r\n    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingOttoNotification\">\r\n        <span class='spinner-dashboard pa'></span>\r\n    </div>\r\n    <div class=\"well mb10 pr\" *ngFor=\"let ottoNotification of OttoNotificationsDetails let i = index\">\r\n        <a class=\"pa right0 top0 mr15 mt10 color-grey\" (click)=\"updateNotificationStatus(ottoNotification.Id)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <div [innerHTML]=\"ottoNotification.Message\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"text-center\" *ngIf=\"OttoNotificationsDetails.length==0\">\r\n    No records found.\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { RouteInformationModel, JobWithSequence, RouteTfxJobsList } from '../../models/location';\nimport { RouteInfoService } from '../../service/route-info.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { PanelStatus } from 'src/app/app.enum';\n\n@Component({\n  selector: 'app-route-info',\n  templateUrl: './route-info.component.html',\n  styleUrls: ['./route-info.component.css']\n})\nexport class RouteInfoComponent implements OnInit {\n\n  public RouteForm: FormGroup;\n  public RouteName: string;\n  public RouteList: RouteInformationModel[] = [];\n  public RouteLocationList: RouteTfxJobsList[] = [];\n\n  public JobList: DropdownItem[] = [];\n  public SelectedRegionId: string = '';\n  public currentUserCompanyId: number = 0;\n  public multiDropdownSettings: IDropdownSettings;\n  public PanelStatus = PanelStatus.ShowRouteList;\n  public IsLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private routeInfoService: RouteInfoService) { }\n\n  ngOnInit() {\n    this.RouteForm = this.initForm();\n    this.multiDropdownSettings = {\n      singleSelection: true,\n      idField: 'Id',\n      textField: 'Name',\n      itemsShowLimit: 1,\n      allowSearchFilter: true\n    };\n  }\n  validateLocations(): boolean {\n    let tfxJobs = this.RouteForm.get('TfxJobs').value as any[];\n    let seen = new Set();\n    return tfxJobs.some(function(currentObject) {\n        return seen.size === seen.add(currentObject.JobDetails[0].Id).size;\n    });\n  }\n  onSubmit() {\n\n    if (!this.validateLocations()) {\n      let formValue = this.RouteForm.value;\n      let data: RouteInformationModel = {\n        Id: formValue.Id,\n        Name: formValue.Name,\n        TfxJobs: formValue.TfxJobs.map((job, index) => ({ SequenceNo: (index + 1), Id: job.JobDetails[0].Id, Name: job.JobDetails[0].Name })),\n        RegionId: formValue.RegionId,\n        TfxCompanyId: formValue.TfxCompanyId,\n        CreatedBy: null,\n        ShiftInfoDetails: null\n      };\n\n      this.IsLoading = true;\n      if (this.RouteForm.get('Id').value) {\n        this.routeInfoService.updateRouteInfo(data).subscribe(response => {\n          if (response != null && response['StatusCode'] == 0) {\n            this.PanelStatus = PanelStatus.ShowRouteList;\n            this.getRoutesByRegion();\n            Declarations.msgsuccess(\"Route updated.\", undefined, undefined);\n          }\n          else {\n            Declarations.msgerror(response['StatusMessage'], undefined, undefined);\n          }\n          this.IsLoading = false;\n        });\n      }\n      else {\n        this.routeInfoService.createRouteInfo(data).subscribe(response => {\n          if (response != null && response['StatusCode'] == 0) {\n            this.PanelStatus = PanelStatus.ShowRouteList;\n            this.getRoutesByRegion();\n            Declarations.msgsuccess(response['StatusMessage'], undefined, undefined);\n          }\n          else {\n            Declarations.msgerror(response['StatusMessage'], undefined, undefined);\n          }\n          this.IsLoading = false;\n        });\n      }\n    }\n    else{\n      Declarations.msgerror('Duplicate locations exist.', undefined, undefined);\n    }\n  }\n  setRegionId(companyId: number, regionId: string) {\n    this.PanelStatus = PanelStatus.ShowRouteList;\n    this.SelectedRegionId = regionId;\n    this.currentUserCompanyId = companyId;\n    this.getRoutesByRegion();\n  }\n  editRouteClicked(route: RouteInformationModel) {\n    this.getLocationsByRoute(route.Id);\n    this.PanelStatus = PanelStatus.ShowForm;\n    this.buildForm(route);\n  }\n  getRouteInfo(route: RouteInformationModel) {\n    var routeLocInfo = this.RouteList.find(top => top.Id == route.Id);\n    if (routeLocInfo != null) {\n      this.routeInfoService.sendRouteInfo(routeLocInfo);\n    }\n  }\n  deleteRouteClicked(route: RouteInformationModel) {\n    this.IsLoading = true;\n    this.PanelStatus = PanelStatus.ShowRouteList;\n    let data = {\n      RouteId: route.Id,\n      RegionId: route.RegionId\n    }\n    this.routeInfoService.deleteRouteInfo(data).subscribe(response => {\n      if (response != null && response['StatusCode'] == 0) {\n        Declarations.msgsuccess(response['StatusMessage'], undefined, undefined);\n      }\n      else {\n        Declarations.msgerror(response['StatusMessage'], undefined, undefined);\n      }\n      this.IsLoading = false;\n      this.getRoutesByRegion();\n    });\n  }\n  newRouteClicked() {\n    this.PanelStatus = PanelStatus.ShowForm;\n    this.getLocationsByRegion();\n    this.RouteForm = this.initForm();\n    this.addLocation(null);\n  }\n\n  initForm(): FormGroup {\n    return this.fb.group({\n      Id: this.fb.control(''),\n      Name: this.fb.control('', Validators.required),\n      RegionId: this.fb.control(this.SelectedRegionId, Validators.required),\n      TfxCompanyId: this.fb.control(this.currentUserCompanyId),\n      ShiftInfoDetails: this.fb.control(''),\n      TfxJobs: this.fb.array([], Validators.required)\n    });\n  }\n\n  buildForm(route: any) {\n    let jobs: JobWithSequence[] = [];\n    if (route && route.TfxJobs.length > 0) {\n      jobs = route.TfxJobs.map(job => ({\n        SequenceNo: job.SequenceNo,\n        JobDetails: { Id: job.Id.toString(), Name: job.Name }\n      }));\n    }\n\n    this.RouteForm = this.initForm();\n    let name = this.RouteForm.get('Name') as FormControl;\n    name.patchValue(route.Name);\n    let id = this.RouteForm.get('Id') as FormControl;\n    id.patchValue(route.Id);\n    let shift = this.RouteForm.get('ShiftInfoDetails') as FormControl;\n    shift.patchValue(route.ShiftInfoDetails);\n    let tfxJobs = this.RouteForm.get('TfxJobs') as FormArray;\n    jobs.forEach(job => {\n      tfxJobs.push(this.getRouteJob(job));\n    });\n  }\n  addLocation(data: JobWithSequence) {\n    let tfxJobs = this.RouteForm.get('TfxJobs') as FormArray;\n    tfxJobs.push(this.getRouteJob(data));\n  }\n  getRouteJob(data: JobWithSequence): FormGroup {\n    return this.fb.group({\n      SequenceNo: new FormControl(data && data.SequenceNo ? data.SequenceNo : null),\n      JobDetails: new FormControl(data && data.JobDetails ? [data.JobDetails] : null, Validators.required),\n    })\n  }\n  removeLocation(i: number) {\n    let tfxJobs = this.RouteForm.get('TfxJobs') as FormArray;\n    tfxJobs.removeAt(i);\n    if (tfxJobs.length === 0) {\n      this.addLocation(null);\n    }\n  }\n  getRoutesByRegion(): void {\n    this.IsLoading = true;\n    this.RouteList = [];\n    this.routeInfoService.getRoutesByRegion(this.SelectedRegionId).subscribe(response => {\n      if (response != null && response['ResponseData'] && response['ResponseData'].length > 0) {\n        this.RouteList = response['ResponseData'];\n      }\n      this.IsLoading = false;\n    });\n  }\n  getLocationsByRegion(): void {\n    this.IsLoading = true;\n    this.JobList = [];\n    this.routeInfoService.getLocationsByRegion(this.SelectedRegionId).subscribe(response => {\n      if (response != null && response['ResponseData'] && response['ResponseData'].length > 0) {\n        this.JobList = response['ResponseData'];\n      }\n      this.IsLoading = false;\n    });\n  }\n  getLocationsByRoute(routeId: string): void {\n    this.IsLoading = true;\n    this.JobList = [];\n    this.routeInfoService.getLocationsByRoute(routeId, this.SelectedRegionId).subscribe(response => {\n      if (response != null && response['ResponseData'] && response['ResponseData'].length > 0) {\n        this.JobList = response['ResponseData'];\n      }\n      this.IsLoading = false;\n    });\n  }\n}\n\n","<div class=\"side-panel-wrapper col-sm-12\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8 pt10\">\r\n            <a class=\"close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Route Information</h3>\r\n            <div class=\"dib\" *ngIf=\"PanelStatus==1\">\r\n                <a class=\"btn btn-default btn-sm mtm5 ml10\" (click)=\"newRouteClicked();\">\r\n                    <i class=\"fa fa-plus fs14\"></i> Create Route\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"pt10 pb10 col-sm-12\">\r\n            <div *ngIf=\"PanelStatus==1\" class=\"\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\" *ngFor=\"let route of RouteList\">\r\n                        <div class=\"card mb20\">\r\n                            <div class=\"card-body pt10\">\r\n                                <small>Route Name</small>\r\n                                <h4 class=\"card-title pt0\">{{route.Name}}</h4>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-8\">\r\n                                        <a title=\"View Locations\" (click)=\"getRouteInfo(route);\">\r\n                                            <i class=\"fa fa-map-marker mr5 fs14\"></i>Locations\r\n                                        </a>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 text-right\">\r\n                                        <a class=\"mr10\" title=\"Edit\" (click)=\"editRouteClicked(route);\">\r\n                                            <i class=\"fa fa-pencil-square-o fs14\"></i>\r\n                                        </a>\r\n                                        <a title=\"Delete\" (click)=\"deleteRouteClicked(route);\">\r\n                                            <i class=\"fa fa-trash-alt mt14 color-maroon\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"PanelStatus==2\">\r\n                <form name=\"RouteForm\" [formGroup]=\"RouteForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\" *ngIf=\"RouteForm.get('ShiftInfoDetails') && RouteForm.get('ShiftInfoDetails').value\">\r\n                            <div class=\"form-group mb5\">\r\n                                <label>Shift</label>\r\n                                <input type=\"text\" class=\"form-control\" disabled value=\"{{RouteForm.get('ShiftInfoDetails').value}}\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group mb5\">\r\n                                <label for=\"Name\">Name</label>\r\n                                <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"Name\" required />\r\n                                <div *ngIf=\"RouteForm.get('Name').touched && RouteForm.get('Name').invalid\">\r\n                                    <div class=\"mt5 color-red f-normal\">Route name is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"location-wrapper mb15\">\r\n                        <div class=\"row mt10\">\r\n                            <div class=\"col-sm-12\">\r\n                                <label for=\"Name\"><b>Locations</b></label>\r\n                                <table class=\"table mb0\">\r\n                                    <thead>\r\n                                    <td width=\"10%\" class=\"pl0\">Sequence</td>\r\n                                    <td>Location</td>\r\n                                    <td></td>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr formArrayName=\"TfxJobs\" *ngFor=\"let tfxJob of RouteForm.get('TfxJobs')['controls'];  let j = index;\">\r\n                                            <td class=\"pl0\"> <span class=\"btn btn-primary img-circle ml0\">{{(j+1)}}</span> </td>\r\n                                            <td>\r\n                                                <div class=\"form-group mb5\">\r\n                                                    <div [formGroupName]=\"j\">\r\n\r\n                                                        <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':RouteForm.get('TfxJobs').touched && RouteForm.get('TfxJobs').invalid}\"\r\n                                                                                 formControlName=\"JobDetails\" [placeholder]=\"'Select Locations'\"\r\n                                                                                 [settings]=\"multiDropdownSettings\" [data]=\"JobList\">\r\n                                                        </ng-multiselect-dropdown>\r\n\r\n                                                        <!-- <div *ngIf=\"RouteForm.get('Name').touched && RouteForm.get('TfxJobs').invalid\">\r\n                                            <div class=\"mt5 color-red f-normal\">Location is required</div>\r\n                                        </div> -->\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td class=\"text-right pr0\">\r\n                                                <a class=\"ml20\" (click)=\"removeLocation(j);\">\r\n                                                    <i class=\"fa fa-trash-alt mt14 color-maroon mt8\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <table width=\"100%\">\r\n                                    <tr>\r\n                                        <td width=\"11%\">&nbsp;</td>\r\n                                        <td colspan=\"2\">\r\n                                            <div class=\"form-group\">\r\n                                                <a (click)=\"addLocation(null);\">\r\n                                                    <i class=\"fa fa-plus-circle fs14\"></i> Add Location\r\n                                                </a>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group text-right col-sm-12\">\r\n                            <button type=\"button\" class=\"btn btn-lg\" (click)=\"PanelStatus=1\">Cancel</button>\r\n                            <button class=\"btn btn-primary btn-lg\" [disabled]=\"!RouteForm.valid\">Save</button>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"col-sm-6\">\r\n        <div class=\"form-group mb5\">\r\n            <label for=\"TfxJobs\">Locations</label>\r\n            <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':RouteForm.get('TfxJobs').touched && RouteForm.get('TfxJobs').invalid}\"\r\n                                     [formControl]=\"RouteForm.controls['TfxJobs']\" [placeholder]=\"'Select Locations'\"\r\n                                     [data]=\"JobList\" [settings]=\"multiDropdownSettings\">\r\n            </ng-multiselect-dropdown>\r\n            <div *ngIf=\"RouteForm.get('Name').touched && RouteForm.get('TfxJobs').invalid\">\r\n                <div class=\"mt5 color-red f-normal\">Location is required</div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { CarrierService } from '../service/carrier.service';\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\nimport { DropdownItemExt, DropdownItem } from 'src/app/statelist.service';\nimport { DeliveryRequestViewModel, SbDriverViewModel, RegionDetailModel, ScheduleShiftModel, TrailerViewModel, SbFilterModel, TrailerViewFilterModel, DropAddressModel, TripModel, DriverViewFilterModel, ModifiedTripInfo, DSBSaveModel, DeliveryRequestBrokerInfoViewModel, ShiftViewModel, DelRequestsByJobModel, OrderPartialDetailModel, BrokerDrModel, JobDetailsWithOrders, CustomerJobsForCarrier, RegionDSBModel, SpiltDRsModel, JobLocationDetailsModal } from '../models/DispatchSchedulerModels';\nimport { Declarations } from 'src/app/declarations.module';\nimport { Subject, Subscription } from 'rxjs';\nimport { DeliveryGroupComponent } from '../delivery-group/delivery-group.component';\nimport { DataService } from '../service/data.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird//sendbird.component';\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\nimport { DeliveryRequestService } from 'src/app/delivery-request-display/services/DeliveryRequestService';\nimport { RouteInfoComponent } from './route-info/route-info.component';\nimport { RouteInfoService } from '../service/route-info.service';\nimport { RouteInformationModel, RouteTfxJobsList } from '../models/location';\nimport { MyLocalStorage } from 'src/app/my.localstorage';\nimport { DispatcherService } from '../service/dispatcher.service';\nimport { SplitDeliveryRequestComponent } from '../delivery-request/split-delivery-request/split-delivery-request.component';\nimport { DeliveryrequestService } from '../service/deliveryrequest.service';\nimport { DrFilterModel, DrFilterService } from './dr-filter.utility';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropDownItem, SalesTankFilterModal, TfxModule } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\nimport * as moment from 'moment';\nimport { Shift } from 'src/app/company-addresses/region/model/shift';\nimport { CarrierRegionModel, TfxCarrierDropdownDisplayItem, TfxCarrierRegionDetailsModel } from 'src/app/company-addresses/region/model/region';\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { UtilService } from '../service/util.service';\nimport { sortArrayTwice, sortBy } from 'src/app/my.functions';\nimport { BrokeredDrCarrierStatus, DateFilter, DeliveryReqPriority, DeliveryReqStatus, DeliveryRequestTypes, DrFilterPreferencesModel, ObjectFilter, OrderType, PickupLocationType, QueueFilter, WindowModeFilter } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\ndeclare var currentUserCompanyId: number;\ndeclare var IsCarrierCompany: boolean;\ndeclare var currentUserCompanyType: number;\ndeclare var mapsApiKey: string;\ndeclare var isSupplierCompany: boolean;\ndeclare var isSupplierOrDispatcher: boolean;\ndeclare function IsUserActive(): boolean;\n\n@Component({\n    selector: 'app-schedule-builder',\n    templateUrl: './schedule-builder.component.html',\n    styleUrls: ['./schedule-builder.component.scss']\n})\nexport class ScheduleBuilderComponent implements OnInit {\n    public MinDate: Date = new Date();\n    public MaxDate: Date = new Date();\n    public _toggle_dr_panel: boolean = false;\n    public _toggle_search: boolean = false;\n    public _toggle_header: boolean = true;\n    public _loading_dr_panel: boolean = false;\n    public _isTrailerExists: boolean = false;\n    public drRequestClick: boolean = true;\n    public intervalTime: any;\n    public intervalTimeQueue: any;\n    public _mapsApiKey: string = mapsApiKey ? mapsApiKey : '';\n    public _refreshQueue: boolean = false;\n    public _mustGoRefresh: number = 0;\n    public _shouldGoRefresh: number = 0;\n    public _couldGoRefresh: number = 0;\n    public _missedRefresh: number = 0;\n    public _loadingRegions = false;\n    public _loadingRequests = false;\n    public _loadingDrRequests = false;\n    public _loadingBuilder = false;\n    public _loadingCarriers = false;\n    public _acceptRejectDr = false;\n    public _loadingRejectDR = false;\n    public _unsavedChanges: ModifiedTripInfo[] = [];\n    public _pubWindowmode: number = 1;\n    public Regions: DropdownItemExt[] = [];\n    public RegionDetail: RegionDetailModel;\n    public ScheduleBuilder: SbDriverViewModel;\n    public DriverViewShifts: ScheduleShiftModel[] = [];\n    public TripDriverInfo = [];\n    public TrailerViewTrailers: TrailerViewModel[] = [];\n    public SbFilter: SbFilterModel = new SbFilterModel();\n    public UpdateSbFilter: boolean = false;\n    public TrailerViewFilter: TrailerViewFilterModel = new TrailerViewFilterModel;\n    public DriverViewFilter: DriverViewFilterModel = new DriverViewFilterModel;\n    public SelectedRegionId: string;\n    public MaxInputDate: Date = new Date();\n    public regionName: string = '';\n    public OrderList: OrderPartialDetailModel[] = [];\n    public CarrierRegions: CarrierRegionModel[] = [];\n    public RegionCarriers: CarrierRegionModel[] = [];\n    public AssignDrForm: FormGroup;\n    public carrierDdlSetting: IDropdownSettings = {};\n    //public CustomerLabel: string = \"Carrier\";\n    public IsNoDriverShiftFound: number = 0;\n    public ScheduleBuilderFilters = {\n        ObjectFilter: ObjectFilter.Driver,\n        DateFilter: DateFilter.Tomorrow,\n        WindowMode: WindowModeFilter.Single,\n        ToggleRequestMode: QueueFilter.DRs,\n        RegionId: '',\n        Date: '',\n        DSBFilter: 2,\n    };\n\n    public allApiDeliveryRequest: DeliveryRequestViewModel[] = [];\n    //public originalDRs_OnPageRefresh: DeliveryRequestViewModel[] = [];\n    //unique products for product filter ddl\n    public loadUniqueProducts: any[] = [];\n    public deliveryRequests: DeliveryRequestViewModel[] = [];\n    public activeQueueList: DeliveryRequestViewModel[] = [];\n    public mustGoRequests: DelRequestsByJobModel[] = [];\n    public tempmustGoRequests: DelRequestsByJobModel[] = [];\n    public localmustGoRequests: DelRequestsByJobModel[] = [];\n    public shouldGoRequests: DelRequestsByJobModel[] = [];\n    public tempshouldGoRequests: DelRequestsByJobModel[] = [];\n    public localshouldGoRequests: DelRequestsByJobModel[] = [];\n    public couldGoRequests: DelRequestsByJobModel[] = [];\n    public missedRequests: DelRequestsByJobModel[] = [];\n    public tempMissedRequests: DelRequestsByJobModel[] = [];\n    public localMissedRequests: DelRequestsByJobModel[] = [];\n    public tempcouldGoRequests: DelRequestsByJobModel[] = [];\n    public localcouldGoRequests: DelRequestsByJobModel[] = [];\n    public tempDraggedRequest: DeliveryRequestViewModel[] = [];\n    public memberInfo: MemberInfo[] = [];\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\n    public blendRequestsToUpdate: DeliveryRequestViewModel[] = [];\n    public blendTotalQuantity: number = 0;\n    public blendAddRequestToUpdate: DeliveryRequestViewModel[] = [];\n    public blendedProducts = \"\";\n    public requestToBroker: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\n\n    public assignedByOtherRegionRequests: DeliveryRequestViewModel[] = [];\n    public assignedByOtherOperatorRequests: DeliveryRequestViewModel[] = [];\n    public assignedToOtherRegionRequests: DeliveryRequestViewModel[] = [];\n    public assignedToOtherOperatorRequests: DeliveryRequestViewModel[] = [];\n    public SbForm: FormGroup;\n    public updateDrForm: FormGroup;\n    public DateChangeSubscription: Subscription;\n    public UnsavedChangesSubscription: Subscription;\n    public SavedChangesSubscription: Subscription;\n    public EmptyUnSavedChangesSubscription: Subscription;\n    public RegionChangeSubscription: Subscription;\n    public RestoreDeletedRequestSubscription: Subscription;\n    public DrUpdatedSubscription: Subscription;\n\n    public RemoveDroppedRequestSubscription: Subscription;\n    public DSBFilterChangeSubscription: Subscription;\n    public tempChangeRegionChange: any;\n    @ViewChild(DeliveryGroupComponent) deliveryGroupComponent: DeliveryGroupComponent;\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\n    public clickMultiRequest: boolean = false;\n    public disableControl: boolean = false;\n\n    //route information\n    public RouteName: string;\n    public ShiftInfo: string;\n    public RouteLocationList: RouteTfxJobsList[] = [];\n    //schedule quantity type\n    public ScheduleQuantityTypes: any = [];\n\n    //otto setting\n    public isDisplayOttoButton = false;\n    public MinInputDate: Date = new Date();\n    public IsOttoBuilderOpened: boolean = false;\n    public IsOttoNotificationOpened: boolean = false;\n    public OttoNotificationCount: number = 0;\n    @ViewChild(RouteInfoComponent) routeInfoComponent: RouteInfoComponent;\n    @ViewChild(SplitDeliveryRequestComponent) splitDeliveryRequestComponent: SplitDeliveryRequestComponent;\n\n    //\n    public shiftFilterSettings = {};\n    public Shifts: ShiftViewModel[] = [];\n    //dr filter \n    public drFilterForm: FormGroup;\n    public terminalsForFilter: DropDownItem[] = [];\n    public bulkPlantsForFilter: DropDownItem[] = [];\n    public bulkCustomersForFilter = [];\n    public settings: IDropdownSettings = {};\n    public drFilterModel: DrFilterModel = new DrFilterModel();\n    //private drFilterPreferences: any;\n    private filterDataFromAPI = { FormData: null, RegionId: null };\n    public IsDeliveryRequestRecieved: boolean = false;\n    private drQueueChangesSubscription: Subscription;\n\n    // filter aside\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 0;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n    public _showBackdrop: boolean = true;\n    public _isInitiated: boolean = false;\n    public IsCarrierCompanyStatus: boolean = false;\n    //tpo location\n    public currentUserCompanyType: number = currentUserCompanyType ? currentUserCompanyType : 0;\n    public isSupplierCompany: boolean = isSupplierCompany;\n    public isSupplierOrDispatcher: boolean = isSupplierOrDispatcher;\n\n    public multiDropdownSettings = {};\n    public CustomerSettings = {};\n    public CustomerFilterSettings = {};\n    public SiteddlSettings = {};\n    public companyList = [];\n    public SiteList = [];\n    public AddDropLocationLoader: boolean = false;\n    public Orders = [];\n    public selectedOrder: any[] = [];\n    public selectedCustomer: any[] = [];\n    public selectedSite: any[] = [];\n    public SelectedLocationId: number;\n    public SelectedCustomerId: string;\n    public SelectedFuelId: number;\n    public CurrentDr: FormGroup;\n    public currentJobDetails: JobDetailsWithOrders;\n    public drOrders: JobDetailsWithOrders[];\n    public isGroupDelivery: boolean = false;\n    public regionDSBModel: RegionDSBModel = new RegionDSBModel();\n    //spilt schedule quantity type\n    public SpiltScheduleQuantityTypes: any = [];\n    //show blinker if DR's of todays date.\n    public isDrScheduledforToday: boolean = false;\n    constructor(private fb: FormBuilder, private carrierService: CarrierService,\n        private sbService: ScheduleBuilderService, private dataService: DataService,\n        public deliveryRequestService: DeliveryRequestService, private chatService: chatService,\n        private routeService: RouteInfoService, private cdRef: ChangeDetectorRef,\n        private dispatcherService: DispatcherService, private deliveryReqService: DeliveryrequestService,\n        private regionService: RegionService,\n        private drFilterService: DrFilterService,\n        public utilService: UtilService) {\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 1);\n        this.MinInputDate.setDate(this.MaxInputDate.getDate() + 1);\n        this.drFilterForm = this.drFilterService.getDrFilterForm(true);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        this.initilizeAssignDrForm();\n        this.IsCarrierCompanyStatus = IsCarrierCompany;\n    }\n\n    ngOnInit() {\n        this.getDrFilterPreferences();\n        this.subscribeDrQueueChanges();\n        this.multiSelectSettings();\n        this.subscribeLoadLocationSequenceSubject();\n        this.settings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n\n        this.carrierDdlSetting = {\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n        };\n\n        //this.resetLocalStorage();\n        //this.resetTimer();\n        this.tempDraggedRequest = [];\n        this.tempChangeRegionChange = null;\n        this.clickMultiRequest = false;\n        this.SbForm = this.initForm();\n        this._loadingRegions = true;\n\n        this.updateFiltersFromLocalStorage();\n        if (this.ScheduleBuilderFilters.Date == '') {\n            this.ScheduleBuilderFilters.Date = moment().add(1, 'days').format('MM/DD/YYYY');\n        }\n        this.sbService.getRegions().subscribe(data => {\n            this._loadingRegions = false;\n            if (data != null && data != undefined) {\n                this.Regions = data;\n                if (data.length == 0) {\n                    jQuery('#btnno_regions').click();\n                }\n                if (data.length > 0) {\n                    this.refreshScheduleBuilder(this.ScheduleBuilderFilters.RegionId, this.ScheduleBuilderFilters.Date, this.ScheduleBuilderFilters.ObjectFilter, this.ScheduleBuilderFilters.DSBFilter, this.initScheduleBuilder);\n                }\n            }\n        });\n        this.SbForm.get('searchDRS').valueChanges\n            .pipe(\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(searchText => {\n                if (searchText != undefined) {\n                    this.searchRecords(searchText);\n                }\n            });\n\n        this.deliveryRequestService.localStroage.subscribe((data) => {\n            if (data != undefined) {\n                this.MoveActiveQueue(data);\n            }\n        });\n        this.chatService.driverDetails.subscribe((data) => {\n            if (data != undefined) {\n                this.IntializeChat(data);\n            }\n        });\n        this.chatService.loaderDetails.subscribe((data) => {\n            if (data != undefined) {\n                this._loadingBuilder = data;\n            }\n        });\n        this.chatService.memberInfoDetails.subscribe((data) => {\n            if (data != undefined) {\n                this.memberInfo = data as MemberInfo[];\n                this._loadingBuilder = false;\n                jQuery('#btnconfirm-memberInfo').click();\n            }\n        });\n        this.routeService.routeInfoDetails.subscribe((data) => {\n            if (data != undefined) {\n                var route = data as RouteInformationModel;\n                this.RouteName = route.Name;\n                this.ShiftInfo = route.ShiftInfoDetails;\n                this.RouteLocationList = route.TfxJobs;\n                jQuery('#btnconfirm-routeListInfo').click();\n            }\n        });\n        this.chatService.defaultdriverChatDetails.subscribe((data) => {\n            if (data != undefined) {\n                let regionId = data.regionId;\n                let driverArray = [];\n                driverArray.push(data.driverId);\n                this.IntializeSendBirdAccount(driverArray, regionId);\n            }\n        });\n        this.SbForm.get('Shifts').valueChanges\n            .pipe(\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(x => {\n                this.setProductsForFilterDr(x);\n            });\n        this.activeQueueIcon();\n        this.getOttoSetting();\n        this.dataService.OpenDsbOttoNotificationSubject.subscribe(x => {\n            this.IsOttoNotificationOpened = x;\n        });\n        this.dataService.DsbOttoNotificationCountSubject.subscribe(x => {\n            this.OttoNotificationCount = x;\n        });\n        this.dataService.SplitDrsInfoSubject.subscribe(x => {\n            this.splitDeliveryRequestComponent.getDeliveryRequestInfo(x);\n        });\n        this.shiftFilterSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'ShiftInfo',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n        };\n        this.makeCarrierUIsortable()\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\n    }\n\n    multiSelectSettings() {\n        this.multiDropdownSettings = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            allowSearchFilter: true,\n            itemsShowLimit: 1\n        };\n        this.CustomerSettings = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'CompanyId',\n            textField: 'CompanyName',\n            enableCheckAll: false,\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n        this.CustomerFilterSettings = {\n            closeDropDownOnSelection: true,\n            idField: 'CompanyId',\n            textField: 'CompanyName',\n            enableCheckAll: true,\n            allowSearchFilter: true\n        };\n        this.SiteddlSettings = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            enableCheckAll: false,\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n\n        };\n    }\n\n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n\n    public _toggleClosed(): void {\n        this._opened = false;\n    }\n\n    public hideHeader() {\n        this._toggle_header = !this._toggle_header;\n    }\n\n    public toggleDrPanel() {\n        this._toggle_dr_panel = !this._toggle_dr_panel;\n    }\n\n    public toggleSearch() {\n\n        this._toggle_search ? this.SbForm.get('searchDRS').setValue('') : null;\n        this._toggle_search = !this._toggle_search;\n    }\n    clearDrFilterForm(flag: boolean) {\n        this.drFilterForm = this.drFilterService.getDrFilterForm();\n        this.drFilterForm.get('IsFilterApplied').setValue(flag);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n    }\n    openDrFilterForm() {\n        this._isInitiated = true;\n        this._toggleOpened(false);\n        //close serach if open\n        this._toggle_search ? this.toggleSearch() : null;\n\n        this.validateFilterLocations();\n        this.getCompaniesByRegion();\n    }\n    validateFilterLocations() {\n        //get unique locations from dr\n        let locations = this.drFilterService.getLocationsFromDr(this.allApiDeliveryRequest);\n        this.terminalsForFilter = locations.terminals || [];\n        this.bulkPlantsForFilter = locations.bulkPlants || [];\n        this.bulkCustomersForFilter = locations.customerCompanies || [];\n        //remove\n        let selectedTerminals = this.drFilterForm.get('Terminals').value as DropDownItem[];\n        let selectedBulkPlants = this.drFilterForm.get('BulkPlants').value as DropDownItem[];\n        let selectedCustomers = this.drFilterForm.get('Customers').value as any[];\n\n        if (selectedTerminals.length && this.IsDeliveryRequestRecieved && (this.SbForm.get('RegionId').value != this.filterDataFromAPI.RegionId)) {\n            if (!selectedTerminals.some(selected => this.terminalsForFilter.some(term => term.Id == selected.Id))) {\n                this.drFilterForm.get('Terminals').patchValue([]);\n            }\n        }\n        if (selectedBulkPlants.length && this.IsDeliveryRequestRecieved && (this.SbForm.get('RegionId').value != this.filterDataFromAPI.RegionId)) {\n            if (!selectedBulkPlants.some(selected => this.bulkPlantsForFilter.some(bulk => bulk.Id == selected.Id))) {\n                this.drFilterForm.get('BulkPlants').patchValue([]);\n            }\n        }\n\n        //filter customers from drs\n        if (selectedCustomers.length && this.IsDeliveryRequestRecieved && (this.SbForm.get('RegionId').value != this.filterDataFromAPI.RegionId)) {\n            if (!selectedCustomers.some(selected => this.bulkCustomersForFilter.some(bulk => bulk.Id == selected.CompanyId))) {\n                this.drFilterForm.get('Customers').patchValue([]);\n            }\n        }\n    }\n\n    //Get Customers by Region\n    getCompaniesByRegion() {\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\n            this.carrierService.getJobListForCarrier(this.SelectedRegionId).subscribe(t2 => {\n                this.bulkCustomersForFilter = t2 as CustomerJobsForCarrier[];\n            });\n        }\n        else {\n            Declarations.msgerror('No order exists for this Customers ', 'error', 2500)\n        }\n    }\n    setLastDrFilterForm() {\n        //if filter panel closed\n        if (this.drFilterModel.Priority.length == 0 && this.drFilterForm.get('IsFilterApplied').value) {\n            this.drFilterForm.get('Priority').get('MustGo').setValue(true);\n            this.drFilterForm.get('IsFilterApplied').setValue(true);\n            this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        }\n        else {\n            this.drFilterForm = this.drFilterService.drFilterFormFromModel(this.drFilterModel);\n        }\n    }\n    applyDrFilterInitiated() {\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        if (this.drFilterModel.Priority.length == 0) {\n            Declarations.msgerror(\"Please select at least one priority.\", null, null, \"bottom-right\");\n            return;\n        }\n        //close panel\n        this._toggleClosed();\n        //apply filter to dr\n        this.applyDrFilter();\n        //api call to save user preferences\n        this.saveDrFilterPreferences();\n    }\n    applyDrFilter() {\n        this.validateFilterLocations();\n        this.drFilterForm.get('IsFilterApplied').setValue(true);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        var toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1) {\n            this.filterRequests(toggleRequestMode, this._pubWindowmode);\n        }\n        else {\n            this.filterMultiWindowRequests();\n        }\n    }\n\n    clearDrFiltersAndSearches() {\n        let toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1)\n            this.assignTempRequest(toggleRequestMode, this._pubWindowmode);\n        else\n            this.assignMultiWindowRequest();\n        //this.assignAssignedTabDrs();\n    }\n    saveDrFilterPreferences(): void {\n        let data = new DrFilterPreferencesModel();\n        data.Date = new Date();\n        data.RegionId = this.SbForm.get('RegionId').value;\n        data.FilterData = JSON.stringify(this.drFilterForm.value);\n        this.filterDataFromAPI.FormData = this.drFilterForm.value;\n        this.filterDataFromAPI.RegionId = this.SbForm.get('RegionId').value;\n        this.drFilterService.saveDrFilterPreferences(data).subscribe();\n    }\n\n    getDrFilterPreferences(): void {\n        this.drFilterService.getDrFilterPreferences().subscribe((setting: DrFilterPreferencesModel) => {\n            if (setting && setting.StatusCode == 0 && setting.FilterData && this.drFilterService.validateFilterForm(JSON.parse(setting.FilterData))) {\n                this.filterDataFromAPI.RegionId = setting.RegionId;\n                this.filterDataFromAPI.FormData = JSON.parse(setting.FilterData);\n                this.drFilterForm.patchValue(this.filterDataFromAPI.FormData);\n                this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n            }\n        });\n    }\n    searchRecords(terms: string) {\n        if (terms == undefined || terms == null) { terms = ''; }\n        terms = terms.toLowerCase().trim();\n        let toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1) {\n            if (terms == '') {\n                this.assignTempRequest(toggleRequestMode, this._pubWindowmode);\n                //this.assignAssignedTabDrs();\n            }\n            else {\n                this.searchRequests(terms, toggleRequestMode, this._pubWindowmode);\n                //this.searchAssignedTabDr(terms);\n            }\n        }\n        else {\n            if (terms == '') {\n                this.assignMultiWindowRequest();\n                //this.assignAssignedTabDrs();\n            }\n            else {\n                this.searchMultiWindowRequests(terms, toggleRequestMode, this._pubWindowmode);\n                //this.searchAssignedTabDr(terms);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.resetTimer();\n        if (this.drQueueChangesSubscription) {\n            this.drQueueChangesSubscription.unsubscribe();\n        }\n\n        if (this.locationsequenceSubscription) {\n            this.locationsequenceSubscription.unsubscribe();\n        }\n    }\n\n    assignTempRequest(queueMode: number, windowMode: number) {\n        if (this.tempDraggedRequest.length > 0) {\n            this.deliveryRequests = this.deliveryRequests.filter(({ Id: id1 }) => !this.tempDraggedRequest.some(({ Id: id2 }) => id2 === id1));\n            this.deliveryRequests.slice();//update delivery request by removing draggred dr.\n        }\n        var priorityRequests = this.deliveryRequests.filter(element => element.WindowMode == windowMode && element.QueueMode === queueMode && element.ParentId == null);\n        var missedRequests = this.deliveryRequests.filter(element => element.WindowMode == windowMode && element.QueueMode === queueMode && element.ParentId != null);\n        this.getRequestsByPriority(priorityRequests, missedRequests);\n    }\n\n    assignMultiWindowRequest() {\n        this.getLocalStorageQueueData();\n    }\n\n    resetTimer() {\n        if (this.intervalTime) {\n            clearInterval(this.intervalTime);\n        }\n    }\n\n    resetLocalStorage() {\n        localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify([]));\n        localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify([]));\n        localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify([]));\n        localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify([]));\n        this.localmustGoRequests = [];\n        this.localshouldGoRequests = [];\n        this.localcouldGoRequests = [];\n        this.localMissedRequests = [];\n        //this.tempDraggedRequest = [];\n        localStorage.setItem(\"updateRequest\", JSON.stringify(false));\n        localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\n        localStorage.setItem(\"recordPriorityChange\", JSON.stringify([]));\n        this._refreshQueue = false;\n    }\n\n    initForm(): FormGroup {\n        let date = this.getDayAfterTomorrowsDate();\n        let _form = this.fb.group({\n            Id: this.fb.control(''),\n            Date: this.fb.control(date),\n            RegionId: this.fb.control(''),\n            ObjectFilter: this.fb.control(''),\n            WindowMode: this.fb.control(''),\n            ToggleRequestMode: this.fb.control(''),\n            searchDRS: this.fb.control(''),\n            selectedProduct: this.fb.control('-1'),\n            RegionFilter: this.fb.control(''),\n            DateFilter: this.fb.control(''),\n            TimeStamp: this.fb.control(''),\n            Status: this.fb.control(0),\n            DeletedTripId: this.fb.control(null),\n            DeletedGroupId: this.fb.control(null),\n            Shifts: this.fb.array([]),\n            Trailers: this.fb.array([]),\n            DSBFilter: this.fb.control(2),\n            SelectedShifts: this.fb.control([]),\n            IsDsbDriverSchedule: this.fb.control(null),\n            IsAssignDrEnabled: this.fb.control(null),\n        });\n        return _form;\n    }\n    subscribeEventSubscription(): void {\n        this.subscribeDateChange();\n        this.subscribeRegionChange();\n        this.subscribeUnsavedChangesSubject();\n        this.subscribeSavedChangesSubject();\n        this.subscribeEmptyUnsavedChangesSubject();\n        this.subscribeRestoreDeletedRequestSubject();\n        this.subscribeDrUpdatedSubject();\n        this.subscribeRemoveDroppedRequestSubject();\n        this.subscribeDSBFilterChange();\n    }\n\n    unsubscribeEventSubscription(): void {\n        if (this.DateChangeSubscription) {\n            this.DateChangeSubscription.unsubscribe();\n        }\n        if (this.UnsavedChangesSubscription) {\n            this.UnsavedChangesSubscription.unsubscribe();\n        }\n        if (this.SavedChangesSubscription) {\n            this.SavedChangesSubscription.unsubscribe();\n        }\n        if (this.EmptyUnSavedChangesSubscription) {\n            this.EmptyUnSavedChangesSubscription.unsubscribe();\n        }\n        if (this.RegionChangeSubscription) {\n            this.RegionChangeSubscription.unsubscribe();\n        }\n        if (this.RestoreDeletedRequestSubscription) {\n            this.RestoreDeletedRequestSubscription.unsubscribe();\n        }\n        if (this.DrUpdatedSubscription) {\n            this.DrUpdatedSubscription.unsubscribe();\n        }\n        if (this.RemoveDroppedRequestSubscription) {\n            this.RemoveDroppedRequestSubscription.unsubscribe();\n        }\n        if (this.DSBFilterChangeSubscription) {\n            this.DSBFilterChangeSubscription.unsubscribe();\n        }\n    }\n\n    subscribeDateChange(): void {\n        this.DateChangeSubscription = this.SbForm.get('Date').valueChanges.subscribe(x => {\n            if (x != null && x != undefined && x.trim() != '') {\n                let regionId = this.SbForm.get('RegionId').value;\n                let sbViewId = this.SbForm.get('ObjectFilter').value;\n                let selectedDate = moment(x).format('MM/DD/YYYY');\n                let sbDsbView = this.SbForm.get('DSBFilter').value;\n                MyLocalStorage.setData(MyLocalStorage.DSB_DATE_KEY, selectedDate);\n                this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n                this.dataService.setDisableDSBControls(this.disableControl);\n            }\n        });\n    }\n    subscribeDSBFilterChange(): void {\n        this.DSBFilterChangeSubscription = this.SbForm.get('DSBFilter').valueChanges.subscribe(x => {\n            if (x != null && x != undefined) {\n                let regionId = this.SbForm.get('RegionId').value;\n                let sbViewId = this.SbForm.get('ObjectFilter').value;\n                let selectedDate = this.SbForm.get('Date').value;\n                let sbDsbView = this.SbForm.get('DSBFilter').value;\n                this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n            }\n        });\n    }\n\n    subscribeUnsavedChangesSubject(): void {\n        this.UnsavedChangesSubscription = this.dataService.UnsavedChangesSubject.subscribe(x => {\n            if (x) {\n                var existingObjectIndex = this._unsavedChanges.findIndex(t => t.ShiftIndex == x.ShiftIndex && t.DriverRowIndex == x.DriverRowIndex && t.DriverColIndex == x.DriverColIndex);\n                if (existingObjectIndex == -1 && x.ShiftIndex != null && x.DriverRowIndex != null && x.DriverColIndex != null) {\n                    let unSavedTrip: ModifiedTripInfo = new ModifiedTripInfo();\n                    unSavedTrip.ShiftIndex = x.ShiftIndex;\n                    unSavedTrip.DriverRowIndex = x.DriverRowIndex;\n                    unSavedTrip.DriverColIndex = x.DriverColIndex;\n                    this._unsavedChanges.push(unSavedTrip);\n                }\n            }\n        });\n    }\n\n    subscribeSavedChangesSubject(): void {\n        this.SavedChangesSubscription = this.dataService.SavedChangesSubject.subscribe(x => {\n            if (x) {\n                var existingObjectIndex = this._unsavedChanges.findIndex(t => t.ShiftIndex == x.ShiftIndex && t.DriverRowIndex == x.DriverRowIndex && t.DriverColIndex == x.DriverColIndex);\n                if (existingObjectIndex > -1) {\n                    this._unsavedChanges.splice(existingObjectIndex, 1);\n                }\n            };\n        });\n    }\n\n    subscribeEmptyUnsavedChangesSubject(): void {\n        this.EmptyUnSavedChangesSubscription = this.dataService.EmptyUnsavedChangesSubject.subscribe(x => {\n            this._unsavedChanges = [];\n        });\n    }\n\n    subscribeRegionChange(): void {\n        this.RegionChangeSubscription = this.SbForm.get('RegionId').valueChanges.subscribe(x => {\n            if (this.SbForm.get('WindowMode').value == 2 && this.clickMultiRequest == true) {\n                var elementFound = this.Regions.find(element => element.Id === x);\n                if (elementFound) {\n                    this.regionName = elementFound.Name;\n                }\n                this.tempChangeRegionChange = x;\n                jQuery('#btnconfirm-regionunsavedchanges').click();\n            }\n            else {\n                this.onRegionChange(x);\n                this.dataService.setShowDeliveryGroupSubject(false);\n                MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, x);\n            }\n        });\n    }\n\n    subscribeDrUpdatedSubject(): void {\n        this.DrUpdatedSubscription = this.dataService.DrUpdatedSubject.subscribe(x => {\n            if (x) {\n                let updatedDrs: DeliveryRequestViewModel[] = x;\n                updatedDrs.forEach(\n                    t => {\n                        var dr = this.deliveryRequests.find(t1 => t1.Id == t.Id);\n                        if (dr) {\n                            dr.RequiredQuantity = t.RequiredQuantity;\n                        }\n                    }\n                )\n            }\n        })\n    }\n\n    subscribeRestoreDeletedRequestSubject(): void {\n        this.RestoreDeletedRequestSubscription = this.dataService.RestoreDeletedRequestSubject.subscribe(x => {\n            if (x) {\n                let newDrs: DeliveryRequestViewModel[] = x;\n                newDrs.forEach(t => {\n                    t.StatusClassId = 0;\n                    t.Status = 2;\n                    t.PreviousStatus = 0;\n                    t.ScheduleStatus = 0;\n                    t.SchedulePreviousStatus = 0;\n                    t.DeliveryScheduleId = null;\n                    t.DeliveryGroupId = null;\n                    t.TrackableScheduleId = null;\n                    t.GroupParentDRId = t.GroupParentDRId == null ? '' : t.GroupParentDRId;\n                    t.TrackScheduleStatusName = '';\n                });\n                this.restoreDeleteDRs(newDrs);\n                this.allApiDeliveryRequest = this.allApiDeliveryRequest.concat(newDrs);\n                this.dataService.setAllDeliveryRequestsSubject(this.allApiDeliveryRequest);\n            }\n        });\n    }\n\n    subscribeRemoveDroppedRequestSubject(): void {\n        this.RemoveDroppedRequestSubscription = this.dataService.RemoveDroppedRequestSubject.subscribe(x => {\n            if (x) { // x will be array of objects\n                for (var index = 0; index < x.length; index++) {\n                    let dr = x[index];\n                    var drIndex = this.tempDraggedRequest.findIndex(data => data.Id == dr.Id);\n                    if (drIndex == -1) {\n                        this.tempDraggedRequest.push(dr);\n                    }\n                    this.allApiDeliveryRequest = this.allApiDeliveryRequest.filter(t => t.Id != dr.Id);\n                }\n                //this.removeRequestFromLeftPanel(x);\n                this.dataService.setAllDeliveryRequestsSubject(this.allApiDeliveryRequest);\n            }\n        });\n    }\n\n    isTrailerAssignedToDriverView(): boolean {\n        let _assigned = true;\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(x => {\n            let _schedules = x.get('Schedules') as FormArray;\n            _schedules.controls.forEach(y => {\n                let _trips = y.get('Trips') as FormArray;\n                let _trailers = y.get('Trailers').value;\n                _trips.controls.forEach(z => {\n                    if (_trailers.length == 0 && z.get('DeliveryRequests').value.length > 0) {\n                        _assigned = false;\n                    }\n                });\n            });\n        });\n        return _assigned;\n    }\n\n    isDriverAssignedToTrailerView(): boolean {\n        let _assigned = true;\n        let _trailers = this.SbForm.get('Trailers') as FormArray;\n        _trailers.controls.forEach(x => {\n            let _shifts = x.get('Shifts') as FormArray;\n            _shifts.controls.forEach(y => {\n                let _trips = y.get('Trips') as FormArray;\n                _trips.controls.forEach(z => {\n                    if (z.get('Drivers').value.length == 0 && z.get('DeliveryRequests').value.length > 0) {\n                        _assigned = false;\n                    }\n                });\n            });\n        });\n        return _assigned;\n    }\n\n    isDriverTrailerAssigned(filter: ObjectFilter): boolean {\n        let _driverTrailerAssigned = false;\n        if (filter == ObjectFilter.Driver) {\n            _driverTrailerAssigned = this.isDriverAssignedToTrailerView();\n        } else {\n            _driverTrailerAssigned = this.isTrailerAssignedToDriverView();\n        }\n        return _driverTrailerAssigned;\n    }\n\n    onObjectFilterChange(filter: ObjectFilter): void {\n        this.resetSbFilter();\n        if (this.disableControl === false) {\n            let _driverTrailedAssigned = this.isDriverTrailerAssigned(filter);\n            if (!_driverTrailedAssigned) {\n                jQuery('#btndriverTrailerAssignemtMsg').click();\n                return;\n            }\n        }\n        this.ScheduleBuilderFilters.ObjectFilter = filter;\n        if (this._unsavedChanges.length > 0) {\n            jQuery('#btnconfirm-unsavedchanges').click();\n        } else {\n            this.setObjectFilter(this.ScheduleBuilderFilters.ObjectFilter);\n            let regionId = this.SbForm.get('RegionId').value;\n            let sbViewId = this.SbForm.get('ObjectFilter').value;\n            let date = this.SbForm.get('Date').value;\n            let selectedDate = moment(date).format('MM/DD/YYYY');\n            let sbDsbView = this.SbForm.get('DSBFilter').value;\n            MyLocalStorage.setData(MyLocalStorage.DSB_OBJECTFILTER_KEY, filter);\n            this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n        }\n    }\n\n    onWindowFilterChange(filter: WindowModeFilter): void {\n        this._refreshQueue = false;\n        var previousWindowMode = this.ScheduleBuilderFilters.WindowMode;\n        this.ScheduleBuilderFilters.WindowMode = filter;\n        this._pubWindowmode = filter;\n        this.setWindowFilter(this.ScheduleBuilderFilters.WindowMode);\n        if (filter == 2) {\n            this.updateLocalStorageActiveQueue();\n            this.onQueueFilterChange(2);\n            localStorage.setItem(\"refreshLocalStorage\", 'true');\n            this.activeTimer();\n        }\n        if (filter == 1 && previousWindowMode == 2 && this.clickMultiRequest == true) {\n            //update local storage data.\n            this.refreshSingleWindow();\n        }\n        MyLocalStorage.setData(MyLocalStorage.DSB_WINDOWMODE_KEY, filter);\n    }\n    updateLocalStorageActiveQueue() {\n        var mustShouldCouldgoRecords = this.deliveryRequests.filter(top => top.ParentId == null && top.WindowMode === 1 && top.QueueMode === 2);\n        if (mustShouldCouldgoRecords.length > 0) {\n            mustShouldCouldgoRecords.forEach(function (value, index) {\n                mustShouldCouldgoRecords[index].WindowMode = 2;\n                mustShouldCouldgoRecords[index].QueueMode = 2;\n            });\n            var groupedDrs = this.deliveryReqService.groupDrsByJob(mustShouldCouldgoRecords);\n            var mustGoRecords = this.deliveryReqService.getMustGoRequests(groupedDrs);\n            if (mustGoRecords && mustGoRecords.length > 0)\n                localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(mustGoRecords));\n            var shouldGoRecords = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n            if (shouldGoRecords && shouldGoRecords.length > 0)\n                localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(shouldGoRecords));\n            var couldGoRecords = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n            if (couldGoRecords && couldGoRecords.length > 0)\n                localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(couldGoRecords));\n        }\n\n        var missedRecords = this.deliveryRequests.filter(top => top.ParentId != null && top.WindowMode === 1 && top.QueueMode === 2);\n        if (missedRecords.length > 0) {\n            missedRecords.forEach(function (value, index) {\n                missedRecords[index].WindowMode = 2;\n                missedRecords[index].QueueMode = 2;\n            });\n            var missedReqLocations = this.deliveryReqService.groupDrsByJob(missedRecords, DeliveryRequestTypes.Missed);\n            if (missedReqLocations && missedReqLocations.length > 0)\n                localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(missedReqLocations));\n        }\n    }\n    onQueueFilterChange(filter: QueueFilter): void {\n        this._loading_dr_panel = true;\n        this.ScheduleBuilderFilters.ToggleRequestMode = filter;\n        this.setQueueFilter(this.ScheduleBuilderFilters.ToggleRequestMode);\n        if (filter == 1) {\n            this.deliveryRequestService.ToggleQueueIcon(true);\n            this._loading_dr_panel = false;\n        } else {\n            this.deliveryRequestService.ToggleQueueIcon(false);\n            this._loading_dr_panel = false;\n        }\n        if (filter == 2 && this._pubWindowmode == 1) {\n            this._refreshQueue = false;\n            this._loading_dr_panel = false;\n        }\n        this.updateRecordsToggleRequest(filter);\n        //this.SbForm.get('searchDRS').setValue('');\n        this.clearDrFiltersAndSearches();\n        MyLocalStorage.setData(MyLocalStorage.DSB_TOGGLEREQUESTMODE_KEY, filter);\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.dataService.setDrQueueChangesForFilter(true);\n        }\n    }\n\n    onDateFilterChange(filter: DateFilter): void {\n        this.resetSbFilter();\n        this.ScheduleBuilderFilters.DateFilter = filter;\n        if (this._unsavedChanges.length > 0) {\n            jQuery('#btnconfirm-unsavedchanges').click();\n        } else {\n            this.setFilterDate(this.ScheduleBuilderFilters.DateFilter);\n            if (filter == DateFilter.Date) {\n                jQuery('#dateInput').focus();\n            }\n            MyLocalStorage.setData(MyLocalStorage.DSB_DATEFILTER_KEY, filter);\n        }\n    }\n\n    filterChangeConfirmation(saveChanges: boolean): void {\n        if (saveChanges) {\n            return this.dataService.setSaveModifiedLoadsSubject(this._unsavedChanges);\n        }\n        else {\n            this._unsavedChanges = [];\n            //jQuery('#dateInput').click();\n            //jQuery('#dateInput').focus();\n        }\n        this.dataService.setShowDeliveryGroupSubject(false);\n        this.setObjectFilter(this.ScheduleBuilderFilters.ObjectFilter);\n        this.setFilterDate(this.ScheduleBuilderFilters.DateFilter);\n        this.setWindowFilter(this.ScheduleBuilderFilters.WindowMode);\n        this.setQueueFilter(this.ScheduleBuilderFilters.ToggleRequestMode);\n        MyLocalStorage.setData(MyLocalStorage.DSB_OBJECTFILTER_KEY, this.ScheduleBuilderFilters.ObjectFilter);\n        MyLocalStorage.setData(MyLocalStorage.DSB_DATEFILTER_KEY, this.ScheduleBuilderFilters.DateFilter);\n        MyLocalStorage.setData(MyLocalStorage.DSB_WINDOWMODE_KEY, this.ScheduleBuilderFilters.WindowMode);\n    }\n\n    filterChangeRegionConfirmation(saveChanges: boolean): void {\n        if (saveChanges) {\n            this.onRegionChange(this.tempChangeRegionChange);\n            this.dataService.setShowDeliveryGroupSubject(false);\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(true));\n            MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.tempChangeRegionChange);\n        }\n        else {\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\n            var tempRegionId = JSON.parse(localStorage.getItem(\"regionId\"));\n            if (tempRegionId != '') {\n                this.SbForm.get('RegionId').setValue(tempRegionId);\n                MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, tempRegionId);\n            }\n        }\n    }\n    filterChangeWindowConfirmation(saveChanges: boolean): void {\n        if (saveChanges) {\n            let regionId = this.SbForm.get('RegionId').value;\n            let todaysDate = moment().add(1, 'days').format('MM/DD/YYYY');\n            let sbViewId = this.SbForm.get('ObjectFilter').value;\n            let sbDsbView = this.SbForm.get('DSBFilter').value;\n            this.refreshScheduleBuilder(regionId, todaysDate, sbViewId, sbDsbView, this.initScheduleBuilder);\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(true));\n        }\n        else {\n            this.ScheduleBuilderFilters.WindowMode = 2;\n            this._pubWindowmode = 2;\n            this.setWindowFilter(this.ScheduleBuilderFilters.WindowMode);\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\n        }\n    }\n    setFilterDate(filter: DateFilter): void {\n        this.SbForm.get('DateFilter').setValue(filter);\n        if (filter == DateFilter.Today) {\n            this.SbForm.get('Date').setValue(this.getTodaysDate());\n        } else if (filter == DateFilter.Tomorrow) {\n            this.SbForm.get('Date').setValue(this.getTomorrowsDate());\n        } else if (filter == DateFilter.YesterDay) {\n            this.SbForm.get('Date').setValue(this.getYesterDayDate());\n        }\n        this.setReadOnlyControlsValue();\n    }\n\n    setObjectFilter(filter: ObjectFilter): void {\n        let _objectFilter = this.SbForm.get('ObjectFilter');\n        if (_objectFilter.value != filter) {\n            _objectFilter.setValue(filter);\n        }\n    }\n\n    setWindowFilter(filter: WindowModeFilter): void {\n        let _windowFilter = this.SbForm.get('WindowMode');\n        if (_windowFilter.value != filter) {\n            _windowFilter.setValue(filter);\n        }\n    }\n\n    setQueueFilter(filter: QueueFilter): void {\n        let _queueFilter = this.SbForm.get('ToggleRequestMode');\n        if (_queueFilter.value != filter) {\n            _queueFilter.setValue(filter);\n        }\n    }\n\n    getTodaysDate(): string {\n        this.disableControl = false;\n        return moment().format('MM/DD/YYYY');\n    }\n\n    getTomorrowsDate(): string {\n        var current = new Date();\n        current.setDate(current.getDate() + 1);\n        this.disableControl = false;\n        return moment(current).format('MM/DD/YYYY');\n    }\n    getYesterDayDate(): string {\n        var current = new Date();\n        current.setDate(current.getDate() - 1);\n        this.disableControl = false;\n        return moment(current).format('MM/DD/YYYY');\n    }\n    getDayAfterTomorrowsDate(): string {\n        var current = new Date();\n        current.setDate(current.getDate() + 2);\n        this.disableControl = false;\n        return moment(current).format('MM/DD/YYYY');\n    }\n\n    setSelectedDate(date: string) {\n        if (date != null && date != undefined && date.trim() != '') {\n            var _date = this.SbForm.controls['Date'];\n            if (_date.value != date) {\n                _date.setValue(date);\n            }\n            let status = this.disableControls(date);\n            this.setReadOnlyControlsValue();\n            this.dataService.setDisableDSBControls(status);\n        }\n    }\n    disableControls(date: any): boolean {\n        var currentDate = moment(date, \"MM/DD/YYYY\");\n        let status = false;\n        if (moment().diff(currentDate, 'days') > 1) {\n            status = true;\n        }\n        this.disableControl = status;\n        return status;\n    }\n    onRegionChange(regionId: any): void {\n        //var regionId = event.target.selectedOptions[0].value;\n        this.IsDeliveryRequestRecieved = false;\n        this.resetSbFilter();\n        let selectedDate = moment(this.SbForm.get('Date').value).format('MM/DD/YYYY');\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        let sbDsbView = this.SbForm.get('DSBFilter').value;\n        this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n        if (regionId != null) {\n            this.getRegiondetail(regionId);\n        }\n        this.resetTimer();\n        this.resetLocalStorage();\n    }\n\n    private dateFormat = new RegExp(\"^((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](20)?[0-9]{4})*$\");\n    refreshScheduleBuilder(regionId: string, selectedDate: string, sbViewId: number, sbDsbView: number, callback: any): void {\n        if (this.dateFormat.test(selectedDate)) {\n            this.getScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, callback);\n        }\n    }\n\n    getRegiondetail(regionId: string): void {\n        this.SelectedRegionId = regionId;\n        MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.SelectedRegionId);\n        this.sbService.getRegionDetails(regionId)\n            .subscribe(detail => {\n                this.RegionDetail = detail;\n                if (detail && detail.Trailers && detail.Trailers.length == 0) {\n                    this._isTrailerExists = false;\n                }\n                else {\n                    this._isTrailerExists = true;\n                }\n                this.setSbFilter();\n            });\n        this.getOttoNotificationCount();\n    }\n\n    initScheduleBuilder(self: any, sbModel): void {\n        self.SbForm.patchValue({\n            Id: sbModel.Id,\n            Date: sbModel.Date,\n            RegionId: sbModel.RegionId,\n            ObjectFilter: sbModel.ObjectFilter,\n            RegionFilter: sbModel.RegionFilter,\n        });\n        var _dateFilter = self.SbForm.get('DateFilter');\n        if (_dateFilter.value == null || _dateFilter.value == undefined || _dateFilter.value == '') {\n            _dateFilter.setValue(sbModel.DateFilter);\n        }\n        if (sbModel.RegionId != null)\n            self.getRegiondetail(sbModel.RegionId);\n    }\n\n    //get unique products for dr filter\n    setProductsForFilterDr(formDr: ScheduleShiftModel[]) {\n        this._loadingBuilder = true;\n        this.SbForm.get('selectedProduct').setValue('-1');\n        this.loadUniqueProducts = []\n        let sbDr = this.ScheduleBuilder.Shifts;\n        let finalDr: ScheduleShiftModel[] = [];\n\n        if (formDr && formDr.length) { finalDr.push(...formDr); }\n        if (sbDr && sbDr.length) { finalDr.push(...sbDr); }\n\n        if (finalDr && finalDr.length) {\n            finalDr.forEach(shft => {\n                if (shft && shft.Schedules) {\n                    shft.Schedules.forEach(schdl => {\n                        if (schdl && schdl.Trips) {\n                            schdl.Trips.forEach(trp => {\n                                if (trp && trp.DeliveryRequests) {\n                                    trp.DeliveryRequests.forEach(dlReq => {\n                                        if (dlReq && dlReq.ProductType) {\n                                            if (this.loadUniqueProducts.indexOf(dlReq.ProductType) === -1) {\n                                                this.loadUniqueProducts.push(dlReq.ProductType);\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        this.cdRef.detectChanges();\n        if (this.drFilterForm.get('IsFilterApplied').value != true) {\n            this.clearDrFiltersAndSearches();\n        }\n        else {\n            this.applyDrFilter();\n        }\n        this._loadingBuilder = false;\n    }\n\n    private getDateFilter(date: string): number {\n        var today = this.getTodaysDate();\n        var tomorrow = this.getTomorrowsDate();\n        var yesterday = this.getYesterDayDate();\n        let dateFilter = 3;\n        if (date == today)\n            dateFilter = 1;\n        else if (date == tomorrow)\n            dateFilter = 2;\n        else if (date == yesterday)\n            dateFilter = 4;\n        return dateFilter;\n    }\n\n    getScheduleBuilder(regionId: string, date: string, sbViewId: number, sbDsbView: number, callback: any): void {\n        //if region id null or dropdown of region id empty then set first region id value and fetch the schedule builder.\n        if (this.Regions.length > 0 && this.Regions.findIndex(x => x.Id == regionId) == -1) {\n            this.SbForm.controls['RegionId'].setValue(this.Regions[0].Id);\r\n            regionId = this.Regions[0].Id;\r\n        }\n        this._loadingBuilder = true;\n        this._unsavedChanges = [];\n        this.activeQueueList = [];\n        this.tempDraggedRequest = [];\n        this.tempmustGoRequests = [];\n        this.tempshouldGoRequests = [];\n        this.tempcouldGoRequests = [];\n        this.tempMissedRequests = [];\n        this.unsubscribeEventSubscription();\n        this.dataService.FormChangeSubscription && this.dataService.FormChangeSubscription.forEach(t => {\n            if (t) {\n                t.unsubscribe();\n            }\n        });\n        this.sbService.getScheduleBuilder(regionId, date, sbViewId, sbDsbView)\n            .subscribe(data => {\n                //this.resetLocalStorage();\n                //this.resetTimer();\n                data.DateFilter = this.getDateFilter(data.Date);\n                this._loadingBuilder = false;\n                //call get delivery requests method only for current and yesterday date.\n                this.disableControls(data.Date);\n                if (this.disableControl == false) {\n                    this.getDeliveryRequests(data.RegionId, sbViewId, null, date);\n                }\n                this.ScheduleBuilder = data;\n                if (this.ScheduleBuilder.ObjectFilter == 2) {\n                    this.dataService.setTrailerShiftsSubject(this.ScheduleBuilder.Shifts);\n                }\n                this.DriverViewShifts = this.ScheduleBuilder.Shifts;\n                this.TrailerViewTrailers = this.ScheduleBuilder.Trailers;\n                this.SbForm.controls['Id'].patchValue(data.Id);\n                this.SbForm.controls['TimeStamp'].patchValue(data.TimeStamp);\n                this.SbForm.controls['IsDsbDriverSchedule'].patchValue(data.IsDsbDriverSchedule);\n                if (data.WindowMode == 0) {\n                    data.WindowMode = 1;\n                }\n                let _windowMode = MyLocalStorage.getData(MyLocalStorage.DSB_WINDOWMODE_KEY);\n                if (_windowMode != '') { data.WindowMode = _windowMode; }\n                this.SbForm.controls['WindowMode'].patchValue(data.WindowMode);\n                let _toggleReqMode = MyLocalStorage.getData(MyLocalStorage.DSB_TOGGLEREQUESTMODE_KEY);\n                if (_toggleReqMode != '') { data.ToggleRequestMode = _toggleReqMode; }\n                if (data.DSBFilter != 0) {\n                    MyLocalStorage.setData(MyLocalStorage.DSB_FILTER_KEY, data.DSBFilter);\n                }\n                let _dsbFilterKey = MyLocalStorage.getData(MyLocalStorage.DSB_FILTER_KEY);\n                if (_dsbFilterKey != '') { data.DSBFilter = _dsbFilterKey; }\n                this.SbForm.controls['ToggleRequestMode'].patchValue(data.ToggleRequestMode);\n                this.SbForm.controls['DateFilter'].patchValue(data.DateFilter);\n                this.SbForm.controls['DSBFilter'].patchValue(data.DSBFilter);\n                let status = this.disableControls(data.Date);\n                this.dataService.setDisableDSBControls(status);\n                this._pubWindowmode = data.WindowMode;\n                this.resetSbFilter();\n                this.setSbFilter();\n\n                if (callback) {\n                    callback(this, this.ScheduleBuilder);\n                }\n                //this._loadingBuilder = false;\n                this.subscribeEventSubscription();\n                let objectFilter = this.SbForm.get('ObjectFilter').value\n                this.IsNoDriverShiftFound = this.ScheduleBuilder.IsNoDriverShiftFound;\n                if ((this.Regions && this.Regions.length > 0) && (objectFilter == 1) && (this.DriverViewShifts && this.DriverViewShifts.length == 0)) {\n                    //IsNoDriverShiftFound verify driver does not have schedules for that shifts.\n                    //but regions has shifts here.\n                    if (this.ScheduleBuilder.DSBFilter == 2) {\n                        if (this.ScheduleBuilder.IsNoDriverShiftFound == 0) {\n                            jQuery('#btnno_shifts').click();\n                        }\n                        else {\n                            if (this.DriverViewShifts.length == 0) {\n                                this.Shifts = [];\n                                this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                            }\n                        }\n                    }\n                    else {\n                        jQuery('#btnno_shifts').click();\n                    }\n                }\n                if (this.RegionDetail && this.RegionDetail.Trailers && this.RegionDetail.Trailers.length == 0) {\n                    this._isTrailerExists = false;\n                }\n                else {\n                    this._isTrailerExists = true;\n                }\n\n                //assign driver information\n                if (this.ScheduleBuilder.ObjectFilter == 1) {\n                    let driverdetails = this.LoadDriverDetails(this.DriverViewShifts) as [];\n                    if (driverdetails.length > 0) {\n                        this.TripDriverInfo.push.apply(driverdetails);\n                        this.IntializeSendBirdAccount(driverdetails, regionId);\n                    }\n                }\n                else {\n                    let driverdetails = this.LoadDriverDetailsShift(this.TrailerViewTrailers) as [];\n                    if (driverdetails.length > 0) {\n                        this.TripDriverInfo.push.apply(driverdetails);\n                        this.IntializeSendBirdAccount(driverdetails, regionId);\n                    }\n                }\n                //get shift information for region.. used for filter.\n                this.getShiftInformation(this.ScheduleBuilder.Shifts, data.RegionId);\n            });\n    }\n    isCalendarDrPresent(drs: any, date?: string) {\n        return drs.some(p => p.IsCalendarView == true && p.SelectedDate == date) ? true : false\n    }\n    getDeliveryRequests(regionId: string, sbViewId: number, status: number = 0, date?: string): void {\n        if (date == null || date == undefined) {\n            date = this.ScheduleBuilderFilters.Date;\n        }\n        this._loadingDrRequests = true;\n        this.carrierService.getDeliveryRequests(regionId, date).subscribe((drs: any[]) => {\n            if (drs != null && drs != undefined) {\n                this.isDrScheduledforToday = this.isCalendarDrPresent(drs, date); // verify before filtering Dr\n                drs = drs.filter(t => !t.IsCalendarView);\n                if (sbViewId == 1) {\n                    drs = this.filterDrByScheduleBuilder(drs);\n                }\n                drs = this.updateRequest(drs, status);\n                this.allApiDeliveryRequest = drs;\n                //this.originalDRs_OnPageRefresh = drs;\n                this.filterRequest(drs);\n                this.refreshUpdateData(status);\n                if (this._pubWindowmode == 2) {\n                    this.getLocalStorageQueueData();\n                    localStorage.setItem(\"refreshLocalStorage\", 'true');\n                    this.activeTimer();\n                } else {\n                    this.resetTimer();\n                }\n                this.dataService.setAllDeliveryRequestsSubject(drs);\n            }\n            this.IsDeliveryRequestRecieved = true;\n            if (this.drFilterForm.get('IsFilterApplied').value) {\n                this.dataService.setDrQueueChangesForFilter(true);\n            }\n            this._loadingDrRequests = false;\n        });\n    }\n\n    subscribeDrQueueChanges() {\n        this.drQueueChangesSubscription = this.dataService.drQueueChangesForFilter\n            //.pipe(debounceTime(250))\n            .subscribe(value => {\n                if (value) {\n                    this._toggle_search = false;\n                    this.applyDrFilter();\n                }\n            })\n    }\n\n    filterDrByProductType(productType: string) {\n        this.drFilterForm.get('IsFilterApplied').setValue(false);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n\n        //if 'all product' selected\n        if (productType == \"-1\") {\n            this.searchRecords('');\n        }\n        //else filter dr by product\n        else {\n            var priorityRequests = this.allApiDeliveryRequest.filter(t => t.ProductType == productType && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\n            var missedRequests = this.allApiDeliveryRequest.filter(t => t.ProductType == productType && t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n        }\n    }\n\n    filterRequest(dr: DeliveryRequestViewModel[]) {\n        this.deliveryRequests = dr;\n        var priorityRequests = this.allApiDeliveryRequest.filter(t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\n        var missedRequests = dr.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n        this.getRequestsByPriority(priorityRequests, missedRequests);\n\n        this.tempshouldGoRequests = this.shouldGoRequests;\n        this.tempcouldGoRequests = this.couldGoRequests;\n        this.tempmustGoRequests = this.mustGoRequests;\n        this.tempMissedRequests = this.missedRequests;\n        this.assignedByOtherRegionRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SupplierCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\n        this.assignedByOtherOperatorRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SupplierCompanyId != currentUserCompanyId && t.SchedulePreviousStatus == 2);\n        this.assignedToOtherRegionRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\n        this.assignedToOtherOperatorRequests = dr.filter(t => t.AssignedToCompanyId != currentUserCompanyId && t.SupplierCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\n    }\n\n    removeRequestFromLeftPanel(draggedRequests: DeliveryRequestViewModel[]): void {\n        var deliveryRequests = this.getAllRequests();\n        deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n        var priorityReqs = deliveryRequests.filter(t => t.ParentId = null);\n        var missedReqs = deliveryRequests.filter(t => t.ParentId != null);\n        this.getRequestsByPriority(priorityReqs, missedReqs);\n    }\n\n    restoreDeleteDRs(requests: any) {\n        var delReqs: DeliveryRequestViewModel[] = requests;\n        delReqs.forEach(x => {\n            var originalDr = this.tempDraggedRequest.find(data => data.Id == x.Id);\n            if (originalDr) {\n                x['WindowMode'] = originalDr.WindowMode;\n                x['QueueMode'] = originalDr.QueueMode;\n            }\n        });\n        delReqs = delReqs.filter(x => x.SchedulePreviousStatus != DeliveryReqStatus.ScheduleCreated);\n        if (this._pubWindowmode == 2) {\n            var localStorageRequests = this.getLocalStorageRequests();\n            delReqs.forEach(x => {\n                var isDrExists = localStorageRequests.findIndex(t => t.Id == x.Id) != -1;\n                if (isDrExists) {\n                    if (x.ParentId != null) {\n                        this.pushItemsInMissedAndUpdateDrPanel(x);\n                    }\n                    else {\n                        this.pushItemsAndUpdateDrPanel(x);\n                    }\n                }\n                else {\n                    Declarations.msgwarning(\"The reset item already removed from the session.so we are not moving that item in active queue.\", undefined, undefined);\n                }\n                this.removeItemFromTempDrageQueue(x.Id, x.Priority, x.ParentId);\n            });\n        }\n        else {\n            delReqs.forEach(x => {\n                if (this.deliveryRequests.findIndex(r => r.Id == x.Id) == -1) {\n                    this.deliveryRequests.push(x);\n                }\n                else {\n                    var deliveryRequests = this.deliveryRequests.find(r => r.Id == x.Id);\n                    if (deliveryRequests != null) {\n                        deliveryRequests.DeliveryLevelPO = x.DeliveryLevelPO;\n                        deliveryRequests.Notes = x.Notes;\n                        deliveryRequests.RequiredQuantity = x.RequiredQuantity;\n                        deliveryRequests.ScheduleQuantityType = x.ScheduleQuantityType;\n                        deliveryRequests.Priority = x.Priority;\n                        deliveryRequests.ScheduleStartTime = x.ScheduleStartTime;\n                        deliveryRequests.ScheduleEndTime = x.ScheduleEndTime;\n                        deliveryRequests.SelectedDate = x.SelectedDate;\n                    }\n                }\n                this.removeItemFromTempDrageQueue(x.Id, x.Priority, x.ParentId);\n                let toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n                this.updateRecordsToggleRequest(toggleRequestMode);\n            });\n        }\n    }\n\n    pushLocation(job: DelRequestsByJobModel) {\n        switch (job.Priority) {\n            case DeliveryReqPriority.MustGo:\n                job.DeliveryRequestType = DeliveryRequestTypes.MustGo;\n                this.mustGoRequests.push(job);\n                this.mustGoRequests.slice();\n                break;\n            case DeliveryReqPriority.ShouldGo:\n                job.DeliveryRequestType = DeliveryRequestTypes.ShouldGo;\n                this.shouldGoRequests.push(job);\n                this.shouldGoRequests.slice();\n                break;\n            case DeliveryReqPriority.CouldGo:\n                job.DeliveryRequestType = DeliveryRequestTypes.CouldGo;\n                this.couldGoRequests.push(job);\n                this.couldGoRequests.slice();\n                break;\n        }\n    }\n\n    pushItemsAndUpdateDrPanel(dr: DeliveryRequestViewModel) {\n        var jobIndex = this.mustGoRequests.findIndex(t => t.JobId == dr.JobId);\n        if (jobIndex != -1) {\n            var job = this.mustGoRequests[jobIndex];\n            job.DeliveryRequests.push(dr);\n            job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n            if (job.Priority == DeliveryReqPriority.MustGo) {\n                this.mustGoRequests[jobIndex] = job;\n                this.mustGoRequests = this.mustGoRequests.slice();\n            }\n            else {\n                this.pushLocation(job);\n                this.mustGoRequests.splice(jobIndex, 1);\n            }\n        }\n        else {\n            jobIndex = this.shouldGoRequests.findIndex(t => t.JobId == dr.JobId);\n            if (jobIndex != -1) {\n                var job = this.shouldGoRequests[jobIndex];\n                job.DeliveryRequests.push(dr);\n                job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n                if (job.Priority == DeliveryReqPriority.ShouldGo) {\n                    this.shouldGoRequests[jobIndex] = job;\n                    this.shouldGoRequests = this.shouldGoRequests.slice();\n                }\n                else {\n                    this.pushLocation(job);\n                    this.shouldGoRequests.splice(jobIndex, 1);\n                }\n            }\n            else {\n                jobIndex = this.couldGoRequests.findIndex(t => t.JobId == dr.JobId);\n                if (jobIndex != -1) {\n                    var job = this.mustGoRequests[jobIndex];\n                    job.DeliveryRequests.push(dr);\n                    job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n                    if (job.Priority == DeliveryReqPriority.MustGo) {\n                        this.couldGoRequests[jobIndex] = job;\n                        this.couldGoRequests = this.couldGoRequests.slice();\n                    }\n                    else {\n                        this.pushLocation(job);\n                        this.couldGoRequests.splice(jobIndex, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    pushItemsInMissedAndUpdateDrPanel(dr: DeliveryRequestViewModel) {\n        var jobIndex = this.missedRequests.findIndex(t => t.JobId == dr.JobId);\n        if (jobIndex != -1) {\n            var job = this.missedRequests[jobIndex];\n            job.DeliveryRequests.push(dr);\n            job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n            this.missedRequests[jobIndex] = job;\n            this.missedRequests = this.missedRequests.slice();\n        }\n    }\n\n    removeItemFromTempDrageQueue(Id: string, Priority: number, ParentId: string) {\n        var index = this.tempDraggedRequest.findIndex(data => data.Id == Id);\n        if (index != -1) {\n            this.tempDraggedRequest.splice(index, 1);\n            this.tempDraggedRequest.slice(); //refresh tempDragged Queue\n        }\n    }\n\n    getTotalBlendQuantity(): number {\n        return this.blendRequestsToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0);\n    }\n    toggleBlendQuantity(req: DeliveryRequestViewModel, isPercent: boolean) {\n        if (isPercent) {\n            req.RequiredQuantity = (this.blendTotalQuantity * req.QuantityInPercent) / 100;\n        } else {\n            req.QuantityInPercent = (req.RequiredQuantity / this.blendTotalQuantity) * 100;\n        }\n    }\n    toggleBlendTotalQuantity() {\n        this.blendRequestsToUpdate.forEach(t => {\n            this.toggleBlendQuantity(t, true);\n        });\n    }\n    IsValidBlendQuantity(): boolean {\n        return this.blendRequestsToUpdate.map(t => t.QuantityInPercent).reduce((a, b) => a + b, 0) == 100;\n    }\n\n    onDeliveryReqUpdate(status: number) {\n        //VALIDATION\n        if (status == 1) {\n            var tnkRequiredQuantity: number = this.requestToUpdate.RequiredQuantity;\n            if (this.requestToUpdate.IsBlendedRequest) {\n                tnkRequiredQuantity = this.getTotalBlendQuantity();\n                if (this.blendAddRequestToUpdate)\n                    tnkRequiredQuantity = (+tnkRequiredQuantity) + (+this.blendAddRequestToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0));\n            }\n            if (this.requestToUpdate.ScheduleQuantityType == 1 && (!(tnkRequiredQuantity > 0) || tnkRequiredQuantity < 0.00001)) {\n                Declarations.msgerror(\"Invalid required quantity.\", undefined, undefined); return;\n            }\n            else if (this.requestToUpdate.ScheduleQuantityType == 1 && this.requestToUpdate.TankMaxFill && this.requestToUpdate.TankMaxFill > 0 && !this.requestToUpdate.IsMaxFillAllowed) {\n                if (tnkRequiredQuantity > this.requestToUpdate.TankMaxFill) {\n                    Declarations.msgerror(\"Should not exceed max fill. (\" + this.requestToUpdate.TankMaxFill + \")\", undefined, undefined); return;\n                }\n            }\n        }\n        if (this.requestToUpdate.IsSpiltDRAdded) {\n            var filter = this.requestToUpdate.SpiltDRs.filter(x => !(x.RequiredQuantity > 0)).length;\n            if (filter > 0) {\n                Declarations.msgerror(\"Quantity required for Spilt DRs.\", undefined, undefined); return;\n            }\n        }\n        jQuery('#closeEditDrPanel').click();\n        this._loadingDrRequests = true;\n        if (this.requestToUpdate.ScheduleQuantityType > 1) { this.requestToUpdate.RequiredQuantity = 0; }\n        let updateRequests = [this.requestToUpdate];\n        if (this.requestToUpdate.IsBlendedRequest) {\n            if (status == 1) {\n                let drNotes = this.requestToUpdate.Notes;\n                let drSelectedDate = this.requestToUpdate.SelectedDate;\n                let drScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\n                let drScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\n                let deliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\n                let drPriority = this.requestToUpdate.Priority;\n                $.each(this.blendRequestsToUpdate, function () {\n                    this.Notes = drNotes; this.Priority = drPriority; this.DeliveryLevelPO = deliveryLevelPO;\n                    this.SelectedDate = drSelectedDate; this.ScheduleStartTime = drScheduleStartTime; this.ScheduleEndTime = drScheduleEndTime;\n                });\n            }\n            updateRequests = this.blendRequestsToUpdate;\n            if (this.blendAddRequestToUpdate) {\n                this.blendAddRequestToUpdate.forEach(t => {\n                    t.SelectedDate = this.requestToUpdate.SelectedDate;\n                    t.ScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\n                    t.ScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\n                    t.DeliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\n                    if (t.RequiredQuantity > 0 || t.ScheduleQuantityType != 1)\n                        updateRequests.push(t);\n                })\n            }\n        }\n        this.carrierService.updateDeliveryRequest(updateRequests)\n            .subscribe((data: any) => {\n                this._loadingDrRequests = false;\n                if (data.StatusCode == 0) {\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                    this.refreshDeliveryRequests(status);\n\n                }\n                else if (data.StatusCode == 2) {\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n                    this.refreshDeliveryRequests(status);\n                }\n                else {\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n                }\n            });\n\n    }\n\n    refreshUpdateData(status: number) {\n        if (this._pubWindowmode == 1) {\n            if (this.SbForm.get('ToggleRequestMode').value === 1) {\n                this.onQueueFilterChange(1);\n            }\n            else {\n                this.onQueueFilterChange(2);\n            }\n        }\n        else {\n            this.setQueueFilter(2);\n            this.refreshUpdateRecordMultiwindow(this.requestToUpdate, status);\n        }\n    }\n\n    public refreshDeliveryRequests(status: number) {\n        let regionId = this.SbForm.get('RegionId').value;\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        let selectedDate = this.SbForm.get('Date').value;\n        this.getDeliveryRequests(regionId, sbViewId, status, selectedDate);\n    }\n\n    getScheduleQuantityType() {\n        if (this.ScheduleQuantityTypes.length == 0) {\n            this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\n                this.ScheduleQuantityTypes = SQT || [];\n                this.SpiltScheduleQuantityTypes = SQT.filter(x => x.Id == 1) || [];\n            });\n        }\n    }\n\n    public BrokeredDrStatus: BrokeredDrCarrierStatus = null;\n    getDeliveryReq(delReqForm: any) {\n        let delReq = delReqForm.deliveryRequest.value as DeliveryRequestViewModel;\n        this.BrokeredDrStatus = delReqForm.CarrierStatus;\n        var allDrs = this.getAllRequests();\n        var drToupdate = allDrs.find(t => t.Id == delReq.Id);\n        this.blendRequestsToUpdate = [];\n        this.blendTotalQuantity = 0;\n        this.blendAddRequestToUpdate = [];\n        this.requestToUpdate = Object.assign({}, drToupdate);\n        if (this.requestToUpdate.IsBlendedRequest) {\n            var tempBlendDrs = allDrs.filter(t => t.BlendedGroupId == delReq.BlendedGroupId);\n            this.blendedProducts = tempBlendDrs.map(t => t.ProductType).join(\", \");\n            this.blendRequestsToUpdate = tempBlendDrs.filter(t => !t.IsAdditive);\n            this.blendAddRequestToUpdate = tempBlendDrs.filter(t => t.IsAdditive);\n            this.blendTotalQuantity = this.getTotalBlendQuantity();\n        }\n        this.AssignDrForm.get('DispatcherNote').setValue('');\n        if (delReqForm.isDeleted) {\n            this.requestToUpdate.IsDeleted = true;\n            if (this.requestToUpdate.IsBlendedRequest) {\n                $.each(this.blendRequestsToUpdate, function () { this.IsDeleted = true; });\n                if (this.blendAddRequestToUpdate)\n                    $.each(this.blendAddRequestToUpdate, function () { this.IsDeleted = true; });\n            }\n            let element = document.getElementById(\"openDeleteDeliveryRequestModal\");\n            element ? element.click() : null;\n        }\n        else if (delReqForm.isAssignCarrier) {\n            this.getAllCarrierRegions();\n            this.cancelAssignDrsToCarrier()\n            this.initilizeAssignDrForm();\n            this.getOrdersAndCarrierDetails(delReq);\n        }\n        else if (delReqForm.isApproveRejectBrokeredDr) {\n            this.requestToUpdate = Object.assign({}, delReq);\n            let element = document.getElementById(\"openProceedBrokeredDrModal\");\n            element ? element.click() : null;\n        }\n        else if (delReqForm.isCreateDeliveryForTBD) {\n            this.isGroupDelivery = delReqForm.isDeliveryGroup;\n            let elem = document.getElementById('open-CreateDelivery'); elem.click();\n            this.getDropLocationDetails(delReqForm.deliveryRequest);\n        }\n        else {\n            this.getScheduleQuantityType();\n            if (this.requestToUpdate.ScheduleQuantityType == 0) { this.requestToUpdate.ScheduleQuantityType = 1 }\n            let element = document.getElementById(\"openUpdateDrModal\");\n            element ? element.click() : null;\n        }\n        this.requestToUpdate.IsSpiltDRAdded = false;\n        this.requestToUpdate.SpiltDRs = [];\n    }\n\n    public changeBrokeredDrStatus(drId: string, blendedGroupId: string, status: BrokeredDrCarrierStatus) {\n        this._acceptRejectDr = true;\n        this._loadingCarriers = true;\n        this.carrierService.changeBrokeredDrStatus(drId, blendedGroupId, status).subscribe((data: any) => {\n            this._acceptRejectDr = false;\n            this._loadingCarriers = false;\n            if (data.StatusCode != 1) {\n                if (status == BrokeredDrCarrierStatus.Accepted) {\n                    this.requestToUpdate.CarrierStatus = BrokeredDrCarrierStatus.Accepted;\n                    //this.dataService.setRestoreDeletedRequestSubject([this.requestToUpdate]);\n                    this.getDeliveryRequests(this.SelectedRegionId, this.SbForm.get('ObjectFilter').value, null, this.ScheduleBuilderFilters.Date)\n                }\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                Declarations.hideModal('#proceedBrokeredDrModal');\n                if (this.drFilterForm.get('IsFilterApplied').value) {\n                    this.dataService.setDrQueueChangesForFilter(true);\n                }\n                //this.getBrokeredDrAssignedToMe(this.SelectedRegionId, this.ScheduleBuilderFilters.Date);\n            } else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    public async changeCarrierBrokeredDrStatus(drId: any) {\n        this._acceptRejectDr = true;\n        let status = drId.status;\n        let _id = drId.drId;\n        let blendedGroupId = drId.blendedGroupId;\n        await this.carrierService.changeBrokeredDrStatus(_id, blendedGroupId, status).subscribe(data => {\n            this._acceptRejectDr = false;\n            if (data.StatusCode == 0) {\n                if (status == BrokeredDrCarrierStatus.Accepted) {\n                    this.requestToUpdate.CarrierStatus = BrokeredDrCarrierStatus.Accepted;\n                    this.getDeliveryRequests(this.SelectedRegionId, this.SbForm.get('ObjectFilter').value, null, this.ScheduleBuilderFilters.Date)\n                }\n                else {\n                    this.requestToUpdate.CarrierStatus = BrokeredDrCarrierStatus.Rejected;\n                }\n                this.dataService.setAcceptRejectDRSubject({ 'RegionId': this.SelectedRegionId, 'Date': this.ScheduleBuilderFilters.Date });\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                Declarations.hideModal('#proceedBrokeredDrModal');\n                if (this.drFilterForm.get('IsFilterApplied').value) {\n                    this.dataService.setDrQueueChangesForFilter(true);\n                }\n\n            } else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    private getAllRequests() {\n        let allDrs = [] as DeliveryRequestViewModel[];\n\n        let missedReqs = this.missedRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let mustGoReqs = this.mustGoRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let shouldGoReqs = this.shouldGoRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let couldGoReqs = this.couldGoRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        allDrs = [].concat(missedReqs, mustGoReqs, shouldGoReqs, couldGoReqs);\n        return allDrs;\n    }\n\n    updateRequest(drs: DeliveryRequestViewModel[], status: number) {\n        if (IsCarrierCompany) {\n            drs.forEach(function (element, index) {\n                if (element.CarrierStatus == 2) {\n                    drs[index].IsBrokeredCarrierDR = true;\n                }\n            });\n        }\n        if (status == 0) {\n            drs.forEach(function (element, index) {\n                drs[index].WindowMode = 1;\n                drs[index].QueueMode = 1;\n            });\n            return drs;\n        }\n        else {\n            let pubWindowmode = this._pubWindowmode;\n            if (pubWindowmode == 1) {\n                var tempmustGoRequests = this.activeQueueList.filter(top => top.Priority == 1 && top.ParentId == null);\n                var tempshouldGoRequests = this.activeQueueList.filter(top => top.Priority == 2 && top.ParentId == null);\n                var tempcouldGoRequests = this.activeQueueList.filter(top => top.Priority == 3 && top.ParentId == null);\n                var tempMissedRequests = this.activeQueueList.filter(top => top.ParentId != null);\n                drs.forEach(function (element, index) {\n                    if (tempmustGoRequests.length > 0 || tempshouldGoRequests.length > 0 || tempcouldGoRequests.length > 0 || tempMissedRequests.length > 0) {\n                        var mustrecordFound = tempmustGoRequests.find(top => top.Id === element.Id);\n                        var shouldrecordFound = tempshouldGoRequests.find(top => top.Id === element.Id);\n                        var couldrecordFound = tempcouldGoRequests.find(top => top.Id === element.Id);\n                        var missedrecordFound = tempMissedRequests.find(top => top.Id === element.Id);\n                        if (missedrecordFound) {\n                            drs[index].WindowMode = missedrecordFound.WindowMode;\n                            drs[index].QueueMode = missedrecordFound.QueueMode;\n                        }\n                        else if (mustrecordFound) {\n                            drs[index].WindowMode = mustrecordFound.WindowMode;\n                            drs[index].QueueMode = mustrecordFound.QueueMode;\n                        }\n                        else if (shouldrecordFound) {\n                            drs[index].WindowMode = shouldrecordFound.WindowMode;\n                            drs[index].QueueMode = shouldrecordFound.QueueMode;\n                        }\n                        else if (couldrecordFound) {\n                            drs[index].WindowMode = couldrecordFound.WindowMode;\n                            drs[index].QueueMode = couldrecordFound.QueueMode;\n                        }\n                        else {\n                            drs[index].WindowMode = 1;\n                            drs[index].QueueMode = 1;\n                        }\n                    }\n                    else {\n                        drs[index].WindowMode = 1;\n                        drs[index].QueueMode = 1;\n                    }\n                });\n            }\n            else {\n                drs.forEach(function (element, index) {\n                    drs[index].WindowMode = 2;\n                    drs[index].QueueMode = 2;\n                });\n            }\n            return drs;\n        }\n    }\n\n    filterDrByScheduleBuilder(drs: DeliveryRequestViewModel[]): DeliveryRequestViewModel[] {\n\n        var _scheduleRequests = [];\n        var scheduleBuilder = this.SbForm;\n        if (scheduleBuilder != undefined && scheduleBuilder != null) {\n            scheduleBuilder.value.Shifts.forEach(s => {\n                s.Schedules.forEach(sc => {\n                    sc.Trips.forEach(t => {\n                        t.DeliveryRequests.forEach(d => {\n                            _scheduleRequests.push(d.Id);\n                        });\n                    });\n                });\n            });\n            drs = drs.filter(x => {\n                return _scheduleRequests.find(y => y == x.Id) == undefined;\n            });\n        }\n        return drs;\n    }\n\n    toggledrRequestClick(status: boolean) {\n        this.drRequestClick = status;\n    }\n\n    updateRecordsToggleRequest(status: number) {\n        if (this._pubWindowmode == 1) {\n\n            let draggedRequests = this.tempDraggedRequest.filter(t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\n            let draggedmissedRequests = this.tempDraggedRequest.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n            var priorityRequests = [] as DeliveryRequestViewModel[];\n            var missedRequests = [] as DeliveryRequestViewModel[];\n            if (status == 1) {\n                priorityRequests = this.deliveryRequests.filter(t => t.ParentId == null && t.WindowMode == 1 && t.QueueMode == 1);\n                missedRequests = this.deliveryRequests.filter(top => top.WindowMode == 1 && top.QueueMode == 1 && top.ParentId != null);\n            }\n            else {\n                priorityRequests = this.deliveryRequests.filter(t => t.ParentId == null && t.WindowMode == 1 && t.QueueMode == 2);\n                missedRequests = this.deliveryRequests.filter(top => top.WindowMode == 1 && top.QueueMode == 2 && top.ParentId != null);\n            }\n            if (draggedRequests.length > 0) {\n                priorityRequests = priorityRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            if (draggedmissedRequests.length > 0) {\n                missedRequests = missedRequests.filter(({ Id: id1 }) => !draggedmissedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n        }\n        else {\n\n            let draggedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.ParentId == null);\n            let draggedmissedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.ParentId != null);\n\n            //must go requests\n            var mustGodeliveryRequests = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (mustGodeliveryRequests != null) {\n                this.mustGoRequests = mustGodeliveryRequests;\n            }\n            if (draggedRequests.length > 0) {\n                this.mustGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.mustGoRequests = this.mustGoRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.mustGoRequests.slice();\n\n            //should go requests\n            var shouldGodeliveryRequests = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (shouldGodeliveryRequests != null) {\n                this.shouldGoRequests = shouldGodeliveryRequests;\n            }\n            if (draggedRequests.length > 0) {\n                this.shouldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.shouldGoRequests = this.shouldGoRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.shouldGoRequests.slice();\n\n            //could go records filters\n            var couldGodeliveryRequests = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (couldGodeliveryRequests != null) {\n                this.couldGoRequests = couldGodeliveryRequests;\n\n            }\n            if (draggedRequests.length > 0) {\n                this.couldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.couldGoRequests = this.couldGoRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.couldGoRequests.slice();\n\n            var misseddeliveryRequests = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (misseddeliveryRequests != null) {\n                this.missedRequests = misseddeliveryRequests;\n            }\n            if (draggedmissedRequests.length > 0) {\n                this.missedRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedmissedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.missedRequests = this.missedRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.missedRequests.slice();\n        }\n    }\n\n    getLocalStorageQueueData() {\n        this._loadingRequests = true;\n        let draggedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n        var missedLocations = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var mustGoLocations = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var shouldGoLocations = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var couldGoLocations = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        if (draggedRequests && draggedRequests.length > 0) {\n            let deliveryRequests = [] as DeliveryRequestViewModel[];\n\n            let missedReqs = missedLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            let mustGoReqs = mustGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            let shouldGoReqs = shouldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            let couldGoReqs = couldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            deliveryRequests = [].concat(missedReqs, mustGoReqs, shouldGoReqs, couldGoReqs);\n\n            deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n\n            var priorityRequests = deliveryRequests.filter(t => t.ParentId == null);\n            var missedRequests = deliveryRequests.filter(t => t.ParentId != null);\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n        }\n        else {\n            this.mustGoRequests = mustGoLocations;\n            this.mustGoRequests.slice();\n            this.shouldGoRequests = shouldGoLocations;\n            this.shouldGoRequests.slice();\n            this.couldGoRequests = couldGoLocations;\n            this.couldGoRequests.slice();\n            this.missedRequests = missedLocations;\n            this.missedRequests.slice();\n        }\n        this.localmustGoRequests = this.mustGoRequests;\n        this.localmustGoRequests.slice();  //refresh the data\n        this._mustGoRefresh = this.mustGoRequests.length;\n\n        this.localshouldGoRequests = this.shouldGoRequests;\n        this.localshouldGoRequests.slice();//refresh the data\n        this._shouldGoRefresh = this.shouldGoRequests.length;\n\n        this.localcouldGoRequests = this.couldGoRequests;\n        this.localcouldGoRequests.slice();//refresh the data\n        this._couldGoRefresh = this.couldGoRequests.length;\n\n        this.localMissedRequests = this.missedRequests;\n        this.localMissedRequests.slice();//refresh the data\n        this._missedRefresh = this.missedRequests.length;\n\n        localStorage.setItem(\"refreshLocalStorage\", 'false');\n        this._loadingRequests = false;\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.dataService.setDrQueueChangesForFilter(true);\n        }\n    }\n\n    activeTimer() {\n        if (this.intervalTime) {\n            clearInterval(this.intervalTime);\n        }\n        this.intervalTime = setInterval(() => {\n            if (IsUserActive()) {\n                if (this._pubWindowmode == 2) {\n                    const refreshLocalStorage = localStorage.getItem(\"refreshLocalStorage\");\n\n                    if (refreshLocalStorage != null && refreshLocalStorage == 'true') {\n                        this.getLocalStorageQueueData();\n                    }\n                }\n            }\n        }, 3000);\n    }\n\n    activeQueueIcon() {\n        this.intervalTimeQueue = setInterval(() => {\n\n            if (IsUserActive()) {\n                this._refreshQueue = false;\n                if (this._pubWindowmode == 1) {\n                    var deliveryRequests = this.deliveryRequests;\n                    if (this.tempDraggedRequest.length > 0) {\n                        deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !this.tempDraggedRequest.some(({ Id: id2 }) => id2 === id1));\n                    }\n                    if (deliveryRequests.filter(top => top.QueueMode == 2).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                }\n                else {\n                    if (this.mustGoRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                    if (this.shouldGoRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                    if (this.couldGoRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                    if (this.missedRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                }\n            }\n        }, 3000);\n    }\n\n    onRedirectMultiWindowScreen(filter: QueueFilter): void {\n        this.clickMultiRequest = true;\n        this.ScheduleBuilderFilters.ToggleRequestMode = 2;\n        this.setQueueFilter(this.ScheduleBuilderFilters.ToggleRequestMode);\n        this.updateRecordsToggleRequest(2);\n        if (this.ScheduleBuilderFilters.WindowMode === 2 && filter === 1) {\n            this.deliveryRequestService.ToggleQueueIcon(false);\n            localStorage.setItem(\"refreshLocalStorage\", 'true');\n            this.activeTimer();\n            window.open(\"/Carrier/ScheduleBuilder/DeliveryRequests?regionId=\" + this.SbForm.get('RegionId').value + '&selectedDate=' + this.SbForm.controls['Date'].value, \"_blank\");\n        }\n    }\n\n\n    searchRequests(terms: string, queueMode: number, windowMode: number) {\n\n        //must should could go requests\n        let dragged_must_should_could = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n        let searchedRecords = this.drFilterService.searchRequestsWithParams(this.deliveryRequests, terms, queueMode, windowMode, DeliveryRequestTypes.MustGo);\n\n        if (dragged_must_should_could.length > 0) {\n            searchedRecords = searchedRecords.filter(({ Id: id1 }) => !dragged_must_should_could.some(({ Id: id2 }) => id2 === id1));\n        }\n\n        //missed requests\n        let draggedMissedRequests = this.tempDraggedRequest.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n        let missedrecords = this.drFilterService.searchRequestsWithParams(this.deliveryRequests, terms, queueMode, windowMode, DeliveryRequestTypes.Missed);\n\n        if (draggedMissedRequests.length > 0) {\n            missedrecords = missedrecords.filter(({ Id: id1 }) => !draggedMissedRequests.some(({ Id: id2 }) => id2 === id1));\n        }\n\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n            searchedRecords = this.drFilterService.applyFilterToDrs(searchedRecords, this.drFilterModel);\n            missedrecords = this.drFilterService.applyFilterToDrs(missedrecords, this.drFilterModel);\n        }\n\n        let groupedDrs = this.deliveryReqService.groupDrsByJob(searchedRecords);\n\n        this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n        this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n\n        this.missedRequests = this.deliveryReqService.groupDrsByJob(missedrecords, DeliveryRequestTypes.Missed);\n\n    }\n    filterRequests(queueMode: number, windowMode: number) {\n\n        this._loadingDrRequests = true;\n        let _mustShoulCouldGoRecords = this.deliveryRequests.filter((dr: DeliveryRequestViewModel) => (\n            dr.WindowMode == windowMode && dr.QueueMode === queueMode && dr.ParentId == null)\n        );\n\n        let _draggedRequests = this.tempDraggedRequest.filter(\n            t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n        );\n\n        if (_draggedRequests.length > 0) {\n            _mustShoulCouldGoRecords = _mustShoulCouldGoRecords.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n        }\n\n        let _filteredMustShoulCouldGoRecords = this.drFilterService.applyFilterToDrs(_mustShoulCouldGoRecords, this.drFilterModel);\n        if (IsCarrierCompany) {\n            if (this.drFilterModel.IsBrokeredDRs) {\n                _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(x => x.IsBrokeredCarrierDR == true);\n            }\n        }\n        if (this.drFilterModel.IsTBDRequest == true) {\n            _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.IsTBD == true);\n        }\n        //filter records based on Order Type.\n        if (this.drFilterModel.OrderType.length > 1) {\n            if (this.drFilterModel.OrderType.includes(OrderType.FTL && OrderType.LTL)) {\n                _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.OrderType == OrderType.FTL || t.OrderType == OrderType.LTL);\n            }\n        }\n        else if (this.drFilterModel.OrderType.includes(OrderType.LTL)) {\n            _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.OrderType == OrderType.LTL);\n        }\n        else if (this.drFilterModel.OrderType.includes(OrderType.FTL)) {\n            _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.OrderType == OrderType.FTL);\n        }\n        let groupedDrs = this.deliveryReqService.groupDrsByJob(_filteredMustShoulCouldGoRecords)\n\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.MustGo)) {\n            this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.ShouldGo)) {\n            this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.CouldGo)) {\n            this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.Missed)) {\n\n            let draggedRequests = this.tempDraggedRequest.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n\n            let _missedDrs = this.deliveryRequests.filter(dr => (dr.WindowMode == windowMode && dr.QueueMode === queueMode && dr.ParentId != null));\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _missedDrs = _missedDrs.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _missedDrs = _missedDrs.filter(x => x.IsTBD == true);\n            }\n            if (draggedRequests.length > 0) {\n                _missedDrs = _missedDrs.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _missedDrs = this.drFilterService.applyFilterToDrs(_missedDrs, this.drFilterModel);\n\n            //filter records based on Order Type.\n            if (_missedDrs.length > 0) {\n                if (this.drFilterModel.OrderType.length > 1) {\n                    if (this.drFilterModel.OrderType.includes(OrderType.FTL && OrderType.LTL)) {\n                        _missedDrs = _missedDrs.filter(t => t.OrderType == OrderType.FTL || t.OrderType == OrderType.LTL);\n                    }\n                }\n                else if (this.drFilterModel.OrderType.includes(OrderType.LTL)) {\n                    _missedDrs = _missedDrs.filter(t => t.OrderType == OrderType.LTL);\n                }\n                else if (this.drFilterModel.OrderType.includes(OrderType.FTL)) {\n                    _missedDrs = _missedDrs.filter(t => t.OrderType == OrderType.FTL);\n                }\n            }\n            this.missedRequests = this.deliveryReqService.groupDrsByJob(_missedDrs, DeliveryRequestTypes.Missed);\n        }\n        this._loadingDrRequests = false;\n    }\n\n    searchMultiWindowRequests(terms: string, queueMode: number, windowMode: number) {\n        let dragged_requests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n\n        let _localmustGoRequests = this.drFilterService.getDrsFromJob(this.localmustGoRequests);\n        let _localShouldGoRequests = this.drFilterService.getDrsFromJob(this.localshouldGoRequests);\n        let _localCouldGoRequests = this.drFilterService.getDrsFromJob(this.localcouldGoRequests);\n        let _localMissedDr = this.drFilterService.getDrsFromJob(this.localMissedRequests);\n\n        let mustGorecords = this.drFilterService.searchRequests(_localmustGoRequests, terms);\n        let shouldGorecords = this.drFilterService.searchRequests(_localShouldGoRequests, terms);\n        let couldGorecords = this.drFilterService.searchRequests(_localCouldGoRequests, terms);\n        let missedrecords = this.drFilterService.searchRequests(_localMissedDr, terms);\n\n\n        if (dragged_requests.length > 0) {\n            mustGorecords = mustGorecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n            shouldGorecords = shouldGorecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n            couldGorecords = couldGorecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n            missedrecords = missedrecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n        }\n\n        let mustGoGroupedDrs = this.deliveryReqService.groupDrsByJob(mustGorecords);\n        this.mustGoRequests = this.deliveryReqService.getMustGoRequests(mustGoGroupedDrs);\n\n        let shouldGoGroupedDrs = this.deliveryReqService.groupDrsByJob(shouldGorecords);\n        this.mustGoRequests = this.deliveryReqService.getShouldGoRequests(shouldGoGroupedDrs);\n\n        let couldGoGroupedDrs = this.deliveryReqService.groupDrsByJob(couldGorecords);\n        this.mustGoRequests = this.deliveryReqService.getCouldGoRequests(couldGoGroupedDrs);\n\n        this.missedRequests = this.deliveryReqService.groupDrsByJob(missedrecords, DeliveryRequestTypes.Missed);\n    }\n\n\n    filterMultiWindowRequests() {\n\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.MustGo)) {\n\n            let _draggedRequests = this.tempDraggedRequest.filter(t =>\n                t.Priority == 1 && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _localmustGoRequests = this.drFilterService.getDrsFromJob(this.localmustGoRequests);\n\n            if (_draggedRequests.length > 0) {\n                _localmustGoRequests = _localmustGoRequests.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _localmustGoRequests = this.drFilterService.applyFilterToDrs(_localmustGoRequests, this.drFilterModel);\n\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _localmustGoRequests = _localmustGoRequests.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _localmustGoRequests = _localmustGoRequests.filter(x => x.IsTBD == true);\n            }\n            let groupedDrs = this.deliveryReqService.groupDrsByJob(_localmustGoRequests);\n            this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.ShouldGo)) {\n\n            let _draggedRequests = this.tempDraggedRequest.filter(\n                t => t.Priority == 2 && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _localshouldGoRequests = this.drFilterService.getDrsFromJob(this.localshouldGoRequests);\n\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _localshouldGoRequests = _localshouldGoRequests.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _localshouldGoRequests = _localshouldGoRequests.filter(x => x.IsTBD == true);\n            }\n            if (_draggedRequests.length > 0) {\n                _localshouldGoRequests = _localshouldGoRequests.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _localshouldGoRequests = this.drFilterService.applyFilterToDrs(_localshouldGoRequests, this.drFilterModel);\n\n            let groupedDrs = this.deliveryReqService.groupDrsByJob(_localshouldGoRequests);\n            this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.CouldGo)) {\n\n            let _draggedRequests = this.tempDraggedRequest.filter(\n                t => t.Priority == 3 && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _localcouldGoRequests = this.drFilterService.getDrsFromJob(this.localcouldGoRequests);\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _localcouldGoRequests = _localcouldGoRequests.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _localcouldGoRequests = _localcouldGoRequests.filter(x => x.IsTBD == true);\n            }\n            if (_draggedRequests.length > 0) {\n                _localcouldGoRequests = _localcouldGoRequests.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _localcouldGoRequests = this.drFilterService.applyFilterToDrs(_localcouldGoRequests, this.drFilterModel);\n\n            let groupedDrs = this.deliveryReqService.groupDrsByJob(_localcouldGoRequests);\n            this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.Missed)) {\n\n            let _draggedMissedRequests = this.tempDraggedRequest.filter(\n                t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _missedrecords = this.drFilterService.getDrsFromJob(this.localMissedRequests);\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _missedrecords = _missedrecords.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _missedrecords = _missedrecords.filter(x => x.IsTBD == true);\n            }\n            if (_draggedMissedRequests.length > 0) {\n                _missedrecords = _missedrecords.filter(({ Id: id1 }) => !_draggedMissedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _missedrecords = this.drFilterService.applyFilterToDrs(_missedrecords, this.drFilterModel);\n\n            this.missedRequests = this.deliveryReqService.groupDrsByJob(_missedrecords, DeliveryRequestTypes.Missed);\n        }\n    }\n\n\n    // searchAssignedTabDr(terms: string) {\n\n    // }\n    // assignAssignedTabDrs() {\n\n    // }\n\n    RedirectToCreateTrailer() {\n        window.location.href = \"/Carrier/Tractor/View\";\n    }\n    RedirectToCreateRegion() {\n        window.location.href = \"/Supplier/Region/View\";\n    }\n\n    MoveActiveQueue(dr: DeliveryRequestViewModel[]): void {\n        if (dr != null) {\n            this.updateDrRequest(dr.map(t => t.Id));\n            this.deliveryRequests.slice(); // refresh the delivery request.\n            this.assignTempRequest(1, 1);\n            Declarations.msgsuccess(dr[0].CustomerCompany + \" moved to clipboard.\", undefined, undefined);\n            this._refreshQueue = true;\n        }\n    }\n\n    updateDrRequest(drID: string[]) {\n        let deliveryRequest = this.deliveryRequests.filter(t => drID.some(t1 => t1 == t.Id)) as DeliveryRequestViewModel[];\n        if (deliveryRequest != null) {\n            deliveryRequest.forEach(t => {\n                t.WindowMode = 1;\n                t.QueueMode = 2;\n                this.activeQueueList.push(t);\n                var foundIndex = this.deliveryRequests.findIndex(x => x.Id == t.Id);\n                this.deliveryRequests[foundIndex] = t;\n            });\n        }\n    }\n\n    updateDrRequestMultiScreenMode(drArray: DeliveryRequestViewModel[]) {\n        drArray.forEach(t => {\n            let foundIndex = this.deliveryRequests.findIndex(x => x.Id == t.Id);\n            if (foundIndex != -1) {\n                this.deliveryRequests[foundIndex].WindowMode = 1;\n                this.deliveryRequests[foundIndex].QueueMode = 2;\n            }\n        });\n    }\n\n    refreshLeftPanelData() {\n        var toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1) {\n            if (toggleRequestMode == 1) {\n                this.mustGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.mustGoRequests.slice();\n\n                this.shouldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.shouldGoRequests.slice();\n\n                this.couldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.couldGoRequests.slice();\n\n                this.missedRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.missedRequests.slice();\n            }\n        }\n    }\n\n    refreshSingleWindow() {\n        var status = false;\n        if (localStorage.getItem(\"missedDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n            if (locations.length > 0)\n                status = true;\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        }\n        if (localStorage.getItem(\"mustGoDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n            if (locations.length > 0)\n                status = true;\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        }\n        if (localStorage.getItem(\"shouldGoDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n            if (locations.length > 0)\n                status = true;\n\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        }\n        if (localStorage.getItem(\"couldGoDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (locations.length > 0)\n                status = true;\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        };\n        if (status) {\n            Declarations.msgwarning(\"Due to window mode change all items are moved to clipboard from the session.\", undefined, undefined);\n        }\n        this.resetLocalStorage();\n        this.resetTimer();\n        this.onQueueFilterChange(1);\n        localStorage.setItem(\"refreshRegion\", JSON.stringify(true));\n    }\n\n\n    getLocalStorageRequests() {\n        var missedLocations = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var mustGoLocations = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var shouldGoLocations = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var couldGoLocations = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n\n        let deliveryRequests = [] as DeliveryRequestViewModel[];\n\n        let missedReqs = missedLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let mustGoReqs = mustGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let shouldGoReqs = shouldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let couldGoReqs = couldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        deliveryRequests = [].concat(missedReqs, mustGoReqs, shouldGoReqs, couldGoReqs);\n\n        return deliveryRequests;\n    }\n\n    refreshUpdateRecordMultiwindow(requestToUpdate: DeliveryRequestViewModel, status: number) {\n        let draggedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n        if (requestToUpdate != null) {\n            var deliveryRequests = this.getLocalStorageRequests();\n            var updatedDrIndex = deliveryRequests.findIndex(t => t.Id == requestToUpdate.Id);\n            if (updatedDrIndex != -1) {\n                if (status == 1) {\n                    deliveryRequests[updatedDrIndex] = requestToUpdate;\n                    localStorage.setItem(\"recordPriorityChange\", JSON.stringify(requestToUpdate));\n                }\n                else {\n                    deliveryRequests.splice(updatedDrIndex, 1);\n                }\n            }\n            if (draggedRequests && draggedRequests.length > 0) {\n                deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n            var priorityRequests = deliveryRequests.filter(t => t.ParentId == null);\n            var missedRequests = deliveryRequests.filter(t => t.ParentId != null);\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n\n            localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(this.missedRequests));\n            localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(this.mustGoRequests));\n            localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(this.shouldGoRequests));\n            localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(this.couldGoRequests));\n            localStorage.setItem(\"updateRequest\", JSON.stringify(true));\n        }\n    }\n\n    getRequestsByPriority(priorityReqs: DeliveryRequestViewModel[], missedReqs: DeliveryRequestViewModel[]) {\n        var groupedDrs = this.deliveryReqService.groupDrsByJob(priorityReqs);\n        this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n        this.mustGoRequests.slice();\n        this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        this.shouldGoRequests.slice();\n        this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n        this.couldGoRequests.slice();\n        this.missedRequests = this.deliveryReqService.groupDrsByJob(missedReqs, DeliveryRequestTypes.Missed);\n        this.missedRequests.slice();\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.dataService.setDrQueueChangesForFilter(true);\n        }\n    }\n\n    async onApplyFilter($event) {\n        if ($event.SelectedDrivers == undefined)\n            $event.SelectedDrivers = [];\n        if ($event.SelectedTrailers == undefined)\n            $event.SelectedTrailers = [];\n        if ($event.SelectedPickups == undefined)\n            $event.SelectedPickups = [];\n\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        if (sbViewId == 1) {\n            // driver view\n            await this.filterDriverView($event)\n        }\n        else if (sbViewId == 2) {\n            // trailer view\n            await this.filterTrailerView($event);\n        }\n    }\n\n    setSbFilter() {\n        if (this.RegionDetail == undefined || this.RegionDetail == null) {\n            return;\n        }\n\n        this.UpdateSbFilter = false;\n        this.SbFilter.Drivers = this.RegionDetail.Drivers;\n        this.SbFilter.Trailers = this.RegionDetail.Trailers;\n        this.SbFilter.Pickups = this.getPickups();\n        this.UpdateSbFilter = true;\n    }\n\n    resetSbFilter() {\n        this.UpdateSbFilter = false;\n\n        this.DriverViewFilter = null;\n        this.TrailerViewFilter = null;\n        this.SbFilter.SelectedDrivers = [];\n        this.SbFilter.SelectedTrailers = [];\n        this.SbFilter.SelectedPickups = [];\n\n        this.UpdateSbFilter = true;\n    }\n\n    getPickups() {\n        var pickups: DropdownItem[] = [];\n        if (this.ScheduleBuilder.ObjectFilter == 1) {\n            // driver view\n            if (this.DriverViewShifts != undefined && this.DriverViewShifts != null && this.DriverViewShifts.length > 0) {\n                this.DriverViewShifts.map((shift, shiftIdx) => {\n                    shift.Schedules.map((schedule, scheduleIdx) => {\n                        schedule.Trips.map((trip, tripIdx) => {\n                            this.addPickupLocation(pickups, trip);\n                        });\n                    });\n                });\n            }\n        }\n        else {\n            // trailer view\n            if (this.TrailerViewTrailers != undefined && this.TrailerViewTrailers != null && this.TrailerViewTrailers.length > 0) {\n                this.TrailerViewTrailers.map((trailer, trailerIdx) => {\n                    trailer.Shifts.map((shift, shiftIdx) => {\n                        shift.Trips.map((trip, tripIdx) => {\n                            this.addPickupLocation(pickups, trip);\n                        });\n                    });\n                });\n            }\n        }\n        return pickups;\n    }\n\n    addPickupLocation(pickups: DropdownItem[], trip: TripModel) {\n        if (trip.IsCommonPickup) {\n            if (trip.PickupLocationType == PickupLocationType.BulkPlant) {\n                this.addBulkplantAddress(pickups, trip.BulkPlant);\n            }\n            else if (trip.PickupLocationType == PickupLocationType.Terminal) {\n                this.addTerminalAddress(pickups, trip.Terminal);\n            }\n        }\n        else {\n            trip.DeliveryRequests.map((dr, drIdx) => {\n                if (dr.PickupLocationType == PickupLocationType.BulkPlant) {\n                    this.addBulkplantAddress(pickups, dr.BulkPlant);\n                }\n                else if (dr.PickupLocationType == PickupLocationType.Terminal) {\n                    this.addTerminalAddress(pickups, dr.Terminal);\n                }\n            });\n        }\n    }\n\n    addBulkplantAddress(pickups: DropdownItem[], bulkplant: DropAddressModel) {\n        var bulkplantTxt = 'Bulkplant: ';\n        var siteName = bulkplant.SiteName.replace(' ', '');\n\n        var pickup = pickups.filter(p => p.Code == siteName && p.Name.search(bulkplantTxt) != -1);\n        if (pickup.length == 0 && bulkplant.SiteName != undefined && bulkplant.SiteName != null) {\n            pickups.push({ \"Id\": 0, \"Code\": siteName, \"Name\": bulkplantTxt + bulkplant.Address + \",\" + bulkplant.City + \",\" + bulkplant.State.Code + \",\" + bulkplant.ZipCode });\n        }\n    }\n\n    addTerminalAddress(pickups: DropdownItem[], terminal: DropdownItem) {\n        var terminalTxt = 'Terminal: ';\n        var pickup = pickups.filter(p => p.Code == terminal.Id.toString() && p.Name.search(terminalTxt) != -1);\n        if (pickup.length == 0) {\n            pickups.push({ \"Id\": 0, \"Code\": terminal.Id.toString(), \"Name\": terminalTxt + terminal.Name });\n        }\n\n    }\n\n    async filterDriverView($event) {\n        var shifts = this.SbForm.get('Shifts').value;\n        var shiftIndex = 0;\n        this.DriverViewFilter = new DriverViewFilterModel;\n        for (let shift of shifts) {\n            var schedules = shift.Schedules;\n            await schedules != undefined && schedules != null &&\n                schedules.map((sche, scheduleIdx) => {\n                    var isPickup = false;\n                    if ($event.SelectedPickups.length > 0) {\n                        var trips = sche.Trips;\n                        trips != undefined && trips != null &&\n                            trips.map((trip, tripIdx) => {\n                                var code = \"\";\n                                var isExit = false;\n                                if (!isExit) {\n                                    if (trip.IsCommonPickup) {\n                                        if (trip.PickupLocationType == PickupLocationType.BulkPlant) {\n                                            code = trip.BulkPlant.SiteName;\n                                        }\n                                        else if (trip.PickupLocationType == PickupLocationType.Terminal) {\n                                            code = trip.Terminal.Id.toString();\n                                        }\n                                    }\n                                    else {\n                                        trip.DeliveryRequests.map((dr, drIdx) => {\n                                            if (dr.PickupLocationType == PickupLocationType.BulkPlant) {\n                                                code = dr.BulkPlant.SiteName;\n                                            }\n                                            else if (dr.PickupLocationType == PickupLocationType.Terminal) {\n                                                code = dr.Terminal.Id.toString();\n                                            }\n                                        });\n                                    }\n                                    if (code != undefined && code != \"\") {\n                                        var pickup = $event.SelectedPickups.some(pick => pick.Code == code.replace(' ', ''));\n                                        if (pickup) {\n                                            isExit = true;\n                                            isPickup = true;\n                                        }\n                                    }\n                                }\n                            });\n                    }\n\n                    var isDriver = sche.Drivers.filter(d => $event.SelectedDrivers.some(driver => driver.Id == d.Id)).length > 0;\n                    var isTrailer = sche.Trailers.filter(t => $event.SelectedTrailers.some(trailer => trailer.Id == t.Id)).length > 0;\n                    var isShowShift = false;\n                    if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length > 0) {\n                        if (isDriver && isTrailer && isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isTrailer) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length > 0) {\n                        if (isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver && isTrailer) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length > 0) {\n                        if (isTrailer && isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length > 0) {\n                        if (isDriver && isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length == 0) {\n                        isShowShift = true;\n                    }\n\n                    if (isShowShift) {\n                        this.DriverViewFilter.Shifts[shiftIndex + \"-\" + scheduleIdx] = true;\n                    }\n                    else {\n                        this.DriverViewFilter.Shifts[shiftIndex + \"-\" + scheduleIdx] = false;\n                    }\n                });\n            shiftIndex++;\n        }\n    }\n\n    async filterTrailerView($event) {\n        this.TrailerViewFilter = new TrailerViewFilterModel;\n        var trailers = this.SbForm.get('Trailers').value;\n        if (trailers == null || trailers == undefined || trailers.length == 0) {\n            return;\n        }\n        if ($event.SelectedTrailers.length == 0 && $event.SelectedDrivers.length == 0 && $event.SelectedPickups.length == 0) {\n            return;\n        }\n\n        var trailerIdx = 0;\n        for (let trailer of trailers) {\n            var shifts = trailer.Shifts;\n            await shifts != undefined && shifts != null &&\n                shifts.map((shift, shiftIdx) => {\n                    var trips = shift.Trips;\n                    var isExitLoop = false;\n                    var isPickup = false;\n                    var isDriver = false;\n                    trips != undefined && trips != null &&\n                        trips.map((trip, tripIdx) => {\n                            if ($event.SelectedDrivers.length > 0) {\n                                if (!isExitLoop) {\n                                    var drivers = trip.Drivers;\n                                    var driver = drivers.filter(d => $event.SelectedDrivers.some(driver => driver.Id == d.Id));\n                                    if (driver != null && driver.length > 0) {\n                                        isExitLoop = true;\n                                        isDriver = true;\n                                    }\n                                }\n                            }\n\n                            var code = \"\";\n                            if ($event.SelectedPickups.length > 0) {\n                                if (!isExitLoop) {\n                                    if (trip.IsCommonPickup) {\n                                        if (trip.PickupLocationType == PickupLocationType.BulkPlant) {\n                                            code = trip.BulkPlant.SiteName;\n                                        }\n                                        else if (trip.PickupLocationType == PickupLocationType.Terminal) {\n                                            code = trip.Terminal.Id.toString();\n                                        }\n                                    }\n                                    else {\n                                        trip.DeliveryRequests.map((dr, drIdx) => {\n                                            if (dr.PickupLocationType == PickupLocationType.BulkPlant) {\n                                                code = dr.BulkPlant.SiteName;\n                                            }\n                                            else if (dr.PickupLocationType == PickupLocationType.Terminal) {\n                                                code = dr.Terminal.Id.toString();\n                                            }\n                                        });\n                                    }\n\n                                    if (code != undefined && code != \"\") {\n                                        var pickup = $event.SelectedPickups.some(pick => pick.Code == code.replace(' ', ''));\n                                        if (pickup) {\n                                            isExitLoop = true;\n                                            isPickup = true;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n\n                    var isShiftShow = false;\n                    if ($event.SelectedDrivers.length > 0 && $event.SelectedPickups.length > 0) {\n                        if (isDriver && isPickup) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedPickups.length > 0) {\n                        if (isPickup) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedPickups.length == 0) {\n                        isShiftShow = true;\n                    }\n\n                    if (isShiftShow)\n                        this.TrailerViewFilter.Shifts[trailerIdx + \"-\" + shiftIdx] = true;\n                    else\n                        this.TrailerViewFilter.Shifts[trailerIdx + \"-\" + shiftIdx] = false;\n                });\n\n            if ($event.SelectedTrailers.length > 0) {\n                var trail = $event.SelectedTrailers.some(tr => tr.Id == trailer.Id);\n                if (!trail) {\n                    this.TrailerViewFilter.Trailers[trailerIdx] = false;\n                }\n                else {\n                    this.TrailerViewFilter.Trailers[trailerIdx] = true;\n                }\n            }\n            trailerIdx++;\n        }\n    }\n\n    IntializeChat(driverId) {\n        this.sendbirdComponent.IntializeDriverChat(driverId, this.SelectedRegionId);\n    }\n    LoadDriverDetails(driverViewShifts: ScheduleShiftModel[]) {\n        let driverinfo = [];\n        driverViewShifts.forEach(xshiftItem => {\n            var items = xshiftItem.Schedules.filter(top => top.Drivers.length > 0);\n            items.forEach(driverItem => {\n                driverItem.Drivers.forEach(drItem => {\n                    if (driverinfo.findIndex(top => top === drItem.Id) === -1) {\n                        driverinfo.push(drItem.Id);\n                    }\n                });\n\n            });\n        });\n        return driverinfo;\n    }\n    LoadDriverDetailsShift(driverViewShifts: TrailerViewModel[]) {\n        let driverinfo = [];\n        driverViewShifts.forEach(xshiftItem => {\n            if (xshiftItem.Shifts.length > 0) {\n                xshiftItem.Shifts.forEach(shiftItem => {\n                    var items = shiftItem.Trips.filter(top => top.Drivers.length > 0);\n                    items.forEach(driverItem => {\n                        driverItem.Drivers.forEach(drItem => {\n                            if (driverinfo.findIndex(top => top === drItem.Id) === -1) {\n                                driverinfo.push(drItem.Id);\n                            }\n                        });\n\n                    });\n                });\n            }\n        });\n        return driverinfo;\n    }\n    IntializeSendBirdAccount(driverInfo: any[], regionId) {\n        this.sendbirdComponent.IntializeChatDefault(driverInfo, regionId);\n    }\n\n    updateFiltersFromLocalStorage(): void {\n        let _regionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\n        if (_regionId != '') {\n            this.ScheduleBuilderFilters.RegionId = _regionId;\n        }\n        let _dateFilter = MyLocalStorage.getData(MyLocalStorage.DSB_DATEFILTER_KEY);\n        if (_dateFilter != '') {\n            this.ScheduleBuilderFilters.DateFilter = _dateFilter;\n        }\n        let _objectFilter = MyLocalStorage.getData(MyLocalStorage.DSB_OBJECTFILTER_KEY);\n        if (_objectFilter != '') {\n            this.ScheduleBuilderFilters.ObjectFilter = _objectFilter;\n        }\n        let _windowFilter = MyLocalStorage.getData(MyLocalStorage.DSB_WINDOWMODE_KEY);\n        if (_windowFilter != '') {\n            this.ScheduleBuilderFilters.WindowMode = _windowFilter;\n        }\n        let _date = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\n        if (_date != '') {\n            this.ScheduleBuilderFilters.Date = _date;\n        }\n        let _dsbViewFilter = MyLocalStorage.getData(MyLocalStorage.DSB_FILTER_KEY);\n        if (_dsbViewFilter != '') {\n            this.ScheduleBuilderFilters.DSBFilter = _dsbViewFilter;\n        }\n        this.disableControlsonLoad();\n    }\n\n    disableControlsonLoad() {\n        if (this.ScheduleBuilderFilters.DateFilter == 1) {\n            this.disableControl = false;\n        }\n        else if (this.ScheduleBuilderFilters.DateFilter == 2) {\n            this.disableControl = false;\n        }\n        else if (this.ScheduleBuilderFilters.DateFilter == 3) {\n            let status = this.disableControls(this.ScheduleBuilderFilters.Date);\n            this.disableControl = status;\n        }\n        else if (this.ScheduleBuilderFilters.DateFilter == 4) {\n            this.disableControl = true;\n        }\n        MyLocalStorage.setData(MyLocalStorage.DSB_READONLY_KEY, this.disableControl);\n        this.dataService.setDisableDSBControls(this.disableControl);\n    }\n\n    onRedirectWallyBoardPage() {\n        MyLocalStorage.setData(MyLocalStorage.DSB_READONLY_KEY, this.disableControl);\n        MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.SelectedRegionId);\n        let date = this.SbForm.get('Date').value;\n        let selectedDate = moment(date).format('MM/DD/YYYY');\n        MyLocalStorage.setData(MyLocalStorage.DSB_DATE_KEY, selectedDate);\n        window.open(\"/Dispatcher/Dashboard\", \"_blank\");\n    }\n\n    setReadOnlyControlsValue() {\n        MyLocalStorage.setData(MyLocalStorage.DSB_READONLY_KEY, this.disableControl);\n        MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.SelectedRegionId);\n        MyLocalStorage.setData(MyLocalStorage.DSB_DATE_KEY, this.SbForm.get('Date').value);\n    }\n\n    setRegionForRoute() {\n        this.routeInfoComponent.setRegionId(currentUserCompanyId, this.SelectedRegionId);\n    }\n\n    private getOttoSetting(): void {\n        this.IsOttoBuilderOpened = false;\n        this.isDisplayOttoButton = false;\n        this.sbService.getOttoSetting().subscribe(data => {\n            if (data.StatusCode == 0) {\n                this.isDisplayOttoButton = true;\n            }\n        });\n        this.dataService.OpenDsbOttoBuilderSubject.subscribe(x => {\n            this.IsOttoBuilderOpened = x;\n            if (!x) {\n                Declarations.closeSlidePanel();\n            }\n        });\n        this.dataService.RefreshDsbOttoBuilderSubject.subscribe(x => {\n            if (x) {\n                this.refreshScheduleBuilder(this.ScheduleBuilderFilters.RegionId, this.ScheduleBuilderFilters.Date, this.ScheduleBuilderFilters.ObjectFilter, this.ScheduleBuilderFilters.DSBFilter, this.initScheduleBuilder);\n            }\n        });\n    }\n\n    public openOttoBuilder(): void {\n        this.IsOttoBuilderOpened = true;\n    }\n    public openOttoNotification(): void {\n        this.IsOttoNotificationOpened = true;\n    }\n    public getOttoNotificationCount() {\n        this.sbService.getOttoNotificationCount(this.SelectedRegionId)\n            .subscribe(detail => {\n                if (detail.StatusCode == 0) {\n                    this.OttoNotificationCount = detail.OttoNotificationCount;\n                }\n                else {\n                    this.OttoNotificationCount = 0;\n                }\n            });\n    }\n    onDSBFilterChange(filter: number): void {\n        this.resetSbFilter();\n        this.ScheduleBuilderFilters.DSBFilter = filter;\n        MyLocalStorage.setData(MyLocalStorage.DSB_FILTER_KEY, filter);\n        let _dSBFilter = this.SbForm.get('DSBFilter');\n        if (_dSBFilter.value != filter) {\n            _dSBFilter.setValue(filter);\n        }\n    }\n    onShiftsSelect(shift: any) {\n        if (shift != null && shift.ShiftInfo != '') {\n            var shiftStartInfo = shift.ShiftInfo.split('-')[1].trim();\n            let _shifts = this.SbForm.get('Shifts') as FormArray;\n            _shifts.controls.forEach(x => {\n                let shiftId = x.get('Id').value;\n                let startTime = x.get('StartTime').value;\n                if (shiftId == shift.Id && startTime == shiftStartInfo) {\n                    x.get('IsVisible').patchValue(true);\n                }\n            });\n            if (this.regionDSBModel != null) {\n                var shiftInfo = this.regionDSBModel.DSBShiftInfo.findIndex(x => x.Id == shift.Id);\n                if (shiftInfo == -1) {\n                    var shiftmodel = new ShiftViewModel();\n                    shiftmodel.Id = shift.Id;\n                    shiftmodel.ShiftInfo = shift.ShiftInfo;\n                    this.regionDSBModel.DSBShiftInfo.push(shiftmodel);\n                    var filterModel = JSON.stringify(this.regionDSBModel);\n                    this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                        if (res) {\n\n                        }\n                    });\n                }\n            }\n        }\n\n        this.dataService.setShiftVisibility(true);\n    }\n    onShiftsDeSelect(shift: any) {\n        if (shift != null && shift.ShiftInfo != '') {\n            var shiftStartInfo = shift.ShiftInfo.split('-')[1].trim();\n            let _shifts = this.SbForm.get('Shifts') as FormArray;\n            _shifts.controls.forEach(x => {\n                let shiftId = x.get('Id').value;\n                let startTime = x.get('StartTime').value;\n                if (shiftId == shift.Id && startTime == shiftStartInfo) {\n                    x.get('IsVisible').patchValue(false);\n                }\n            });\n            if (this.regionDSBModel != null) {\n                var shiftInfo = this.regionDSBModel.DSBShiftInfo.findIndex(x => x.Id == shift.Id);\n                if (shiftInfo >= 0) {\n                    this.regionDSBModel.DSBShiftInfo.splice(shiftInfo, 1);\n                    var filterModel = JSON.stringify(this.regionDSBModel);\n                    this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                        if (res) {\n\n                        }\n                    });\n                }\n            }\n        }\n        this.dataService.setShiftVisibility(true);\n    }\n    onShiftsSelectAll() {\n        let DSBShiftInfo: ShiftViewModel[] = [];\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(x => {\n            x.get('IsVisible').patchValue(true);\n            let shiftViewModel = new ShiftViewModel();\n            shiftViewModel.Id = x.get('Id').value;\n            var shiftInfo = this.Shifts.find(x => x.Id == shiftViewModel.Id);\n            if (shiftInfo != null) {\n                shiftViewModel.ShiftInfo = shiftInfo.ShiftInfo;\n            }\n            DSBShiftInfo.push(shiftViewModel);\n        });\n        if (this.regionDSBModel != null) {\n            this.regionDSBModel.DSBShiftInfo = DSBShiftInfo;\n            var filterModel = JSON.stringify(this.regionDSBModel);\n            this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                if (res) {\n\n                }\n            });\n        }\n        this.dataService.setShiftVisibility(true);\n    }\n    onShiftsDeSelectAll() {\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(x => {\n            x.get('IsVisible').patchValue(false);\n        });\n        if (this.regionDSBModel != null) {\n            this.regionDSBModel.DSBShiftInfo = [];\n            var filterModel = JSON.stringify(this.regionDSBModel);\n            this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                if (res) {\n\n                }\n            });\n        }\n        this.dataService.setShiftVisibility(true);\n    }\n    getShiftInformation(shiftInfo: ScheduleShiftModel[], regionId: string) {\n        this._loadingBuilder = true;\n        this.regionDSBModel.RegionId = regionId;\n        this.regionDSBModel.DSBShiftInfo = [];\n        this.dispatcherService.getDSBShiftFilters(TfxModule.DSBShift, regionId).subscribe(res => {\n            if (res && res.length > 0) {\n                this.SetFilters(res);\n            }\n            if (shiftInfo.length > 0) {\n                this.Shifts = [];\n                shiftInfo.forEach(x => {\n                    var shiftExists = this.Shifts.findIndex(top => top.Id == x.Id);\n                    if (shiftExists == -1) {\n                        var shiftModel = new ShiftViewModel();\n                        shiftModel.Id = x.Id;\n                        shiftModel.ShiftInfo = \"Shift - \" + x.StartTime + \" - \" + x.EndTime;\n                        shiftModel.StartTime = x.StartTime;\n                        shiftModel.EndTime = x.EndTime;\n                        this.Shifts.push(shiftModel);\n                    }\n                });\n                this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                if (this.regionDSBModel != null && this.regionDSBModel.DSBShiftInfo.length > 0) {\n                    var shiftChangeDetect = false;\n                    this.regionDSBModel.DSBShiftInfo.forEach(x => {\n                        var shiftExists = this.Shifts.find(x1 => x1.Id == x.Id);\n                        if (shiftExists == null) {\n                            shiftChangeDetect = true;\n                            return;\n                        }\n                    });\n                    if (shiftChangeDetect) {\n                        this.regionDSBModel.DSBShiftInfo = this.Shifts;\n                        var filterModel = JSON.stringify(this.regionDSBModel);\n                        this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                            if (res) {\n\n                            }\n                        });\n                        this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                    }\n                    else {\n                        this.SbForm.get('SelectedShifts').patchValue(this.regionDSBModel.DSBShiftInfo);\n                    }\n                }\n                else {\n                    this.regionDSBModel.DSBShiftInfo = this.Shifts;\n                    var filterModel = JSON.stringify(this.regionDSBModel);\n                    this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                        if (res) {\n\n                        }\n                    });\n                }\n\n            }\n            else {\n                this.Shifts = [];\n                this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                this.regionDSBModel.DSBShiftInfo = [];\n                var filterModel = JSON.stringify(this.regionDSBModel);\n                this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                    if (res) {\n                    }\n                });\n            }\n            let _shifts = this.SbForm.get('Shifts') as FormArray;\n            _shifts.controls.forEach(x => {\n                if (this.regionDSBModel.DSBShiftInfo.length > 0) {\n                    var shiftIndex = this.regionDSBModel.DSBShiftInfo.findIndex(x1 => x1.Id == x.get('Id').value);\n                    if (shiftIndex >= 0) {\n                        x.get('IsVisible').patchValue(true);\n                    }\n                    else {\n                        x.get('IsVisible').patchValue(false);\n                    }\n                }\n                else {\n                    x.get('IsVisible').patchValue(true);\n                }\n            });\n            this._loadingBuilder = false;\n        });\n\n    }\n    onApplyGridViewFilter($event) {\n        if ($event.SearchLocation == undefined)\n            $event.SearchLocation = '';\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        if (sbViewId == 1) {\n            // driver view\n            this.filterGridViewDriverView($event)\n        }\n\n    }\n    filterGridViewDriverView($event) {\n        var searchLocation = $event.SearchLocation;\n        let data = {\n            searchLocation: searchLocation\n        }\n        this.dataService.setGridViewSearch(data);\n\n\n    }\n    openDRReportGrid() {\n        window.open(\"Carrier/ScheduleBuilder/DeliveryRequestsReport\", \"_blank\");\n    }\n    // assign dr start\n    getOrdersAndCarrierDetails(delReq: DeliveryRequestViewModel): void {\n\n        document.getElementById('openAssignCarrierRequestModal').click();\n        this.requestToBroker = delReq;\n        this._loadingCarriers = true;\n        this.OrderList = [];\n\n        this.sbService.getAssignCarrierDetails(delReq.CreatedByRegionId, delReq.JobId, delReq.ProductTypeId).subscribe(data => {\n            this._loadingCarriers = false;\n            if (data != null && data != undefined) {\n                this.setCarrierRegions(data.CarrierDetails);\n                if (data.OrderDetails && data.OrderDetails.length > 0) {\n                    this.OrderList = data.OrderDetails;\n                    this.AssignDrForm.controls.BrokerOrderId.setValue(this.OrderList[0].Id);\n                    this.AssignDrForm.controls.DispatcherNote.setValue(this.OrderList[0].DRNote);\n                }\n                if (delReq.OrderId != null) {\n                    this.OrderList = this.OrderList.filter(top => top.Id == delReq.OrderId);\n                    if (this.OrderList.length > 0) {\n                        this.AssignDrForm.controls.BrokerOrderId.setValue(this.OrderList[0].Id);\n                        this.AssignDrForm.controls.DispatcherNote.setValue(this.OrderList[0].DRNote);\n                    }\n                }\n            }\n        });\n    }\n    getAllCarrierRegions() {\n        if (this.CarrierRegions.length > 0)\n            return false;\n        this.CarrierRegions = [];\n        this.regionService.getCarrierRegions().subscribe(response => {\n            if (response && response.length > 0) {\n                this.CarrierRegions = response;\n            }\n        });\n    }\n\n    onCarrierSelect(data: any, isSelect: boolean) {\n        if (isSelect) {\n            let selection = this.CarrierRegions.find(c => c.Id == data.Id);\n            if (selection) {\n                let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n                _formArray.push(this.fb.group({\n                    Id: this.fb.control(selection.Id),\n                    Name: this.fb.control(selection.Name),\n                    RegionId: this.fb.control(null, [Validators.required]),\n                    SequenceNo: this.fb.control(null),\n                }));\n            }\n        }\n        else {\n            let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n            _formArray.removeAt(_formArray.value.findIndex(carr => carr.Id == data.Id));\n        }\n    }\n    public onCarrierSelectAll(items: any, isSelect: boolean) {\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        if (isSelect) {\n            let existingFormCarriers = _formArray.value as any[] || [];\n            this.CarrierRegions.forEach((carrierRegion: CarrierRegionModel) => {\n                if (!existingFormCarriers.some(c => c.Id == carrierRegion.Id)) {\n                    let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n                    this.pushRowInCarrierForm(_formArray, { Id: carrierRegion.Id, Code: null, Name: carrierRegion.Name, RegionId: null, SequenceNo: null });\n                }\n            });\n        }\n        else {\n            _formArray.clear();\n        }\n    }\n    initilizeAssignDrForm() {\n        this.AssignDrForm = this.fb.group({\n            BrokerOrderId: this.fb.control(null),\n            DispatcherNote: this.fb.control(null),\n            SelectedCarrier: this.fb.control(null),\n            Carriers: this.fb.array([]),\n            DeliveryRequestWithOrder: this.fb.array([]),\n        })\n    }\n    setCarrierRegions(_carrRegions: TfxCarrierDropdownDisplayItem[]) {\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        _formArray.clear();\n        _carrRegions.forEach(carr => {\n            this.pushRowInCarrierForm(_formArray, carr);\n        });\n        this.AssignDrForm.get('SelectedCarrier').setValue(_formArray.value);\n        this.RegionCarriers = _formArray.value;\n        $(\"#sortableDrCarriers\").click()\n    }\n    removeCarrier(id: number) {\n        //remove from form\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        _formArray.removeAt(_formArray.value.findIndex(carr => carr.Id == id));\n        //remove from dropdown\n        let currentSelection: any[] = this.AssignDrForm.get('SelectedCarrier').value || [];\n        currentSelection.splice(currentSelection.findIndex(carr => carr.Id == id), 1);\n        this.AssignDrForm.get('SelectedCarrier').patchValue(currentSelection);\n    }\n    getRegionsByCarrierId(id: number): TfxCarrierRegionDetailsModel[] {\n        let response = []\n        let carr = this.CarrierRegions.find(f => f.Id == id);\n        if (carr != null && carr.Regions)\n            response = carr.Regions;\n        return response;\n    }\n    makeCarrierUIsortable() {\n        var _this = this;\n        $(function () {\n            let sortable: any = $(\"#sortableDrCarriers\");\n            sortable.sortable({\n                stop: function (event, ui) {\n                    var carrierIds = sortable.sortable(\"toArray\") as number[];\n                    _this.updateSequence(carrierIds); sortable.click();\n                }\n            });\n        });\n    }\n    updateSequence(carrIds: number[]) {\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        let carriers = _formArray.value as TfxCarrierDropdownDisplayItem[]\n        _formArray.clear();\n\n        carrIds.forEach(id => {\n            let carr = carriers.find(c => c.Id == id);\n            this.pushRowInCarrierForm(_formArray, carr);\n        });\n    }\n    pushRowInCarrierForm(_formArray: FormArray, data: TfxCarrierDropdownDisplayItem) {\n        _formArray.push(this.fb.group({\n            Id: this.fb.control(data.Id),\n            Name: this.fb.control(data.Name),\n            RegionId: this.fb.control(this.CarrierRegions.some(f => f.Regions.some(r => r.Id == data.RegionId)) ? data.RegionId : null, [Validators.required]),\n            SequenceNo: this.fb.control(data.SequenceNo),\n        }));\n    }\n    SaveAssignCarrierDetails(): void {\n\n        let assignDrModel = this.AssignDrForm.value;\n        if (assignDrModel.Carriers && assignDrModel.Carriers.length > 0) {\n            assignDrModel.Carriers.forEach((carr, index: number) => {\n                carr.SequenceNo = (index + 1)\n            })\n        }\n        if (assignDrModel.Carriers.length > 0) {\n            let model = new DeliveryRequestBrokerInfoViewModel();\n            model.CarrierRegionId = assignDrModel.Carriers[0].RegionId;\n            model.CarrierCompanyId = assignDrModel.Carriers[0].Id;\n            model.DeliveryRequest = this.requestToBroker;\n            model.OrderId = assignDrModel.BrokerOrderId;\n            model.DispatcherNote = assignDrModel.DispatcherNote;\n            model.CarrierInfo = assignDrModel.Carriers;\n            model.CarrierInfoJson = JSON.stringify(assignDrModel.Carriers);\n            model.IsDispatchRetainedByCustomer = false;\n            model.BlendedGroupId = this.requestToBroker.BlendedGroupId;\n            var orderInfo = this.OrderList.find(top => top.Id == assignDrModel.BrokerOrderId);\n            if (orderInfo != null && orderInfo.Code == \"1\") {\n                model.IsDispatchRetainedByCustomer = true;\n            }\n\n            this._loadingCarriers = true;\n            this.sbService.BrokerDeliveryRequestToCarrier(model).subscribe(data => {\n                Declarations.hideModal('#assignCarrierRequestModal');\n                this._loadingCarriers = false;\n                if (data.StatusCode != 1) {\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                    this.dataService.setRemoveDroppedRequestSubject([this.requestToBroker]);\n                    this.dataService.setDrQueueChangesForFilter(true);\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                }\n            });\n        }\n    }\n    assignDrsToCarrier() {\n        this.SbForm.get('IsAssignDrEnabled').setValue(true);\n        this.dataService.setScheduleChangeDetectSubject(true);\n        //GET ALL CARRIERS FOR REGION\n        this.getAllCarrierRegions();\n    }\n    async cancelAssignDrsToCarrier() {\n        this.SbForm.get('IsAssignDrEnabled').setValue(false);\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(shift => {\n            let _schedules = shift.get('Schedules') as FormArray;\n            _schedules.controls.forEach(schedule => {\n                let _trips = schedule.get('Trips') as FormArray;\n                _trips.controls.forEach(trip => {\n                    let _drs = trip.get('DeliveryRequests') as FormArray;\n                    _drs.controls.forEach(dr => {\n                        if (dr.get('IsSelectedForAssignment').value == true) {\n                            dr.get('IsSelectedForAssignment').setValue(false);\n                        }\n                    })\n                });\n            });\n        });\n        this.dataService.setScheduleChangeDetectSubject(true);\n    }\n    getSelectedCarriersByRegion() {\n        this.regionService.getSelectedCarriersByRegion(this.SbForm.get('RegionId').value).subscribe(response => {\n            if (response && response.length > 0) {\n                this.setCarrierRegions(response);\n            }\n        });\n    }\n\n    assignCarriersToDrs() {\n        document.getElementById('openAssignCarrierRequestModal').click();\n        //INITILIZE FORM\n        this.initilizeAssignDrForm();\n        //GET SELECTED CARRIERS IN REGION\n        this.getSelectedCarriersByRegion();\n        this.setDeliveryRequestWithOrder();\n    }\n    setDeliveryRequestWithOrder() {\n\n        //GET SELECTED DRS\n        let selectedDrs = [];\n\n        this.SbForm.get('Shifts')['controls'].forEach(shift => {\n            shift.get('Schedules')['controls'].forEach(schedule => {\n                schedule.get('Trips')['controls'].forEach(trip => {\n                    trip.get('DeliveryRequests')['controls'].forEach(dr => {\n                        if (dr.get('IsSelectedForAssignment').value == true) {\n                            if (dr.get('IsBlendedRequest').value == false) {\n                                selectedDrs.push(dr.value);\n                            }\n                            else if (dr.get('IsBlendedRequest').value == true && dr.get('IsBlendedDrParent').value == true) {\n                                selectedDrs.push(dr.value);\n                            }\n\n                        }\n                    })\n                });\n            });\n        });\n\n        if (selectedDrs.length == 0) {\n            return false;\n        }\n        //GET ORDERS BY JOB AND FUEL TYPE\n        let uniqueJobAndFuelType: any[] = []\n        selectedDrs.forEach(dr => {\n            if (!uniqueJobAndFuelType.includes(x => x.JobId == dr.JobId && x.ProductTypeId == dr.ProductTypeId)) {\n                uniqueJobAndFuelType.push({ JobId: dr.JobId, ProductTypeId: dr.ProductTypeId, BlendedGroupId: dr.BlendedGroupId, IsBlendedDrParent: dr.IsBlendedDrParent, IsBlendedRequest: dr.IsBlendedRequest, IsAdditive: dr.IsAdditive, OrderId: dr.OrderId })\n            }\n        });\n\n        this._loadingCarriers = true;\n        this.sbService.getOrdersByDeliveryRequests(uniqueJobAndFuelType).subscribe((response) => {\n            this._loadingCarriers = false;\n            if (response != null && response != undefined) {\n                this.OrderList = response;\n\n                let fmArr = this.AssignDrForm.get('DeliveryRequestWithOrder') as FormArray;\n                selectedDrs.forEach(dr => {\n                    let orders = this.OrderList.filter(o => o.JobId == dr.JobId && o.FuelTypeId == dr.ProductTypeId);\n                    if (orders.length > 0) {\n                        fmArr.push(\n                            this.fb.group({\n                                DeliveryRequest: this.fb.control(dr),\n                                Orders: this.fb.control(dr.IsBlendedDrParent == false ? orders : orders.filter(x => x.Id == dr.OrderId)),\n                                OrderId: this.fb.control((dr.OrderId > 0 ? dr.OrderId : (orders.length > 0 ? orders[0].Id : null)), Validators.required)\n                            })\n                        );\n                    }\n                    if (!uniqueJobAndFuelType.includes(x => x.JobId == dr.JobId && x.ProductTypeId == dr.ProductTypeId)) {\n                        uniqueJobAndFuelType.push({ JobId: dr.JobId, ProductTypeId: dr.ProductTypeId })\n                    }\n                });\n            }\n        });\n    }\n\n    removeDrSelection(index: number, drId: string) {\n        let formArray = this.AssignDrForm.get('DeliveryRequestWithOrder') as FormArray;\n        if (formArray.length > 1 && drId) {\n            formArray.removeAt(index)\n            this.unselectDrById(drId);\n        }\n        else {\n            Declarations.msgerror(\"Minimum one delivery request is required.\", undefined, undefined);\n        }\n    }\n\n    unselectDrById(drId: string) {\n        this.SbForm.get('Shifts')['controls'].forEach(shift => {\n            shift.get('Schedules')['controls'].forEach(schedule => {\n                schedule.get('Trips')['controls'].forEach(trip => {\n                    trip.get('DeliveryRequests')['controls'].forEach(dr => {\n                        if (dr.get('IsSelectedForAssignment').value && dr.get('Id').value == drId)\n                            dr.get('IsSelectedForAssignment').setValue(false);\n                    })\n                });\n            });\n        });\n        this.dataService.setScheduleChangeDetectSubject(true);\n    }\n\n    resetLoad(trip: FormGroup) {\n        if (trip) {\n\n            let reserveValue = {\n                TripId: trip.controls['TripId'].value,\n                ShiftId: trip.controls['ShiftId'].value,\n                ShiftStartTime: trip.controls['ShiftStartTime'].value,\n                ShiftEndTime: trip.controls['ShiftEndTime'].value,\n                SlotPeriod: trip.controls['SlotPeriod'].value,\n                StartDate: trip.controls['StartDate'].value,\n                StartTime: trip.controls['StartTime'].value,\n                EndTime: trip.controls['EndTime'].value,\n                Carrier: trip.controls['Carrier'].value,\n                ShiftIndex: trip.controls['ShiftIndex'].value,\n                DriverRowIndex: trip.controls['DriverRowIndex'].value,\n                DriverColIndex: trip.controls['DriverColIndex'].value,\n                TrailerRowIndex: trip.controls['TrailerRowIndex'].value,\n                TrailerColIndex: trip.controls['TrailerColIndex'].value,\n                IsEditable: true,\n                IsPreloadDisable: false,\n                TimeStamp: trip.controls['TimeStamp'].value\n            }\n            trip.reset();\n            (trip.controls['DeliveryRequests'] as FormArray).clear();\n            trip.reset(reserveValue);\n        }\n    }\n\n    saveMultipleDrCarrierSequence() {\n\n        let formModel = this.AssignDrForm.value;\n\n        let input = new DeliveryRequestBrokerInfoViewModel();\n\n        input.ScheduleBuilderId = this.SbForm.get('Id').value;\n        input.BrokerDrModel = [];\n\n        //set carr sequence\n        if (formModel.Carriers && formModel.Carriers.length > 0) {\n            formModel.Carriers.forEach((carr, index: number) => {\n                carr.SequenceNo = (index + 1)\n            })\n        }\n        else {\n            Declarations.msgerror(\"Assign at least one carrier.\", undefined, undefined);\n            return;\n        }\n\n        formModel.DeliveryRequestWithOrder.forEach(drObj => {\n            let drDetails = new BrokerDrModel();\n            drDetails.CarrierRegionId = formModel.Carriers[0].RegionId;\n            drDetails.CarrierCompanyId = formModel.Carriers[0].Id;\n            drDetails.DeliveryRequest = drObj.DeliveryRequest;\n            drDetails.OrderId = drObj.OrderId;\n            drDetails.IsDispatchRetainedByCustomer = false;\n            drDetails.BlendedGroupId = drDetails.DeliveryRequest.BlendedGroupId;\n            if (drDetails.BlendedGroupId != '' || drDetails.BlendedGroupId != null) {\n                drDetails.IsBlendedGroupProduct = true;\n            }\n            var orderInfo = this.OrderList.find(top => top.Id == drObj.OrderId);\n            if (orderInfo != null && orderInfo.Code == \"1\")\n                drDetails.IsDispatchRetainedByCustomer = true;\n            var checkBlendedProduct = input.BrokerDrModel.filter(x => x.IsBlendedGroupProduct == true);\n            if (checkBlendedProduct) {\n                var blendedDRExists = input.BrokerDrModel.find(x => x.BlendedGroupId == drDetails.BlendedGroupId);\n                if (blendedDRExists == null) {\n                    input.BrokerDrModel.push(drDetails);\n                }\n            }\n            else {\n                input.BrokerDrModel.push(drDetails);\n            }\n        });\n\n        input.DispatcherNote = formModel.DispatcherNote;\n        input.CarrierInfo = formModel.Carriers;\n        input.CarrierInfoJson = JSON.stringify(formModel.Carriers);\n\n        this._loadingCarriers = true;\n        this.sbService.BrokerDeliveryRequestsToCarriers(input).subscribe(data => {\n            Declarations.hideModal('#assignCarrierRequestModal');\n            this._loadingCarriers = false;\n            if (data && data.StatusCode != 1) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                //REMOVE DR FROM DSB FORM\n                this.SbForm.get('Shifts')['controls'].forEach((shift: FormGroup) => {\n                    shift.get('Schedules')['controls'].forEach((schedule: FormGroup) => {\n                        schedule.get('Trips')['controls'].forEach((trip: FormGroup) => {\n                            if (trip.get('DeliveryRequests')['controls'].length > 0) {\n\n                                let allDrs = trip.get('DeliveryRequests').value as any[];\n                                let existingDrs = allDrs.filter(dr => dr.IsSelectedForAssignment != true);\n\n                                let deliveryRequests = trip.get('DeliveryRequests') as FormArray;\n                                deliveryRequests.clear();\n\n                                if (existingDrs.length > 0) {\n\n                                    existingDrs = sortArrayTwice(existingDrs, 'JobId', 'ProductSequence');\n                                    existingDrs.forEach(x => {\n                                        var _form = this.utilService.getDeliveryRequestForm(x, trip.get('IsCommonPickup').value);\n                                        deliveryRequests.push(_form);\n                                    });\n                                }\n                                else {\n                                    this.resetLoad(trip);\n                                }\n                            }\n                        });\n                    });\n                });\n                this.dataService.setScheduleChangeDetectSubject(true);\n            } else {\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\n            }\n            this.cancelAssignDrsToCarrier();\n        });\n    }\n    // assign dr end   \n\n    //Add Drop location   \n\n    clearDropLocationControls() {\n        this.Orders = [];\n        this.SiteList = [];\n        this.companyList = [];\n        this.selectedOrder = [];\n        this.selectedCustomer = [];\n        this.selectedSite = [];\n    }\n\n    getDropLocationDetails(tdr: FormGroup): void {\n        this.CurrentDr = tdr;\n        this.SelectedFuelId = tdr.controls['FuelTypeId'].value;\n        let productTypeId = tdr.controls['ProductTypeId'].value;\n        let dr = tdr.value as DeliveryRequestViewModel;\n        let terminalId = null, bulkplantId = null;\n        if ((dr.BadgeNo1 == null || dr.BadgeNo1 == '') && (dr.BadgeNo2 == null || dr.BadgeNo2 == '') && (dr.BadgeNo3 == null || dr.BadgeNo3 == '')) {\n            if (dr.Terminal && dr.Terminal.Id > 0) {\n                terminalId = dr.Terminal.Id;\n            }\n            if (dr.BulkPlant && dr.BulkPlant.SiteId > 0) {\n                bulkplantId = dr.BulkPlant.SiteId;\n            }\n        }\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\n            this.sbService.getJobDetailsWithOrders(this.SelectedRegionId, this.SelectedFuelId, productTypeId, terminalId, bulkplantId, this.SbForm.get('Date').value).subscribe(response => {\n                if (response) {\n                    this.drOrders = response as JobDetailsWithOrders[];\n                    this.companyList = response.map((element) => ({ CompanyId: element.CompanyId, CompanyName: element.CompanyName }));\n                    this.companyList = this.GetUniqueLocations(this.companyList.reduce((p, n) => p.concat(n), []));\n                    this.SiteList = response.map((element) => ({ Id: element.JobId, Name: element.JobName }));\n                    this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), []));\n                }\n                else {\n                    Declarations.msgerror('No order exists for this fuel type', 'error', 2500)\n                }\n            });\n        }\n    }\n\n    public onSiteSelect(item: any): void {\n        this.SelectedLocationId = item.Id\n        let orders = this.drOrders.filter(t => t.JobId == item.Id);\n        if (orders && orders.length > 0) {\n            this.Orders = orders.map((element) => ({ Id: element.OrderId, Name: element.PoNumber }));;\n        }\n    }\n\n    public onSiteDeSelect(item: DropdownItem): void {\n        this.Orders = [];\n    }\n\n    public onCustomerSelect(item: any): void {\n        this.selectedSite = [];\n        this.selectedOrder = [];\n        this.SelectedCustomerId = item.CompanyId;\n        this.SiteList = this.drOrders.filter(x => x.CompanyId == item.CompanyId).map((element) => ({ Id: element.JobId, Name: element.JobName }));\n        this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), []));\n    }\n\n    public onCustomerDeSelect(item: any): void {\n        this.SelectedCustomerId = null;\n        this.selectedSite = [];\n        this.selectedOrder = [];\n        this.SiteList = this.drOrders.map((element) => ({ Id: element.JobId, Name: element.JobName }));\n        this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), []));\n    }\n\n    GetUniqueLocations(items) {\n        const ids = [];\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\n    }\n\n    GetUniqueCustomers(items) {\n        const ids = [];\n        var uniqueItems = items.filter(item => ids.includes(item.CompanyId) ? false : ids.push(item.CompanyId));\n        return uniqueItems.sort((a, b) => a.CompanyName.localeCompare(b.CompanyName));\n    }\n\n    AddDropLocation() {\n        if (this.selectedOrder.length <= 0) {\n            Declarations.msgerror('please select order', 'Validation', 2500);\n            return false;\n        }\n        let order = this.drOrders.filter(t => t.OrderId == this.selectedOrder[0].Id)[0];\n        if (order) {\n            this.CurrentDr.get('JobId').setValue(order.JobId);\n            this.CurrentDr.get('OrderId').setValue(order.OrderId);\n            this.CurrentDr.get('JobName').setValue(order.JobName);\n            this.CurrentDr.get('JobAddress').setValue(order.Address);\n            this.CurrentDr.get('JobCity').setValue(order.City)\n            this.CurrentDr.get('UoM').setValue(order.UoM);\n            this.CurrentDr.get('CustomerCompany').setValue(order.CompanyName);\n            this._loadingDrRequests = true;\n            let input = this.CurrentDr.value as DeliveryRequestViewModel;\n            this.carrierService.updateDeliveryRequest([input])\n                .subscribe((data: any) => {\n                    this._loadingDrRequests = false;\n                    if (data.StatusCode == 0) {\n                        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                        var elem = document.getElementById('TBD-Drop-location-Close-popUp'); elem.click();\n                        this.carrierService.getDeliveryRequestById(this.CurrentDr.value.ParentId).subscribe(x => {\n                            if (order.JobId && x.TrackableScheduleId != null) {\n                                let dropUrl = '/Supplier/Invoice/CreateNew?orderId=' + order.OrderId + '&trackableScheduleId=' + x.TrackableScheduleId;\n                                window.location.href = dropUrl;\n                            }\n                        })\n                    }\n                });\n        }\n    }\n    SetFilters(input: any) {\n        this.regionDSBModel = JSON.parse(input);\n    }\n    addSpiltDR() {\n        if (this.requestToUpdate != null) {\n            this.requestToUpdate.IsSpiltDRAdded = true;\n            let spiltDRModel = new SpiltDRsModel();\n            spiltDRModel.ScheduleQuantityType = 1;\n            this.requestToUpdate.SpiltDRs.push(spiltDRModel);\n        }\n    }\n    openCalendarView() {\n        window.location.href = '/Carrier/Calendar';\n    }\n\n    //LOCATION SEQUENCING IN LOAD\n    public _loader: boolean = false;\n    public TripLocations: any[] = [];\n    //public LoadLocationsequence: string[] = [];\n    public _isSequencePanelInitiated: boolean = false;\n    private locationsequenceSubscription: Subscription = new Subscription();\n    public _locSequenceOpened: boolean = false;\n    public loadForSequence: FormGroup;\n    public lat = 47.962741;\n    public long = -96.050422;\n\n    subscribeLoadLocationSequenceSubject() {\n\n        this.locationsequenceSubscription = this.dataService.LoadLocationSequenceSubject.subscribe(tripFormGroup => {\n            if (tripFormGroup) {\n\n                this.TripLocations = [];\n                this.loadForSequence = tripFormGroup;\n                let drs = tripFormGroup.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\n\n                if (drs && drs.length > 1) {\n\n                    let uniqueByJobId = [...new Map(drs.map((item) => [item.JobId, item])).values()];\n                    let uniqueByTbdGroupId = [...new Map(drs.map((item) => [item.TBDGroupId, item])).values()];\n                    //remove null values\n                    uniqueByJobId = uniqueByJobId.filter(j => j.JobId);\n                    uniqueByTbdGroupId = uniqueByTbdGroupId.filter(j => j.TBDGroupId);\n                    //set default sequence\n                    uniqueByJobId.forEach((element, index) => {\n                        element['Sequence'] = (+index + 1).toString();\n                    });\n                    uniqueByTbdGroupId.forEach((element) => {\n                        element['Sequence'] = '999';\n                    });\n                    uniqueByTbdGroupId = uniqueByTbdGroupId.filter(j => j.TBDGroupId && !j.JobId);//0, null, undefined\n\n                    if (uniqueByJobId && uniqueByJobId.length > 1) {\n\n                        this.TripLocations = [...uniqueByJobId, ...uniqueByTbdGroupId];\n                        let jobIds = uniqueByJobId.map(item => item.JobId) as number[];\n\n                        if (jobIds && jobIds.length > 1) {\n\n                            this.openPanel();\n                            this._loader = true;\n\n                            this.sbService.getJobCoordinates(jobIds).subscribe(data => {\n                                this._loader = false;\n\n                                if (data && data.length > 0) {\n                                    data.forEach((element, index) => {\n                                        let _location = this.TripLocations.find(loc => loc.JobId == element.JobId);\n                                        if (_location) {\n                                            _location.Latitude = element.Latitude;\n                                            _location.Longitude = element.Longitude;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    openPanel() {\n        this._locSequenceOpened = true;\n        if (!this._isSequencePanelInitiated) {\n            this._isSequencePanelInitiated = true;\n        }\n        this.makeLocationsSrtable();\n    }\n\n    makeLocationsSrtable() {\n        var _this = this;\n        $(function () {\n            let sortable: any = $(\"#sortableLocations\");\n            sortable.sortable({\n                stop: (event, ui) => {\n                    let locationIds = sortable.sortable(\"toArray\") as string[];\n\n                    if (locationIds && locationIds.length > 0) {\n\n                        locationIds.forEach((locId, index) => {\n                            let _location = _this.TripLocations.find(loc => loc.JobId == locId);\n                            if (_location) {\n                                _location.Sequence = (+index + 1).toString();\n                            }\n                        });\n                    }\n                    sortable.click();\n                }\n            });\n        });\n    }\n\n\n    saveLocationSequence() {\n\n        this._locSequenceOpened = false;\n        this.TripLocations = sortBy(this.TripLocations, 'Sequence');\n        let data = { JobIds: this.TripLocations, trip: this.loadForSequence };\n        this.dataService.setDispatcherLoadDragDropMapSubject(data);\n    }\n}\n\n\n\n","<div>\r\n    <form [formGroup]=\"SbForm\">\r\n        <!-- header -->\r\n        <div class=\"header_panel\">\r\n            <div class=\"row border-b pb10 mb10\" *ngIf=\"_toggle_header\">\r\n                <div class=\"col-sm-2\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingRegions\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <select formControlName=\"RegionId\" class=\"form-control mt5\">\r\n                        <option *ngFor=\"let region of Regions\" [value]=\"region.Id\"\r\n                                [selected]=\"region.Id==SbForm.controls['RegionId'].value\">\r\n                            {{region.Name}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-sm-10 pl10 text-left\">\r\n                    <div class=\"dib rounded icon-toggle\" *ngIf=\"disableControl==false\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'singleMode1'\" id=\"singleMode\" [value]=\"1\" [checked]=\"SbForm.controls['WindowMode'].value==1\">\r\n                            <label class=\"btn ml0 first-icon\" (click)=\"onWindowFilterChange(1)\" placement=\"bottom\" ngbTooltip=\"Single Window\"><i class=\"far fa-window-maximize fs14 mt3\"></i></label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'multiwindowmode1'\" id=\"multiwindowmode\" [value]=\"2\" [checked]=\"SbForm.controls['WindowMode'].value==2\">\r\n                            <label class=\"btn last-icon\" (click)=\"onWindowFilterChange(2)\" placement=\"bottom\" ngbTooltip=\"Multi Window\"><i class=\"far fa-window-restore fs14 mt3\"></i></label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dib border pa5 radius-capsule ml20\" id=\"daySelector\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterYesterDay\" [value]=\"4\" [checked]=\"SbForm.controls['DateFilter'].value==4\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"onDateFilterChange(4)\">Yesterday</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterToday\" [value]=\"1\" [checked]=\"SbForm.controls['DateFilter'].value==1\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"onDateFilterChange(1)\">Today</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterTomorrow\" [value]=\"2\" [checked]=\"SbForm.controls['DateFilter'].value==2\">\r\n                            <label class=\"btn\" (click)=\"onDateFilterChange(2)\">Tomorrow</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterDate\" [value]=\"3\" [checked]=\"SbForm.controls['DateFilter'].value==3\">\r\n                            <div class=\"dib pl10\" id=\"dateInputLabel\">\r\n                                <input type=\"text\" class=\"form-control datepicker\" formControlName=\"Date\" id=\"dateInput\" myDatePicker [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\"\r\n                                       (onDateChange)=\"setSelectedDate($event);\" autocomplete=\"off\" placeholder=\"__/__/____\" for=\"filterDate\" (click)=\"onDateFilterChange(3)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"dib pa5 ml20 shift-wrapper\" *ngIf=\"SbForm.controls['DSBFilter'].value==2\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Shift'\"\r\n                                                 [settings]=\"shiftFilterSettings\" [data]=\"Shifts\"\r\n                                                 formControlName=\"SelectedShifts\"\r\n                                                 (onSelect)=\"onShiftsSelect($event)\" (onDeSelect)=\"onShiftsDeSelect($event)\"\r\n                                                 (onSelectAll)=\"onShiftsSelectAll()\"\r\n                                                 (onDeSelectAll)=\"onShiftsDeSelectAll()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"side-panel\" id=\"schedulechange\">\r\n                        <div class=\"side-panel-wrapper\">\r\n                            <app-otto-notification *ngIf=\"IsOttoNotificationOpened\"></app-otto-notification>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"javascript:void(0);\" *ngIf=\"disableControl==false\" class=\"btn border border-secondary pull-right mt5 pr\" (click)=\"openOttoNotification()\" onclick=\"slidePanel('#schedulechange','30%')\" placement=\"left\" ngbTooltip=\"Delivery Window Change\">\r\n                        <i class=\"fas fa-bell fs16\"></i>\r\n                        <span class=\"dsb-notification-count fs10 bg-danger pa dib\" *ngIf=\"OttoNotificationCount>0\">{{OttoNotificationCount}}</span>\r\n                    </a>\r\n                    <button class=\"btn border border-secondary mt5 pull-right\" id=\"showLoadSummery\" *ngIf=\"disableControl==true\" (click)=\"onRedirectWallyBoardPage()\" placement=\"bottom\" ngbTooltip=\"Load Summary\">\r\n                        <i class=\"fas fa fa-user-clock fs14\"></i>\r\n                    </button>\r\n                    <a class=\"btn border border-secondary mt5 pull-right\" *ngIf=\"disableControl==false\" (click)=\"openDRReportGrid()\" placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fas fa-file-alt fs16\"></i></a>\r\n                    <div *ngIf=\"isSupplierCompany && isSupplierOrDispatcher && disableControl==false\" class=\"dib mt5 shift-wrapper float-right\">\r\n                        <app-add-location [RegionId]=\"SbForm.get('RegionId').value\" [MapsApiKey]=\"_mapsApiKey\" (OnTheFlyLocationCreate)=\"refreshDeliveryRequests(0)\"></app-add-location>\r\n                    </div>\r\n                    <div class=\"d-inline-block pull-right position-relative\">\r\n                        <a class=\"btn border border-secondary mt5 pull-right\" (click)=\"openCalendarView()\" placement=\"bottom\" ngbTooltip=\"Calendar View\"><i class=\"fa fa-calendar-alt fs18\" aria-hidden=\"true\"></i></a>\r\n                        <div class=\"dib pa5 ml20 shift-wrapper position-absolute blinker-calendar\" *ngIf=\"isDrScheduledforToday\">\r\n                            <i class=\"fas fa-circle animated flash infinite text-info\" title=\"You have some loads to be scheduled today. Please click on the calendar here.\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"btn border border-secondary mt5 pull-right\" *ngIf=\"isDisplayOttoButton && disableControl==false\" (click)=\"openOttoBuilder()\" onclick=\"slidePanel('#otto','97%')\" placement=\"bottom\" ngbTooltip=\"Otto\"><i class=\"far fa-clock fs16\"></i></button>\r\n                    <div class=\"side-panel\" id=\"otto\">\r\n                        <div class=\"side-panel-wrapper\">\r\n                            <app-otto-builder *ngIf=\"IsOttoBuilderOpened\" [SelectedDate]=\"SbForm.controls['Date'].value\" [DSBFilter]=\"SbForm.controls['DSBFilter'].value\"></app-otto-builder>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"panel_icon\" [ngClass]=\"{'panel_icon_b5': !_toggle_header, 'z-index101': !_toggle_header}\">\r\n                <div class=\"icon_drop\" (click)=\"hideHeader();\">\r\n                    <i class=\"fas fa-lg\" [ngClass]=\"_toggle_header ? 'fa-angle-up' : 'fa-angle-down' \" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ _toggle_header ? 'Hide' : 'Show'}} Date Header\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Schedules end -->\r\n        <div class=\"row\">\r\n            <!-- Delivery Requests -->\r\n            <div class=\"toggle-dr-panel\" [ngClass]=\"{'d-none':_toggle_dr_panel===true}\" id=\"toggle_dr_panel_id\">\r\n                <div>\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingRegions\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"pa5 mtm5 radius-capsule mb5 mrm10\" *ngIf=\"_pubWindowmode==1 && disableControl==false\">\r\n                        <div class=\"btn-group btn-filter dr_panel_filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'toggleRequestDR1'\" id=\"toggleRequestDR\" [value]=\"1\" [checked]=\"SbForm.controls['ToggleRequestMode'].value==1\">\r\n                            <label class=\"btn ml0\" (click)=\"onQueueFilterChange(1);\">DRs</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'toggleRequestQD1'\" id=\"toggleRequestQD\" [value]=\"2\" [checked]=\"SbForm.controls['ToggleRequestMode'].value==2\">\r\n                            <label class=\"btn\" (click)=\"onQueueFilterChange(2);\"><span class=\"pr\">Clipboard</span> <sup *ngIf=\"_refreshQueue===true\"><i class=\"fas fs8 fa-circle color-green animated flash infinite ml2 pa top5 left2\"></i></sup> </label>\r\n                        </div>\r\n                        <div id=\"toggle_dr_panel_btn\" class=\"pull-right pr pa0 text-right mt3\">\r\n                            <span>\r\n                                <i class=\"fas fa-search fs18 cursor_pointer mr5 color-lighticon\" [ngClass]=\"{'text-active': _toggle_search}\" (click)=\"toggleSearch();\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"{{ drFilterForm.get('IsFilterApplied').value ? 'Filter is applied.' : 'Filter is not applied.'}}\">\r\n                                <i id=\"toogle_panel_icon\" class=\"fas fa-filter fs18 cursor_pointer color-lighticon mr5\"\r\n                                   (click)=\"openDrFilterForm()\" [class.filterApplied]=\"drFilterForm.get('IsFilterApplied').value\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"Collapse DR panel\" placement=\"right\">\r\n                                <i id=\"toogle_panel_icon\" class=\"far fs18 cursor_pointer color-lighticon fa-arrow-alt-circle-left\" (click)=\"toggleDrPanel()\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"pa5 mtm5 radius-capsule mb5 mrm10\" *ngIf=\"_pubWindowmode==2 && disableControl==false\">\r\n                        <div class=\"btn-group btn-filter dr_panel_filter\">\r\n                            <a class=\"btn mr5 ml0 color-orange f-bold\" (click)=\"onRedirectMultiWindowScreen(1)\">DRs <i class=\"far fa-window-restore fs11 mtm2 pull-right ml5\"></i></a>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'toggleRequestQD2'\" id=\"toggleRequestQD1\" [value]=\"2\" [checked]=\"SbForm.controls['ToggleRequestMode'].value==2\">\r\n                            <label class=\"btn\" (click)=\"onQueueFilterChange(2);\"><span class=\"pr\">Clipboard</span><sup *ngIf=\"_refreshQueue===true\"><i class=\"fas fs8 fa-circle color-green animated flash infinite ml2 pa top5 left2\"></i></sup></label>\r\n                        </div>\r\n                        <div id=\"toggle_dr_panel_btn\" class=\"pull-right pr pa0 text-right mt3\">\r\n                            <span>\r\n                                <i class=\"fas fa-search fs18 cursor_pointer mr5 color-lighticon\" [ngClass]=\"{'text-active': _toggle_search}\" (click)=\"toggleSearch();\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"{{ drFilterForm.get('IsFilterApplied').value ? 'Filter is applied.' : 'Filter is not applied.'}}\">\r\n                                <i id=\"toogle_panel_icon\" class=\"fas fa-filter fs18 cursor_pointer color-lighticon mr5\"\r\n                                   (click)=\"openDrFilterForm()\" [class.filterApplied]=\"drFilterForm.get('IsFilterApplied').value\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"Collapse DR panel\">\r\n                                <i id=\"toogle_panel_icon\" class=\"far fs18 cursor_pointer color-lighticon fa-arrow-alt-circle-left\" (click)=\"toggleDrPanel()\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row mb5\" *ngIf=\"_toggle_search\">\r\n                    <div class=\"col-sm-12 pr10\">\r\n                        <div class=\"inner-addon right-addon\">\r\n                            <i class=\"glyphicon glyphicon-remove text-danger\" (click)=\"toggleSearch();\"></i>\r\n                            <input type=\"text\" name=\"txtSearch\" formControlName=\"searchDRS\" id=\"txtSearch\" class=\"form-control\" placeholder=\"Search\" (keydown.enter)=\"$event.preventDefault()\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"_toggle_search == false && (loadUniqueProducts.length > 0)\">\r\n                    <select formControlName=\"selectedProduct\" class=\"form-control mb5 btn-rounded\" (change)=\"filterDrByProductType($event.target.value)\" *ngIf=\"disableControl==false\">\r\n                        <option value=\"-1\" selected>All Products</option>\r\n                        <option *ngFor=\"let productName of loadUniqueProducts\" [value]=\"productName\">\r\n                            {{productName}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"dr_accordian_panel\" [ngClass]=\"{'dr_accordian_panel_h_150': !_toggle_header}\" *ngIf=\"disableControl==false\">\r\n                    <div *ngIf=\"_loadingDrRequests\" class=\"pa bg-white z-index5 loading-wrapper\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"panel-group dr-accordian\" id=\"accordion\">\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('Missed').value)\">\r\n                            <app-delivery-request [Title]=\"'Missed'\" [isToggleDrPanel]=\"_toggle_dr_panel\" [CollapaseId]=\"'collapse4'\"\r\n                                                  [CollapaseInClass]=\"'show'\"\r\n                                                  [TitleClass]=\"'missed'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"missedRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('MustGo').value)\">\r\n                            <app-delivery-request [Title]=\"'Must Go'\" [isToggleDrPanel]=\"_toggle_dr_panel\"\r\n                                                  [CollapaseInClass]=\"(drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('MustGo').value && drFilterForm.controls.Priority.get('Missed').value != true)? 'show': ''\"\r\n                                                  [CollapaseId]=\"'collapse1'\"\r\n                                                  [TitleClass]=\"'mustgo'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"mustGoRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('ShouldGo').value)\">\r\n                            <app-delivery-request [Title]=\"'Should Go'\"\r\n                                                  [CollapaseInClass]=\"(drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('ShouldGo').value && drFilterForm.controls.Priority.get('Missed').value != true && drFilterForm.controls.Priority.get('MustGo').value != true)? 'show': ''\"\r\n                                                  [isToggleDrPanel]=\"_toggle_dr_panel\"\r\n                                                  [CollapaseId]=\"'collapse2'\"\r\n                                                  [TitleClass]=\"'shouldgo'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"shouldGoRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('CouldGo').value)\">\r\n                            <app-delivery-request [Title]=\"'Could Go'\"\r\n                                                  [CollapaseInClass]=\"(drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('CouldGo').value && drFilterForm.controls.Priority.get('Missed').value != true && drFilterForm.controls.Priority.get('MustGo').value != true && drFilterForm.controls.Priority.get('ShouldGo').value != true)? 'show': ''\"\r\n                                                  [isToggleDrPanel]=\"_toggle_dr_panel\"\r\n                                                  [CollapaseId]=\"'collapse3'\"\r\n                                                  [TitleClass]=\"'couldgo'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"couldGoRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default py-1\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('AssignedByMe').value)\">\r\n                            <app-assigned-by-me (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                [regionId]=\"SbForm.controls['RegionId'].value\"\r\n                                                [SelectedDate]=\"SbForm.controls['Date'].value\">\r\n                            </app-assigned-by-me>\r\n                        </div>\r\n                        <div class=\"panel panel-default border-top py-2\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('AssignedToMe').value)\">\r\n\r\n                            <app-assigned-to-me #AssignedToMe [regionId]=\"SbForm.controls['RegionId'].value\"\r\n                                                [SelectedDate]=\"SbForm.controls['Date'].value\" (OnAcceptRejectDR)=\"changeCarrierBrokeredDrStatus($event)\">\r\n                            </app-assigned-to-me>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Schedules -->\r\n            <!--'col-sm-10 schedule-panel': disableControl===false,-->\r\n            <div class=\"schedule-panel mt-n1\" [ngClass]=\"_toggle_dr_panel ? (disableControl===true ? 'toggled' : 'toggled') : (disableControl===true ? 'toggled' : 'non-toggle') \" id=\"schedule-panel_id\" style=\"min-height:80px;\">\r\n                <span class=\"float-btn\" *ngIf=\"_toggle_dr_panel\" ngbTooltip=\"Expand DR panel\">\r\n                    <i id=\"toogle_panel_icon\" class=\"far fs18 cursor_pointer color-lighticon fa-arrow-alt-circle-right pluse-icon\" (click)=\"toggleDrPanel()\"></i>\r\n                    <!-- [ngClass]=\"_toggle_dr_panel ? 'fa-arrow-alt-circle-left' : ' fa-arrow-alt-circle-right'\" -->\r\n                </span>\r\n                <div class=\"row\">\r\n                    <div [ngClass]=\"(disableControl || _toggle_dr_panel) ? 'col-sm-8' : 'col-sm-8'\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\" *ngIf=\"SbForm.controls['DSBFilter'].value==2 && disableControl==false\">\r\n                                <app-dsb-load-queue [isDisableControl]=\"disableControl\" [SbForm]='SbForm' [IsTrailerExists]=\"_isTrailerExists\" [RegionDetail]=\"RegionDetail\"></app-dsb-load-queue>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-7\">\r\n                                        <app-schedule-builder-filter #SBFilter [isDisableControl]=\"disableControl\" [SbFilterData]=\"SbFilter\" (OnSbFilterApply)=\"onApplyFilter($event)\" *ngIf=\"UpdateSbFilter && SbForm.controls['ObjectFilter'].value==1 && SbForm.controls['DSBFilter'].value==1\" [IsTrailerExists]=\"_isTrailerExists\">\r\n                                        </app-schedule-builder-filter>\r\n                                        <app-schedule-builder-grid-filter [isDisableControl]=\"disableControl\" #SbGridViewFilter [SbGridFilterData]=\"SbGridViewFilter\" (OnSbGridFilterApply)=\"onApplyGridViewFilter($event)\" *ngIf=\"SbForm.controls['ObjectFilter'].value==1 && SbForm.controls['DSBFilter'].value==2\">\r\n                                        </app-schedule-builder-grid-filter>\r\n                                    </div>\r\n                                    <div class=\"col-sm-5\" style=\"margin-left: -25px;\">\r\n                                        <button *ngIf=\"SbForm.controls['IsAssignDrEnabled'].value != true && disableControl==false\" type=\"button\" class=\"btn btn-primary btn-sm mt3\"\r\n                                                (click)=\"assignDrsToCarrier()\">\r\n                                            Assign DR(s)\r\n                                        </button>\r\n\r\n\r\n                                        <button *ngIf=\"SbForm.controls['IsAssignDrEnabled'].value == true && disableControl==false\" type=\"button\" class=\"btn btn-primary btn-sm mt3\"\r\n                                                (click)=\"assignCarriersToDrs()\">\r\n                                            Select Carrier\r\n                                        </button>\r\n                                        <button *ngIf=\"SbForm.controls['IsAssignDrEnabled'].value == true && disableControl==false\" type=\"button\" class=\"btn btn-link ml-2 btn-sm mt3\"\r\n                                                (click)=\"cancelAssignDrsToCarrier()\">\r\n                                            Cancel\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div [ngClass]=\"(disableControl || _toggle_dr_panel) ? 'col-sm-4' : 'col-sm-4'\">\r\n                        <button *ngIf=\"disableControl==false\" type=\"button\" class=\"btn btn-link pull-right mr5 pa0\" data-target=\"#route-info\"\r\n                                (click)=\"setRegionForRoute()\" onclick=\"slidePanel('#route-info','40%')\">\r\n                            <i class=\"fas fa-route fs14 mr5\"></i> Routes\r\n                        </button>\r\n                        <app-dip-test [isDisableControl]=\"disableControl\" (onRaiseDR)=\"refreshDeliveryRequests(0);\" [SelectedRegionId]=\"SelectedRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n                    </div>\r\n                </div>\r\n                <app-driver-column-view *ngIf=\"SbForm.controls['ObjectFilter'].value==1 && SbForm.controls['DSBFilter'].value==2\" [SbForm]=\"SbForm\" [HeaderToggle]=\"_toggle_header\" [Shifts]=\"DriverViewShifts\" [RegionDetail]=\"RegionDetail\" [SelectedRegionId]=\"SelectedRegionId\" [IsTrailerExists]=\"_isTrailerExists\" [IsNoDriverShiftFound]=\"IsNoDriverShiftFound\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                </app-driver-column-view>\r\n            </div>\r\n            <!-- Delivery Group -->\r\n            <app-delivery-group [SelectedRegionId]=\"SelectedRegionId\"\r\n                                [SelectedDate]=\"SbForm.controls['Date'].value\"\r\n                                [ScheduleBuilderId]=\"SbForm.controls['Id'].value\"\r\n                                [isSupplierCompany]=\"isSupplierCompany\" #deliveryGroup (onRaiseSubDR)=\"refreshDeliveryRequests(0);\"></app-delivery-group>\r\n            <!--<app-create-load [SelectedRegionId]=\"SelectedRegionId\" [selectedProduct]=\"SbForm.controls['selectedProduct'].value\"></app-create-load>-->\r\n        </div>\r\n\r\n    </form>\r\n    <ng-sidebar-container style=\"z-index: 99999;\" *ngIf=\"_isInitiated\">\r\n        <ng-sidebar [(opened)]=\"_opened\"\r\n                    [animate]=\"_animate\"\r\n                    [position]=\"_POSITIONS[_positionNum]\"\r\n                    [showBackdrop]=\"_showBackdrop\"\r\n                    style=\"height: 100vh\">\r\n            <div class=\"DR-filter-panel\">\r\n                <div class=\"row border-bottom \">\r\n                    <div class=\"col-12\">\r\n                        <h3 class=\"dib\">Delivery Request Filter</h3>\r\n                        <a class=\"ml20 close-panel\" (click)=\"_toggleClosed();setLastDrFilterForm();\"><i class=\"fa fa-close fs18 pull-right mt4\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <form [formGroup]=\"drFilterForm\" novalidate>\r\n                    <div class=\"row border-bottom mt10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Pickup </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <div id=\"terminal\">\r\n                                        <label>Terminals:</label>\r\n                                        <div class=\"form-group\">\r\n                                            <ng-multiselect-dropdown #multiSelect1\r\n                                                                     [formControl]=\"drFilterForm.controls['Terminals']\"\r\n                                                                     [settings]=\"settings\" [data]=\"terminalsForFilter\">\r\n                                            </ng-multiselect-dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <div id=\"bulkPlant\">\r\n                                        <label>Bulk Plants:</label>\r\n                                        <div class=\"form-group\">\r\n                                            <ng-multiselect-dropdown #multiSelect2\r\n                                                                     [formControl]=\"drFilterForm.controls['BulkPlants']\"\r\n                                                                     [settings]=\"settings\" [data]=\"bulkPlantsForFilter\">\r\n                                            </ng-multiselect-dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 mt10 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Priority </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"Priority\">\r\n                                        <div class=\"form-check form-check-inline \">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_0\"\r\n                                                   name=\"priority\" value=\"4\" formControlName=\"Missed\">\r\n                                            <label class=\"form-check-label\" for=\"priority_0\">Missed</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_1\"\r\n                                                   name=\"priority\" value=\"1\" formControlName=\"MustGo\">\r\n                                            <label class=\"form-check-label\" for=\"priority_1\">Must Go</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_2\"\r\n                                                   name=\"priority\" value=\"2\" formControlName=\"ShouldGo\">\r\n                                            <label class=\"form-check-label\" for=\"priority_2\">Should Go</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_3\"\r\n                                                   name=\"priority\" value=\"3\" formControlName=\"CouldGo\">\r\n                                            <label class=\"form-check-label\" for=\"priority_3\">Could Go</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_4\"\r\n                                                   name=\"priority\" value=\"5\" formControlName=\"AssignedToMe\">\r\n                                            <label class=\"form-check-label\" for=\"priority_4\">Assigned to me</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_5\"\r\n                                                   name=\"priority\" value=\"6\" formControlName=\"AssignedByMe\">\r\n                                            <label class=\"form-check-label\" for=\"priority_5\">Assigned by me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Trailer Type </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"TrailerType\">\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_0\"\r\n                                                   name=\"TrailerType\" value=\"1\" formControlName=\"Lead\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_0\">Lead</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_1\"\r\n                                                   name=\"TrailerType\" value=\"2\" formControlName=\"Pup\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_1\">Pup</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_2\"\r\n                                                   name=\"TrailerType\" value=\"3\" formControlName=\"Quad\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_2\">Quad</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_3\"\r\n                                                   name=\"TrailerType\" value=\"4\" formControlName=\"Tandem\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_3\">Tandem</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_4\"\r\n                                                   name=\"TrailerType\" value=\"5\" formControlName=\"Tridem\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_4\">Tridem</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Delivery Shift </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"DeliveryShift\">\r\n\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"drshift_0\"\r\n                                                   name=\"drshift\" value=\"1\" formControlName=\"Morning\">\r\n                                            <label class=\"form-check-label\" for=\"drshift_0\">Morning</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"drshift_1\"\r\n                                                   name=\"drshift\" value=\"2\" formControlName=\"Evening\">\r\n                                            <label class=\"form-check-label\" for=\"drshift_1\">Evening</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\" *ngIf=\"this.IsCarrierCompanyStatus\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\">Brokered DRs</h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"DeliveryBrokeredDR\">\r\n\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"dr_brokeredDrs\"\r\n                                                   name=\"brokeredDrs\" value=\"1\" formControlName=\"brokeredDrs\">\r\n                                            <label class=\"form-check-label\" for=\"dr_brokeredDrs\">Show only Brokered DRs</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\">Show only TBD DRs</h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"dr_tbdDrs\"\r\n                                               name=\"IsTBDRequest\" value=\"1\" formControlName=\"IsTBDRequest\">\r\n                                        <label class=\"form-check-label\" for=\"dr_tbdDrs\">Show only TBD DRs</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 mt10 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\">Order Type</h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"OrderType\">\r\n                                        <div class=\"form-check form-check-inline \">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"orderType_LTL\"\r\n                                                   name=\"priority\" value=\"4\" formControlName=\"OrderTypeLTL\">\r\n                                            <label class=\"form-check-label\" for=\"orderType_LTL\">LTL</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"orderType_FTL\"\r\n                                                   name=\"priority\" value=\"1\" formControlName=\"OrderTypeFTL\">\r\n                                            <label class=\"form-check-label\" for=\"orderType_FTL\">FTL</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mt10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Customer </h6>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown [formControl]=\"drFilterForm.controls['Customers']\"\r\n                                                         [placeholder]=\"'Select Customer(s)'\"\r\n                                                         [settings]=\"CustomerFilterSettings\"\r\n                                                         [data]=\"bulkCustomersForFilter\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br /> <br /> <br />\r\n                </form>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 text-right\">\r\n                        <button type=\"button\" class=\"btn btn1-default mr10\" (click)=\"clearDrFilterForm(true);\">Clear Filter</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"applyDrFilterInitiated()\">Apply</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingBuilder\" style=\"position:fixed !important\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div id=\"openUpdateDrModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#updateDeliveryRequestModal\"></div>\r\n<div id=\"updateDeliveryRequestModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #form=\"ngForm\" novalidate>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Update Delivery Request</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <!-- #blended Dr to update -->\r\n                    <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularDRToUpdate\">\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal\">{{blendedProducts}} Tank, Location ID: {{blendRequestsToUpdate[0]?.SiteId}}</div>\r\n                                <small class=\"mb10 fs12 opacity8\"><b>{{blendRequestsToUpdate[0]?.JobName}},</b> {{blendRequestsToUpdate[0]?.JobAddress}} </small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Total Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"blendTotalQuantity\" [(ngModel)]=\"blendTotalQuantity\" (input)=\"toggleBlendTotalQuantity()\" required>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Delivery Level PO#</span>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\"  name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngFor=\"let blendUpdateRequest of blendRequestsToUpdate; index as j\" [ngModelGroup]=\"j\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div>{{blendUpdateRequest.ProductType}} - {{blendUpdateRequest.FuelType}}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"text\" numberWithDecimal class=\"form-control\" (input)=\"toggleBlendQuantity(blendUpdateRequest,false)\" name=\"RequiredQuantity\" [(ngModel)]=\"blendUpdateRequest.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                            <div class=\"input-group-addon\">\r\n                                                <span *ngIf=\"blendUpdateRequest?.UoM==1; else litres\">G</span>\r\n                                                <ng-template #litres>L</ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"number\" name=\"QuantityInPercent\" [(ngModel)]=\"blendUpdateRequest.QuantityInPercent\" #QuantityInPercent=\"ngModel\"\r\n                                                   numberWithDecimal class=\"form-control\"\r\n                                                   placeholder=\"Quantity In Percent\" (input)=\"toggleBlendQuantity(blendUpdateRequest,true)\" />\r\n                                            <div class=\"input-group-addon\">%</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- additive fuel -->\r\n                        <div *ngIf=\"blendAddRequestToUpdate\">\r\n                            <div *ngFor=\"let additiveReq of blendAddRequestToUpdate; index as k\" [ngModelGroup]=\"k\">\r\n                                <div class=\"row mt5\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div>{{additiveReq.ProductType}} - {{additiveReq.FuelType}}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" name=\"AdRequiredQuantity\" numberWithDecimal [(ngModel)]=\"additiveReq.RequiredQuantity\" #AdRequiredQuantity=\"ngModel\" required>\r\n                                                <div class=\"input-group-addon\">\r\n                                                    <span *ngIf=\"additiveReq?.UoM==1; else litres\">G</span>\r\n                                                    <ng-template #litres>L</ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- #blended Dr to update end-->\r\n                    <!-- #Regular Dr to update -->\r\n                    <ng-template #regularDRToUpdate>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal\">{{requestToUpdate?.ProductType}} Tank, Location ID: {{requestToUpdate?.SiteId}}</div>\r\n                                <small class=\"mb10 fs12 opacity8\"><b>{{requestToUpdate?.JobName}},</b> {{requestToUpdate?.JobAddress}} </small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                        <span>Quantity Type</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"requestToUpdate.ScheduleQuantityType\" name=\"ScheduleQuantityType\" #ScheduleQuantityType=\"ngModel\">\r\n                                        <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                            {{sqType.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\" *ngIf=\"requestToUpdate.ScheduleQuantityType==1 || requestToUpdate.ScheduleQuantityType==0\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Required Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"RequiredQuantity\" [(ngModel)]=\"requestToUpdate.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Delivery Level PO#</span>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\"  name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </ng-template>\r\n                    <!-- #Regular Dr to update end-->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"form-check-label\">\r\n                                    <span>Schedule Date</span>\r\n                                </label>\r\n                                <input type=\"text\" placeholder=\"Select Date\" class=\"form-control datepicker\" name=\"SelectedDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" [(ngModel)]=\"requestToUpdate.SelectedDate\" #SelectedDate=\"ngModel\" (onDateChange)=\"requestToUpdate.SelectedDate = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">Start Time</label>\r\n                                <input type=\"text\" placeholder=\"Start Time\" name=\"ScheduleStartTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleStartTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleStartTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">End Time</label>\r\n                                <input type=\"text\" placeholder=\"End Time\" name=\"ScheduleEndTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleEndTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleEndTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div [ngClass]=\"requestToUpdate.GroupParentDRId =='' ? 'col-sm-12' : 'col-sm-12 subSectionOpacity pntr-none'\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"1\" name=\"Priority\" id=\"mustgo\">\r\n                                <label class=\"form-check-label\" for=\"mustgo\"> Must Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"2\" name=\"Priority\" id=\"shouldgo\">\r\n                                <label class=\"form-check-label\" for=\"shouldgo\">Should Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"3\" name=\"Priority\" id=\"couldgo\">\r\n                                <label class=\"form-check-label\" for=\"couldgo\">Could Go</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group mt10\">\r\n                                <textarea name=\"Notes\" [(ngModel)]=\"requestToUpdate.Notes\" class=\"form-control add-note-tarea\" placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--Spilt DR Logic-->\r\n                    <ng-container *ngIf=\"requestToUpdate.GroupParentDRId!=''\">\r\n                        <div *ngFor=\"let spiltDR of requestToUpdate.SpiltDRs;let i = index;\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                            <span>Quantity Type</span>\r\n                                        </label>\r\n                                        <select class=\"form-control\" [(ngModel)]=\"spiltDR.ScheduleQuantityType\" name=\"ScheduleQuantityType_{{i}}\" #ScheduleQuantityType=\"ngModel\">\r\n                                            <option *ngFor=\"let sqType of SpiltScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                {{sqType.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\" *ngIf=\"spiltDR.ScheduleQuantityType==1 || spiltDR.ScheduleQuantityType==0\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"name\" class=\"mr5\">\r\n                                            <span>Required Quantity</span>\r\n                                            <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                            <ng-template #litres> (L)</ng-template>\r\n                                        </label>\r\n                                        <input type=\"text\" class=\"form-control\" name=\"SpiltRequiredQuantity_{{i}}\" [(ngModel)]=\"spiltDR.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <div class=\"row mt10\" *ngIf=\"requestToUpdate.GroupParentDRId!=''\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addSpiltDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularUpdate\">\r\n                            <div *ngIf=\"blendTotalQuantity > 0 && !IsValidBlendQuantity()\" class=\"color-maroon mb15\">Sum of entered quantity should match with {{blendTotalQuantity}}.</div>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button [disabled]=\"!IsValidBlendQuantity()\" type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </div>\r\n                        <ng-template #regularUpdate>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </ng-template>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"openDeleteDeliveryRequestModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#deleteDeliveryRequestModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"deleteDeliveryRequestModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #deleteDRform=\"ngForm\" novalidate>\r\n                    <h2 class=\"fs18 f-bold mt0\">Delete Delivery Request?</h2>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\">{{requestToUpdate?.ProductType}}</div>\r\n                            <small class=\"mb10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </small>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                                <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                    <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                                </div>\r\n                                <ng-template #quantity>\r\n                                    <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                    <ng-template #litres>(L)</ng-template>\r\n                                    <div>{{requestToUpdate?.IsBlendedRequest ? requestToUpdate?.TotalBlendedQuantity: requestToUpdate?.RequiredQuantity}}</div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"submit\" (click)=\"onDeliveryReqUpdate(2)\" class=\"btn btn-primary btn-lg\" data-dismiss=\"modal\">Delete</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btnconfirm-unsavedchanges\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-unsavedchanges\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-unsavedchanges\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Filter Confirmation</h2>\r\n                <p class=\"pb10\">You are having unsaved changes. Do you want to save pending changes?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeConfirmation(true)\">Yes</button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeConfirmation(false)\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnno_trucks\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#no_trucks\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"no_trucks\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-xs\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <img src=\"src/assets/tractor.png\" width=\"75\" class=\"mb10\" alt=\"Trailer Image\" />\r\n                <p class=\"pb5 text-center\">No Trailer Available!! <br /> Do you want to add?</p>\r\n                <div class=\"text-center\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" (click)=\"RedirectToCreateTrailer()\" class=\"btn btn-primary btn-rnd btn-block mb5\">Yes, Lets's Add</button>\r\n                    <a data-dismiss=\"modal\" href=\"#\">Later</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--style=\"display:block !important;\"-->\r\n<button type=\"button\" id=\"btnno_regions\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#no_regions\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"no_regions\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-xs\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <img src=\"src/assets/ico-region.png\" width=\"75\" class=\"mb10\" alt=\"Region Image\" />\r\n                <p class=\"pb5 text-center\">No Region Available!!! <br /> Do you want to add?</p>\r\n                <div class=\"text-center\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" (click)=\"RedirectToCreateRegion()\" class=\"btn btn-primary btn-rnd btn-block mb5\">Yes, Lets's Add</button>\r\n                    <a data-dismiss=\"modal\" href=\"#\">Later</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!----region change dialog confirmation\"-->\r\n<button type=\"button\" id=\"btnconfirm-regionunsavedchanges\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-regionunsavedchanges\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-regionunsavedchanges\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Region change confirmation : {{this.regionName}}</h2>\r\n                <p class=\"pb10\">Your session data lost if you change the region. Do you want to still continue?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeRegionConfirmation(true)\">Yes</button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeRegionConfirmation(false)\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!----window change dialog confirmation\"-->\r\n<button type=\"button\" id=\"btnconfirm-windowunsavedchanges\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-windowunsavedchanges\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-windowunsavedchanges\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Window mode change confirmation</h2>\r\n                <p class=\"pb10\">Your session data lost if you change the window mode. Do you want to still continue?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeWindowConfirmation(true)\">Yes</button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeWindowConfirmation(false)\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" id=\"btndriverTrailerAssignemtMsg\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#driverTrailerAssignemtMsg\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"driverTrailerAssignemtMsg\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #deleteDRform=\"ngForm\" novalidate>\r\n                    <h2 class=\"fs18 f-bold mt0\">Driver / Trailer Assignment</h2>\r\n                    <div *ngIf=\"SbForm.controls['ObjectFilter'].value==1\">\r\n                        Please assign trailers to all non empty loads to switch to trailer view.\r\n                    </div>\r\n                    <div *ngIf=\"SbForm.controls['ObjectFilter'].value==2\">\r\n                        Please assign drivers to all non empty loads to switch to driver view.\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg btn-default\" data-dismiss=\"modal\">Ok</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div><!----region change dialog confirmation\"-->\r\n<button type=\"button\" id=\"btnno_shifts\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#no_shifts\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"no_shifts\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-xs\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <img src=\"src/assets/ico-region.png\" width=\"75\" class=\"mb10\" alt=\"Shift Image\" />\r\n                <p class=\"pb5 text-center\">No shifts in region !!! <br /> Do you want to add?</p>\r\n                <div class=\"text-center\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" (click)=\"RedirectToCreateRegion()\" class=\"btn btn-primary btn-rnd btn-block mb5\">Yes, Lets's Add</button>\r\n                    <a data-dismiss=\"modal\" href=\"#\">Later</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>Last Seen At</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td [ngClass]=\"{'text-center' : member.lastSeenAt==='-'}\">{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-routeListInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-routeListInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-routeListInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h4 class=\"pt0 dib\"><small class=\"fs11\">Route Name</small><br />{{RouteName}}</h4>\r\n                <h4 class=\"pt0 dib ml20\" *ngIf=\"ShiftInfo!=''\"><small class=\"fs11\">Shift Info</small><br /> {{ShiftInfo}}</h4>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th width=\"15%\">Sequence No</th>\r\n                            <th>Location Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let routeLoc of RouteLocationList\">\r\n                            <td>{{routeLoc.SequenceNo}}</td>\r\n                            <td>{{routeLoc.Name}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"openAssignCarrierRequestModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#assignCarrierRequestModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"assignCarrierRequestModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" [class.modal-lg]=\"SbForm.get('IsAssignDrEnabled').value\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div [formGroup]=\"AssignDrForm\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingCarriers\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mt2 mb15 pt0 pb0\">Assign Supplier/Carrier Details</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"brokerDrClose\">\r\n                            <i class=\"fa fa-close fs21\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"this.SbForm.get('IsAssignDrEnabled').value\" formArrayName=\"DeliveryRequestWithOrder\" class=\"row\">\r\n\r\n                        <label class=\"ml15\">Delivery Request(s)<span class=\"required pl4\" aria-required=\"true\">*</span></label>\r\n\r\n                        <div class=\"col-12\">\r\n                            <div class=\"overflow-auto carrierlist\">\r\n                                <table *ngIf=\"AssignDrForm.get('DeliveryRequestWithOrder')['controls']?.length>0;\" class=\"table table-sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>Location</th>\r\n                                            <th>Product</th>\r\n                                            <th>Order</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let drWithOrder of this.AssignDrForm.get('DeliveryRequestWithOrder')['controls']; let m = index;\" [formGroupName]=\"m\">\r\n                                            <th>{{(m+1)}}</th>\r\n                                            <td>{{drWithOrder.get('DeliveryRequest')?.value?.JobAddress}}</td>\r\n                                            <td>{{drWithOrder.get('DeliveryRequest')?.value?.ProductType}}</td>\r\n                                            <td>\r\n                                                <select class=\"form-control mb5\" formControlName=\"OrderId\">\r\n                                                    <option *ngFor=\"let order of drWithOrder.get('Orders').value\" [value]=\"order.Id\" [selected]=\"order.Id == drWithOrder.get('OrderId').value\">{{order.Name}}</option>\r\n                                                </select>\r\n\r\n                                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"drWithOrder.get('OrderId')?.errors?.required\">\r\n                                                    Required\r\n                                                </label>\r\n\r\n                                            </td>\r\n                                            <td>\r\n                                                <a class=\"float-right\">\r\n                                                    <i class=\"fa fa-trash text-danger\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Remove\" (click)=\"removeDrSelection(m, drWithOrder.get('DeliveryRequest').value?.Id)\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"this.SbForm.get('IsAssignDrEnabled').value\" class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <div>\r\n                                <label>Select Carriers</label>\r\n                                <div class=\"form-group\">\r\n                                    <ng-multiselect-dropdown #multiSelect3\r\n                                                             [settings]=\"carrierDdlSetting\" [data]=\"CarrierRegions\"\r\n                                                             [formControl]=\"AssignDrForm.controls['SelectedCarrier']\"\r\n                                                             (onSelect)=\"onCarrierSelect($event, true)\"\r\n                                                             (onDeSelect)=\"onCarrierSelect($event, false)\"\r\n                                                             (onSelectAll)=\"onCarrierSelectAll($event, true)\"\r\n                                                             (onDeSelectAll)=\"onCarrierSelectAll($event, false)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"this.SbForm.get('IsAssignDrEnabled').value != true\" class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">Order</label>\r\n                                <select formControlName=\"BrokerOrderId\" class=\"form-control\">\r\n                                    <option *ngFor=\"let orderDetails of OrderList\" [value]=\"orderDetails.Id\">\r\n                                        {{orderDetails.Name}}\r\n                                    </option>\r\n                                </select>\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"AssignDrForm.get('BrokerOrderId')?.errors?.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <div>\r\n                                <label>Select Carriers/Supplier</label>\r\n                                <div class=\"form-group\">\r\n                                    <ng-multiselect-dropdown #multiSelect3\r\n                                                             [settings]=\"carrierDdlSetting\" [data]=\"RegionCarriers\"\r\n                                                             [formControl]=\"AssignDrForm.controls['SelectedCarrier']\"\r\n                                                             (onSelect)=\"onCarrierSelect($event, true)\"\r\n                                                             (onDeSelect)=\"onCarrierSelect($event, false)\"\r\n                                                             (onSelectAll)=\"onCarrierSelectAll($event, true)\"\r\n                                                             (onDeSelectAll)=\"onCarrierSelectAll($event, false)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div formArrayName=\"Carriers\" class=\"col-sm-12\">\r\n                            <label>Carriers<span class=\"required pl4\" aria-required=\"true\">*</span></label>\r\n                            <div class=\"dragable-pane col-12 overflow-auto carrierlist\" id=\"sortableDrCarriers\">\r\n                                <div class=\"row\" *ngFor=\"let carr of AssignDrForm.get('Carriers')['controls']; let j = index;\" [formGroupName]=\"j\" id=\"{{carr.get('Id').value}}\">\r\n                                    <div class=\"col-6 list-drag carr-seq-sortable-cursor\">\r\n                                        <span class=\"float-left\">{{carr.get('Name').value}}</span>\r\n                                        <a class=\"float-right\">\r\n                                            <i class=\"fa fa-trash-alt text-danger\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Remove\" (click)=\"removeCarrier(carr.get('Id').value)\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <select class=\"custom-select\" formControlName=\"RegionId\">\r\n                                            <option disabled [ngValue]=\"\" [selected]=\"!carr.get('RegionId').value\">Select Region</option>\r\n                                            <option *ngFor=\"let rgn of getRegionsByCarrierId(carr.get('Id').value)\" [ngValue]=\"rgn.Id\" [selected]=\"rgn.Id == carr.get('RegionId').value\">\r\n                                                {{rgn.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\"></div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"carr.get('RegionId')?.touched && carr.get('RegionId')?.errors?.required\">\r\n                                            Region is required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">Dispatcher Note</label>\r\n                                <textarea formControlName=\"DispatcherNote\" class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n\r\n                        <button *ngIf=\"SbForm.get('IsAssignDrEnabled').value!=true\" type=\"button\"\r\n                                (click)=\"SaveAssignCarrierDetails()\"\r\n                                [disabled]=\"AssignDrForm.invalid || AssignDrForm.get('Carriers')['controls']?.length==0\"\r\n                                class=\"btn btn-primary btn-lg\">\r\n                            Submit\r\n                        </button>\r\n\r\n                        <button *ngIf=\"SbForm.get('IsAssignDrEnabled').value\" type=\"button\"\r\n                                (click)=\"saveMultipleDrCarrierSequence()\"\r\n                                [disabled]=\"AssignDrForm.invalid || AssignDrForm.get('DeliveryRequestWithOrder')['controls']?.length==0 || AssignDrForm.get('Carriers')['controls']?.length==0\"\r\n                                class=\"btn btn-primary btn-lg\">\r\n                            Submit\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- proceed brokered dr start -->\r\n<div id=\"openProceedBrokeredDrModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#proceedBrokeredDrModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"proceedBrokeredDrModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingCarriers\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <form #proceedBrokeredDrForm=\"ngForm\" novalidate>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==2\" class=\"fs18 f-bold mt0\">Accept Brokered Delivery Request?</h2>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==3\" class=\"fs18 f-bold mt0\">Reject Brokered Delivery Request?</h2>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\">{{requestToUpdate?.ProductType}}</div>\r\n                            <small class=\"mb10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </small>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                            <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                            </div>\r\n                            <ng-template #quantity>\r\n                                <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                <ng-template #litres>(L)</ng-template>\r\n                                <div>{{requestToUpdate?.RequiredQuantity}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button *ngIf=\"this.BrokeredDrStatus==2\" type=\"button\" (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 2)\" class=\"btn btn-primary btn-lg\">Accept</button>\r\n                        <button *ngIf=\"this.BrokeredDrStatus==3\" type=\"button\" (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 3)\" class=\"btn btn-primary btn-lg\">Reject</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- proceed brokered dr end -->\r\n<div class=\"chat-wrapper\">\r\n    <app-sendbird></app-sendbird>\r\n</div>\r\n<div id=\"route-info\" class=\"side-panel pl5 pr5\">\r\n    <app-route-info></app-route-info>\r\n</div>\r\n<div>\r\n    <app-split-delivery-request (onRaiseDR)=\"refreshDeliveryRequests(0);\"></app-split-delivery-request>\r\n</div>\r\n\r\n<a class=\" hidden pull-left\" id=\"open-CreateDelivery\" data-toggle=\"modal\" data-target=\"#TBD-Drop-location-popUp\"></a>\r\n\r\n<div class=\"modal fade\" id=\"TBD-Drop-location-popUp\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"float-right\">\r\n                    <a (click)=\"clearDropLocationControls()\" id=\"TBD-Drop-location-Close-popUp\" data-dismiss=\"modal\"><i class=\"fa fa-close\"></i></a>\r\n                </div>\r\n                <div *ngIf=\"AddDropLocationLoader\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"row col-md-12\">\r\n                    <div class=\"col-md-6\">\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                 [(ngModel)]=\"selectedCustomer\"\r\n                                                 [placeholder]=\"'Select Customer (Optional)'\"\r\n                                                 [settings]=\"CustomerSettings\"\r\n                                                 [data]=\"companyList\"\r\n                                                 (onSelect)=\"onCustomerSelect($event)\"\r\n                                                 (onDeSelect)=\"onCustomerDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                 [(ngModel)]=\"selectedSite\"\r\n                                                 [placeholder]=\"'Select location'\"\r\n                                                 [settings]=\"SiteddlSettings\"\r\n                                                 [data]=\"SiteList\"\r\n                                                 (onSelect)=\"onSiteSelect($event)\"\r\n                                                 (onDeSelect)=\"onSiteDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row col-md-12 mt10\">\r\n                    <div class=\"col-md-6\">\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                 [(ngModel)]=\"selectedOrder\"\r\n                                                 [placeholder]=\"'Select order'\"\r\n                                                 [settings]=\"multiDropdownSettings\" [data]=\"Orders\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"AddDropLocation()\" class=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"load-Sequence-container\">\r\n    <ng-sidebar-container *ngIf=\"_isSequencePanelInitiated\">\r\n        <ng-sidebar [(opened)]=\"_locSequenceOpened\" [animate]=\"true\" [position]=\"'right'\" style=\"height: 100vh\">\r\n\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loader\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n\r\n            <div class=\"heading\">\r\n                <a (click)=\"_locSequenceOpened=false\"><i class=\"fa fa-close fs18 float-left mr10 mt3\"></i></a>\r\n                <h3 class=\"dib title\">Location Sequencing</h3>\r\n            </div>\r\n           <div class=\"row mb10 h-75\" *ngIf=\"_locSequenceOpened\">\r\n                <div class=\"col-sm-4 scrollable\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\" id=\"sortableLocations\">\r\n                            <div *ngFor=\"let location of TripLocations;let i = index;\" class=\"mt15\" id=\"{{location.JobId}}\">\r\n                                <div *ngIf=\"location.Latitude && location.Longitude && !location.IsTBD\">\r\n\r\n                                    <div class=\"list-drag carr-seq-sortable-cursor sortable-loc\" style=\"background-color:beige;\"\r\n                                         placement=\"bottom-left\" container=\"body\"\r\n                                         ngbTooltip=\"{{location.JobName}}-{{location.JobAddress}}, {{location.JobCity}}\">\r\n\r\n                                        {{(location.JobName.length > 12) ? (location.JobName | slice:0:12)+'..':(location.JobName)}}-&nbsp;\r\n                                        {{(location.JobAddress.length > 12) ? (location.JobAddress |slice:0:12)+'..':(location.JobAddress) }},&nbsp;\r\n                                        {{(location.JobCity.length > 12) ? (location.JobCity | slice:0:12)+'..':(location.JobCity) }}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n                </div>\r\n            \r\n                <div class=\"col-sm-8\">\r\n                    <agm-map [zoom]=\"3\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\"\r\n                        [fullscreenControlOptions]=\"{position:3}\" [fitBounds]=\"true\" class=\"h-100\">\r\n            \r\n                        <ng-container *ngFor=\"let tripLocation of TripLocations\">\r\n            \r\n                            <ng-container *ngIf=\"tripLocation.Latitude && tripLocation.Longitude && !tripLocation.IsTBD\">\r\n            \r\n                                <agm-marker *ngFor=\"let m of TripLocations; let i = index\" [latitude]=\"m.Latitude\"\r\n                                    [longitude]=\"m.Longitude\" [label]=\"m.Sequence\" [agmFitBounds]=\"true\">\r\n            \r\n                                    <agm-info-window [disableAutoPan]=\"true\">\r\n                                        {{m.JobName}},&nbsp;{{m.JobAddress}},&nbsp;{{m.JobCity}}\r\n                                    </agm-info-window>\r\n            \r\n                                </agm-marker>\r\n            \r\n                            </ng-container>\r\n            \r\n                        </ng-container>\r\n                    </agm-map>\r\n                </div>\r\n            \r\n            </div>\r\n            <div class=\"mt10 float-right\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"_locSequenceOpened=false\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveLocationSequence()\">Save</button>\r\n            </div>\r\n\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>\r\n<div class=\"container-fluid fs12 text-center color-lightgrey\">\r\n    <div class=\"footer-wrapper py-4 mt-3\">\r\n        <span class=\"pull-left mtm10\" id=\"dynamic-footer-text\">&copy; 2022 TrueFill, Inc.</span>\r\n        <span class=\"pull-right dib\"><img src=\"/Content/images/comodo-secure-logo.png\" border=\"0\"></span>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DeliveryRequestService {\n    localStroageData: any;\n    localStroage: BehaviorSubject<any>;\r\n    QueueIcon: any;\r\n    localQueueIcon: BehaviorSubject<any>;\r\n\r\n\r\n    smallLoader: any;\r\n    smallLoaderBeh: BehaviorSubject<any>;\r\n\r\n    constructor() {\r\n        this.localStroage = new BehaviorSubject(this.localStroageData);\r\n        this.localQueueIcon = new BehaviorSubject(this.QueueIcon);\r\n        this.smallLoaderBeh = new BehaviorSubject(this.smallLoader);\r\n    }\r\n\r\n    pushItemData(dr: any) {\r\n        this.localStroage.next(dr);\r\n    }\r\n    ToggleQueueIcon(status: any) {\r\n        this.localQueueIcon.next(status);\r\n    }\r\n    displayLoader(status: any) {\r\n        this.smallLoaderBeh.next(status);\r\n    }\r\n}"],"sourceRoot":"webpack:///"}