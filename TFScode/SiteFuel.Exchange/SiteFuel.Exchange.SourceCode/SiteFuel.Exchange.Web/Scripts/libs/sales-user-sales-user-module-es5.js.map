{"version":3,"sources":["webpack:///src/app/contact-person/contact-person.component.ts","webpack:///src/app/contact-person/contact-person.component.html","webpack:///src/app/sales-user/create-sourcing-request/create-sourcing-request.component.ts","webpack:///src/app/sales-user/create-sourcing-request/create-sourcing-request.component.html","webpack:///src/app/sales-user/sales-user-dashboard/sales-user-dashboard.component.html","webpack:///src/app/sales-user/sales-user-dashboard/sales-user-dashboard.component.ts","webpack:///src/app/sales-user/sales-user.model.ts","webpack:///src/app/sales-user/sales-user.module.ts","webpack:///src/app/sales-user/sourcing-request-grid/sourcing-request-grid/sourcing-request-grid.component.ts","webpack:///src/app/sales-user/sourcing-request-grid/sourcing-request-grid/sourcing-request-grid.component.html"],"names":["ContactPersonComponent","fb","salesUserService","regexPhone","change","event","contactPerson","get","value","IsPhoneNumberValid","subscribe","data","setValue","_contactPersonForm","group","Name","control","PhoneNumber","required","pattern","Email","email","IsPhoneNumberConfirmed","idx","Parent","removeAt","push","getNewContactPerson","addContactPerson","selector","templateUrl","styleUrls","CreateSourcingRequestComponent","route_active","router","changeDetectorRef","confirmationDialogService","pageloader","keyword","Approved_Terminals_keyword","PrcingCodevalue","popoverTitle","popoverMessage","cancelClicked","isPriceCodeLoading","editSourcingId","IsLoading","formSubmited","companyExits","isPersonNew","TruckTypeLoadList","FreightOnBoardTypesList","allJobList","countryList","currucyList","UomList","statesList","filteredStatesList","FuelProductsList","FeeTypesList","FeeSubTypesList","FeeConstraintTypesList","PaymentMethodsList","RackAvgPricingTypesList","CompanyContactPersonsList","CitySourcingGroupTerminalPriceAvailableList","SourcingCityGroupTerminalsList","ClosedTerminalList","OpisTerminalList","AllTPOCompaniesList","RequestStatus","GeneralNotesHistory","pricingCodes","pricingfeedTypeId","pricingfuelClassTypeId","UserContext","IsSuppressPricing","isValidMobile","billableList","Id","MaxInputDate","add","toDate","countryGroupList","DispatchRegionList","companyPreferenceSetting","popoverLostTitle","popoverLostMessage","mapConstants","UoM","CompDdlSetting","getUserContext","initailizeSourcingReqForm","CurrentUserId","userId","getFreightOnBoardTypes","getTruckLoadType","getUoMList","getCurrecyList","getCountryList","getPaymentMethods","getStatesOfAllCountries","getRackAvgPricingTypes","getAllTPOCompanies","f","AddressDetails","CenterLat","CenterLon","isSalesUserType","IsSalesUser","undefined","getcountryGroupList","GetDispatchRegions","singleSelection","closeDropDownOnSelection","idField","textField","enableCheckAll","itemsShowLimit","allowSearchFilter","company","isSelected","CustomerDetails","id","getSourcingCompanyContactPersons","getJobLists","TruckLoadType","FreightOnBoardType","isRegularBuyerUpdate","setRegularBuyerValidation","ClearAddress","job","companyName","text","getJobDetails","isNew","sourcingRequestForm","onCompSelect","clickNewPerson","isNewCompany","pricingModuleComponent","toggleSuppressPricing","IsRegularBuyer","AccountingCompanyId","DisplayRequestId","RequestName","SalesUserId","GeneralNote","IsSupressOrderPricing","UserId","CompanyId","IsNewCompany","CompanyName","IsInvitationEnabled","IsNotifyDeliveries","IsNotifySchedules","TempCompany","ContactPersons","initializeContactPersons","JobName","DisplayJobID","JobId","IsNewJob","Address","City","StateId","CountryId","CountyName","CountryName","CountryCode","StateName","Currency","ZipCode","IsProFormaPoEnabled","SignatureEnabled","IsGeocodeUsed","Latitude","Longitude","TimeZoneName","LocationManagedType","IsCompanyOwned","MarineUoM","IsMarineLocation","InventoryDataCaptureType","UOM","DispatchRegionId","TempJob","FuelDetails","FuelDisplayGroupId","FuelTypeId","QuantityTypeId","Quantity","MinimumQuantity","MaximumQuantity","QuantityIndicatorTypes","NonStandardFuelName","NonStandardFuelDescription","IsTierPricing","PricingTypeId","PricePerGallon","Fees","intilizeFuelRequestFees","FuelDeliveryDetails","DeliveryTypeId","StartDate","Date","format","EndDate","StartTime","EndTime","SingleDeliverySubTypes","PaymentMethods","PaymentTermId","NetDays","IsPrePostDipRequired","OrderEnforcementId","FuelPricingDetails","LeadRequestId","Code","TempCode","CodeId","CodeDescription","RackAvgTypeId","RackPrice","EnableCityRack","TerminalName","TempTerminalName","TerminalId","SupplierCostMarkupTypeId","SupplierCostMarkupValue","SupplierCost","SupplierCostTypeId","MarkertBasedPricingTypeId","CityGroupTerminalId","CityGroupTerminalName","CityGroupTerminalStateId","BrokerMarkUp","ExchangeRate","IsTierPricingRequired","DifferentFuelPrices","FormattedPricing","TierPricing","TierPricingType","VolumeBased","IsResetCumulation","AboveQuantityPricing","Pricings","array","ResetCumulationSetting","CumulationType","Day","DisplayCumulationFrequency","PricingSourceId","PricingNote","TempPricingCodeDetails","PricingCode","Description","AdditionalDetailsViewModel","IsAssetTracked","IsAssetDropStatusEnabled","controls","setValidators","updateValueAndValidity","val","contactPersons","contactPersonsForm","i","length","IsValidMobileNumber","_FRFArray","FeeTypeId","FeeSubTypeId","FeeSubTypeName","Fee","FeeDetails","FeeConstraintTypeId","IncludeInPPG","OtherFeeTypeId","navigate","isnew","_this","GetPreferencesSettings","find","t","truckload","truckLoadType","patchValue","setCurrency","setPricingCode","GetAllTPOCompanies","listdata","map","item","esourcingId","snapshot","params","getSourcingDetails","getFuelProducts","getPreferencesSettings","companyId","GetSourcingCompanyContactPersons","companyname","filter","x","GetSourcingContactPersonDetails","CompanyContactPersonsDetails","GetTruckLoadType","GetFreightOnBoardTypes","GetCountryList","GetCurrenyList","GetUoMList","countryId","GetStatesOfAllCountries","GetCountryGroupList","isFtl","foAsTerminal","ftlvalue","tervalue","GetJobLists","joblistdata","jobId","GetJobDetails","productDisplayGroupId","GetFuelProducts","zipCode","GetProductListByZip","currency","GetAllFeeTypes","feeTypeId","GetAllFeeSubTypes","GetAllFeeConstraintTypes","GetRackAvgPricingTypes","fee","IsSourcingCompanyExist","detectChanges","GetSourcingDetailsById","initializeContactPerson","LeadFees","patchExistingPricingDetails","UpdateViewedStatus","resetPOValidation","setSaveValidations","invalid","pricings","forEach","pricing","SaveEditSourcingDetails","getRawValue","StatusCode","msgsuccess","msgerror","StatusMessage","CreateSourcingRequest","setNetDaysValidation","setPOValidation","valid","CreateOrderFromSourcingRequest","then","result","window","location","href","isSuppressPricing","min","address","state","country","city","zipcode","GetAddress","updateAddressData","getCityGroupTerminals","getAddress","setBillableQuantity","st","QuantityIndicatorId","ChangesSourcingRequestStatus","Accepted","Lost","msginfo","fueltypeId","selectedCityRackId","lattitude","longitude","countryCode","sourceId","IsCitySourcingGroupTerminalPriceAvailable","cityRackId","latitude","terminal","source","GetOpisTerminals","approveTerminalAuto","open","isChecked","displayData","PricingSource","RackAvgPricingType","FeedType","WeekendPricingDay","FuelClassType","QuantityIndicator","GetAddressByZip","includes","stateId","StateCode","s","GetUserContext","confirm","confirmed","updateGeoCode","coords","lat","lng","previousLatLon","GetAddressByLongLat","selectedCountryGroupId","countryGroup","target","CountryGroupId","toLowerCase","displayCurrancy","deliveryTypeId","validators","type","setFuelTypevalidation","getProductListByZip","pricingTypeChanged","updateFormControlValidators","isEditRequest","GetValidTPOCompany","companyExistanceChanged","onChangeMobile","countryChanged","getAddressByZip","stateChanged","markerDragEnd","deliveryTypeIdChanged","$event","deliveryTypeChanged","UpdateSuppressPricing","onCancel","onSubmit","encapsulation","None","SalesUserDashboardComponent","fuelsurchargeService","Sourcingrequests","orders","Invoices","activeInvoiceDDTTab","minDate","maxDate","SelectedDate","formSubmitted","selectedCompany","selectedSite","CompanySettings","SiteddlSettings","companyList","SiteList","SingleSelectSettingsById","FuelTypeList","postData","showModal","CustomersJobsParentList","regionsAndJobsModels","customersandJobs","DRInput","ProductStatuses","isConfirmDisabled","QuantityRegEx","uparrow","DisplayRequestStatus","AdditionalProducts","setFullYear","getFullYear","multiSettings","salesDrModel","SalesDRForm","initSalesDRForm","initFormValues","getSourcingRequests","getOrders","getInvoices","GetCustomersNJobs","getProducts","currentValue","date","index","_date","time","_startTime","_endTime","Uom","UoMString","prodStatus","Status","State","Success","title","GetCustomersAndLocations","customersAndLocations","_cusAndLocations","_joblist","_custlist","CustomerId","CustomerName","FilterUniqueCustomers","sort","a","b","custList","res","Map","has","set","GetProducts","initAdditionalProducts","setProducts","splice","_addProd","FuelTypes","DRPO","_form","CompanyList","DRNotes","getSupplierCustomers","removeProduct","clearProducts","reset","status","SalesDRformToModel","ValidateDREntryForm","_inputDR","RaiseDeliveryRequestInput","successStatus","FindSuccessStatus","CreateDREntryForm","_DRstatus","clearForm","clearSalesDRForm","selectAllText","unSelectAllText","_filteredSites","sites","Products","addProducts","FuelName","isFromDashboard","GetSourcingRequests","All","GetOrdersForDashboard","GetInvoicesForDashboard","onCompanySelect","onCompanyDeSelect","onSiteSelect","onSiteDeSelect","onValidate","navigateToSourcing","navigateToOrders","changeActiveTab","navigateToInvoice","Geocode","MapIconUrl","MapIconSize","MapConstants","ZoomArea","IconUrl","url","scaledSize","width","height","FeeModel","ByQuantityModel","MinQuantity","ContactPersonModel","SalesDRModel","CustomersAndJobs","DDL","ProductsGroup","CustomersModel","RegionsAndJobsModel","SalesUserDRStatus","ConfirmDRStatus","SalesUserDRStatusModel","SalesUserDRProductStatus","ValidateDREntryResponse","DeliveryRequestInputModel","CustomCompanyModel","route","path","component","SalesUserModule","forChild","forRoot","confirmButtonType","declarations","imports","SourcingRequestGridComponent","dtOptions","dtTrigger","RequestStatusdata","_opened","DispatchRegion","initializeGrid","requestStatusdata","localStorage","getItem","requestStatus","getRequests","dtElements","dtElement","dtInstance","destroy","next","exportInvitedColumns","columns","dom","buttons","extend","exportOptions","orientation","pagingType","order","pageLength","lengthMenu","setItem","refreshDatatable"],"mappings":"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","file":"sales-user-sales-user-module-es5.js","sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ContactPersonModel } from '../sales-user/sales-user.model';\r\nimport { SalesUserService } from '../sales-user/sales-user.service';\r\n\n@Component({\n    selector: 'app-contact-person',\n    templateUrl: './contact-person.component.html',\n    styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit, OnChanges {\n\n    @Input() public Parent: FormGroup;\n    regexPhone: RegExp = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    constructor(private fb: FormBuilder, private salesUserService: SalesUserService,) { }\n\n    ngOnInit(): void {        \n        \n    }\n\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        //console.log(change);\r\n    }\r\n\n    public onChangeMobileNumber(event: any, contactPerson: any) {\n        if (contactPerson.get('PhoneNumber').value) {\n            this.salesUserService.IsPhoneNumberValid(contactPerson.get('PhoneNumber').value).subscribe(data => {\n                contactPerson.get('IsPhoneNumberConfirmed').setValue(data);\n            })\n        } else {\n            contactPerson.get('IsPhoneNumberConfirmed').setValue(true);\n        }\n    }\n\n    getNewContactPerson(): FormGroup {\r\n        var _contactPersonForm = this.fb.group({\r\n            Name: this.fb.control(null),\n            PhoneNumber: this.fb.control(null, [Validators.required, Validators.pattern(this.regexPhone)]),\n            Email: this.fb.control(null, [Validators.required, Validators.email]),\r\n            IsPhoneNumberConfirmed: this.fb.control(true)\r\n        });\r\n        return _contactPersonForm;\r\n    }\r\n\n\n    removeContactPerson(idx: number) {\r\n        (<FormArray>this.Parent.get('ContactPersons')).removeAt(idx);\r\n    }\n\n    addContactPerson(): void {\r\n        var contactPerson = new ContactPersonModel();\r\n        (<FormArray>this.Parent.get('ContactPersons')).push(this.getNewContactPerson());\r\n    }\n\n}\n","<div [formGroup]=\"Parent\" *ngIf=\"Parent.get('ContactPersons')['controls'].length > 0\">\r\n    <ng-container formArrayName=\"ContactPersons\">\r\n        <ng-container *ngFor=\"let contactperson of Parent.get('ContactPersons')['controls']; let i = index;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"row\" [formGroupName]=\"i\">\r\n                        <div class=\"col-sm-3 new-company\">\r\n                            <div class=\"form-group\">\r\n                                <div>\r\n                                    <input class=\"form-control newContactPerson\"\r\n                                           id=\"CustomerDetails_Name_{{i}}\" formControlName=\"Name\"\r\n                                           placeholder=\"Contact Person\" type=\"text\" value=\"\">\r\n                                    <!--<div *ngIf=\"contactperson.controls['Name'].errors\">\r\n                                        <span class=\"text-danger\"\r\n                                              *ngIf=\"contactperson.controls['Name'].errors?.required\">\r\n                                            Contact Person is required\r\n                                        </span>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control input-phoneformat phoneNumber\" (blur)=\"onChangeMobileNumber($event, contactperson)\" placeholder=\"Mobile Number\"\r\n                                       id=\"CustomerDetails_PhoneNumber_{{i}}\" name=\"PhoneNumber\"\r\n                                       formControlName=\"PhoneNumber\" type=\"text\" value=\"\">\r\n                                <div *ngIf=\"!contactperson.controls['PhoneNumber'].errors && contactperson.controls['IsPhoneNumberConfirmed'].value == false\" class=\"color-orange fs12 pt5\" id=\"mobile-validation-msg\">Unable to verify number! You will miss Text Alerts.</div>\r\n                                <div *ngIf=\"contactperson.controls['PhoneNumber'].errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"contactperson.controls['PhoneNumber'].errors?.required\">\r\n                                        Mobile Number is required\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"text-danger\" *ngIf=\"contactperson.controls['PhoneNumber'].errors?.pattern\">Please, Enter 10 digit Mobile Number.</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group custEmail\">\r\n                                <input class=\"form-control email\" id=\"CustomerDetails_Email_{{i}}\" placeholder=\"Email\"\r\n                                       name=\"Email\" formControlName=\"Email\" type=\"email\" value=\"\" />\r\n                                <div *ngIf=\"contactperson.get('Email').errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"contactperson.get('Email').errors?.required\">\r\n                                        Email\r\n                                        is required\r\n                                    </span>\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"contactperson.get('Email').errors?.email\"> Invalid </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-1\">\r\n                            <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" (click)=\"removeContactPerson(i)\"></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</div>\r\n<button type=\"button\" class=\"btn btn-link\" (click)=\"addContactPerson()\"><i class=\"fa fa-plus-circle\"></i> Add Contact Person</button>\r\n\r\n\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SalesUserService } from '../sales-user.service';\nimport { map } from 'rxjs/operators';\nimport { Declarations } from 'src/app/declarations.module';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { ConfirmationDialogService } from '../../shared-components/confirmation-dialog/confirmation-dialog.service';\nimport { PricingSectionComponent } from 'src/app/shared-components/pricing-section/pricing-section.component';\nimport { ContactPersonModel, FeeModel, GeneralNote, Geocode, MapConstants } from '../sales-user.model';\nimport { SourcingRequestStatus, TierPricingType } from 'src/app/app.enum';\nimport { DropDown } from 'src/app/app.constants';\r\ndeclare var CurrentUserId: any;\ndeclare var IsSalesUser: boolean;\n\n@Component({\n    selector: 'app-create-sourcing-request',\n    templateUrl: './create-sourcing-request.component.html',\n    styleUrls: ['./create-sourcing-request.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CreateSourcingRequestComponent implements OnInit {\n\n    @ViewChild(PricingSectionComponent) private pricingModuleComponent: PricingSectionComponent;\n    pageloader = false;\n    keyword = 'Code';\n    Approved_Terminals_keyword = \"Name\";\n    public PrcingCodevalue = '';\n    popoverTitle = 'Create PO';\n    popoverMessage = 'Are you sure want to create PO?';\n    cancelClicked = false;\n    isPriceCodeLoading = false;\n    public userId: number;\n    sourcingRequestForm: FormGroup;\n    public editSourcingId: number = 0;\n    IsLoading = false;\n    formSubmited = false;\n    public companyExits = false;\n    public isPersonNew = true;\n    public TruckTypeLoadList = [];\n    public FreightOnBoardTypesList = [];\n    public allJobList: Array<DropDown> = [];\n    public countryList = [];\n    public currucyList = [];\n    public UomList = [];\n    public statesList = [];\n    public filteredStatesList = [];\n    public FuelProductsList = [];\n    public FeeTypesList = [];\n    public FeeSubTypesList = [];\n    public FeeConstraintTypesList = [];\n    public PaymentMethodsList = [];\n    public RackAvgPricingTypesList = [];\n    public CompanyContactPersonsList = [];\n    public CitySourcingGroupTerminalPriceAvailableList = [];\n    public SourcingCityGroupTerminalsList = [];\n    public ClosedTerminalList = [];\n    public OpisTerminalList = [];\n    public CompanyContactPersonsDetails: any;\n    public AllTPOCompaniesList: Array<DropDown> = [];\n    public RequestStatus = SourcingRequestStatus;\n    public GeneralNotesHistory: GeneralNote[] = [];\n    public pricingCodes = [];\n    public pricingfeedTypeId = 0;\n    public pricingfuelClassTypeId = 0;\n    public UserContext: any = {};\n    public IsSuppressPricing = false;\n    public isValidMobile: boolean = true;\n    public billableList = [{ Id: '1', Name: 'Net' }, { Id: '2', Name: 'Gross' }];\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\n    //public isShowNote:boolean=false;\n    @ViewChild('approveTerminalAuto') approveTerminalAuto;\n    public LeadFees: FeeModel[];\n    public displayCurrancy: string;\n    public isSalesUserType: boolean;\n    public countryGroupList = [];\n    public DispatchRegionList = [];\n    public companyPreferenceSetting = false;\n    \n    regexPhone: RegExp = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    popoverLostTitle = 'Request Lost';\n    popoverLostMessage = 'This request will be lost. Are you sure want to lose request?';\n\n    // map settings\n    mapConstants: MapConstants = new MapConstants();\n    UoM: number = 0;\n    public CompDdlSetting = {};\n\n    constructor(private fb: FormBuilder,\n        private salesUserService: SalesUserService,\n        private route_active: ActivatedRoute,\n        private router: Router,\n        private changeDetectorRef: ChangeDetectorRef,\n        private confirmationDialogService: ConfirmationDialogService) {\n\n        this.getUserContext();\n        this.initailizeSourcingReqForm();\n    }\n\n    ngAfterViewInit() {\n        if (typeof CurrentUserId !== \"undefined\") {\n            this.userId = CurrentUserId;\n        }\n    }\n\n    ngOnInit() {\n        this.pageloader = true\n        this.getFreightOnBoardTypes();\n        this.getTruckLoadType();\n        this.getUoMList();\n        this.getCurrecyList();\n        this.getCountryList();\n        // this.setCurrency(1);\n        this.getPaymentMethods();\n        //this.getFuelProducts();\n        this.getStatesOfAllCountries();\n        this.getRackAvgPricingTypes();\n        this.getAllTPOCompanies();\n\n        if (this.f.AddressDetails.get('CountryId').value == 2) { //canada\n            this.mapConstants.CenterLat = 56.14;\n            this.mapConstants.CenterLon = -106.34;\n        }\n        this.isSalesUserType = (typeof IsSalesUser !== undefined) && IsSalesUser;\n\n        this.getcountryGroupList();\n        this.GetDispatchRegions();\n\n        this.CompDdlSetting = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'id',\n            textField: 'text',\n            enableCheckAll: false,\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n    }\n\n    onCompSelect(company: any, isSelected: boolean) {\n        if (isSelected) {\n            this.f.CustomerDetails.get('CompanyId').setValue(company.id);\n            this.getSourcingCompanyContactPersons(company.id);\n            this.getJobLists(company.id, this.f.TruckLoadType.value, this.f.FreightOnBoardType.value);\n            this.isRegularBuyerUpdate(company.id, false);\n        }\n        else {\n            this.CompanyContactPersonsList = [];\n            this.f.AddressDetails['controls']['IsNewJob'].setValue(true);\r\n            this.allJobList = [];\r\n            this.setRegularBuyerValidation(true);\n        }\n        this.ClearAddress();\n        this.f.CustomerDetails.get('UserId').setValue(null);\n        this.f.CustomerDetails.get('PhoneNumber').setValue(null);\n        this.f.CustomerDetails.get('Email').setValue(null);\n        this.f.AddressDetails.get('JobId').setValue(null);\n        this.f.AddressDetails.get('JobName').setValue(null);\n        this.f.AddressDetails.get('TempJob').setValue(null);\n    }\n\n    onJobSelect(job: any, companyName: string, isSelected: boolean) {\n\n        if (isSelected) {\n            this.f.AddressDetails.get('JobId').setValue(job.id);\n            this.f.AddressDetails.get('JobName').setValue(job.text);\n            this.getJobDetails(job.id, companyName);\n        }\n        else {\n            this.f.AddressDetails.get('JobId').setValue(null);\n            this.f.AddressDetails.get('JobName').setValue(null);\n            //this.sourcingRequestForm.get('AddressDetails').reset();\n            // this.f.AddressDetails.get('DisplayJobID').setValue(null);\n            // this.f.AddressDetails.get('Address').setValue(null);\n            // this.f.AddressDetails.get('ZipCode').setValue(null);\n            // this.f.AddressDetails.get('City').setValue(null);\n            // this.f.AddressDetails.get('CountyName').setValue(null);\n            // this.f.AddressDetails.get('StateId').setValue(null);\n            // this.f.AddressDetails.get('Latitude').setValue(null);\n            // this.f.AddressDetails.get('Longitude').setValue(null);\n        }\n    }\n\n    companyExistanceChanged(isNew: boolean) {\n        if (isNew) {\n            this.f.CustomerDetails.get('CompanyName').setValue(null);\n            this.f.CustomerDetails.get('UserId').setValue(null);\n            this.f.CustomerDetails.get('PhoneNumber').setValue(null);\n            this.f.CustomerDetails.get('Email').setValue(null);\n\n            this.f.AddressDetails.get('JobId').setValue(null);\n            this.f.AddressDetails.get('JobName').setValue(null);\n\n            this.f.AddressDetails.get('IsNewJob').setValue(true);\n            this.setRegularBuyerValidation(isNew);\n            this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(this.companyPreferenceSetting);\n            this.f.CustomerDetails.get('TempCompany').setValue(null);\n            this.onCompSelect(null, false);\n        }\n        else {\r\n            this.ClearAddress();\r\n        }\n        this.clickNewPerson(true);\n    }\n\n    setRegularBuyerValidation(isNewCompany: boolean) {\r\n        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(this.companyPreferenceSetting);\n        this.pricingModuleComponent.toggleSuppressPricing(this.companyPreferenceSetting);\n        this.f.IsRegularBuyer.setValue(!isNewCompany);\n    }\r\n\n\n    initailizeSourcingReqForm() {\n        this.sourcingRequestForm = this.fb.group({\n            Id: this.fb.control(null),\n            TruckLoadType: this.fb.control(null),\n            FreightOnBoardType: this.fb.control(null),\n            AccountingCompanyId: this.fb.control(null),\n            DisplayRequestId: this.fb.control(null),\n            RequestName: this.fb.control(null),\n            SalesUserId: this.fb.control(null),\n            GeneralNote: this.fb.control(null),\n            RequestStatus: this.fb.control(0),\n            IsSupressOrderPricing: this.fb.control(false),\n            IsRegularBuyer: this.fb.control(false),\n            CustomerDetails: this.fb.group({\n                Id: this.fb.control(null),\n                UserId: this.fb.control(null),\n                CompanyId: this.fb.control(null),\n                IsNewCompany: this.fb.control(true),\n                CompanyName: this.fb.control(null, Validators.required),\n                Name: this.fb.control(null),\n                PhoneNumber: this.fb.control(null),\n                Email: this.fb.control(null, [Validators.required, Validators.email]),\n                IsInvitationEnabled: this.fb.control(null),\n                IsNotifyDeliveries: this.fb.control(null),\n                IsNotifySchedules: this.fb.control(null),\n                TempCompany: this.fb.control(null),\n                ContactPersons: this.initializeContactPersons([]),\n            }),\n            AddressDetails: this.fb.group({\n                Id: this.fb.control(null),\n                JobName: this.fb.control(null, Validators.required),\n                DisplayJobID: this.fb.control(null),\n                JobId: this.fb.control(null),\n                IsNewJob: this.fb.control(true),\n                Address: this.fb.control(null),\n                City: this.fb.control(null, Validators.required),\n                StateId: this.fb.control(null, Validators.required),\n                CountryId: this.fb.control(null, Validators.required),\n                CountyName: this.fb.control(null),\n                CountryName: this.fb.control(null),\n                CountryCode: this.fb.control(null),\n                StateName: this.fb.control(null),\n                Currency: this.fb.control(null),\n                ZipCode: this.fb.control(null),\n                IsProFormaPoEnabled: this.fb.control(null),\n                SignatureEnabled: this.fb.control(null),\n                IsGeocodeUsed: this.fb.control(true),\n                Latitude: this.fb.control(this.mapConstants.CenterLat, Validators.pattern('^[0-9.-]*$')),\n                Longitude: this.fb.control(this.mapConstants.CenterLon, Validators.pattern('^[0-9.-]*$')),\n                TimeZoneName: this.fb.control(null),\n                LocationManagedType: this.fb.control(null),\n                IsCompanyOwned: this.fb.control(null),\n                MarineUoM: this.fb.control(null),\n                IsMarineLocation: this.fb.control(null),\n                InventoryDataCaptureType: this.fb.control(null),\n                UOM: this.fb.control(1),\n                DispatchRegionId: this.fb.control(null),\n                TempJob: this.fb.control(null),\n            }),\n            FuelDetails: this.fb.group({\n                Id: this.fb.control(null),\n                FuelDisplayGroupId: this.fb.control(1),\n                FuelTypeId: this.fb.control(null, Validators.required),\n                QuantityTypeId: this.fb.control(3),\n                Quantity: this.fb.control(0, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\n                MinimumQuantity: this.fb.control(0, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\n                MaximumQuantity: this.fb.control(0, [Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)]),\n                QuantityIndicatorTypes: this.fb.control(1),\n                NonStandardFuelName: this.fb.control(null),\n                NonStandardFuelDescription: this.fb.control(null),\n                IsTierPricing: this.fb.control(null),\n                PricingTypeId: this.fb.control(2),\n                PricePerGallon: this.fb.control(null),\n                Fees: this.intilizeFuelRequestFees(),\n            }),\n            FuelDeliveryDetails: this.fb.group({\n                Id: this.fb.control(null),\n                DeliveryTypeId: this.fb.control(2),\n                StartDate: this.fb.control(moment(new Date()).format('MM/DD/YYYY')),\n                EndDate: this.fb.control(null),\n                StartTime: this.fb.control('8:00 AM'),\n                EndTime: this.fb.control('5:00 PM'),\n                SingleDeliverySubTypes: this.fb.control(0),\n                PaymentMethods: this.fb.control(null),\n                PaymentTermId: this.fb.control(1),\n                NetDays: this.fb.control(0),\n                IsPrePostDipRequired: this.fb.control(null),\n                OrderEnforcementId: this.fb.control(1),\n            }),\n            FuelPricingDetails: this.fb.group({\n                Id: this.fb.control(null),\n                LeadRequestId: this.fb.control(null),\n                PricingTypeId: this.fb.control(2),\n                PricePerGallon: this.fb.control(null, Validators.required),\n                Code: this.fb.control(null),\n                TempCode: this.fb.control(null),\n                CodeId: this.fb.control(null),\n                CodeDescription: this.fb.control(null),\n                RackAvgTypeId: this.fb.control(1),\n                RackPrice: this.fb.control(0),\n                EnableCityRack: this.fb.control(null),\n                TerminalName: this.fb.control(null),\n                TempTerminalName: this.fb.control(null),\n                TerminalId: this.fb.control(null),\n                SupplierCostMarkupTypeId: this.fb.control(1),\n                SupplierCostMarkupValue: this.fb.control(0),\n                SupplierCost: this.fb.control(null),\n                SupplierCostTypeId: this.fb.control(null),\n                MarkertBasedPricingTypeId: this.fb.control(null),\n                CityGroupTerminalId: this.fb.control(null),\n                CityGroupTerminalName: this.fb.control(null),\n                CityGroupTerminalStateId: this.fb.control(null),\n                BrokerMarkUp: this.fb.control(null),\n                Currency: this.fb.control(null),\n                ExchangeRate: this.fb.control(null),\n                IsTierPricingRequired: this.fb.control(null),\n                DifferentFuelPrices: this.fb.control(null),\n                FormattedPricing: this.fb.control(null),\n                FuelTypeId: this.fb.control(null),\n                TierPricing: this.fb.group({\n                    TierPricingType: this.fb.control(TierPricingType.VolumeBased),\n                    IsResetCumulation: this.fb.control(null),\n                    AboveQuantityPricing: this.fb.control(null),\n                    Pricings: this.fb.array([]),\n                    ResetCumulationSetting: this.fb.group({\n                        CumulationType: this.fb.control(1),\n                        Day: this.fb.control(null),\n                        Date: this.fb.control(null),\n                    }),\n                    DisplayCumulationFrequency: this.fb.control(null)\n                }),\n                PricingSourceId: this.fb.control(1),\n                PricingNote: this.fb.control(null),\n                TempPricingCodeDetails: this.fb.control(null),\n                FuelPricingDetails: this.fb.group({\n                    PricingSourceId: this.fb.control(1),\n                    PricingCode: this.fb.control({ Id: null, Code: null, Description: null })\n                }),\n            }),\n            AdditionalDetailsViewModel: this.fb.group({\n                Id: this.fb.control(null),\n                IsAssetTracked: this.fb.control(null),\n                IsAssetDropStatusEnabled: this.fb.control(null)\n            })\n        });\n\n    }\n    get f() { return this.sourcingRequestForm.controls; }\n    removeValidator() {\n        this.f.CustomerDetails.get('CompanyName').setValidators([]);\n        this.f.CustomerDetails.get('CompanyName').updateValueAndValidity();\n    }\n    addValidators() {\n        let val = [Validators.required];\n        this.f.CustomerDetails.get('CompanyName').setValidators(val);\n        this.f.CustomerDetails.get('CompanyName').updateValueAndValidity();\n    }\n\n    initializeContactPersons(contactPersons: ContactPersonModel[]) {\n        let contactPersonsForm = this.fb.array([]);\n        for (var i = 0; i < contactPersons.length; i++) {\n            var _contactPersonForm = this.fb.group({\r\n                Name: this.fb.control(contactPersons[i].Name),\n                PhoneNumber: this.fb.control(contactPersons[i].PhoneNumber, [Validators.required, Validators.pattern(this.regexPhone)]),\n                Email: this.fb.control(contactPersons[i].Email, [Validators.required, Validators.email]),\r\n                IsValidMobileNumber: this.fb.control(contactPersons[i].IsPhoneNumberConfirmed)\r\n            });\r\n            contactPersonsForm.push(_contactPersonForm);\r\n        }\r\n        return contactPersonsForm;\r\n    }\n\n    initializeContactPerson(contactPerson: ContactPersonModel) {\n        return this.fb.group({\r\n            Name: this.fb.control(contactPerson.Name),\n            PhoneNumber: this.fb.control(contactPerson.PhoneNumber, [Validators.required, Validators.pattern(this.regexPhone)]),\n            Email: this.fb.control(contactPerson.Email, [Validators.required, Validators.email]),\r\n            IsPhoneNumberConfirmed: this.fb.control(contactPerson.IsPhoneNumberConfirmed)\r\n        });\r\n    }\n\n    intilizeFuelRequestFees() {\n        let _FRFArray = this.fb.array([]);\n        _FRFArray.push(this.fb.group({\n            FeeTypeId: this.fb.control(null),\n            FeeSubTypeId: this.fb.control(null),\n            FeeSubTypeName: this.fb.control(null),\n            Fee: this.fb.control(null),\n            FeeDetails: this.fb.control(null),\n            FeeConstraintTypeId: this.fb.control(null),\n            IncludeInPPG: this.fb.control(null),\n            OtherFeeTypeId: this.fb.control(null),\n        }));\n        return _FRFArray;\n    }\n\n    public getDetailsPage(Id: any) {\n        this.router.navigate(['SourcingRequest/Details/' + Id]);\n    }\n\n\n    clickNewPerson(isnew) {\n        this.isPersonNew = isnew;\n        if (isnew) {\n            this.f.CustomerDetails.get('Name').setValidators([Validators.required]);\n            this.f.CustomerDetails.get('UserId').setValidators([]);\n\n        } else {\n            this.f.CustomerDetails.get('UserId').setValidators([Validators.required]);\n            this.f.CustomerDetails.get('Name').setValidators([]);\n        }\n        this.f.CustomerDetails.get('Name').updateValueAndValidity();\n        this.f.CustomerDetails.get('UserId').updateValueAndValidity();\n\n    }\n    getPreferencesSettings() {\n        this.IsLoading = true;\n        let _this = this;\n        this.salesUserService.GetPreferencesSettings().subscribe(data => {\n            if (data) {\n                this.companyPreferenceSetting = data.IsSupressOrderPricing;\n                var FreightOnBoardType = this.FreightOnBoardTypesList.find(t => t.Id == data.FreightOnBoardType);\n                var truckload = this.TruckTypeLoadList.find(t => t.Id == data.TruckLoadType);\n                var truckLoadType;\n                if (truckload) {\n                    truckLoadType = truckload.Id;\n                }\n                if (FreightOnBoardType != null) {\n                    this.sourcingRequestForm.get('FreightOnBoardType').patchValue(FreightOnBoardType.Id);\n                }\n                this.sourcingRequestForm.get('TruckLoadType').patchValue(truckLoadType);\n                this.sourcingRequestForm.get('CustomerDetails').patchValue(data.CustomerDetails);\n                this.sourcingRequestForm.get('AddressDetails').patchValue(data.AddressDetails);\n                this.sourcingRequestForm.get('IsSupressOrderPricing').patchValue(data.IsSupressOrderPricing);\n                this.setCurrency(data.AddressDetails.Currency);\n                this.sourcingRequestForm.controls['FuelDetails']['controls']['FuelDisplayGroupId'].patchValue(data.FuelDetails.FuelDisplayGroupId);\n                this.sourcingRequestForm.controls['FuelDetails']['controls']['QuantityTypeId'].patchValue(data.FuelDetails.QuantityTypeId);\n\n                if (!_this.f.IsSupressOrderPricing.value) {\n                    _this.f.FuelPricingDetails.get('PricePerGallon').setValidators([Validators.required]);\n                }\n                _this.f.FuelPricingDetails.get('TierPricing').get('ResetCumulationSetting').get('CumulationType').setValue(1);\n                if (_this.pricingModuleComponent) {\n                    _this.pricingModuleComponent.setPricingCode();\n                }\n\n                if (!this.editSourcingId) {\n                    if (this.DispatchRegionList && this.DispatchRegionList.length == 1) {\n                        this.sourcingRequestForm.get('AddressDetails').get('DispatchRegionId').setValue(this.DispatchRegionList[0].Id);\n                    }\n                }\n                this.IsLoading = false;\n                this.pageloader = false;\n            }\n        });\n    }\n    getAllTPOCompanies() {\n        this.IsLoading = true;\n        this.salesUserService.GetAllTPOCompanies().subscribe((data => {\n            if (data) {\n                var listdata = data.map(item => {\n                    return {\n                        id: item.Id,\n                        text: item.Name\n                    }\n                });\n                this.AllTPOCompaniesList = listdata;\n\n                //this.IsLoading = false;\n            }\n            let esourcingId: number = this.route_active.snapshot.params.Id;\n            if (esourcingId && esourcingId > 0) {\n                this.editSourcingId = esourcingId;\n                this.getSourcingDetails();\n            } else {\n                this.getFuelProducts();\n                this.getPreferencesSettings();\n            }\n            this.IsLoading = false;\n        }));\n    }\n    public getSourcingCompanyContactPersons(event: any) {\n        var companyId = event;\n        this.IsLoading = true;\n\n        this.salesUserService.GetSourcingCompanyContactPersons(companyId).subscribe(data => {\n            if (data) {\n                this.CompanyContactPersonsList = data;\n                let companyname = this.AllTPOCompaniesList.filter(x => x.id == companyId);\n                this.sourcingRequestForm.get('CustomerDetails').get('CompanyName').setValue(companyname[0].text);\n                this.IsLoading = false;\n            } else {\n                this.IsLoading = false;\n            }\n        });\n    }\n    public getSourcingContactPersonDetails(userId: number) {\n        this.salesUserService.GetSourcingContactPersonDetails(userId).subscribe(data => {\n            if (data) {\n                this.CompanyContactPersonsDetails = data;\n                // this.CompanyContactPersonsDetails['IsNewCompany']=false;\n                this.sourcingRequestForm.get('CustomerDetails').get('PhoneNumber').setValue(this.CompanyContactPersonsDetails.PhoneNumber);\n                this.sourcingRequestForm.get('CustomerDetails').get('Email').setValue(this.CompanyContactPersonsDetails.Email);\n                // this.sourcingRequestForm.get('CustomerDetails').patchValue(this.CompanyContactPersonsDetails);\n            }\n        });\n    }\n\n    public getTruckLoadType() {\n        this.TruckTypeLoadList = [];\n        this.salesUserService.GetTruckLoadType().subscribe(data => {\n            if (data && data.length > 0) {\n                this.TruckTypeLoadList = data;\n                this.sourcingRequestForm.get('TruckLoadType').setValue(data[0].Id);\n            }\n        });\n    }\n    public getFreightOnBoardTypes() {\n        this.FreightOnBoardTypesList = [];\n        this.salesUserService.GetFreightOnBoardTypes().subscribe(data => {\n            if (data && data.length > 0) {\n                this.FreightOnBoardTypesList = data;\n                this.sourcingRequestForm.get('FreightOnBoardType').setValue(data[0].Id);\n            }\n        });\n    }\n\n    public getCountryList() {\n        this.salesUserService.GetCountryList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.countryList = data;\n            }\n        });\n    }\n\n    public getCurrecyList() {\n        this.salesUserService.GetCurrenyList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.currucyList = data;\n            }\n        });\n    }\n    public getUoMList() {\n        this.salesUserService.GetUoMList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.UomList = data;\n            }\n        });\n    }\n\n    public getStatesOfAllCountries(countryId?: number) {\n        this.salesUserService.GetStatesOfAllCountries(countryId).subscribe(data => {\n            if (data && data.length > 0) {\n                this.statesList = data;\n                this.filteredStatesList = this.statesList;\n            }\n        });\n    }\n    public getcountryGroupList() {\n        this.salesUserService.GetCountryGroupList(4).subscribe(data => {\n            if (data && data.length > 0) {\n                this.countryGroupList = data;\n            }\n        });\n    }\n\n    public getJobLists(companyId, isFtl, foAsTerminal) {\n        let companyName = this.AllTPOCompaniesList.find(t => t.id == companyId).text;\n        let ftlvalue = isFtl == \"FullTruckLoad\" ? true : false;\n        let tervalue = foAsTerminal == \"Terminal\" ? true : false;\n        this.salesUserService.GetJobLists(companyName, ftlvalue, tervalue).subscribe(data => {\n            if (data) {\n                let joblistdata = data.map(item => {\n                    return {\n                        id: item.Id,\n                        text: item.Name\n                    }\n                });\n                this.allJobList = joblistdata;\n            }\n        });\n    }\n    public getJobDetails(jobId: string, companyName: string) {\n        let job = this.allJobList.find(x => x.id == jobId);\n        if (job != null) {\n            this.salesUserService.GetJobDetails(job.text, companyName).subscribe(data => {\n                if (data) {\n                    this.sourcingRequestForm.get('AddressDetails').patchValue(data.AddressDetails);\n                }\n            });\n        }\n\n\n    }\n\n    public getFuelProducts() {\n        //this.f.FuelDetails.get('FuelTypeId').setValue(null);\n\n        let companyId = this.sourcingRequestForm.controls['CustomerDetails']['controls']['CompanyId'].value || 0;\n        let jobId = this.sourcingRequestForm.controls['AddressDetails']['controls']['JobId'].value || 0;\n\n        var productDisplayGroupId = this.f.FuelDetails.get('FuelDisplayGroupId').value ? this.f.FuelDetails.get('FuelDisplayGroupId').value : 1;\n        this.IsLoading = true;\n        this.salesUserService.GetFuelProducts(productDisplayGroupId, companyId, jobId).subscribe(data => {\n            if (data) {\n                this.FuelProductsList = data;\n                this.IsLoading = false;\n            } else {\n                this.IsLoading = false;\n            }\n        });\n    }\n    public getProductListByZip() {\n        //this.f.FuelDetails.get('FuelTypeId').setValue(null);\n        let zipCode = this.sourcingRequestForm.controls['AddressDetails']['controls']['ZipCode'].value;\n        this.IsLoading = true;\n        this.salesUserService.GetProductListByZip(zipCode).subscribe(data => {\n            if (data) {\n                this.FuelProductsList = data;\n                this.IsLoading = false;\n            } else {\n                this.IsLoading = false;\n            }\n        });\n    }\n\n    public getAllFeeTypes(companyId: any, currency: any, truckLoadType: any) {\n        this.salesUserService.GetAllFeeTypes(companyId, currency, truckLoadType).subscribe(data => {\n            if (data) {\n                this.FeeTypesList = data;\n            }\n        });\n    }\n    public getAllFeeSubTypes(feeTypeId: any, Currency: any) {\n        this.salesUserService.GetAllFeeSubTypes(feeTypeId, Currency).subscribe(data => {\n            if (data) {\n                this.FeeSubTypesList = data;\n            }\n        });\n    }\n    public getAllFeeConstraintTypes() {\n        this.salesUserService.GetAllFeeConstraintTypes().subscribe(data => {\n            if (data) {\n                this.FeeConstraintTypesList = data;\n            }\n        });\n    }\n    public getPaymentMethods() {\n        this.salesUserService.PaymentMethods().subscribe(data => {\n            if (data) {\n                this.PaymentMethodsList = data;\n            }\n        });\n    }\n    public getRackAvgPricingTypes() {\n        this.salesUserService.GetRackAvgPricingTypes().subscribe(data => {\n            if (data) {\n                this.RackAvgPricingTypesList = data;\n            }\n        });\n    }\n\n    addFees() {\n        let fee = this.sourcingRequestForm.get('FuelDetails').get('FuelRequestFees') as FormArray;\n        fee.push(\n            this.fb.group({\n                FeeTypeId: this.fb.control(null, Validators.required),\n                FeeSubTypeId: this.fb.control(null, Validators.required),\n                FeeSubTypeName: this.fb.control(null, Validators.required),\n                Fee: this.fb.control(null, Validators.required),\n                FeeDetails: this.fb.control(null, Validators.required),\n                FeeConstraintTypeId: this.fb.control(null, Validators.required),\n                IncludeInPPG: this.fb.control(null, Validators.required),\n                OtherFeeTypeId: this.fb.control(null, Validators.required),\n            })\n        );\n    }\n\n    public isSourcingCompanyExist() {\n        this.companyExits = false;\n        if (this.f.CustomerDetails.get('CompanyName').value) {\n            this.salesUserService.IsSourcingCompanyExist(this.f.CustomerDetails.get('IsNewCompany').value, this.f.CustomerDetails.get('CompanyName').value).subscribe(data => {\n                if (data != null || data != undefined) {\n                    this.companyExits = data;\n                }\n            });\n        }\n\n    }\n    public GetDispatchRegions() {\n        this.DispatchRegionList = [];\n        this.salesUserService.GetDispatchRegions().subscribe(data => {\n            if (data && data.length > 0) {\n                this.DispatchRegionList = data;\n                if (data.length == 1) {\n                    this.sourcingRequestForm.get('AddressDetails').get('DispatchRegionId').setValue(data[0].Id);\n                }\n            }\n        });\n    }\n\n    public getSourcingDetails() {\n        this.pageloader = true;\n        this.changeDetectorRef.detectChanges()\n        let _this = this;\n        // this.initailizeSourcingReqForm();\n        this.salesUserService.GetSourcingDetailsById(this.editSourcingId).subscribe(data => {\n            if (data) {\n                // this.sourcingRequestForm.patchValue(data);\n                this.sourcingRequestForm.get('Id').patchValue(data.Id);\n                this.sourcingRequestForm.get('FreightOnBoardType').patchValue(data.FreightOnBoardType);\n                this.sourcingRequestForm.get('TruckLoadType').patchValue(data.TruckLoadType);\n                this.sourcingRequestForm.get('AccountingCompanyId').patchValue(data.AccountingCompanyId);\n                this.sourcingRequestForm.get('DisplayRequestId').patchValue(data.DisplayRequestId);\n                this.sourcingRequestForm.get('RequestName').patchValue(data.RequestName);\n                this.sourcingRequestForm.get('RequestStatus').patchValue(data.RequestStatus);\n                this.sourcingRequestForm.get('SalesUserId').patchValue(data.SalesUserId);\n                this.sourcingRequestForm.get('IsSupressOrderPricing').patchValue(data.IsSupressOrderPricing);\n                if (!data.CustomerDetails.IsNewCompany) {\n                    this.getSourcingCompanyContactPersons(data.CustomerDetails.CompanyId);\n                    this.getJobLists(data.CustomerDetails.CompanyId, this.f.TruckLoadType.value, this.f.FreightOnBoardType.value);\n                }\n                if (data.CustomerDetails.UserId) {\n                    this.isPersonNew = false;\n                }\n                this.sourcingRequestForm.get('CustomerDetails').patchValue(data.CustomerDetails);\n                let contactPersons = this.sourcingRequestForm.get('CustomerDetails').get('ContactPersons') as FormArray;\n                if (data.CustomerDetails && data.CustomerDetails.ContactPersons && data.CustomerDetails.ContactPersons.length > 0) {\n                    for (var i = 0; i < data.CustomerDetails.ContactPersons.length; i++) {\n                        contactPersons.push(this.initializeContactPerson(data.CustomerDetails.ContactPersons[i]));\r\n                    }\n                }\n                this.sourcingRequestForm.get('AddressDetails').patchValue(data.AddressDetails);\n                this.sourcingRequestForm.get('FuelDetails').patchValue(data.FuelDetails);\n                this.LeadFees = data.FuelDetails.Fees;\n                this.sourcingRequestForm.get('FuelDeliveryDetails').patchValue(data.FuelDeliveryDetails);\n                this.sourcingRequestForm.get('AdditionalDetailsViewModel').patchValue(data.AdditionalDetailsViewModel);\n                //this.getSourcingCityGroupTerminals(data.AddressDetails.StateId,(data.FuelPricingDetails.Code==\"AXIS\") ? 1 : 2);\n                this.PrcingCodevalue = data.FuelPricingDetails.Code;\n                this.GeneralNotesHistory = data.GeneralNotesHistory;\n                // this.sourcingRequestForm.get('FuelPricingDetails').patchValue(data.FuelPricingDetails);\n                // this.sourcingRequestForm.get('FuelPricingDetails').get('TempCode').patchValue(data.FuelPricingDetails);\n                // this.sourcingRequestForm.get('FuelPricingDetails').get('TempTerminalName').patchValue(data.FuelPricingDetails.TerminalName);\n\n                if (_this.pricingModuleComponent) {\n                    _this.pricingModuleComponent.patchExistingPricingDetails(data.FuelPricingDetails);\n                }\n\n                this.UpdateViewedStatus();\n                this.setCurrency(data.AddressDetails.Currency);\n\n                if (!data.CustomerDetails.IsNewCompany) {\n                    this.f.CustomerDetails.get('TempCompany').setValue([{ id: data.CustomerDetails.CompanyId, text: data.CustomerDetails.CompanyName }]);\n                }\n                if (!data.AddressDetails.IsNewJob) {\n                    this.f.AddressDetails.get('TempJob').setValue([{ id: data.AddressDetails.JobId, text: data.AddressDetails.JobName }]);\n                }\n\n                this.getFuelProducts();\n                this.isRegularBuyerUpdate(data.CustomerDetails.CompanyId, true);\n\n                this.pageloader = false;\n                this.changeDetectorRef.detectChanges();\n            }\n        });\n    }\n\n    onSubmit() {\n        this.formSubmited = true;\n        this.resetPOValidation();\n        this.setSaveValidations();\n        if (this.sourcingRequestForm.invalid || this.companyExits) {\n            return false;\n        }\n\n        if (this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\n            let pricings = this.f.FuelPricingDetails.get('TierPricing').get('Pricings') as FormArray;\n            pricings.controls.forEach((pricing: FormGroup) => {\n                pricing.get('UoM').setValue(this.UoM);\n                pricing.get('Currency').setValue(this.UoM);\n            })\n        }\n\n        if (this.editSourcingId > 0) {\n            this.pageloader = true;\n            this.changeDetectorRef.detectChanges()\n            this.salesUserService.SaveEditSourcingDetails(this.sourcingRequestForm.getRawValue()).subscribe(data => {\n                this.pageloader = false;\n                this.changeDetectorRef.detectChanges()\n                if (data && data.StatusCode == 0) {\n                    Declarations.msgsuccess(\"Request Updated successfully\", undefined, undefined);\n                    this.router.navigate(['SalesUser/SourcingRequest/Index']);\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                    return;\n                }\n            });\n        } else {\n            this.pageloader = true;\n            this.changeDetectorRef.detectChanges()\n            this.salesUserService.CreateSourcingRequest(this.sourcingRequestForm.getRawValue()).subscribe(data => {\n                this.pageloader = false;\n                this.changeDetectorRef.detectChanges()\n                if (data && data.StatusCode == 0) {\n                    Declarations.msgsuccess(\"Request created successfully.\", undefined, undefined);\n                    this.router.navigate(['SalesUser/SourcingRequest/Index']);\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                    return;\n                }\n            });\n        }\n    }\n\n    setSaveValidations() {\n        if (this.f.CustomerDetails.get('IsNewCompany').value) {\n            this.f.CustomerDetails.get('Name').setValidators([Validators.required]);\n            this.f.CustomerDetails.get('Name').updateValueAndValidity();\n        } else {\n            if (this.isPersonNew) {\n                this.f.CustomerDetails.get('Name').setValidators([Validators.required]);\n                this.f.CustomerDetails.get('Name').updateValueAndValidity();\n            } else {\n                this.f.CustomerDetails.get('UserId').setValidators([Validators.required]);\n                this.f.CustomerDetails.get('UserId').updateValueAndValidity();\n            }\n        }\n\n        if (this.f.FuelDetails.get('QuantityTypeId').value == 1) {\n            this.f.FuelDetails.get('Quantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('Quantity').updateValueAndValidity();\n        } else if (this.f.FuelDetails.get('QuantityTypeId').value == 2) {\n            this.f.FuelDetails.get('MinimumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MinimumQuantity').updateValueAndValidity();\n\n            this.f.FuelDetails.get('MaximumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MaximumQuantity').updateValueAndValidity();\n        }\n\n        this.setNetDaysValidation(this.sourcingRequestForm.get('IsSupressOrderPricing').value);\n    }\n    createPO() {\n        this.setPOValidation();\n        this.formSubmited = true;\n        this.pageloader = true;\n        if (this.sourcingRequestForm.valid && !this.companyExits) {\n            this.pageloader = true;\n            this.salesUserService.CreateOrderFromSourcingRequest(this.sourcingRequestForm.value).subscribe(data => {\n                if (data.StatusCode == 0) {\n                    Declarations.msgsuccess(\"PO created successfully.\", undefined, undefined);\n                    this.router.navigate([]).then(result => { window.location.href = \"/Supplier/Order/View\"; });\n                    this.pageloader = false;\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                    this.pageloader = false;\n                    return;\n                }\n            });\n        } else {\n            this.pageloader = false;\n        }\n    }\n\n    setPOValidation() {\n        let required = [Validators.required];\n        this.f.TruckLoadType.setValidators(required);\n        this.f.TruckLoadType.updateValueAndValidity();\n\n        this.f.FreightOnBoardType.setValidators(required);\n        this.f.FreightOnBoardType.updateValueAndValidity();\n\n        // this.f.AccountingCompanyId.setValidators(required);\n        // this.f.AccountingCompanyId.updateValueAndValidity();\n\n        // this.f.DisplayRequestId.setValidators(required);\n        // this.f.DisplayRequestId.updateValueAndValidity();\n\n        // this.f.RequestName.setValidators(required);\n        // this.f.RequestName.updateValueAndValidity();\n\n        if (this.f.FuelDeliveryDetails.get('DeliveryTypeId').value == 1) {\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').setValidators(required);\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').updateValueAndValidity();\n        } else {\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').setValidators([]);\n            this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').updateValueAndValidity();\n        }\n\n        this.f.FuelDeliveryDetails.get('StartDate').setValidators(required);\n        this.f.FuelDeliveryDetails.get('StartDate').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('StartTime').setValidators(required);\n        this.f.FuelDeliveryDetails.get('StartTime').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('EndTime').setValidators(required);\n        this.f.FuelDeliveryDetails.get('EndTime').updateValueAndValidity();\n\n        if (this.f.FuelDetails.get('QuantityTypeId').value == 1) {\n            this.f.FuelDetails.get('Quantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('Quantity').updateValueAndValidity();\n        } else if (this.f.FuelDetails.get('QuantityTypeId').value == 2) {\n            this.f.FuelDetails.get('MinimumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MinimumQuantity').updateValueAndValidity();\n\n            this.f.FuelDetails.get('MaximumQuantity').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MaximumQuantity').updateValueAndValidity();\n        } else {\n            this.f.FuelDetails.get('Quantity').setValidators([Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('Quantity').updateValueAndValidity();\n            this.f.FuelDetails.get('MinimumQuantity').setValidators([Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MinimumQuantity').updateValueAndValidity();\n            this.f.FuelDetails.get('MaximumQuantity').setValidators([Validators.pattern('^[0-9.-]*$')]);\n            this.f.FuelDetails.get('MaximumQuantity').updateValueAndValidity();\n        }\n\n        this.f.AddressDetails.get('CountyName').setValidators(required);\n        this.f.AddressDetails.get('CountyName').updateValueAndValidity();\n        this.f.AddressDetails.get('StateId').setValidators(required);\n        this.f.AddressDetails.get('StateId').updateValueAndValidity();\n        this.f.AddressDetails.get('ZipCode').setValidators(required);\n        this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\n        this.f.AddressDetails.get('Address').setValidators(required);\n        this.f.AddressDetails.get('Address').updateValueAndValidity();\n        this.setNetDaysValidation(this.sourcingRequestForm.get('IsSupressOrderPricing').value);\n\n\n        this.f.CustomerDetails.get('PhoneNumber').setValidators(required);\n        this.f.CustomerDetails.get('PhoneNumber').updateValueAndValidity();\n        this.f.CustomerDetails.get('Email').setValidators(required);\n        this.f.CustomerDetails.get('Email').updateValueAndValidity();\n    }\n\n    setNetDaysValidation(isSuppressPricing: boolean) {\n        if (this.f.FuelDeliveryDetails.get('PaymentTermId').value == 1 && !isSuppressPricing) {\n            this.f.FuelDeliveryDetails.get('NetDays').setValidators([Validators.required, Validators.min(1)]);\n            this.f.FuelDeliveryDetails.get('NetDays').updateValueAndValidity();\n        } else {\n            this.f.FuelDeliveryDetails.get('NetDays').setValidators([]);\n            this.f.FuelDeliveryDetails.get('NetDays').updateValueAndValidity();\n        }\n    }\n    resetPOValidation() {\n\n        this.f.TruckLoadType.setValidators([]);\n        this.f.TruckLoadType.updateValueAndValidity();\n\n        this.f.FreightOnBoardType.setValidators([]);\n        this.f.FreightOnBoardType.updateValueAndValidity();\n\n        this.f.AccountingCompanyId.setValidators([]);\n        this.f.AccountingCompanyId.updateValueAndValidity();\n\n        this.f.DisplayRequestId.setValidators([]);\n        this.f.DisplayRequestId.updateValueAndValidity();\n\n        this.f.RequestName.setValidators([]);\n        this.f.RequestName.updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').setValidators([]);\n        this.f.FuelDeliveryDetails.get('SingleDeliverySubTypes').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('StartDate').setValidators([]);\n        this.f.FuelDeliveryDetails.get('StartDate').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('StartTime').setValidators([]);\n        this.f.FuelDeliveryDetails.get('StartTime').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('EndTime').setValidators([]);\n        this.f.FuelDeliveryDetails.get('EndTime').updateValueAndValidity();\n\n        this.f.FuelDeliveryDetails.get('NetDays').setValidators([]);\n        this.f.FuelDeliveryDetails.get('NetDays').updateValueAndValidity();\n\n        this.f.CustomerDetails.get('PhoneNumber').setValidators([]);\n        this.f.CustomerDetails.get('PhoneNumber').updateValueAndValidity();\n        this.f.CustomerDetails.get('Email').setValidators([]);\n        this.f.CustomerDetails.get('Email').updateValueAndValidity();\n        this.f.AddressDetails.get('ZipCode').setValidators([]);\n        this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\n        this.f.AddressDetails.get('Address').setValidators([]);\n        this.f.AddressDetails.get('Address').updateValueAndValidity();\n        this.f.AddressDetails.get('CountyName').setValidators([]);\n        this.f.AddressDetails.get('CountyName').updateValueAndValidity();\n    }\n\n\n    getAddress() {\n\n        let address = this.f.AddressDetails.get('Address').value || '';\n        let state = this.f.AddressDetails.get('StateName').value || '';\n        let country = this.f.AddressDetails.get('CountryCode').value || ''\n        let city = this.f.AddressDetails.get('City').value || '';\n        let zipcode = this.f.AddressDetails.get('ZipCode').value || '';\n\n        if (address == '' || state == '' || country == '' || zipcode == '')\n            return;\n\n        address = address + \" \" + city + \" \" + state + \" \" + country + \" \" + zipcode;\n\n        this.salesUserService.GetAddress(address).subscribe((data) => {\n            this.updateAddressData(data)\n        })\n    }\n\n    stateChanged() {\n        if (this.pricingModuleComponent) {\n            this.pricingModuleComponent.getCityGroupTerminals();\n        }\n        this.getAddress();\n        this.setBillableQuantity();\n    }\n\n    setBillableQuantity() {\n        let state = this.statesList.find(st => st.StateId == this.f.AddressDetails.get('StateId').value);\n        if (state && state.QuantityIndicatorId) {\n            this.f.FuelDetails.get('FuelQuantity').get('QuantityIndicatorTypes').setValue(state.QuantityIndicatorId);\n        }\n    }\n\n    public acceptRequest() {\n        this.salesUserService.ChangesSourcingRequestStatus(this.RequestStatus.Accepted, this.editSourcingId).subscribe(data => {\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(\"Request Accepted.\", undefined, undefined);\n                this.router.navigate(['SalesUser/SourcingRequest/Index']);\n            } else {\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                return;\n            }\n        });\n    }\n\n    public loseRequest() {\n        this.salesUserService.ChangesSourcingRequestStatus(this.RequestStatus.Lost, this.editSourcingId).subscribe(data => {\n            if (data.StatusCode == 0) {\n                Declarations.msginfo(\"Request Lost.\", undefined, undefined);\n                this.router.navigate(['SalesUser/SourcingRequest/Index']);\n            } else {\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                return;\n            }\n        });\n    }\n    // openPriceCodeModal(pricingcodeModal) {\n    //   this.getPricingCodes();\n    //   this.modalService.open(pricingcodeModal, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true });\n    // }\n\n    public isCitySourcingGroupTerminalPriceAvailable(jobId: any, fueltypeId: any, selectedCityRackId: any, lattitude?: any, longitude?: any, countryCode?: string, sourceId?: any) {\n        this.salesUserService.IsCitySourcingGroupTerminalPriceAvailable(jobId, fueltypeId, selectedCityRackId, lattitude, longitude, countryCode, sourceId).subscribe(data => {\n            if (data) {\n                this.CitySourcingGroupTerminalPriceAvailableList = data;\n            }\n        });\n    }\n    // async getSourcingCityGroupTerminals(stateId: any, sourceId: any) {\n    //   this.salesUserService.GetSourcingCityGroupTerminals(stateId,sourceId).subscribe(data => {\n    //       if (data) {\n    //               this.SourcingCityGroupTerminalsList = data;\n    //           }\n    //       });\n    //   }\n    // public getClosedTerminal(event) {\n    //  var fuelTypeId=this.f.FuelDetails.get('FuelTypeId').value;\n    //  var latitude=this.f.AddressDetails.get('Latitude').value;\n    //  var longitude=this.f.AddressDetails.get('Longitude').value;\n    //  var countryId=this.f.AddressDetails.get('CountryId').value;\n    //  var pricingCodeId=this.f.FuelPricingDetails.get('CodeId').value;\n    //  var CityGroupTerminalId=this.f.FuelPricingDetails.get('CityGroupTerminalId').value;\n    // //  var terminal= this.SourcingCityGroupTerminalsList.find(t => t.Id == CityGroupTerminalId).Name;\n    // var terminal= \"\";\n    // var pricingSourceId=this.f.FuelPricingDetails.get('PricingSourceId').value;\n\n    //  if(pricingSourceId==2){\n    //   //  this.getOpisTerminals(CityGroupTerminalId,latitude,longitude,countryId,terminal,pricingSourceId);\n\n    //       this.salesUserService.GetOpisTerminals(CityGroupTerminalId, latitude, longitude, countryId, terminal, pricingSourceId).subscribe(data => {\n    //           if (data) {\n    //                   this.ClosedTerminalList = data;\n    //                   event.stopPropagation();\n    //                   this.approveTerminalAuto.open();\n    //               }\n    //           });\n\n    //  }else{\n    //   this.salesUserService.GetClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId).subscribe(data => {\n    //     if (data) {\n    //             this.ClosedTerminalList = data;\n    //         }\n    //     });\n    //  }\n    // }\n\n    // getApprovedTerminal(event){\n    //   var fuelTypeId=this.f.FuelDetails.get('FuelTypeId').value;\n    //   var latitude=this.f.AddressDetails.get('Latitude').value;\n    //   var longitude=this.f.AddressDetails.get('Longitude').value;\n    //   var countryId=this.f.AddressDetails.get('CountryId').value;\n    //   var pricingCodeId=this.f.FuelPricingDetails.get('CodeId').value;\n    //   var CityGroupTerminalId=this.f.FuelPricingDetails.get('CityGroupTerminalId').value;\n    //   var terminal=event;\n    //   var pricingSourceId=this.f.FuelPricingDetails.get('PricingSourceId').value;\n    //   if(pricingSourceId==2){\n    //     this.getOpisTerminals(CityGroupTerminalId,latitude,longitude,countryId,terminal,pricingSourceId);\n    //   }else{\n    //    this.salesUserService.GetClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId).subscribe(data => {\n    //      if (data) {\n    //              this.ClosedTerminalList = data;\n    //          }\n    //      });\n    //   }\n    // }\n\n    public getOpisTerminals(cityRackId: any, latitude: any, longitude: any, countryId: any, terminal: string, source: any) {\n        this.salesUserService.GetOpisTerminals(cityRackId, latitude, longitude, countryId, terminal, source).subscribe(data => {\n            if (data) {\n                this.ClosedTerminalList = data;\n                this.approveTerminalAuto.open();\n            }\n        });\n    }\n    // setTermialvalue(event){\n    //   this.f.FuelPricingDetails.get('TerminalName').patchValue(event.Name);\n    // }\n    // getPricingCodes(isFromControl?: any, prefix?: any) {\n    //   this.isPriceCodeLoading=true;\n    //   var filterData = {};\n    //   if (!prefix) {\n    //     prefix = \"\";\n    //   }\n    //   if (isFromControl) {\n    //     filterData = {\n    //       \"PricingSourceId\": this.f.FuelPricingDetails.get('PricingSourceId').value,\n    //       \"PricingTypeId\": this.f.FuelPricingDetails.get('PricingTypeId').value,\n    //       \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\n    //       \"feedTypeId\": 0,\n    //       \"fuelClassTypeId\": 0,\n    //       \"Prefix\": prefix\n    //     }\n    //   } else {\n    //     filterData = {\n    //       \"PricingSourceId\": this.f.FuelPricingDetails.get('PricingSourceId').value,\n    //       \"PricingTypeId\": this.f.FuelPricingDetails.get('PricingTypeId').value,\n    //       \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\n    //       \"feedTypeId\": this.pricingfeedTypeId,\n    //       \"fuelClassTypeId\": this.pricingfuelClassTypeId,\n    //       \"Prefix\": \"\"\n    //     }\n\n    //   }\n\n    //   this.salesUserService.GetPricingCodes(filterData).subscribe(data => {\n    //     if (data) {\n    //       this.pricingCodes = data.PricingCodes;\n    //       this.isPriceCodeLoading=false;\n    //     }\n    //   });\n    // }\n    // getSelectedPricingCode(item: any) {\n    //   this.modalService.dismissAll();\n    //   var pricingCodeDisplayData = this.getPricingDisplayData(item);\n    //   if (item) {\n    //     this.f.FuelPricingDetails.get('Code').patchValue(item.Code);\n    //     this.f.FuelPricingDetails.get('CodeId').patchValue(item.Id);\n    //     this.f.FuelPricingDetails.get('PricingTypeId').patchValue(item.PricingTypeId);\n    //     this.f.FuelPricingDetails.get('CodeDescription').patchValue(pricingCodeDisplayData);\n    //     this.f.FuelPricingDetails.get('PricingSourceId').patchValue(item.PricingSourceId);\n    //   }\n    //   if (item.PricingSourceId == 1) {\n    //     this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\n    //   }\n    //   else {\n    //     this.f.FuelPricingDetails.get('EnableCityRack').setValue(true);\n    //      this.getSourcingCityGroupTerminals(this.f.AddressDetails.get('StateId').value,this.f.FuelPricingDetails.get('PricingSourceId').value)\n    //   }\n    //   this.setRackTerminalValidation();\n    // }\n\n    setRackTerminalValidation() {\n        let isChecked = this.f.FuelPricingDetails.get('EnableCityRack').value;\n        if (isChecked) {\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').setValidators([Validators.required]);\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').updateValueAndValidity();\n        }\n        else {\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').setValidators([]);\n            this.f.FuelPricingDetails.get('CityGroupTerminalId').updateValueAndValidity();\n        }\n    }\n    getPricingDisplayData(item) {\n        var displayData = '';\n        if (item != undefined || item != null) {\n            if (item.PricingTypeId == 2) {\n                displayData += item.PricingSource + ', ' + \"Fixed\";\n            }\n            else if (item.PricingTypeId == 4) {\n                displayData += item.PricingSource + ', ' + \"Fuel Cost\";\n            }\n            else if (item.PricingTypeId == 1) {\n                displayData += item.PricingSource + ', ' + item.RackAvgPricingType;\n                if (item.PricingSourceId == 2 || item.PricingSourceId == 3) {\n                    displayData += ', ' + item.FeedType + ', ' + item.WeekendPricingDay;\n                }\n                if (item.PricingSourceId == 2) {\n                    displayData += ', ' + item.FuelClassType + ', ' + item.QuantityIndicator;\n                }\n            }\n        }\n        return displayData;\n    }\n\n    public getAddressByZip() {\n        var zipCode = this.f.AddressDetails.get('ZipCode').value;\n        if (zipCode) {\n            this.salesUserService.GetAddressByZip(zipCode).subscribe(data => {\n                if (data) {\n                    this.f.AddressDetails.get('CountryName').patchValue(data.CountryName);\n                    var country = this.countryList.find(t => t.Code.includes(data.CountryCode));\n                    if (country) {\n                        var countryId = country.Id;\n                        this.f.AddressDetails.get('CountryCode').patchValue(countryId);\n                        if (countryId == 1) {\n                            this.f.AddressDetails.get('CountryId').patchValue(countryId);\n                            this.f.AddressDetails.get('Currency').patchValue(1);\n                            this.f.AddressDetails.get('UOM').patchValue(1);\n                        } else {\n                            this.f.AddressDetails.get('CountryId').patchValue(countryId);\n                            this.f.AddressDetails.get('Currency').patchValue(2);\n                            this.f.AddressDetails.get('UOM').patchValue(2);\n                        }\n\n                        this.f.AddressDetails.get('Address').patchValue(data.Address);\n                        this.f.AddressDetails.get('CountyName').patchValue(data.CountyName);\n                        this.f.AddressDetails.get('City').patchValue(data.City);\n                        var stateId = this.statesList.find(x => x.StateCode == data.StateCode).StateId;\n                        this.f.AddressDetails.get('StateId').patchValue(stateId);\n                        this.f.AddressDetails.get('StateName').patchValue(data.StateName);\n                        this.f.AddressDetails.get('Latitude').patchValue(data.Latitude);\n                        this.f.AddressDetails.get('Longitude').patchValue(data.Longitude);\n                        this.mapConstants.CenterLat = data.Latitude;\n                        this.mapConstants.CenterLon = data.Longitude;\n                        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\n                    }\n                }\n            });\n        }\n\n    }\n\n    // addValidationPrice(){\n    //   let required = [Validators.required];\n    //   if (this.f.FuelPricingDetails.get('PricingTypeId').value == 1) {\n    //     this.f.FuelPricingDetails.get('Code').setValidators(required);\n    //     this.f.FuelPricingDetails.get('Code').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('RackPrice').setValidators(required);\n    //     this.f.FuelPricingDetails.get('RackPrice').updateValueAndValidity();\n    //   }if(this.f.FuelPricingDetails.get('PricingTypeId').value == 4){\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').setValidators(required);\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('PricePerGallon').setValidators([]);\n    //     this.f.FuelPricingDetails.get('PricePerGallon').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('Code').setValidators([]);\n    //     this.f.FuelPricingDetails.get('Code').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('RackPrice').setValidators([]);\n    //     this.f.FuelPricingDetails.get('RackPrice').updateValueAndValidity();\n    //   } else if(this.f.FuelPricingDetails.get('PricingTypeId').value == 2){\n    //     this.f.FuelPricingDetails.get('PricePerGallon').setValidators(required);\n    //     this.f.FuelPricingDetails.get('PricePerGallon').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('Code').setValidators([]);\n    //     this.f.FuelPricingDetails.get('Code').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('RackPrice').setValidators([]);\n    //     this.f.FuelPricingDetails.get('RackPrice').updateValueAndValidity();\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').setValidators([]);\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').updateValueAndValidity();\n\n\n    //   }\n    // }\n\n    getUserContext() {\n        this.salesUserService.GetUserContext().subscribe(data => {\n            this.UserContext = data;\n        })\n    }\n    public onChangeMobile(event: any) {\n        if (this.f.CustomerDetails.get('PhoneNumber').value) {\n            this.salesUserService.IsPhoneNumberValid(this.f.CustomerDetails.get('PhoneNumber').value).subscribe(data => {\n                this.isValidMobile = data;\n            })\n        } else {\n            this.isValidMobile = true;\n        }\n\n    }\n\n    markerDragEnd(event) {\n        this.confirmationDialogService.confirm('Map update', 'Geo Codes shifted to a new location!')\n            .then((confirmed) => (confirmed == true) ? this.updateGeoCode(event.coords.lat, event.coords.lng) : this.previousLatLon())\n            .catch(() => this.previousLatLon());\n    }\n\n    updateGeoCode(lat, lng) {\n        this.salesUserService.GetAddressByLongLat(lat, lng).subscribe(data => {\n            this.updateAddressData(data);\n        })\n    }\n    public previousLatLon() {\n        this.mapConstants.CenterLat = this.f.AddressDetails.get('Latitude').value;\n        this.mapConstants.CenterLon = this.f.AddressDetails.get('Longitude').value;\n    }\n\n    public UpdateViewedStatus() {\n        this.salesUserService.UpdateViewedStatus(true, this.editSourcingId).subscribe(data => {\n        })\n    }\n    public onCancel() {\n        this.router.navigate(['SalesUser/SourcingRequest/Index']);\n    }\n\n    countryChanged() {\n        this.f.AddressDetails.get('StateId').setValue(null)\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\n        (this.f.AddressDetails.get('CountryId').value == 2) ? this.UoM = 2 : this.UoM = 1;\n        this.f.AddressDetails.get('UOM').setValue(this.UoM);\n    }\n    countryGroupChanged(selectedCountryGroupId: any) {\n        if (selectedCountryGroupId) {\n            var countryGroup = selectedCountryGroupId.target.value;\n            if (countryGroup === 'Select') {\n                this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\n                this.f.AddressDetails.get('StateId').setValue(null)\n            }\n            else {\n                this.filteredStatesList = this.statesList.filter(s => s.CountryGroupId == countryGroup) || [];\n                this.f.AddressDetails.get('StateId').setValue(null)\n            }\n        }\n    }\n    updateAddressData(address: Geocode) {\n        let countryId = (address.CountryCode == 'US') ? 1 : (address.CountryCode == 'CA' ? 2 : this.f.AddressDetails.get('CountryId').value);\n        let state = this.statesList.find(st => st.StateName.toLowerCase() == address.StateName.toLowerCase());\n        let stateId = (state && state.StateId) ? state.StateId : this.f.AddressDetails.get('StateId').value;\n\n        this.f.AddressDetails.get('Address').patchValue(address.Address);\n        this.f.AddressDetails.get('City').patchValue(address.City);\n        this.f.AddressDetails.get('ZipCode').patchValue(address.ZipCode);\n        this.f.AddressDetails.get('CountyName').patchValue(address.CountyName);\n        this.f.AddressDetails.get('CountryCode').patchValue(address.CountryCode);\n        this.f.AddressDetails.get('CountryId').patchValue(countryId);\n        this.f.AddressDetails.get('StateName').patchValue(address.StateName);\n        this.f.AddressDetails.get('StateId').patchValue(stateId);\n\n        if (address.Latitude) {\n            this.f.AddressDetails.get('Latitude').patchValue(address.Latitude);\n            this.f.AddressDetails.get('Longitude').patchValue(address.Longitude);\n        }\n\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\n        this.UoM = countryId == 2 ? 2 : 1;\n\n    }\n\n    // changePricingCode(){\n    //   if(this.f.FuelPricingDetails.get('PricingTypeId').value == 2){\n    //     this.f.FuelPricingDetails.get('Code').patchValue('A-120000');\n    //     this.f.FuelPricingDetails.get('Code').patchValue('');\n    //     this.f.FuelPricingDetails.get('RackAvgTypeId').patchValue('');\n    //     this.f.FuelPricingDetails.get('RackPrice').patchValue('');\n    //     this.f.FuelPricingDetails.get('CityGroupTerminalId').patchValue('');\n    //     this.f.FuelPricingDetails.get('TerminalName').patchValue('');\n    //   }else if(this.f.FuelPricingDetails.get('PricingTypeId').value == 4){\n    //     this.f.FuelPricingDetails.get('Code').patchValue('A-140000');\n    //     this.f.FuelPricingDetails.get('RackAvgTypeId').patchValue('');\n    //     this.f.FuelPricingDetails.get('RackPrice').patchValue('');\n    //     this.f.FuelPricingDetails.get('CityGroupTerminalId').patchValue('');\n    //     this.f.FuelPricingDetails.get('TerminalName').patchValue('');\n    //   }else if(this.f.FuelPricingDetails.get('PricingTypeId').value == 1){\n    //     this.f.FuelPricingDetails.get('Code').patchValue('');\n    //     // this.f.FuelPricingDetails.get('PricePerGallon').patchValue('');\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupValue').patchValue('');\n    //     this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId').patchValue('');\n    //   }\n    // }\n\n    setCurrency(Currency: any) {\n        this.UoM = Currency;\n        if (Currency == \"1\") {\n            this.displayCurrancy = \"USD\";\n        }\n        else if (Currency == \"2\") {\n            this.displayCurrancy = \"CAD\";\n        }\n    }\n    //ToogleNotes(){\n    //  this.isShowNote= !this.isShowNote;\n    //}\n\n    deliveryTypeIdChanged(deliveryTypeId: number) {\n        if (deliveryTypeId == 1) {\n            this.f.FuelPricingDetails.get('TierPricing').get('TierPricingType').setValue(2);\n        }\n    }\n    updateFormControlValidators(control: any, validators: any[]) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n    }\n\n    deliveryTypeChanged(type: number) {\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\n        //SET VALIDATION\n        this.setFuelTypevalidation(type);\n        //GET PRODUCTS\n        if (type == 1 || type == 2) {\n            this.getFuelProducts();\n        }\n        else if (type == 4) {\n            this.getProductListByZip();\n        }\n        if (type == 3 && this.pricingModuleComponent) {\n            this.f.FuelPricingDetails.get('PricingTypeId').setValue(2);\n            //DONT UPDATE VALIDATION IF TIER PRICING ALREADY CHECKED\n            if (!this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\n                this.pricingModuleComponent.pricingTypeChanged(2)\n            }\n        }\n    }\n    setFuelTypevalidation(type: number) {\n        //other\n        if (type == 3) {\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), []);\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), [Validators.required]);\n        }\n        //In Location Area//Common//Less common\n        else {\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), [Validators.required]);\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), []);\n        }\n    }\n    UpdateSuppressPricing(value: boolean) {\n        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(value);\n        this.setNetDaysValidation(value);\n    }\n    isRegularBuyerUpdate(companyId: number, isEditRequest: boolean) {\n\n        if (companyId > 0) {\r\n            this.salesUserService.GetValidTPOCompany(companyId).subscribe(data => {\n                this.f.IsRegularBuyer.setValue(!data);\n                if (!isEditRequest) {\r\n                    if (data) {\r\n                        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(this.companyPreferenceSetting);\n                        this.pricingModuleComponent.toggleSuppressPricing(this.companyPreferenceSetting);\n                    }\r\n                    else {\r\n                        this.sourcingRequestForm.get('IsSupressOrderPricing').setValue(false);\r\n                        this.pricingModuleComponent.toggleSuppressPricing(false);\r\n                        this.f.AddressDetails['controls']['IsNewJob'].setValue(false);\r\n                        this.clickNewPerson(false);\r\n                    }\r\n                }\r\n            });\n        }\n    }\n    ClearAddress() {\n        this.f.AddressDetails['controls']['JobId'].setValue(null);\n        this.f.AddressDetails['controls']['JobName'].setValue(null);\n        this.f.AddressDetails['controls']['DisplayJobID'].setValue(null);\r\n        this.f.AddressDetails['controls']['Address'].setValue(null);\r\n        this.f.AddressDetails['controls']['ZipCode'].setValue(null);\r\n        this.f.AddressDetails['controls']['City'].setValue(null);\r\n        this.f.AddressDetails['controls']['CountyName'].setValue(null);\r\n        this.f.AddressDetails['controls']['StateId'].setValue(null);\r\n        this.f.AddressDetails['controls']['Latitude'].setValue(null);\r\n        this.f.AddressDetails['controls']['Longitude'].setValue(null);\r\n        this.f.AddressDetails['controls']['TimeZoneName'].setValue(null);\r\n    }\n}\n","<div class=\"loader\" *ngIf=\"pageloader\">\n    <div class=\"loading-content text-center\">\n        <div class=\"spinner\"></div>\n    </div>\n</div>\n<div class=\"create-sourcing-request-container\">\n    <form [formGroup]=\"sourcingRequestForm\">\n        <div class=\"row\">\n            <div class=\"col-9\">\n                <div class=\"row\" formGroupName=\"CustomerDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well col-sm-12\">\n                            <div class=\"row\">\n                                <div class=\"col-4\">\n                                    <span class=\"badge badge-pill badge-success bg-success shadow-sm animated flash infinite\">\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Submitted\">\n                                            New\n                                        </span>\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Modified\">\n                                            WIP\n                                        </span>\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Accepted ||\n                                                                                  sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.AcceptedAndModified\">\n                                            Sourced\n                                        </span>\n                                        <span *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Lost\">\n                                            Lost\n                                        </span>\n                                    </span>\n                                    <h4>Customer Information</h4>\n                                </div>\n\n                                <div class=\"col-8\">\n                                    <div class=\"float-right\">\n                                        <input id=\"Submit\"\n                                               *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Accepted || sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.AcceptedAndModified\"\n                                               type=\"button\" value=\"Create PO\" mwlConfirmationPopover\n                                               [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\"\n                                               placement=\"left\" (confirm)=\"createPO()\"\n                                               (cancel)=\"cancelClicked = true\"\n                                               class=\"btn btn-lg btn-primary btnSubmit\">\n                                        <input id=\"Accept\"\n                                               *ngIf=\"sourcingRequestForm.controls['SalesUserId'].value != UserContext?.Id && (sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Modified || sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Submitted || sourcingRequestForm.controls['RequestStatus'].value == RequestStatus.Lost)\"\n                                               type=\"button\" value=\"Accept\" (click)=\"acceptRequest()\"\n                                               class=\"btn btn-lg btn-primary btnSubmit\">\n                                        <input id=\"lost\"\n                                               *ngIf=\"sourcingRequestForm.controls['RequestStatus'].value != RequestStatus.Lost && editSourcingId > 0\"\n                                               type=\"button\" value=\"Lost\" mwlConfirmationPopover\n                                               [popoverTitle]=\"popoverLostTitle\" [popoverMessage]=\"popoverLostMessage\"\n                                               placement=\"left\" (confirm)=\"loseRequest()\"\n                                               (cancel)=\"cancelClicked = true\"\n                                               class=\"btn btn-lg btn-danger btnSubmit\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" formControlName=\"IsNewCompany\"\n                                               id=\"radio-newcustomer\" type=\"radio\" [value]=\"true\" (change)=\"companyExistanceChanged(true)\">\n                                        <label class=\"form-check-label\" for=\"radio-newcustomer\">New</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input\" id=\"radio-existingcustomer\"\n                                               formControlName=\"IsNewCompany\" type=\"radio\" [value]=\"false\" (change)=\"companyExistanceChanged(false)\">\n                                        <label class=\"form-check-label\" for=\"radio-existingcustomer\">Existing</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4 col-md-3\">\n                                    <div class=\"form-group mb0\">\n                                        <label for=\"CustomerDetails_CompanyName\">\n                                            Company Name<span class=\"required pl4\"\n                                                              aria-required=\"true\">*</span>\n                                        </label>\n                                        <div class=\"mtm1 new-CompanyName\"\n                                             *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==true\">\n                                            <input class=\"form-control\" id=\"CustomerDetails_CompanyName\"\n                                                   formControlName=\"CompanyName\" placeholder=\"Company\" type=\"text\" value=\"\"\n                                                   (change)=\"isSourcingCompanyExist()\">\n                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyName').errors\">\n                                                <span class=\"text-danger\"\n                                                      *ngIf=\"f.CustomerDetails.get('CompanyName').errors?.required\">\n                                                    Company\n                                                    Name is required\n                                                </span>\n                                            </div>\n                                            <div *ngIf=\"companyExits\">\n                                                <span class=\"text-danger\">Company already exist</span>\n                                            </div>\n                                        </div>\n                                        <div class=\"existing-CompanyName\"\n                                             *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false\">\n\n\n                                            <ng-multiselect-dropdown class=\"single-select\"\n                                                                     style=\"width: 100%;\"\n                                                                     [settings]=\"CompDdlSetting\"\n                                                                     [data]=\"AllTPOCompaniesList\"\n                                                                     formControlName=\"TempCompany\"\n                                                                     (onSelect)=\"onCompSelect($event, true)\"\n                                                                     (onDeSelect)=\"onCompSelect($event, false)\">\n                                            </ng-multiselect-dropdown>\n\n                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyId').errors\">\n                                                <span class=\"text-danger\"\n                                                      *ngIf=\"f.CustomerDetails.get('CompanyId').errors?.required\">\n                                                    Company\n                                                    Name is required\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-8 col-md-9\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-4 new-company\" *ngIf=\"isPersonNew\">\n                                            <div class=\"form-group\">\n                                                <div id=\"newContactPersonInput\">\n                                                    <label for=\"CustomerDetails_Name\">\n                                                        Contact Person<span class=\"required pl4\" aria-required=\"true\">*</span>\n                                                    </label>\n                                                    <input class=\"form-control newContactPerson\"\n                                                           id=\"CustomerDetails_Name\" formControlName=\"Name\"\n                                                           placeholder=\"Contact Person\" type=\"text\" value=\"\">\n                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('Name').errors\">\n                                                        <span class=\"text-danger\"\n                                                              *ngIf=\"f.CustomerDetails.get('Name').errors?.required\">\n                                                            Contact Person is required\n                                                        </span>\n                                                    </div>\n                                                    <a id=\"useExisting\" class=\"\" \n                                                       *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false\"\n                                                       (click)=\"clickNewPerson(false)\">\n                                                        <span class=\"fa fa-arrow-left mt7\"></span> Use Existing\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4 existing-company \" *ngIf=\"!isPersonNew\">\n                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper customer-contact hide-element\">\n                                                <span class=\"spinner-dashboard pa\"></span>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <div id=\"existingContactPersonDropdown\">\n                                                    <label for=\"CustomerDetails_Name\">Contact Person</label>\n                                                    <select class=\"form-control existingContactPerson\"\n                                                            id=\"CustomerDetails_UserId\" formControlName=\"UserId\"\n                                                            (change)=\"getSourcingContactPersonDetails($event.target.value)\">\n                                                        <option value=\"null\" disabled>Select Contact Person</option>\n                                                        <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                                *ngFor=\"let item of CompanyContactPersonsList\"\n                                                                [selected]=\"item.Id== f.CustomerDetails.get('UserId').value\">\n                                                            {{item.Name}}\n                                                        </option>\n                                                    </select>\n                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('UserId').errors\">\n                                                        <span class=\"text-danger\"\n                                                              *ngIf=\"f.CustomerDetails.get('UserId').errors?.required\">\n                                                            Contact Person is required\n                                                        </span>\n                                                    </div>\n                                                    <a id=\"createNew\"\n                                                       *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false && !f.IsRegularBuyer.value\"\n                                                       (click)=\"clickNewPerson(true)\">\n                                                        <span class=\"fa fa-plus-circle mt7\"></span> Create\n                                                        New\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4\">\n                                            <div class=\"form-group\">\n                                                <label for=\"CustomerDetails_PhoneNumber\">Mobile Number</label>\n                                                <input class=\"form-control input-phoneformat phoneNumber\"\n                                                       id=\"CustomerDetails_PhoneNumber\" name=\"PhoneNumber\"\n                                                       formControlName=\"PhoneNumber\" (blur)=\"onChangeMobile($event)\" type=\"text\" value=\"\">\n                                                <div *ngIf=\"!f.CustomerDetails.get('PhoneNumber').errors && !isValidMobile\" class=\"color-orange fs12 pt5\" id=\"mobile-validation-msg\">Unable to verify number! You will miss Text Alerts.</div>\n                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('PhoneNumber').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.CustomerDetails.get('PhoneNumber').errors?.required\">\n                                                        Mobile Number is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4\">\n                                            <div class=\"form-group custEmail\">\n                                                <label for=\"CustomerDetails_Email\">Email</label>\n                                                <input class=\"form-control email\" id=\"CustomerDetails_Email\"\n                                                       name=\"Email\" formControlName=\"Email\" type=\"email\" value=\"\" />\n                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('Email').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.required\">\n                                                        Email\n                                                        is required\n                                                    </span>\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.email\"> Invalid </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <div *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==true\">\r\n                                        <app-contact-person [Parent]=\"f.CustomerDetails\"></app-contact-person>\r\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\" col-12\">\n                        <div class=\"well col-sm-12\">\n                            <h4>Sourcing Request</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"TruckLoadType\">Type</label>\n                                        <select class=\"form-control\" name=\"RequestType\" formControlName=\"TruckLoadType\">\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                    *ngFor=\"let item of TruckTypeLoadList\"\n                                                    [selected]=\"item.Id==f.TruckLoadType.value\">\n                                                {{item.Name}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"formSubmited && f.TruckLoadType.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.TruckLoadType.errors?.required\">\n                                                Truck\n                                                Load Type is required\n                                            </span>\n                                        </div>\n                                        <!-- <span class=\"field-validation-valid\" ></span> -->\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"FreightOnBoardType\">Freight on Board (FOB)</label>\n                                        <select class=\"form-control\" name=\"FOB\" formControlName=\"FreightOnBoardType\" [disableControl]=\"f.TruckLoadType.value==1\">\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                    *ngFor=\"let item of FreightOnBoardTypesList\"\n                                                    [selected]=\"item.Id==f.FreightOnBoardType.value\">\n                                                {{item.Name}}\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"formSubmited && f.FreightOnBoardType.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.FreightOnBoardType.errors?.required\">\n                                                Freight OnBoard Type is required\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"AccountingCompanyId\">Accounting Company ID</label>\n                                        <input class=\"form-control\" id=\"AccountingCompanyId\" name=\"AccountingCompanyId\"\n                                               formControlName=\"AccountingCompanyId\" type=\"text\" value=\"\">\n                                        <div *ngIf=\"formSubmited && f.AccountingCompanyId.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.AccountingCompanyId.errors?.required\">\n                                                Accounting CompanyId is required\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"DisplayRequestId\">SR#</label>\n                                        <input class=\"form-control\" id=\"DisplayRequestId\"\n                                            formControlName=\"DisplayRequestId\" type=\"text\" value=\"\">\n                                        <div *ngIf=\"formSubmited && f.DisplayRequestId.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.DisplayRequestId.errors?.required\"> SR#\n                                                is required</span>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"RequestName\">SR Name</label>\n                                        <input class=\"form-control\" id=\"RequestName\" name=\"Name\"\n                                               formControlName=\"RequestName\" type=\"text\" value=\"\">\n                                        <div *ngIf=\"formSubmited && f.RequestName.errors\">\n                                            <span class=\"text-danger\" *ngIf=\"f.RequestName.errors?.required\">\n                                                SR Name is\n                                                required\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" formGroupName=\"AddressDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <h4 class=\"job-site-info\">Location Information</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <div class=\"form-check form-check-inline radio\" *ngIf=\"!f.IsRegularBuyer.value\">\n                                        <input class=\"jobname form-check-input\" id=\"radio-newjob\" (click)=\"ClearAddress()\"\n                                               formControlName=\"IsNewJob\" type=\"radio\" [value]=\"true\">\n                                        <label class=\"form-check-label\" for=\"radio-newjob\">New</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline existingjobSection radio\"\n                                         *ngIf=\"sourcingRequestForm.controls['CustomerDetails']['controls']['IsNewCompany'].value==false\">\n                                        <input class=\"jobname existingjob form-check-input\" id=\"radio-existingjob\" (click)=\"ClearAddress()\"\n                                               formControlName=\"IsNewJob\" type=\"radio\" [value]=\"false\">\n                                        <label class=\"form-check-label\" for=\"radio-existingjob\">Existing</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"new-job\"\n                                                 *ngIf=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value==true\">\n                                                <label class=\"job-site-info\" for=\"AddressDetails_JobName\">\n                                                    Location\n                                                    Name <span class=\"required pl4\"\n                                                               aria-required=\"true\">*</span>\n                                                </label>\n                                                <input class=\"form-control\" id=\"AddressDetails_JobName\"\n                                                       formControlName=\"JobName\" type=\"text\" value=\"\">\n                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('JobName').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.AddressDetails.get('JobName').errors?.required\">\n                                                        Location Name is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div class=\"existing-job defaultDisabled\"\n                                                 *ngIf=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value==false\">\n                                                <label class=\"job-site-info\" for=\"AddressDetails_JobId\">\n                                                    Location\n                                                    Name<span class=\"required pl4\" aria-required=\"true\">*</span>\n                                                </label>\n\n\n                                                <ng-multiselect-dropdown class=\"single-select\"\n                                                                         style=\"width: 100%;\"\n                                                                         [settings]=\"CompDdlSetting\"\n                                                                         [data]=\"allJobList\"\n                                                                         formControlName=\"TempJob\"\n                                                                         (onSelect)=\"onJobSelect($event, sourcingRequestForm.controls['CustomerDetails']['controls']['CompanyName'].value, true)\"\n                                                                         (onDeSelect)=\"onJobSelect($event, null, false)\">\n                                                </ng-multiselect-dropdown>\n\n                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('JobName').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.AddressDetails.get('JobName').errors?.required\">\n                                                        Location Name is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-6\">\n                                            <div class=\"address-controls\"\n                                                 [ngClass]=\"{'pntr-none subSectionOpacity': sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false }\">\n                                                <div class=\"form-group combineDiv\">\n                                                    <label class=\"job-site-info\" for=\"AddressDetails_DisplayJobID\">\n                                                        Third\n                                                        Party Location ID\n                                                    </label>\n                                                    <input class=\"form-control\" id=\"AddressDetails_DisplayJobID\"\n                                                           formControlName=\"DisplayJobID\" type=\"text\" value=\"\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-6\">\n                                    <div class=\"row address-controls\"\n                                         [ngClass]=\"{'pntr-none subSectionOpacity': sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false }\">\n                                        <div class=\"col-sm-4\">\n                                            <div class=\"form-group\">\n                                                <label for=\"AddressDetails_Country_Id\">Country/Group</label>\n                                                <select class=\"form-control country addressInput\"\n                                                        id=\"AddressDetails_Country_Id\" formControlName=\"CountryId\" (change)=\"countryChanged()\">\n                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                            *ngFor=\"let item of countryList\"\n                                                            [selected]=\"item.Id== f.AddressDetails.get('CountryId').value\">\n                                                        {{item.Code}}\n                                                    </option>\n                                                </select>\n                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('CountryId').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.AddressDetails.get('CountryId').errors?.required\">\n                                                        Country is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-4\" *ngIf=\"f.AddressDetails.get('CountryId').value == '4'\">\n                                            <div class=\"form-group\">\n                                                <label>Country</label>\n                                                <select class=\"form-control country-group\"\n                                                        id=\"AddressDetails_Country_Id\" (change)=\"countryGroupChanged($event)\">\n                                                    <option id=\"0\" value=\"Select\">Select</option>\n                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                            *ngFor=\"let item of countryGroupList\">\n                                                        {{item.Name}}\n                                                    </option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-8\">\n                                            <div class=\"row\">\n                                                <div class=\"col-md-6\">\n                                                    <div class=\"form-group\" id=\"ddl-currency-filter-div\">\n                                                        <label for=\"AddressDetails_Country_Currency\">Currency</label>\n                                                        <select class=\"form-control currency valid\"\n                                                                id=\"AddressDetails_Country_Currency\"\n                                                                name=\"AddressDetails.Country.Currency\"\n                                                                formControlName=\"Currency\"\n                                                                (change)=\"setCurrency(f.AddressDetails.get('Currency').value)\">\n                                                            <!-- <option selected=\"selected\" value=\"1\">USD</option>\n                                                            <option value=\"2\">CAD</option> -->\n                                                            <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                    *ngFor=\"let item of currucyList\"\n                                                                    [selected]=\"item.Id== f.AddressDetails.get('Currency').value\">\n                                                                {{item.Name}}\n                                                            </option>\n                                                        </select>\n                                                        <!-- <span class=\"field-validation-valid\"\n                                                            data-valmsg-for=\"AddressDetails.Country.Currency\"\n                                                            data-valmsg-replace=\"true\"></span> -->\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-md-6 uom-section\">\n                                                    <div class=\"form-group\">\n                                                        <label for=\"AddressDetails_Country_UoM\">UOM</label>\n                                                        <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\n                                                           data-placement=\"top\" title=\"Unit Of Measurement\"\n                                                           data-original-title=\"Unit Of Measurement\"></i>\n                                                        <select class=\"form-control\" id=\"AddressDetails_Country_UoM\"\n                                                                formControlName=\"UOM\" readonly=\"true\">\n                                                            <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                    *ngFor=\"let item of UomList\"\n                                                                    [selected]=\"item.Id== f.AddressDetails.get('UOM').value\">\n                                                                {{item.Name}}\n                                                            </option>\n\n                                                            <!-- <option selected=\"selected\" value=\"1\">Gallons</option>\n                                                            <option value=\"2\">Litres</option> -->\n                                                        </select>\n                                                        <!-- <span class=\"field-validation-valid\"\n                                                            data-valmsg-for=\"AddressDetails.Country.UoM\"\n                                                            data-valmsg-replace=\"true\"></span> -->\n                                                    </div>\n                                                </div>\n\n\n                                                <div class=\"col-md-6 mfn-uom-section hide-element\">\n                                                    <div class=\"form-group\">\n                                                        <label for=\"AddressDetails_Country_UoM\">UOM</label>\n                                                        <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\n                                                           data-placement=\"top\" title=\"Unit Of Measurement\"\n                                                           data-original-title=\"Unit Of Measurement\"></i>\n                                                        <select class=\"form-control\" id=\"AddressDetails_MarineUoM\"\n                                                                formControlName=\"UOM\">\n                                                            <option value=\"1\">Gallons</option>\n                                                            <option value=\"2\">Litres</option>\n                                                            <option value=\"3\">Barrels</option>\n                                                            <option value=\"4\">MetricTons</option>\n                                                        </select>\n                                                        <!-- <span class=\"field-validation-valid\"\n                                                            data-valmsg-for=\"AddressDetails.MarineUoM\"\n                                                            data-valmsg-replace=\"true\"></span> -->\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mt20\">\n                                <div class=\"col-sm-12\">\n                                    <!-- <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                            <div>\n                                                <label class=\"checkbox-inline ftl-controls hide-element\"\n                                                    style=\"display: none;\">\n                                                    <input data-val=\"true\"\n                                                        data-val-required=\"The IsVarious field is required.\"\n                                                        id=\"AddressDetails_IsVarious\" name=\"AddressDetails.IsVarious\"\n                                                        onclick=\"showHideControls(this,'wrapper-various','wrapper-location');\"\n                                                        type=\"checkbox\" value=\"False\"><input name=\"AddressDetails.IsVarious\"\n                                                        type=\"hidden\" value=\"false\">\n                                                    Various\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div> -->\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-7\">\n                                            <div class=\"wrapper-location\" style=\"display: block;\">\n                                                <div class=\"address-controls\"\n                                                     [ngClass]=\"{'pntr-none subSectionOpacity': sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false }\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-8\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_Address\">Address</label>\n                                                                <input class=\"form-control address addressInput\"\n                                                                       id=\"AddressDetails_Address\"\n                                                                       name=\"AddressDetails.Address\" type=\"text\"\n                                                                       formControlName=\"Address\" value=\"\">\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('Address').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('Address').errors?.required\">\n                                                                        Address is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_ZipCode\">Zip</label>\n                                                                <input class=\"form-control\"\n                                                                       id=\"AddressDetails_ZipCode_an\"\n                                                                       name=\"AddressDetails.ZipCode\"\n                                                                       formControlName=\"ZipCode\" type=\"text\" value=\"\" (change)=\"getAddressByZip()\">\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('ZipCode').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('ZipCode').errors?.required\">\n                                                                        Zip is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_City\">\n                                                                    City<span class=\"required pl4\"\n                                                                              aria-required=\"true\">*</span>\n                                                                </label>\n                                                                <input class=\"form-control city addressInput\"\n                                                                       id=\"AddressDetails_City\" formControlName=\"City\"\n                                                                       type=\"text\" value=\"\">\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('City').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('City').errors?.required\">\n                                                                        City is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_CountyName\">\n                                                                    County\n                                                                    Name\n                                                                </label>\n                                                                <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\n                                                                   data-placement=\"top\"\n                                                                   title=\"Correct County name is required by our Tax service to calculate taxes accurately.\"></i>\n                                                                <input class=\"form-control county addressInput\"\n                                                                       id=\"AddressDetails_CountyName\"\n                                                                       formControlName=\"CountyName\" type=\"text\" value=\"\"\n                                                                       autocomplete=\"off\">\n\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('CountyName').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('CountyName').errors?.required\">\n                                                                        County  Name is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-sm-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_State_Id\">\n                                                                    State<span class=\"required pl4\"\n                                                                               aria-required=\"true\">*</span>\n                                                                </label>\n                                                                <select class=\"form-control state addressInput triggerTerminalChange\"\n                                                                        id=\"AddressDetails_State_Id\"\n                                                                        name=\"AddressDetails.State.Id\"\n                                                                        formControlName=\"StateId\"\n                                                                        (change)=\"stateChanged()\">\n                                                                    <option value=\"\">Select State</option>\n                                                                    <option id=\"{{item.StateId}}\" [value]=\"item.StateId\"\n                                                                            *ngFor=\"let item of filteredStatesList\" [selected]=\"item.StateId== f.AddressDetails.get('StateId').value\">\n                                                                        {{item.StateName}}\n                                                                    </option>\n                                                                </select>\n                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('StateId').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.AddressDetails.get('StateId').errors?.required\">\n                                                                        State is required\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-12\">\n                                                            <div class=\"form-check form-group form-check-inline\">\n                                                                <input class=\"form-check-input\" id=\"checkbox-geocodes\"\n                                                                       formControlName=\"IsGeocodeUsed\" type=\"checkbox\"\n                                                                       [value]=\"false\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false\">\n                                                                <label class=\"form-check-label\"\n                                                                       for=\"checkbox-geocodes\">Geo Codes</label>\n                                                            </div>\n                                                        </div>\n\n                                                        <div class=\"col-xs-6 col-md-4 combineDiv\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_Latitude\">Latitude</label>\n                                                                <input class=\"form-control datatype-decimal mask-decimal latitude geoInput defaultDisabled\"\n                                                                       id=\"AddressDetails_Latitude\"\n                                                                       name=\"AddressDetails.Latitude\"\n                                                                       formControlName=\"Latitude\" type=\"text\" value=\"0\"\n                                                                       [readonly]=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsGeocodeUsed'].value == false\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false\">\n                                                                <!-- <span class=\"field-validation-valid\"\n                                                                    data-valmsg-for=\"AddressDetails.Latitude\"\n                                                                    data-valmsg-replace=\"true\"></span> -->\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-xs-6 col-md-4 combineDiv\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_Longitude\">Longitude</label>\n                                                                <input class=\"form-control datatype-decimal mask-decimal longitude geoInput defaultDisabled\"\n                                                                       id=\"AddressDetails_Longitude\"\n                                                                       formControlName=\"Longitude\" type=\"text\" value=\"0\"\n                                                                       [readonly]=\"sourcingRequestForm.controls['AddressDetails']['controls']['IsGeocodeUsed'].value == false\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsNewJob'].value == false\">\n                                                                <!-- <span class=\"field-validation-valid\"\n                                                                    data-valmsg-for=\"AddressDetails.Longitude\"\n                                                                    data-valmsg-replace=\"true\"></span> -->\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"col-md-4\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"AddressDetails_TimeZoneName\">\n                                                                    Time\n                                                                    Zone\n                                                                </label>\n                                                                <input class=\"form-control timeZoneName defaultDisabled\"\n                                                                       id=\"AddressDetails_TimeZoneName\"\n                                                                       formControlName=\"TimeZoneName\" readonly=\"true\"\n                                                                       type=\"text\" value=\"\"\n                                                                       [disableControl]=\" sourcingRequestForm.controls['AddressDetails']['controls']['IsGeocodeUsed'].value == false\">\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div class=\"col-sm-5\">\n                                            <agm-map [zoom]=\"mapConstants.ZoomArea\" [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\">\n                                                <agm-marker [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\" [markerDraggable]=\"true\"\n                                                            (dragEnd)=\"markerDragEnd($event)\"\n                                                            [iconUrl]=\"mapConstants.IconUrl\"></agm-marker>\n                                            </agm-map>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"form-group col-sm-2\">\n                                    <label for=\"DispatchRegion\">Dispatch Region</label>\n                                    <select class=\"form-control\" id=\"AddressDetails_DispatchRegionId\"\n                                            formControlName=\"DispatchRegionId\">\n                                        <option disabled [value]=\"null\">Select</option>\n                                        <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                *ngFor=\"let item of DispatchRegionList\">\n                                            {{item.Name}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <h4>Delivery</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 mb5\">\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input single-delivery-schedule\" type=\"radio\"\n                                               formControlName=\"DeliveryTypeId\"\n                                               id=\"FuelDeliveryDetails_single_DeliveryTypeId\" [value]=\"1\" (change)=\"deliveryTypeIdChanged(1)\">\n                                        <label class=\"form-check-label\"\n                                               for=\"FuelDeliveryDetails_single_DeliveryTypeId\">Single Delivery</label>\n                                    </div>\n                                    <div class=\"form-check form-check-inline\">\n                                        <input class=\"form-check-input multiple-delivery-schedule\" type=\"radio\"\n                                               formControlName=\"DeliveryTypeId\"\n                                               id=\"FuelDeliveryDetails_multi_DeliveryTypeId\" [value]=\"2\" (change)=\"deliveryTypeIdChanged(2)\">\n                                        <label class=\"form-check-label\"\n                                               for=\"FuelDeliveryDetails_multi_DeliveryTypeId\">Multiple Deliveries</label>\n                                    </div>\n                                    <!-- <div class=\"radio dib mr10\">\n                                        <label>\n                                            <input class=\"single-delivery-schedule\" id=\"FuelDeliveryDetails_DeliveryTypeId\"\n                                                formControlName=\"DeliveryTypeId\" type=\"radio\" value=\"1\">\n                                            Single Delivery\n                                        </label>\n                                    </div>\n                                    <div class=\"radio dib\">\n                                        <label>\n                                            <input class=\"multiple-delivery-schedule\" id=\"FuelDeliveryDetails_DeliveryTypeId\"\n                                                formControlName=\"DeliveryTypeId\" type=\"radio\" value=\"2\">\n                                            Multiple Deliveries\n                                        </label>\n                                    </div> -->\n                                </div>\n                                <div class=\"col-sm-12\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-3 single-delivery\"\n                                             *ngIf=\"sourcingRequestForm.controls['FuelDeliveryDetails']['controls']['DeliveryTypeId'].value == 1\">\n                                            <div class=\"single-delivery-sub-types\">\n                                                <label for=\"FuelDeliveryDetails_SingleDeliverySubTypes\">Type</label>\n                                                <select class=\"form-control\"\n                                                        id=\"FuelDeliveryDetails_SingleDeliverySubTypes\"\n                                                        formControlName=\"SingleDeliverySubTypes\">\n                                                    <option [value]=\"0\">Delivery Date</option>\n                                                    <option [value]=\"1\">Delivery Date Range</option>\n                                                </select>\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('SingleDeliverySubTypes').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('SingleDeliverySubTypes').errors?.required\">\n                                                        Delivary Type is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"form-group\">\n                                                <label for=\"FuelDeliveryDetails_StartDate\">Start Date</label>\n                                                <input type=\"text\" class=\"form-control datepicker\" [maxDate]=\"MaxInputDate\"\n                                                       [format]=\"'MM/DD/YYYY'\" formControlName=\"StartDate\" myDatePicker\n                                                       (onDateChange)=\"f.FuelDeliveryDetails.get('StartDate').setValue($event);\" />\n\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('StartDate').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('StartDate').errors?.required\">\n                                                        Start Date is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"end-date\">\n                                                <label for=\"End_Date\">End Date</label>\n                                                <input class=\"form-control datepicker\" [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\"\n                                                       id=\"FuelDeliveryDetails_EndDate\" formControlName=\"EndDate\"\n                                                       type=\"text\" value=\"\" myDatePicker\n                                                       (onDateChange)=\"f.FuelDeliveryDetails.get('EndDate').setValue($event);\"\n                                                       [disableControl]=\"f.FuelDeliveryDetails.get('SingleDeliverySubTypes').value==0 && f.FuelDeliveryDetails.get('DeliveryTypeId').value==1\">\n\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"form-group\">\n                                                <label for=\"FuelDeliveryDetails_StartTime\">Start Time</label>\n                                                <input type=\"text\" class=\"form-control timepicker\"\n                                                       formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm:ss A'\"\n                                                       (onTimeChange)=\"f.FuelDeliveryDetails.get('StartTime').setValue($event);\" />\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('StartTime').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('StartTime').errors?.required\">\n                                                        Start Time is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-3\">\n                                            <div class=\"form-group\">\n                                                <label for=\"FuelDeliveryDetails_EndTime\">End Time</label>\n                                                <input type=\"text\" class=\"form-control timepicker\"\n                                                       formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm:ss A'\"\n                                                       (onTimeChange)=\"f.FuelDeliveryDetails.get('EndTime').setValue($event);\" />\n                                                <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('EndTime').errors\">\n                                                    <span class=\"text-danger\"\n                                                          *ngIf=\"f.FuelDeliveryDetails.get('EndTime').errors?.required\">\n                                                        End Time is required\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"col-md-12 mb15 multi-delivery\" style=\"display: block;\">\n                                    <div class=\"row mt5\">\n                                        <div class=\"col-md-12\">\n                                            <div id=\"delivery-schedule-section\"\n                                                class=\"partial-section delivery-schedule defaultDisabled\">\n                                                <div class=\"form-group pl0 mt7\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n                                                            <h3 class=\"mt0 mb0\">Delivery Schedules</h3>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"partial-block-collection-section\">\n                                                </div>\n                                                <div class=\"form-group col-md-12 pl0 delivery-schedule defaultDisabled\">\n                                                    <a href=\"javascript:void(0)\" class=\"add-partial-block\"\n                                                        data-url=\"/Supplier/FuelRequest/DeliverySchedule\"\n                                                        style=\"pointer-events: visible;\"><i class=\"fas fa-plus-circle\"></i>\n                                                        Add Delivery Schedule</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <ng-container formGroupName=\"FuelDetails\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-12 disable-in-tpo-edit fuel-display-group \">\n                                        <h4 class=\"mb0 pb10\">Fuel Type</h4>\n                                        <div class=\"form-group mb0 \">\n                                            <!-- <div class=\"radio dib mr20 mt0 hide-from-tpo\" style=\"display: none;\">\n                                                <label>\n                                                    <input data-val=\"true\"\n                                                        data-val-number=\"The field FuelDisplayGroupId must be a number.\"\n                                                        data-val-required=\"FuelDisplayGroupId is required\"\n                                                        id=\"FuelDetails_FuelDisplayGroupId\"\n                                                        name=\"FuelDetails.FuelDisplayGroupId\"\n                                                        onclick=\"showHideControls(this,'standard-fuels','fuels-in-myarea,non-standard-fuels,add-favorite,taxForOtherFuel');radioChange(this,'wrapper-rackprice,wrapper-suppliercost,city-groupterminal,chkcity-groupterminal', null);checkOtherFuelType(this)\"\n                                                        type=\"radio\" value=\"5\">\n                                                    Favorite\n                                                </label>\n                                            </div> -->\n\n                                            <div class=\"form-check form-check-inline in-job-area\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_location\" [value]=\"4\"\n                                                       (change)=\"deliveryTypeChanged(4)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_location\">\n                                                    In Location\n                                                    Area\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_common\" [value]=\"1\"\n                                                       (change)=\"deliveryTypeChanged(1)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_common\">Common</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_less_common\" [value]=\"2\"\n                                                       (change)=\"deliveryTypeChanged(2)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_less_common\">Less Common</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline\">\n                                                <input class=\"form-check-input\" type=\"radio\"\n                                                       formControlName=\"FuelDisplayGroupId\"\n                                                       id=\"FuelDetails_FuelDisplayGroupId_other\" [value]=\"3\"\n                                                       (change)=\"deliveryTypeChanged(3)\">\n                                                <label class=\"form-check-label\"\n                                                       for=\"FuelDetails_FuelDisplayGroupId_other\">Other</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-12 disable-in-tpo-edit\">\n                                        <div class=\"form-group\">\n                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\n                                                 *ngIf=\"IsLoading\">\n                                                <span class=\"spinner-dashboard pa\"></span>\n                                            </div>\n                                            <div class=\"row standard-fuels\"\n                                                 *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['FuelDisplayGroupId'].value)!=3\">\n                                                <div class=\"col-sm-3 clearboth\">\n                                                    <select class=\"form-control\" id=\"FuelDetails_FuelTypeId\"\n                                                            formControlName=\"FuelTypeId\">\n                                                        <option disabled [value]=\"null\">Select</option>\n                                                        <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                *ngFor=\"let item of FuelProductsList\">\n                                                            {{item.Name}}\n                                                        </option>\n                                                    </select>\n                                                    <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelTypeId').errors\">\n                                                        <span class=\"text-danger\"\n                                                              *ngIf=\"f.FuelDetails.get('FuelTypeId').errors?.required\">\n                                                            Fuel\n                                                            type is required\n                                                        </span>\n                                                    </div>\n                                                    <!-- <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n                                                            <div id=\"fuelTypeNearYourArea\" class=\"fuels-in-myarea hide-element\"\n                                                                style=\"display: block;\">\n                                                                <div class=\"pr\">\n                                                                    <input type=\"text\"\n                                                                        class=\"form-control nearest-fueltype pl16\"\n                                                                        onkeydown=\"javascript:return false\">\n                                                                </div>\n                                                                <div class=\"nearest-fuellist pa bg-white\"\n                                                                    style=\"display: none;\">\n                                                                    <ul class=\"list-unstyled\"></ul>\n                                                                    <div class=\"text-center\">\n                                                                        <a href=\"javascript:void(0)\"\n                                                                            class=\"more-nearestfuel\">See More</a>\n                                                                        <div class=\"spinner-xsmall mbm2 ml2\" style=\"\"></div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div> -->\n                                                    <!-- <div class=\"hide-element\" id=\"noFavoriteFuelMsg\">\n                                                        <div class=\"alert alert-info mb0 fs13\">You have not yet added a favorite\n                                                            fuel type</div>\n                                                    </div> -->\n                                                    <!-- <div class=\"row\">\n                                                        <div class=\"col-sm-12\">\n                                                            <div class=\"form-group\">\n                                                                <div id=\"allOtherFuelTypes\" class=\"all-other-fuels\"\n                                                                    style=\"display: none;\">\n                                                                    <select class=\"form-control\" data-val=\"true\"\n                                                                        data-val-number=\"The field Fuel must be a number.\"\n                                                                        data-val-requiredif=\"Fuel is required\"\n                                                                        data-val-requiredif-dependentproperty=\"FuelDisplayGroupId\"\n                                                                        data-val-requiredif-dependentvalue=\"3\"\n                                                                        data-val-requiredif-operator=\"NotEqualTo\"\n                                                                        id=\"FuelDetails_FuelTypeId\"\n                                                                        name=\"FuelDetails.FuelTypeId\"></select>\n                                                                </div>\n                                                                <span class=\"field-validation-valid\"\n                                                                    data-valmsg-for=\"FuelDetails.FuelTypeId\"\n                                                                    data-valmsg-replace=\"true\"></span>\n                                                            </div>\n                                                        </div>\n                                                    </div> -->\n                                                </div>\n                                            </div>\n                                            <div class=\"non-standard-fuels\"\n                                                 *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['FuelDisplayGroupId'].value)==3\">\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-3\">\n                                                        <div class=\"form-group\">\n                                                            <label for=\"FuelDetails_NonStandardFuelName\">\n                                                                Product\n                                                                Name<span class=\"required pl4\"\n                                                                          aria-required=\"true\">*</span>\n                                                            </label>\n                                                            <input class=\"form-control\"\n                                                                   id=\"FuelDetails_NonStandardFuelName\"\n                                                                   formControlName=\"NonStandardFuelName\" type=\"text\"\n                                                                   value=\"\" autocomplete=\"off\">\n                                                            <!-- <span class=\"field-validation-valid\"\n                                                                data-valmsg-for=\"FuelDetails.NonStandardFuelName\"\n                                                                data-valmsg-replace=\"true\"></span> -->\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-3 mb15\">\n                                                        <div class=\"form-group mb0\">\n                                                            <label for=\"FuelDetails_NonStandardFuelDescription\">\n                                                                Product\n                                                                Description\n                                                            </label>\n                                                            <textarea class=\"form-control\" cols=\"20\"\n                                                                      id=\"FuelDetails_NonStandardFuelDescription\"\n                                                                      formControlName=\"NonStandardFuelDescription\"\n                                                                      rows=\"2\"></textarea>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <h4>Quantity</h4>\n                                        <div class=\"row\">\n                                            <div class=\"container ml0\">\n                                                <!-- <input data-val=\"true\" data-val-required=\"The UoM field is required.\"\n                                                    id=\"FuelDetails_FuelQuantity_UoM\" formControlName=\"FuelDetails.FuelQuantity.UoM\"\n                                                    type=\"hidden\" value=\"None\"> -->\n\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-12\">\n                                                        <div class=\"form-check form-check-inline \">\n                                                            <input class=\"revalidate quantity-type-id form-check-input\"\n                                                                   id=\"radio-quantityfixed\"\n                                                                   formControlName=\"QuantityTypeId\" type=\"radio\"\n                                                                   [value]=\"1\">\n                                                            <label class=\"form-check-label\"\n                                                                   for=\"radio-quantityfixed\">Fixed</label>\n                                                        </div>\n                                                        <div class=\"form-check form-check-inline \">\n                                                            <input class=\"revalidate form-check-input\"\n                                                                   id=\"radio-quantityrange\"\n                                                                   formControlName=\"QuantityTypeId\" type=\"radio\"\n                                                                   [value]=\"2\">\n                                                            <label class=\"form-check-label\"\n                                                                   for=\"radio-quantityrange\">Range</label>\n                                                        </div>\n                                                        <div class=\"form-check form-check-inline\">\n                                                            <input checked=\"checked\" class=\"revalidate form-check-input\"\n                                                                   id=\"quantitynotspecified\"\n                                                                   formControlName=\"QuantityTypeId\" type=\"radio\"\n                                                                   [value]=\"3\">\n                                                            <label class=\"form-check-label\"\n                                                                   for=\"quantitynotspecified\">\n                                                                Not\n                                                                Specified\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-sm-3 fixed-quantity\"\n                                                         *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['QuantityTypeId'].value)==1\">\n                                                        <div class=\"form-group\" style=\"pointer-events: visible;\">\n                                                            <div class=\"mt5\">\n                                                                <label>Quantity</label>\n                                                                <div class=\"input-group\">\n                                                                    <input class=\"form-control datatype-decimal total-gallons-required\"\n                                                                           id=\"FuelDetails_FuelQuantity_Quantity\"\n                                                                           formControlName=\"Quantity\" type=\"text\"\n                                                                           value=\"0\">\n                                                                    <span class=\"input-group-addon uom quantity-uom\">Gallons</span>\n                                                                </div>\n                                                                <div *ngIf=\"formSubmited && f.FuelDetails.get('Quantity').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.FuelDetails.get('Quantity').errors?.required\">\n                                                                        Quantity is required\n                                                                    </span>\n                                                                </div>\n                                                                <div *ngIf=\"f.FuelDetails.get('Quantity').errors\">\n                                                                    <span class=\"text-danger\"\n                                                                          *ngIf=\"f.FuelDetails.get('Quantity').errors.pattern\">\n                                                                        Invalid.\n                                                                    </span>\n                                                                </div>\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-6\"\n                                                         *ngIf=\"(sourcingRequestForm.controls['FuelDetails']['controls']['QuantityTypeId'].value)==2\">\n                                                        <div class=\"resetleftspace\">\n                                                            <div class=\"row mt5 mb15 form-group\">\n                                                                <div class=\"col-sm-6\">\n                                                                    <div class=\"dib\">\n                                                                        <label for=\"FuelDetails_FuelQuantity_MinimumQuantity\">\n                                                                            Min<span class=\"required pl4\"\n                                                                                     aria-required=\"true\">*</span>\n                                                                        </label>\n                                                                    </div>\n                                                                    <div class=\"input-group pull-left\">\n                                                                        <input class=\"form-control datatype-decimal always\"\n                                                                               id=\"FuelDetails_FuelQuantity_MinimumQuantity\"\n                                                                               formControlName=\"MinimumQuantity\"\n                                                                               type=\"text\" [value]=\"\">\n                                                                        <!-- (change)=\"validateMinMaxValue(this.f.FuelDetails.get('MinimumQuantity'))\" -->\n                                                                        <span class=\"input-group-addon uom quantity-uom\">Gallons</span>\n                                                                    </div>\n                                                                    <div *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors\">\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors.pattern\">\n                                                                            Invalid.\n                                                                        </span>\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors.required\">\n                                                                            Minimum Quantity is Required\n                                                                        </span>\n                                                                        <!-- <span class=\"text-danger\" *ngIf=\"f.FuelDetails.get('MinimumQuantity').errors.RangeError\">\n                                                                            Max Quantity should be greater than Min Quantatity\n                                                                        </span> -->\n                                                                    </div>\n\n                                                                </div>\n                                                                <div class=\"col-sm-6\">\n                                                                    <div class=\"dib\">\n                                                                        <label for=\"FuelDetails_FuelQuantity_MaximumQuantity\">\n                                                                            Max<span class=\"required pl4\"\n                                                                                     aria-required=\"true\">*</span>\n                                                                        </label>\n                                                                    </div>\n                                                                    <div class=\"input-group pull-left\">\n                                                                        <input class=\"form-control\"\n                                                                               id=\"FuelDetails_FuelQuantity_MaximumQuantity\"\n                                                                               formControlName=\"MaximumQuantity\"\n                                                                               type=\"text\" [value]=\"\">\n                                                                        <!-- (change)=\"validateMinMaxValue(this.f.FuelDetails.get('MaximumQuantity'))\" -->\n                                                                        <span class=\"input-group-addon uom quantity-uom\">Gallons</span>\n                                                                    </div>\n                                                                    <div *ngIf=\"f.FuelDetails.get('MaximumQuantity').errors\">\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MaximumQuantity').errors.pattern\">\n                                                                            Invalid.\n                                                                        </span>\n                                                                        <span class=\"text-danger\"\n                                                                              *ngIf=\"f.FuelDetails.get('MaximumQuantity').errors.required\">\n                                                                            Maximum Quantity is Required\n                                                                        </span>\n                                                                        <!-- <span class=\"text-danger\">\n                                                                            Max Quantity should be greater than Min Quantatity\n                                                                            {{f.FuelDetails.get('MaximumQuantity').errors?.RangeError}}\n                                                                        </span> -->\n\n                                                                    </div>\n\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"col-sm-3 ftl-controls ftl-billable-quantity mt5\">\n                                                        <div class=\"form-group\">\n                                                            <ng-container *ngIf=\"f.TruckLoadType.value==2\">\n                                                                <label>Billable Quantity</label>\n                                                                <select class=\"form-control enum-ddl qty-ind\"\n                                                                        id=\"FuelDetails_FuelQuantity_QuantityIndicatorTypes\"\n                                                                        formControlName=\"QuantityIndicatorTypes\">\n                                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\n                                                                            *ngFor=\"let item of billableList\"\n                                                                            [selected]=\"item.Id== f.FuelDetails.get('QuantityIndicatorTypes').value\">\n                                                                        {{item.Name}}\n                                                                    </option>\n                                                                    <!-- <option [value]=\"1\" [selected]=\"true\">Net</option>\n                                                                    <option [value]=\"2\">Gross</option> -->\n                                                                </select>\n                                                            </ng-container>\n                                                            <div class=\"row\">\n                                                                <div class=\"text-danger col-12 fs12 mt5\"\n                                                                     id=\"quantity-warning-message\">\n                                                                    <span class=\"qty-ind-err hide-element warning\"\n                                                                          style=\"display: none;\">\n                                                                        Changes will be updated\n                                                                        on\n                                                                        BOL.\n                                                                        Taxes will continue to be calculated as per\n                                                                        state\n                                                                        quantity regulations.\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n\n                <app-pricing-section [locationForm]=\"sourcingRequestForm\" [formSubmited]=\"formSubmited\"\n                                     [UoM]=\"f.AddressDetails.get('UOM').value\" [IsTBD]=\"false\"\n                                     (UpdateSuppressPricingChange)=\"UpdateSuppressPricing($event)\">\n\n                </app-pricing-section>\n\n                <div class=\"row\" formGroupName=\"FuelDetails\">\n                    <div class=\"col-12\" [ngClass]=\"{'hide-element':f.IsSupressOrderPricing.value}\">\n                        <!-- [Currency]=\"f.AddressDetails.get('Currency').value\" -->\n                        <app-fee-list [Parent]=\"f.FuelDetails\" [Fees]=\"LeadFees\" [isSales]=\"true\" [Currency]=\"displayCurrancy\"></app-fee-list>\n                    </div>\n                </div>\n\n\n                <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\n                    <div class=\"col-12\" [ngClass]=\"{'hide-element':f.IsSupressOrderPricing.value}\">\n                        <div class=\"well\">\n                            <h4>Payment Details</h4>\n                            <div class=\"row\">\n                                <div class=\"col-sm-6\">\n                                    <div class=\"row\">\n                                        <div class=\"col-sm-12\">\n                                            <div class=\"form-check form-check-inline radio\">\n                                                <input checked=\"checked\" class=\"revalidate form-check-input\"\n                                                       id=\"radio-netpayment\" formControlName=\"PaymentTermId\" type=\"radio\"\n                                                       [value]=\"1\">\n                                                <label class=\"form-check-label\" for=\"radio-netpayment\">Net</label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline radio\">\n                                                <input class=\"revalidate form-check-input\" id=\"radio-dueonreceipt\"\n                                                       formControlName=\"PaymentTermId\" type=\"radio\" [value]=\"2\">\n                                                <label class=\"form-check-label\" for=\"radio-dueonreceipt\">\n                                                    Due On\n                                                    Receipt\n                                                </label>\n                                            </div>\n                                            <div class=\"form-check form-check-inline radio\">\n                                                <input class=\"revalidate form-check-input\" id=\"radio-prepaidfull\"\n                                                       formControlName=\"PaymentTermId\" type=\"radio\" [value]=\"3\">\n                                                <label class=\"form-check-label\" for=\"radio-prepaidfull\">\n                                                    Pre Paid In\n                                                    Full\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"row mt5\">\n                                        <div class=\"col-sm-4 netdays\">\n                                            <input class=\"form-control always datatype-decimal\"\n                                                   id=\"FuelOfferDetails_NetDays\" formControlName=\"NetDays\" type=\"text\" [value]=\"0\"\n                                                   [disableControl]=\"sourcingRequestForm.controls['FuelDeliveryDetails']['controls']['PaymentTermId'].value != 1\">\n                                            <div *ngIf=\"formSubmited && f.FuelDeliveryDetails.get('NetDays').errors\">\n                                                <span class=\"text-danger\" *ngIf=\"f.FuelDeliveryDetails.get('NetDays').errors?.min\">\n                                                    Value should be greater than 0\n                                                </span>\n                                                <span class=\"text-danger\" *ngIf=\"f.FuelDeliveryDetails.get('NetDays').errors?.required\">\n                                                    Net\n                                                    Days is required\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-sm-8 pl0 pt8 fs12\">\n                                            Days of receipt - Upon Credit Approval\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-3\">\n                                    <div class=\"form-group\">\n                                        <label> Payment Method</label>\n                                        <select class=\"form-control\" id=\"FuelDeliveryDetails_PaymentMethods\"\n                                                formControlName=\"PaymentMethods\">\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\n                                                    *ngFor=\"let item of PaymentMethodsList\"\n                                                    [selected]=\"item.Id== f.FuelDeliveryDetails.get('PaymentMethods').value\">\n                                                {{item.Name}}\n                                            </option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row notes-section\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <h4>General Notes</h4>\n                            <div class=\"row\">\n                                <div class=\"col-8 form-group\">\n                                    <textarea id=\"GeneralNote\" formControlName=\"GeneralNote\" class=\"form-control col-12\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-8\">\n                                    <div class=\"list-group\">\n                                        <div *ngFor=\"let item of GeneralNotesHistory;let i = index;\">\n                                            <a href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" [ngClass]=\"{'active' :i == 0}\">\n                                                <div class=\"d-flex w-100 justify-content-between\">\n                                                    <h5 class=\"mb-1 user-name\">{{item.UserName}}</h5>\n                                                    <small>{{item.CreatedDate}}</small>\n                                                </div>\n                                                <p class=\"mb-1\">{{item.Note}}</p>\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-3\">\n                <div class=\"row\" formGroupName=\"AddressDetails\" *ngIf=\"!f.IsRegularBuyer.value\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12\">\n                                <h3>Inventory Capture Method</h3>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-not-specific\" [value]=\"0\"\n                                           checked>\n                                    <label class=\"form-check-label\" for=\"Radios-not-specific\">Not Specified</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Connected\" [value]=\"1\">\n                                    <label class=\"form-check-label\" for=\"Radios-Connected\">Connected</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Manual\" [value]=\"2\">\n                                    <label class=\"form-check-label\" for=\"Radios-Manual\">Manual</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Call-in\" [value]=\"3\">\n                                    <label class=\"form-check-label\" for=\"Radios-Call-in\">Call-in</label>\n                                </div>\n                                <div class=\"form-check mb-1\">\n                                    <input class=\"form-check-input\" type=\"radio\"\n                                           formControlName=\"InventoryDataCaptureType\" id=\"Radios-Mixed\" [value]=\"4\">\n                                    <label class=\"form-check-label\" for=\"Radios-Mixed\">Mixed</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12 pr-0\">\n                                <h3>Cutomer</h3>\n                                <div formGroupName=\"CustomerDetails\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsNotifyDeliveries\" id=\"Chk-IsNotifyDeliveries\"\n                                               value=\"option1\" checked>\n                                        <label class=\"form-check-label\" for=\"Chk-IsNotifyDeliveries\">\n                                            Provide Delivery\n                                            Details to\n                                            Customer\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsNotifySchedules\" id=\"Chk-IsNotifySchedules\"\n                                               value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-IsNotifySchedules\">\n                                            Provide Schedule\n                                            Details to\n                                            Customer\n                                        </label>\n                                    </div>\n                                    <!-- <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsRetailJob\"\n                                            id=\"Chk-AddressDetails_IsRetailJob\" value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-AddressDetails_IsRetailJob\">Retail\n                                            Location</label>\n                                    </div> -->\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsInvitationEnabled\" id=\"Chk-IsInvitationEnabled\"\n                                               value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-IsInvitationEnabled\">\n                                            Send Invitation\n                                            Link\n                                        </label>\n                                    </div>\n                                </div>\n\n                                <div formGroupName=\"AddressDetails\">\n\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsProFormaPoEnabled\"\n                                               id=\"Chk-AddressDetails_IsProFormaPoEnabled\" value=\"option1\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Chk-AddressDetails_IsProFormaPoEnabled\">\n                                            Enable\n                                            After-the-Fact POs (Optional)\n                                        </label>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"!f.IsRegularBuyer.value\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12 pr-0\">\n                                <h3>Asset</h3>\n                                <div formGroupName=\"AdditionalDetailsViewModel\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsAssetTracked\"\n                                               id=\"Chk-IsAssetTracked\" value=\"option1\" checked>\n                                        <label class=\"form-check-label\" for=\"Chk-IsAssetTracked\">\n                                            Enable Asset Level\n                                            Tracking\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsAssetDropStatusEnabled\" id=\"Chk-IsAssetDropStatusEnabled\"\n                                               value=\"option1\">\n                                        <label class=\"form-check-label\" for=\"Chk-IsAssetDropStatusEnabled\">\n                                            Enable drop\n                                            status for all assets\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"enableStatusForAllAssets\" formGroupName=\"FuelDeliveryDetails\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"checkbox\"\n                                               formControlName=\"IsPrePostDipRequired\"\n                                               id=\"Chk-FuelDeliveryDetails_IsPrePostDipRequired\" value=\"option1\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Chk-FuelDeliveryDetails_IsPrePostDipRequired\">\n                                            Require Pre-Post Dip test\n                                            data for Asset/Tank\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\n                    <div class=\"col-12\">\n                        <div class=\"well\">\n                            <div class=\"col-sm-12\">\n                                <h3 class=\"mt0\">Invoice Creation Preference</h3>\n                                <div class=\"form-group mb0\">\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"radio\"\n                                               formControlName=\"OrderEnforcementId\"\n                                               id=\"Radios-FuelDeliveryDetails_OrderEnforcementId\" [value]=\"1\" checked>\n                                        <label class=\"form-check-label\"\n                                               for=\"Radios-FuelDeliveryDetails_OrderEnforcementId\">\n                                            Enforce Order Level\n                                            Values\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"radio\"\n                                               formControlName=\"OrderEnforcementId\"\n                                               id=\"Radios-FuelDeliveryDetails_OrderEnforcementId_mange\" [value]=\"2\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Radios-FuelDeliveryDetails_OrderEnforcementId_mange\">\n                                            Manage\n                                            Exceptions\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check mb-1\">\n                                        <input class=\"form-check-input\" type=\"radio\"\n                                               formControlName=\"OrderEnforcementId\"\n                                               id=\"Radios-FuelDeliveryDetails_OrderEnforcementId_no\" [value]=\"3\">\n                                        <label class=\"form-check-label\"\n                                               for=\"Radios-FuelDeliveryDetails_OrderEnforcementId_no\">\n                                            No\n                                            Enforcement\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"fixed-footer-panel\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 text-right\">\n                    <input type=\"button\" value=\"Cancel\" (click)=\"onCancel()\" class=\"btn\">\n                    <input id=\"Submit\" type=\"button\" value=\"Submit\" (click)=\"onSubmit()\"\n                           class=\"btn btn-lg btn-primary btnSubmit\">\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n\n","<div class=\"sales-user-dashboard-container\">\n<!--Order Entry Form Start-->\n<form [formGroup]=\"SalesDRForm\" >\n<div class=\"container well accordion\"id=\"entryForm\">\n    <div class=\"loader\" *ngIf=\"IsLoading\">\n        <div class=\"loading-content text-center\">\n            <div class=\"spinner\"></div>\n        </div>\n    </div>\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-11\"><div class=\"well-header\"><h4 class=\"well-title\">Order Entry Form</h4></div></div>\r\n                    <div class=\"col-1 mt-2 d-flex justify-content-center\" *ngIf=!uparrow><i class=\"fas fa-chevron-down fa-2x arrow\" data-toggle=\"collapse\" data-target=\"#collapseEntryForm\" aria-expanded=\"true\" aria-controls=\"collapseEntryForm\" (click)=\"toggleArrow()\"></i></div>\r\n                    <div class=\"col-1 mt-2 d-flex justify-content-center\" *ngIf=uparrow><i class=\"fas fa-chevron-up fa-2x arrow\" data-toggle=\"collapse\" data-target=\"#collapseEntryForm\" aria-expanded=\"true\" aria-controls=\"collapseEntryForm\" (click)=\"toggleArrow()\"></i></div>\r\n                </div>\r\n                <div id=\"collapseEntryForm\" class=\"collapse show\" data-parent=\"#entryForm\">\r\n                    <div class=\"row well-header\">\r\n                        <div class=\"col-sm-4\">\r\n                            <label for=\"Quantity\" class=\"control-label font-weight-bold\">Company Name<span class=\"color-maroon\">*</span></label>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown class=\"single-select\"\r\n                                                         [placeholder]=\"'Select Company'\"\r\n                                                         [settings]=\"CompanySettings\"\r\n                                                         [data]=\"AllTPOCompaniesList\"\r\n                                                         formControlName=\"CompanyList\"\r\n                                                         (onSelect)=\"onCompanySelect($event)\"\r\n                                                         (onDeSelect)=\"onCompanyDeSelect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"formSubmitted && SalesDRForm.controls?.CompanyList?.errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"SalesDRForm.controls?.CompanyList?.errors?.required\">\r\n                                        Company is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <label for=\"Quantity\" class=\"control-label font-weight-bold\">Ship-to Location <span class=\"color-maroon\">*</span></label>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown class=\"single-select\"\r\n                                                         [placeholder]=\"'Select Ship-to location'\"\r\n                                                         [settings]=\"SingleSelectSettingsById\"\r\n                                                         [data]=\"SiteList\"\r\n                                                         formControlName=\"SiteList\"\r\n                                                         (onSelect)=\"onSiteSelect($event)\"\r\n                                                         (onDeSelect)=\"onSiteDeSelect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"formSubmitted && SalesDRForm.controls?.SiteList?.errors\">\r\n                                    <span class=\"text-danger\"\r\n                                          *ngIf=\"SalesDRForm.controls?.SiteList?.errors?.required\">\r\n                                        Ship-to location is required\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div formArrayName=\"AdditionalProducts\" *ngFor=\"let product of AdditionalProducts; let i=index; let isLast = last\" class=\"mx-3\">\r\n                        <div class=\"row well-header\" [formGroupName]=\"i\">\r\n                            <!--Repeating Row-->\r\n                            <div class=\"col-sm-12 addProdTemplate shadow-sm\">\r\n                                <div class=\"row mt-3\">\r\n                                    <!--Row 1-->\r\n                                    <div class=\"form-group col-sm-3\">\r\n                                        <!--Product-->\r\n                                        <label for=\"idFuelType\" class=\"control-label font-weight-bold\">Product</label>\r\n                                        <span class=\"color-maroon\">*</span>\r\n                                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                                 formControlName=\"FuelTypes\"\r\n                                                                 id=\"FuelTypes\"\r\n                                                                 [placeholder]=\"'Select Product'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelTypeList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <div *ngIf=\"formSubmitted && SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.FuelTypes?.errors ? true : false\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.FuelTypes?.errors?.required ? true : false\">\r\n                                                Product is Required.\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group col-sm-3\">\r\n                                        <!--Quantity-->\r\n                                        <label for=\"Quantity\" class=\"control-label font-weight-bold\">Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input type=\"text\" value='' class=\"form-control\" id=\"Quantity\" placeholder=\"\" formControlName=\"Quantity\">\r\n                                        <div *ngIf=\"formSubmitted && SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.Quantity?.errors ? true : false\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.Quantity?.errors?.required ? true : false\">\r\n                                                Quantity is required\r\n                                            </span>\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls.Quantity?.errors?.pattern ? true : false\">\r\n                                                Quantity is Invalid\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group col-sm-3\">\r\n                                        <!--UoM-->\r\n                                        <label for=\"idUoM\" class=\"control-label font-weight-bold\">UoM<span class=\"color-maroon\">*</span></label>\r\n                                        <select class=\"form-control\" id=\"idUoM\"\r\n                                                formControlName=\"UoM\">\r\n                                            <option value=\"1\">Gallons</option>\r\n                                            <option value=\"2\">Litres</option>\r\n                                            <option value=\"3\">Barrels</option>\r\n                                            <option value=\"4\">MetricTons</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"formSubmitted && SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.UoM?.errors ? true : false\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"SalesDRForm.controls?.AdditionalProducts?.controls[i]?.controls?.UoM?.errors?.required ? true : false\">\r\n                                                UoM is required\r\n                                            </span>\r\n                                        </div>\r\n                                    </div><!--End of UoM-->\r\n                                    <div class=\"col-sm-3 form-group\">\r\n                                        <!--DR-PO#-->\r\n                                        <label for=\"DR_PO\" class=\"control-label font-weight-bold\">Delivery Level PO#</label>\r\n                                        <input type=\"text\" value='' class=\"form-control\" id=\"DR_PO\" placeholder=\"\" formControlName=\"DRPO\">\r\n                                        <!-- Uncomment Below for Required Validations -->\r\n                                        <!-- <div *ngIf=\"formSubmited && SalesDRForm.controls.AdditionalProducts[i].controls.DRPO.errors\">\r\n                                <span class=\"text-danger\"\r\n                                      *ngIf=\"SalesDRForm.controls.AdditionalProducts[i].controls.DRPO.errors?.required\">\r\n                                      DR-PO# is required\r\n                                </span>\r\n                            </div> -->\r\n                                    </div>\r\n                                </div><!--End of Row 1-->\r\n\r\n                                <div class=\"row\">\r\n                                    <!--Row 2-->\r\n                                    <div class=\"form-group col-sm-3 col-md-2\">\r\n                                        <label class=\"font-weight-bold\">Start Date <!-- <span class=\"color-maroon\">*</span> --></label>\r\n                                        <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\"\r\n                                               placeholder=\"Start Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                               [maxDate]=\"maxDate\" [minDate]=\"minDate\"\r\n                                               (onDateChange)=\"SetStartDate($event, i)\" autocomplete=\"off\" />\r\n                                        <!--  <div *ngIf=\"formSubmited && SalesDRForm.controls.AdditionalProducts[i].controls.StartDate.invalid && SalesDRForm.controls.AdditionalProducts[i].controls.StartDate.touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SalesDRForm.controls.AdditionalProducts[i].controls.StartDate.errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div> -->\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-3 col-md-2 form-group\">\r\n                                        <label for=\"idStartTime\" class=\"font-weight-bold\">Start Time</label>\r\n                                        <input type=\"text\" class=\"form-control timepicker\"\r\n                                               formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                               placeholder=\"Start Time\"\r\n                                               (onTimeChange)=\"SetStartTime($event, i)\" autocomplete=\"off\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-3 col-md-2 form-group\">\r\n                                        <label for=\"idEndTime\" class=\"font-weight-bold\">End Time</label>\r\n                                        <input type=\"text\" class=\"form-control timepicker\"\r\n                                               formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                               placeholder=\"End Time\"\r\n                                               (onTimeChange)=\"SetEndTime($event, i)\" autocomplete=\"off\" />\r\n                                    </div>\r\n                                </div><!--End of Row 2-->\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-12 form-group\">\r\n                                        <a class=\"float-right\" *ngIf=\"i > 0\">\r\n                                            <i class=\"fa fa-trash-alt text-danger\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Remove\" (click)=\"removeProduct(i)\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div><!--End of Repeating Row-->\r\n                    </div>\r\n                    <div class=\"row well-header\">\r\n                        <!-- Add Product Row-->\r\n                        <div class=\"col-sm-4\">\r\n                            <a class=\"add-partial-block\" (click)=\"addProducts()\">\r\n                                <i class=\"fas fa-plus-circle\"></i>\r\n                                Add Product\r\n                            </a>\r\n                        </div>\r\n                    </div> <!--End of Add Product Row-->\r\n                    <div class=\"row well-header\">\r\n                        <!--DRNotes Row-->\r\n                        <div class=\"form-group col-sm-3\">\r\n                            <label for=\"DRNotes\" class=\"font-weight-bold\">DR Notes</label>\r\n                            <textarea name=\"DRNotes\" id=\"DRNotes\" cols=\"30\" rows=\"2\" formControlName=\"DRNotes\"></textarea>\r\n                        </div>\r\n                    </div><!--End of DRNotes Row-->\r\n\r\n                    <div class=\"row\">\r\n                        <!--Clear and Submit Buttons-->\r\n                        <div class=\"col-sm-12 text-right\">\r\n                            <div class=\"container form-group\">\r\n                                <input type=\"button\" value=\"Clear\" class=\"btn\" (click)=\"clearSalesDRForm()\" data-toggle=\"modal\" data-target=\"#validateModal\">&nbsp;&nbsp;\r\n                                <input id=\"Submit\" type=\"button\" value=\"Submit\" (click)=\"onValidate()\"\r\n                                       class=\"btn btn-lg btn-primary btnSubmit\">\r\n                            </div>\r\n                        </div>\r\n                    </div><!--End of Clear and Submit Buttons-->\r\n                </div>\r\n            </div>\r\n    </div>\n</div>\n\n</form>\n<!--Order Entry Form End-->\n\n<!--Order Entry Form Validations-->\n<div class=\"container p-0\">\n    <div class=\"container well\">\n        <div class=\"loader\" *ngIf=\"IsLoading\">\n            <div class=\"loading-content text-center\">\n                <div class=\"spinner\"></div>\n            </div>\n        </div>\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"modal fade\" id=\"validateModal\" tabindex=\"-1\" [ngClass]=\"{'show': showModal}\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <div class=\"col-sm-8 text-left \">\n                                <h4 class=\"modal-title pull-left p-0\"><b>Preview</b></h4>\n                            </div>\n                            <div class=\"col-sm-4 text-right\">\n                                <button class=\"close pull-right\" data-dismiss=\"modal\" (click)=\"showModal = false\">&times;</button>\n                            </div>\n                        </div>\n\n                        <div class=\"modal-body\">\n                            <div class=\"row form-group\" *ngIf=\"salesDrModel != undefined && ((salesDrModel | json) != '{}')  \">\n                                <div class=\"col-sm-4\">\n                                    <h5 class=\"font-800\">Customer Company</h5>\n                                    <div><span>{{salesDrModel.CompanyName}}</span></div>\n                                </div>\n                                <div class=\"col-sm-4\">\n                                    <h5 class=\"font-800\">Location Name</h5>\n                                    <div><span>{{salesDrModel.JobName}}</span></div>\n                                </div>\n                            </div>\n\n                            <table class=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Product</th>\n                                        <th>Quantity</th>\n                                        <th>Delivery Date</th>\n                                        <th>Delivery Window</th>\n                                        <th>Status</th>\n                                    </tr>\n                                </thead>\n                                <tbody *ngIf=\"ProductStatuses != undefined && ProductStatuses.length > 0\">\n                                    <tr *ngFor=\"let prodStatus of ProductStatuses\">\n                                        <td>{{prodStatus.Product.FuelName}}</td>\n                                        <td>{{prodStatus.Product.Quantity}} &nbsp; {{ GetUoMString(prodStatus.Product.UoM) }}</td>\n                                        <td>{{prodStatus.Product.StartDate}}</td>\n                                        <td>{{prodStatus.Product.StartTime}} - {{prodStatus.Product.EndTime}}</td>\n                                        <td class=\"text-center\"><span class=\"dot tooltip-dot\" [ngStyle]=\"{backgroundColor: getBGColor(prodStatus)}\" placement=\"bottom\" container=\"body\" ngbTooltip=\"{{GetToolTip(prodStatus)}}\"></span></td>\n                                    </tr>   \n                                </tbody>\n                            </table>\n\n                            <div class=\"row form-group\">\n                                <div class=\"col-sm-12\">\n                                    <p class=\"font-weight-bold my-2\">DR Notes</p>\n                                    <div>{{salesDrModel.DRNotes}}</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"modal-footer\">\n                            <div class=\"col-sm-12 text-right pull-right pr-0\">\n                                <button class=\"btn btn-clear\" data-dismiss=\"modal\" (click)=\"showModal = false\">Back</button>\n                                <button class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"isConfirmDisabled\">Confirm</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!--End of Order Entry Form Validations-->\n\n\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"well\">\n                <div class=\"well-header\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-9 form-row align-items-center\">\n                            <div class=\"d-inline-block\">\n                                <h4 class=\"well-title\">Sourcing Request</h4>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                            <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigateToSourcing()\">View More</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"well-body  padding-8\">\n                    <div class=\"table-wrapper\">\n                        <!-- <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\n                            <span class=\"spinner-dashboard pa\"></span>\n                        </div> -->\n                        <table  class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th >Request #</th>\n                                    <th >Location</th>\n                                    <th >Fuel Type</th>\n                                    <th >Quantity</th>\n                                    <th >Pricing</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let item of Sourcingrequests\">\n                                    <td>{{item.RequestNumber}}</td>\n                                    <td>{{item.JobName}} </td>\n                                    <td>{{item.FuelType }}</td>\n                                    <td>{{item.Quantity}}</td>\n                                    <td>{{item.Pricing}}</td>                  \n                                </tr>\n                                <tr *ngIf=\"Sourcingrequests && Sourcingrequests.length==0\">\n                                    <td colspan=\"5\">\n                                        <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                            <div class=\"col-12 align-items-center text-center\">\n                                                <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                <h4>No Data Found</h4>\n                                            </div>\n                                        </div>\n                                     </td>  \n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"well\">\n                <div class=\"well-header\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-9 form-row align-items-center\">\n                            <div class=\"d-inline-block\">\n                                <h4 class=\"well-title\">Orders</h4>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                            <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigateToOrders()\">View More</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"well-body  padding-8\">\n                    <div class=\"table-wrapper\">\n                        <table  class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th >PO #</th>\n                                    <th >Location Name</th>\n                                    <th >Customer</th>\n                                    <th >Fuel Type</th>\n                                    <th >Quantity</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of orders\">\n                                    <td>{{item.PoNumber}}</td>\n                                    <td>{{item.JobName}} </td>\n                                    <td>{{item.Customer }}</td>\n                                    <td>{{item.FuelType}}</td>\n                                    <td>{{item.Quantity}}</td>         \n                                    </tr>\n                                    <tr *ngIf=\"orders && orders.length==0\">\n                                        <td colspan=\"5\">\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Data Found</h4>\n                                                </div>\n                                            </div>\n                                         </td>  \n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n   \n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"well\">\n                <div class=\"well-header\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-9 form-row align-items-center\">\n                            <div class=\"d-inline-block\">\n                                <h4 class=\"well-title\">{{ (activeInvoiceDDTTab==6)? 'DDTs' : 'Invoices' }}</h4>\n                            </div>\n                            <div class=\"dib border radius-capsule shadow-b ml20\">\n                                <div class=\"btn-group btn-filter\">\n                                    <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"0\" [checked]=\"activeInvoiceDDTTab==0\">\n                                    <label class=\"btn ml0\" (click)=\"changeActiveTab(0)\">Invoices</label>\n                                    <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"6\" [checked]=\"activeInvoiceDDTTab==6\">\n                                    <label class=\"btn\" (click)=\"changeActiveTab(6)\">DDTs</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                            <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigateToInvoice()\">View More</button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"well-body  padding-8\">\n                    <div class=\"table-wrapper\">\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>InvoiceNumber #</th>\n                                    <th>PoNumber</th>\n                                    <th>SourcingRequest</th>\n                                    <th>DropDate</th>\n                                    <th>Status</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of Invoices\">\n                                        <td>{{item.InvoiceNumber}}</td>\n                                        <td>{{item.PoNumber}} </td>\n                                        <td>{{item.SourcingRequest }}</td>\n                                        <td>{{item.DropDate}}</td>\n                                        <td>\n                                            <span class=\"badge badge-pill badge-primary\" [ngClass]=\"{'badge-success': item?.Status=='Received','badge-danger': item?.Status=='Rejected','badge-warning': item?.Status.length>8 }\"\n                                                  placement=\"left\"\n                                                  ngbTooltip=\"{{item?.Status}}\">\n                                                {{ (item?.Status.length>8)? (item?.Status | slice:0:8)+'..':(item?.Status) }}\n                                            </span>\n                                        </td>\n                                    </tr>\n                                    <tr *ngIf=\"Invoices && Invoices.length==0\">\n                                        <td colspan=\"5\">\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Data Found</h4>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { SalesUserService } from '../sales-user.service';\nimport { SourcingRequestDisplayStatus, UoM } from 'src/app/app.enum';\nimport { Form, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { ConfirmDRStatus, CustomCompanyModel, CustomersAndJobs, CustomersModel, DeliveryRequestInputModel, ProductsGroup, SalesDRModel, SalesUserDRProductStatus, SalesUserDRStatus } from '../sales-user.model';\nimport * as moment from 'moment';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-sales-user-dashboard',\n  templateUrl: './sales-user-dashboard.component.html',\n  styleUrls: ['./sales-user-dashboard.component.scss']\n})\nexport class SalesUserDashboardComponent implements OnInit, OnChanges {\n\n  public IsLoading: boolean = false;\n  Sourcingrequests: any = [];\n    orders: any = [];\n    Invoices: any = [];\n    activeInvoiceDDTTab = 0;\n    public minDate: Date = new Date();\n    public maxDate: Date = new Date();\n    @Input() private SelectedDate: Date = new Date();\n    formSubmitted = false;\n    selectedCompany:{CompanyId: number, CompanyName: string} = {CompanyId: 0, CompanyName: \"\"};\n    selectedSite:{Id: number, Name: string} = {Id: 0, Name: \"\"};\n    CompanySettings: IDropdownSettings = {};\n    SiteddlSettings: IDropdownSettings = {};\n    companyList = [];\n    SiteList= [];\n    IsEditable: boolean;\n    SingleSelectSettingsById: IDropdownSettings = {};\n    FuelTypeList = [];\n    SalesDRForm: FormGroup;\n    public isLoadingSubject: BehaviorSubject<any>;\n    AllTPOCompaniesList = [];\n    UserContext = {};\n    postData= {};\n    AdditionalProducts: FormGroup[];\n    showModal = false;\n    CustomersJobsParentList: CustomersModel = {regionsAndJobsModels: [], customersandJobs: []};;\n    CustomersNJobsList: CustomersAndJobs[];\n    salesDrModel: SalesDRModel;\n    DRInput: DeliveryRequestInputModel[] = [];\n    ProductStatuses: SalesUserDRProductStatus[] = [];\n    Unit: UoM;\n    isConfirmDisabled: boolean = false;\n    QuantityRegEx = /^\\d*(\\.\\d{1,4})?$/;\n    initFormValues: any;\n    uparrow = true; \n\n\n  public DisplayRequestStatus = SourcingRequestDisplayStatus;\n  \n  constructor(private salesUserService: SalesUserService,private router: Router, private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService) {\n    this.getUserContext();\n    this.AdditionalProducts = [];\n    this.maxDate.setFullYear(this.maxDate.getFullYear() + 1);\n   }\n\n  ngOnInit() {\n    this.multiSettings();\n    this.salesDrModel = new SalesDRModel();\n    this.SalesDRForm = this.initSalesDRForm();\n    this.initFormValues = this.SalesDRForm.value;\n    this.getSourcingRequests();\n    this.getOrders();\n    this.getInvoices(0);\n    this.GetCustomersNJobs();\n    this.getProducts(0, 0);//By Default Get All Products\n\n  }\n\n  ngOnChanges(change: SimpleChanges): void {\n    if (change.SelectedDate && change.SelectedDate.currentValue) {\n        if (this.maxDate < this.SelectedDate) {\n            this.maxDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\n            this.minDate = moment(new Date(this.SelectedDate)).toDate();\n        } else {\n            this.minDate = moment(new Date(this.SelectedDate)).toDate();\n            this.maxDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\n        }\n\n    }\n}\n\n  SetStartDate(date: string, index: number) {\n      let _date = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).controls[index] as FormGroup).controls['StartDate'];\n      if (_date.value != date) {\n          _date.patchValue(date);\n      }\n  }\n\n  SetStartTime(time: string, index: number) {\n    let _startTime = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).controls[index] as FormGroup).controls['StartTime'];\n      if (_startTime.value != time) {\n        _startTime.patchValue(time);\n      }\n  }\n\n  SetEndTime(time: string, index: number) {\n    let _endTime = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).controls[index] as FormGroup).controls['EndTime'];\n      if (_endTime.value != time) {\n        _endTime.patchValue(time);\n      }\n  }\n  GetUoMString(Uom:UoM): string {\n    let UoMString:string = UoM[Uom];\n    return UoMString;\n  }\n\n  GetToolTip(prodStatus: SalesUserDRProductStatus) {\n    if(prodStatus.Status.State != SalesUserDRStatus.Success) {\n        return \"This customer is not set up to receive\\n this product at this location; please \\ncontact accounting for assistance.\";\n    }\n    else {\n        return \"\";\n    }\n  }\n\n\n  RemoveToolTip(event: MouseEvent) {\n    (<HTMLSpanElement>event.target).title = \"\";\n    //(<HTMLSpanElement>event.target).title = \"\";\n  }\n    getBGColor(prodStatus: SalesUserDRProductStatus) {\n    return (prodStatus.Status.State == SalesUserDRStatus.Success) ? 'green' : 'red';\n  }\n  GetCustomersNJobs() {\n    this.IsLoading = true;\n    this.salesUserService.GetCustomersAndLocations().subscribe(customersAndLocations => {\n      if (customersAndLocations) {\n        var _cusAndLocations = customersAndLocations;\n        var _joblist = customersAndLocations.customersandJobs.map(item => {\n          return {\n            Id: item.JobId,\n            Name: item.JobName\n          } \n        });\n\n        var _custlist = customersAndLocations.customersandJobs.map(item => {\n          return {\n            CompanyId: item.CustomerId,\n            CompanyName: item.CustomerName\n          } \n        });\n      }\n      this.SiteList = _joblist;\n\n      //Filter Unique Customers\n      this.AllTPOCompaniesList = this.FilterUniqueCustomers(_custlist);\n      //Sort Customers by Name\n      this.AllTPOCompaniesList.sort((a,b) => (a.CompanyName.toLowerCase() > b.CompanyName.toLowerCase()) ? 1 : ((b.CompanyName.toLowerCase() > a.CompanyName.toLowerCase()) ? -1 : 0));\n      \n      //Sort Job By Names\n      this.SiteList.sort((a,b) => (a.Name.toLowerCase() > b.Name.toLowerCase()) ? 1 : ((b.Name.toLowerCase() > a.Name.toLowerCase()) ? -1 : 0));\n\n      this.CustomersJobsParentList = _cusAndLocations;\n      this.IsLoading = false;\n    });\n\n   \n  }\n\n  FilterUniqueCustomers(custList: CustomCompanyModel[]): CustomCompanyModel[] {\n    const res = [];\n    const map = new Map();\n    for(const item of custList) {\n        if(!map.has(item.CompanyId)) {\n            map.set(item.CompanyId, true);\n            res.push({\n                CompanyId: item.CompanyId,\n                CompanyName: item.CompanyName\n            });\n        }\n    }\n    return res;\n  }\n  getProducts(companyId: number, jobId: number) {\n    this.IsLoading = true;\n    this.salesUserService.GetProducts(companyId, jobId).subscribe(data =>{\n      this.FuelTypeList = data; \n      this.IsLoading = false;\n    })\n    \n  }\n  addProducts() {\n    this.formSubmitted = false;\n    this.AdditionalProducts.push(this.initAdditionalProducts());\n    (this.SalesDRForm.get('AdditionalProducts') as FormArray).push(this.initAdditionalProducts());\n    this.setProducts();\n  }\n\n  setProducts() {\n    if(this.selectedSite.Id > 0 && this.selectedCompany.CompanyId > 0) {\n      this.getProducts(this.selectedCompany.CompanyId, this.selectedSite.Id);\n    }\n    else {\n      this.getProducts(0, 0);\n    }\n  }\n\n  removeProduct(index) {\n    this.formSubmitted = false;\n    (this.SalesDRForm.controls.AdditionalProducts as FormArray).removeAt(index);\n    this.AdditionalProducts.splice(index, 1);\n  }\n\n  initAdditionalProducts(): FormGroup {\n    let _addProd = this.fb.group({\n        Quantity: this.fb.control('', [Validators.required, Validators.pattern(this.QuantityRegEx)]),\n        UoM: this.fb.control(1, Validators.required),\n        StartDate: this.fb.control(''),\n        StartTime: this.fb.control(''),\n        EndTime: this.fb.control(''),\n        FuelTypes: this.fb.control([], Validators.required),\n        DRPO: this.fb.control('')\n    });\n    return _addProd;\n  }\n\n  initSalesDRForm(): FormGroup {\n    this.AdditionalProducts.push(this.initAdditionalProducts());\n    let _form = this.fb.group({\n      CompanyList: this.fb.control([], Validators.required),\n      SiteList: this.fb.control([], Validators.required),\n      DRNotes: this.fb.control(''),\n      AdditionalProducts: this.fb.array(this.AdditionalProducts)\n     });\n     return _form;\n  }\n\n  getCompanies() {\n    //this.isLoadingSubject.next(true);\n    this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\n      this.companyList = await (data);\n      //this.isLoadingSubject.next(false);\n  });\n  }\n\n  getUserContext() {\n    this.salesUserService.GetUserContext().subscribe(data => {\n        this.UserContext = data;\n    })\n}\n\n  clearProducts() {\n    if(this.SalesDRForm.controls.AdditionalProducts != undefined && this.SalesDRForm.controls.AdditionalProducts != null && (this.SalesDRForm.controls.AdditionalProducts as FormArray).length > 1) {\n      for(let i = ((this.SalesDRForm.controls.AdditionalProducts as FormArray).length - 1); i > 0; i--) {\n        this.removeProduct(i);\n      }\n    }\n  }\n\n  clearSalesDRForm(){\n    this.clearProducts();\n    this.SalesDRForm.reset(this.initFormValues);\n    this.formSubmitted = false;\n\n  }\n\nupdateFormControlValidators(control: any, validators: any[]) {\n  control.setValidators(validators);\n  control.updateValueAndValidity();\n}\n\nFindSuccessStatus(status, index) {\n  if(status.Status.State ==  SalesUserDRStatus.Success) {\n    return status.Status.State == SalesUserDRStatus.Success;\n  }\n}\n\nonValidate() {\n  this.IsLoading = true;\n  //Copy Form values to model\n  this.formSubmitted = true;\n  if(!this.SalesDRForm.valid) {\n    this.IsLoading = false;\n    return;\n  }\n  this.SalesDRformToModel();\n\n  //Post the model for validations\n  this.salesUserService.ValidateDREntryForm(this.salesDrModel).subscribe(res => {\n    if(res) {\n      var _inputDR = res;\n    }\n\n    this.DRInput = _inputDR.RaiseDeliveryRequestInput;\n    this.ProductStatuses = _inputDR.ProductStatuses;\n    if(this.ProductStatuses && this.ProductStatuses.length > 0) {\n      let successStatus = this.ProductStatuses.find((status, index) => this.FindSuccessStatus(status, index));\n      this.isConfirmDisabled = successStatus ? false : true;\n    }\n    this.IsLoading = false;\n  });\n  \n  this.showModal = true;\n}\n\n  onSubmit() {\n   this.IsLoading = true;\n\n    this.salesUserService.CreateDREntryForm(this.DRInput).subscribe(data => {\n      if (data && data.StatusCode == ConfirmDRStatus.Success) {\n          var _DRstatus = data;\n\n          Declarations.msgsuccess(\"DR/Order Creation was Successful.\", undefined, undefined);\n          this.IsLoading = false;\n      } else {\n          Declarations.msgerror(data.StatusMessage, undefined, undefined);\n          this.IsLoading = false;\n          return;\n      }\n\n    })\n    \n    this.clearForm();\n  }\n\n  clearForm() {\n    this.salesDrModel = new SalesDRModel();\n    this.clearSalesDRForm();\n    this.SalesDRForm.reset(this.initFormValues);\n    this.showModal = false;\n    this.formSubmitted = false;\n  }\n\n  multiSettings() {\n    this.CompanySettings = {\n      singleSelection: true,\n      closeDropDownOnSelection: true,\n      idField: 'CompanyId',\n      textField: 'CompanyName',\n      enableCheckAll: false,\n      itemsShowLimit: 1,\n      allowSearchFilter: true\n    };\n    this.SingleSelectSettingsById = {\n      singleSelection: true,\n      closeDropDownOnSelection: true,\n      idField: 'Id',\n      textField: 'Name',\n      enableCheckAll: false,\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 1,\n      allowSearchFilter: true\n    };\n  }\n\n  onCompanySelect(company: any): void {\n        this.SalesDRForm.controls.SiteList.setValue([]);\n        (this.SalesDRForm.controls.AdditionalProducts as FormArray).controls.forEach(x=> x.reset(this.initAdditionalProducts().value));\n        this.selectedCompany.CompanyId = company.CompanyId;\n        this.selectedCompany.CompanyName = company.CompanyName;\n        this.SalesDRForm.controls.CompanyList.setValue([{ CompanyId: company.CompanyId, CompanyName: company.CompanyName }]);\n        \n        var _filteredSites = this.CustomersJobsParentList.customersandJobs.filter(x => x.CustomerId == company.CompanyId).map(item => {\n          return {\n            Id: item.JobId,\n            Name: item.JobName\n          }\n        });\n\n        this.SiteList = _filteredSites;\n        this.SiteList.sort((a,b) => (a.Name.toLowerCase() > b.Name.toLowerCase()) ? 1 : ((b.Name.toLowerCase() > a.Name.toLowerCase()) ? -1 : 0));\n        if(this.selectedSite.Id > 0 && this.selectedCompany.CompanyId > 0) {\n          this.getProducts(this.selectedCompany.CompanyId, this.selectedSite.Id);\n        }\n        else {\n          this.getProducts(0, 0);\n        }\n        \n      /*this.selectedOrder = [];\n      this.SelectedCustomerId = item.CompanyId;\n      this.SiteList = this.drOrders.filter(x => x.CompanyId == item.CompanyId).map((element) => ({ Id: element.JobId, Name: element.JobName }));\n      this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), [])); */\n  }\n\n  onCompanyDeSelect(event: any) {\n    this.selectedCompany.CompanyId = 0;\n    this.selectedSite.Id = 0;\n    this.SiteList = [];\n    this.FuelTypeList = [];\n    this.SalesDRForm.controls.SiteList.setValue([]);\n    this.getProducts(0, 0);\n    this.clearForm();\n  }\n\n  onSiteSelect(sites: any) {\n    (this.SalesDRForm.controls.AdditionalProducts as FormArray).controls.forEach(x=> x.reset(this.initAdditionalProducts().value));\n      this.selectedSite.Id = sites.Id;\n      this.selectedSite.Name = sites.Name;\n      this.SalesDRForm.controls.SiteList.setValue([{ Id: sites.Id, Name: sites.Name }]);\n\n      if(this.selectedSite.Id > 0 && this.selectedCompany.CompanyId > 0) {\n        this.getProducts(this.selectedCompany.CompanyId, this.selectedSite.Id);\n      }\n      else {\n        this.getProducts(0, 0);\n      }\n  }\n\n  onSiteDeSelect(event: any) {\n    this.FuelTypeList = []; \n    (this.SalesDRForm.controls.AdditionalProducts as FormArray).controls.forEach(x=> x.reset(this.initAdditionalProducts().value));\n    this.getProducts(0, 0);\n  }\n\n\nSalesDRformToModel() {\n  this.salesDrModel = new SalesDRModel();\n  if(this.SalesDRForm.valid) {\n    this.salesDrModel.CompanyId = this.SalesDRForm.controls.CompanyList.value[0].CompanyId;\n  this.salesDrModel.CompanyName = this.SalesDRForm.controls.CompanyList.value[0].CompanyName;\n  this.salesDrModel.JobId = this.SalesDRForm.controls.SiteList.value[0].Id;\n  this.salesDrModel.JobName = this.SalesDRForm.controls.SiteList.value[0].Name;\n  this.salesDrModel.DRNotes = this.SalesDRForm.controls.DRNotes.value;\n  this.salesDrModel.Products = [];\n  var addProducts = this.SalesDRForm.controls.AdditionalProducts as FormArray;\n\n\n  for(let control of addProducts.controls) {\n    if(control instanceof FormGroup) {\n      this.salesDrModel.Products.push({\n        Quantity: control.value.Quantity,\n        UoM: control.value.UoM,\n        StartDate: control.value.StartDate,\n        StartTime: control.value.StartTime,\n        EndTime: control.value.EndTime,\n        DRPO: control.value.DRPO,\n        FuelTypes: {Id: control.value.FuelTypes[0].Id, Name: control.value.FuelTypes[0].Name},\n        FuelTypeId: control.value.FuelTypes[0].Id,\n        FuelName: control.value.FuelTypes[0].Name\n\n      });\n    }\n  }\n  }\n  \n}\n\npublic getJobLists(companyId, isFtl, foAsTerminal) {\n  let companyName = this.AllTPOCompaniesList.find(t => t.CompanyId == companyId).CompanyName;\n  let ftlvalue = isFtl == \"FullTruckLoad\" ? true : false;\n  let tervalue = foAsTerminal == \"Terminal\" ? true : false;\n  this.salesUserService.GetJobLists(companyName, ftlvalue, tervalue).subscribe(data => {\n      if (data) {\n          let joblistdata = data.map(item => {\n              return {\n                  Id: item.Id,\n                  Name: item.Name\n              }\n          });\n          this.SiteList = joblistdata;\n      }\n  });\n}\n\n    public toggleArrow() {\n        this.uparrow = !this.uparrow;\r\n    }\n  public getSourcingRequests() \n  {\n    this.IsLoading = true;\n    var isFromDashboard = true;\n      this.salesUserService.GetSourcingRequests(this.DisplayRequestStatus.All ,isFromDashboard).subscribe(data => {\n      this.IsLoading = false;\n      this.Sourcingrequests = data;\n    });\n  }\n  public getOrders() \n  {\n    this.IsLoading = true;\n    this.salesUserService.GetOrdersForDashboard().subscribe(data => {\n      this.IsLoading = false;\n      this.orders = data;\n    });\n  }\n    public getInvoices(type) {\n        this.IsLoading = true;\n        this.salesUserService.GetInvoicesForDashboard(type).subscribe(data => {\n            this.IsLoading = false;\n            this.Invoices = data;\n        });\n    }\n    public changeActiveTab(type) {\n        this.activeInvoiceDDTTab = type;\n        this.getInvoices(type);\n    }\n  public navigateToSourcing(): void {\n    this.router.navigate([]).then(result => { window.open('/SalesUser/SourcingRequest/Index', '_blank'); });\n  }\n  public navigateToOrders(): void {\n    this.router.navigate([]).then(result => { window.open('/Supplier/Order/View', '_blank'); });\n  }\n    public navigateToInvoice(): void {\n        this.router.navigate([]).then(result => { window.open('Supplier/Invoice/View', '_blank'); });\n    }\n}\n\n","import * as internal from \"stream\";\r\nimport { DropDown } from \"../app.constants\";\r\nimport { UoM } from \"../app.enum\";\r\n\r\nexport class Geocode {\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n    CountyName: string;\r\n    StateCode: string;\r\n    StateName: string;\r\n    City: string;\r\n    CountryCode: string;\r\n    CountryName: string;\r\n    ZipCode: string;\r\n}\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class FeeModel {\r\n    public OrderId: number;\r\n    public Currency: number;\r\n    public TruckLoadType: number;\r\n    public TruckLoadCategoryId: number;\r\n    public CommonFee: boolean;\r\n    public FeeConstraintTypeId: number;\r\n    public SpecialDate: string;\r\n    public FeeTypeId: string;\r\n    public FeeSubTypeId: number;\r\n    public OtherFeeDescription: string;\r\n    public MinimumGallons: number;\r\n    public DeliveryFeeByQuantity: ByQuantityModel[];\r\n    public Fee: number;\r\n    public IncludeInPPG: boolean;\r\n}\r\n\r\nexport class ByQuantityModel {\r\n    Currency: number;\r\n    MinQuantity: number = 0;\r\n    MaxQuantity: number;\r\n    Fee: number;\r\n}\r\n\r\nexport class ContactPersonModel {\r\n    public ContactPersonModel() {\r\n        this.IsPhoneNumberConfirmed = true;\r\n    }\r\n    public Name: string;\r\n    public PhoneNumber: string;\r\n    public Email: string;\r\n    public IsPhoneNumberConfirmed: boolean;\r\n}\r\n\r\nexport class GeneralNote {\r\n    UserName: string;\r\n    Note: string;\r\n    CreatedDate: string;\r\n}\r\n\r\nexport class SalesDRModel {\r\n    constructor() {\r\n        this.CompanyId = 0;\r\n        this.CompanyId = 0;\r\n        this.CompanyName = \"\";\r\n        this.DRNotes = \"\";\r\n        this.JobId = 0;\r\n        this.JobName = \"\";\r\n        this.Products = [];\r\n    }\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    JobId: number;\r\n    JobName: string;\r\n    Products: ProductsGroup[];\r\n    DRNotes: string;\r\n}\r\n\r\nexport class CustomersAndJobs\r\n{\r\n    CustomerId:number\r\n    CustomerName:string\r\n    JobId:number\r\n    JobName:string\r\n}\r\n\r\nexport class DDL {\r\n    Id: number;\r\n    Name: string;\r\n}\r\nexport class ProductsGroup {\r\n    Quantity: number;\r\n    UoM: UoM;\r\n    StartDate: string;\r\n    StartTime: string;\r\n    EndTime: string;\r\n    DRPO: string;\r\n    FuelTypes: {Id: number, Name: string};\r\n    FuelTypeId: number;\r\n    FuelName: string;\r\n}\r\n\r\nexport class CustomersModel\r\n{\r\n    regionsAndJobsModels: RegionsAndJobsModel[] = [];\r\n    customersandJobs: CustomersAndJobs[] = [];\r\n}\r\nexport class RegionsAndJobsModel\r\n{\r\n    RegionId: string;\r\n    CompanyId: number;\r\n    Jobs: DDL[];\r\n}\r\n\r\nexport enum SalesUserDRStatus{\r\n    Success = 1,\r\n    Error = 2,\r\n    RegionNotFound = 3,\r\n    FuelRequestNotFound = 4,\r\n    OrderNotFound = 5\r\n}\r\n\r\nexport enum ConfirmDRStatus\r\n{\r\n    Success = 0,\r\n    Failed = 1,\r\n    Warning = 2,\r\n}\r\n\r\nexport class SalesUserDRStatusModel\r\n{\r\n    State: SalesUserDRStatus;\r\n    Code: number;\r\n    Message:string;\r\n}\r\nexport class SalesUserDRProductStatus\r\n{\r\n     Status:SalesUserDRStatusModel;\r\n     Product: ProductsGroup;\r\n}\r\n\r\nexport class ValidateDREntryResponse {\r\n\r\n    ProductStatuses: SalesUserDRProductStatus[];\r\n    RaiseDeliveryRequestInput: DeliveryRequestInputModel[];\r\n}\r\n\r\nexport class DeliveryRequestInputModel {\r\n    JobId: number;\r\n    RequiredQuantity: number;\r\n    UserId: number;\r\n    AssignedToRegionId: string;\r\n    BuyerCompanyId: number;\r\n    UoM: number;\r\n    FuelType: string;\r\n    ScheduleQuantityType: number;\r\n    CustomerCompany: string;\r\n    DeliveryDateStartTime: string;\r\n    WindowStartTime:string;\r\n    WindowEndTime: string;\r\n    DispatcherNote: string;\r\n    WindowStartDate: string;\r\n    JobName: string;\r\n    SupplierCompanyId: number;\r\n    DeliveryRequestFor: number;\r\n    OrderId: number;\r\n    TankId: string;\r\n    StorageId: string;\r\n    SelectedDate: string;\r\n}\r\n\r\nexport class CustomCompanyModel {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SalesUserDashboardComponent } from './sales-user-dashboard/sales-user-dashboard.component';\nimport { SharedModule } from '../modules/shared.module';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateSourcingRequestComponent } from './create-sourcing-request/create-sourcing-request.component';\nimport { SourcingRequestGridComponent } from './sourcing-request-grid/sourcing-request-grid/sourcing-request-grid.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport { FeesModule } from 'src/app/fees/fees.module';\nimport { PricingSectionModule } from '../shared-components/pricing-section/pricing-section.module';\nimport { ContactPersonComponent } from 'src/app/contact-person/contact-person.component';\n\n\nconst route:Routes=[\n  {\n    path:'Dashboard',\n    component:SalesUserDashboardComponent\n  },\n  {\n    path:'Dashboard/Index',\n    component:SalesUserDashboardComponent\n  },\n   {\n     path:'SourcingRequest/Create',\n     component:CreateSourcingRequestComponent\n   },\n  {\n    path:'SourcingRequest',\n    component:SourcingRequestGridComponent\n  },\n  {\n    path:'SourcingRequest/Index',\n    component:SourcingRequestGridComponent\n  },\n  {\n    path:'SourcingRequest/Details/:Id',\n    component:CreateSourcingRequestComponent,\n  }\n]\n@NgModule({\n    declarations: [SalesUserDashboardComponent, CreateSourcingRequestComponent, SourcingRequestGridComponent, ContactPersonComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DirectiveModule,\n    DataTablesModule,\n    FormsModule,\n    AutocompleteLibModule,\n      NgbModule,\n      FeesModule,\n    RouterModule.forChild(route),\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType: 'danger', \n    }),\n    PricingSectionModule\n  ],\n})\nexport class SalesUserModule {\n\n }\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { SalesUserService } from '../../sales-user.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { SourcingRequestDisplayStatus} from 'src/app/app.enum';\n@Component({\n  selector: 'app-sourcing-request-grid',\n  templateUrl: './sourcing-request-grid.component.html',\n  styleUrls: ['./sourcing-request-grid.component.scss']\n})\nexport class SourcingRequestGridComponent implements OnInit {\n\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean = false;\n    public RequestStatusdata: SourcingRequestDisplayStatus = SourcingRequestDisplayStatus.All; \n  Sourcingrequests: any = [];\n    UserContext: any;\n    public DisplayRequestStatus = SourcingRequestDisplayStatus;\n    public _opened: boolean = false;\n    public DispatchRegion = [];\n  constructor(private salesUserService: SalesUserService) { \n      this.getUserContext();\n  }\n\n  ngOnInit() {\n    this.initializeGrid();\n\n  }\n    ngAfterViewInit(): void {\n        let requestStatusdata = localStorage.getItem('SelectedSRStatus');\n        let requestStatus = requestStatusdata == undefined || requestStatusdata == \"\" ? this.DisplayRequestStatus.All : requestStatusdata;\n        this.getRequests(requestStatus);\n  }\n\n  @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n  refreshDatatable(): void {\n    this.dtElements.forEach((dtElement: DataTableDirective) => {\n      if (dtElement.dtInstance) {\n        dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n      }\n    });\n    this.dtTrigger.next();\n  }\n\n  getUserContext() {\n    this.salesUserService.GetUserContext().subscribe(data => {\n      this.UserContext = data;\n    })  \n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':visible' };\n    this.dtOptions = {\n        dom: '<\"html5buttons\"B>lTfgitp',\n        buttons: [\n            { extend: 'colvis' },\n            { extend: 'copy', exportOptions: exportInvitedColumns },\n            { extend: 'csv', title: 'Sourcing Requests', exportOptions: exportInvitedColumns },\n            { extend: 'pdf', title: 'Sourcing Requests', orientation: 'landscape', exportOptions: exportInvitedColumns },\n            { extend: 'print', exportOptions: exportInvitedColumns }\n        ],\n        pagingType: 'first_last_numbers',\n        order: [[0, 'desc']],\n        pageLength: 10,\n        lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n  }\n\n    public getRequests(status) \n    {\n        this.RequestStatusdata = status;\n        localStorage.setItem('SelectedSRStatus', status);\n        this.IsLoading = true;\n          this.salesUserService.GetSourcingRequests(status, false).subscribe(data => {\n          this.IsLoading = false;\n              this.Sourcingrequests = data;\n              this.refreshDatatable();\n        });\n    }\n  \n}\n","<div class=\"sourcing-request-grid-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"float-right\">\r\n                <div class=\"row\">\r\n                    <div class=\"dib border pa5 radius-capsule ml20\" id=\"daySelector\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"all\" [checked]=\"RequestStatusdata == DisplayRequestStatus.All\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.All)\">All</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"new\" [checked]=\"RequestStatusdata == DisplayRequestStatus.New\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.New)\">New</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"wip\" [checked]=\"RequestStatusdata == DisplayRequestStatus.WIP\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.WIP)\">Wip</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"sourced\" [checked]=\"RequestStatusdata == DisplayRequestStatus.Sourced\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.Sourced)\">Sourced</label>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"DisplayRequestStatus\" id=\"lost\" [checked]=\"RequestStatusdata == DisplayRequestStatus.Lost\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"getRequests(DisplayRequestStatus.Lost)\">Lost</label>\r\n                        </div>\r\n                        <span class='spinner-small fr-type float-left ml10 mt5'></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-carrier-grid\" class=\"table-responsive\">\r\n                            <table id=\"request-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#Request</th>\r\n                                        <th>Location</th>\r\n                                        <th>Fuel Type</th>\r\n                                        <th>Quantity Requested</th>\r\n                                        <th>Pricing(USD/CAD)</th>\r\n                                        <th>Delivery Date</th>\r\n                                        <th>Type</th>\r\n                                        <th>Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let item of Sourcingrequests\">\r\n                                        <td>\r\n                                            <a [routerLink]=\"['/SalesUser/SourcingRequest/Details/'+item.Id]\">\r\n                                                <span>{{item.RequestNumber}}</span>\r\n                                            </a>\r\n                                        <span *ngIf=\"(UserContext.Id != item.ModifiedBy && item.ModifiedBy != 0) && (item.Status != 'Submitted' && item.Status != 'Lost' && !item.ViewedModified)\" class=\"active-red-dot\"></span>\r\n                                        </td>\r\n                                        <td>{{item.JobName}} </td>\r\n                                        <td>{{item.FuelType }}</td>\r\n                                        <td>{{item.Quantity}}</td>\r\n                                        <td>{{item.Pricing}}</td>\r\n                                        <td>{{item.DeliveryDate}}</td>\r\n                                        <td>{{item.DeliveryType}}</td>\r\n                                        <td>{{item.Status}}</td>\r\n                                    </tr>\r\n                                    <!-- <tr *ngIf=\"Sourcingrequests && Sourcingrequests.length==0\">\r\n                                         <td colspan=\"8\">\r\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\r\n                                                <div class=\"col-12 align-items-center text-center\">\r\n                                                    <h4>No Data Found</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                         </td>\r\n                                    </tr> -->\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]}