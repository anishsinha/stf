{"version":3,"sources":["webpack:///src/app/carrier/schedule-builder/add-location/add-location.model.ts","webpack:///src/app/carrier/schedule-builder/add-location/add-location.service.ts","webpack:///src/app/shared-components/pricing-section/pricing-section.component.ts","webpack:///src/app/shared-components/pricing-section/pricing-section.component.html","webpack:///src/app/shared-components/pricing-section/pricing-section.module.ts"],"names":["Geocode","StateModel","MapIconUrl","MapIconSize","MapConstants","countryId","ZoomArea","IconUrl","url","scaledSize","width","height","CenterLat","CenterLon","RackAvgTypes","Id","Name","Code","AddLocationService","httpClient","getaddressByZipUrl","getOpisTerminalsUrl","getAllTPOCompaniesUrl","getStatesOfAllCountrieslistUrl","getTPOContactPersonDetailsUrl","getFuelProductslistUrl","getMarineProductListUrl","getFuelProductsByZiplistUrl","postCreateOrderUrl","isTpoCompanyExistUrl","isJobNameExistUrl","isIsPhoneNumberValidUrl","GetPricingCodesUrl","getClosedTerminalUrl","getCurrancylistUrl","getTPOCompanyContactPersonsUrl","GetaddressbyLatLongUrl","GetCityGroupTerminalsUrl","GetTerminalsUrl","isCityGroupTerminalPriceAvailableUrl","getPreferencesSettingsUrl","getTimeZoneNameUrl","GetAddressUrl","getTfxProductUrl","get","pipe","handleError","companyId","userId","productDisplayGroupId","jobId","displayGroupId","zipCode","source","radius","jobCountryId","pricingCodeId","fuelType","companyCountryId","isSupressOrderPricing","jobLatitude","jobLongitude","searchStringTeminal","cityRackId","latitude","longitude","terminal","tfxProductId","modal","post","timestamp","apiKey","IsNewCompany","CompanyName","jobName","phoneNumber","fuelTypeId","pricingSourceId","filterModel","PricingTypeId","PricingSourceId","feedTypeId","fuelClassTypeId","tfxProdId","Prefix","address","stateId","allStates","sourceId","jobid","fueltypeId","selectedCityRackId","lattitude","countryCode","providedIn","tierPricingForm","setValue","$event","target","value","PricingSectionComponent","fb","addLocationService","modalService","changeDetectorRef","formSubmited","UoM","IsTBD","DetectFormChange","UpdateSuppressPricingChange","_loadingPricingCodes","CityGroupTerminalsList","approvedTerminalList","_minimumConst","_zeroConst","CountryBasedZipcodeLabel","_loadingAddress","MaxInputDate","add","toDate","pricingCodes","pricingfeedTypeId","pricingfuelClassTypeId","pricingCodesArr","tierApprovedTerminalList","tierCityGroupTerminalsList","selectedPricingIndex","_loaderTierPricingType","locationForm","f","FuelPricingDetails","fuelPricingForm","TierPricing","TierPricingTypeForm","initailizeTierPricingTypeForm","type","setPricingValidation","initilizeMarketBasedPrice","getPricingCodes","setPricingCode","control","validators","setValidators","updateValueAndValidity","pricingcodeModal","open","windowClass","size","scrollable","backdrop","keyboard","tbdDrProductId","fuelDetails","productDetails","find","t","TfxProductId","FuelDetails","DisplayGroupId","item","document","getElementById","click","pricingCodeDisplayData","getPricingDisplayData","patchValue","existingPricingSource","tbdDrProductTypeId","updateFuelType","getCityGroupTerminals","Description","setRackTerminalValidation","getCityGroupTerminals_tpt","setRackTerminalValidation_tpt","event","selectedState","AddressDetails","GetCityGroupTerminals","subscribe","data","length","pricingCode","getPricingCode","pricingTypeId","pricingType","pricing","map","prc","PricingTypes","displayData","undefined","PricingSource","RackAvgPricingType","FeedType","WeekendPricingDay","FuelClassType","QuantityIndicator","updateFormControlValidators","removePricingValidation","IsSupressOrderPricing","required","min","isChecked","_countryCode","IsCityGroupTerminalPriceAvailable","response","msgwarning","getOpisTerminals","getClosedTerminal","isAdd","tierPricingArray","Pricings","arrayLength","controls","lastIndex","lastRow","secondLastRow","thirdLastRow","newRow","getTierPricingForm","insert","removeAt","index","nextPricingRow","isAboveQuantityRow","push","group","RequestPriceDetailId","FromQuantity","ToQuantity","Quantity","TerminalId","TerminalName","TempTerminalName","CityGroupTerminalId","CityGroupTerminalStateId","DisplayPrice","RackAvgTypeId","PricePerGallon","SupplierCostMarkupTypeId","SupplierCostMarkupValue","MarginTypeId","Margin","BasePrice","RackPrice","BaseSupplierCost","Currency","ExchangeRate","FuelTypeId","JobId","IncludeTaxes","IsActive","IsAboveQuantity","RowIndex","TotalRows","EstimatedPPG","PricingCode","Fixed","TempPricingCodeDetails","SupplierCost","SupplierCostTypeId","CreationTimeRackPPG","MarkertBasedPricingTypeId","IsEdit","CityGroupTerminalName","FuelDisplayGroupId","IsTerminalPrice","IsSupplierCostPrice","IsFixedPrice","selectedRow","_form","CodeId","CodeDescription","EnableCityRack","SetTierPriceType","getRawValue","setPricingValidation_tpt","startsWith","initilizeMarketBasedPrice_tpt","setPricingCode_tpt","getOpisTerminals_tpt","removePricingValidation_tpt","id","price","rack","r","checked","cumulationType","ResetCumulationSetting","invalid","dismissAll","sourceObj","getRackAvgTypeNameById","filterData","PricingCodes","isTierPriced","IsTierPricingRequired","clear","tierPricingEnabled","emit","detectChanges","fuelPricingDetails","code","forEach","row","form","toggleSuppressPricing","selector","templateUrl","styleUrls","PricingSectionModule","declarations","imports","exports"],"mappings":"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","file":"default~carrier-carrier-module~sales-user-sales-user-module-es5.js","sourcesContent":["import { DropdownItem } from \"src/app/statelist.service\";\r\n\r\nexport class Geocode {\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n    CountyName: string;\r\n    StateCode: string;\r\n    StateName: string;\r\n    City: string;\r\n    CountryCode: string;\r\n    CountryName: string;\r\n    ZipCode: string;\r\n}\r\n\r\nexport class StateModel {\r\n    CountryCode: string;\r\n    CountryId: number;\r\n    CountryGroupId?: number;\r\n    QuantityIndicatorId: number;\r\n    StateCode: string;\r\n    StateId: number;\r\n    StateName: string;\r\n}\r\n\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor(countryId?: number) {\r\n        \r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n\r\n        if (countryId == 2) {\r\n            this.CenterLat = 56.14;\r\n            this.CenterLon = -106.34;\r\n        }\r\n        else if (countryId == 3) {\r\n            this.CenterLat = 28.61;\r\n            this.CenterLon = 77.23;\r\n        }\r\n        else {\r\n            this.CenterLat = 38;\r\n            this.CenterLon = -98.35;\r\n        }\r\n    }\r\n}\r\nexport const RackAvgTypes: DropdownItem[] = [\r\n    { Id: 1, Name: '+$', Code: '' },\r\n    { Id: 2, Name: '-$', Code: '' },\r\n    { Id: 3, Name: '+%', Code: '' },\r\n    { Id: 4, Name: '-%', Code: '' }\r\n]","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { Geocode } from './add-location.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddLocationService extends HandleError {\r\n\r\n    private getaddressByZipUrl = \"Validation/GetAddressByZip\";\r\n    private getOpisTerminalsUrl = \"Supplier/Order/GetOpisTerminals\";\r\n    private getAllTPOCompaniesUrl = \"/Carrier/Order/GetAllTPOCompanies\";\r\n    //private getAllBuyerCompaniesUrl = \"/Carrier/Order/GetAllBuyerCompanies\";\r\n    private getStatesOfAllCountrieslistUrl = \"/Supplier/Order/GetStatesOfAllCountries\";\r\n    private getTPOContactPersonDetailsUrl = \"/Supplier/Order/GetTPOContactPersonDetails\";\r\n    private getFuelProductslistUrl = \"/Supplier/Order/GetFuelProducts\";\r\n    private getMarineProductListUrl = \"/Supplier/FuelRequest/GetProductList\";\r\n    private getFuelProductsByZiplistUrl = \"/Supplier/Order/GetProductListByZip\";\r\n    private postCreateOrderUrl = \"/Carrier/ScheduleBuilder/Create\";\r\n    private isTpoCompanyExistUrl = \"/Validation/IsCompanyNameExist\";\r\n    private isJobNameExistUrl = \"/Supplier/Order/ValidateJobNameByCompanyId\";\r\n    private isIsPhoneNumberValidUrl = \"/Validation/IsPhoneNumberValid\";\r\n    private GetPricingCodesUrl = \"/Supplier/Order/GetPricingCodes\";\r\n    private getClosedTerminalUrl = \"Supplier/Order/GetClosedTerminal\";\r\n    private getCurrancylistUrl = \"/Supplier/Order/GetCurrenyList\";\r\n    private getTPOCompanyContactPersonsUrl = \"/Supplier/Order/GetTPOCompanyContactPersons\";\r\n    private GetaddressbyLatLongUrl = \"/Supplier/Order/GetAddressByLongLat\";\r\n    private GetCityGroupTerminalsUrl = \"/Supplier/Order/GetCityGroupTerminals\";\r\n    private GetTerminalsUrl = \"/Carrier/ScheduleBuilder/GetTerminalsForMultipleProducts\";\r\n    private isCityGroupTerminalPriceAvailableUrl = \"/Supplier/FuelRequest/IsCityGroupTerminalPriceAvailable\";\r\n    private getPreferencesSettingsUrl = \"/Carrier/ScheduleBuilder/GetPreferenceSettingForOnTheFlyLocation\";\r\n    private getTimeZoneNameUrl = \"https://maps.googleapis.com/maps/api/timezone/json\";\r\n    private GetAddressUrl = \"/Validation/GetAddress?address=\";\r\n    private getTfxProductUrl = \"Supplier/Order/GetTfxProduct\";\r\n    constructor(private httpClient: HttpClient) { super(); }\r\n\r\n    getAllTPOCompanies(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAllTPOCompaniesUrl)\r\n            .pipe(catchError(this.handleError<any>('GetAllTPOCompanies', null)));\r\n    }\r\n    getTPOCompanyContactPersons(companyId: string): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getTPOCompanyContactPersonsUrl}?companyId=${companyId}`)\r\n            .pipe(catchError(this.handleError<any>('getTPOCompanyContactPersons', null)));\r\n    }\r\n    getTPOContactPersonDetails(userId: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getTPOContactPersonDetailsUrl}?userId=${userId}`)\r\n            .pipe(catchError(this.handleError<any>('getTPOContactPersonDetails', null)));\r\n    }\r\n    getCurrenyList(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getCurrancylistUrl)\r\n            .pipe(catchError(this.handleError<any>('getCurrenyList', null)));\r\n    }\r\n    getStatesOfAllCountries(countryId?: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getStatesOfAllCountrieslistUrl}?countryId=${countryId}`)\r\n            .pipe(catchError(this.handleError<any>('getStatesOfAllCountries', null)));\r\n    }\r\n    getFuelProducts(productDisplayGroupId: any, companyId: any, jobId: any): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getFuelProductslistUrl}?productDisplayGroupId=${productDisplayGroupId}&companyId=${companyId}&jobId=${jobId}`)\r\n            .pipe(catchError(this.handleError<any>('GetFuelProducts', null)));\r\n    }\r\n    getMarineProductList(displayGroupId: number, jobId: any, zipCode: string, source: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getMarineProductListUrl}?displayGroupId=${displayGroupId}&jobId=${jobId}&zipCode=${zipCode}&source=${source}`)\r\n            .pipe(catchError(this.handleError<any>('getMarineProductList', null)));\r\n    }\r\n    getProductListByZip(zipCode: any, radius: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getFuelProductsByZiplistUrl}?zipCode=${zipCode}&radius=${radius}`)\r\n            .pipe(catchError(this.handleError<any>('getProductListByZip', null)));\r\n    }\r\n    getFuelTerminals(jobCountryId: number, pricingCodeId: number, fuelType: number, companyCountryId: number, isSupressOrderPricing: boolean, jobLatitude: number, jobLongitude: number, searchStringTeminal: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.GetTerminalsUrl + '?jobCountryId=' + jobCountryId + '&pricingCodeId=' + pricingCodeId + '&fuelType=' + fuelType + '&companyCountryId=' + companyCountryId + '&isSupressOrderPricing=' + isSupressOrderPricing + '&jobLatitude=' + jobLatitude + '&jobLongitude=' + jobLongitude + '&searchStringTeminal=' + searchStringTeminal)\r\n            .pipe(catchError(this.handleError<any>('getFuelTerminals', null)));\r\n    }\r\n    getOpisTerminals(cityRackId: number, latitude: number, longitude: number, countryId: number, terminal: string, source: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getOpisTerminalsUrl + '?cityRackId=' + cityRackId + '&countryId=' + countryId + '&latitude=' + latitude + '&longitude=' + longitude + '&terminal=' + terminal + '&source=' + source)\r\n            .pipe(catchError(this.handleError<any>('getOpisTerminals', null)));\r\n    }\r\n    getTfxProduct(tfxProductId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getTfxProductUrl + '?tfxProductId=' + tfxProductId)\r\n            .pipe(catchError(this.handleError<any>('getProductIdForTfxProduct', null)));\r\n    }\r\n    createOrder(modal: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postCreateOrderUrl, modal)\r\n            .pipe(catchError(this.handleError<any>('createOrder', null)));\r\n    }\r\n\r\n    getTimeZoneName(latitude: any, longitude: any, timestamp: any, apiKey: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getTimeZoneNameUrl + \"?location=\" + latitude + \",\" + longitude + \"&timestamp=\" + timestamp + \"&key=\" + apiKey)\r\n            .pipe(catchError(this.handleError<any>('createOrder', null)));\r\n    }\r\n\r\n    isTpoCompanyExist(IsNewCompany: any, CompanyName: any): Observable<boolean> {\r\n        return this.httpClient.get<any>(`${this.isTpoCompanyExistUrl}?IsNewCompany=${IsNewCompany}&CompanyName=${CompanyName}`)\r\n            .pipe(catchError(this.handleError<any>('isTpoCompanyExist', null)));\r\n    }\r\n\r\n    isJobNameExist(jobName: string, companyId: number): Observable<boolean> {\r\n        return this.httpClient.get<any>(`${this.isJobNameExistUrl}?jobName=${jobName}&companyId=${companyId}`)\r\n            .pipe(catchError(this.handleError<any>('isJobNameExist', null)));\r\n    }\r\n\r\n    IsPhoneNumberValid(phoneNumber: string): Observable<boolean> {\r\n\r\n        return this.httpClient.get<any>(`${this.isIsPhoneNumberValidUrl}?phoneNumber=${phoneNumber}`)\r\n            .pipe(catchError(this.handleError<any>('IsPhoneNumberValid', null)));\r\n    }\r\n\r\n    getClosedTerminal(fuelTypeId,\r\n        latitude,\r\n        longitude,\r\n        countryId,\r\n        pricingCodeId,\r\n        terminal,\r\n        pricingSourceId,\r\n        cityRackId): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getClosedTerminalUrl}?fuelTypeId=${fuelTypeId}&latitude=${latitude}&longitude=${longitude}&countryId=${countryId}&pricingCodeId=${pricingCodeId}&terminal=${terminal}&pricingSourceId=${pricingSourceId}&cityRackId=${cityRackId}`)\r\n            .pipe(catchError(this.handleError<any>('getClosedTerminal', null)));\r\n    }\r\n    getPricingCodes(filterModel: any) {\r\n        return this.httpClient.get<any>(`${this.GetPricingCodesUrl}?PricingTypeId=${filterModel.PricingTypeId}&PricingSourceId=${filterModel.PricingSourceId}&feedTypeId=${filterModel.feedTypeId}&fuelClassTypeId=${filterModel.fuelClassTypeId}&tfxProdId=${filterModel.tfxProdId}&Prefix=${filterModel.Prefix}`)\r\n            .pipe(catchError(this.handleError<any>('getPricingCodes', null)));\r\n    }\r\n\r\n    getAddressByZip(zipCode: string, address: string): Observable<Geocode> {\r\n        return this.httpClient.get<any>(`${this.getaddressByZipUrl}?zipCode=${zipCode}&address=${address}`)\r\n            .pipe(catchError(this.handleError<any>('getAddressByZip', null)));\r\n    }\r\n\r\n    GetAddressByLongLat(latitude: string, longitude: string): Observable<Geocode> {\r\n        return this.httpClient.get<any>(`${this.GetaddressbyLatLongUrl}?latitude=${latitude}&longitude=${longitude}`)\r\n            .pipe(catchError(this.handleError<any>('GetAddressByLongLat', null)));\r\n    }\r\n\r\n    GetCityGroupTerminals(stateId: string, allStates: boolean, sourceId: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.GetCityGroupTerminalsUrl}?stateId=${stateId}&allStates=${allStates}&sourceId=${sourceId}`)\r\n            .pipe(catchError(this.handleError<any>('GetCityGroupTerminals', null)));\r\n    }\r\n    IsCityGroupTerminalPriceAvailable(jobid, fueltypeId, selectedCityRackId, lattitude, longitude, countryCode, sourceId): Observable<boolean> {\r\n        return this.httpClient.get<any>(this.isCityGroupTerminalPriceAvailableUrl + '?jobid=' + jobid + '&fueltypeId=' + fueltypeId + '&selectedCityRackId=' + selectedCityRackId + '&lattitude=' + lattitude + '&longitude=' + longitude + '&countryCode=' + countryCode + '&sourceId=' + sourceId).pipe(catchError(this.handleError<any>('IsCityGroupTerminalPriceAvailable', null)));\r\n    }\r\n\r\n    GetPreferencesSettings(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getPreferencesSettingsUrl)\r\n            .pipe(catchError(this.handleError<any>('GetPreferencesSettings', null)));\r\n    }\r\n\r\n    GetAddress(address: string): Observable<Geocode> {\r\n        return this.httpClient.get<any>(this.GetAddressUrl + address)\r\n            .pipe(catchError(this.handleError<any>('GetaddressbyAddress', null)));\r\n    }\r\n}\r\n","import { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddLocationService } from '../../carrier/schedule-builder/add-location/add-location.service';\r\nimport { RackAvgTypes } from '../../carrier/schedule-builder/add-location/add-location.model';\r\nimport * as moment from 'moment';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { PricingType } from 'src/app/app.enum';\r\n\r\n@Component({\r\n    selector: 'app-pricing-section',\r\n    templateUrl: './pricing-section.component.html',\r\n    styleUrls: ['./pricing-section.component.css']\r\n})\r\nexport class PricingSectionComponent implements OnInit {\r\n\r\n    @Input() public locationForm: FormGroup;\r\n    @Input() public formSubmited: boolean = false;\r\n    @Input() public UoM: number = 0;\r\n    @Input() public IsTBD: boolean = false;\r\n    @Input() public tbdDrProductTypeId?: number;\r\n    @Input() public tbdDrProductId?: number;\r\n    @Input() public productDetails?: any;\r\n    @Output() DetectFormChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() UpdateSuppressPricingChange = new EventEmitter<boolean>();\r\n\r\n\r\n    public TierPricingTypeForm: FormGroup;\r\n\r\n    _loadingPricingCodes: boolean = false;\r\n    CityGroupTerminalsList: any[] = [];\r\n    approvedTerminalList: any[] = [];\r\n    _minimumConst = 0.00001;\r\n    _zeroConst = 0;\r\n    CountryBasedZipcodeLabel: string = \"Zip\";\r\n    _loadingAddress: boolean = false;\r\n    MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    //pricing\r\n    pricingCodes = [];\r\n    pricingfeedTypeId = 0;\r\n    pricingfuelClassTypeId = 0;\r\n    pricingCodesArr = [{\r\n        \"PricingTypes\": {\r\n            \"Fixed\": {\r\n                \"Id\": 1,\r\n                \"Code\": \"A-120000\"\r\n            },\r\n            \"FuelCost\": {\r\n                \"Id\": 4,\r\n                \"Code\": \"A-140000\"\r\n            }\r\n        }\r\n    }];\r\n    RackAvgTypes: DropdownItem[] = RackAvgTypes;\r\n    //TIER PRICING TYPE\r\n    tierApprovedTerminalList: any[] = [];\r\n    tierCityGroupTerminalsList: any[] = [];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private addLocationService: AddLocationService,\r\n        private modalService: NgbModal,\r\n        private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n    get f() { return this.locationForm['controls']; }\r\n    get fuelPricingForm() { return this.f.FuelPricingDetails['controls']; }\r\n    get tierPricingForm() { return this.fuelPricingForm.TierPricing['controls']; }\r\n\r\n    ngOnInit() {\r\n        this.TierPricingTypeForm = this.initailizeTierPricingTypeForm();\r\n    }\r\n    pricingTypeChanged(type: number) {\r\n\r\n        this.setPricingValidation(type);\r\n        this.initilizeMarketBasedPrice();\r\n\r\n        if (type == 1) {\r\n            this.getPricingCodes();\r\n        }\r\n        else {\r\n            this.setPricingCode();\r\n        }\r\n    }\r\n    updateFormControlValidators(control: any, validators: any[]) {\r\n        control.setValidators(validators);\r\n        control.updateValueAndValidity();\r\n    }\r\n    openPriceCodeModal(pricingcodeModal) {\r\n        this.getPricingCodes();\r\n        this.modalService.open(pricingcodeModal, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true, backdrop: 'static', keyboard: false });\r\n    }\r\n\r\n    updateFuelType(pricingSourceId: number) {\r\n        let fuelTypeId = this.tbdDrProductId;\r\n        let fuelDetails = this.productDetails.find(t => t.PricingSourceId == pricingSourceId && t.TfxProductId == fuelTypeId);\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(fuelDetails.Id);\r\n        this.f.FuelDetails.get('FuelDisplayGroupId').setValue(fuelDetails.DisplayGroupId);\r\n    }\r\n\r\n    getSelectedPricingCode(item: any) {\r\n        document.getElementById('pricingcodeModal').click()\r\n        if (!this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\r\n            //this.modalService.dismissAll();\r\n            let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n            if (item) {\r\n                this.f.FuelPricingDetails.get('TempPricingCodeDetails').patchValue(item);\r\n                this.f.FuelPricingDetails.get('Code').patchValue(item.Code);\r\n                this.f.FuelPricingDetails.get('CodeId').patchValue(item.Id);\r\n                //this.f.FuelPricingDetails.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n                this.f.FuelPricingDetails.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n                let existingPricingSource = this.f.FuelPricingDetails.get('FuelPricingDetails.PricingSourceId').value;\r\n                this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n                this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n                if (this.IsTBD && this.tbdDrProductTypeId != 10) {\r\n                    this.updateFuelType(item.PricingSourceId);\r\n                }\r\n                if (existingPricingSource != item.PricingSourceId) {\r\n                    this.getCityGroupTerminals();\r\n                }\r\n                this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n            }\r\n            if (item.PricingSourceId == 1) {\r\n                this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\r\n            }\r\n            else {\r\n                this.f.FuelPricingDetails.get('EnableCityRack').setValue(true);\r\n            }\r\n            this.setRackTerminalValidation();\r\n        }\r\n        else {\r\n            let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n            if (item) {\r\n                this.TierPricingTypeForm.get('TempPricingCodeDetails').patchValue(item);\r\n                this.TierPricingTypeForm.get('Code').patchValue(item.Code);\r\n                this.TierPricingTypeForm.get('CodeId').patchValue(item.Id);\r\n                //this.TierPricingTypeForm.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n                this.TierPricingTypeForm.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n                this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n                this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n\r\n                this.getCityGroupTerminals_tpt();\r\n                this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n            }\r\n            if (item.PricingSourceId == 1) {\r\n                this.TierPricingTypeForm.get('EnableCityRack').setValue(false);\r\n            }\r\n            else {\r\n                this.TierPricingTypeForm.get('EnableCityRack').setValue(true);\r\n            }\r\n            this.setRackTerminalValidation_tpt();\r\n        }\r\n    }\r\n    onPricingCodeSelected(item: any) {\r\n\r\n        let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n        this.f.FuelPricingDetails.get('Code').patchValue(item.Code);\r\n        this.f.FuelPricingDetails.get('CodeId').patchValue(item.Id);\r\n        this.f.FuelPricingDetails.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n        this.f.FuelPricingDetails.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n        this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n        this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n        this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n\r\n        if (item.PricingSourceId == 1) {\r\n            this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\r\n        }\r\n        else {\r\n            this.f.FuelPricingDetails.get('EnableCityRack').setValue(true);\r\n        }\r\n        this.setRackTerminalValidation();\r\n        this.getCityGroupTerminals();\r\n    }\r\n    onApprovedTerminalSelected(event: any): void {\r\n        this.f.FuelPricingDetails.get('TerminalName').patchValue(event.Name);\r\n        this.f.FuelPricingDetails.get('TerminalId').patchValue(event.Id);\r\n    }\r\n    getCityGroupTerminals() {\r\n        this.CityGroupTerminalsList = [];\r\n        let selectedState = this.f.AddressDetails.get('StateId').value;\r\n        if (selectedState > 0) {\r\n            this.addLocationService.GetCityGroupTerminals(selectedState, false, this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    this.CityGroupTerminalsList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    setPricingCode() {\r\n        if (this.locationForm.get('FuelPricingDetails.PricingTypeId').value != 1) {\r\n            let pricingCode = this.getPricingCode(this.locationForm.get('FuelPricingDetails.PricingTypeId').value, this.locationForm.get('FuelPricingDetails.FuelPricingDetails.PricingSourceId').value);\r\n            if (pricingCode != null) {\r\n                this.locationForm.get('FuelPricingDetails.FuelPricingDetails.PricingCode').patchValue(pricingCode);\r\n            }\r\n        }\r\n    }\r\n    getPricingCode(pricingTypeId, pricingSourceId) {\r\n        var pricingType = pricingTypeId == 2 ? 'Fixed' : pricingTypeId == 4 ? 'FuelCost' : '';\r\n\r\n        if (pricingType == '')\r\n            return null;\r\n\r\n        var pricing = this.pricingCodesArr.map(function (prc) {\r\n            return prc.PricingTypes[pricingType];\r\n        });\r\n\r\n        if (pricing.length > 0)\r\n            pricing = pricing[0];\r\n        else\r\n            pricing = null;\r\n\r\n        return pricing;\r\n    }\r\n    getPricingDisplayData(item) {\r\n        var displayData = '';\r\n        if (item != undefined || item != null) {\r\n            if (item.PricingTypeId == 2) {\r\n                displayData += item.PricingSource + ', ' + \"Fixed\";\r\n            }\r\n            else if (item.PricingTypeId == 4) {\r\n                displayData += item.PricingSource + ', ' + \"Fuel Cost\";\r\n            }\r\n            else if (item.PricingTypeId == 1) {\r\n                displayData += item.PricingSource + ', ' + item.RackAvgPricingType;\r\n                if (item.PricingSourceId == 2 || item.PricingSourceId == 3) {\r\n                    displayData += ', ' + item.FeedType + ', ' + item.WeekendPricingDay;\r\n                }\r\n                if (item.PricingSourceId == 2) {\r\n                    displayData += ', ' + item.FuelClassType + ', ' + item.QuantityIndicator;\r\n                }\r\n            }\r\n        }\r\n        return displayData;\r\n    }\r\n    removePricingValidation() {\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('PricePerGallon'), []);\r\n        //this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId'), []);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupValue'), []);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('RackPrice'), []);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('Code'), []);\r\n    }\r\n    setPricingValidation(type: number) {\r\n        this.removePricingValidation();\r\n        if (!this.f.IsSupressOrderPricing.value) {\r\n            //Market Based\r\n            if (type == 1) {\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('RackPrice'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('Code'), [Validators.required]);\r\n                this.f.FuelPricingDetails.get('RackAvgTypeId').setValue(1);\r\n            }\r\n            //Fuel cost\r\n            else if (type == 4) {\r\n                //this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId'), [Validators.required]);\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupValue'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId').setValue(1);\r\n            }\r\n            //Fixed\r\n            else if (type == 2) {\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('PricePerGallon'), [Validators.required, Validators.min(this._minimumConst)]);\r\n            }\r\n        }\r\n    }\r\n    initilizeMarketBasedPrice() {\r\n        this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), []);\r\n        this.f.FuelPricingDetails.get('Code').patchValue(null);\r\n        this.f.FuelPricingDetails.get('CodeId').patchValue(null);\r\n        this.f.FuelPricingDetails.get('CodeDescription').patchValue(null);\r\n        this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: null, Code: null, Description: null });\r\n        this.f.FuelPricingDetails.get('TempPricingCodeDetails').patchValue(null);\r\n    }\r\n    setRackTerminalValidation() {\r\n        let isChecked = this.f.FuelPricingDetails.get('EnableCityRack').value;\r\n        if (isChecked) {\r\n            this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), [Validators.required]);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), []);\r\n        }\r\n    }\r\n    cityRackTerminalChanged() {\r\n        let jobid = this.f.AddressDetails.get('JobId').value,\r\n            fueltypeId = this.f.FuelDetails.get('FuelTypeId').value,\r\n            selectedCityRackId = this.f.FuelPricingDetails.get('CityGroupTerminalId').value,\r\n            lattitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryCode = this.f.AddressDetails.get('CountryCode').value,\r\n            _countryCode = countryCode == \"1\" ? \"USA\" : \"CAN\",\r\n            sourceId = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value\r\n\r\n        this.addLocationService.IsCityGroupTerminalPriceAvailable(jobid ? jobid : 0, fueltypeId, selectedCityRackId, lattitude, longitude, _countryCode, sourceId).subscribe(response => {\r\n            if (response == false) {\r\n                this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n                Declarations.msgwarning(\"Pricing not available for this City Rack/Terminal. Try to assign another City Rack/Terminal.\", null, null)\r\n            }\r\n        });\r\n        if (sourceId != 1) {\r\n            this.getOpisTerminals();\r\n        }\r\n    }\r\n    getOpisTerminals() {\r\n        let cityRackId = this.f.FuelPricingDetails.get('CityGroupTerminalId').value || 0,\r\n            latitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryId = this.f.AddressDetails.get('CountryId').value,\r\n            source = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value\r\n        this.addLocationService.getOpisTerminals(cityRackId, latitude, longitude, countryId, '', source).subscribe(response => {\r\n            if (response) {\r\n                this.approvedTerminalList = response;\r\n            }\r\n        });\r\n    }\r\n    getApprovedTerminal() {\r\n        let pricingSourceId = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value || 0;\r\n        if (pricingSourceId == 1) {\r\n            let pricingCodeId = this.f.FuelPricingDetails.get('CodeId').value || 0;\r\n            let fuelTypeId = this.f.FuelDetails.get('FuelTypeId').value || 0;\r\n            let latitude = this.f.AddressDetails['controls']['Latitude'].value || 0;\r\n            let longitude = this.f.AddressDetails['controls']['Longitude'].value || 0;\r\n            let countryId = this.f.AddressDetails.get('CountryId').value || 0;\r\n            let terminal = this.f.FuelPricingDetails.get('TerminalId').value || '';\r\n            let cityRackId = this.f.FuelPricingDetails.get('CityGroupTerminalId').value || '';\r\n\r\n            this.addLocationService.getClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId, cityRackId).subscribe(data => {\r\n                if (data) {\r\n                    this.approvedTerminalList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    addRemoveTierFee(isAdd: boolean) {\r\n        let tierPricingArray = this.tierPricingForm.Pricings as FormArray;\r\n        let arrayLength = tierPricingArray.controls.length;\r\n        let lastIndex = arrayLength - 1;\r\n        let lastRow = tierPricingArray.controls[lastIndex] as FormGroup;\r\n        let secondLastRow = tierPricingArray.controls[lastIndex - 1] as FormGroup;\r\n        let thirdLastRow = tierPricingArray.controls[lastIndex - 2] as FormGroup;\r\n\r\n        if (isAdd) {\r\n            let tierPricingArray = this.tierPricingForm.Pricings as FormArray;\r\n            let newRow = this.getTierPricingForm(false);\r\n\r\n            newRow.get('FromQuantity').setValue(secondLastRow.get('ToQuantity').value);\r\n            lastRow.get('FromQuantity').setValue(0);\r\n            lastRow.get('Quantity').setValue(0);\r\n            tierPricingArray.insert((lastIndex), newRow);\r\n        }\r\n        else if (arrayLength > 2) {\r\n            lastRow.get('FromQuantity').setValue(thirdLastRow.get('ToQuantity').value);\r\n            lastRow.get('Quantity').setValue(thirdLastRow.get('ToQuantity').value);\r\n            tierPricingArray.removeAt(lastIndex - 1);\r\n        }\r\n    }\r\n    toQuantityChanged(value: number, index: number) {\r\n        let nextPricingRow = this.tierPricingForm.Pricings.controls[index + 1] as FormGroup;\r\n        if (nextPricingRow) {\r\n            nextPricingRow.get('FromQuantity').setValue(value);\r\n            nextPricingRow.get('Quantity').setValue(value);\r\n        }\r\n    }\r\n    getTierPricingForm(isAboveQuantityRow: boolean): FormGroup {\r\n\r\n        let validators: ValidatorFn[] = [];\r\n        isAboveQuantityRow ? null : validators.push(Validators.required);\r\n\r\n        return this.fb.group(\r\n            {\r\n                RequestPriceDetailId: this.fb.control(null),\r\n                FromQuantity: this.fb.control(0, validators),\r\n                ToQuantity: this.fb.control(0, validators),\r\n                Quantity: this.fb.control(null),\r\n                TerminalId: this.fb.control(null),\r\n                TerminalName: this.fb.control(null),\r\n                TempTerminalName: this.fb.control(null),\r\n                CityGroupTerminalId: this.fb.control(null),\r\n                CityGroupTerminalStateId: this.fb.control(null),\r\n                DisplayPrice: this.fb.control(null, [Validators.required]),\r\n                RackAvgTypeId: this.fb.control(null),\r\n                PricePerGallon: this.fb.control(0),\r\n                SupplierCostMarkupTypeId: this.fb.control(null),\r\n                SupplierCostMarkupValue: this.fb.control(0),\r\n                MarginTypeId: this.fb.control(null),\r\n                Margin: this.fb.control(null),\r\n                BasePrice: this.fb.control(null),\r\n                RackPrice: this.fb.control(0),\r\n                BaseSupplierCost: this.fb.control(null),\r\n                Currency: this.fb.control(0),\r\n                ExchangeRate: this.fb.control(null),\r\n                UoM: this.fb.control(0),\r\n                FuelTypeId: this.fb.control(null),\r\n                JobId: this.fb.control(0),\r\n                PricingSourceId: this.fb.control(1),\r\n                PricingTypeId: this.fb.control(PricingType.PricePerGallon),\r\n                //RackTypeId : this.fb.control(null),\r\n                IncludeTaxes: this.fb.control(false),\r\n                IsActive: this.fb.control(false),\r\n                IsAboveQuantity: this.fb.control(isAboveQuantityRow),\r\n                RowIndex: this.fb.control(1),\r\n                TotalRows: this.fb.control(null),\r\n                EstimatedPPG: this.fb.control(null),\r\n                //PricingCode: this.fb.control({ Id: null, Code: null, Description: null }),\r\n                PricingCode: this.fb.control({ Id: this.pricingCodesArr[0].PricingTypes.Fixed.Id, Code: this.pricingCodesArr[0].PricingTypes.Fixed.Code, Description: null }),\r\n                TempPricingCodeDetails: this.fb.control(null),\r\n                SupplierCost: this.fb.control(null),\r\n                SupplierCostTypeId: this.fb.control(null),\r\n                CreationTimeRackPPG: this.fb.control(null),\r\n                MarkertBasedPricingTypeId: this.fb.control(null),\r\n                IsEdit: this.fb.control(false),\r\n                CityGroupTerminalName: this.fb.control(null),\r\n                FuelDisplayGroupId: this.fb.control(0),\r\n                IsTerminalPrice: this.fb.control(null),\r\n                IsSupplierCostPrice: this.fb.control(null),\r\n                IsFixedPrice: this.fb.control(null),\r\n            }\r\n        );\r\n    }\r\n    //TIER PRICING TYPE \r\n    initailizeTierPricingTypeForm(selectedRow?: any) {\r\n        let _form = this.fb.group({\r\n            Id: this.fb.control(null),\r\n            PricingTypeId: this.fb.control(2, [Validators.required]),\r\n            PricePerGallon: this.fb.control(null, [Validators.required, Validators.min(this._minimumConst)]),\r\n            Code: this.fb.control(null),\r\n            CodeId: this.fb.control(null),\r\n            CodeDescription: this.fb.control(null),\r\n            TempPricingCodeDetails: this.fb.control(null),\r\n            RackAvgTypeId: this.fb.control(1),\r\n            RackPrice: this.fb.control(0),\r\n            EnableCityRack: this.fb.control(null),\r\n            TerminalName: this.fb.control(null),\r\n            TerminalId: this.fb.control(null),\r\n            TempTerminalName: this.fb.control(null),\r\n            SupplierCostMarkupTypeId: this.fb.control(1),\r\n            SupplierCostMarkupValue: this.fb.control(0),\r\n            SupplierCost: this.fb.control(null),\r\n            CityGroupTerminalId: this.fb.control(null),\r\n            FuelPricingDetails: this.fb.group({\r\n                PricingSourceId: this.fb.control(1),\r\n                PricingCode: this.fb.control({ Id: null, Code: null, Description: null })\r\n            })\r\n        });\r\n        if (selectedRow) {\r\n            _form.get('TerminalName').setValue(selectedRow.TerminalName);\r\n            _form.get('TerminalId').setValue(selectedRow.TerminalId);\r\n            _form.get('CityGroupTerminalId').setValue(selectedRow.CityGroupTerminalId);\r\n            _form.get('RackAvgTypeId').setValue(selectedRow.RackAvgTypeId);\r\n            _form.get('PricePerGallon').setValue(selectedRow.PricePerGallon);\r\n            _form.get('SupplierCostMarkupTypeId').setValue(selectedRow.SupplierCostMarkupTypeId);\r\n            _form.get('SupplierCostMarkupValue').setValue(selectedRow.SupplierCostMarkupValue);\r\n            _form.get('SupplierCost').setValue(selectedRow.SupplierCost);\r\n            _form.get('RackPrice').setValue(selectedRow.RackPrice);\r\n            _form.get('PricingTypeId').setValue(selectedRow.PricingTypeId);\r\n            _form.get('TempPricingCodeDetails').setValue(selectedRow.TempPricingCodeDetails);\r\n            //_form.get('PricingSourceId').setValue(data.FuelPricingDetails.PricingSourceId);\r\n            _form.get('FuelPricingDetails').get('PricingSourceId').setValue(selectedRow.PricingSourceId);\r\n            //_form.get('PricingCode').setValue(data.FuelPricingDetails.PricingCode);\r\n            _form.get('FuelPricingDetails').get('PricingCode').setValue(selectedRow.PricingCode);\r\n        }\r\n        return _form;\r\n    }\r\n    selectedPricingIndex: number = null;\r\n    setPricingSourceClicked_tpt(index: number, SetTierPriceType: any) {\r\n        this.selectedPricingIndex = index;\r\n        //set form\r\n        let selectedRow = this.tierPricingForm.Pricings.controls[this.selectedPricingIndex].getRawValue();\r\n        //selectedRow.PricingSourceId = 1;\r\n        this.TierPricingTypeForm = this.initailizeTierPricingTypeForm(selectedRow);\r\n\r\n        let control = this.TierPricingTypeForm.get('PricingTypeId') as FormControl;\r\n        this.setPricingValidation_tpt(this.TierPricingTypeForm.get('PricingTypeId').value);\r\n        //CITY RACK FOR SOURCING REQ\r\n        if (selectedRow.PricingCode && selectedRow.PricingCode.Code && selectedRow.PricingCode.Code.startsWith(\"O\")) {\r\n            this.getCityGroupTerminals_tpt();\r\n            this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), [Validators.required]);\r\n            this.TierPricingTypeForm.get('CityGroupTerminalId').setValue(null)\r\n            this.TierPricingTypeForm.get('EnableCityRack').setValue(true);\r\n            this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').setValue(2);\r\n        }\r\n        //this.TierPricingTypeForm.get('TempTerminalName').setValue(selectedRow.TempTerminalName || selectedRow.TempTerminalName)\r\n        //open modal\r\n        this.modalService.open(SetTierPriceType, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true });\r\n        this.getPricingCodes();\r\n    }\r\n    pricingTypeChanged_tpt(type: number) {\r\n\r\n        this.setPricingValidation_tpt(type);\r\n        this.initilizeMarketBasedPrice_tpt();\r\n\r\n        if (type == 1) {\r\n            this.getPricingCodes();\r\n        }\r\n        else {\r\n            this.setPricingCode_tpt();\r\n        }\r\n    }\r\n    onPricingCodeSelected_tpt(item: any) {\r\n\r\n        let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n        this.TierPricingTypeForm.get('Code').patchValue(item.Code);\r\n        this.TierPricingTypeForm.get('CodeId').patchValue(item.Id);\r\n        this.TierPricingTypeForm.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n        this.TierPricingTypeForm.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n        this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n        this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n        this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n        \r\n        if (item.PricingSourceId == 1) {\r\n            this.TierPricingTypeForm.get('EnableCityRack').setValue(false);\r\n        }\r\n        else {\r\n            this.TierPricingTypeForm.get('EnableCityRack').setValue(true);\r\n        }\r\n        this.setRackTerminalValidation_tpt();\r\n        this.getCityGroupTerminals_tpt();\r\n    }\r\n\r\n    openPriceCodeModal_tpt(pricingcodeModal) {\r\n        this.getPricingCodes();\r\n        this.modalService.open(pricingcodeModal, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true, backdrop: 'static', keyboard: false });\r\n    }\r\n    setRackTerminalValidation_tpt() {\r\n        let isChecked = this.TierPricingTypeForm.get('EnableCityRack').value;\r\n        if (isChecked) {\r\n            this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), [Validators.required]);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), []);\r\n        }\r\n    }\r\n    _loaderTierPricingType: boolean = false;\r\n    cityRackTerminalChanged_tpt() {\r\n        let jobid = this.f.AddressDetails.get('JobId').value,\r\n            fueltypeId = this.f.FuelDetails.get('FuelTypeId').value,\r\n            selectedCityRackId = this.TierPricingTypeForm.get('CityGroupTerminalId').value,\r\n            lattitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryCode = this.f.AddressDetails.get('CountryCode').value,\r\n            _countryCode = countryCode == \"1\"? \"USA\" : \"CAN\",\r\n            sourceId = this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value\r\n\r\n        this._loaderTierPricingType = true;\r\n        this.addLocationService.IsCityGroupTerminalPriceAvailable(jobid ? jobid : 0, fueltypeId, selectedCityRackId, lattitude, longitude, _countryCode, sourceId).subscribe(response => {\r\n            this._loaderTierPricingType = false;\r\n            if (response == false) {\r\n                this.TierPricingTypeForm.get('CityGroupTerminalId').setValue(null);\r\n                Declarations.msgwarning(\"Pricing not available for this City Rack/Terminal. Try to assign another City Rack/Terminal.\", null, null)\r\n            }\r\n        });\r\n        if (sourceId != 1) {\r\n            this.getOpisTerminals_tpt();\r\n        }\r\n    }\r\n    getApprovedTerminal_tpt() {\r\n        let pricingSourceId = this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value || 0;\r\n        if (pricingSourceId == 1) {\r\n            let pricingCodeId = this.TierPricingTypeForm.get('CodeId').value || 0;\r\n            let fuelTypeId = this.f.FuelDetails.get('FuelTypeId').value || 0;\r\n            let latitude = this.f.AddressDetails['controls']['Latitude'].value || 0;\r\n            let longitude = this.f.AddressDetails['controls']['Longitude'].value || 0;\r\n            let countryId = this.f.AddressDetails.get('CountryId').value || 0;\r\n            let terminal = this.TierPricingTypeForm.get('TerminalId').value || '';\r\n            let cityRackId = this.TierPricingTypeForm.get('CityGroupTerminalId').value || '';\r\n\r\n            this.addLocationService.getClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId, cityRackId).subscribe(data => {\r\n                if (data) {\r\n                    this.tierApprovedTerminalList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onApprovedTerminalSelected_tpt(event: any): void {\r\n        this.TierPricingTypeForm.get('TerminalName').patchValue(event.Name);\r\n        this.TierPricingTypeForm.get('TerminalId').patchValue(event.Id);\r\n    }\r\n    removePricingValidation_tpt() {\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('PricePerGallon'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('SupplierCostMarkupValue'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('RackPrice'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('Code'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('TempPricingCodeDetails'), []);\r\n    }\r\n    setPricingValidation_tpt(type: number) {\r\n        this.removePricingValidation_tpt();\r\n        if (!this.f.IsSupressOrderPricing.value) {\r\n            //Market Based\r\n            if (type == 1) {\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('RackPrice'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                //REMOVED FOR SOURCING\r\n                //this.updateFormControlValidators(this.TierPricingTypeForm.get('Code'), [Validators.required]);\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('TempPricingCodeDetails'), [Validators.required]);\r\n\r\n                this.TierPricingTypeForm.get('RackAvgTypeId').setValue(1);\r\n            }\r\n            //Fuel cost\r\n            else if (type == 4) {\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('SupplierCostMarkupValue'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                this.TierPricingTypeForm.get('SupplierCostMarkupTypeId').setValue(1);\r\n            }\r\n            //Fixed\r\n            else if (type == 2) {\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('PricePerGallon'), [Validators.required, Validators.min(this._minimumConst)]);\r\n            }\r\n        }\r\n    }\r\n    getOpisTerminals_tpt() {\r\n        let cityRackId = this.TierPricingTypeForm.get('CityGroupTerminalId').value || 0,\r\n            latitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryId = this.f.AddressDetails.get('CountryId').value,\r\n            source = this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value\r\n        this.addLocationService.getOpisTerminals(cityRackId, latitude, longitude, countryId, '', source).subscribe(response => {\r\n            if (response) {\r\n                this.tierApprovedTerminalList = response;\r\n            }\r\n        });\r\n    }\r\n    getCityGroupTerminals_tpt() {\r\n        this.tierCityGroupTerminalsList = [];\r\n        let selectedState = this.f.AddressDetails.get('StateId').value;\r\n        if (selectedState > 0) {\r\n            this.addLocationService.GetCityGroupTerminals(selectedState, false, this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    this.tierCityGroupTerminalsList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    initilizeMarketBasedPrice_tpt() {\r\n        this.TierPricingTypeForm.get('EnableCityRack').setValue(false);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), []);\r\n        this.TierPricingTypeForm.get('Code').patchValue(null);\r\n        this.TierPricingTypeForm.get('CodeId').patchValue(null);\r\n        this.TierPricingTypeForm.get('CodeDescription').patchValue(null);\r\n        this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: null, Code: null, Description: null });\r\n        this.TierPricingTypeForm.get('TempPricingCodeDetails').patchValue(null);\r\n    }\r\n    setPricingCode_tpt() {\r\n        if (this.TierPricingTypeForm.get('PricingTypeId').value != 1) {\r\n            let pricingCode = this.getPricingCode(this.TierPricingTypeForm.get('PricingTypeId').value, this.TierPricingTypeForm.get('FuelPricingDetails.PricingSourceId').value);\r\n            if (pricingCode != null) {\r\n                this.TierPricingTypeForm.get('FuelPricingDetails.PricingCode').patchValue(pricingCode);\r\n            }\r\n        }\r\n    }\r\n    getRackAvgTypeNameById(id: number, price: string): string {\r\n        let response = '';\r\n        let rack = this.RackAvgTypes.find(r => r.Id == id)\r\n\r\n        if (rack) {\r\n            //let name = rack.Name;\r\n            if (id == 1) {\r\n                response = '+ $' + price;\r\n            }\r\n            else if (id == 2) {\r\n                response = '- $' + price;\r\n            }\r\n            else if (id == 3) {\r\n                response = '+ ' + price + '%';\r\n            }\r\n            else if (id == 4) {\r\n                response = '- ' + price + '%';\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n    cumulationTypeChanged(checked: boolean, cumulationType: number) {\r\n\r\n        this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Day'), []);\r\n        this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Date'), []);\r\n\r\n        if (checked) {\r\n            //let cumulationType = this.tierPricingForm.ResetCumulationSetting.get('CumulationType').value\r\n            if (cumulationType == 1 || cumulationType == 2) {\r\n                this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Day'), [Validators.required]);\r\n            }\r\n            else if (cumulationType == 3 || cumulationType == 4) {\r\n                this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Date'), [Validators.required]);\r\n            }\r\n        }\r\n    }\r\n    setPricing() {\r\n        if (this.TierPricingTypeForm.invalid) {\r\n            return;\r\n        }\r\n        this.modalService.dismissAll();\r\n        let control: AbstractControl = this.tierPricingForm.Pricings.controls[this.selectedPricingIndex];\r\n        let sourceObj = this.TierPricingTypeForm.getRawValue();\r\n\r\n        control.get('TerminalName').setValue(sourceObj.TerminalName);\r\n        control.get('TerminalId').setValue(sourceObj.TerminalId);\r\n        control.get('CityGroupTerminalId').setValue(sourceObj.CityGroupTerminalId);\r\n        control.get('RackAvgTypeId').setValue(sourceObj.RackAvgTypeId);\r\n        control.get('PricePerGallon').setValue(sourceObj.PricePerGallon);\r\n        control.get('SupplierCostMarkupTypeId').setValue(sourceObj.SupplierCostMarkupTypeId);\r\n        control.get('SupplierCostMarkupValue').setValue(sourceObj.SupplierCostMarkupValue);\r\n        control.get('SupplierCost').setValue(sourceObj.SupplierCost);\r\n        control.get('RackPrice').setValue(sourceObj.RackPrice);\r\n        control.get('PricingSourceId').setValue(sourceObj.FuelPricingDetails.PricingSourceId);\r\n        control.get('PricingCode').setValue(sourceObj.FuelPricingDetails.PricingCode);\r\n        control.get('PricingTypeId').setValue(sourceObj.PricingTypeId);\r\n        control.get('TempPricingCodeDetails').setValue(sourceObj.TempPricingCodeDetails);\r\n        // control.patchValue(this.TierPricingTypeForm.value);\r\n        // control.get('TempPricingCodeDetails').setValue(sourceObj.TempPricingCodeDetails);\r\n        // control.get('Code').setValue(sourceObj.Code);\r\n        // control.get('CodeId').setValue(sourceObj.CodeId);\r\n        // control.get('CodeDescription').setValue(sourceObj.CodeDescription);\r\n        // control.get('EnableCityRack').setValue(sourceObj.EnableCityRack);\r\n        // control.get('FuelPricingDetails').patchValue(sourceObj.FuelPricingDetails);\r\n\r\n        if (sourceObj.PricingTypeId == 1) {\r\n            control.get('DisplayPrice').setValue('Rack Avg ' + this.getRackAvgTypeNameById(sourceObj.RackAvgTypeId, sourceObj.RackPrice));\r\n        }\r\n        else if (sourceObj.PricingTypeId == 4) {\r\n            control.get('DisplayPrice').setValue('Fuel Cost ' + this.getRackAvgTypeNameById(sourceObj.SupplierCostMarkupTypeId, sourceObj.SupplierCostMarkupValue));\r\n        }\r\n        else {\r\n            control.get('DisplayPrice').setValue('$' + sourceObj.PricePerGallon);\r\n        }\r\n    }\r\n    getPricingCodes() {\r\n        let filterData = {}\r\n        if (this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\r\n            filterData = {\r\n                \"PricingSourceId\": this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value,//this.tierPricingForm.Pricings.controls[this.selectedPricingIndex].get('PricingSourceId').value,\r\n                \"PricingTypeId\": this.TierPricingTypeForm.get('PricingTypeId').value,\r\n                \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\r\n                \"feedTypeId\": this.pricingfeedTypeId,\r\n                \"fuelClassTypeId\": this.pricingfuelClassTypeId,\r\n                \"Prefix\": \"\"\r\n            };\r\n        }\r\n        else {\r\n            filterData = {\r\n                \"PricingSourceId\": this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value,\r\n                \"PricingTypeId\": this.f.FuelPricingDetails.get('PricingTypeId').value,\r\n                \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\r\n                \"feedTypeId\": this.pricingfeedTypeId,\r\n                \"fuelClassTypeId\": this.pricingfuelClassTypeId,\r\n                \"Prefix\": \"\"\r\n            }\r\n        }\r\n\r\n        this._loadingPricingCodes = true;\r\n        this.addLocationService.getPricingCodes(filterData).subscribe(data => {\r\n            this._loadingPricingCodes = false;\r\n            if (data) {\r\n                this.pricingCodes = data.PricingCodes;\r\n            }\r\n        });\r\n    }\r\n    toggleSuppressPricing(isChecked: boolean) {\r\n        let isTierPriced = this.fuelPricingForm.IsTierPricingRequired.value;\r\n        if (isChecked) {\r\n            if (isTierPriced) {\r\n                let pricing = this.tierPricingForm.Pricings as FormArray;\r\n                pricing.clear();\r\n                this.removePricingValidation_tpt();\r\n            } else { \r\n                this.removePricingValidation();\r\n            }\r\n        } else {\r\n            if (isTierPriced) {\r\n                this.tierPricingEnabled(isTierPriced);\r\n            } else {\r\n                this.setPricingValidation(this.f.FuelPricingDetails.get('PricingTypeId').value);\r\n            }\r\n        }\r\n        this.UpdateSuppressPricingChange.emit(isChecked);\r\n    }\r\n    tierPricingEnabled(isChecked: boolean) {\r\n\r\n        let pricing = this.tierPricingForm.Pricings as FormArray;\r\n        pricing.clear()\r\n        if (isChecked) {\r\n            pricing.push(this.getTierPricingForm(false));\r\n            pricing.push(this.getTierPricingForm(true));\r\n            this.removePricingValidation();\r\n        } else {\r\n            this.setPricingValidation(this.f.FuelPricingDetails.get('PricingTypeId').value);\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    patchExistingPricingDetails(fuelPricingDetails: any){\r\n\r\n        fuelPricingDetails['TempPricingCodeDetails'] = fuelPricingDetails.Code;\r\n        fuelPricingDetails['TempTerminalName'] = fuelPricingDetails.TerminalName;\r\n\r\n        let code = { Code: fuelPricingDetails.Code, CodeDescription: fuelPricingDetails.CodeDescription, CodeId: fuelPricingDetails.CodeId };\r\n        this.locationForm.get('FuelPricingDetails').patchValue(fuelPricingDetails);\r\n        this.locationForm.get('FuelPricingDetails').get('FuelPricingDetails').get('PricingCode').patchValue(code);\r\n\r\n        //CITY RACK\r\n        if(fuelPricingDetails.EnableCityRack){\r\n            this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), [Validators.required]);\r\n            this.getCityGroupTerminals();\r\n        }\r\n        if (fuelPricingDetails.Code && fuelPricingDetails.Code.startsWith(\"O\")) {\r\n            this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').setValue(2)\r\n        } else{\r\n            this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').setValue(1)\r\n        }\r\n\r\n        //TERMINAL DETAILS\r\n        if(fuelPricingDetails.IsTierPricingRequired){\r\n\r\n            let pricing = this.tierPricingForm.Pricings as FormArray;\r\n\r\n            fuelPricingDetails.TierPricing?.Pricings && fuelPricingDetails.TierPricing.Pricings.forEach(row => {\r\n\r\n                //SET QUANTITY\r\n                if (row.IsAboveQuantity) {\r\n                    row['Quantity'] = row['FromQuantity'];\r\n                }\r\n                //SET TEMP\r\n                row['TempPricingCodeDetails'] = row['PricingCode'];\r\n                row['TempTerminalName'] = row.TerminalName;\r\n\r\n                let form = this.getTierPricingForm(row.IsAboveQuantity);\r\n                form.patchValue(row);\r\n\r\n                // //CITY RACK\r\n                // if(row.EnableCityRack){\r\n                //     this.updateFormControlValidators(form.get('CityGroupTerminalId'), [Validators.required]);\r\n                //     form.get('CityGroupTerminalId').setValue(2)\r\n                // }\r\n\r\n                pricing.push(form);\r\n            });\r\n            \r\n            this.removePricingValidation();\r\n            this.changeDetectorRef.detectChanges();\r\n        } else {\r\n            this.setPricingValidation(this.f.FuelPricingDetails.get('PricingTypeId').value);\r\n        }\r\n    }\r\n}\r\n","<div class=\"row\" [formGroup]=\"locationForm\">\r\n    <div class=\"col-12\">\r\n        <div class=\"well\">\r\n            <ng-container>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <h4>Pricing</h4>\r\n                        <!-- tier -->\r\n                        <div class=\"col-sm-12 form-check form-check-inline checkbox\" >\r\n                            <input class=\"form-check-input\" id=\"IsSupressOrderPricing\"\r\n                                   formControlName=\"IsSupressOrderPricing\" [disableControl]=\"f.IsRegularBuyer.value\" (click)=\"toggleSuppressPricing($event.target.checked)\" type=\"checkbox\">\r\n                            <label class=\"form-check-label\" for=\"IsSupressOrderPricing\"> Suppress Pricing</label>\r\n                        </div>\r\n                        <div formGroupName=\"FuelPricingDetails\" *ngIf=\"!f.IsSupressOrderPricing.value\">\r\n                            <div class=\"col-sm-12 form-check form-check-inline checkbox\">\r\n                                <input [disableControl]=\"f.AddressDetails.get('IsMarineLocation').value\" class=\"form-check-input\" id=\"IsTierPricingRequired\"\r\n                                       formControlName=\"IsTierPricingRequired\"\r\n                                       (click)=\"tierPricingEnabled($event.target.checked);\" type=\"checkbox\">\r\n                                <label class=\"form-check-label\" for=\"IsTierPricingRequired\"> Create Tier Pricing</label>\r\n                            </div>\r\n                            <div id=\"tier-pricing-qty-section\" *ngIf=\"fuelPricingForm.IsTierPricingRequired.value\"\r\n                                 formGroupName=\"TierPricing\">\r\n                                <div class=\"row mt5\">\r\n                                    <div class=\"col-sm-12\" [class]=\"f.FuelDeliveryDetails.get('DeliveryTypeId').value==1? 'pntr-none subSectionOpacity' : ''\">\r\n                                        <div class=\"form-check form-check-inline radio volume-based-tier\">\r\n                                            <input class=\"form-check-input\" id=\"FuelDetails_TierPricing_TierPricingType\"\r\n                                                   [disableControl]=\"f.FuelDeliveryDetails.get('DeliveryTypeId').value==1\"\r\n                                                   formControlName=\"TierPricingType\" name=\"TierPricingType\" type=\"radio\"\r\n                                                   [value]=\"1\">\r\n                                            <label class=\"form-check-label\" for=\"radio-volumeBased\">Volume Based</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline radio delivery-quantity-based-tier\">\r\n                                            <input class=\"form-check-input\" id=\"FuelDetails_TierPricing_TierPricingType\"\r\n                                                   formControlName=\"TierPricingType\" name=\"TierPricingType\" type=\"radio\"\r\n                                                   [value]=\"2\">\r\n                                            <label class=\"form-check-label\" for=\"radio-deliveredquantityrange\">\r\n                                                Delivery\r\n                                                Quantity Based\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"tier-pricing-fuel-quantity\">\r\n                                    <div class=\"row mt5\">\r\n                                        <div class=\"col-sm-3\">\r\n                                            <div *ngIf=\"tierPricingForm.TierPricingType.value==1\"\r\n                                                 class=\"cumulative-delivered-quantity\">\r\n                                                For Cumulative Delivered\r\n                                                Quantity\r\n                                            </div>\r\n                                            <div *ngIf=\"tierPricingForm.TierPricingType.value==2\"\r\n                                                 class=\"delivery-quantity-ranging\">\r\n                                                Delivery Quantity\r\n                                                Ranging\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div id=\"tier-fuel-qty-section\" class=\"partial-section quantity-range\">\r\n                                                <div class=\"partial-block-collection-section mt5\" formArrayName=\"Pricings\">\r\n                                                    <ng-container *ngFor=\"let priceControl of tierPricingForm.Pricings['controls']; let i = index; let isLast = last;\">\r\n                                                        <div [formGroupName]=\"i\">\r\n                                                            <!-- ALL EXCEPT LAST -->\r\n                                                            <div class=\"partial-block\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-sm-12\">\r\n                                                                        <div class=\"pricing-row row\">\r\n                                                                            <div class=\"tier-fuel-quantity-row col-sm-12 idx-1\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-sm-2 subSectionOpacity pntr-none\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <input *ngIf=\"!isLast\"\r\n                                                                                                   class=\"form-control\"\r\n                                                                                                   formControlName=\"FromQuantity\"\r\n                                                                                                   placeholder=\"From\"\r\n                                                                                                   [disableControl]=\"true\"\r\n                                                                                                   type=\"text\">\r\n                                                                                            <input *ngIf=\"isLast\"\r\n                                                                                                   class=\"form-control\"\r\n                                                                                                   formControlName=\"Quantity\"\r\n                                                                                                   placeholder=\"Above\"\r\n                                                                                                   [disableControl]=\"true\"\r\n                                                                                                   type=\"text\">\r\n                                                                                            <span class=\"text-danger\"></span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-1\">\r\n                                                                                        <label *ngIf=\"!isLast\"\r\n                                                                                               class=\"mt7\">To</label>\r\n                                                                                        <label *ngIf=\"isLast\"\r\n                                                                                               class=\"mt7\">Above</label>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-2\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <input *ngIf=\"!isLast\"\r\n                                                                                                   class=\"form-control to-quantity valid\"\r\n                                                                                                   formControlName=\"ToQuantity\"\r\n                                                                                                   placeholder=\"Up to\"\r\n                                                                                                   type=\"number\"\r\n                                                                                                   (change)=\"toQuantityChanged($event.target.value, i)\">\r\n                                                                                            <span *ngIf=\"formSubmited && priceControl.get('ToQuantity').errors\"\r\n                                                                                                  class=\"text-danger\">\r\n                                                                                                To Quantity is required.\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-2\">\r\n                                                                                        <div class=\"form-group mt7\">\r\n                                                                                            <label *ngIf=\"priceControl.get('DisplayPrice').value==null;\"\r\n                                                                                                   class=\"lblDisplayPrice\">--</label>\r\n                                                                                            <label *ngIf=\"priceControl.get('DisplayPrice').value!=null;\"\r\n                                                                                                   class=\"lblDisplayPrice\">{{priceControl.get('DisplayPrice').value}}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-2\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <a type=\"button\"\r\n                                                                                               class=\"btn btn-primary btn-sm\"\r\n                                                                                               data-target=\"#set-tier-price\"\r\n                                                                                               data-backdrop=\"static\"\r\n                                                                                               data-keyboard=\"false\"\r\n                                                                                               (click)=\"setPricingSourceClicked_tpt(i, SetTierPriceType);\">\r\n                                                                                                Set\r\n                                                                                                Pricing\r\n                                                                                            </a>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"qty-add-btns fs18 pl0 col-sm-1\">\r\n                                                                                        <ng-container *ngIf=\"i==(tierPricingForm.Pricings.controls.length-2)\">\r\n                                                                                            <a type=\"button\"\r\n                                                                                               class=\"fa fa-plus-circle mt4 mr5 mr10\"\r\n                                                                                               title=\"Add\"\r\n                                                                                               (click)=\"addRemoveTierFee(true)\">\r\n                                                                                            </a>\r\n                                                                                            <a type=\"button\"\r\n                                                                                               class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\"\r\n                                                                                               title=\"Remove\"\r\n                                                                                               (click)=\"addRemoveTierFee(false)\">\r\n                                                                                            </a>\r\n                                                                                        </ng-container>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"ml10 pricing-error-section col\">\r\n                                                                                        <label *ngIf=\"formSubmited && priceControl.get('DisplayPrice').errors\"\r\n                                                                                               class=\"text-danger\">\r\n                                                                                            Pricing is required.\r\n                                                                                        </label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <!-- LAST -->\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"tierPricingForm.TierPricingType.value==1\" class=\"row reset-cumulation\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <div class=\"form-check form-check-inline checkbox\">\r\n                                            <input class=\"form-check-input\" id=\"FuelDetails_TierPricing_IsResetCumulation\"\r\n                                                   formControlName=\"IsResetCumulation\" type=\"checkbox\" value=\"true\" (change)=\"cumulationTypeChanged($event.target.checked, tierPricingForm.ResetCumulationSetting.get('CumulationType').value)\">\r\n                                            <label class=\"form-check-label\" for=\"IsResetCumulation\"> Reset Frequency</label>\r\n                                        </div>\r\n                                        <div id=\"reset-cumulation-section\" *ngIf=\"tierPricingForm.IsResetCumulation.value\"\r\n                                             formGroupName=\"ResetCumulationSetting\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-3\">\r\n                                                    <select class=\"form-control\"\r\n                                                            id=\"FuelDetails_TierPricing_ResetCumulationSetting_CumulationType\"\r\n                                                            formControlName=\"CumulationType\"\r\n                                                            (change)=\"cumulationTypeChanged(true, $event.target.value)\">\r\n                                                        <option value=\"null\" disabled>Select</option>\r\n                                                        <option value=\"1\">Weekly</option>\r\n                                                        <option value=\"2\">BiWeekly</option>\r\n                                                        <option value=\"3\">Monthly</option>\r\n                                                        <option value=\"4\">Specific Dates</option>\r\n                                                    </select>\r\n                                                    <span class=\"text-danger\"\r\n                                                          data-valmsg-for=\"FuelDetails.TierPricing.ResetCumulationSetting.CumulationType\"></span>\r\n                                                </div>\r\n                                                <div *ngIf=\"tierPricingForm.ResetCumulationSetting.get('CumulationType').value==3 || tierPricingForm.ResetCumulationSetting.get('CumulationType').value==4\"\r\n                                                     class=\"col-sm-3 reset-cumulation-date\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input type=\"text\" class=\"form-control datepicker\"\r\n                                                               [maxDate]=\"MaxInputDate\" [format]=\"'MM/DD/YYYY'\"\r\n                                                               formControlName=\"Date\" myDatePicker\r\n                                                               (onDateChange)=\"tierPricingForm.ResetCumulationSetting.get('Date').setValue($event);\" />\r\n                                                        <span *ngIf=\"formSubmited && tierPricingForm.ResetCumulationSetting.get('Date').errors\"\r\n                                                              class=\"text-danger\">\r\n                                                            Date is required field.\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div *ngIf=\"tierPricingForm.ResetCumulationSetting.get('CumulationType').value==1 || tierPricingForm.ResetCumulationSetting.get('CumulationType').value==2\"\r\n                                                     class=\"col-sm-3 reset-cumulation-day\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <select class=\"form-control reset-cumulation-day\"\r\n                                                                formControlName=\"Day\">\r\n                                                            <option value=\"null\" disabled>Select Day</option>\r\n                                                            <option value=\"1\">Mon</option>\r\n                                                            <option value=\"2\">Tue</option>\r\n                                                            <option value=\"3\">Wed</option>\r\n                                                            <option value=\"4\">Thu</option>\r\n                                                            <option value=\"5\">Fri</option>\r\n                                                            <option value=\"6\">Sat</option>\r\n                                                            <option value=\"7\">Sun</option>\r\n                                                        </select>\r\n                                                        <span *ngIf=\"formSubmited && tierPricingForm.ResetCumulationSetting.get('Day').errors\"\r\n                                                              class=\"text-danger\">\r\n                                                            Day is required field.\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"!fuelPricingForm.IsTierPricingRequired.value\" class=\"section-pricing\">\r\n                                <div class=\"row mt10\">\r\n                                    <div id=\"divPricingSection\" class=\"col-sm-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3\">\r\n                                                        <div class=\"single-delivery-sub-types\">\r\n                                                            <label>Type</label>\r\n                                                            <select class=\"form-control\" formControlName=\"PricingTypeId\"\r\n                                                                    (change)=\"pricingTypeChanged($event.target.value)\"\r\n                                                                    [disableControl]=\"f.FuelDetails['controls']['FuelDisplayGroupId'].value==3\">\r\n                                                                <option [value]=\"1\">Market Based</option>\r\n                                                                <option [value]=\"4\">Fuel Cost</option>\r\n                                                                <option [value]=\"2\">Fixed</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-6\"\r\n                                                         *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 1\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12 pricing-codes\">\r\n                                                                <label for=\"FuelPricingDetails_FuelPricingDetails_PricingCode_Pricing_Code\">\r\n                                                                    Pricing\r\n                                                                    Code\r\n                                                                </label><span class=\"required pl4\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <div *ngIf=\"_loadingPricingCodes\"\r\n                                                                         class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader\">\r\n                                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                                    </div>\r\n                                                                    <div class=\"ng-autocomplete\">\r\n                                                                        <ng-autocomplete [data]=\"pricingCodes\"\r\n                                                                                         formControlName=\"TempPricingCodeDetails\"\r\n                                                                                         [searchKeyword]=\"'Code'\"\r\n                                                                                         placeholder=\"Pricing code\"\r\n                                                                                         [itemTemplate]=\"itemTemplate\"\r\n                                                                                         [notFoundTemplate]=\"notFoundTemplate\"\r\n                                                                                         (selected)='onPricingCodeSelected($event)'\r\n                                                                                         (click)=\"getPricingCodes()\">\r\n                                                                        </ng-autocomplete>\r\n                                                                        <ng-template #itemTemplate let-item>\r\n                                                                            <a [innerHTML]=\"item.Code\"></a>\r\n                                                                        </ng-template>\r\n                                                                        <ng-template #notFoundTemplate let-notFound>\r\n                                                                            <div [innerHTML]=\"notFound\">\r\n                                                                            </div>\r\n                                                                        </ng-template>\r\n                                                                    </div>\r\n                                                                    <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('Code').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelPricingDetails.get('Code').errors.required\">\r\n                                                                            Select\r\n                                                                            Pricing\r\n                                                                            Code.\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6 div-selectpricingcode\">\r\n                                                                <button [disabled]=\"_loadingPricingCodes\" type=\"button\"\r\n                                                                        class=\"btn btn-primary btn-sm\"\r\n                                                                        (click)=\"openPriceCodeModal(pricingcodeModal)\">\r\n                                                                    Select\r\n                                                                    Pricing\r\n                                                                    Code\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12\"\r\n                                                                 *ngIf=\"f.FuelPricingDetails.get('TempPricingCodeDetails').value\">\r\n                                                            {{f.FuelPricingDetails.get('CodeDescription').value}}\r\n                                                            <!-- {{f.FuelPricingDetails.get('TempPricingCodeDetails').value?.Code}} -->\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3\"\r\n                                                         *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <label>Price</label>\r\n                                                            <div class=\"input-group mtm1\">\r\n                                                                <span class=\"input-group-addon currency-symbol\">\r\n                                                                    {{\r\n f.AddressDetails.get('CountryId').value == 1 ?\r\n                                                                'USD' : 'CAD'\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <input class=\"form-control datatype-decimal always\"\r\n                                                                       id=\"FuelPricingDetails_PricePerGallon\"\r\n                                                                       formControlName=\"PricePerGallon\" type=\"number\">\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('PricePerGallon').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelPricingDetails.get('PricePerGallon').errors.required\">\r\n                                                                    Price\r\n                                                                    is required.\r\n                                                                </span>\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelPricingDetails.get('PricePerGallon').errors.pattern || f.FuelPricingDetails.get('PricePerGallon').errors?.min\">\r\n                                                                    Invalid\r\n                                                                    Pricing.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-12\">\r\n                                                <div class=\"pa bg-white subSectionOpacity mt10 top0 left0 z-index5 loading-wrapper calculate-wrapper hide-element\">\r\n                                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                                </div>\r\n                                                <div class=\"market-control\"\r\n                                                     *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 1\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <select class=\"form-control\"\r\n                                                                        id=\"FuelPricingDetails_RackAvgTypeId\"\r\n                                                                        formControlName=\"RackAvgTypeId\">\r\n                                                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\"\r\n                                                                            [value]=\"rackAvgType.Id\">\r\n                                                                        {{rackAvgType.Name}}\r\n                                                                    </option>\r\n                                                                    <!-- <option value=\"1\">+$</option>\r\n                                            <option value=\"2\">-$</option>\r\n                                            <option value=\"3\">+%</option>\r\n                                            <option value=\"4\">-%</option> -->\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <div class=\"mtm1\">\r\n                                                                    <input class=\"form-control datatype-decimal always\"\r\n                                                                           id=\"FuelPricingDetails_RackPrice\"\r\n                                                                           formControlName=\"RackPrice\" placeholder=\"Rack Price\"\r\n                                                                           type=\"number\">\r\n                                                                </div>\r\n                                                                <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('RackPrice').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.FuelPricingDetails.get('RackPrice').errors.required\">\r\n                                                                        Rack Price field\r\n                                                                        is required.\r\n                                                                    </span>\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.FuelPricingDetails.get('RackPrice').errors.pattern || f.FuelPricingDetails.get('RackPrice').errors.min\">\r\n                                                                        Invalid Rack\r\n                                                                        Price.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row mt-2\" *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 4\">\r\n                                            <div class=\"col-sm-3 supplier-cost cost-control\">\r\n                                                <select class=\"form-control valid\"\r\n                                                        id=\"FuelPricingDetails_SupplierCostMarkupTypeId\"\r\n                                                        formControlName=\"SupplierCostMarkupTypeId\">\r\n                                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\"\r\n                                                            [value]=\"rackAvgType.Id\">\r\n                                                        {{rackAvgType.Name}}\r\n                                                    </option>\r\n                                                    <!-- <option value=\"1\">+$</option>\r\n                            <option value=\"2\">-$</option>\r\n                            <option value=\"3\">+%</option>\r\n                            <option value=\"4\">-%</option> -->\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"col-sm-3 supplier-cost defaultDisabled cost-control\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"mtm1 defaultDisabled\">\r\n                                                        <input class=\"form-control datatype-decimal always\"\r\n                                                               id=\"FuelPricingDetails_SupplierCostMarkupValue\"\r\n                                                               formControlName=\"SupplierCostMarkupValue\" type=\"number\"\r\n                                                               autocomplete=\"off\">\r\n                                                        <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('SupplierCostMarkupValue').errors\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.FuelPricingDetails.get('SupplierCostMarkupValue').errors.required\">\r\n                                                                The Fuel Cost field is\r\n                                                                required.\r\n                                                            </span>\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.FuelPricingDetails.get('SupplierCostMarkupValue').errors.pattern || f.FuelPricingDetails.get('SupplierCostMarkupValue').errors.min\">\r\n                                                                Invalid\r\n                                                                mark up value.\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row cityrack-wrapper\"\r\n                                     *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 1\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 terminal-price-check\">\r\n                                                <div class=\"form-group mb5\">\r\n                                                    <div class=\"\">\r\n                                                        <div class=\"\">\r\n                                                            <div class=\"form-check form-check-inline mb10\" [class]=\"(f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value==2)? 'pntr-none subSectionOpacity' : ''\">\r\n                                                                <input type=\"checkbox\"\r\n                                                                       [disableControl]=\"f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value==2\"\r\n                                                                       formControlName=\"EnableCityRack\"\r\n                                                                       class=\"enablecityrack form-check-input\"\r\n                                                                       id=\"chk-enable-cityrack\"\r\n                                                                       (change)=\"setRackTerminalValidation();this.getCityGroupTerminals()\">\r\n                                                                <label class=\"form-check-label\" for=\"chk-enable-cityrack\">\r\n                                                                    City\r\n                                                                    Rack/Terminal\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class=\"pr\" id=\"cityrack-div\"\r\n                                                                 *ngIf=\"f.FuelPricingDetails.get('EnableCityRack').value == true\">\r\n                                                                <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader hide-element\">\r\n                                                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                                                </div>\r\n                                                                <select id=\"FuelPricingDetails_CityGroupTerminalId\"\r\n                                                                        formControlName=\"CityGroupTerminalId\"\r\n                                                                        class=\"form-control enum-ddl qty-ind\"\r\n                                                                        (change)=\"cityRackTerminalChanged()\">\r\n                                                                    <option disabled value=\"null\">\r\n                                                                        Select\r\n                                                                    </option>\r\n                                                                    <option selected=\"\" disabled=\"\" class=\"hidden\"\r\n                                                                            value=\"noneselected\">\r\n                                                                        City\r\n                                                                        Rack/Terminal\r\n                                                                    </option>\r\n                                                                    <optgroup label=\"Within State\">\r\n                                                                        <ng-container *ngFor=\"let item of CityGroupTerminalsList\">\r\n                                                                            <option *ngIf=\"item.IsWithinState\"\r\n                                                                                    [value]=\"item.Id\">\r\n                                                                                {{item.Name}}\r\n                                                                            </option>\r\n                                                                        </ng-container>\r\n                                                                    </optgroup>\r\n                                                                    <optgroup label=\"Other States\">\r\n                                                                        <ng-container *ngFor=\"let item of CityGroupTerminalsList\">\r\n                                                                            <option *ngIf=\"!item.IsWithinState\"\r\n                                                                                    [value]=\"item.Id\">\r\n                                                                                {{item.Name}}\r\n                                                                            </option>\r\n                                                                        </ng-container>\r\n                                                                    </optgroup>\r\n                                                                </select>\r\n                                                                <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('CityGroupTerminalId').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.FuelPricingDetails.get('CityGroupTerminalId').errors.required\">\r\n                                                                        Terminal is\r\n                                                                        required.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-4 mb25\" id=\"terminalContainer1\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"ng-autocomplete\">\r\n                                                        <ng-autocomplete [data]=\"approvedTerminalList\"\r\n                                                                         [searchKeyword]=\"'Name'\" (click)=\"getApprovedTerminal()\"\r\n                                                                         placeholder=\"Approved Terminals\"\r\n                                                                         [itemTemplate]=\"TerminalItemTemplate\"\r\n                                                                         [notFoundTemplate]=\"TerminalnotFoundTemplate\"\r\n                                                                         (selected)='onApprovedTerminalSelected($event)'>\r\n                                                        </ng-autocomplete>\r\n                                                        <!-- formControlName=\"TerminalName\" -->\r\n                                                        <ng-template #TerminalItemTemplate let-item>\r\n                                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                                        </ng-template>\r\n                                                        <ng-template #TerminalnotFoundTemplate let-notFound>\r\n                                                            <div [innerHTML]=\"notFound\">\r\n                                                            </div>\r\n                                                        </ng-template>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #pricingcodeModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Pricing Code</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"\r\n                id=\"pricingcodeModal\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"0\" name=\"pricing-feedfilter\" id=\"filter_all\"\r\n                               [checked]=\"1\">\r\n                        <label class=\"btn ml0\" for=\"filter_all\">All</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"1\" name=\"pricing-feedfilter\" id=\"filter_10am\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_10am\">Contract (10AM EST)</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"3\" name=\"pricing-feedfilter\" id=\"filter_5pm\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_5pm\">End of Day (5PM EST)</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"5\" name=\"pricing-feedfilter\" id=\"filter_10am_pre\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_10am_pre\">Previous Day (10AM EST)</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"4\" name=\"pricing-feedfilter\" id=\"filter_5pm_pre\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_5pm_pre\">Previous Day (5PM EST)</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"0\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_brand_all\" [checked]=\"1\">\r\n                        <label class=\"btn ml0\" for=\"filter_brand_all\">All</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"1\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_branded\" [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_branded\">Branded</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"2\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_unbranded\" [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_unbranded\">Unbranded</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"3\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_both\" [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_both\">Both</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div *ngFor=\"let item of pricingCodes\" class=\"col-sm-4\">\r\n                <div class=\"well click-card\" (click)=\"getSelectedPricingCode(item);\">\r\n                    <label class=\"text-center\" id=\"{{item.Id}}\"> {{item.Code}}</label>\r\n                    <div *ngIf=\"item.PricingTypeId == 1\">\r\n                        <div> {{item.PricingSource}}</div>\r\n                        <div>{{item.RackAvgPricingType}}</div>\r\n                        <ng-container *ngIf=\"item.PricingSourceId == 2 || item.PricingSourceId == 3\">\r\n                            <div>{{item.FeedType}}</div>\r\n                            <div>{{item.WeekendPricingDay}}</div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item.PricingSourceId == 2\">\r\n                            <div>{{item.FuelClassType}}</div>\r\n                            <div>{{item.QuantityIndicator}}</div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #SetTierPriceType let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Set Tier Price</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form [formGroup]=\"TierPricingTypeForm\">\r\n                <div *ngIf=\"_loaderTierPricingType\"\r\n                     class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader\">\r\n                    <span class=\"spinner-dashboard pa\"></span>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div id=\"divPricingSection\" class=\"col-sm-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"single-delivery-sub-types\">\r\n                                            <label>Type</label>\r\n                                            <select class=\"form-control\" formControlName=\"PricingTypeId\"\r\n                                                    (change)=\"pricingTypeChanged_tpt($event.target.value)\">\r\n                                                <option [value]=\"1\">Market Based</option>\r\n                                                <option [value]=\"4\">Fuel Cost</option>\r\n                                                <option [value]=\"2\">Fixed</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 1\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12 pricing-codes\">\r\n                                                <label for=\"FuelPricingDetails_FuelPricingDetails_PricingCode_Pricing_Code\">\r\n                                                    Pricing\r\n                                                    Code\r\n                                                </label><span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div *ngIf=\"_loadingPricingCodes\"\r\n                                                         class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader\">\r\n                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                    </div>\r\n                                                    <div class=\"ng-autocomplete\">\r\n                                                        <ng-autocomplete [data]=\"pricingCodes\"\r\n                                                                         formControlName=\"TempPricingCodeDetails\"\r\n                                                                         [searchKeyword]=\"'Code'\" placeholder=\"Pricing code\"\r\n                                                                         [itemTemplate]=\"itemTemplate\"\r\n                                                                         [notFoundTemplate]=\"notFoundTemplate\"\r\n                                                                         (selected)='onPricingCodeSelected_tpt($event)'\r\n                                                                         (click)=\"getPricingCodes()\">\r\n                                                        </ng-autocomplete>\r\n                                                        <ng-template #itemTemplate let-item>\r\n                                                            <a [innerHTML]=\"item.Code\"></a>\r\n                                                        </ng-template>\r\n                                                        <ng-template #notFoundTemplate let-notFound>\r\n                                                            <div [innerHTML]=\"notFound\">\r\n                                                            </div>\r\n                                                        </ng-template>\r\n                                                    </div>\r\n                                                    <div *ngIf=\"TierPricingTypeForm.get('TempPricingCodeDetails').touched && TierPricingTypeForm.get('Code').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"TierPricingTypeForm.get('Code').errors.required\">\r\n                                                            Select\r\n                                                            Pricing\r\n                                                            Code.\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6 div-selectpricingcode\">\r\n                                                <button [disabled]=\"_loadingPricingCodes\" type=\"button\"\r\n                                                        class=\"btn btn-primary btn-sm mt-2\"\r\n                                                        (click)=\"openPriceCodeModal_tpt(pricingcodeModal)\">\r\n                                                    Select\r\n                                                    Pricing\r\n                                                    Code\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12\"\r\n                                                 *ngIf=\"TierPricingTypeForm.get('TempPricingCodeDetails').value\">\r\n                                                {{TierPricingTypeForm.get('CodeDescription').value}}\r\n                                                <!-- {{TierPricingTypeForm.get('TempPricingCodeDetails').value?.Code}} -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 2\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Price</label>\r\n                                            <div class=\"input-group mtm1\">\r\n                                                <span class=\"input-group-addon currency-symbol\">\r\n                                                    {{ f.AddressDetails.get('CountryId').value == 1 ? 'USD' : 'CAD'}}\r\n                                                </span>\r\n                                                <input class=\"form-control datatype-decimal always\"\r\n                                                       id=\"FuelPricingDetails_PricePerGallon\"\r\n                                                       formControlName=\"PricePerGallon\" type=\"number\">\r\n                                            </div>\r\n                                            <div *ngIf=\"TierPricingTypeForm.get('PricePerGallon').touched && TierPricingTypeForm.get('PricePerGallon').errors\">\r\n                                                <span class=\"text-danger\"\r\n                                                      *ngIf=\"TierPricingTypeForm.get('PricePerGallon').errors.required\">\r\n                                                    Price\r\n                                                    is required.\r\n                                                </span>\r\n                                                <span class=\"text-danger\"\r\n                                                      *ngIf=\"TierPricingTypeForm.get('PricePerGallon').errors.pattern || TierPricingTypeForm.get('PricePerGallon').errors?.min\">\r\n                                                    Invalid\r\n                                                    Pricing.\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"pa bg-white subSectionOpacity mt10 top0 left0 z-index5 loading-wrapper calculate-wrapper hide-element\">\r\n                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                </div>\r\n                                <div class=\"market-control\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 1\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                            <div class=\"form-group\">\r\n                                                <select class=\"form-control\" id=\"FuelPricingDetails_RackAvgTypeId\"\r\n                                                        formControlName=\"RackAvgTypeId\">\r\n                                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\"\r\n                                                            [value]=\"rackAvgType.Id\">\r\n                                                        {{rackAvgType.Name}}\r\n                                                    </option>\r\n                                                    <!-- <option value=\"1\">+$</option>\r\n                                                    <option value=\"2\">-$</option>\r\n                                                    <option value=\"3\">+%</option>\r\n                                                    <option value=\"4\">-%</option> -->\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"mtm1\">\r\n                                                    <input class=\"form-control datatype-decimal always\"\r\n                                                           id=\"FuelPricingDetails_RackPrice\" formControlName=\"RackPrice\"\r\n                                                           placeholder=\"Rack Price\" type=\"number\">\r\n                                                </div>\r\n                                                <div *ngIf=\"TierPricingTypeForm.get('RackPrice').touched && TierPricingTypeForm.get('RackPrice').errors\">\r\n                                                    <span class=\"text-danger\"\r\n                                                          *ngIf=\"TierPricingTypeForm.get('RackPrice').errors.required\">\r\n                                                        Rack Price field\r\n                                                        is required.\r\n                                                    </span>\r\n                                                    <span class=\"text-danger\"\r\n                                                          *ngIf=\"TierPricingTypeForm.get('RackPrice').errors.pattern || TierPricingTypeForm.get('RackPrice').errors.min\">\r\n                                                        Invalid Rack\r\n                                                        Price.\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-2\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 4\">\r\n                            <div class=\"col-sm-3 supplier-cost cost-control\">\r\n                                <select class=\"form-control valid\" id=\"FuelPricingDetails_SupplierCostMarkupTypeId\"\r\n                                        formControlName=\"SupplierCostMarkupTypeId\">\r\n                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\" [value]=\"rackAvgType.Id\">\r\n                                        {{rackAvgType.Name}}\r\n                                    </option>\r\n                                    <!-- <option value=\"1\">+$</option>\r\n                                    <option value=\"2\">-$</option>\r\n                                    <option value=\"3\">+%</option>\r\n                                    <option value=\"4\">-%</option> -->\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-sm-3 supplier-cost defaultDisabled cost-control\">\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"mtm1 defaultDisabled\">\r\n                                        <input class=\"form-control datatype-decimal always\"\r\n                                               id=\"FuelPricingDetails_SupplierCostMarkupValue\"\r\n                                               formControlName=\"SupplierCostMarkupValue\" type=\"number\" autocomplete=\"off\">\r\n                                        <div *ngIf=\"TierPricingTypeForm.get('SupplierCostMarkupValue').touched && TierPricingTypeForm.get('SupplierCostMarkupValue').errors\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"TierPricingTypeForm.get('SupplierCostMarkupValue').errors.required\">\r\n                                                The Fuel Cost field is\r\n                                                required.\r\n                                            </span>\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"TierPricingTypeForm.get('SupplierCostMarkupValue').errors.pattern || TierPricingTypeForm.get('SupplierCostMarkupValue').errors.min\">\r\n                                                Invalid\r\n                                                mark up value.\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row cityrack-wrapper\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 1\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3 terminal-price-check\">\r\n                                <div class=\"form-group mb5\">\r\n                                    <div class=\"\">\r\n                                        <div class=\"\">\r\n                                            <div class=\"form-check form-check-inline mb10\" [class]=\"(TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value==2)? 'pntr-none subSectionOpacity' : ''\">\r\n                                                <input type=\"checkbox\"\r\n                                                       [disableControl]=\"TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value==2\"\r\n                                                       formControlName=\"EnableCityRack\"\r\n                                                       class=\"enablecityrack form-check-input\" id=\"chk-enable-cityrack\"\r\n                                                       (change)=\"setRackTerminalValidation_tpt();this.getCityGroupTerminals_tpt()\">\r\n                                                <label class=\"form-check-label\" for=\"chk-enable-cityrack\">\r\n                                                    City\r\n                                                    Rack/Terminal\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"pr\" id=\"cityrack-div\"\r\n                                                 *ngIf=\"TierPricingTypeForm.get('EnableCityRack').value == true\">\r\n                                                <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader hide-element\">\r\n                                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                                </div>\r\n                                                <select id=\"FuelPricingDetails_CityGroupTerminalId\"\r\n                                                        formControlName=\"CityGroupTerminalId\"\r\n                                                        class=\"form-control enum-ddl qty-ind\"\r\n                                                        (change)=\"cityRackTerminalChanged_tpt()\">\r\n                                                    <option disabled value=\"null\">\r\n                                                        Select\r\n                                                    </option>\r\n                                                    <option selected=\"\" disabled=\"\" class=\"hidden\" value=\"noneselected\">\r\n                                                        City\r\n                                                        Rack/Terminal\r\n                                                    </option>\r\n                                                    <optgroup label=\"Within State\">\r\n                                                        <ng-container *ngFor=\"let item of tierCityGroupTerminalsList\">\r\n                                                            <option *ngIf=\"item.IsWithinState\" [value]=\"item.Id\">\r\n                                                                {{item.Name}}\r\n                                                            </option>\r\n                                                        </ng-container>\r\n                                                    </optgroup>\r\n                                                    <optgroup label=\"Other States\">\r\n                                                        <ng-container *ngFor=\"let item of tierCityGroupTerminalsList\">\r\n                                                            <option *ngIf=\"!item.IsWithinState\" [value]=\"item.Id\">\r\n                                                                {{item.Name}}\r\n                                                            </option>\r\n                                                        </ng-container>\r\n                                                    </optgroup>\r\n                                                </select>\r\n                                                <div *ngIf=\"TierPricingTypeForm.get('CityGroupTerminalId').touched && TierPricingTypeForm.get('CityGroupTerminalId').errors\">\r\n                                                    <span class=\"text-danger\"\r\n                                                          *ngIf=\"TierPricingTypeForm.get('CityGroupTerminalId').errors.required\">\r\n                                                        Terminal is\r\n                                                        required.\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4 mb25\" id=\"terminalContainer2\">\r\n                            \r\n\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"ng-autocomplete\">\r\n                                        <ng-autocomplete [data]=\"tierApprovedTerminalList\" [searchKeyword]=\"'Name'\"\r\n                                                         (click)=\"getApprovedTerminal_tpt()\" placeholder=\"Approved Terminals\"\r\n                                                         [itemTemplate]=\"TerminalItemTemplate\"\r\n                                                         [notFoundTemplate]=\"TerminalnotFoundTemplate\"\r\n                                                         formControlName=\"TempTerminalName\"\r\n                                                         (selected)='onApprovedTerminalSelected_tpt($event)'>\r\n                                        </ng-autocomplete>\r\n                                        <!-- formControlName=\"TerminalName\" -->\r\n                                        <ng-template #TerminalItemTemplate let-item>\r\n                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                        </ng-template>\r\n                                        <ng-template #TerminalnotFoundTemplate let-notFound>\r\n                                            <div [innerHTML]=\"notFound\">\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <!-- <div class=\"row tier-terminal-price defaultDisabled\">\r\n                            <div class=\"show-in-fr\">\r\n                                <div class=\"col-sm-2 pr0\">\r\n                                    <input type=\"button\" class=\"btn btn-info btn-sm\" id=\"btnCalculateTierPPG\"\r\n                                        value=\"Calculate PPG\" data-url=\"/Supplier/FuelRequest/CalculateTerminalPrice\">\r\n                                </div>\r\n                                <div class=\"col-sm-8\">\r\n                                    <label id=\"EstimatedTierPPG\" class=\"mt5 ml10\"></label>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right\">\r\n                                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"modal.dismiss('Cross click')\">\r\n                                <input type=\"button\" id=\"SelectPricing\" value=\"Select\" class=\"btn btn-lg btn-primary\"\r\n                                       [disabled]=\"TierPricingTypeForm.invalid\" (click)=\"setPricing();\">\r\n                                <!-- [disabled]=\"TierPricingTypeForm.invalid\"  -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </form>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { AgmDirectionModule } from 'agm-direction';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PricingSectionComponent } from './pricing-section.component';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { GlobalModule } from 'src/app/modules/global.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PricingSectionComponent\r\n    ],\r\n    imports: [\r\n        GlobalModule,\r\n        AutocompleteLibModule,\r\n        DirectiveModule,\r\n        AgmDirectionModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        PricingSectionComponent\r\n    ]\r\n})\r\nexport class PricingSectionModule { }\r\n"]}