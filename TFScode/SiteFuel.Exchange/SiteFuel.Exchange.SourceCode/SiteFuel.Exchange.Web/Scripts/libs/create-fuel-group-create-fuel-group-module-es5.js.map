{"version":3,"sources":["webpack:///src/app/company-addresses/region/service/region.service.ts","webpack:///src/app/create-fuel-group/create-fuel-group.component.html","webpack:///src/app/create-fuel-group/create-fuel-group.component.ts","webpack:///src/app/create-fuel-group/create-fuel-group.module.ts","webpack:///src/app/create-fuel-group/fuel-group-mapping/fuel-group-mapping.component.html","webpack:///src/app/create-fuel-group/fuel-group-mapping/fuel-group-mapping.component.ts","webpack:///src/app/self-service-alias/models/FuelGroupGridViewModel.ts"],"names":["httpOptions","headers","RegionService","httpClient","createUrl","updateUrl","deleteUrl","getRegionsUrl","getSourceRegionsUrl","createSourceRegionUrl","updateSourceRegionUrl","deleteSourceRegionUrl","getJobsUrl","getDriversUrl","getDispatchersUrl","getTrailersUrl","stateUrl","shiftByDriverUrl","getRegionSchedulsbyRegionIdUrl","getRouteByReginId","getCompanyShiftsUrl","getRegionDriversUrl","addDriverScheduleUrl","addRegionScheduleUrl","updateDriverScheduleUrl","deleteDriverScheduleUrl","getCarriersUrl","getRegionShiftMapping","getCarrierRegionsUrl","getSelectedCarriersByRegionUrl","isSourceRegionAvailableUrl","getProductTypeUrl","getFuelProductUrl","isPublishedDRUrl","onLoadingChanged","get","pipe","handleError","regiondId","regionId","region","post","name","id","countryId","driverIds","scheduleType","routeId","model","data","date","postModel","SelectedDate","driverScheduleMappingViewModels","productIds","fuelTypeIds","providedIn","CreateFuelGroupComponent","httpService","_fb","fuelSurchargeService","externalMappingsService","result","nativeServiceCall","ProductTypeList","FuelTypeList","TableTypeList","CustomerList","CarrierList","IsCustomSelected","IsCustomerSelected","IsCarrierSelected","IsEditable","IsProductTypeSelected","createFuelGroupUrl","updateFuelGroupUrl","SingleSelectSettingsById","isLoadingSubject","singleSelection","closeDropDownOnSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","MultiSelectSettingsById","init","rcForm","controls","valueChanges","subscribe","prev","next","JSON","stringify","onTableTypeSelect","onProductTypeChange","onCustomerSelect","onCarrierSelect","getProductTypeList","getTableTypeList","getCustomerList","getCarrierList","group","Id","GroupName","required","FuelGroupType","GroupTypeStandard","ProductTypes","FuelTypes","GroupTypeCustom","TableTypes","Customers","Carriers","FreightTableStatus","item","patchValue","undefined","length","Customer","Carrier","ViewOrEdit","selProductTypes","value","editingcompanyId","cus","car","getFuelTypeList","map","s","join","setValue","filter","r","isDisabled","productTypeIds","fuelGroupType","getTableTypes","tblTypeList","x","forEach","res","Name","replace","getSupplierCustomers","getCarriers","formGroup","Object","values","control","markAsTouched","markFormGroupTouched","requiredControls","notRequiredControls","ctrl","setValidators","updateValueAndValidity","clearValidators","AddRemoveValidations","Standard","Custom","modeChangeCustomOrStandardValidators","valid","Save","emit","fuelGroupMapping","trim","TableType","AssignedCompanyId","pIds","push","ProductTypeIds","fIds","FuelTypeIds","Published","StatusCode","message","msgsuccess","msgerror","StatusMessage","onSubmit","FuelGroupTypeChange","onCancel","selector","templateUrl","styleUrls","encapsulation","None","routes","path","component","CreateFuelGroupModule","forChild","declarations","imports","FuelGroupMappingComponent","carrierService","title","fuelGroupGridList","dtOptions","dtTrigger","IsValidForm","popoverTitle","popoverMessage","cancelClicked","confirmClicked","confirmButtonText","cancelButtonText","IsShowBulkUploadPopup","SelectedFiles","MaxFileUploadSize","GroupId","exportInvitedColumns","columns","dom","aaSorting","orderable","buttons","extend","exportOptions","orientation","pagingType","pageLength","lengthMenu","getFuelGroupMapping","$","DataTable","clear","destroy","IsLoading","getFuelGroupSummary","datatableRerender","datatableElement","dtInstance","then","otherArray","current","other","groupId","mode","createFuelGroupComponent","getFuelGroupDetailsUrl","fuelGroupEdit","getFuelTypesUrl","getTableTypesUrl","productTypes","fuelTypes","customers","getSupplierCustomersUrl","carriers","Tabletypes","t","IdInComparer","ps","fueltyps","notEditableForm","reset","$event","openSidePannel","nativeElement","click","archiveFuelGroup","toString","files","file","isValid","extension","getExtension","toLowerCase","size","timestamp","Date","getTime","downloadTerminalItemCodeMappingTemplate","blob","a","document","createElement","objectUrl","URL","createObjectURL","href","download","revokeObjectURL","fileName","basename","split","pop","pos","lastIndexOf","slice","addFuelGroup","getOutput","FuelGroupGridViewModel","FuelGroupViewModel"],"mappings":"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","file":"create-fuel-group-create-fuel-group-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","<div>\r\n    <form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-standard\" [name]=\"'FuelGroupType'\" [value]=\"1\"\r\n                               (change)=\"FuelGroupTypeChange()\" [attr.disabled]=\"!IsEditable || ViewOrEdit=='EDIT'?false:null\">\r\n                        <label class=\"form-check-label\" for=\"occurance-standard\">Standard</label>\r\n                    </div>\r\n                    <div class=\"form-check form-check-inline\">\r\n                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-custom\" [name]=\"'FuelGroupType'\" [value]=\"2\"\r\n                               (change)=\"FuelGroupTypeChange()\" [attr.disabled]=\"!IsEditable || ViewOrEdit=='EDIT'?false:null\">\r\n                        <label class=\"form-check-label\" for=\"occurance-custom\">Custom</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <label for=\"groupName\">Group Name</label>\r\n                <span class=\"color-maroon\">*</span>\r\n                <input id=\"groupName\" type=\"text\" [readonly]=\"ViewOrEdit=='EDIT' || ViewOrEdit=='VIEW'?true:null\" formControlName=\"GroupName\" class=\"form-control\" />\r\n                <div *ngIf=\"rcForm.get('GroupName').invalid && rcForm.get('GroupName').touched\" class=\"color-maroon\">\r\n                    <div *ngIf=\"rcForm.get('GroupName').errors.required\">\r\n                        Required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" formGroupName=\"GroupTypeCustom\" *ngIf=\"rcForm.get('FuelGroupType').value==2\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <label for=\"TableTypes\">Custom Fuel Group for</label>\r\n                <span class=\"color-maroon\">*</span>\r\n                <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                         [disabled]=\"!IsEditable\"\r\n                                         class=\"single-select\"\r\n                                         id=\"TableTypes\"\r\n                                         [placeholder]=\"'Select group for'\"\r\n                                         [settings]=\"SingleSelectSettingsById\" [data]=\"TableTypeList\"></ng-multiselect-dropdown>\r\n                <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('TableTypes').invalid && rcForm.controls.GroupTypeCustom.get('TableTypes').touched\" class=\"color-maroon\">\r\n                    <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('TableTypes').errors.required\">\r\n                        Required.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsCustomerSelected}\">\r\n                    <label for=\"Customer\">Customer</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             class=\"single-select\"\r\n                                             id=\"Customer\"\r\n                                             [placeholder]=\"'Select Customer'\"\r\n                                             [settings]=\"SingleSelectSettingsById\" [data]=\"CustomerList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"IsCustomerSelected && rcForm.controls.GroupTypeCustom.get('Customers').invalid && rcForm.controls.GroupTypeCustom.get('Customers').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('Customers').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsCarrierSelected}\">\r\n                    <label for=\"Carrier\">Carrier</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             class=\"single-select\"\r\n                                             id=\"Carrier\"\r\n                                             [placeholder]=\"'Select Carrier'\"\r\n                                             [settings]=\"SingleSelectSettingsById\" [data]=\"CarrierList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"IsCarrierSelected && rcForm.controls.GroupTypeCustom.get('Carriers').invalid && rcForm.controls.GroupTypeCustom.get('Carriers').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeCustom.get('Carriers').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" formGroupName=\"GroupTypeStandard\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div class=\"\">\r\n                    <label for=\"ProductTypes\">Product Types</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"ProductTypes\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             id=\"ProductTypes\"\r\n                                             [placeholder]=\"'Select Product Types(s)'\"\r\n                                             [settings]=\"MultiSelectSettingsById\" [data]=\"ProductTypeList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('ProductTypes').invalid && rcForm.controls.GroupTypeStandard.get('ProductTypes').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('ProductTypes').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsProductTypeSelected}\">\r\n                    <label for=\"FuelTypes\">Fuel Types</label>\r\n                    <span class=\"color-maroon\">*</span>\r\n                    <ng-multiselect-dropdown formControlName=\"FuelTypes\"\r\n                                             [disabled]=\"!IsEditable\"\r\n                                             id=\"FuelTypes\"\r\n                                             [placeholder]=\"'Select Fuel Type(s)'\"\r\n                                             [settings]=\"MultiSelectSettingsById\" [data]=\"FuelTypeList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('FuelTypes').invalid && rcForm.controls.GroupTypeStandard.get('FuelTypes').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.controls.GroupTypeStandard.get('FuelTypes').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-sm-12 text-right\">\r\n                <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n                <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"!IsEditable\">Submit</button>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropdownCustomItem, DropdownItem } from 'src/app/statelist.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service'\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { ExternalMappingsService } from '../self-service-alias/service/externalmappings.service';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { pairwise, startWith } from 'rxjs/operators';\nimport { FreightTableStatus, FuelGroupType, TableType } from 'src/app/app.enum';\nimport { FuelGroupViewModel } from '../self-service-alias/models/FuelGroupGridViewModel';\n\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n    selector: 'app-create-fuel-group',\n    templateUrl: './create-fuel-group.component.html',\n    styleUrls: ['./create-fuel-group.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CreateFuelGroupComponent implements OnInit {\n    @Output() result = new EventEmitter();\n    public isLoadingSubject: BehaviorSubject<any>;\n    public nativeServiceCall: boolean = true;\n\n    ProductTypeList: DropdownItem[] = [];\n    FuelTypeList: DropdownCustomItem[] = [];\n\n    TableTypeList: DropdownItem[] = [];\n    CustomerList: DropdownItem[] = [];\n    CarrierList: DropdownItem[] = [];\n\n    public IsCustomSelected = false;\n    public IsCustomerSelected = false;\n    public IsCarrierSelected = false;\n    public ViewOrEdit: any;\n\n    public fuelGroupMapping: FuelGroupViewModel;\n    public IsEditable: boolean = true;\n    public IsProductTypeSelected: boolean = false;\n    \n    public rcForm: FormGroup;\n   \n   \n    public createFuelGroupUrl = '/FuelGroup/CreateFuelGroup';\n    public updateFuelGroupUrl = '/FuelGroup/UpdateFuelGroup';\n    \n\n    public SingleSelectSettingsById = {};\n    public MultiSelectSettingsById: IDropdownSettings;\n\n    constructor(private httpService: HttpClient, private _fb: FormBuilder,\n        private fuelSurchargeService: FuelSurchargeService,\n        private RegionService: RegionService,\n        private externalMappingsService: ExternalMappingsService    ) { }\n  \n    ngOnInit() {\n        this.isLoadingSubject = new BehaviorSubject(false);\n        this.SingleSelectSettingsById = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            enableCheckAll: false,\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n        this.MultiSelectSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 5,\n            allowSearchFilter: true\n        };\n\n        \n        this.init();\n\n        merge(\n            this.rcForm.controls['GroupTypeCustom'].get('TableTypes').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onTableTypeSelect(prev, next);\n            })\n\n        merge(\n            this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onProductTypeChange(prev, next);\n            });\n\n        merge(\n            this.rcForm.controls['GroupTypeCustom'].get('Customers').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onCustomerSelect(prev, next);\n            })\n\n\n        merge(\n            this.rcForm.controls['GroupTypeCustom'].get('Carriers').valueChanges\n        )\n            .pipe(startWith(null), pairwise())\n            .subscribe(([prev, next]: [any, any]) => {\n                if (JSON.stringify(prev) != JSON.stringify(next)) this.onCarrierSelect(prev, next);\n            })\n\n\n\n\n        this.getProductTypeList();\n        this.getTableTypeList();\n        this.getCustomerList();\n        this.getCarrierList();\n    }\n\n    init() {\n        this.rcForm = this._fb.group({\n            Id: new FormControl(''),\n            GroupName: new FormControl('', [Validators.required]),\n            FuelGroupType: new FormControl(1),\n            GroupTypeStandard: new FormGroup({\n                ProductTypes: new FormControl(''), //select top 1 * from MstProductTypes --product type\n                FuelTypes: new FormControl('')  //select top 1 * from MstTfxProducts --  fuel type\n            }),\n            GroupTypeCustom: new FormGroup({\n                TableTypes: new FormControl(''), // customer or carrier selection controls\n                Customers: new FormControl(''),\n                Carriers: new FormControl('')\n            }),\n            FreightTableStatus: ['']\n        });\n    }\n\n    public onCustomerSelect(prev: any, item: any) {\n        \n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        this.isLoadingSubject.next(false);\n    }\n\n    public onCarrierSelect(prev: any, item: any) {\n       \n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        this.isLoadingSubject.next(false);\n    }\n\n    private onTableTypeSelect(prev: any, item: any) {\n       \n        this.IsCarrierSelected = false;\n        this.IsCustomerSelected = false;\n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeCustom'].get('Customers').patchValue([]);\n        this.CustomerList = [];\n        this.rcForm.controls['GroupTypeCustom'].get('Carriers').patchValue([]);\n        this.CarrierList = [];\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        if (item != null && item != \"\" && item != undefined && item.length==1) {\n            if (item[0].Id == TableType.Customer) {\n                this.IsCustomerSelected = true;\n                this.getCustomerList();\n            }\n            else if (item[0].Id == TableType.Carrier) {\n                this.IsCarrierSelected = true;\n                this.getCarrierList();\n            }\n        }\n        this.isLoadingSubject.next(false);\n    }\n\n    public FuelGroupTypeChange(): void {\n        this.isLoadingSubject.next(true);\n        this.IsProductTypeSelected = false;\n        this.rcForm.controls['GroupTypeCustom'].get('TableTypes').patchValue([]);\n        this.rcForm.controls['GroupTypeCustom'].get('Customers').patchValue([]);\n        this.CustomerList = [];\n        this.rcForm.controls['GroupTypeCustom'].get('Carriers').patchValue([]);\n        this.CarrierList = [];\n        this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').patchValue([]);\n        //this.ProductTypeList = [];\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        this.FuelTypeList = [];\n        this.rcForm.controls['GroupName'].patchValue(null);\n        this.rcForm.controls['Id'].patchValue(null);\n        this.ViewOrEdit = \"Create\";\n        this.isLoadingSubject.next(false);\n    }\n\n    public onProductTypeChange(prev: any, next: any) {\n        if (!this.nativeServiceCall) {\n            this.IsProductTypeSelected = true;\n            return;\n        }\n        this.isLoadingSubject.next(true);\n\n        let selProductTypes = this.rcForm.controls['GroupTypeStandard'].get('ProductTypes').value as DropdownItem[];\n        if (selProductTypes != null && selProductTypes != undefined && selProductTypes.length > 0) {\n            this.IsProductTypeSelected = true;\n            this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n            let editingcompanyId = -1;\n            let cus = this.rcForm.controls.GroupTypeCustom.get('Customers').value;\n            let car = this.rcForm.controls.GroupTypeCustom.get('Carriers').value;\n            if (cus != null && cus.length > 0) {\n                editingcompanyId = cus[0].Id;\n            } else if (car != null && car.length > 0) {\n                editingcompanyId = car[0].Id;\n            }\n\n            this.externalMappingsService.getFuelTypeList(selProductTypes.map(s => s.Id).join(','), this.rcForm.controls.FuelGroupType.value, +this.rcForm.controls.Id.value, editingcompanyId).subscribe(async (data) => {\n                this.FuelTypeList = await (data);\n                this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').setValue(this.FuelTypeList.filter(r => !r.isDisabled))\n                this.isLoadingSubject.next(false);\n            });\n        } else {\n            this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n            this.FuelTypeList = [];\n            this.IsProductTypeSelected = false;\n        }\n        this.isLoadingSubject.next(false);\n    }\n\n    getProductTypeList() {\n        this.isLoadingSubject.next(true);\n        this.externalMappingsService.getProductTypeList().subscribe(async (data) => {\n        this.ProductTypeList = await (data);\n            this.isLoadingSubject.next(false);\n    });\n    }\n\n    getFuelTypeList(productTypeIds: string, fuelGroupType:string) {\n        this.isLoadingSubject.next(true);\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n        let editingcompanyId = -1;\n        let cus = this.rcForm.controls.GroupTypeCustom.get('Customers').value;\n        let car = this.rcForm.controls.GroupTypeCustom.get('Carriers').value;\n        if (cus != null && cus.length > 0) {\n            editingcompanyId = cus[0].Id;\n        } else if (car != null && car.length > 0) {\n            editingcompanyId = car[0].Id;\n        }\n        this.externalMappingsService.getFuelTypeList(productTypeIds, fuelGroupType, +this.rcForm.controls.Id.value, editingcompanyId).subscribe(async (data) => {\n            this.FuelTypeList = await (data);\n            this.rcForm.controls['GroupTypeStandard'].get('FuelTypes').setValue(this.FuelTypeList.filter(r => !r.isDisabled))\n            this.isLoadingSubject.next(false);\n        });\n    }\n\n   \n    getTableTypeList() {\n        if (!this.nativeServiceCall) {return;}\n        this.isLoadingSubject.next(true);\n        this.fuelSurchargeService.getTableTypes().subscribe(async (data) => {\n            let tblTypeList: DropdownItem[];\n            tblTypeList = await (data);\n            this.TableTypeList = tblTypeList.filter(x => x.Id != 1); // no master included.\n            this.TableTypeList.forEach(res => res.Name = res.Name.replace(\"Specific\", \"\"));\n            //this.rcForm.controls.GroupTypeCustom.get('TableTypes').setValue(this.TableTypeList.slice(0, 1));\n            this.isLoadingSubject.next(false);\n        });\n\n    }\n\n    getCustomerList() {\n        if (!this.nativeServiceCall) { return; }\n        this.isLoadingSubject.next(true);\n        this.fuelSurchargeService.getSupplierCustomers().subscribe(async (data) => {\n            this.CustomerList = await (data);\n            this.isLoadingSubject.next(false);\n        });\n    }\n\n    getCarrierList() {\n        if (!this.nativeServiceCall) { return; }\n        this.isLoadingSubject.next(true);\n        this.RegionService.getCarriers().subscribe(async (data) => {\n            this.CarrierList = await (data);\n            this.isLoadingSubject.next(false);\n        });\n    }\n\n\n    private markFormGroupTouched(formGroup: FormGroup) {\n        (<any>Object).values(formGroup.controls).forEach(control => {\n\n            control.markAsTouched();\n            if (control.controls) {\n                this.markFormGroupTouched(control);\n            }\n        });\n    }\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\n\n            requiredControls.forEach(ctrl => {\n                ctrl.setValidators([Validators.required]);\n                ctrl.updateValueAndValidity();\n            });\n        }\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\n\n            notRequiredControls.forEach(ctrl => {\n                ctrl.clearValidators();\n                ctrl.updateValueAndValidity();\n            });\n        }\n\n    }\n\n    private modeChangeCustomOrStandardValidators(fuelGroupType: number) {\n\n        this.AddRemoveValidations([this.rcForm.controls['GroupTypeStandard'].get('ProductTypes'),\n        this.rcForm.controls['GroupTypeStandard'].get('FuelTypes')],null);\n        if (fuelGroupType == FuelGroupType.Standard) {\n            this.AddRemoveValidations(null,\n                [this.rcForm.controls['GroupTypeCustom'].get('Customers'),\n                this.rcForm.controls['GroupTypeCustom'].get('Carriers'),\n                this.rcForm.controls['GroupTypeCustom'].get('TableTypes')]);\n        }\n        if (fuelGroupType == FuelGroupType.Custom) {\n            this.AddRemoveValidations([this.rcForm.controls['GroupTypeCustom'].get('TableTypes')], null);\n            if (this.rcForm.controls['GroupTypeCustom'].get('TableTypes').value == null || this.rcForm.controls['GroupTypeCustom'].get('TableTypes').value == undefined) return;\n\n            if (this.rcForm.controls['GroupTypeCustom'].get('TableTypes').value[0].Id == TableType.Customer) {\n                this.AddRemoveValidations([this.rcForm.controls['GroupTypeCustom'].get('Customers')], [this.rcForm.controls['GroupTypeCustom'].get('Carriers')]);\n            }\n            else {\n                this.AddRemoveValidations([this.rcForm.controls['GroupTypeCustom'].get('Carriers')], [this.rcForm.controls['GroupTypeCustom'].get('Customers')]);\n            }\n        }\n\n    }\n\n   public onSubmit() {\n       this.modeChangeCustomOrStandardValidators(this.rcForm.controls.FuelGroupType.value);\n       this.markFormGroupTouched(this.rcForm);\n        if (this.rcForm.valid)\n        this.Save();\n    }\n\n   public onCancel() {\n       this.result.emit(true);\n    }\n\n    private Save() {\n       \n        this.isLoadingSubject.next(true);\n        this.fuelGroupMapping= new FuelGroupViewModel();\n        this.fuelGroupMapping.Id = this.rcForm.controls.Id.value;\n        this.fuelGroupMapping.GroupName = this.rcForm.controls.GroupName.value.trim();\n        this.fuelGroupMapping.FuelGroupType = this.rcForm.controls.FuelGroupType.value;\n        \n        if (this.fuelGroupMapping.FuelGroupType == FuelGroupType.Custom) {\n            this.fuelGroupMapping.TableType = this.rcForm.controls.GroupTypeCustom.get('TableTypes').value[0].Id;\n            if (this.fuelGroupMapping.TableType==TableType.Customer) {\n                this.fuelGroupMapping.AssignedCompanyId = this.rcForm.controls.GroupTypeCustom.get('Customers').value[0].Id;\n            }else if (this.fuelGroupMapping.TableType == TableType.Carrier) {\n                this.fuelGroupMapping.AssignedCompanyId = this.rcForm.controls.GroupTypeCustom.get('Carriers').value[0].Id;\n            }\n        }\n\n        var pIds = [];\n        this.rcForm.controls.GroupTypeStandard.get('ProductTypes').value.forEach(res => { pIds.push(res.Id) });\n        this.fuelGroupMapping.ProductTypeIds = pIds;\n\n        var fIds = [];\n        this.rcForm.controls.GroupTypeStandard.get('FuelTypes').value.forEach(res => { fIds.push(res.Id) });\n        this.fuelGroupMapping.FuelTypeIds = fIds;\n\n        this.fuelGroupMapping.FreightTableStatus = FreightTableStatus.Published;\n\n        this.httpService.post(this.rcForm.controls.Id.value != null ? this.updateFuelGroupUrl:this.createFuelGroupUrl, this.fuelGroupMapping, httpOptions).pipe().subscribe((res:any) => {\n            if (res.StatusCode == 0) {\n                this.result.emit(true);\n                let message = \"\";\n                if (this.fuelGroupMapping.Id != null) {\n                    message = \"updated\";\n                }\n                else if (this.fuelGroupMapping.FreightTableStatus == FreightTableStatus.Published) {\n                    message = \"created\"\n                } \n                Declarations.msgsuccess(this.fuelGroupMapping.GroupName + \" fuel group \" + message + \" successfully.\", undefined, undefined);\n\n            } else\n                Declarations.msgerror(res == null || res.StatusMessage == null ? 'Failed' : res.StatusMessage, undefined, undefined);\n            this.isLoadingSubject.next(false);\n        })\n    }\n\n   \n \n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateFuelGroupComponent } from './create-fuel-group.component';\nimport { FuelGroupMappingComponent } from './fuel-group-mapping/fuel-group-mapping.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { SharedModule } from '../modules/shared.module';\n\n\nconst routes: Routes = [\n  {\n      path: \"\",\n      component: FuelGroupMappingComponent\n  },\n];\n@NgModule({\n  declarations: [\n    CreateFuelGroupComponent,\n    FuelGroupMappingComponent   \n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgMultiSelectDropDownModule,\n    SharedModule,\n    DirectiveModule,\n    DataTablesModule,\n    RouterModule.forChild(routes),\n    \n  ]\n})\nexport class CreateFuelGroupModule { }\n","<div class=\"row\">\r\n    <!-- <div class=\"col-sm-12\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-right pa0\" data-target=\"raisedr\"\r\n            onclick=\"slidePanel('#terminal_i_code_map','40%')\" (click)=\"addTerminalItemCode()\"><i\r\n                class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Terminal Item Code</button>\r\n    </div> -->\r\n    <div class=\"col-sm-12\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-left pa0 mb-2\" data-target=\"raisedr\"\r\n                onclick=\"slidePanel('#Fuel_Group_Id','45%')\" (click)=\"addFuelGroup()\">\r\n            <i class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Fuel Group\r\n        </button>\r\n    </div>\r\n    <!--<div class=\"col-sm-6\">\r\n        <button id=\"showBulkUploadPopupBtn\" type=\"button\" class=\"btn btn-primary float-right mb5 valid\"\r\n                (click)=\"showBulkUploadPopup()\" data-toggle=\"modal\" data-target=\"#bulkUploadTerminalModalPopup\">\r\n            Bulk\r\n            Upload\r\n        </button>\r\n    </div>-->\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-fuel-group-code\" class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"fgn\">Fuel Group</th>\r\n                                    <th data-key=\"fgt\">Group Type</th>\r\n                                    <th data-key=\"fgty\">Group for</th>\r\n                                    <th data-key=\"fgcn\">Customer Name</th>\r\n                                    <th data-key=\"fgcn\">Carrier Name</th>\r\n                                    <th data-key=\"fgpt\">Product Type(s)</th>\r\n                                    <th data-key=\"fgsn\">Status</th>\r\n                                    <th data-key=\"Action\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let item of fuelGroupGridList\">\r\n                                    <td>{{item.GroupName}}</td>\r\n                                    <td>{{item.FuelGroupType}}</td>\r\n                                    <td>{{item.TableType!=0?item.TableType:\"-\"}}</td>\r\n                                    <td>{{ item.Customer}}</td>\r\n                                    <td>{{ item.Carrier}}</td>\r\n                                    <td>{{item.ProductType}}</td>\r\n                                    <td>{{item.StatusName}}</td>\r\n                                    <td class=\"text-center text-nowrap\">\r\n                                       <a *ngIf=\"item.StatusName!='Archived'\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                           [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                           (cancel)=\"cancelClicked = true\" (confirm)=\"archiveFuelGroup(item)\">\r\n                                            <i class=\"fa fa-file-archive \" placement=\"bottom\" ngbTooltip=\"Archive\"></i>\r\n                                        </a>\r\n\r\n                                        <a *ngIf=\"item.StatusName!='Archived'\" class=\"btn btn-link fs16 ml-0\" onclick=\"slidePanel('#Fuel_Group_Id','40%')\"\r\n                                           (click)=\"editFuelGroupMapping(item.Id,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\">\r\n                                            <i class=\"fas fa-edit\"></i>\r\n                                        </a>\r\n\r\n                                        <a class=\"btn btn-link fs16 ml-0\" onclick=\"slidePanel('#Fuel_Group_Id','40%')\"\r\n                                           (click)=\"editFuelGroupMapping(item.Id,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">\r\n                                            <i class=\"fas fa-eye\"></i>\r\n                                        </a>  \r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<div class=\"side-panel\" id=\"Fuel_Group_Id\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt10 pb0\">\r\n            <a class=\"ml20 close-panel\" onclick=\"closeSlidePanel();\" ><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">\r\n                {{title|titlecase}} Fuel Group \r\n            </h3>\r\n        </div>\r\n        <div class=\"pt10 pb10 pl20 pr20\">\r\n           <app-create-fuel-group (result)=\"getOutput($event)\">\r\n            </app-create-fuel-group>\r\n           \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject, from, forkJoin } from 'rxjs';\nimport { first, map, mergeMap } from 'rxjs/operators';\nimport { Declarations } from 'src/app/declarations.module';\nimport { HttpClient } from '@angular/common/http';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { DropdownCustomItem, DropdownItem } from '../../statelist.service';\nimport { FuelSurchargeService } from '../../fuelsurcharge/services/fuelsurcharge.service';\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { FuelGroupType, TableType } from 'src/app/app.enum';\nimport { ExternalMappingsService } from 'src/app/self-service-alias/service/externalmappings.service';\nimport { CreateFuelGroupComponent } from '../create-fuel-group.component';\nimport { FuelGroupGridViewModel, FuelGroupViewModel } from 'src/app/self-service-alias/models/FuelGroupGridViewModel';\n\n@Component({\n    selector: 'app-fuel-group-mapping',\n    templateUrl: './fuel-group-mapping.component.html',\n    styleUrls: ['./fuel-group-mapping.component.css']\n})\nexport class FuelGroupMappingComponent implements OnInit, AfterViewInit {\n    \n    title = 'Create';\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @ViewChild('openSidePannel') public openSidePannel: ElementRef;\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\n    @ViewChild(CreateFuelGroupComponent) public createFuelGroupComponent: CreateFuelGroupComponent;\n    fuelGroupGridList: FuelGroupGridViewModel[] = [];\n    fuelGroupEdit: FuelGroupViewModel;\n\n    public dtOptions: any = {};\n    public dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean;\n    public IsValidForm: boolean = true;\n    public popoverTitle: string = 'Archive Confirmation';\n    public popoverMessage: string = 'Do you want to archive?';\n    public cancelClicked: boolean = false;\n    public confirmClicked: boolean = false;\n    public confirmButtonText: string = 'Yes';\n    public cancelButtonText: string = 'No';\n    public IsShowBulkUploadPopup: boolean = false;\n    public SelectedFiles: File[] = [];\n    public MaxFileUploadSize: number = 1048576; // 1MB\n\n    public GroupId: number = -1;\n\n    constructor(private httpService: HttpClient, private carrierService: CarrierService,\n        private externalMappingsService: ExternalMappingsService,\n        private fuelSurchargeService: FuelSurchargeService,\n        private RegionService: RegionService    ) { }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            aaSorting: [],\n            orderable: false,\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Fuel Group Mapping', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Fuel Group Mapping', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n\n        this.getFuelGroupMapping();\n\n    }\n\n\n    filterGrid() {\n        $(\"#fuel-group-datatable\").DataTable().clear().destroy();\n    }\n    ngAfterViewInit(): void {\n        this.dtTrigger.next();\n    }\n\n    private getFuelGroupMapping() :void {\n        this.IsLoading = true;\n        this.externalMappingsService.getFuelGroupSummary().subscribe(async (data) => {\n            this.IsLoading = false;\n            this.fuelGroupGridList = await (data);\n            this.datatableRerender();\n        });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                dtInstance.destroy();\n                this.dtTrigger.next();\n            });\n        }\n    }\n\n    IdInComparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                //console.log(other + \":\" + current.Id);\n                return other == current.Id\n            }).length == 1;\n        }\n    }\n\n    \n   \n    public editFuelGroupMapping(groupId: number,mode: string): void {\n        this.title = mode;\n        this.createFuelGroupComponent.isLoadingSubject.next(false);\n        this.createFuelGroupComponent.nativeServiceCall = false;\n        this.httpService.get(this.externalMappingsService.getFuelGroupDetailsUrl + groupId).pipe(\n            map(item => {\n                this.IsLoading = true;\n                return item as FuelGroupViewModel;\n            }),\n            mergeMap(item => {\n                \n                this.fuelGroupEdit = item;\n                \n                var getFuelTypesUrl = \"\";\n                if (item.FuelGroupType == FuelGroupType.Standard) {\n                    getFuelTypesUrl = this.externalMappingsService.getFuelTypesUrl + this.fuelGroupEdit.ProductTypeIds + \"&fuelGroupType=\" + this.fuelGroupEdit.FuelGroupType + \"&editingGroupId=-1\" + \"&editingcompanyId=-1\";\n                } else {\n                    getFuelTypesUrl = this.externalMappingsService.getFuelTypesUrl + this.fuelGroupEdit.ProductTypeIds + \"&fuelGroupType=\" + this.fuelGroupEdit.FuelGroupType + \"&editingGroupId=\" + this.fuelGroupEdit.Id + \"&editingcompanyId=\" + this.fuelGroupEdit.AssignedCompanyId;\n                }\n                var getTableTypesUrl = \"/FuelSurcharge/GetTableTypes\";\n                const productTypes = this.httpService.get(this.externalMappingsService.getProductTypeUrl);\n                const fuelTypes = this.httpService.get(getFuelTypesUrl);\n                const customers = this.httpService.get(this.fuelSurchargeService.getSupplierCustomersUrl);\n                const carriers = this.httpService.get(this.RegionService.getCarriersUrl);\n                const Tabletypes = this.httpService.get(getTableTypesUrl);\n                return forkJoin([fuelTypes, customers, carriers, productTypes, Tabletypes]);\n            })).subscribe(result => {\n                this.IsLoading = false;\n                //this.createFuelGroupComponent.rcForm.reset();\n                this.createFuelGroupComponent.isLoadingSubject.next(true);\n                this.createFuelGroupComponent.rcForm.controls.Id.setValue(this.fuelGroupEdit.Id);\n                this.createFuelGroupComponent.ViewOrEdit = mode;\n                this.createFuelGroupComponent.rcForm.controls.GroupName.setValue(this.fuelGroupEdit.GroupName);\n\n                if (this.fuelGroupEdit.FuelGroupType == FuelGroupType.Custom) {\n\n                    let tblTypeList = result[4] as DropdownItem[];\n                    tblTypeList = tblTypeList.filter(x => x.Id != 1); // no master included.\n                    tblTypeList.forEach(res => res.Name = res.Name.replace(\"Specific\", \"\"));\n                    this.createFuelGroupComponent.TableTypeList = tblTypeList;\n\n                    this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('TableTypes').setValue(this.createFuelGroupComponent.TableTypeList.filter(t => t.Id == this.fuelGroupEdit.TableType));\n                    //this.createFuelGroupComponent.onTableTypeSelect({ Id: this.fuelGroupEdit.TableType });\n\n                    this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Customers').patchValue([]);\n                    this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Carriers').patchValue([]);\n                    this.createFuelGroupComponent.IsCustomerSelected = false;\n                    this.createFuelGroupComponent.IsCarrierSelected = false;\n\n                    this.createFuelGroupComponent.isLoadingSubject.next(true);\n\n                    if (this.fuelGroupEdit.TableType != null && this.fuelGroupEdit.TableType == TableType.Customer) {\n                        this.createFuelGroupComponent.IsCustomerSelected = true;\n                        this.createFuelGroupComponent.CustomerList = result[1] as DropdownItem[];\n                        this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Customers').setValue(this.createFuelGroupComponent.CustomerList.filter(x => x.Id == this.fuelGroupEdit.AssignedCompanyId));\n\n                    }\n                    else if (this.fuelGroupEdit.TableType != null && this.fuelGroupEdit.TableType == TableType.Carrier) {\n                        this.createFuelGroupComponent.IsCarrierSelected = true;\n                        this.createFuelGroupComponent.CarrierList = result[2] as DropdownItem[];\n                        this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Carriers').setValue(this.createFuelGroupComponent.CarrierList.filter(x => x.Id == this.fuelGroupEdit.AssignedCompanyId));\n\n                    }\n                }\n\n                this.createFuelGroupComponent.rcForm.controls.FuelGroupType.setValue(this.fuelGroupEdit.FuelGroupType);\n                this.createFuelGroupComponent.ProductTypeList = result[3] as DropdownItem[];\n                this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('ProductTypes').setValue(this.createFuelGroupComponent.ProductTypeList.filter(this.IdInComparer(this.fuelGroupEdit.ProductTypeIds)));\n                this.createFuelGroupComponent.IsProductTypeSelected = true;\n                this.IsLoading = true;\n                var ps = result[0] as DropdownCustomItem[];\n                if (this.fuelGroupEdit.FuelGroupType == FuelGroupType.Custom) {\n                    ps.filter(this.IdInComparer(this.fuelGroupEdit.FuelTypeIds));\n                } else {\n                    ps.filter(this.IdInComparer(this.fuelGroupEdit.FuelTypeIds)).forEach(res => res.isDisabled = false); // not all make isDisable false.\n                }\n                this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('FuelTypes').patchValue([]);\n                this.createFuelGroupComponent.FuelTypeList = ps;\n                let fueltyps = this.createFuelGroupComponent.FuelTypeList.filter(this.IdInComparer(this.fuelGroupEdit.FuelTypeIds));\n                this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('FuelTypes').setValue(fueltyps);\n                this.createFuelGroupComponent.isLoadingSubject.next(true);\n\n                \n                this.notEditableForm(mode);\n                this.IsLoading = false;\n                this.createFuelGroupComponent.isLoadingSubject.next(false);\n                this.createFuelGroupComponent.nativeServiceCall = true;\n            });\n    }\n    private notEditableForm(mode: string) {\n        this.createFuelGroupComponent.IsEditable = true;\n        if (mode == \"VIEW\") {\n            this.createFuelGroupComponent.IsEditable = false;\n        }\n        //this.createFuelGroupComponent.rcForm.controls.GroupName.disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls.FuelGroupType.disable({onlySelf: false });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('ProductTypes').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeStandard'].get('FuelTypes').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('TableTypes').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Customers').disable({ onlySelf: isEdit });\n        //this.createFuelGroupComponent.rcForm.controls['GroupTypeCustom'].get('Carriers').disable({ onlySelf: isEdit });\n        //console.log(mode  + \" : \" + isEdit);\n    }\n   \n    public addFuelGroup() {\n        this.title = 'Create';\n        this.createFuelGroupComponent.rcForm.reset();\n        this.createFuelGroupComponent.IsEditable = true;\n        this.createFuelGroupComponent.IsCarrierSelected = false;\n        this.createFuelGroupComponent.IsCustomerSelected = false;\n        this.createFuelGroupComponent.rcForm.controls['Id'].patchValue(null);\n        this.createFuelGroupComponent.ViewOrEdit = \"Create\";\n        this.createFuelGroupComponent.rcForm.controls.FuelGroupType.setValue(FuelGroupType.Standard);\n        this.createFuelGroupComponent.isLoadingSubject.next(false);\n    }\n\n    getOutput($event) {\n        if ($event) {\n            this.openSidePannel.nativeElement.click();\n            this.getFuelGroupMapping();\n        }\n    }\n\n    archiveFuelGroup(item: FuelGroupGridViewModel) {\n        this.IsLoading = true;\n        \n        this.externalMappingsService.archiveFuelGroup(item.Id.toString()).subscribe(async (data) => {\n            var result = await (data);\n            if (result.StatusCode == 0) {\n                Declarations.msgsuccess(item.GroupName +  \" fuel group archived successfully.\", undefined, undefined);\n                this.getFuelGroupMapping();\n            } else\n                Declarations.msgerror(result.StatusMessage, undefined, undefined);\n            this.IsLoading = false;\n        });\n    }\n\n\n    selectFiles(files: File[]) {\n        if (files != null && files != undefined && files.length > 0)\n            this.SelectedFiles = files;\n    }\n\n \n\n    isValidFile(file: File) {\n        var isValid = true;\n        var extension = this.getExtension(file.name);\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        if (file.size > this.MaxFileUploadSize) {\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        return isValid;\n    }\n\n    downloadCsvTemplate() {\n        this.IsLoading = true;\n        var timestamp = new Date().getTime();\n        this.carrierService.downloadTerminalItemCodeMappingTemplate(timestamp).subscribe(blob => {\n            const a = document.createElement('a')\n            const objectUrl = URL.createObjectURL(blob)\n            a.href = objectUrl\n            a.download = 'FuelGroupMapping_Template.csv';\n            a.click();\n            URL.revokeObjectURL(objectUrl);\n\n            this.IsLoading = false;\n        });\n    }\n\n    getExtension(fileName) {\n        // extract file name from full path ...\n        var basename = fileName.split(/[\\\\/]/).pop();\n\n        // (supports `\\\\` and `/` separators)\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\n\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\n            return \"\";                             //  `.` not found (-1) or comes first (0)\n\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\n    }\n}\n","\r\nimport { FreightTableStatus, TableType } from \"src/app/app.enum\";\r\nimport { DropdownItem } from \"../../statelist.service\";\r\n\r\nexport class FuelGroupGridViewModel {\r\n    Id: number;\r\n    GroupName: string;\r\n    TableType: string;\r\n    FuelGroupType: string;    \r\n    Customer: string;\r\n    Carrier: string;\r\n    ProductType: string;\r\n    StatusName: string;\r\n}\r\n\r\nexport class FuelGroupViewModel {\r\n    Id?: number;\r\n    GroupName: string;\r\n    FuelGroupType: FuelGroupType;//GroupTypeStandard,GroupTypeCustom\r\n    TableType: TableType; // customer or carrier single selction\r\n    AssignedCompanyId?: number;\r\n    ProductTypes: DropdownItem[];\r\n    TableTypes: DropdownItem[];\r\n    Customers?: DropdownItem[];\r\n    Carriers?: DropdownItem[];\r\n    ProductTypeIds: number[];\r\n    ProductTypesToString: string;\r\n    FuelTypes: DropdownItem[];\r\n    FuelTypeIds: number[];\r\n    FuelTypesToString: string;\r\n    FreightTableStatus: FreightTableStatus; // publish or arcived\r\n    IsActive?: boolean;\r\n    AddedBy?: number;\r\n    AddedDate?: Date | string;\r\n    UpdatedBy?: number;\r\n    UpdatedDate?: Date | string;\r\n}\r\n\r\n\r\nexport enum FuelGroupType {\r\n        Standard = 1,\r\n        Custom = 2\r\n}\r\n\r\n"]}