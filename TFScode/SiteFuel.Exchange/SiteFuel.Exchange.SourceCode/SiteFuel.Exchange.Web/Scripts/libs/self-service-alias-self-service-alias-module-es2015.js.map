{"version":3,"sources":["./src/app/carrier/models/CarrierDetailsViewModel.ts","./src/app/self-service-alias/company-carrier-mapping/company-carrier-mapping.component.ts","./src/app/self-service-alias/company-carrier-mapping/company-carrier-mapping.component.html","./src/app/self-service-alias/create-terminal-item-code/create-terminal-item-code.component.ts","./src/app/self-service-alias/create-terminal-item-code/create-terminal-item-code.component.html","./src/app/self-service-alias/customer-mapping/customer-mapping.component.ts","./src/app/self-service-alias/customer-mapping/customer-mapping.component.html","./src/app/self-service-alias/edit-carrier-mapping/edit-carrier-mapping.component.ts","./src/app/self-service-alias/edit-customer/edit-customer.component.ts","./src/app/self-service-alias/edit-customer/edit-customer.component.html","./src/app/self-service-alias/external-entity-mappings/external-bulk-plant-mappings/external-bulk-plant-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-bulk-plant-mappings/external-bulk-plant-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-carrier-mappings/external-carrier-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-carrier-mappings/external-carrier-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-customer-mappings/external-customer-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-customer-mappings/external-customer-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-customerlocation-mappings/external-customerlocation-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-customerlocation-mappings/external-customerlocation-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-driver-mappings/external-driver-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-driver-mappings/external-driver-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-product-mappings/external-product-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-product-mappings/external-product-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-supplier-mappings/external-supplier-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-supplier-mappings/external-supplier-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-terminal-mappings/external-terminal-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-terminal-mappings/external-terminal-mappings.component.html","./src/app/self-service-alias/external-entity-mappings/external-vehicle-mappings/external-vehicle-mappings.component.ts","./src/app/self-service-alias/external-entity-mappings/external-vehicle-mappings/external-vehicle-mappings.component.html","./src/app/self-service-alias/models/ProductMappingModel.ts","./src/app/self-service-alias/product-mapping/product-mapping.component.ts","./src/app/self-service-alias/product-mapping/product-mapping.component.html","./src/app/self-service-alias/self-service-alias.component.ts","./src/app/self-service-alias/self-service-alias.component.html","./src/app/self-service-alias/self-service-alias.module.ts","./src/app/self-service-alias/terminal-item-code-mapping/terminal-item-code-mapping.component.ts","./src/app/self-service-alias/terminal-item-code-mapping/terminal-item-code-mapping.component.html","./src/app/self-service-alias/terminal-mapping/terminal-mapping.component.ts","./src/app/self-service-alias/terminal-mapping/terminal-mapping.component.html"],"names":[],"mappings":"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","file":"self-service-alias-self-service-alias-module-es2015.js","sourcesContent":["\r\nimport { DropDownItem } from 'src/app/lfv-dashboard/LiftFileModels';\r\n\r\nexport class CarrierDetailsViewModel {\r\n    constructor() {\r\n        this.AssignedTerminalId = new DropDownItem();\r\n    }\r\n    public AssignedTerminalId: DropDownItem;\r\n    public CarrierName: string;\r\n    public AssignedCarrierId: string;\r\n    public Id: number; //mapping Id\r\n    public CountryId: number;\r\n    public AssignedTerminalIdName: string;\r\n    public TerminalCompanyAliasId: number;\r\n    \r\n}","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DropdownItem } from 'src/app/carrier-companies/service/assigncarrier.service';\r\nimport { CarrierDetailsViewModel } from 'src/app/carrier/models/CarrierDetailsViewModel';\r\nimport { TerminalMappingModel } from 'src/app/carrier/models/location';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage'\r\n\r\n@Component({\r\n    selector: 'app-company-carrier-mapping',\r\n    templateUrl: './company-carrier-mapping.component.html',\r\n    styleUrls: ['./company-carrier-mapping.component.css']\r\n})\r\nexport class CompanyCarrierMappingComponent implements OnInit {\r\n    @Input() countryId: number;\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    CarrierDataToBeSend: CarrierDetailsViewModel;\r\n    public isShowCountryDDL: boolean = false;\r\n    public CarrierDetails: CarrierDetailsViewModel[] = [];\r\n    public HeaderText: string;\r\n    public IsLoading: boolean = false;\r\n    ddlSettingsById: any = {};\r\n    //TerminalList = [];  \r\n    carrierList = [];    \r\n    //Carriermapping: CarrierDetailsViewModel = {};\r\n    SelectedCarrierList = [];\r\n    SelectedTerminalList = [];\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n\r\n    \r\n    //\r\n    public SelectedCarrierName: string;\r\n    public selectedCarrierId: number;\r\n    public AssignedTerminalIdList = [];\r\n    public carriers = [];\r\n    public AssignedCarrierId: string;\r\n    public CountryId: number;\r\n  \r\n    constructor(private carrierService: CarrierService, private dispatcherService: DispatcherService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ddlSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        \r\n        this.initializeCarrierGridInfo();\r\n       // this.getCarrierMappingsData();\r\n        this.isShowCountryDDL = false;\r\n        this.getTerminalIdsForMapping();\r\n        this.getCarriers();        \r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n        //     this.getDefaultServingCountry();\r\n        // }\r\n        // else {\r\n        if (changes.countryId && changes.countryId.currentValue) {\r\n            \r\n            this.clearForm();\r\n        }\r\n        //}\r\n    }\r\n\r\n    private getTerminalIdsForMapping() {\r\n        this.IsLoading = true;\r\n        this.AssignedTerminalIdList = [];\r\n        this.carrierService.getAssignedTerminalIdsForMapping().subscribe((response) => {\r\n           // console.log({ \"response\": response});\r\n            this.AssignedTerminalIdList = response;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n    onCarrierNameSearched(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.carriers = this.carrierList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });       \r\n    }\r\n\r\n    onCarrierSelected(event: any) {\r\n        this.SelectedCarrierName = event.Name;\r\n        this.selectedCarrierId = event.Id;\r\n        this.carriers = this.carrierList.slice();\r\n    }\r\n\r\n    private getCarriers() {\r\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\r\n            this.carrierList = data;\r\n        });\r\n    }\r\n    getCarrierMappingsData() {\r\n        this.isShowLoader = true;\r\n        this.carrierService.getCarrierData(this.countryId).subscribe(data => {\r\n            this.CarrierDetails = data;\r\n            this.isShowLoader = false;\r\n            this.dtTrigger.next();\r\n           \r\n        });\r\n    }\r\n\r\n    deleteMapping(carrier: CarrierDetailsViewModel) {\r\n        let mappingId = carrier.Id;\r\n        this.carrierService.deleteCarrierMapping(mappingId).subscribe(response => {\r\n            if (response.StatusCode == 0) {\r\n                Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n                this.getCarrierMappingsData();\r\n\r\n            }\r\n            else if (response.StatusCode == 1) {\r\n                Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n      \r\n    }\r\n\r\n    setPanelHeader(headerText: string) {\r\n        this.HeaderText = headerText;\r\n    }\r\n\r\n    cancelMapping(carrier: CarrierDetailsViewModel) {\r\n        this.getCarrierMappingsData();\r\n    }\r\n\r\n    updateMapping(carrier: CarrierDetailsViewModel, rowIndex: number) {\r\n        let assignedCarrierName = jQuery('#CarrierName_'+rowIndex).text();\r\n        let assignedCarrierId = jQuery('#CarrierID_'+rowIndex).text();\r\n        if (assignedCarrierName && assignedCarrierId) {\r\n            if ((assignedCarrierName.trim() == carrier.CarrierName)\r\n                && (assignedCarrierId.trim() == carrier.AssignedCarrierId)) {\r\n                Declarations.msgwarning(\"Update Assigned CarrierID/CarrierName \", undefined, undefined);\r\n                return;\r\n            }\r\n            let carrierInput = new CarrierDetailsViewModel();\r\n            carrierInput.AssignedTerminalId.Id = carrier.TerminalCompanyAliasId;\r\n            carrierInput.AssignedTerminalId.Name = carrier.AssignedTerminalIdName;\r\n            carrierInput.Id = carrier.Id;\r\n            carrierInput.CountryId = this.countryId;\r\n            carrierInput.CarrierName = carrier.CarrierName;\r\n            carrierInput.TerminalCompanyAliasId = carrier.TerminalCompanyAliasId;\r\n            carrierInput.AssignedCarrierId = carrier.AssignedCarrierId;\r\n            if (assignedCarrierName.trim() != carrier.CarrierName) {\r\n                carrierInput.CarrierName = assignedCarrierName.trim();\r\n            }\r\n            if (assignedCarrierId.trim() != carrier.AssignedCarrierId) {\r\n                carrierInput.AssignedCarrierId = assignedCarrierId.trim();\r\n            }\r\n            this.carrierService.SaveCarrierMapping(carrierInput).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.isShowLoader = false;\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n                    this.getCarrierMappingsData();\r\n                    //this.updatedCarrierName = null;\r\n                    //this.updatedCarrierId = null;\r\n                    //this.selectedMappingId = null;\r\n                }\r\n                else if (data.StatusCode == 1) {\r\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            Declarations.msgwarning(\"Update Assigned CarrierID/CarrierName \", undefined, undefined);\r\n            return;\r\n        }        \r\n    }\r\n\r\n    //editCarrier(carrier) {\r\n    //    this.CarrierDataToBeSend = carrier;\r\n    //}\r\n\r\n    clearForm() {\r\n        $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n        this.getTerminalIdsForMapping();\r\n        this.getCarrierMappingsData();\r\n    }\r\n\r\n    initializeCarrierGridInfo() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Carrier Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Carrier Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n   \r\n\r\n    public onSubmit() {\r\n        if (this.IsValidForm())\r\n        {\r\n            this.IsLoading = true;\r\n            this.isShowLoader = true;\r\n            let carrierMapping = new CarrierDetailsViewModel();\r\n            carrierMapping.AssignedTerminalId = this.SelectedTerminalList[0];\r\n            carrierMapping.CarrierName = this.SelectedCarrierName;\r\n            carrierMapping.AssignedCarrierId = this.AssignedCarrierId;\r\n            carrierMapping.CountryId = this.countryId;\r\n           \r\n            this.carrierService.SaveCarrierMapping(carrierMapping).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.isShowLoader = false;\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\r\n                    this.getCarrierMappingsData();\r\n                    this.SelectedTerminalList = [];\r\n                    this.SelectedCarrierName = \"\";\r\n                    this.AssignedCarrierId = \"\";\r\n                }\r\n                else if (data.StatusCode == 1) {\r\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n                }\r\n            });            \r\n        }\r\n        else\r\n        {\r\n            Declarations.msgerror(\"Terminal ID/CarrierName/CarrierID is required\", undefined, undefined);\r\n        }\r\n    }\r\n\r\n    public IsValidForm() {\r\n        let isValid = false;\r\n        let selectedTerminalId = this.IsValidValue (this.SelectedTerminalList[0]);\r\n        let selectedCarrierName = this.IsValidValue(this.SelectedCarrierName);\r\n        let assignedCarrierId = this.IsValidValue(this.AssignedCarrierId);  \r\n        if (selectedTerminalId && selectedCarrierName && assignedCarrierId)\r\n        {\r\n            isValid = true;\r\n        }\r\n        return isValid;\r\n        \r\n    }\r\n    public IsValidValue(value:any)\r\n    {\r\n        if (value) {\r\n            return true;\r\n        } else\r\n        { return false; }\r\n    }\r\n}\r\n\r\n","<div class=\"col-sm-12\">\r\n    <div class=\"row\">\r\n        <div class=\"well col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label>Terminal ID</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Terminal ID'\"\r\n                                                 [(ngModel)]=\"SelectedTerminalList\" \r\n                                                 [settings]=\"ddlSettingsById\" [data]=\"AssignedTerminalIdList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label>Carrier Name</label>\r\n                        <input type=\"text\" class=\"form-control\" (input)=\"onCarrierNameSearched($event)\" [(ngModel)]=\"SelectedCarrierName\"/>\r\n                        <ul class=\"auto-select border-dash\">\r\n                            <li *ngFor=\"let carrier of carriers;\"\r\n                                (click)=\"onCarrierSelected(carrier)\"\r\n                                [attr.selected]=\"carrier.Name== SelectedCarrierName\">\r\n                                {{carrier.Name}}\r\n                            </li>\r\n                        </ul>\r\n                        <input  type=\"hidden\" [(ngModel)]=\"selectedCarrierId\"/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label>CarrierID</label>\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"AssignedCarrierId\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"text-left form-buttons mt20\">\r\n                        <button id=\"submit-product-mapping-form\" type=\"submit\" class=\"mt4 btn btn-lg btn-default valid\"\r\n                            [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\"\r\n                            (click)=\"onSubmit()\">Assign</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-carrier-grid\" class=\"table-responsive\">\r\n                        <table id=\"carrier-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                            class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"TerminalID\">Terminal ID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"AssignedCarrierId\">CarrierID</th>\r\n                                    <th data-key=\"Action\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody >\r\n                                <tr *ngFor=\"let carrier of CarrierDetails; let i = index\">\r\n                                    <td>{{carrier.AssignedTerminalIdName}}</td>\r\n                                    <td contenteditable=\"true\" class=\"edit-td\" id=\"CarrierName_{{i}}\">\r\n                                        {{carrier.CarrierName}}\r\n                                    </td>\r\n                                    <td contenteditable=\"true\" class=\"edit-td\" id=\"CarrierID_{{i}}\">\r\n                                        {{carrier.AssignedCarrierId}}\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                                [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\"\r\n                                                [cancelText]=\"cancelButtonText\" placement=\"bottom\" (cancel)=\"cancelMapping(carrier)\"\r\n                                                (confirm)=\"updateMapping(carrier,i)\">\r\n                                            <i class=\"fs21 fas fa-save color-green\" alt=\"Update\"\r\n                                               title=\"Update\"></i>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                                [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\"\r\n                                                [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                                (confirm)=\"deleteMapping(carrier)\">\r\n                                            <i class=\"fas fa-trash-alt color-maroon\"\r\n                                               alt=\"Delete\" title=\"Delete\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<!--<div id=\"edit-carrier-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"\r\n                    (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div *ngIf=\"CarrierDataToBeSend\">\r\n            <app-edit-carrier-mapping #ViewCarrier (getCarrierData)=\"getCarrierData()\"\r\n                [CarrierDataToBeSend]=\"CarrierDataToBeSend\"></app-edit-carrier-mapping>\r\n        </div>\r\n    </div>\r\n</div>-->","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { first } from 'rxjs/operators';\nimport { DropdownItem } from 'src/app/carrier-companies/service/assigncarrier.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { HttpGenericService } from 'src/app/http-generic.service';\nimport { TerminalItemCodeMappingModel } from '../models/TerminalItemCodeMappingModel';\n@Component({\n    selector: 'app-create-terminal-item-code',\n    templateUrl: './create-terminal-item-code.component.html',\n    styleUrls: ['./create-terminal-item-code.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class CreateTerminalItemCodeComponent implements OnInit, OnChanges {\n  @Input() countryId: any;\n  @Output() result = new EventEmitter();\n  public IsLoading: boolean;\n  TerminalSupplierList: DropdownItem[] = [];\n  TerminalSupplierDescList: DropdownItem[] = [];\n  public ddlSettingsById = {};\n  terminalmappingForm: FormGroup;\n  TerminalItemCodeMappingModel: TerminalItemCodeMappingModel = {};\n  GetTerminalSupplierUrl = '/Carrier/SelfServiceAlias/GetTerminalSupplierAndDesc?CountryId=';\n  PostSaveTerminalMappingUrl = '/Carrier/SelfServiceAlias/SaveTerminalItemCodeMapping';\n  PostUpdateTerminalMappingUrl = '/Carrier/SelfServiceAlias/UpdateTerminalItemCodeMapping';\n\n  selectedTerminalSupplier = [];\n  selectedItemDesc = [];\n  constructor(private httpService: HttpGenericService, private _fb: FormBuilder) { }\nminDate=new Date();\nmaxDate=new Date();\n  ngOnInit() {\n    this.maxDate.setFullYear(this.maxDate.getFullYear()+20);\n    this.ddlSettingsById = {\n      singleSelection: true,\n      idField: 'Id',\n      textField: 'Name',\n      // selectAllText: 'Select All',\n      // unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true\n    };\n    this.init();\n  }\n\n  init() {\n    this.terminalmappingForm = this._fb.group({\n      id: [''],\n      terminalSupplierId: ['', Validators.required],\n      itemDescriptionId: ['', Validators.required],\n      itemCode: ['', Validators.required],\n      effectiveDate: ['', Validators.required],\n      expiryDate: ['']\n    });\n    this.getTerminalSupplier();\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.countryId && change.countryId.currentValue) {\n      this.countryId = change.countryId.currentValue;\n      if (change.countryId.previousValue && change.countryId.currentValue != change.countryId.previousValue) {\n        this.getTerminalSupplier();\n      }\n    }\n\n  }\n\n  getTerminalSupplier() {\n    this.IsLoading = true;\n    this.httpService.fetchAll(`${this.GetTerminalSupplierUrl}${this.countryId}`).pipe(first()).subscribe(result => {\n      this.IsLoading = false;\n      this.TerminalSupplierList = result.TerminalSupplierList;\n      this.TerminalSupplierDescList = result.TerminalDescriptionList;\n    });\n  }\n\n  onSubmit() {\n    for (let c in this.terminalmappingForm.controls) {\n      this.terminalmappingForm.controls[c].markAsTouched();\n    }\n    if (this.terminalmappingForm.valid) {\n      if (this.terminalmappingForm && this.terminalmappingForm.controls.id.value){\n        var x= this.terminalmappingForm.controls.itemCode.value.split(\",\");\n        if(x && x.length > 1){\n          Declarations.msgerror('Comma Seperated item code for update is not allowed', undefined, undefined);\n          return false;\n        }\n        this.updateTerminalMapping();\n      }\n       \n      else\n        this.addTerminalMapping();\n    }\n  }\n\n  private addTerminalMapping() {\n    this.TerminalItemCodeMappingModel = {};\n    this.IsLoading = true;\n    this.TerminalItemCodeMappingModel.TerminalSupplierId = this.terminalmappingForm.controls.terminalSupplierId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemDescriptionId = this.terminalmappingForm.controls.itemDescriptionId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemCode = this.terminalmappingForm.controls.itemCode.value;\n    this.TerminalItemCodeMappingModel.EffectiveDate = this.terminalmappingForm.controls.effectiveDate.value;\n    this.TerminalItemCodeMappingModel.ExpiryDate = this.terminalmappingForm.controls.expiryDate.value;\n\n    this.httpService.postData(this.PostSaveTerminalMappingUrl, this.TerminalItemCodeMappingModel).pipe(first()).subscribe(res => {\n      if (res.StatusCode == 0) {\n        this.result.emit(true);\n        Declarations.msgsuccess(res.StatusMessage, undefined, undefined);\n\n      } else\n        Declarations.msgerror(res.StatusMessage, undefined, undefined);\n      this.IsLoading = false;\n    })\n  }\n\n  private updateTerminalMapping() {\n    this.TerminalItemCodeMappingModel = {};\n    this.IsLoading = true;\n    this.TerminalItemCodeMappingModel.Id = this.terminalmappingForm.controls.id.value;\n    this.TerminalItemCodeMappingModel.TerminalSupplierId = this.terminalmappingForm.controls.terminalSupplierId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemDescriptionId = this.terminalmappingForm.controls.itemDescriptionId.value[0].Id;\n    this.TerminalItemCodeMappingModel.ItemCode = this.terminalmappingForm.controls.itemCode.value;\n    this.TerminalItemCodeMappingModel.EffectiveDate = this.terminalmappingForm.controls.effectiveDate.value;\n    this.TerminalItemCodeMappingModel.ExpiryDate = this.terminalmappingForm.controls.expiryDate.value;\n\n    this.httpService.postData(this.PostUpdateTerminalMappingUrl, this.TerminalItemCodeMappingModel).pipe(first()).subscribe(res => {\n      if (res.StatusCode == 0) {\n        Declarations.msgsuccess(res.StatusMessage, undefined, undefined);\n        this.result.emit(true);\n      } else\n        Declarations.msgerror(res.StatusMessage, undefined, undefined);\n      this.IsLoading = false;\n    })\n\n  }\n  setexpiryDate($event) {\n    this.terminalmappingForm.controls.expiryDate.setValue($event);\n\n  }\n  seteffectiveDate($event) {\n    this.terminalmappingForm.controls.effectiveDate.setValue($event);\n\n  }\n\n}\n","<form [formGroup]=\"terminalmappingForm\" name=\"terminalmappingForm\" autocomplete=\"off\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Terminal Supplier <span class=\"color-maroon\">*</span></label>\r\n                        <ng-multiselect-dropdown class=\"single-select\" [placeholder]=\"'Select Terminal'\"\r\n                            formControlName=\"terminalSupplierId\" [(ngModel)]=\"selectedTerminalSupplier\"\r\n                            [settings]=\"ddlSettingsById\" [data]=\"TerminalSupplierList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"terminalmappingForm.get('terminalSupplierId').invalid && terminalmappingForm.get('terminalSupplierId').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('terminalSupplierId').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Terminal Supplier Description <span class=\"color-maroon\">*</span></label>\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                            [placeholder]=\"'Select Terminal Item Description'\" [(ngModel)]=\"selectedItemDesc\"\r\n                            formControlName=\"itemDescriptionId\"\r\n                            [settings]=\"ddlSettingsById\" [data]=\"TerminalSupplierDescList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"terminalmappingForm.get('itemDescriptionId').invalid && terminalmappingForm.get('itemDescriptionId').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('itemDescriptionId').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <label>{{terminalmappingForm?.get('id').value ? 'Terminal Item Code':'Terminal Item Code (s)'}}<span\r\n                                class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"itemCode\" />\r\n                        <span class=\"text-info\" *ngIf=\"!terminalmappingForm?.get('id').value\">Multiple Item Code\r\n                            separated by comma can be entered</span>\r\n                        <div *ngIf=\"terminalmappingForm.get('itemCode').invalid && terminalmappingForm.get('itemCode').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('itemCode').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Effective Date <span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" placeholder=\"Effective Date\" formControlName=\"effectiveDate\"\r\n                            (onDateChange)=\"seteffectiveDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                            [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                        <div *ngIf=\"terminalmappingForm.get('effectiveDate').invalid && terminalmappingForm.get('effectiveDate').touched\"\r\n                            class=\"color-maroon\">\r\n                            <div *ngIf=\"terminalmappingForm.get('effectiveDate').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Expiry Date </label>\r\n                        <input type=\"text\" placeholder=\"Expiry Date\" formControlName=\"expiryDate\" [minDate]=\"minDate\"\r\n                            [maxDate]=\"maxDate\" (onDateChange)=\"setexpiryDate($event);\" class=\"form-control datepicker\"\r\n                            myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <button id=\"submit-terminal-mapping-form\" type=\"submit\" class=\"mt4 btn btn-lg btn-primary valid\"\r\n                        [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\">\r\n                        Assign\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, Input, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CustomerDetailsViewModel } from 'src/app/carrier/models/CustomerDetailsViewModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\n\n@Component({\n  selector: 'app-customer-mapping',\n  templateUrl: './customer-mapping.component.html',\n  styleUrls: ['./customer-mapping.component.css']\n})\nexport class CustomerMappingComponent implements OnInit {\n   \n    isShow = false;\n    isShowLoader = false;\n    dtOptions: any = {};\n    dtTrigger: Subject<any> = new Subject();\n    CustomerDataToBeSend: CustomerDetailsViewModel; \n    public isShowCountryDDL: boolean = false;\n    public CarrierCustomers: CustomerDetailsViewModel[] = [];\n    public HeaderText: string;\n    public IsLoading: boolean = false;\n    \n    constructor(private carrierService: CarrierService) {\n       \n        };\n\n    ngOnInit() {\n        this.initializeCarrierCustomers();\n        this.getAllCustomerData();\n        this.isShowCountryDDL = false;\n  }\n    getDriverDetails() {\n        \n        $(\"#customer-grid-datatable\").DataTable().clear().destroy();\n    }\n\n    getAllCustomerData() {\n        this.isShowLoader = true;\n        this.carrierService.getAllCustomerData().subscribe(data => {\n            this.CarrierCustomers = data;\n            this.isShowLoader = false;\n            $(\"#customer-grid-datatable\").DataTable().clear().destroy();\n            this.dtTrigger.next();\n        });\n    }\n\n\n    setPanelHeader(headerText: string) {\n        this.HeaderText = headerText;\n    }\n\n\n    editDriver(Customer: any)\n    {\n        this.CustomerDataToBeSend = JSON.parse(JSON.stringify(Customer));\n    }\n\n    clearForm() {\n        $(\"#customer-grid-datatable\").DataTable().clear().destroy();\n        this.getAllCustomerData();\n    }\n\n    initializeCarrierCustomers() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Customer Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Customer Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n\n}\n","\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                        <table id=\"customer-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"BuyerName\">Company Name</th>\r\n                                    <!--<th data-key=\"TotalOrders\">Total Orders</th>-->\r\n                                    <th data-key=\"CarrierAssignedCustomerId\">My Customer Id</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let Customer of CarrierCustomers\">\r\n                                    <td>{{Customer.BuyerName}}</td>\r\n                                    <!--<td>{{Customer.TotalOrders}}</td>-->\r\n                                    <td>\r\n                                        <a (click)=\"setPanelHeader('Edit Customer Id');editDriver(Customer);\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','40%','60%')\">\r\n                                            <span *ngIf=\"Customer.CarrierAssignedCustomerId != null\">{{Customer.CarrierAssignedCustomerId}}</span>\r\n                                            <span *ngIf=\"Customer.CarrierAssignedCustomerId == null\">--</span>\r\n                                            <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<div id=\"driver-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div *ngIf=\"CustomerDataToBeSend\">\r\n            <app-edit-customer #ViewCustomer (getAllCustomerData)=\"getAllCustomerData()\" [CustomerDataToBeSend]=\"CustomerDataToBeSend\"></app-edit-customer>\r\n        </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { CarrierDetailsViewModel } from 'src/app/carrier/models/CarrierDetailsViewModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Declarations } from 'src/app/declarations.module';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n  selector: 'app-edit-carrier-mapping',\n  templateUrl: './edit-carrier-mapping.component.html',\n  styleUrls: ['./edit-carrier-mapping.component.css']\n})\nexport class EditCarrierMappingComponent implements OnInit {\n\n  //  public CarrierForm: FormGroup;\n  //  public isShowLoader: boolean = false;\n  //  @Input() CarrierDataToBeSend: CarrierDetailsViewModel;\n  //  @Output() getCarrierData: EventEmitter<any> = new EventEmitter();\n\n  //  constructor(public fb: FormBuilder, private carrierService: CarrierService) {\n  //      this.CarrierForm = this.fb.group({\n  //          Id: this.fb.control(0),          \n  //          CarrierCompanyId: this.fb.control(''),\n  //          CarrierName: this.fb.control(''),\n  //          TotalOrders: this.fb.control(''),\n  //          AssignedCarrierId: this.fb.control(''),\n  //          CompanyId: this.fb.control(''),\n  //      });\n  //  }\n\n  ngOnInit() {\n  }\n\n  //  checkDuplicateCarrierId(carrierDetail) {\n  //      this.carrierService.checkDuplicateCarrierId(carrierDetail).subscribe(data => {\n  //          if (data.StatusCode == 0) {\n  //              this.submitForm(carrierDetail);\n  //          }\n\n  //          if (data.StatusCode == 2) {\n  //              Declarations.msgerror(data.StatusMessage, undefined, undefined);\n  //          }\n  //      });\n  //  }\n\n  //  onSubmit() {\n  //      var CarrierDetail =\n  //      {\n  //          CarrierCompanyId: this.CarrierForm.get(\"CarrierCompanyId\").value,\n  //          CarrierName: this.CarrierForm.get(\"CarrierName\").value,\n  //          AssignedCarrierId: this.CarrierForm.get(\"AssignedCarrierId\").value,\n  //          Id: this.CarrierForm.get(\"Id\").value,\n  //          CompanyId: this.CarrierForm.get(\"CompanyId\").value\n  //      }\n  //      this.checkDuplicateCarrierId(CarrierDetail);\n  //  }\n\n  //  submitForm(CarrierDetail) {\n  //      this.isShowLoader = true;\n  //      this.carrierService.saveAndUpdateCarrierMapping(CarrierDetail).subscribe(data => {\n  //          this.isShowLoader = false;\n  //          if (data.StatusCode == 0) {\n  //              Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n  //              closeSlidePanel();\n  //              this.clearForm();\n  //          }\n  //          else if (data.StatusCode == 2) {\n  //              Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n  //          }\n  //          else {\n  //              Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n  //          }\n  //      });\n  //  }\n\n  //  clearForm() {\n  //      this.CarrierForm.reset();\n  //      $(\"#carrier-grid-datatable\").DataTable().clear().destroy();\n  //      this.getCarrierData.emit();\n  //  }\n}\n","import { Component, OnInit, Output,Input, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,AbstractControl } from '@angular/forms';\nimport { CustomerDetailsViewModel } from 'src/app/carrier/models/CustomerDetailsViewModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Declarations } from 'src/app/declarations.module';\ndeclare function closeSlidePanel(): any;\n\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n \n    public CustomerForm: FormGroup;\n    public isShowLoader: boolean = false;\n    @Input() CustomerDataToBeSend: CustomerDetailsViewModel;\n    @Output() getAllCustomerData: EventEmitter<any> = new EventEmitter();\n    public IdTaken: number = 5;\n\n    constructor(public fb: FormBuilder, private carrierService: CarrierService) {\n        this.CustomerForm = this.fb.group({\n\n            Id: this.fb.control(0),\n            TotalDDTCount: this.fb.control(''),\n            TotalInvoiceCount: this.fb.control(''),\n            BuyerCompanyId: this.fb.control(''),\n            BuyerName: this.fb.control(''),\n            TotalOrders: this.fb.control(''),\n            CarrierAssignedCustomerId: this.fb.control(''),\n\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    checkMyCustomerIdDuplicate(customerDetail) {\n        this.carrierService.CustomerIdNotTaken(customerDetail).subscribe(data => {\n            if (data.StatusCode == 0) {\n                this.IdTaken = 0;\n                this.submitForm(customerDetail);\n            }\n\n             if (data.StatusCode == 2) {\n                 Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                 this.IdTaken = 2;\n            }\n        });\n    }\n\n    onSubmit() {\n        var CustomerDetail =\n        {\n            BuyerCompanyId: this.CustomerForm.get(\"BuyerCompanyId\").value,\n            BuyerName: this.CustomerForm.get(\"BuyerName\").value,\n            CarrierAssignedCustomerId: this.CustomerForm.get(\"CarrierAssignedCustomerId\").value,\n            Id: this.CustomerForm.get(\"Id\").value\n        }\n         this.checkMyCustomerIdDuplicate(CustomerDetail);\n    }\n\n    submitForm(CustomerDetail) {\n        this.isShowLoader = true;\n        this.carrierService.saveAndUpdateCustomerMapping(CustomerDetail).subscribe(data => {\n            this.isShowLoader = false;\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                this.IdTaken = 5;\n                closeSlidePanel();\n                this.clearForm();\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n            this.getAllCustomerData.emit();\n        });\n    }\n\n    clearForm() {\n        this.CustomerForm.reset();\n    }\n}\n","<form [formGroup]=\"CustomerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"side-panel-body\">\r\n        <div class=\"col-sm-12\" id=\"Customer-Form\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"hidden\" formControlName=\"BuyerCompanyId\" [(ngModel)]=\"CustomerDataToBeSend.BuyerCompanyId\" />\r\n                        <input type=\"hidden\" formControlName=\"TotalDDTCount\" [(ngModel)]=\"CustomerDataToBeSend.TotalDDTCount\" />\r\n                        <input type=\"hidden\" formControlName=\"TotalInvoiceCount\" [(ngModel)]=\"CustomerDataToBeSend.TotalInvoiceCount\" />\r\n                        <input type=\"hidden\" formControlName=\"Id\" [(ngModel)]=\"CustomerDataToBeSend.Id\" />\r\n\r\n                        <label>Company Name</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly formControlName=\"BuyerName\" [(ngModel)]=\"CustomerDataToBeSend.BuyerName\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>My Customer Id</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"CarrierAssignedCustomerId\" [(ngModel)]=\"CustomerDataToBeSend.CarrierAssignedCustomerId\" />\r\n                        <!--<input type=\"text\" class=\"form-control\" readonly formControlName=\"TotalOrders\" [(ngModel)]=\"CustomerDataToBeSend.TotalOrders\" />-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">-->\r\n                        <!--<label>My Customer Id</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"CarrierAssignedCustomerId\" [(ngModel)]=\"CustomerDataToBeSend.CarrierAssignedCustomerId\" />-->\r\n                    <!--</div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\"col-sm-12 text-right form-buttons\">\r\n            <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n            <button id=\"submit-driver-form\" type=\"submit\"  [disabled]=\"(!CustomerForm.dirty||CustomerDataToBeSend.CarrierAssignedCustomerId.trim() == ''|| CustomerDataToBeSend.CarrierAssignedCustomerId == null)\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalBulkPlantMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n  selector: 'app-external-bulk-plant-mappings',\r\n  templateUrl: './external-bulk-plant-mappings.component.html',\r\n  styleUrls: ['./external-bulk-plant-mappings.component.css']\r\n})\r\nexport class ExternalBulkPlantMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalBulkPlantMappings: ExternalBulkPlantMappingViewModel[] = [];\r\n    editBulkPlantDetails: ExternalBulkPlantMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeBulkPlantCustomers();\r\n        this.getBulkPlantsData();\r\n    }\r\n    getBulkPlantsData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getBulkPlantsForExternalMapping().subscribe(data => {\r\n            this.externalBulkPlantMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeBulkPlantCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'BulkPlant Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'BulkPlant Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editBulkPlant(bulkPlant: ExternalBulkPlantMappingViewModel) {\r\n        this.editBulkPlantDetails = JSON.parse(JSON.stringify(bulkPlant));\r\n    }\r\n    SaveExternalBulkPlantMappings(bulkPlant: ExternalBulkPlantMappingViewModel) {\r\n        bulkPlant.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalBulkPlantMappings(bulkPlant).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getBulkPlantsData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editBulkPlantDetails = null;\r\n    }\r\n\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadBulkPlantMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getBulkPlantsData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb10\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-bulkPlant-grid\" class=\"table-responsive\">\r\n                            <table id=\"bulkPlant-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"BulkPlantName\">Site/BulkPlant Name</th>\r\n                                        <th data-key=\"TargetBulkPlantValue\">Site/BulkPlant Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let BulkPlant of externalBulkPlantMappings\">\r\n                                        <td>{{BulkPlant.BulkPlantName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editBulkPlant(BulkPlant)\" class=\"btn btn-link\" onclick=\"slidePanel('#bulkPlant-panel','40%','60%')\">\r\n                                                <span *ngIf=\"BulkPlant.TargetBulkPlantValue != null\">{{BulkPlant.TargetBulkPlantValue}}</span>\r\n                                                <span *ngIf=\"BulkPlant.TargetBulkPlantValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    <div class=\"loader\" *ngIf=\"isShowLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"bulkPlant-panel\" class=\"side-panel\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15\">\r\n                <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Site/BulkPlant Mapping</h3>\r\n            </div>\r\n            <ng-container *ngIf=\"editBulkPlantDetails\">\r\n                <div class=\"side-panel-body\">\r\n                    <div class=\"col-sm-12\" id=\"BulkPlant-Form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Site/BulkPlant Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editBulkPlantDetails.BulkPlantName\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Site/BulkPlant Id</label>\r\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editBulkPlantDetails.TargetBulkPlantValue\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"col-sm-12 text-right form-buttons\">\r\n                        <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                        <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalBulkPlantMappings(editBulkPlantDetails)\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog \" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Site/BulkPlant CSV</h4>\r\n                        <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <span class=\"fa fa-download mr10 mt10\"></span>\r\n                            <a href=\"/Content/Template_Site_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-md-12 b-dashed\">\r\n                            <h2>\r\n                                <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                    <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                                </label>\r\n                            </h2>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                    <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkRecords\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalCarrierMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-carrier-mappings',\r\n  templateUrl: './external-carrier-mappings.component.html',\r\n  styleUrls: ['./external-carrier-mappings.component.css']\r\n})\r\nexport class ExternalCarrierMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalCarrierMappings: ExternalCarrierMappingViewModel[] = [];\r\n    editCarrierDetails: ExternalCarrierMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getCarriersData();\r\n    }\r\n    getCarriersData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getCarriersForExternalMapping().subscribe(data => {\r\n            this.externalCarrierMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Carriers Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Carriers Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editCarrier(carrier: ExternalCarrierMappingViewModel) {\r\n        this.editCarrierDetails = JSON.parse(JSON.stringify(carrier));\r\n    }\r\n    SaveExternalCarrierMappings(carrier: ExternalCarrierMappingViewModel) {\r\n        carrier.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalCarrierMappings(carrier).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getCarriersData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editCarrierDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadCarrierMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getCarriersData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-carrier-grid\" class=\"table-responsive\">\r\n                            <table id=\"carrier-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                        <th data-key=\"TargetCarrierValue\"> Carrier Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Carrier of externalCarrierMappings\">\r\n                                        <td>{{Carrier.CarrierName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editCarrier(Carrier)\" class=\"btn btn-link\" onclick=\"slidePanel('#carrier-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Carrier.TargetCarrierValue != null\">{{Carrier.TargetCarrierValue}}</span>\r\n                                                <span *ngIf=\"Carrier.TargetCarrierValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"carrier-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Carrier Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editCarrierDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Carrier-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Carrier Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCarrierDetails.CarrierName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Carrier Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editCarrierDetails.TargetCarrierValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalCarrierMappings(editCarrierDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Carrier CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Carrier_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChildren,QueryList,Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\nimport { ExternalCustomerMappingViewModel } from '../../models/ExternalMappingModel';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DataTableDirective } from 'angular-datatables';\ndeclare function closeSlidePanel(): any;\n@Component({\n    selector: 'app-external-customer-mappings',\n    templateUrl: './external-customer-mappings.component.html',\n    styleUrls: ['./external-customer-mappings.component.css']\n})\nexport class ExternalCustomerMappingsComponent implements OnInit {\n\n    isShowLoader = false;\n    dtOptions: any = {};\n    dtTrigger: Subject<any> = new Subject();\n    externalCustomerMappings: ExternalCustomerMappingViewModel[] = [];\n    editCustomerDetails: ExternalCustomerMappingViewModel;\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    @Input() thirdPartyCompanyId: number;\n    file: any;\n    selectedFile: any;\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\n    constructor(private externalMappingsService: ExternalMappingsService) { }\n\n    ngOnInit() {\n        this.initializeCarrierCustomers();\n        this.getAllCustomerData();\n    }\n    getAllCustomerData() {\n        this.isShowLoader = true;\n        this.externalMappingsService.getCustomersForExternalMapping().subscribe(data => {\n            this.externalCustomerMappings = data;\n            this.isShowLoader = false;\n            this.refreshDatatable();\n        });\n    }\n\n    initializeCarrierCustomers() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Customer Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Customer Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n    refreshDatatable(): void {\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\n            if (dtElement.dtInstance) {\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n            }\n        });\n        this.dtTrigger.next();\n    }\n    editCustomer(customer: ExternalCustomerMappingViewModel) {\n        this.editCustomerDetails = JSON.parse(JSON.stringify(customer));\n    }\n\n    SaveExternalCustomerMappings(customer: ExternalCustomerMappingViewModel) {\n        customer.ThirdPartyId = this.thirdPartyCompanyId;\n        this.isShowLoader = true;\n        this.externalMappingsService.SaveExternalCustomerMappings(customer).subscribe(data => {\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                closeSlidePanel();\n                this.clearForm();\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n            this.isShowLoader = false;\n            this.getAllCustomerData();\n        });\n    }\n\n    clearForm() {\n        this.editCustomerDetails = null;\n    }\n\n    onFileChange(event) {\n        this.file = event.target.files[0];\n    }\n    bulkUpload() {\n        this.selectedFile = null;\n        this.file = null;\n    }\n    onFileUpload() {\n        if (!this.file) {\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\n            return;\n        }\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\n        element.click();\n        this.isShowLoader = true;\n        this.externalMappingsService.BulkUploadCustomerMapping(this.file).subscribe(\n            (response: any) => {\n                if (response.StatusCode == 1) {\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                    this.isShowLoader = false;\n                } else {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                    this.getAllCustomerData();\n                }\n                this.file = null;\n            }\n        );\n    }\n}\n","<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                            <table id=\"customer-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"CustomerName\">Customer Name</th>\r\n                                        <th data-key=\"TargetCustomerValue\">Customer Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Customer of externalCustomerMappings\">\r\n                                        <td>{{Customer.CustomerName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editCustomer(Customer)\" class=\"btn btn-link\" onclick=\"slidePanel('#customer-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Customer.TargetCustomerValue != null\">{{Customer.TargetCustomerValue}}</span>\r\n                                                <span *ngIf=\"Customer.TargetCustomerValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"customer-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Customer Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editCustomerDetails\">\r\n                <div class=\"side-panel-body\">\r\n                    <div class=\"col-sm-12\" id=\"Customer-Form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Customer Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" readonly  [(ngModel)]=\"editCustomerDetails.CustomerName\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label> Customer Id</label>\r\n                                    <input type=\"text\" class=\"form-control\"  [(ngModel)]=\"editCustomerDetails.TargetCustomerValue\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"col-sm-12 text-right form-buttons\">\r\n                        <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                        <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalCustomerMappings(editCustomerDetails)\">Submit</button>\r\n                    </div>\r\n                </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Customer CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Customer_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalCustomerLocationMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-customerlocation-mappings',\r\n  templateUrl: './external-customerlocation-mappings.component.html',\r\n  styleUrls: ['./external-customerlocation-mappings.component.css']\r\n})\r\nexport class ExternalCustomerlocationMappingsComponent implements OnInit {\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalCustomerLocationMappings: ExternalCustomerLocationMappingViewModel[] = [];\r\n    editCustomerLocationsDetails: ExternalCustomerLocationMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getCustomerLocationsData();\r\n  }\r\n    getCustomerLocationsData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getCustomerLocationsForExternalMapping().subscribe(data => {\r\n            this.externalCustomerLocationMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Location Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Location Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editCustomerLocation(customerLocation: ExternalCustomerLocationMappingViewModel) {\r\n        this.editCustomerLocationsDetails = JSON.parse(JSON.stringify(customerLocation));\r\n    }\r\n    SaveExternalCustomerLocationMappings(location: ExternalCustomerLocationMappingViewModel) {\r\n        location.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalCustomerLocationMappings(location).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getCustomerLocationsData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editCustomerLocationsDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadCustomerLocationMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getCustomerLocationsData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb10\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                            <table id=\"location-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"CompanyName\">Customer Name</th>\r\n                                        <th data-key=\"CustomerLocationName\">Customer Location</th>\r\n                                        <th data-key=\"TargetCustomerValue\"> Customer Id</th>\r\n                                        <th data-key=\"TargetCustomerLocationValue\"> Location Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Location of externalCustomerLocationMappings\">\r\n                                        <td>{{Location.CompanyName}}</td>\r\n                                        <td>{{Location.CustomerLocationName}}</td>\r\n                                        <td>{{Location.TargetCustomerValue}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editCustomerLocation(Location)\" class=\"btn btn-link\" onclick=\"slidePanel('#location-panel','40%')\">\r\n                                                <span *ngIf=\"Location.TargetCustomerLocationValue != null\">{{Location.TargetCustomerLocationValue}}</span>\r\n                                                <span *ngIf=\"Location.TargetCustomerLocationValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"location-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Customer Location Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editCustomerLocationsDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Location-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Customer Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCustomerLocationsDetails.CompanyName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Customer Location</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCustomerLocationsDetails.CustomerLocationName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Customer Id</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editCustomerLocationsDetails.TargetCustomerValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>PDI Location Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editCustomerLocationsDetails.TargetCustomerLocationValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalCustomerLocationMappings(editCustomerLocationsDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Customer Location CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_CustomerLocation_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalDriverMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-driver-mappings',\r\n  templateUrl: './external-driver-mappings.component.html', \r\n  styleUrls: ['./external-driver-mappings.component.css']\r\n})\r\nexport class ExternalDriverMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalDriverMappings: ExternalDriverMappingViewModel[] = [];\r\n    editDriverDetails: ExternalDriverMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeDriverCustomers();\r\n        this.getDriversData();\r\n    }\r\n    getDriversData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getDriversForExternalMapping().subscribe(data => {\r\n            this.externalDriverMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeDriverCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Drivers Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Drivers Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editDriver(driver: ExternalDriverMappingViewModel) {\r\n        this.editDriverDetails = JSON.parse(JSON.stringify(driver));\r\n    }\r\n    SaveExternalDriverMappings(driver: ExternalDriverMappingViewModel) {\r\n        driver.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalDriverMappings(driver).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getDriversData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editDriverDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadDriverMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getDriversData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div>\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-driver-grid\" class=\"table-responsive\">\r\n                            <table id=\"driver-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"DriverName\">Driver Name</th>\r\n                                        <th data-key=\"Email\">Driver Email</th>\r\n                                        <th data-key=\"TargetDriverValue\"> Driver Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Driver of externalDriverMappings\">\r\n                                        <td>{{Driver.FirstName + ' ' + Driver.LastName}}</td>                                        \r\n                                        <td>{{Driver.Email}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editDriver(Driver)\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Driver.TargetDriverValue != null\">{{Driver.TargetDriverValue}}</span>\r\n                                                <span *ngIf=\"Driver.TargetDriverValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"driver-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Driver Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editDriverDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Driver-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Driver Name</label>\r\n                                <label class=\"form-control\">{{editDriverDetails.FirstName + ' ' + editDriverDetails.LastName}} </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Driver Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editDriverDetails.TargetDriverValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalDriverMappings(editDriverDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Driver CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Driver_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkDriver\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChildren, QueryList, Input, ElementRef, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalProductMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n  selector: 'app-external-product-mappings',\r\n  templateUrl: './external-product-mappings.component.html',\r\n  styleUrls: ['./external-product-mappings.component.css']\r\n})\r\nexport class ExternalProductMappingsComponent implements OnInit {\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalProductMappings: ExternalProductMappingViewModel[] = [];\r\n    editProductDetails: ExternalProductMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getProductsData();\r\n  }\r\n    getProductsData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getProductsForExternalMapping().subscribe(data => {\r\n            this.externalProductMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Products Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Products Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editProduct(product: ExternalProductMappingViewModel) {\r\n        this.editProductDetails = JSON.parse(JSON.stringify(product));\r\n    }\r\n    SaveExternalProductMappings(product: ExternalProductMappingViewModel) {\r\n        product.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalProductMappings(product).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getProductsData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editProductDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadProductMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getProductsData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","\r\n<div class=\"well\">\r\n    <div class=\"row mb10\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-customer-grid\" class=\"table-responsive\">\r\n                            <table id=\"product-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"ProductName\">Product Name</th>\r\n                                        <th data-key=\"TargetProductValue\"> Product Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Product of externalProductMappings\">\r\n                                        <td>{{Product.ProductName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editProduct(Product)\" class=\"btn btn-link\" onclick=\"slidePanel('#product-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Product.TargetProductValue != null\">{{Product.TargetProductValue}}</span>\r\n                                                <span *ngIf=\"Product.TargetProductValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"isShowLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"product-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Product Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editProductDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Product-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Product Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editProductDetails.ProductName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Product Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editProductDetails.TargetProductValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalProductMappings(editProductDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Product CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Product_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalSupplierMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n  selector: 'app-external-supplier-mappings',\r\n  templateUrl: './external-supplier-mappings.component.html',\r\n  styleUrls: ['./external-supplier-mappings.component.css']\r\n})\r\nexport class ExternalSupplierMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalSupplierMappings: ExternalSupplierMappingViewModel[] = [];\r\n    editSupplierDetails: ExternalSupplierMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getSuppliersData();\r\n    }\r\n    getSuppliersData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getSuppliersForExternalMapping().subscribe(data => {\r\n            this.externalSupplierMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Suppliers Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Suppliers Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editSupplier(supplier: ExternalSupplierMappingViewModel) {\r\n        this.editSupplierDetails = JSON.parse(JSON.stringify(supplier));\r\n    }\r\n    SaveExternalSupplierMappings(supplier: ExternalSupplierMappingViewModel) {\r\n        supplier.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalSupplierMappings(supplier).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getSuppliersData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editSupplierDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadSupplierMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getSuppliersData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n}\r\n","\r\n<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-supplier-grid\" class=\"table-responsive\">\r\n                            <table id=\"supplier-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"SupplierName\">Vendor</th>\r\n                                        <th data-key=\"TargetSupplierValue\"> Vendor Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Supplier of externalSupplierMappings\">\r\n                                        <td>{{Supplier.SupplierName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editSupplier(Supplier)\" class=\"btn btn-link\" onclick=\"slidePanel('#supplier-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Supplier.TargetSupplierValue != null\">{{Supplier.TargetSupplierValue}}</span>\r\n                                                <span *ngIf=\"Supplier.TargetSupplierValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"supplier-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Vendor Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editSupplierDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Supplier-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Vendor</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editSupplierDetails.SupplierName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Vendor Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editSupplierDetails.TargetSupplierValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalSupplierMappings(editSupplierDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Vendor CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Vendor_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalTerminalMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-terminal-mappings',\r\n  templateUrl: './external-terminal-mappings.component.html',\r\n  styleUrls: ['./external-terminal-mappings.component.css']\r\n})\r\nexport class ExternalTerminalMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalTerminalMappings: ExternalTerminalMappingViewModel[] = [];\r\n    editTerminalDetails: ExternalTerminalMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getTerminalData();\r\n    }\r\n    getTerminalData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getTerminalsForExternalMapping().subscribe(data => {\r\n            this.externalTerminalMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Terminals Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Terminals Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editTerminal(terminal: ExternalTerminalMappingViewModel) {\r\n        this.editTerminalDetails = JSON.parse(JSON.stringify(terminal));\r\n    }\r\n    SaveExternalTerminalMappings(terminal: ExternalTerminalMappingViewModel) {\r\n        terminal.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalTerminalMappings(terminal).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getTerminalData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editTerminalDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadTerminalMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getTerminalData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"well\">\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-terminal-grid\" class=\"table-responsive\">\r\n                            <table id=\"terminal-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"TerminalName\">Terminal Name</th>\r\n                                        <th data-key=\"ControlNumber\">Terminal Control Number</th>\r\n                                        <th data-key=\"TargetTerminalValue\"> Terminal Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Terminal of externalTerminalMappings\">\r\n                                        <td>{{Terminal.TerminalName}}</td>\r\n                                        <td>{{Terminal.ControlNumber}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editTerminal(Terminal)\" class=\"btn btn-link\" onclick=\"slidePanel('#terminal-panel','40%','60%')\">\r\n                                                <span *ngIf=\"Terminal.TargetTerminalValue != null\">{{Terminal.TargetTerminalValue}}</span>\r\n                                                <span *ngIf=\"Terminal.TargetTerminalValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"terminal-panel\" class=\"side-panel\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Terminal Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editTerminalDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Terminal-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Terminal Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editTerminalDetails.TerminalName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Terminal Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editTerminalDetails.TargetTerminalValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalTerminalMappings(editTerminalDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Terminal CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Terminal_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, ViewChild, ElementRef    } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ExternalMappingsService } from '../../service/externalmappings.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { ExternalVehicleMappingViewModel } from '../../models/ExternalMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\ndeclare function closeSlidePanel(): any;\r\n@Component({\r\n  selector: 'app-external-vehicle-mappings',\r\n  templateUrl: './external-vehicle-mappings.component.html',\r\n  styleUrls: ['./external-vehicle-mappings.component.css']\r\n})\r\nexport class ExternalVehicleMappingsComponent implements OnInit {\r\n\r\n    isShowLoader = false;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    externalVehicleMappings: ExternalVehicleMappingViewModel[] = [];\r\n    editVehicleDetails: ExternalVehicleMappingViewModel;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @Input() thirdPartyCompanyId: number;\r\n    file: any;\r\n    selectedFile: any;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    constructor(private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.initializeCarrierCustomers();\r\n        this.getVehicleData();\r\n    }\r\n    getVehicleData() {\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.getVehiclesForExternalMapping().subscribe(data => {\r\n            this.externalVehicleMappings = data;\r\n            this.isShowLoader = false;\r\n            this.refreshDatatable();\r\n        });\r\n    }\r\n\r\n    initializeCarrierCustomers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Vehicles Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Vehicles Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    editVehicle(vehicle: ExternalVehicleMappingViewModel) {\r\n        this.editVehicleDetails = JSON.parse(JSON.stringify(vehicle));\r\n    }\r\n    SaveExternalVehicleMappings(vehicle: ExternalVehicleMappingViewModel) {\r\n        vehicle.ThirdPartyId = this.thirdPartyCompanyId;\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.SaveExternalVehicleMappings(vehicle).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                closeSlidePanel();\r\n                this.clearForm();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this.isShowLoader = false;\r\n            this.getVehicleData();\r\n        });\r\n    }\r\n\r\n    clearForm() {\r\n        this.editVehicleDetails = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    bulkUpload() {\r\n        this.selectedFile = null;\r\n        this.file = null;\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.isShowLoader = true;\r\n        this.externalMappingsService.BulkUploadVehicleMapping(this.file).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.isShowLoader = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getVehicleData();\r\n                }\r\n                this.file = null;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","<div>\r\n    <div class=\"row mb20\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" data-target=\"#bulk-upload-csv\" (click)=\"bulkUpload()\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-upload fs18 mt-1 mr-2 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white no-shadow\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-vehicle-grid\" class=\"table-responsive\">\r\n                            <table id=\"vehicle-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"TruckName\">Vehicle Name</th>\r\n                                        <th data-key=\"TargetVehicleValue\"> Vehicle Id</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Vehicle of externalVehicleMappings\">\r\n                                        <td>{{Vehicle.TruckName}}</td>\r\n                                        <td>\r\n                                            <a (click)=\"editVehicle(Vehicle)\" class=\"btn btn-link\" onclick=\"slidePanel('#vehicle-panel','40%')\">\r\n                                                <span *ngIf=\"Vehicle.TargetVehicleValue != null\">{{Vehicle.TargetVehicleValue}}</span>\r\n                                                <span *ngIf=\"Vehicle.TargetVehicleValue == null\">--</span>\r\n                                                <span><i class=\"fa fas fa-edit pull-left mt7\"></i></span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"isShowLoader\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"vehicle-panel\" class=\"side-panel\" >\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15\">\r\n            <a onclick=\"closeSlidePanel();\" class=\"ml15 close-panel\"><i class=\"fa fa-close fs18\" (click)=\"clearForm();\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Vehicle Mapping</h3>\r\n        </div>\r\n        <ng-container *ngIf=\"editVehicleDetails\">\r\n            <div class=\"side-panel-body\">\r\n                <div class=\"col-sm-12\" id=\"Vehicle-Form\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label>Vehicle Name</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"editVehicleDetails.TruckName\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label> Vehicle Id</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editVehicleDetails.TargetVehicleValue\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div class=\"col-sm-12 text-right form-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"clearForm();\" class=\"btn\" onclick=\"closeSlidePanel()\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\" (click)=\"SaveExternalVehicleMappings(editVehicleDetails)\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"bulk-upload-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog \" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Vehicle CSV</h4>\r\n                    <button #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a href=\"/Content/Template_Vehicle_Mapping.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-md-12 b-dashed\">\r\n                        <h2>\r\n                            <label for=\"csvFile\" class=\"col-sm-12 btn btn-primary ml0\">\r\n                                <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                            </label>\r\n                        </h2>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkVehicle\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class ProductMappingModel {\r\n    constructor() {\r\n        this.StateList = [];\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        this.FuelType = new DropdownItem();\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public CountryId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n    public StateList: DropdownItem[];\r\n    public CityList: DropdownItem[];\r\n    public TerminalList: DropdownItem[];\r\n    public FuelType: DropdownItem;\r\n    public StateIds: string;\r\n    public CityIds: string;\r\n    public TerminalIds: string;\r\n    public FuelTypeIds: string;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ProductMappingGridModel {\r\n    constructor() {\r\n       \r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n   // public TerminalItemCode: string;\r\n\r\n    public StateId: number;\r\n    public StateCode: string;\r\n    public CityId: number;\r\n    public City: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public TerminalAddress: string;\r\n    public CountryCode: string;\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { ProductMappingModel, ProductMappingGridModel } from '../models/ProductMappingModel';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { Subject, concat } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\ndeclare var currentCompanyId: any;\r\n\r\n@Component({\r\n    selector: 'app-product-mapping',\r\n    templateUrl: './product-mapping.component.html',\r\n    styleUrls: ['./product-mapping.component.css']\r\n})\r\nexport class ProductMappingComponent implements OnInit, AfterViewInit {\r\n    public IsLoading: boolean = false;\r\n    public StateList: DropdownItem[] = [];\r\n    public CityList: DropdownItem[] = [];\r\n    public TerminalList: DropdownItem[] = [];\r\n    public FuelTypeList: DropdownItem[] = [];\r\n    public ProductMappingList: ProductMappingGridModel[] = [];\r\n    public UpdateProductMappingList: ProductMappingGridModel[] = [];\r\n    public ProductMapping: ProductMappingModel;\r\n    public IsShowBulkUploadPopup: boolean = false;\r\n    public ProductMappingForm: FormGroup;\r\n    public ddlSettingsByCode = {};\r\n    public ddlSettingsById = {};\r\n    public ddlSettingsByIdSingleSelect = {};\r\n    public CurrentCompanyId: any;\r\n    public SelectedCountryId: number;\r\n    public MaxFileUploadSize: number = 1048576; // 1MB\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    public SelectedFiles: File[] = [];\r\n    @Input() countryId: number;\r\n    public IsValidForm: boolean = true;\r\n    @ViewChild('MyProductId') MyProductId: ElementRef;\r\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService) {\r\n        this.ProductMappingForm = this.fb.group({\r\n            States: this.fb.control([]),\r\n            Cities: this.fb.control([]),\r\n            Terminals: this.fb.control([]),\r\n            FuelTypes: this.fb.control([], [Validators.required]),\r\n            MyProductId: this.fb.control(''),\r\n            BackOfficeProductId: this.fb.control(''),\r\n            DriverProductId: this.fb.control(''),\r\n          //  TerminalItemCode: this.fb.control(''),\r\n            CompanyId: this.fb.control(0),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ddlSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByCode = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByIdSingleSelect = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.initializeProductMappingDatatableGrid();\r\n        this.CurrentCompanyId = Number(currentCompanyId);       \r\n        this.getServingFuelTypesByCompany();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.clearForm();\r\n        this.SelectedCountryId = Number(this.countryId);\r\n        if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n            this.getDefaultServingCountry();\r\n        }\r\n        else {\r\n            this.getStates();\r\n            this.getProductMappingGridDetails();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.getProductMappingGridDetails();\r\n    }\r\n\r\n    getProductMappingGridDetails() {\r\n        this.IsLoading = true;\r\n        var selectedStates = this.ProductMappingForm.get('States').value as DropdownItem[];\r\n        var selectedCities = this.ProductMappingForm.get('Cities').value as DropdownItem[];\r\n        var selectedTerminals = this.ProductMappingForm.get('Terminals').value as DropdownItem[];\r\n        var selectedFuelTypes = this.ProductMappingForm.get('FuelTypes').value as DropdownItem[];\r\n\r\n        var input = new ProductMappingModel();\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(s => s.Id);\r\n            input.StateIds = stateIds.join(',');\r\n        }\r\n        if (selectedCities != null && selectedCities != undefined && selectedCities.length > 0) {\r\n            var cityIds = selectedCities.map(s => s.Name);\r\n            input.CityIds = cityIds.join(',');\r\n        }\r\n        if (selectedTerminals != null && selectedTerminals != undefined && selectedTerminals.length > 0) {\r\n            var terminalIds = selectedTerminals.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n        }\r\n        if (selectedFuelTypes != null && selectedFuelTypes != undefined && selectedFuelTypes.length > 0) {\r\n            var fuelTypeIds = selectedFuelTypes.map(s => s.Id);\r\n            input.FuelTypeIds = fuelTypeIds.join(',');\r\n        }\r\n        input.CompanyId = this.CurrentCompanyId;\r\n        input.CountryId = this.SelectedCountryId;\r\n\r\n        if (input.CompanyId != undefined && input.CompanyId > 0) {\r\n            this.carrierService.getProductMappingGridDetails(input).subscribe(data => {               \r\n                this.IsLoading = false;\r\n                this.ProductMappingList = data as ProductMappingGridModel[];\r\n                this.dtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    getDefaultServingCountry() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n            this.getStates();\r\n            this.getProductMappingGridDetails();\r\n        });\r\n    }\r\n\r\n    getStates() {\r\n        this.IsLoading = true;\r\n        if (this.SelectedCountryId != undefined && this.SelectedCountryId > 0) {\r\n            this.carrierService.getStates(this.SelectedCountryId).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.StateList = data as DropdownItem[];\r\n            });\r\n        }\r\n    }\r\n\r\n    getCities(stateIds: number[]) {\r\n        this.IsLoading = true;\r\n        this.carrierService.getCities(stateIds).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.CityList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    getTerminals() {\r\n        var selectedStates = this.ProductMappingForm.get('States').value as DropdownItem[];\r\n        var selectedCities = this.ProductMappingForm.get('Cities').value as DropdownItem[];\r\n\r\n        if (selectedStates.length == 0) {\r\n            this.ProductMappingForm.get('States').patchValue([]);\r\n            this.TerminalList = [];\r\n            return;\r\n        }\r\n\r\n        this.IsLoading = true;\r\n        var input = new ProductMappingModel();\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(s => s.Id);\r\n            input.StateIds = stateIds.join(',');\r\n        }\r\n        if (selectedCities != null && selectedCities != undefined && selectedCities.length > 0) {\r\n            var cityIds = selectedCities.map(s => s.Name);\r\n            input.CityIds = cityIds.join(',');\r\n        }\r\n        input.CompanyId = this.CurrentCompanyId;\r\n        this.carrierService.getTerminals(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    getServingFuelTypesByCompany() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getServingFuelTypesByCompany(this.CurrentCompanyId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.FuelTypeList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        var myProductId = this.ProductMappingForm.get('MyProductId').value;\r\n        var backOfficeProductId = this.ProductMappingForm.get('BackOfficeProductId').value;\r\n        var driverProductId = this.ProductMappingForm.get('DriverProductId').value;\r\n      //  var terminalItemCode = this.ProductMappingForm.get('TerminalItemCode').value;\r\n        if ((myProductId == undefined || myProductId == null || myProductId == '') &&\r\n            (backOfficeProductId == undefined || backOfficeProductId == null || backOfficeProductId == '') &&\r\n            (driverProductId == undefined || driverProductId == null || driverProductId == ''))\r\n            /*&& (terminalItemCode == undefined || terminalItemCode == null || terminalItemCode ==''))*/ {\r\n            Declarations.msgerror('Please provide My Product ID or Back Office Product ID or Driver Product ID', undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        this.ProductMappingForm.get(\"CompanyId\").patchValue(this.CurrentCompanyId);\r\n        this.IsValidForm = true;\r\n        if (!this.ProductMappingForm.valid) {\r\n            this.IsValidForm = false;\r\n        }\r\n        else {\r\n            this.submitForm();\r\n        }\r\n    }\r\n\r\n    submitForm() {\r\n        this.IsLoading = true;\r\n        this.carrierService.saveProductMapping(this.ProductMappingForm.value).subscribe(data => {\r\n            if (data.StatusCode == 0) {  \r\n                this.IsLoading = false;\r\n                this.clearForm();    \r\n                this.MyProductId.nativeElement.click();\r\n                this.getProductMappingGridDetails();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateProductNames(mappingId: number) {\r\n        var rowToUpdate = this.UpdateProductMappingList.filter(map => map.Id === mappingId);\r\n        if (rowToUpdate.length == 0) {\r\n            Declarations.msgerror('No updated records found', undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        this.IsLoading = true;\r\n        this.carrierService.updateProductNames(rowToUpdate).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.UpdateProductMappingList = [];\r\n                this.filterGrid();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelUpdateProductNames() {\r\n        //this.filterGrid();\r\n    }\r\n\r\n    editProductNames(mapping: ProductMappingGridModel, key: string, $event: any) {\r\n        var nameToUpdate = $event.target.innerText;\r\n        var existingId = '';\r\n        switch (key) {\r\n            case 'MyProductId':\r\n                existingId = mapping.MyProductId;\r\n                break;\r\n            case 'DriverProductId':\r\n                existingId = mapping.DriverProductId;\r\n                break;\r\n            case 'BackOfficeProductId':\r\n                existingId = mapping.BackOfficeProductId;\r\n                break;\r\n            //case 'TerminalItemCode':\r\n            //    existingId = mapping.TerminalItemCode;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (nameToUpdate == undefined || nameToUpdate == null || nameToUpdate.trim() == '' || nameToUpdate == '--')\r\n            nameToUpdate = '';\r\n\r\n        if (existingId == undefined || existingId == null || existingId.trim() == '' || existingId == '--')\r\n            existingId = '';\r\n\r\n        if (nameToUpdate == existingId)\r\n            return;\r\n\r\n        mapping[key] = nameToUpdate.trim();\r\n        var obj = this.UpdateProductMappingList.filter(map => map.Id === mapping.Id);\r\n\r\n        if (this.UpdateProductMappingList.length == 0) {\r\n            this.UpdateProductMappingList.push(mapping);\r\n        }\r\n        else if (obj.length == 1) {\r\n            obj[key] = nameToUpdate.trim();\r\n        }\r\n        else {\r\n            this.UpdateProductMappingList.push(mapping);\r\n        }\r\n    }\r\n\r\n    deleteMapping(mappingId: number, companyId: number) {\r\n        if (mappingId == undefined || mappingId <= 0)\r\n            return;\r\n        var model = new ProductMappingGridModel();\r\n        model.Id = mappingId;\r\n        model.CompanyId = companyId;\r\n        this.IsLoading = true;\r\n        this.carrierService.postDeleteProductMapping(model).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.clearForm();\r\n                this.getProductMappingGridDetails();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#product-mapping-grid-datatable\").DataTable().clear().destroy();\r\n        this.getProductMappingGridDetails();\r\n    }\r\n\r\n    onStateSelect(state: any) {\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateDeSelect(state: any) {\r\n        this.ProductMappingForm.get('Cities').patchValue([]);\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateSelectAll(states: any) {\r\n        this.ProductMappingForm.get('States').patchValue(states);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateDeSelectAll() {\r\n        this.ProductMappingForm.get('Cities').patchValue([]);\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n    }\r\n\r\n    getCitiesByStateId() {\r\n        var selectedStates = this.ProductMappingForm.get('States').value as DropdownItem[];\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(m => m.Id);\r\n            this.getCities(stateIds);\r\n        }\r\n        else {\r\n            this.CityList = [];\r\n        }\r\n    }\r\n\r\n    clearForm() {\r\n        this.ProductMappingForm.reset();\r\n        this.ProductMappingForm.get('States').setValue([]);\r\n        this.ProductMappingForm.get('Cities').setValue([]);\r\n        this.ProductMappingForm.get('Terminals').setValue([]);\r\n        this.ProductMappingForm.get('FuelTypes').setValue([]);\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        $(\"#product-mapping-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getProductMappingGridDetails();\r\n    }\r\n\r\n    onCitySelect(city: any) {\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelect(city: any) {\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCitySelectAll(cities: any) {\r\n        this.ProductMappingForm.get('Cities').patchValue(cities);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelectAll() {\r\n        this.ProductMappingForm.get('Terminals').patchValue([]);\r\n        this.ProductMappingForm.get('Cities').patchValue([]);\r\n        this.getTerminals();\r\n        //this.CityList = [];\r\n    }\r\n\r\n    selectFiles(files: File[]) {\r\n        if (files != null && files != undefined && files.length > 0)\r\n            this.SelectedFiles = files;\r\n    }\r\n\r\n    uploadProductMappingFile() {\r\n        var files = this.SelectedFiles;\r\n        if (files.length === 0)\r\n            return;\r\n       \r\n        const formData = new FormData();\r\n        for (var file of files) {\r\n            if (!this.isValidFile(file)) {\r\n                return;\r\n            }\r\n            formData.append(file.name, file);\r\n        }\r\n        \r\n        this.IsLoading = true;\r\n        this.carrierService.postBulkUploadTemplate(formData).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.CloseBulkUploadPopup.nativeElement.click();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                this.SelectedFiles = [];\r\n                //$(\"#product-mapping-grid-datatable\").DataTable().clear().destroy();\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    isValidFile(file: File) {\r\n        var isValid = true;\r\n\r\n        var extension = this.getExtension(file.name);\r\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\r\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        if (file.size > this.MaxFileUploadSize) {\r\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    downloadCsvTemplate() {\r\n        this.IsLoading = true;\r\n        var timestamp = new Date().getTime();\r\n        this.carrierService.downloadProductMappingTemplate(timestamp).subscribe(blob => {\r\n            const a = document.createElement('a')\r\n            const objectUrl = URL.createObjectURL(blob)\r\n            a.href = objectUrl\r\n            a.download = 'ProductMapping_Template.csv';\r\n            a.click();\r\n            URL.revokeObjectURL(objectUrl);\r\n\r\n            this.IsLoading = false;            \r\n        });\r\n    }\r\n\r\n    getExtension(fileName) {\r\n        // extract file name from full path ...\r\n        var basename = fileName.split(/[\\\\/]/).pop();\r\n\r\n        // (supports `\\\\` and `/` separators)\r\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\r\n\r\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\r\n            return \"\";                             //  `.` not found (-1) or comes first (0)\r\n\r\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\r\n    }\r\n\r\n    showBulkUploadPopup() {\r\n        this.IsShowBulkUploadPopup = true;\r\n    }\r\n\r\n    closePopup() {\r\n        this.IsShowBulkUploadPopup = false;\r\n    }\r\n\r\n    initializeProductMappingDatatableGrid() {\r\n        let exportColumns = { columns: [0, 1, 2, 3, 4, 5] };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Product Mapping', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Product Mapping', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n            //,\r\n            //rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n            //    const self = this;\r\n            //    // Unbind first in order to avoid any duplicate handler\r\n            //    // (see https://github.com/l-lin/angular-datatables/issues/87)\r\n            //    $('td', row).unbind('click');\r\n            //    $('td', row).bind('click', () => {\r\n            //        self.someClickHandler(data, event);\r\n            //    });\r\n            //    return row;\r\n            //}\r\n        };\r\n    }\r\n\r\n    //someClickHandler(info: any, $event: any): void {\r\n    //    console.log($event);\r\n    //    console.log($event.target.textContent);\r\n    //}\r\n}\r\n","<form [formGroup]=\"ProductMappingForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"well col-sm-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>State</label>\r\n                            <ng-multiselect-dropdown formControlName=\"States\"\r\n                                                     [placeholder]=\"'Select State(s)'\"\r\n                                                     [settings]=\"ddlSettingsById\"\r\n                                                     [data]=\"StateList\"\r\n                                                     (onSelect)=\"onStateSelect($event)\" (onDeSelect)=\"onStateDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onStateSelectAll($event)\" (onDeSelectAll)=\"onStateDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>City</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Cities\"\r\n                                                     [placeholder]=\"'Select City(s)'\"\r\n                                                     [settings]=\"ddlSettingsByCode\"\r\n                                                     [data]=\"CityList\"\r\n                                                     (onSelect)=\"onCitySelect($event)\" (onDeSelect)=\"onCityDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onCitySelectAll($event)\" (onDeSelectAll)=\"onCityDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal Name</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Terminals\"\r\n                                                     [placeholder]=\"'Select Terminal(s)'\"\r\n                                                     [settings]=\"ddlSettingsById\" [data]=\"TerminalList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"!IsValidForm && ProductMappingForm.get('Terminals').errors?.required\" class=\"color-maroon\">\r\n                                Terminal is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label>Fuel Type<span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"FuelTypes\"\r\n                                                     [placeholder]=\"'Select FuelType'\"\r\n                                                     [settings]=\"ddlSettingsByIdSingleSelect\" [data]=\"FuelTypeList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"!IsValidForm && ProductMappingForm.get('FuelTypes').errors?.required\" class=\"color-maroon\">\r\n                                Fuel Type is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 text-left form-buttons mt20 pt-1\">\r\n                        <button id=\"filter-product-mapping-grid\" type=\"button\" class=\"btn btn-primary mt3 valid mx-0\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid()\">Apply</button>\r\n                        <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 mx-0 px-1 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>My Product ID</label>\r\n                            <input type=\"text\" class=\"form-control\" #MyProductId formControlName=\"MyProductId\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Back Office Product ID</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BackOfficeProductId\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Driver Product ID</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"DriverProductId\" />\r\n                        </div>\r\n                    </div>\r\n                    <!--<div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal Item Code</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"TerminalItemCode\" />\r\n                        </div>\r\n                    </div>-->\r\n                    <div class=\"col-sm-2 text-left form-buttons mt20\">\r\n                        <button id=\"submit-product-mapping-form\" type=\"submit\" class=\"mt4 btn btn-lg btn-default valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\">Assign</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right form-buttons mb5\">\r\n            <button id=\"showBulkUploadPopupBtn\" type=\"button\" class=\"btn btn-primary valid\" (click)=\"showBulkUploadPopup()\" data-toggle=\"modal\" data-target=\"#bulkUploadModalPopup\">Bulk Upload</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-product-mapping-grid\" class=\"table-responsive\">\r\n                                <table id=\"product-mapping-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th data-key=\"FuelType\">Fuel Type</th>\r\n                                            <th data-key=\"TerminalName\">Terminal</th>\r\n                                            <th data-key=\"TerminalAddress\">Terminal Address</th>\r\n                                            <th data-key=\"BackOfficeProductId\">Back-Office Product ID</th>\r\n                                            <th data-key=\"DriverProductId\">Driver Product ID</th>\r\n                                            <th data-key=\"MyProductId\">My Product ID</th>\r\n                                            <!--<th data-key=\"TerminalItemCode\">Terminal Item Code</th>-->\r\n                                            <th data-key=\"Action\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let mapping of ProductMappingList\">\r\n                                            <td>\r\n                                                <span *ngIf=\"mapping.FuelType != null\">{{mapping.FuelType}}</span>\r\n                                                <span *ngIf=\"mapping.FuelType == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"mapping.TerminalName != null\">{{mapping.TerminalName}}</span>\r\n                                                <span *ngIf=\"mapping.TerminalName == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"mapping.TerminalAddress != null\">{{mapping.TerminalAddress}}</span>\r\n                                                <span *ngIf=\"mapping.TerminalAddress == null\">--</span>\r\n                                            </td>\r\n                                            <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'BackOfficeProductId', $event);\">\r\n                                                {{mapping.BackOfficeProductId == null ? \"--\" : mapping.BackOfficeProductId}}\r\n                                            </td>\r\n                                            <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'DriverProductId', $event)\">\r\n                                                {{mapping.DriverProductId == null ? \"--\" : mapping.DriverProductId}}\r\n                                            </td>\r\n                                            <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'MyProductId', $event)\">\r\n                                                {{mapping.MyProductId == null ? \"--\" : mapping.MyProductId}}\r\n                                            </td>\r\n                                            <!--<td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editProductNames(mapping, 'TerminalItemCode', $event)\">\r\n                                                {{mapping.TerminalItemCode == null ? \"--\" : mapping.TerminalItemCode}}\r\n                                            </td>-->\r\n                                            <td class=\"text-center\">\r\n                                                <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"updateProductNames(mapping.Id)\" (cancel)=\"cancelUpdateProductNames()\"><i class=\"fs21 fas fa-save color-green\" alt=\"Update\" title=\"Update\"></i></button>\r\n                                                <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deleteMapping(mapping.Id, mapping.CompanyId)\"><i class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\" title=\"Delete\"></i></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n   \r\n    <div id=\"bulkUploadModalPopup\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowBulkUploadPopup\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt0 pb5\">\r\n                    <h4 class=\"modal-title\">Product Mapping</h4>\r\n                    <button type=\"button\" #btnCloseBulkUploadPopup class=\"close color-grey\" data-dismiss=\"modal\" (click)=\"closePopup()\"> <i class=\"fa fa-close fs21 mt15\"></i></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"mb10\">\r\n                        <span class=\"fa fa-download mr10 mt10\"></span>\r\n                        <a role=\"button\" (click)=\"downloadCsvTemplate()\" class=\"mb5 btn-download\">Download Template</a>\r\n                    </div>\r\n                    <div class=\"mb5 mt5\">\r\n                        <input type=\"file\" id=\"bulkUploadFile\" (change)=\"selectFiles($event.target.files)\" accept=\".csv\">\r\n                    </div>\r\n                    <span class=\"color-maroon\">\r\n                       Note: A new version of template is available\r\n                    </span>\r\n                    <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsLoading\"><span class='spinner-dashboard pa'></span></div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"uploadProductMappingFile()\">Upload</button>\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { ProductMappingComponent } from './product-mapping/product-mapping.component';\r\nimport { Country } from './models/location';\r\nimport { TerminalMappingComponent } from './terminal-mapping/terminal-mapping.component';\r\nimport { CarrierService } from '../carrier/service/carrier.service';\r\nimport { ExternalMappingsService } from '../self-service-alias/service/externalmappings.service';\r\ndeclare var defaultCountryId: any;\r\ndeclare var currentCompanyId: any;\r\ndeclare var carrierMappingVisible: any;\r\n\r\n@Component({\r\n    selector: 'app-self-service-alias',\r\n    templateUrl: './self-service-alias.component.html',\r\n    styleUrls: ['./self-service-alias.component.css']\r\n})\r\nexport class SelfServiceAliasComponent implements OnInit {\r\n    public locationViewType: any;\r\n    public CountryFilter: any;\r\n    public CountryEnum: typeof Country = Country;\r\n    public CountryType: any = [];\r\n    public isShow: boolean = false;\r\n    public isShowCarrier: boolean = false;\r\n    public isShowCountryDDL: boolean = true;\r\n    public SelectedCountryId: number;\r\n    public CurrentCompanyId: number;\r\n    public CountryList: DropdownItem[] = [];\r\n    public IsShowProductMappingComponent: boolean = true;\r\n    public IsShowCarrierMappingComponent: boolean = false;\r\n    isShowTerminalmappingCode = false;\r\n    public isShowFuelGroup = false;\r\n    public SelectedCompany: DropdownItem = new DropdownItem;\r\n    @ViewChild(ProductMappingComponent) ProductMappingComponent: ProductMappingComponent;\r\n    public ServingCountries: any = {};\r\n    public externalCompanies: DropdownItem[] = [];\r\n    public pdiTabName: string = 'CUSTOMERS';\r\n    constructor(private carrierService: CarrierService, private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.CurrentCompanyId = Number(currentCompanyId);\r\n        this.SelectedCountryId = Number(defaultCountryId);\r\n        this.getExternalCompanies();\r\n        this.getCountries();\r\n        if (!carrierMappingVisible) {\r\n            this.IsShowCarrierMappingComponent = false;\r\n        }\r\n        else {\r\n            this.IsShowCarrierMappingComponent = true;\r\n           // this.isShowCarrier = true;\r\n        }\r\n\r\n    }\r\n   \r\n    getExternalCompanies() {\r\n        this.externalMappingsService.getExternalCompanies().subscribe(data => {\r\n            if (data != null && data.length > 0) {\r\n               \r\n                this.externalCompanies = data;\r\n                this.SelectedCompany = this.externalCompanies[0];\r\n            }\r\n        });\r\n    }\r\n    public changeTab(currencyDdlHide: string): void\r\n    {\r\n        if (currencyDdlHide === \"Carrier\") {\r\n            this.isShowCarrier = true;\r\n            this.isShowTerminalmappingCode = false;\r\n        }\r\n        else if (currencyDdlHide === \"Customer\") {\r\n            this.isShow = true;\r\n            this.isShowTerminalmappingCode = false;\r\n            this.isShowCarrier = false;\r\n        }\r\n        else if (currencyDdlHide === \"TerminalCode\") {\r\n            this.isShowTerminalmappingCode = true;\r\n            this.isShowCarrier = false\r\n        }\r\n        else if (currencyDdlHide === \"FuelGroup\") {\r\n           // this.isShow = false;\r\n            this.isShowCarrier = false;\r\n            this.isShowTerminalmappingCode = false;\r\n            this.isShowFuelGroup = true;\r\n            \r\n        }\r\n        else {\r\n            this.isShow = !this.isShow;\r\n            this.isShowTerminalmappingCode = false;\r\n            this.isShowCarrier = false\r\n            this.isShowFuelGroup = false;\r\n\r\n        }\r\n    }\r\n\r\n    public onCountryChange() {\r\n    localStorage.setItem('countryFilterType', <string>this.CountryFilter);\r\n}\r\n\r\ncountryChanged(event: any) {\r\n    this.IsShowProductMappingComponent = false;\r\n    this.SelectedCountryId = (event.target.value == \"null\" || event.target.value == null) ? 1 : Number(event.target.value);\r\n    this.IsShowProductMappingComponent = true;\r\n}\r\n    companyChanged(event: any) {\r\n        if (event != null) {\r\n            this.SelectedCompany = this.externalCompanies.find(t => t.Id == event.target.value);\r\n        }     \r\n    }\r\n    private checkWindowSelection(): void {\r\n    this.locationViewType = (localStorage.getItem('locationViewType')) ? (localStorage.getItem('locationViewType')) : 1;\r\n    this.CountryFilter = (localStorage.getItem('countryFilterType')) ? (localStorage.getItem('countryFilterType')) : (localStorage.getItem('countryIdForDashboard') ? localStorage.getItem('countryIdForDashboard') : 1);\r\n}\r\n\r\ngetCountries() {\r\n    this.carrierService.GetCountries(this.CurrentCompanyId).subscribe(data => {\r\n        if (data != null) {\r\n            if (data.ServingCountries != null && data.ServingCountries.length > 1) {\r\n                this.ServingCountries = data.ServingCountries;\r\n                this.CountryList = data.CountryList as DropdownItem[];\r\n                if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n                    defaultCountryId = data.DefaultCountryId;\r\n                    this.SelectedCountryId = Number(data.DefaultCountryId);\r\n                }\r\n            }\r\n            else {\r\n                this.isShowCountryDDL = false;\r\n            }\r\n        }\r\n    });\r\n}\r\n}\r\n","<div class=\"small-tab\" id=\"self-service-alias-tab\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row mb10\">\r\n                <div class=\"col-2 text-right\">\r\n                    <select (change)=\"companyChanged($event)\" class=\"form-control\">\r\n                        <option *ngFor=\"let company of externalCompanies\" [value]=\"company.Id\" [selected]=\"SelectedCompany.Id==company.Id\">{{company.Name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-10\" *ngIf=\"SelectedCompany?.Id == 1\">\r\n                    <div class=\"float-right text-right\" *ngIf=\"isShowCountryDDL\">\r\n                        <div class=\"form-group mb0\">\r\n                            <select class=\"form-control\" (change)=\"countryChanged($event)\">\r\n                                <option *ngFor=\"let country of CountryList\" [value]=\"country.Id\" [selected]=\"SelectedCountryId==country.Id\">{{country.Code}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- Third party Mapping Start -->\r\n            <div class=\"value-mapping\" *ngIf=\"SelectedCompany?.Id == 1\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2\">\r\n                        <div class=\"float-left text-left mb10\" *ngIf=\"IsShowCarrierMappingComponent\">\r\n                            <ul class=\"nav nav-tabs mb5\" role=\"tablist\">\r\n                                <li class=\"nav-item\">\r\n                                    <a class=\"nav-link active fs16\" data-toggle=\"tab\" href=\"#carrier-mapping-container\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" (click)=\"changeTab('Carrier')\">Carrier Mapping</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"nav flex-column nav-pills\" *ngIf=\"!IsShowCarrierMappingComponent\">\r\n                            <a class=\"nav-link fs14 active\" id=\"home-tab\" data-toggle=\"pill\" href=\"#product-mapping-container\" (click)=\"changeTab('Product')\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Product</a>\r\n                            <a class=\"nav-link fs14\" id=\"profile-tab\" data-toggle=\"pill\" href=\"#customer-mapping-container\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\" (click)=\"changeTab('Customer')\">Customer</a>\r\n                            <a class=\"nav-link fs14\" id=\"contact-tab\" data-toggle=\"pill\" href=\"#carrier-mapping-container\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\" (click)=\"changeTab('Carrier')\">Carrier</a>\r\n                            <a class=\"nav-link fs14\" id=\"contact-tab\" data-toggle=\"pill\" href=\"#terminal-mapping-container\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\" (click)=\"changeTab('Terminal')\">Terminal</a>\r\n                            <a class=\"nav-link fs14\" id=\"contact-tab\" data-toggle=\"pill\" href=\"#terminal-code-mapping-container\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\" (click)=\"changeTab('TerminalCode')\">Terminal Item Code</a>\r\n                        </div>\r\n                    </div>\r\n                    <!--Start: Show only carrier mapping tab for buyer user/company only-->\r\n                    <div class=\"tab-content col-sm-10\" *ngIf=\"IsShowCarrierMappingComponent\">\r\n                        <div id=\"carrier-mapping-container\" class=\"tab-pane fade show active\">\r\n                            <div *ngIf=\"isShowCarrier\">\r\n                                <app-company-carrier-mapping [countryId]=\"SelectedCountryId\"></app-company-carrier-mapping>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--End-->\r\n                    <div class=\"tab-content col-sm-10\" *ngIf=\"!IsShowCarrierMappingComponent\">\r\n                        <div id=\"product-mapping-container\" class=\"tab-pane fade show active\">\r\n                            <div>\r\n                                <!--<*ngIf=\"!isShow\">-->\r\n                                <app-product-mapping *ngIf=\"IsShowProductMappingComponent\" [countryId]=\"SelectedCountryId\"></app-product-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"customer-mapping-container\" class=\"tab-pane fade\">\r\n                            <div>\r\n                                <app-customer-mapping></app-customer-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"carrier-mapping-container\" class=\"tab-pane fade\">\r\n                            <div *ngIf=\"isShowCarrier\">\r\n                                <app-company-carrier-mapping [countryId]=\"SelectedCountryId\"></app-company-carrier-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"terminal-mapping-container\" class=\"tab-pane fade\">\r\n                            <div>\r\n                                <app-terminal-mapping [countryId]=\"SelectedCountryId\"></app-terminal-mapping>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"terminal-code-mapping-container\" class=\"tab-pane fade\">\r\n                            <div *ngIf=\"isShowTerminalmappingCode\">\r\n                                <app-terminal-item-code-mapping [countryId]=\"SelectedCountryId\"></app-terminal-item-code-mapping>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- Third party Mapping End -->\r\n            <!-- PDI Mapping Start -->\r\n            <div class=\"pdi-entity-mapping mt10\" *ngIf=\"SelectedCompany?.Id == 2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2 \">\r\n                        <div class=\"nav flex-column nav-pills\" role=\"tablist\">\r\n                            <a class=\"nav-link fs14 active\" id=\"customer-tab\" data-toggle=\"pill\" href=\"#customer-container\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" (click)=\"pdiTabName = 'CUSTOMERS'\">Customer</a>\r\n                            <a class=\"nav-link fs14\" id=\"cust-location-tab\" data-toggle=\"pill\" href=\"#cust-location-container\" role=\"tab\" aria-controls=\"cust-location\" aria-selected=\"false\" (click)=\"pdiTabName = 'CUSTOMERLOCATIONS'\">Customer Location</a>\r\n                            <a class=\"nav-link fs14\" id=\"vendor-tab\" data-toggle=\"pill\" href=\"#vendor-container\" role=\"tab\" aria-controls=\"vendor\" aria-selected=\"false\" (click)=\"pdiTabName = 'VENDORS'\">Vendors</a>\r\n                            <a class=\"nav-link fs14\" id=\"products-tab\" data-toggle=\"pill\" href=\"#products-container\" role=\"tab\" aria-controls=\"products\" aria-selected=\"false\" (click)=\"pdiTabName = 'PRODUCTS'\">Products</a>\r\n                            <a class=\"nav-link fs14\" id=\"terminals-tab\" data-toggle=\"pill\" href=\"#terminals-container\" role=\"tab\" aria-controls=\"terminals\" aria-selected=\"false\" (click)=\"pdiTabName = 'TERMINALS'\">Terminals</a>\r\n                            <a class=\"nav-link fs14\" id=\"sites-tab\" data-toggle=\"pill\" href=\"#sites-container\" role=\"tab\" aria-controls=\"sites\" aria-selected=\"false\" (click)=\"pdiTabName = 'SITES'\">Sites</a>\r\n                            <a class=\"nav-link fs14\" id=\"carriers-tab\" data-toggle=\"pill\" href=\"#carriers-container\" role=\"tab\" aria-controls=\"carriers\" aria-selected=\"false\" (click)=\"pdiTabName = 'CARRIERS'\">Carriers</a>\r\n                            <a class=\"nav-link fs14\" id=\"driver-tab\" data-toggle=\"pill\" href=\"#driver-container\" role=\"tab\" aria-controls=\"driver\" aria-selected=\"false\" (click)=\"pdiTabName = 'DRIVERS'\">Driver</a>\r\n                            <a class=\"nav-link fs14\" id=\"vehical-tab\" data-toggle=\"pill\" href=\"#vehical-container\" role=\"tab\" aria-controls=\"vehical\" aria-selected=\"false\" (click)=\"pdiTabName = 'VEHICLE'\">Vehicle</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-10\">\r\n                        <div class=\"tab-content\">\r\n                            <div id=\"customer-container\" *ngIf=\"pdiTabName == 'CUSTOMERS'\" class=\"tab-pane fade show active\">\r\n                                <app-external-customer-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-customer-mappings>\r\n                            </div>\r\n                            <div id=\"cust-location-container\" *ngIf=\"pdiTabName == 'CUSTOMERLOCATIONS'\" class=\"tab-pane fade\">\r\n                                <app-external-customerlocation-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-customerlocation-mappings>\r\n                            </div>\r\n                            <div id=\"sites-container\" *ngIf=\"pdiTabName == 'SITES'\" class=\"tab-pane fade\">\r\n                                <app-external-bulk-plant-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-bulk-plant-mappings>\r\n                            </div>\r\n                            <div id=\"carriers-container\" *ngIf=\"pdiTabName == 'CARRIERS'\" class=\"tab-pane fade\">\r\n                                <app-external-carrier-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-carrier-mappings>\r\n                            </div>\r\n                            <div id=\"terminals-container\" *ngIf=\"pdiTabName == 'TERMINALS'\" class=\"tab-pane fade\">\r\n                                <app-external-terminal-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-terminal-mappings>\r\n                            </div>\r\n                            <div id=\"products-container\" *ngIf=\"pdiTabName == 'PRODUCTS'\" class=\"tab-pane fade\">\r\n                                <app-external-product-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-product-mappings>\r\n                            </div>\r\n                            <div id=\"driver-container\" *ngIf=\"pdiTabName == 'DRIVERS'\" class=\"tab-pane fade\">\r\n                                <app-external-driver-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-driver-mappings>\r\n                            </div>\r\n                            <div id=\"vehical-container\" *ngIf=\"pdiTabName == 'VEHICLE'\" class=\"tab-pane fade\">\r\n                                <app-external-vehicle-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-vehicle-mappings>\r\n                            </div>\r\n                            <div id=\"vendor-container\" *ngIf=\"pdiTabName == 'VENDORS'\" class=\"tab-pane fade\">\r\n                                <app-external-supplier-mappings [thirdPartyCompanyId]=\"SelectedCompany.Id\"></app-external-supplier-mappings>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- PDI Mapping End -->\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { SelfServiceAliasComponent } from './self-service-alias.component';\r\nimport { ProductMappingComponent } from './product-mapping/product-mapping.component';\r\nimport { CustomerMappingComponent } from './customer-mapping/customer-mapping.component';\r\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\r\nimport { CompanyCarrierMappingComponent } from './company-carrier-mapping/company-carrier-mapping.component';\r\nimport { EditCarrierMappingComponent } from './edit-carrier-mapping/edit-carrier-mapping.component';\r\nimport { TerminalMappingComponent } from './terminal-mapping/terminal-mapping.component';\nimport { TerminalItemCodeMappingComponent } from './terminal-item-code-mapping/terminal-item-code-mapping.component';\nimport { CreateTerminalItemCodeComponent } from './create-terminal-item-code/create-terminal-item-code.component';\r\nimport { ExternalCustomerMappingsComponent } from './external-entity-mappings/external-customer-mappings/external-customer-mappings.component';\nimport { ExternalCustomerlocationMappingsComponent } from './external-entity-mappings/external-customerlocation-mappings/external-customerlocation-mappings.component';\nimport { ExternalProductMappingsComponent } from './external-entity-mappings/external-product-mappings/external-product-mappings.component';\nimport { ExternalSupplierMappingsComponent } from './external-entity-mappings/external-supplier-mappings/external-supplier-mappings.component';\nimport { ExternalTerminalMappingsComponent } from './external-entity-mappings/external-terminal-mappings/external-terminal-mappings.component';\nimport { ExternalDriverMappingsComponent } from './external-entity-mappings/external-driver-mappings/external-driver-mappings.component';\nimport { ExternalCarrierMappingsComponent } from './external-entity-mappings/external-carrier-mappings/external-carrier-mappings.component';\nimport { ExternalBulkPlantMappingsComponent } from './external-entity-mappings/external-bulk-plant-mappings/external-bulk-plant-mappings.component';\nimport { ExternalVehicleMappingsComponent } from './external-entity-mappings/external-vehicle-mappings/external-vehicle-mappings.component';\r\n\r\nconst routeSelfService: Routes = [\r\n    {\r\n        path: '',\r\n        component: SelfServiceAliasComponent\r\n    },\r\n\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SelfServiceAliasComponent,\r\n        ProductMappingComponent,\r\n        CustomerMappingComponent,\r\n        EditCustomerComponent,\r\n        CompanyCarrierMappingComponent,\r\n        EditCarrierMappingComponent,\r\n        TerminalMappingComponent,\r\n        TerminalItemCodeMappingComponent,\r\n        CreateTerminalItemCodeComponent,\r\n        ExternalCustomerMappingsComponent,\r\n        ExternalCustomerlocationMappingsComponent,\r\n        ExternalProductMappingsComponent,\r\n        ExternalSupplierMappingsComponent,\r\n        ExternalTerminalMappingsComponent,\r\n        ExternalDriverMappingsComponent,\r\n        ExternalCarrierMappingsComponent,\r\n        ExternalBulkPlantMappingsComponent,\r\n        ExternalVehicleMappingsComponent,\r\n    ],\r\n    imports: [\r\n        SharedModule,\r\n        DirectiveModule,\r\n        DataTablesModule,\r\n        RouterModule.forChild(routeSelfService)\r\n    ]\r\n})\r\nexport class SelfServiceAliasModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject, from } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Declarations } from 'src/app/declarations.module';\nimport { HttpGenericService } from 'src/app/http-generic.service';\nimport { CreateTerminalItemCodeComponent } from '../create-terminal-item-code/create-terminal-item-code.component';\nimport { TerminalItemCodeMappingModel } from '../models/TerminalItemCodeMappingModel';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\n\n@Component({\n    selector: 'app-terminal-item-code-mapping',\n    templateUrl: './terminal-item-code-mapping.component.html',\n    styleUrls: ['./terminal-item-code-mapping.component.css']\n})\nexport class TerminalItemCodeMappingComponent implements OnInit, AfterViewInit, OnChanges {\n    @Input() countryId: any;\n    title = 'Create';\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @ViewChild('openSidePannel') public openSidePannel: ElementRef;\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\n    @ViewChild(CreateTerminalItemCodeComponent) public createTerminalItemCodeComponent: CreateTerminalItemCodeComponent;\n    terminalMappingList: TerminalItemCodeMappingModel[] = [];\n\n    public dtOptions: any = {};\n    public dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean;\n    public IsValidForm: boolean = true;\n    public popoverSaveTitle: string = 'Save the change(s)?';\n    public popoverDeleteTitle: string = 'Are you sure, want to delete?';\n    public confirmButtonText: string = 'Yes';\n    public cancelButtonText: string = 'No';\n    public IsShowBulkUploadPopup: boolean = false;\n    public SelectedFiles: File[] = [];\n    public MaxFileUploadSize: number = 1048576; // 1MB\n    GetTerminalSupplierUrl = '/Carrier/SelfServiceAlias/GetTerminalItemCodeMappings'\n    DeleteTerminalItemCodeMappingUrl = '/Carrier/SelfServiceAlias/DeleteTerminalItemCodeMapping'\n\n    constructor(private httpService: HttpGenericService, private carrierService: CarrierService) { }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            aaSorting: [],\n            orderable: false,\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Terminal Item Code Mapping', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Terminal Item Code Mapping', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n\n        this.getTerminalItemCodeMapping();\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        if (change.countryId && change.countryId.currentValue) {\n            this.countryId = change.countryId.currentValue;\n            if (change.countryId.previousValue && change.countryId.currentValue != change.countryId.previousValue) {\n                this.getTerminalItemCodeMapping();\n            }\n        }\n\n    }\n\n\n    filterGrid() {\n        $(\"#terminal-item-code-datatable\").DataTable().clear().destroy();\n    }\n    ngAfterViewInit(): void {\n        this.dtTrigger.next();\n    }\n\n    private getTerminalItemCodeMapping() {\n        this.IsLoading = true;\n        this.httpService.postData(`${this.GetTerminalSupplierUrl}`, { CountryId: this.countryId }).pipe(first()).subscribe(result => {\n            this.IsLoading = false;\n            this.terminalMappingList = result;\n            this.datatableRerender();\n        });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                dtInstance.destroy();\n                this.dtTrigger.next();\n            });\n        }\n    }\n\n    public editTerminalMapping(item: TerminalItemCodeMappingModel) {\n        this.title = 'Edit';\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.id.setValue(item.Id);\n        var obj = this.createTerminalItemCodeComponent.TerminalSupplierList.filter(f => f.Id == item.TerminalSupplierId)\n            .map(m => { delete m.Code; return m; });\n        if (obj) {\n\n            this.createTerminalItemCodeComponent.selectedTerminalSupplier = [];\n            this.createTerminalItemCodeComponent.selectedTerminalSupplier.push(obj);\n            this.createTerminalItemCodeComponent.terminalmappingForm.controls.terminalSupplierId.setValue(obj);\n        }\n        var obj1 = this.createTerminalItemCodeComponent.TerminalSupplierDescList.filter(f => f.Id == item.ItemDescriptionId)\n            .map(m => { delete m.Code; return m; });;\n\n        if (obj1) {\n            this.createTerminalItemCodeComponent.selectedItemDesc = [];\n            this.createTerminalItemCodeComponent.selectedItemDesc.push(obj1);\n            this.createTerminalItemCodeComponent.terminalmappingForm.controls.itemDescriptionId.setValue(obj1);\n        }\n\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.effectiveDate.setValue(item.EffectiveDate);\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.expiryDate.setValue(item.ExpiryDate);\n        this.createTerminalItemCodeComponent.terminalmappingForm.controls.itemCode.setValue(item.ItemCode);\n    }\n\n    public addTerminalItemCode() {\n        this.title = 'Create';\n        this.createTerminalItemCodeComponent.terminalmappingForm.reset();\n    }\n\n    getOutput($event) {\n        if ($event) {\n            this.openSidePannel.nativeElement.click();\n            this.getTerminalItemCodeMapping();\n        }\n    }\n\n    deleteTerminalItemCode(item: TerminalItemCodeMappingModel) {\n        this.IsLoading = true;\n        this.httpService.postData(`${this.DeleteTerminalItemCodeMappingUrl}`, { id: item.Id }).pipe(first()).subscribe(result => {\n            this.IsLoading = false;\n            if (result.StatusCode == 0) {\n                Declarations.msgsuccess(result.StatusMessage, undefined, undefined);\n                this.getTerminalItemCodeMapping();\n            } else\n                Declarations.msgerror(result.StatusMessage, undefined, undefined);\n        });\n    }\n    showBulkUploadPopup() {\n        this.IsShowBulkUploadPopup = true;\n    }\n\n    closePopup() {\n        this.IsShowBulkUploadPopup = false;\n    }\n\n    selectFiles(files: File[]) {\n        if (files != null && files != undefined && files.length > 0)\n            this.SelectedFiles = files;\n    }\n\n    uploadTerminalItemCodeMappingFile() {\n        var files = this.SelectedFiles;\n        if (files.length === 0)\n            return;\n\n        const formData = new FormData();\n        for (var file of files) {\n            if (!this.isValidFile(file)) {\n                return;\n            }\n            formData.append(file.name, file);\n        }\n\n        this.IsLoading = true;\n        this.carrierService.postBulkUploadTerminalItemCodeMappingTemplate(formData).subscribe(data => {\n            this.IsLoading = false;\n            if (data.StatusCode == 0) {\n                this.CloseBulkUploadPopup.nativeElement.click();\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                this.SelectedFiles = [];\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    isValidFile(file: File) {\n        var isValid = true;\n        var extension = this.getExtension(file.name);\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        if (file.size > this.MaxFileUploadSize) {\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\n            isValid = false;\n            return isValid;\n        }\n\n        return isValid;\n    }\n\n    downloadCsvTemplate() {\n        this.IsLoading = true;\n        var timestamp = new Date().getTime();\n        this.carrierService.downloadTerminalItemCodeMappingTemplate(timestamp).subscribe(blob => {\n            const a = document.createElement('a')\n            const objectUrl = URL.createObjectURL(blob)\n            a.href = objectUrl\n            a.download = 'TerminalItemCodeMapping_Template.csv';\n            a.click();\n            URL.revokeObjectURL(objectUrl);\n\n            this.IsLoading = false;\n        });\n    }\n\n    getExtension(fileName) {\n        // extract file name from full path ...\n        var basename = fileName.split(/[\\\\/]/).pop();\n\n        // (supports `\\\\` and `/` separators)\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\n\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\n            return \"\";                             //  `.` not found (-1) or comes first (0)\n\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\n    }\n}\n","<div class=\"row\">\r\n    <!-- <div class=\"col-sm-12\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-right pa0\" data-target=\"raisedr\"\r\n            onclick=\"slidePanel('#terminal_i_code_map','40%')\" (click)=\"addTerminalItemCode()\"><i\r\n                class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Terminal Item Code</button>\r\n    </div> -->\r\n    <div class=\"col-sm-6\">\r\n        <button type=\"button\" #openSidePannel class=\"btn btn-link float-left pa0 mt10\" data-target=\"raisedr\"\r\n            onclick=\"slidePanel('#terminal_i_code_map','45%')\" (click)=\"addTerminalItemCode()\">\r\n            <i class=\"fas fa-plus-circle fs18 mr5\"></i> Create\r\n            Terminal Item Code\r\n        </button>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n        <button id=\"showBulkUploadPopupBtn\" type=\"button\" class=\"btn btn-primary float-right mb5 valid\"\r\n            (click)=\"showBulkUploadPopup()\" data-toggle=\"modal\" data-target=\"#bulkUploadTerminalModalPopup\">Bulk\r\n            Upload</button>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-terminal-item-code\" class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"tSName\">Terminal Supplier</th>\r\n                                    <th data-key=\"tItem\">Terminal Item</th>\r\n                                    <th data-key=\"tItemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"tEffectiveDate\">Effective Date</th>\r\n                                    <th data-key=\"tExpiryDate\">Expiry Date</th>\r\n                                    <th data-key=\"Action\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let terminal of terminalMappingList\">\r\n                                    <td>{{terminal.TerminalSupplier}}</td>\r\n                                    <td>{{terminal.ItemDescription}}</td>\r\n                                    <td> {{terminal.ItemCode}} </td>\r\n                                    <td>{{terminal.EffectiveDate}}</td>\r\n                                    <td>{{terminal.ExpiryDate}}</td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\"\r\n                                            onclick=\"slidePanel('#terminal_i_code_map','40%')\"\r\n                                            (click)=\"editTerminalMapping(terminal)\"><i\r\n                                                class=\"fas fa-pencil-square-o color-blue fs16\" alt=\"Update\"\r\n                                                title=\"Update\"></i></button>\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                            [popoverTitle]=\"popoverDeleteTitle\" [confirmText]=\"confirmButtonText\"\r\n                                            [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                            (confirm)=\"deleteTerminalItemCode(terminal)\"><i\r\n                                                class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\"\r\n                                                title=\"Delete\"></i></button>\r\n                                        <!-- <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                            [popoverTitle]=\"popoverSaveTitle\" [confirmText]=\"confirmButtonText\"\r\n                                            [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                            (confirm)=\"updateTerminalId(terminal)\"\r\n                                            (cancel)=\"cancelUpdateTerminalNames(terminal)\"><i\r\n                                                class=\"fs21 fas fa-save color-green\" alt=\"Update\"\r\n                                                title=\"Update\"></i></button>\r\n                                        <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover\r\n                                            [popoverTitle]=\"popoverDeleteTitle\" [confirmText]=\"confirmButtonText\"\r\n                                            [cancelText]=\"cancelButtonText\" placement=\"bottom\"\r\n                                            (confirm)=\"deleteMapping(terminal.Id, terminal.CreatedByCompanyId)\"><i\r\n                                                class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\"\r\n                                                title=\"Delete\"></i></button> -->\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n<div class=\"side-panel\" id=\"terminal_i_code_map\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt10 pb0\">\r\n            <a class=\"ml20 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{title}} Terminal Item Code Mapping</h3>\r\n        </div>\r\n        <div class=\"pt10 pb10 pl20 pr20\">\r\n            <app-create-terminal-item-code [countryId]=\"countryId\" (result)=\"getOutput($event)\">\r\n            </app-create-terminal-item-code>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"bulkUploadTerminalModalPopup\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowBulkUploadPopup\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header pt0 pb5\">\r\n                <h4 class=\"modal-title\">Item Code Mapping Bulk Upload</h4>\r\n                <button type=\"button\" #btnCloseBulkUploadPopup class=\"close color-grey\" data-dismiss=\"modal\"\r\n                    aria-label=\"Close\" (click)=\"closePopup()\">\r\n                    <i class=\"fa fa-close fs21 mt15\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"mb10\">\r\n                    <span class=\"fa fa-download mr10 mt10\"></span>\r\n                    <a role=\"button\" (click)=\"downloadCsvTemplate()\" class=\"mb5 btn-download\">Download Template</a>\r\n                </div>\r\n                <div class=\"mb5 mt5\">\r\n                    <input type=\"file\" id=\"bulkUploadFile\" (change)=\"selectFiles($event.target.files)\" accept=\".csv\">\r\n                </div>\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsLoading\"><span\r\n                        class='spinner-dashboard pa'></span></div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\"\r\n                    (click)=\"uploadTerminalItemCodeMappingFile()\">Upload</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { LocationDetailsModel, TerminalMappingModel } from 'src/app/carrier/models/location';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { LocationService } from 'src/app/location/services/location.service';\r\nimport { DropDownItem } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\r\ndeclare var currentCompanyId: any;\r\ndeclare var IsLiftFileValidationEnabled: any;\r\n\r\n@Component({\r\n  selector: 'app-terminal-mapping',\r\n  templateUrl: './terminal-mapping.component.html',\r\n  styleUrls: ['./terminal-mapping.component.css']\r\n})\r\nexport class TerminalMappingComponent implements OnInit, AfterViewInit  {\r\n    public TerminalMappingForm: FormGroup;\r\n    public dtOptions: any = {};\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    public selected: number = 0;\r\n    public TerminalsList: LocationDetailsModel[] = [];\r\n    public StateList: DropdownItem[] = [];\r\n    public CityList: DropdownItem[] = [];\r\n    public TerminalList: DropdownItem[] = [];\r\n    public IsLoading: boolean;\r\n    public SelectedCountryId: number;\r\n    public SelectedTerminalId: DropdownItem[] = [];\r\n    public CurrentCompanyId: any;\r\n    public ddlSettingsById = {};\r\n    public ddlSettingsByIdSingleSelect = {};\r\n    public ddlSettingsByCode = {};\r\n    public ddlSettingsForTerminal = {};\r\n    public IsValidForm: boolean = true;\r\n    public existingAssignedTerminalId: string = '';\r\n    public nameToUpdate: string = '';\r\n    public existingId: number = 0;\r\n    public popoverSaveTitle: string = 'Save the change(s)?';\r\n    public popoverDeleteTitle: string = 'Are you sure, want to delete?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    @Input() countryId: number;\r\n\r\n    public TerminalSupplierList: DropDownItem[];\r\n    public IsLiftFileValidationEnabled: boolean = false;\r\n\r\n    constructor(private fb: FormBuilder,private carrierService: CarrierService, private locationService: LocationService) {\r\n\r\n        this.TerminalMappingForm = this.fb.group({\r\n            States: this.fb.control([], [Validators.required]),\r\n            Cities: this.fb.control([]),\r\n            SelectedTerminal: this.fb.control([], [Validators.required]),\r\n            MyTerminalId: this.fb.control('', [Validators.required]),\r\n            CompanyId: this.fb.control(0),\r\n            Terminals: this.fb.control(0),\r\n            SelectedTerminalSupplier: this.fb.control([]),\r\n        });\r\n    };\r\n\r\n    ngOnInit() {\r\n\r\n        this.ddlSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsForTerminal = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByCode = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.ddlSettingsByIdSingleSelect = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        this.initializeUserTerminalData();\r\n       // this.loadData();\r\n        this.CurrentCompanyId = Number(currentCompanyId);\r\n        this.IsLiftFileValidationEnabled = IsLiftFileValidationEnabled;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.clearForm();\r\n    }\r\n   \r\n    \r\n    loadData() {\r\n        this.SelectedCountryId = Number(this.countryId);\r\n\r\n        if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\r\n            this.getDefaultServingCountry();\r\n        }\r\n        else {\r\n            this.getStates();\r\n            this.getAllUserTerminalData();\r\n        }\r\n    }\r\n\r\n\r\n    getDefaultServingCountry() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n            this.getStates();\r\n            this.getAllUserTerminalData();\r\n        });\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#terminal-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    onStateSelect(state: any) {\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateDeSelect(state: any) {\r\n        this.TerminalMappingForm.get('Cities').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminalSupplier').patchValue([]);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    onStateSelectAll(states: any) {\r\n        this.TerminalMappingForm.get('States').patchValue(states);\r\n        this.getCitiesByStateId();\r\n        this.getTerminals();\r\n    }\r\n\r\n    getTerminals() {\r\n        var selectedStates = this.TerminalMappingForm.get('States').value as DropdownItem[];\r\n        var selectedCities = this.TerminalMappingForm.get('Cities').value as DropdownItem[];\r\n\r\n        if (selectedStates.length == 0) {\r\n            this.TerminalMappingForm.get('States').patchValue([]);\r\n            this.TerminalList = [];\r\n            this.TerminalSupplierList = [];\r\n            return;\r\n        }\r\n\r\n        var input = new TerminalMappingModel();\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(s => s.Id);\r\n            input.StateIds = stateIds.join(',');\r\n        }\r\n        if (selectedCities != null && selectedCities != undefined && selectedCities.length > 0) {\r\n            var cityIds = selectedCities.map(s => s.Name);\r\n            input.CityIds = cityIds.join(',');\r\n        }\r\n        input.CountryId = this.SelectedCountryId;\r\n        this.IsLoading = true;\r\n        this.carrierService.getTerminalsForMapping(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalList = data as DropdownItem[];\r\n        });\r\n        this.getTerminalSuppliers();\r\n    }\r\n\r\n    onStateDeSelectAll() {\r\n        this.TerminalMappingForm.get('Cities').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminalSupplier').patchValue([]);\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        this.TerminalSupplierList = [];\r\n        \r\n    }\r\n\r\n    getCitiesByStateId() {\r\n        var selectedStates = this.TerminalMappingForm.get('States').value as DropdownItem[];\r\n\r\n        if (selectedStates != null && selectedStates != undefined && selectedStates.length > 0) {\r\n            var stateIds = selectedStates.map(m => m.Id);\r\n            this.getCities(stateIds);\r\n        }\r\n        else {\r\n            this.CityList = [];\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getCountryFilter(): any {\r\n        return (localStorage.getItem('countryFilterType')) ? (localStorage.getItem('countryFilterType')) : (localStorage.getItem('countryIdForDashboard') ? localStorage.getItem('countryIdForDashboard') : 1);\r\n    }\r\n\r\n    getStates() {\r\n        this.IsLoading = true;\r\n        if (this.SelectedCountryId != undefined && this.SelectedCountryId > 0) {\r\n            this.carrierService.getStates(this.SelectedCountryId).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.StateList = data as DropdownItem[];\r\n            });\r\n        }\r\n    }\r\n\r\n    getCities(stateId: number[]) {\r\n        \r\n        this.IsLoading = true;\r\n        this.carrierService.getCities(stateId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.CityList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    onCitySelect(city: any) {\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelect(city: any) {\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCitySelectAll(cities: any) {\r\n        this.TerminalMappingForm.get('SelectedTerminal').patchValue([]);\r\n        this.TerminalMappingForm.get('Cities').patchValue(cities);\r\n        this.getTerminals();\r\n    }\r\n\r\n    onCityDeSelectAll() {\r\n        this.TerminalMappingForm.get('SelectedTerminal').setValue([]);\r\n        this.getTerminals();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n    }\r\n\r\n    clearForm() {\r\n        this.TerminalMappingForm.reset();\r\n        this.TerminalMappingForm.get('States').setValue([]);\r\n        this.TerminalMappingForm.get('Cities').setValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminal').setValue([]);\r\n        this.TerminalMappingForm.get('SelectedTerminalSupplier').setValue([]);\r\n\r\n        this.existingAssignedTerminalId = '';\r\n        this.nameToUpdate = '';\r\n        this.TerminalList = [];\r\n        this.CityList = [];\r\n        this.TerminalSupplierList = [];\r\n        $(\"#terminal-grid-datatable\").DataTable().clear().destroy();\r\n        this.loadData();\r\n    }\r\n\r\n    selectchange(args) {\r\n        this.SelectedTerminalId = args.target.value;\r\n    } \r\n\r\n    onSubmit() {\r\n        let TermSupplierId = 0;\r\n        let TerminalId = 0;\r\n        var AssignedTerminalId = this.TerminalMappingForm.get('MyTerminalId').value;\r\n        var objTerminalId = this.TerminalMappingForm.get('SelectedTerminal').value as DropdownItem[];\r\n        var SelectedTermSupplier = this.TerminalMappingForm.get('SelectedTerminalSupplier').value as DropDownItem[];\r\n\r\n        if (SelectedTermSupplier != null && SelectedTermSupplier.length> 0) {\r\n            TermSupplierId = SelectedTermSupplier[0].Id;\r\n        }\r\n        if (objTerminalId.length) {\r\n             TerminalId = objTerminalId[0].Id;\r\n        }\r\n        if ((AssignedTerminalId == undefined || AssignedTerminalId == null || AssignedTerminalId.trim() == '' || TerminalId == 0)\n        ) {\n            if (TerminalId == 0) {\n                Declarations.msgerror('Please provide Terminal Name', undefined, undefined);\n                return;\n            } else {\n                Declarations.msgerror('Please provide Terminal ID', undefined, undefined);\n                return;\n            }\n\n        } else {\n            this.IsValidForm = true;\r\n        }\r\n        var TerminalMappingViewModel =\r\n        {\r\n            Id: 0,\r\n            AssignedTerminalId: AssignedTerminalId,\r\n            TerminalId: TerminalId,\r\n            IsBulkPlant: this.TerminalList.find(f => f.Id == TerminalId).Code == '1' ? true : false,           \r\n            TerminalSupplierId: TermSupplierId\r\n        }\r\n\r\n        this.TerminalMappingForm.get(\"CompanyId\").patchValue(this.CurrentCompanyId);\r\n        \r\n        if (!this.IsValidForm) {\r\n            this.IsValidForm = false;\r\n        }\r\n        else {\r\n            this.checkDuplicateTerminalId(TerminalMappingViewModel);\r\n        }\r\n    }\r\n\r\n    submitForm(TerminalMappingViewModel) {\r\n        this.IsLoading = true;\r\n        this.carrierService.saveTerminalMapping(TerminalMappingViewModel).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n                this.IsLoading = false;\r\n                this.clearForm();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                \r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n               \r\n            }\r\n        });\r\n    }\r\n\r\n    editTerminalId(mapping: LocationDetailsModel, key: string, $event: any) {\r\n        this.nameToUpdate = $event.target.innerText;\r\n        this.existingAssignedTerminalId = mapping.AssignedTerminalId;\r\n        this.existingId = mapping.Id;\r\n    }\r\n\r\n    updateTerminalId(mapping: LocationDetailsModel) {\r\n        if (mapping.Id == this.existingId) {\r\n            mapping.AssignedTerminalId = this.nameToUpdate;\r\n        }\r\n\r\n        if (mapping.AssignedTerminalId.trim() == '') {\r\n            Declarations.msgerror('Please provide My Terminal ID', undefined, undefined);\r\n            return;\r\n        }\r\n        this.checkDuplicateTerminalId(mapping);\r\n    }\r\n\r\n    updateTerminal(mapping: LocationDetailsModel) {\r\n\r\n        this.IsLoading = true;\r\n        this.carrierService.updateTerminalId(mapping).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                \r\n                this.clearForm();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    checkDuplicateTerminalId(TerminalMappingViewModel) {\r\n        this.carrierService.checkDuplicateTerminalId(TerminalMappingViewModel).subscribe(data => {\r\n            if (data.StatusCode == 0) {\r\n\r\n                if (TerminalMappingViewModel.Id == 0) {\r\n                    this.submitForm(TerminalMappingViewModel);\r\n                } else {\r\n                    this.updateTerminal(TerminalMappingViewModel);\r\n                }\r\n            }\r\n\r\n            if (data.StatusCode == 2) {\r\n                this.existingAssignedTerminalId = '';\r\n                this.nameToUpdate = '';\r\n                $(\"#terminal-grid-datatable\").DataTable().clear().destroy();\r\n                this.getAllUserTerminalData();\r\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteMapping(mappingId: number, companyId: number) {\r\n        if (mappingId == undefined || mappingId <= 0)\r\n            return;\r\n        var model = new LocationDetailsModel();\r\n        model.Id = mappingId;\r\n        this.IsLoading = true;\r\n        this.carrierService.postDeleteTerminalMappingById(model).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                this.clearForm();\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelUpdateTerminalNames(mapping: LocationDetailsModel) {\r\n        //mapping.AssignedTerminalId = this.existingAssignedTerminalId;\r\n        this.clearForm();\r\n    }\r\n\r\n\r\n    initializeUserTerminalData() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Terminal Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Terminal Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            aaSorting: [],\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    getAllUserTerminalData() {\r\n        this.IsLoading = true;\r\n        var SelectedCountryId = this.SelectedCountryId;\r\n        this.carrierService.getTerminalMappingGrid(SelectedCountryId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalsList = data as LocationDetailsModel[];\r\n            this.dtTrigger.next();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n      //  this.dtTrigger.next();\r\n    }\r\n\r\n    public getTerminalSuppliers() {\r\n        this.IsLoading = true;\r\n        var selectedCountryId = this.SelectedCountryId;\r\n        this.carrierService.getTerminalSupplier(selectedCountryId).subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.TerminalSupplierList = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"TerminalMappingForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"well col-sm-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>State</label>\r\n                            <ng-multiselect-dropdown formControlName=\"States\"\r\n                                                     [placeholder]=\"'Select State(s)'\"\r\n                                                     [settings]=\"ddlSettingsById\"\r\n                                                     [data]=\"StateList\"\r\n                                                     (onSelect)=\"onStateSelect($event)\" (onDeSelect)=\"onStateDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onStateSelectAll($event)\" (onDeSelectAll)=\"onStateDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>City</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Cities\"\r\n                                                     [placeholder]=\"'Select City(s)'\"\r\n                                                     [settings]=\"ddlSettingsByCode\"\r\n                                                     [data]=\"CityList\"\r\n                                                     (onSelect)=\"onCitySelect($event)\" (onDeSelect)=\"onCityDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onCitySelectAll($event)\" (onDeSelectAll)=\"onCityDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal/Bulk Plant Name<span class=\"color-maroon\">*</span></label>\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedTerminal\"\r\n                                                     [placeholder]=\"'Select Terminal(s)'\"\r\n                                                     [settings]=\"ddlSettingsForTerminal\"\r\n                                                     [data]=\"TerminalList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"!IsValidForm && TerminalMappingForm.get('SelectedTerminal').errors?.required\" class=\"color-maroon\">\r\n                                Terminal is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\" [ngClass]=\"{'pntr-none subSectionOpacity': !IsLiftFileValidationEnabled}\">\r\n                            <label>Terminal Suppliers</label>\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedTerminalSupplier\"\r\n                                                     [placeholder]=\"'Select Terminal Suppliers'\"\r\n                                                     [settings]=\"ddlSettingsForTerminal\" [data]=\"TerminalSupplierList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label>Terminal ID<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" #MyTerminalId formControlName=\"MyTerminalId\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                <div class=\"d-flex flex-row-reverse\">\r\n                    <button id=\"submit-terminal-mapping-form\" type=\"submit\" class=\"mt4 btn btn-default valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" aria-invalid=\"false\">Assign</button>\r\n                    <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n\r\n                </div>\r\n                </div>\r\n        </div>\r\n        \r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadow-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"div-terminal-grid\" class=\"table-responsive\">\r\n                            <table id=\"terminal-grid-datatable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Id\">Id</th> -->\r\n                                        <th data-key=\"tName\">Terminal/Bulk Plant Name</th>\r\n                                        <th data-key=\"tControlNumber\">Control Number</th>\r\n                                        <th data-key=\"AssignedTermSupplierName\">Terminal Supplier Name</th>\r\n                                        <th data-key=\"tAssignedTerminalId\">Terminal Id</th>\r\n\r\n                                        <th data-key=\"Action\">Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let terminal of TerminalsList\">\r\n                                        <!-- <td>{{terminal.Id}}</td> -->\r\n                                        <td>{{terminal.TerminalName}}</td>\r\n                                        <td>{{terminal.ControlNumber == '-' ? \"--\":terminal.ControlNumber}}</td>\r\n                                        <td>\r\n                                            {{terminal.TerminalSupplierName}}\r\n                                        </td>\r\n                                        <td contenteditable=\"true\" class=\"edit-td\" (blur)=\"editTerminalId(terminal, 'AssignedTerminalId', $event)\">\r\n                                            {{terminal.AssignedTerminalId == '' ? \"--\" : terminal.AssignedTerminalId}}\r\n                                        </td>\r\n                                        <td class=\"text-center\">\r\n                                            <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverSaveTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"updateTerminalId(terminal)\" (cancel)=\"cancelUpdateTerminalNames(terminal)\"><i class=\"fs21 fas fa-save color-green\" alt=\"Update\" title=\"Update\"></i></button>\r\n                                            <button type=\"button\" class=\"btn btn-link\" mwlConfirmationPopover [popoverTitle]=\"popoverDeleteTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deleteMapping(terminal.Id, terminal.CreatedByCompanyId)\"><i class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\" title=\"Delete\"></i></button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}