{"version":3,"sources":["./src/app/buyer-wally-board/buyer-locations.component.ts","./src/app/buyer-wally-board/buyer-locations.component.html","./src/app/buyer-wally-board/buyer-wally-board.module.ts","./src/app/buyer-wally-board/sales-data/location-view.component.ts","./src/app/buyer-wally-board/sales-data/location-view.component.html","./src/app/buyer-wally-board/sales-data/priority-view.component.ts","./src/app/buyer-wally-board/sales-data/priority-view.component.html","./src/app/buyer-wally-board/sales-data/tank-view-master.component.ts","./src/app/buyer-wally-board/sales-data/tank-view-master.component.html","./src/app/buyer-wally-board/sales-data/tank-view.component.ts","./src/app/buyer-wally-board/sales-data/tank-view.component.html","./src/app/buyer-wally-board/sales.component.ts","./src/app/buyer-wally-board/sales.component.html","./src/app/buyer-wally-board/wally-dashboard/grid-view.component.ts","./src/app/buyer-wally-board/wally-dashboard/grid-view.component.html","./src/app/buyer-wally-board/wally-dashboard/map-view.component.ts","./src/app/buyer-wally-board/wally-dashboard/map-view.component.html","./src/app/buyer-wally-board/wally-dashboard/wally-dashboard.component.ts","./src/app/buyer-wally-board/wally-dashboard/wally-dashboard.component.html","./src/app/buyer-wally-board/where-is-my-driver.component.ts","./src/app/buyer-wally-board/where-is-my-driver.component.html"],"names":[],"mappings":"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","file":"buyer-wally-board-buyer-wally-board-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, ViewEncapsulation, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Subject, Subscription, BehaviorSubject, from } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { JobLocationDetailsModal, TankMinMaxFill, TankChartHeight, DipTest, JobTankAdditionalDetails, JobAssetDetail, Country, Priority, Supplier, Carrier, TfxModule } from './Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from './services/buyerwallyboard.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { LocationViewComponent } from './sales-data/location-view.component';\r\nimport { InventoryDataCaptureList } from '../app.constants';\r\nexport declare var google: any;\r\ndeclare var currentCompanyId: any;\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n    selector: 'app-buyer-locations',\r\n    templateUrl: './buyer-locations.component.html',\r\n    styleUrls: ['./buyer-locations.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class BuyerLocationsComponent implements OnInit {\r\n    public Map: any;\r\n    public isLoading = false;\r\n    public zoomLevel = 5;\r\n    public jobLocationDataForMap: JobLocationDetailsModal[] = [];\r\n    public opendedJobDetails: JobLocationDetailsModal;\r\n    public clickedAssetsDetails: JobAssetDetail[] = [];\r\n    public countryList: Country[] = [];\r\n    public priorityList: Priority[] = [];\r\n    public supplierList: Supplier[] = [];\r\n    public carrierList: Carrier[] = [];\r\n    public isShowCarrierManaged: boolean = false;\r\n    public selectedCarrierIds: string = '';\r\n    public latestReading: DipTest = new DipTest();\r\n    public chartData = [];\r\n    public demandChartData: any;\r\n    public chartLabels = [];\r\n    public IsFiltersLoaded: boolean = false;\r\n    private setCountryCenterInterval: any;\r\n    public FuelUnit: string; // Used only in demant chart \r\n    public UoM: string = '';\r\n    public chartOptions: ChartOptions;\r\n    public selectedTankMinMax: TankMinMaxFill = new TankMinMaxFill();\r\n    public selectedTankHeight: TankChartHeight = new TankChartHeight();\r\n\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public jobMultiselectSettingsById: IDropdownSettings;\r\n    public multiDropdownSettings: IDropdownSettings;//Added for allowing select all for carrier and supplier\r\n    public priorityselectSettingsById: IDropdownSettings;\r\n    public filteredJobLocationData: JobLocationDetailsModal[] = [];\r\n    public unchangedJobLocationData: JobLocationDetailsModal[] = [];\r\n    public FilterForm: FormGroup;\r\n\r\n    public assetDetails = { assetIndex: 0 };\r\n    public assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    private locationSubscription = new Subscription();\r\n\r\n    public clickViewActive: Boolean = false;\r\n    public clickAssetsPanel: Boolean = false;\r\n    public clickChartsPanel: Boolean = false;\r\n\r\n    public toogleMap: Boolean = true;\r\n    public toogleFilter: Boolean = false;\r\n\r\n    public centerLocationLat = 47.1853106;\r\n    public centerLocationLog = -125.36955;\r\n    private UserCountry = \"USA\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 3\r\n    };\r\n\r\n    public mustGoUrl = \"src/assets/marker-mustgo.svg\";\r\n    public shouldGoUrl = \"src/assets/marker-shouldgo.svg\";\r\n    public couldGoUrl = \"src/assets/marker-couldgo.svg\";\r\n    public noDlrUrl = \"src/assets/marker-nodr.svg\";\r\n    public noImageUrl = \"Content/images/no-image.png\";\r\n    public isChartDataExistSubject: BehaviorSubject<any>;\r\n    subscriptions: Subscription = new Subscription();\r\n    public CurrentCompanyId: any;\r\n    @Input() singleMulti: number;\r\n    SelectedPriorityList = [];\r\n    public SelectedSupplierIds: string;\r\n    SelectedSupplierList = [];\r\n    public SelectedPriorityIds: string;\r\n    public statusList = [];\r\n    SelectedStatusList = [];\r\n    public SelectedStatusesId: string;\r\n    public locationList = [];\r\n    public DefaultLocationList = [];\r\n    SelectedlocationList = [];\r\n    public SelectedLocationIds: string;\r\n    SelectedCarrierList = [];\r\n    public isShowNonRetailJobs: boolean = false;\r\n    public jobIdsEmittedFromSalesComponent: any = [];\r\n    public IsLoadSalesData = true;\r\n    public filterCount : number;\r\n\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    @ViewChild(LocationViewComponent)  locationView : LocationViewComponent;\r\n\r\n    constructor(private buyerwallyboardservice: BuyerwallyboardService, private fb: FormBuilder, private changeDetectorRef: ChangeDetectorRef) {\r\n        this.isChartDataExistSubject = new BehaviorSubject(false);\r\n        this.initializeFilterForm();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.SelectedPriorityList.push({ Id: 1, Name: 'Must Go' });\r\n        this.priorityList = [{\r\n            Id: 1,\r\n            Name: 'Must Go'\r\n        }, {\r\n            Id: 2,\r\n            Name: 'Should Go'\r\n        },\r\n        {\r\n            Id: 3,\r\n            Name: 'Could Go'\r\n        },\r\n        {\r\n            Id: 4,\r\n            Name: 'Unplanned'\r\n        }];\r\n        this.statusList = [{\r\n            Id: 'Scheduled',\r\n            Name: 'Scheduled'\r\n        }, {\r\n            Id: 'DR Created',\r\n            Name: 'DR Created'\r\n        },\r\n        {\r\n            Id: 'No DR',\r\n            Name: 'No DR'\r\n        }];\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.jobMultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.priorityselectSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.getFilterData();\r\n\r\n        // var _this = this;\r\n        // window.addEventListener(\"beforeunload\", function (e) {\r\n        //     _this.SaveFilters();\r\n        //     return;\r\n        // });\r\n    }\r\n\r\n    private fetchJobLocationData(): void {\r\n        this.isLoading = true;\r\n        if (this.jobIdsEmittedFromSalesComponent && this.jobIdsEmittedFromSalesComponent.length) {\r\n            var ids =  []\r\n            this.jobIdsEmittedFromSalesComponent.forEach(res => { ids.push(res.TfxJobId) });\r\n            var jobids = \"\";\r\n            jobids = ids.join();\r\n            //Location Type FIlter\r\n            var selectedLocAttributeId=\"\";\r\n            if( this.FilterForm.controls.selectedLocAttributeList.value &&   this.FilterForm.controls.selectedLocAttributeList.value.length>0){\r\n                var ids = [];\r\n                this.FilterForm.controls.selectedLocAttributeList.value.forEach(res => { ids.push(res.Id) });\r\n                selectedLocAttributeId= ids.join();\r\n            }\r\n\r\n            this.locationSubscription.add(this.buyerwallyboardservice.getJobLocationDetails(jobids,selectedLocAttributeId).subscribe(res => {\r\n                if (res) {\r\n                    this.unchangedJobLocationData = this.jobLocationDataForMap = this.addJobPriority(res['Data']['jobLocationDetails']);\r\n                    // this.locationList = this.unchangedJobLocationData;\r\n                    this.fillSupplierCarrierDropdowns();\r\n                    // this.jobLocationDataForMap = this.applyFilter();\r\n                }\r\n                this.setCountryCentre();\r\n                this.isLoading = false;\r\n            }));\r\n        } else {\r\n            this.unchangedJobLocationData = this.jobLocationDataForMap = [];\r\n            this.setCountryCentre();\r\n            this.isLoading = false;\r\n        }\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.SaveFilters();\r\n    }\r\n\r\n\r\n\r\n    private fillSupplierCarrierDropdowns() {\r\n        this.CurrentCompanyId = Number(currentCompanyId);\r\n        var jobIds = [];\r\n        this.jobLocationDataForMap.map(item => jobIds.push(item.JobID));\r\n        if (jobIds && jobIds.length) {\r\n            var selectedSuppliers = this.FilterForm.get('SelectedSupplierList').value;\r\n            selectedSuppliers = selectedSuppliers.filter(t => { return this.supplierList.filter(el => el.Id == t.Id).length > 0 })\r\n            this.FilterForm.get('SelectedSupplierList').patchValue(selectedSuppliers);\r\n            var selectedCarriers = this.FilterForm.get('SelectedCarrierList').value;\r\n            selectedCarriers = selectedCarriers.filter(t => { return this.carrierList.filter(el => el.Id == t.Id).length > 0 })\r\n            this.FilterForm.get('SelectedCarrierList').patchValue(selectedCarriers);\r\n            this.onSupplierSelect();\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    private initializeFilterForm() {\r\n        this.FilterForm = this.fb.group({\r\n            IsShowAssetJobs: this.fb.control(false),\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            SelectedCarrierList: this.fb.control([]),\r\n            SelectedSupplierList: this.fb.control([]),\r\n            SelectedlocationList: this.fb.control([]),\r\n            SelectedPriorityList: this.fb.control([]),\r\n            SelectedStatusList: this.fb.control([]),\r\n            ToggleMap: this.fb.control(true),\r\n            singleMulti: this.fb.control(this.singleMulti),\r\n            selectedLocAttributeList:this.fb.control([])\r\n        });\r\n    }\r\n    private addJobPriority(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n        if (jobLocationData && jobLocationData.length) {\r\n            jobLocationData.forEach(element => {\r\n                var obj =  this.jobIdsEmittedFromSalesComponent.find(t => t.TfxJobId == element.JobID);\r\n                if(obj)\r\n                {\r\n                    if (obj.Priority == 1) {\r\n                       element.highestPriority = 1;\r\n                       element.iconUrl = this.mustGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 2) {\r\n                        element.highestPriority = 2;\r\n                        element.iconUrl  = this.shouldGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 3) {\r\n                        element.highestPriority = 3;\r\n                        element.iconUrl  =  this.couldGoUrl;\r\n                    }\r\n                    else {\r\n                        element.highestPriority = 4;\r\n                        element.iconUrl  = this.noDlrUrl;\r\n                    }\r\n                }else{\r\n                    element.highestPriority = 4;\r\n                    element.iconUrl  = this.noDlrUrl;\r\n                }                        \r\n            });\r\n        }\r\n        return jobLocationData;\r\n    }\r\n    // private checkMostPriorityJob(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n    //     const jobLocationLength = jobLocationData.length;\r\n    //     for (let i = 0; i < jobLocationLength; i++) {\r\n    //         let deliveryRequests = jobLocationData[i].jobDeliveryRequests;\r\n    //         if (deliveryRequests.length) {\r\n    //             let filteredMustGoDRs = deliveryRequests.filter((data) => data.Priority === 1);\r\n    //             let filteredShoudGoDRs = deliveryRequests.filter((data) => data.Priority === 2);\r\n    //             if (filteredMustGoDRs.length > 0) {\r\n    //                 jobLocationData[i].highestPriority = 1;\r\n    //                 jobLocationData[i].iconUrl = this.mustGoUrl;\r\n    //             }\r\n    //             else if (filteredShoudGoDRs.length > 0) {\r\n    //                 jobLocationData[i].highestPriority = 2;\r\n    //                 jobLocationData[i].iconUrl = this.shouldGoUrl;\r\n    //             }\r\n    //             else {\r\n    //                 jobLocationData[i].highestPriority = 3;\r\n    //                 jobLocationData[i].iconUrl = this.couldGoUrl;\r\n    //             }\r\n    //         } else {\r\n    //             jobLocationData[i].highestPriority = 4;\r\n    //             jobLocationData[i].iconUrl = this.noDlrUrl;\r\n    //         }\r\n    //     }\r\n    //     return jobLocationData;\r\n    // }\r\n\r\n    // private convertToObjectArray(data: string[]): SelectedItem[] {\r\n    //     let modifiedItemArray: SelectedItem[] = [];\r\n    //     data.forEach((item, index) => {\r\n    //         let Item: SelectedItem = { 'Id': 0, 'Name': '' };\r\n    //         Item.Id = index;\r\n    //         Item.Name = item;\r\n    //         modifiedItemArray.push(Item);\r\n    //     })\r\n    //     return modifiedItemArray;\r\n    // }\r\n\r\n    private setCountryCentre(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.Map && (!this.jobLocationDataForMap || this.jobLocationDataForMap.length == 0)) {\r\n                    this.Map.setCenter(new google.maps.LatLng(this.centerLocationLat, this.centerLocationLog));\r\n                    this.Map.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.jobLocationDataForMap.forEach((x: JobLocationDetailsModal) => {\r\n                        bounds.extend(new google.maps.LatLng(x.Latitude, x.Longitude));\r\n                    });\r\n                    if (this.Map && bounds) {\r\n                        this.Map.fitBounds(bounds);\r\n                        this.Map.setCenter(bounds.getCenter());  \r\n                        this.Map.setZoom(5);       \r\n                    }           \r\n                    \r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    private setZoomLevel(): void {\r\n        if (this.jobLocationDataForMap && this.jobLocationDataForMap.length == 0) {\r\n            this.setCountryCentre();\r\n        } else {\r\n            //this.zoomLevel = 10;\r\n        }\r\n    }\r\n\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.open();\r\n    }\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.close();\r\n    }\r\n    public closeAssetsClicked(): void {\r\n        this.clickAssetsPanel = false;\r\n\r\n    }\r\n    public closeViewClicked(): void {\r\n        this.clickViewActive = false;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    public modalOpen(jobLocation: JobLocationDetailsModal): void {\r\n        this.opendedJobDetails = jobLocation;\r\n        if ((this.opendedJobDetails.CountryCode === 'USA') || this.opendedJobDetails.CountryCode === 'US') {\r\n            this.UoM = 'Gallons';\r\n        }\r\n        else {\r\n            this.UoM = 'Litres';\r\n        }\r\n        this.clickedAssetsDetails = this.opendedJobDetails.jobAssetDetails;\r\n        if (this.clickedAssetsDetails.length) {\r\n            this.closeAssetsClicked();\r\n            this.closeViewClicked();\r\n            this.closeChartsClicked();\r\n            this.assetDetails.assetIndex = 0;\r\n            if (this.clickedAssetsDetails[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            this.assetsModal = { modalDetails: { display: 'block', data: 'Modal Show' } };\r\n        }\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n    }\r\n    public toggleMapView(): void {\r\n        var toggleMap = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!toggleMap);\r\n        this.toogleMap = !toggleMap;\r\n    }\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n    public toggleFilterView(): void {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n    // private applySubFilter(locationData: any): JobLocationDetailsModal[] {\r\n    //     let location = true, priority = true, status = true;\r\n\r\n    //     let filterData = locationData.filter((data: JobLocationDetailsModal) => {\r\n    //         if (this.SelectedlocationList.length) {\r\n    //             var ids = [];\r\n    //             this.SelectedLocationIds = '';\r\n    //             this.SelectedlocationList.forEach(res => { ids.push(res.Id) });\r\n    //             this.SelectedLocationIds = ids.join();\r\n    //             location = this.SelectedLocationIds.includes(String(data.JobID));\r\n    //         }\r\n    //         if (this.SelectedPriorityList.length) {\r\n    //             var ids = [];\r\n    //             this.SelectedPriorityIds = '';\r\n    //             this.SelectedPriorityList.forEach(res => { ids.push(res.Id) });\r\n    //             this.SelectedPriorityIds = ids.join();\r\n    //             priority = this.SelectedPriorityIds.includes(String(data.highestPriority))\r\n    //         }\r\n    //         if (this.SelectedStatusList.length) {\r\n    //             var ids = [];\r\n    //             this.SelectedStatusesId = '';\r\n    //             this.SelectedStatusList.forEach(res => { ids.push(res.Id) });\r\n    //             this.SelectedStatusesId = ids.join();\r\n    //             status = this.SelectedStatusesId.includes(String(data.ScheduleStatus))\r\n    //         }\r\n    //         return (location && priority && status);\r\n    //     })\r\n\r\n    //     return filterData;\r\n    // }\r\n\r\n    // private applyFilter() {\r\n\r\n    //     if (this.IsCarrierChkChanged()) {\r\n    //         return;\r\n    //     }\r\n    //     if (this.IsAssetChkChanged()) {\r\n    //         return;\r\n    //     }\r\n    //     this.jobLocationDataForMap = this.unchangedJobLocationData;\r\n    //     let filteredJobData = [];\r\n    //     let filter = this.FilterForm.value;\r\n    //     if (this.SelectedSupplierList.length) {\r\n    //         var objSup = this.SelectedSupplierList.reduce((a, c) => Object.assign(a, { [c.Id]: c.Id }), {});\r\n    //         filteredJobData = this.jobLocationDataForMap.filter(f => f.supplierDetails.some(o => objSup[o.Id] === o.Id));\r\n    //     }\r\n\r\n    //     if (filter.SelectedCarrierList.length) {\r\n    //         var obj = filter.SelectedCarrierList.reduce((a, c) => Object.assign(a, { [c.Id]: c.Id }), {});\r\n    //         if (filteredJobData.length) {\r\n    //             filteredJobData = filteredJobData.filter(f => f.carrierDetails.some(o => obj[o.Id] === o.Id));\r\n    //         }\r\n    //         else {\r\n    //             filteredJobData = this.jobLocationDataForMap.filter(f => f.carrierDetails.some(o => obj[o.Id] === o.Id));\r\n    //         }\r\n    //     }\r\n    //     if (filter.SelectedSupplierList.length == 0 && filter.SelectedCarrierList.length == 0) {\r\n    //         filteredJobData = this.unchangedJobLocationData;\r\n    //     }\r\n    //     return this.applySubFilter(filteredJobData);\r\n    // }\r\n\r\n    public closeChartsClicked(): void {\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    private getDipTestDetails(siteId: string, tankId: string, noOfDays: number): void {\r\n        this.isLoading = true;\r\n        this.chartData = [];\r\n        this.chartOptions = {};\r\n        this.chartOptions = this.setChartOptions(this.UserCountry);\r\n        this.chartLabels = [];\r\n        this.latestReading = new DipTest();\r\n        this.calculateMinMAx(this.clickedAssetsDetails[this.assetDetails.assetIndex].jobTankAdditionalDetails[0]);\r\n        this.locationSubscription.add(this.buyerwallyboardservice.getDipTestDetails(siteId, tankId, noOfDays).subscribe((data) => {\r\n            if (data && data.StatusCode === 302) {\r\n                let resp = data.Data;\r\n                this.latestReading = resp[0];\r\n                let obj = {};\r\n                let chartdata = [];\r\n                obj['label'] = 'Tank ' + resp[0]['TankId'];\r\n                let respLen = resp.length;\r\n                for (let i = 0; (i < respLen); i++) {\r\n                    let captureTime = moment(new Date(resp[i].CaptureTimeString)).format('MM/DD/YYYY hh:mm A');\r\n                    chartdata.unshift(resp[i].NetVolume);\r\n                    this.chartLabels.unshift(captureTime);\r\n                }\r\n                obj['data'] = chartdata;\r\n                this.chartData.push(obj);\r\n            }\r\n            this.isLoading = false;\r\n        }));\r\n    }\r\n\r\n    private setChartOptions(country: string) {\r\n        this.FuelUnit = (country === 'USA') ? 'Gallons' : 'Litres';\r\n        return {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: `NetVolume ( Fuels Per ${this.UoM})`\r\n                    },\r\n                    ticks: {\r\n                        callback: label => { return label.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); }\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    type: 'time',\r\n                    time: {\r\n                        displayFormats: {\r\n                            'millisecond': 'MMM DD',\r\n                            'second': 'MMM DD',\r\n                            'minute': 'MMM DD',\r\n                            'hour': 'MMM DD',\r\n                            'day': 'MMM DD',\r\n                            'week': 'MMM DD',\r\n                            'month': 'MMM DD',\r\n                            'quarter': 'MMM DD',\r\n                            'year': 'MMM DD',\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    private calculateMinMAx(selectedTank: JobTankAdditionalDetails): void {\r\n        this.selectedTankMinMax.MaxFill = selectedTank.MaxFill;\r\n        this.selectedTankMinMax.MinFill = selectedTank.MinFill;\r\n        this.selectedTankMinMax.MaxFillPercent = selectedTank.MaxFillPercent;\r\n        this.selectedTankMinMax.MinFillPercent = selectedTank.MinFillPercent;\r\n        let ci_percent = ((this.latestReading.NetVolume || 0) / selectedTank.FuelCapacity) * 100;\r\n        ci_percent = ci_percent > selectedTank.MaxFillPercent ? selectedTank.MaxFillPercent : ci_percent;\r\n        ci_percent = ci_percent < 0 ? 0 : ci_percent;\r\n\r\n        let sbf_percent = (selectedTank.MaxFillPercent - ci_percent);\r\n        sbf_percent = sbf_percent > 100 ? 100 : sbf_percent;\r\n        sbf_percent = sbf_percent < 0 ? 0 : sbf_percent;\r\n\r\n        this.fillTankDiagram(sbf_percent, ci_percent);\r\n    }\r\n\r\n    private fillTankDiagram(sbf_percent: number, ci_percent: number): void {\r\n        this.selectedTankHeight.sbf_percent = sbf_percent;\r\n        this.selectedTankHeight.ci_percent = ci_percent;\r\n        let min_ShouldBeEmptyPercent = (125 - ((sbf_percent * 1.25) + (ci_percent * 1.25)));\r\n        let min_ShouldBeFilledPercent = (sbf_percent * 1.25);\r\n        let min_CurrentInventoryPercent = (ci_percent * 1.25);\r\n        //need of cal\r\n        if (min_ShouldBeFilledPercent < 16 || min_CurrentInventoryPercent < 16) {\r\n            //dont remove from emtty\r\n            if (min_ShouldBeEmptyPercent < 16) {\r\n\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent - 16;\r\n                }\r\n            }\r\n            //remove from empty\r\n            else {\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n            }\r\n        }\r\n        this.selectedTankHeight.CurrentInventoryPercent = min_CurrentInventoryPercent;\r\n        this.selectedTankHeight.ShouldBeFilledPercent = min_ShouldBeFilledPercent;\r\n        this.selectedTankHeight.ShouldBeEmptyPercent = min_ShouldBeEmptyPercent;\r\n    }\r\n\r\n    public onInfoViewClick(jobLocation: JobLocationDetailsModal): void {\r\n        window.scrollTo(0, 0);\r\n        this.opendedJobDetails = jobLocation;\r\n        if ((this.opendedJobDetails.CountryCode === 'USA') || ((this.opendedJobDetails.CountryCode === 'US'))) {\r\n            this.UoM = 'Gallons';\r\n        }\r\n        else {\r\n            this.UoM = 'Litres';\r\n        }\r\n        this.assetDetails.assetIndex = 0;\r\n        this.clickViewActive = true;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n        this.FilterForm.get('ToggleMap').patchValue(true);\r\n        this.toogleMap = true;\r\n        this.closeAssetsClicked();\r\n    }\r\n    public onAssetsViewClick(assets: JobAssetDetail[]): void {\r\n        if (assets.length) {\r\n            this.clickAssetsPanel = true;\r\n            this.clickedAssetsDetails = assets;\r\n            if (assets[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(assets[0].jobTankAdditionalDetails[0]['SiteId'], assets[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            else {\r\n                this.chartData = [];\r\n                this.latestReading = new DipTest();\r\n            }\r\n        }\r\n    }\r\n    public onChartsViewClick(assets: JobAssetDetail[]): void {\r\n        this.clickChartsPanel = true;\r\n        this.isChartDataExistSubject.next(false);\r\n        let tanks: JobAssetDetail[] = [];\r\n        if (assets.length) {\r\n            tanks = assets.filter(t => t.AssetType == 2);\r\n        }\r\n\r\n        if (tanks.length && tanks[0].jobTankAdditionalDetails.length) {\r\n            this.getDemandCaptureChart(tanks[0].jobTankAdditionalDetails[0]['SiteId'], 3, tanks[0].JobId);\r\n        }\r\n        else {\r\n            this.isChartDataExistSubject.next(false);\r\n            this.demandChartData = null;\r\n        }\r\n    }\r\n    public assetTabClicked(indx: number): void {\r\n        this.assetDetails.assetIndex = indx;\r\n        if (this.clickedAssetsDetails[indx].jobTankAdditionalDetails.length) {\r\n            this.getDipTestDetails(this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['TankId'], 3);\r\n        } else {\r\n            this.chartData = [];\r\n            this.latestReading = new DipTest();\r\n        }\r\n    }\r\n    public mapReady(map: any): void {\r\n        this.Map = map;\r\n        this.setCountryCentre();\r\n    }\r\n    public getDemandCaptureChart(siteId: string, noOfDays: number, tfxJobId: number): void {\r\n        this.demandChartData = { siteId: siteId, noOfDays: noOfDays, tfxJobId: tfxJobId };\r\n        this.isChartDataExistSubject.next(true);\r\n    }\r\n    public setCenterMap($event): void {\r\n        if (this.UserCountry && (!this.jobLocationDataForMap || !this.jobLocationDataForMap.length)) {\r\n            this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n            this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n            if (this.Map) {\r\n                this.Map.setCenter({ lat: this.centerLocationLat, lng: this.centerLocationLog });\r\n                this.Map.setZoom(5);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Will this work?\r\n    public openDRPanel(event: any) {\r\n        this.modalClose();\r\n        jQuery('#jobIdForDr').val(event.JobId);// set the html hidden field value i9n shared layout.cshtml\r\n        jQuery('#demandCaptureButton').click(); // trigger click of demand capture button in layout.cshtml\r\n    }\r\n\r\n\r\n    // public IsCarrierChkChanged() {\r\n    //     var isCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\r\n    //     if (this.isShowCarrierManaged != isCarrierManaged) {\r\n    //         this.selectedCarrierIds = '';\r\n    //         this.FilterForm.get('SelectedCarrierList').patchValue([]);\r\n    //         this.FilterForm.get('SelectedSupplierList').patchValue([]);\r\n    //         this.isShowCarrierManaged = isCarrierManaged;\r\n    //         // this.fetchJobLocationData();\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    // public IsAssetChkChanged() {\r\n    //     var isAssetChkManaged = this.FilterForm.get('IsShowAssetJobs').value;\r\n    //     if (this.isShowNonRetailJobs != isAssetChkManaged) {\r\n    //         this.isShowNonRetailJobs = isAssetChkManaged;\r\n    //         // this.fetchJobLocationData();\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    public SaveFilters() {\r\n        var filterData = this.FilterForm.value;\r\n        var filterModel = JSON.stringify(filterData);\r\n        this.buyerwallyboardservice.saveFilters(TfxModule.BuyerWallyboardLocation, filterModel).subscribe(res => {\r\n            if (res) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public GetFilters() {\r\n        this.buyerwallyboardservice.getFilters(TfxModule.BuyerWallyboardLocation).subscribe(res => {\r\n            if (res && res.length > 0) {\r\n                this.SetFilters(res);\r\n            }\r\n            else {\r\n                this.IsFiltersLoaded = true; \r\n                this.changeDetectorRef.detectChanges();\r\n                this.FilterForm.get('SelectedPriorityList').patchValue([{ Id: 1, Name: 'Must Go' }]);\r\n                this.locationView.getSalesData();\r\n            }\r\n        });\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        this.IsFiltersLoaded = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var filterData = JSON.parse(input);\r\n        if (!filterData.SelectedPriorityList || !filterData.SelectedPriorityList.length) {\r\n            filterData.SelectedPriorityList = [{ Id: 1, Name: 'Must Go' }];\r\n        }\r\n        this.FilterForm.patchValue(filterData);\r\n        this.toogleMap = filterData.ToggleMap;\r\n        this.locationView.getSalesData();\r\n        this.onSupplierSelect();\r\n        this.ApplyFilters();\r\n    }\r\n\r\n    getFilterData() {\r\n        var isCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\r\n        this.buyerwallyboardservice.GetFilterData(isCarrierManaged).subscribe(data => {\r\n            // this.locationList = data.map(t => {return {JobID: t.Id, JobName : t.Name}});\r\n            this.locationList = data;\r\n\r\n            this.DefaultLocationList=data;\r\n            this.supplierList = this.GetUniqueItems(data.map(t => t.Suppliers).reduce((p, n) => p.concat(n), []));\r\n            this.carrierList = this.GetUniqueItems(data.map(t => t.Carriers).reduce((p, n) => p.concat(n), []));\r\n            this.GetFilters();\r\n        });\r\n        // this.ApplyFilters();\r\n    }\r\n\r\n    onSupplierSelect(){\r\n        var selectedSuppliers = this.FilterForm.get('SelectedSupplierList').value;\r\n        if(selectedSuppliers != undefined && selectedSuppliers.length > 0)\r\n        {\r\n            // this.locationList=this.DefaultLocationList.filter(t=>t.Suppliers.filter(t1=> selectedSuppliers.some(t2=> t2.Id == t1.Id) ).length > 0 ).map(t => {return {JobID: t.Id, JobName : t.Name}});\r\n            this.locationList=this.DefaultLocationList.filter(t=>t.Suppliers.filter(t1=> selectedSuppliers.some(t2=> t2.Id == t1.Id) ).length > 0 );\r\n            \r\n        }else{\r\n            // this.locationList= this.DefaultLocationList.map(t => {return {JobID: t.Id, JobName : t.Name}});\r\n            this.locationList= this.DefaultLocationList;\r\n        }\r\n        this.locationList = this.GetUniqueItems(this.locationList.reduce((p, n) => p.concat(n), []));\r\n    }\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n    getJobIdsForMapEventHandler(valueEmitted) {\r\n        this.jobIdsEmittedFromSalesComponent = valueEmitted;\r\n        this.fetchJobLocationData();\r\n    }\r\n\r\n    public ResetFilters() {\r\n        this.FilterForm.get('SelectedSupplierList').patchValue([]);\r\n        this.FilterForm.get('SelectedlocationList').patchValue([]);\r\n        this.FilterForm.get('SelectedPriorityList').patchValue([]);\r\n        this.FilterForm.get('SelectedStatusList').patchValue([]);\r\n        this.FilterForm.get('selectedLocAttributeList').patchValue([]);\r\n        this.ApplyFilters('reset');\r\n    }\r\n    public ApplyFilters(msg?) {\r\n        // this.SaveFilters();\r\n        this.filterCount = 0;\r\n\r\n        if (this.FilterForm) {\r\n\r\n            var selectedSupplierList = this.FilterForm.get('SelectedSupplierList').value || [];\r\n            this.filterCount += selectedSupplierList.length;\r\n\r\n            var selectedlocationList = this.FilterForm.get('SelectedlocationList').value || [];\r\n            this.filterCount += selectedlocationList.length;\r\n\r\n            var selectedPriorityList = this.FilterForm.get('SelectedPriorityList').value || [];\r\n            this.filterCount += selectedPriorityList.length;\r\n\r\n            var selectedStatusList = this.FilterForm.get('SelectedStatusList').value || [];\r\n            this.filterCount += selectedStatusList.length;\r\n\r\n            var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\r\n            this.filterCount += selectedLocAttributeList.length;\r\n        }\r\n       \r\n        if (msg == \"set\") {\r\n            this.locationView.applyLoadsFilters(this.FilterForm);\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            this.locationView.applyLoadsFilters(this.FilterForm);\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n        this.SaveFilters();\r\n    }\r\n}\r\n","<div class=\"col-sm-9 sticky-header-loc\" [formGroup]=\"FilterForm\">\r\n    <div class=\"row mr15\">\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" formControlName=\"IsShowCarrierManaged\" (change)=\"SaveFilters()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"mtm5\" *ngIf=\"FilterForm.get('IsShowCarrierManaged').value\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\"\r\n                   [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 p-0\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Carriers'\" \r\n                                                 [formControl]=\"FilterForm.controls['SelectedCarrierList']\"\r\n                                                 [settings]=\"multiDropdownSettings\" class=\"fs14\"\r\n                                                 [data]=\"carrierList\"\r\n                                                 (onSelect)=\"SaveFilters()\"\r\n                                                 (onDeSelect)=\"SaveFilters()\"\r\n                                                 #selectedCarriers>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineShowAsset\" formControlName=\"IsShowAssetJobs\" (change)=\"SaveFilters()\">\r\n                <label class=\"form-check-label\" for=\"inlineShowAsset\"> Show locations with Assets</label>\r\n            </div>\r\n        </div>\r\n        <!--<a class=\"fs14 mb10\" (click)=\"toggleMapView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>-->\r\n        <!--<span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span>-->\r\n        <div class=\"col-4 pl0 text-right\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i>Filters</a>\r\n            <a class=\"hide_show_map fs14 dib mr10\" (click)=\"toggleMapView()\">\r\n                <i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleMap').value ? 'Hide Map View' : 'Show Map View' }}\r\n            </a>\r\n            <!--<div class=\"col-sm-4  text-center pt5\" (clickOutside)=\"clickOutsideDropdown()\">\r\n            <a class=\"fs14\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5 ml20\"></i> Filters</a>\r\n            <div class=\"locationfilter border mt5 bg-gray shadow-b z-index5 pa10\" *ngIf=\"toogleFilter\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Suppliers'\" [data]=\"supplierList\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedSupplierList']\"\r\n                                                 [settings]=\"multiDropdownSettings\" #selectedSuppliers>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedlocationList']\" [settings]=\"jobMultiselectSettingsById\"\r\n                                                 [placeholder]=\"'Select Location'\" [data]=\"locationList\" #selectedLocations>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Priority'\" [data]=\"priorityList\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedPriorityList']\" [settings]=\"priorityselectSettingsById\"\r\n                                                 #selectedPriority>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb10\">\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStatusList']\" [placeholder]=\"'Status'\"\r\n                                                 [data]=\"statusList\" [settings]=\"multiselectSettingsById\"\r\n                                                 #selectedPriority>\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12\">\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\" [placeholder]=\"'Inventory Capture Method'\" [data]=\"LocationAttributeList\"\r\n                                                 [settings]=\"multiselectSettingsById\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>-->\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"animated clearboth mt60 row\" [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap}\">\r\n    <div [ngClass]=\"clickViewActive  ? 'col-sm-8 mb15' : 'col-sm-12 mb15'\">\r\n        <div class='pa bg-white top0 left0 z-index5 loading-wrapper hide-element'>\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n        <div class=\"pr\">\r\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; bottom:0; left: 10px; font-size: 11px;\">\r\n                <div id=\"status-legends\" class=\"well pa0\">\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pl5 pr5 pt8 pb5 radius-10 no-b-radius\">\r\n                            <img [src]=\"mustGoUrl\" data-statusid=\"11\">\r\n                            Must Go\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pa5\">\r\n                            <img [src]=\"shouldGoUrl\" data-statusid=\"12\">\r\n                            Should Go\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pa5\">\r\n                            <img [src]=\"couldGoUrl\" data-statusid=\"1\">\r\n                            Could Go\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b\">\r\n                        <div class=\"db pa5\">\r\n                            <img [src]=\"noDlrUrl\" data-statusid=\"1\">\r\n                            Unplanned\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                <span class=\"spinner-dashboard pa\"></span>\r\n            </div>\r\n            <agm-map [zoom]=\"zoomLevel\" [minZoom]=\"2\" [maxZoom]=\"16\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\"\r\n                     [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\"\r\n                    >\r\n                <ng-container *ngFor=\"let jobLocation of jobLocationDataForMap\">\r\n                    <agm-marker [latitude]=\"jobLocation.Latitude\" [longitude]=\"jobLocation.Longitude\"\r\n                                [iconUrl]='{ \"url\": jobLocation.iconUrl, \"scaledSize\": { \"height\": 24, \"width\": 24 } }'\r\n                                (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\"\r\n                                (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\" (markerClick)=\"onInfoViewClick(jobLocation)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                            <div>\r\n                                <p><strong>{{ jobLocation.JobName}}</strong></p>\r\n                                <!--<p>{{jobLocation.CustomerName}}</p>-->\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                </ng-container>\r\n            </agm-map>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-sm-4 pl0 right_side_panel\" *ngIf=\"clickViewActive\">\r\n        <div class=\"dib full-width pr well pa15 pt10\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div *ngIf=\"!this.opendedJobDetails.SiteImageFilePath\" class=\"color-maroon pull-left\">\r\n                        <i class=\"fas fa-image mr5\"></i> No image available\r\n                    </div>\r\n                    <a (click)=\"closeViewClicked()\" class=\"pull-right\"><i class=\"far fa-times-circle fa-lg\"></i> </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <!--<img [src]=\"this.opendedJobDetails.SiteImageFilePath ? this.opendedJobDetails.SiteImageFilePath:noImageUrl\" alt=\"\" class=\"img-responsive\">-->\r\n                    <img *ngIf=\"this.opendedJobDetails.SiteImageFilePath\"\r\n                         [src]=\"this.opendedJobDetails.SiteImageFilePath\" class=\"img-responsive\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-sm-12 driver_details\">\r\n                    <div class=\"job-location\">\r\n                        <p class=\"mb0\">\r\n                            <span class=\"address1\">\r\n                                <i class=\"fas fa-briefcase\"></i> {{this.opendedJobDetails.JobName}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"job-location\">\r\n                        <p class=\"mb0\">\r\n                            <span class=\"address1\">\r\n                                <!--<i class=\"far fa-building\"></i> {{this.opendedJobDetails.CustomerName}}-->\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"job-location\">\r\n                        <p class=\"mb0\">\r\n                            <span class=\"address1\">\r\n                                <i class=\"fas fa-map-marker-alt\"></i> {{this.opendedJobDetails.Address}},\r\n                                {{this.opendedJobDetails.City}}, {{this.opendedJobDetails.State}},\r\n                                {{this.opendedJobDetails.ZipCode}}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"site-status fs12 mt5\">\r\n                        <div class=\"panel-group\">\r\n                            <div class=\"panel panel-default\">\r\n                                <div class=\"panel-heading\">\r\n                                    <a data-toggle=\"collapse\" href=\"#collapse1\">\r\n                                        <span class=\"f-bold\">Site Availability:</span>\r\n                                        <span *ngIf=\"this.opendedJobDetails.SiteAvailabilityTotalDays\"\r\n                                              class=\"status  ml10\">OPEN</span>\r\n                                        <!--<span class=\"timing  ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>-->\r\n                                    </a>\r\n                                    <a data-toggle=\"collapse\" href=\"#collapse1\" class=\"pull-right\">\r\n                                        <i class=\"fas collapse1_icon fa-2x line-height_18 fa-angle-down\"></i>\r\n                                    </a>\r\n                                </div>\r\n                                <div id=\"collapse1\" class=\"panel-collapse collapse\">\r\n                                    <div class=\"panel-body\">\r\n                                        <div class=\"date_time\"\r\n                                             *ngFor=\"let day of this.opendedJobDetails.SiteAvailabilityArray\">\r\n                                            <span class=\"day ml10\">{{day}} </span>\r\n                                            <span class=\"status ml10 text-success\">OPEN</span>\r\n                                            <!--<span class=\"timing ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>-->\r\n                                        </div>\r\n                                        <div *ngIf=\"!this.opendedJobDetails.SiteAvailabilityArray.length\">\r\n                                            No Days Available\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"site-instruction fs12 mb5\">\r\n                        <label class=\"f-bold db mb0\">Site Instruction: </label>\r\n                        <span class=\"instruction opacity8\">\r\n                            {{this.opendedJobDetails.SiteInstructions}}\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"site-contacts fs12 row mb5\">\r\n                        <div class=\"col-sm-3\">\r\n                            <label class=\"f-bold\">Contact(s):</label>\r\n                        </div>\r\n                        <div class=\"col-sm-9\">\r\n                            <p class=\"mb0 opacity8\">{{this.opendedJobDetails.ContactPersonName}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 site-assets\">\r\n                            <a class=\"btn btn-default pull-left ml0 fs12\"\r\n                               (click)=\"onAssetsViewClick(this.opendedJobDetails.jobAssetDetails)\">\r\n                                {{this.opendedJobDetails.TotalCount}}\r\n                                Assets/Tanks\r\n                            </a>\r\n                            <a (click)=\"onChartsViewClick(this.opendedJobDetails.jobAssetDetails)\"\r\n                               class=\"btn btn-default pull-left fs12\">Demand Capture Trend </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"assets-panel dib full-width pr well pa15 pt10\" *ngIf=\"clickAssetsPanel\">\r\n            <div class=\"assets-header\">\r\n                <div class=\"row mb5\">\r\n                    <div class=\"col-sm-12\">\r\n                        <a class=\"pull-left\" (click)=\"closeAssetsClicked()\"> <i class=\"fas fa-arrow-left\"></i> Back</a>\r\n                        <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i class=\"far fa-times-circle fa-lg\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"charts-panel dib full-width pr well pa15 pt10 z-index10\" *ngIf=\"clickChartsPanel\">\r\n            <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                <span class=\"spinner-dashboard pa\"></span>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <a class=\"pull-left\" (click)=\"closeChartsClicked()\"> <i class=\"fas fa-arrow-left\"></i> Back</a>\r\n                    <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i class=\"far fa-times-circle fa-lg\"></i></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"charts-body\">\r\n                <div style=\"width: 100%;height:50vh\">\r\n                    <div style=\"width: 100%;Tor-ulsd#2 tank\">\r\n                        <app-demand-capture-chart *ngIf=\"(isChartDataExistSubject | async) else noDtaAvailable\"\r\n                                                  [data]=\"demandChartData\"></app-demand-capture-chart>\r\n                    </div>\r\n                    <ng-template #noDtaAvailable>\r\n                        <div class=\"alert alert-danger\">\r\n                            No Data Available\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--locations grid-->\r\n<div class=\"row\" [ngClass]=\"toogleMap ? 'mt20' : 'mt60'\">\r\n    <div class=\"col-sm-12\">\r\n        <app-location-view [FilterForm]=\"FilterForm\" [IsFiltersLoaded] =\"IsFiltersLoaded\" [IsLoadSalesData]=\"IsLoadSalesData\" (getJobIdsForMap)=\"getJobIdsForMapEventHandler($event)\">\r\n            Loading...\r\n        </app-location-view>\r\n    </div>\r\n</div>\r\n<!--modal popup of tank-->\r\n<ng-template #assetDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n         [ngStyle]=\"{'display':modalDetails.display}\" id=\"assetDetailsModal\" tabindex=\"-1\" role=\"dialog\"\r\n         aria-labelledby=\"assetDetailsModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        Asset/Tank Details\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt15\" (click)=\"modalClose()\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fa-lg\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"modal-body\" style=\"max-height:80vh;overflow-y:scroll\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-container *ngTemplateOutlet=\"assetDetailsModal;context:assetsModal\">\r\n</ng-container>\r\n<!--Tank details modal view-->\r\n<ng-template #assetsContentTemplate let-assetNumber=\"assetIndex\">\r\n    <div class=\"aseets-body assets_modal\">\r\n        <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div>\r\n        <ul class=\"nav nav-tabs\">\r\n            <ng-container *ngFor=\"let asset of clickedAssetsDetails let indx=index\">\r\n                <li [ngClass]=\"{'active':assetDetails.assetIndex===indx}\">\r\n                    <a (click)=\"assetTabClicked(indx)\">\r\n                        {{asset.AssetType === 2 ? 'Tank': 'Asset' }} ({{indx+1}})\r\n                    </a>\r\n                </li>\r\n\r\n            </ng-container>\r\n        </ul>\r\n        <div class=\"tab-content pa0\">\r\n            <div id=\"assets1\" class=\"tab-pane fade in active animated fadeIn\">\r\n                <div class=\"row mb10 mt10\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col align-self-start\">\r\n                                <span class=\"mt0 mb0 float-left fs16\">{{clickedAssetsDetails[assetNumber].AssetName}}</span>\r\n                                <span class=\"mt0 mb0 float-left fs16\"\r\n                                      *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName && clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber \">\r\n                                    &nbsp;(\r\n                                    {{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName}}-{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber}}\r\n                                    )\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col align-self-end\" *ngIf=\"!clickAssetsPanel\">\r\n                                <button *ngIf=\"clickedAssetsDetails[assetNumber].AssetType ===2\"\r\n                                        (click)=\"openDRPanel(clickedAssetsDetails[assetNumber])\"\r\n                                        class=\"btn btn-primary btn-sm float-right\">\r\n                                    Create DR\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col align-self-end\">\r\n                                <a href=\"{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath}}\"\r\n                                   target=\"_blank\" download\r\n                                   *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath\"\r\n                                   class=\"float-right mt5\">\r\n                                    <i class=\"fa fa-download mr5\" aria-hidden=\"true\"></i>Download Dip Chart\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border radius-5 pa15 mb20\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType === 1\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                   width=\"100%\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Product Type</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].ProductType}}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Capacity</td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border radius-5 pa15 tank-panel mb20\"\r\n                     *ngIf=\"clickedAssetsDetails[assetNumber].AssetType ===2\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"tank_dip_chart text-center mt10\">\r\n                                <div>\r\n                                    <div id=\"ShouldBeEmptyPercent\" class=\"color-green\"\r\n                                         [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeEmptyPercent || 0}\"> </div>\r\n                                    <div id=\"ShouldBeFilledPercent\" class=\"color-green\"\r\n                                         [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeFilledPercent || 0}\">\r\n                                        {{selectedTankHeight.sbf_percent| number:'1.0-2'}}%\r\n                                    </div>\r\n                                    <div id=\"CurrentInventoryPercent\" class=\"red-bg\"\r\n                                         [ngStyle]=\"{'height.px':selectedTankHeight.CurrentInventoryPercent || 0}\">\r\n                                        {{selectedTankHeight.ci_percent| number:'1.0-2'}}%\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-9\">\r\n                            <table class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                   width=\"100%\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\" width=\"50%\">Storage ID </td>\r\n                                        <td>\r\n                                            <span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.StorageId}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Type</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].TankTypeName}}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Product Type</td>\r\n                                        <td>\r\n                                            <span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TfxProductTypeName}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Capacity</td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">\r\n                                            <span>Min Fill</span>\r\n                                            <span>&nbsp;({{selectedTankMinMax.MinFillPercent}}%)</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{selectedTankMinMax.MinFill| number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].MinFill\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">\r\n                                            <span>Max Fill</span>\r\n                                            <span>&nbsp;({{selectedTankMinMax.MaxFillPercent}}%)</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <span>\r\n                                                {{selectedTankMinMax.MaxFill | number}} <span *ngIf=\"clickedAssetsDetails[assetNumber].MaxFill\">{{UoM}}</span>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType ===2\">\r\n                    <div class=\"col-sm-12\">\r\n                        <table class=\"table table-condensed table-hover table-bordered small-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Last Reading</th>\r\n                                    <th>Ullage (<span>{{UoM}}</span>)</th>\r\n                                    <th>Last Reading Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div *ngIf=\"(latestReading?.NetVolume==-1 || latestReading?.NetVolume===undefined) else reading\">\r\n                                            NA\r\n                                        </div>\r\n                                        <ng-template #reading>\r\n                                            {{(latestReading?.NetVolume | number)}} <span>{{UoM}}</span>\r\n                                        </ng-template>\r\n                                    </td>\r\n                                    <td><span>{{(latestReading?.Ullage| number) || 'NA'}}</span></td>\r\n                                    <td>\r\n                                        <span>\r\n                                            {{\r\n(latestReading?.CaptureTimeString| date:'MM/dd/yyyy, hh:mm a':'UTC') ||\r\n                                            'NA'\r\n                                            }}\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"assets-id\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType===2\">\r\n\r\n                    <p class=\"mb0\">\r\n                        <label class=\"f-bold\">Dip test value trend : </label>\r\n                    </p>\r\n                    <div style=\"width: 100%;max-height:320px\" *ngIf=\"chartData.length\">\r\n                        <canvas baseChart height=\"300\" style=\"margin:auto;\" [chartType]=\"'line'\" [datasets]=\"chartData\"\r\n                                [options]=\"chartOptions\" [labels]=\"chartLabels\" [legend]=\"true\"></canvas>\r\n                    </div>\r\n                    <div *ngIf=\"!chartData.length && !isLoading\" class=\"alert alert-danger\">\r\n                        No Data Available\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Supplier</label>\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Suppliers'\" \r\n                                             [formControl]=\"FilterForm.controls['SelectedSupplierList']\"\r\n                                             [settings]=\"multiDropdownSettings\" [data]=\"supplierList\" (onDeSelect)=\"onSupplierSelect()\" (onSelect)=\"onSupplierSelect();\" #selectedSuppliers>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedlocationList']\" \r\n                                             [placeholder]=\"'Select Location'\" [settings]=\"jobMultiselectSettingsById\" [data]=\"locationList\" #selectedLocations>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Priority</label>\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Priority'\" \r\n                                             [formControl]=\"FilterForm.controls['SelectedPriorityList']\" [settings]=\"priorityselectSettingsById\" [data]=\"priorityList\"\r\n                                             #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Status</label>\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStatusList']\" [placeholder]=\"'Status'\"\r\n                                             [settings]=\"multiselectSettingsById\" [data]=\"statusList\" \r\n                                             #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\" [placeholder]=\"'Inventory Capture Method'\" \r\n                                             [settings]=\"multiselectSettingsById\" [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"ResetFilters();\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\nimport { WallyDashboardComponent } from './wally-dashboard/wally-dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { BuyerLocationsComponent } from './buyer-locations.component';\nimport { WhereIsMyDriverComponent } from './where-is-my-driver.component';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { WhereIsMyDriverMapViewComponent } from './wally-dashboard/map-view.component';\nimport { WhereIsMyDriverGridViewComponent } from './wally-dashboard/grid-view.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { DataTablesModule } from 'angular-datatables';\nimport { SalesComponent } from './sales.component';\nimport { PriorityViewComponent } from './sales-data/priority-view.component';\nimport { TankViewComponent } from './sales-data/tank-view.component';\nimport { LocationViewComponent } from './sales-data/location-view.component';\nimport { TankChartModule } from '../tank-chart/tank-chart.module';\nimport { FormsModule } from '@angular/forms';\nimport { TankViewMasterComponent } from './sales-data/tank-view-master.component';\n\nconst routeWallyBoard: Routes = [\n    {\n        path: '',\n        component: WallyDashboardComponent\n    },\n]\n\n@NgModule({\n    declarations: [\n        WallyDashboardComponent,\n        BuyerLocationsComponent,\n        WhereIsMyDriverComponent,\n        WhereIsMyDriverMapViewComponent,\n        WhereIsMyDriverGridViewComponent,\n        SalesComponent,\n        PriorityViewComponent,\n        TankViewComponent,\n        LocationViewComponent,\n        TankViewMasterComponent\n    ],\n    imports: [\n        SharedModule,\n        DirectiveModule,\n        ChartsModule,\n        DataTablesModule,\n        AgmDirectionModule,\n        TankChartModule,\n        FormsModule,\n        RouterModule.forChild(routeWallyBoard)\n    ]\n})\nexport class BuyerWallyBoardModule { }\n","import { Component, OnInit, Input, ViewChild, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { Declarations } from 'src/app/declarations.module';\nimport { SalesDataModel, DeliveryDetailsModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Subject, forkJoin, Subscription } from 'rxjs';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { FormGroup } from '@angular/forms';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-location-view',\n    templateUrl: './location-view.component.html',\n    styleUrls: ['./location-view.component.css']\n})\nexport class LocationViewComponent implements OnInit {\n\n    public LocationSchedules: any = [];\n    IsLoading = false;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTank: SalesDataModel;\n    public dtTrigger: Subject<any> = new Subject();\n    subscriptions: Subscription = new Subscription();\n    public dtOptions: any = {};\n    public SelectedLocations = [];\n    SelectedPriorities = [];\n    SelectedCarriers = [];\n    IsShowCarrierManaged: boolean = false;\n    public SelectedSuppliers = [];\n    public SelectedStatus = [];\n    IsShowRetailJobs: boolean = false;\n    public SelectedPrioritiesId: any = [];\n    public SelectedRegionId: string;\n    public SelectedCustomerId: string;\n    public SelectedLocationId: string;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public isDataLoaded: boolean = false;\n    public ScheduleQuantityTypes: any = [];\n    @Input() FilterForm: FormGroup;\n    @Input() IsFiltersLoaded: boolean = false;\n    @Input() IsLoadSalesData: true;\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    public SelectedTankRegionId: string = '';\n    public SelectedCarrierIds: string;\n    public SelectedStatusId: string;\n    public SelectedSuppliersId: string;\n    public SelectedLocArributeId: string;\n    @Output()\n    getJobIdsForMap: EventEmitter<any[]> = new EventEmitter<any[]>();\n    constructor(private dispatcherService: DispatcherService, private carrierService: CarrierService) {\n    }\n\n    ngOnInit() {\n        this.initializeGrid();\n        // this.getSalesData();\n        this.getScheduleQuantityType();\n        this.subscribeFormChanges();\n\n    }\n\n    subscribeFormChanges() {\n        this.subscriptions.add(this.FilterForm.valueChanges\n            .subscribe(change => {\n                if (this.IsLoadSalesData) {\n                    let isFilterChanged = this.setFilterData();\n                    // if ((isFilterChanged || !this.isDataLoaded) && this.IsFiltersLoaded) {\n                    //     this.isDataLoaded = true;\n                    //     this.getSalesData();\n                    // }\n                }\n            }))\n    }\n\n    unSubscribeFormChanges() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    ngOnChanges(change: SimpleChanges) {\n        if (change.IsLoadSalesData && change.IsLoadSalesData.currentValue != change.IsLoadSalesData.previousValue) {\n            this.IsLoadSalesData = change.IsLoadSalesData.currentValue;\n        }\n        if (change.IsFiltersLoaded && change.IsFiltersLoaded.currentValue != change.IsFiltersLoaded.previousValue) {\n            this.IsFiltersLoaded = change.IsFiltersLoaded.currentValue;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.dtTrigger.unsubscribe();\n        this.unSubscribeFormChanges();\n    }\n\n    getScheduleQuantityType() {\n        this.dispatcherService.GetBuyerScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n\n    setFilterData() {\n        let isFilterChanged = false;\n\n        this.SelectedLocations = this.FilterForm.get('SelectedlocationList').value;\n        var ids = [];\n        this.SelectedLocations.forEach(res => { ids.push(res.Id) });\n        var selectedLocationId = ids.join();\n        if (this.SelectedLocationId != selectedLocationId) {\n            this.SelectedLocationId = selectedLocationId;\n            isFilterChanged = true;\n        }\n\n        if (this.IsShowCarrierManaged != this.FilterForm.get('IsShowCarrierManaged').value) {\n            this.IsShowCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\n            isFilterChanged = true;\n            this.getSalesData();\n        }\n        this.SelectedCarriers = this.FilterForm.get('SelectedCarrierList').value;\n        ids = [];\n        this.SelectedCarriers.forEach(res => { ids.push(res.Id) });\n        var selectedCarrierIds = ids.join();\n        if (this.SelectedCarrierIds != selectedCarrierIds) {\n            this.SelectedCarrierIds = selectedCarrierIds;\n            isFilterChanged = true;\n            this.getSalesData();\n        }\n\n        this.SelectedStatus = this.FilterForm.get('SelectedStatusList').value;\n        ids = [];\n        this.SelectedStatus.forEach(res => { ids.push(res.Id) });\n        var selectedStatusId = ids.join();\n        if (this.SelectedStatusId != selectedStatusId) {\n            this.SelectedStatusId = selectedStatusId;\n            isFilterChanged = true;\n        }\n        \n        var selectedLocAttri = this.FilterForm.get('selectedLocAttributeList').value;\n        ids = [];\n        selectedLocAttri && selectedLocAttri.forEach(res => { ids.push(res.Id) });\n        var SelectedLocArributeId = ids.join();\n        if (this.SelectedLocArributeId != SelectedLocArributeId) {\n            this.SelectedLocArributeId = SelectedLocArributeId;\n            isFilterChanged = true;\n        }\n\n        this.SelectedSuppliers = this.FilterForm.get('SelectedSupplierList').value;\n        ids = [];\n        this.SelectedSuppliers.forEach(res => { ids.push(res.Id) });\n        var selectedSuppliersId = ids.join();\n        if (this.SelectedSuppliersId != selectedSuppliersId) {\n            this.SelectedSuppliersId = selectedSuppliersId;\n            isFilterChanged = true;\n        }\n\n        var isShowRetailJobs = !this.FilterForm.get('IsShowAssetJobs').value;\n        if (this.IsShowRetailJobs != isShowRetailJobs) {\n            this.IsShowRetailJobs = isShowRetailJobs;\n            isFilterChanged = true;\n            this.getSalesData();\n        }\n        this.SelectedPriorities = this.FilterForm.get('SelectedPriorityList').value;\n        ids = [];\n        this.SelectedPriorities.forEach(res => { ids.push(res.Id) });\n        var selectedPrioritiesId = ids.join();\n        if (this.SelectedPrioritiesId != selectedPrioritiesId) {\n            this.SelectedPrioritiesId = selectedPrioritiesId;\n            isFilterChanged = true;\n        }\n        return isFilterChanged;\n    }\n\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n\n    public getSalesData() {\n        let inputs = {\n            Priority: this.SelectedPrioritiesId,\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Location,\n            Carriers: this.SelectedCarrierIds,\n            IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n            IsShowRetailJobs: !this.FilterForm.get('IsShowAssetJobs').value,\n            Suppliers: this.SelectedSuppliersId,\n            InventoryCaptureTypeIds:this.SelectedLocArributeId\n        };\n        this.IsLoading = true;\n\n        forkJoin([this.dispatcherService.getBuyerSalesData(inputs),\n        this.dispatcherService.GetRaisedBuyerExceptions()])\n            .subscribe(async (resp) => {\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                if (this.SelectedStatus && this.SelectedStatus.length && resp[0]) {\n                    resp[0] = resp[0].filter(t => this.SelectedStatusId.includes(t.Status))\n                }\n                this.LocationSchedules = resp[0];\n                this.passJobIdsToMapData();\n                this.IsLoading = false;\n                this.datatableRerender();\n            });\n        // this.dispatcherService.getBuyerSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\n        //   this.LocationSchedules = resp;\n        //   this.IsLoading = false;\n        //   this.datatableRerender();\n        // });\n    }\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n        }\n        this.dtTrigger.next();\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetBuyerDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n        //this.MaxFillQuantity = 120;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n        this.validateMsg = \"\";\n        this.isValid = true;\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n    public onDrSubmit() {\n        this.validateMsg = \"\";\n        this.isValid = true;\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (!(this.RequiredQuantity > 0) || this.RequiredQuantity < 0.00001)) {\n            this.validateMsg = \"Invalid required quantity.\"; this.isValid = false;\n        }\n        else if (this.ScheduleQuantityType == 1 && this.SelectedTank.MaxFillQuantity && this.SelectedTank.MaxFillQuantity > 0 && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity) {\n            this.validateMsg = \"Should not exceed max fill. (\" + this.SelectedTank.MaxFillQuantity + \")\"; this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.isValid = true;\n            this.dispatcherService.PostBuyerRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                    this.closeModal();\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.closeModal();\n                this.DRLoader = false;\n            });\n        }\n    }\n\n    public showTanks(row) {\n        this.SelectedTankRegionId = row.RegionId;\n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = row.RegionId;\n        salesDataModel.SiteId = row.SiteId;\n        salesDataModel.TankId = row.TankId;\n        salesDataModel.StorageId = row.StorageId;\n        salesDataModel.TfxJobId = row.TfxJobId;\n        salesDataModel.LocationManagedType = row.LocationManagedType ? row.LocationManagedType: null;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n    public passJobIdsToMapData() {\n        var jobsPriority = [];\n        if (this.LocationSchedules) {        \n            this.LocationSchedules.forEach(res => {\n                if (!jobsPriority.find(t => t.TfxJobId == res.TfxJobId)) {\n                    jobsPriority.push({TfxJobId: res.TfxJobId,Priority: res.Priority})\n                }\n            }\n            );\n            this.getJobIdsForMap.emit(jobsPriority);\n        } else {\n            this.getJobIdsForMap.emit(jobsPriority);\n        }\n    }\n  \n    public applyLoadsFilters(filterForm:FormGroup){\n        this.FilterForm = filterForm;\n        if (this.IsLoadSalesData) {\n            let isFilterChanged = this.setFilterData();\n            if ((isFilterChanged || !this.isDataLoaded) && this.IsFiltersLoaded) {\n                this.getSalesData();\n            }\n        }\n    }\n}\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div>\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Location View</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-Locationmustgo\" class=\"table table-bordered table-hover\" datatable\r\n                                   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank/Asset Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of LocationSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td><!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span>\r\n                                            <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"(row.TankInventoryDiffinHrs>2 || row.TankInventoryDiffinHrs==0 && this.IsShowRetailJobs) \"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--') ?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <!-- <td>\r\n        <a (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n           data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n    </td> -->\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n        </ng-container>\r\n\r\n        <ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n            <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n                 [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n                 aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header pt10 pb5 no-border\">\r\n                            <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                                {{modalDetails.title}}\r\n                            </h3>\r\n                            <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\">\r\n                                <i class=\"fa fa-close fa-lg\"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                                <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <h3 class=\"fs14 font-bold\">Create DR</h3>\r\n                                        </div>\r\n                                        <div class=\"row col-sm-12\">\r\n                                            <div class=\"col-sm-3 input-group\">\r\n                                                <div class=\"form-group mb0\">\r\n                                                    <label>Quantity Type</label>\r\n                                                    <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\" (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                        <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                            {{sqType.Name}}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                                <div class=\"form-group mb0\">\r\n                                                    <label>Quantity</label>\r\n                                                    <div class=\"input-group\">\r\n                                                        <input type=\"text\" name=\"RequiredQuantity\"\r\n                                                               [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                               [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                               (change)=\"validateMsg='';\"\r\n                                                               class=\"form-control\" required />\r\n                                                        <div class=\"invalid-feedback\"\r\n                                                             [ngClass]=\"{'show-element': !isValid}\">\r\n                                                            {{validateMsg}}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6 mt5\">\r\n                                                <label>Priority</label>\r\n                                                <div class=\"col-sm-12 pa0 mt5\">\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                               [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                        <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                               [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                        <label class=\"form-check-label\" for=\"shouldgo-dr\">\r\n                                                            Should\r\n                                                            Go\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                               [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                        <label class=\"form-check-label\" for=\"couldgo-dr\">\r\n                                                            Could\r\n                                                            Go\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div class=\"col-sm-12 text-right mt10 \">\r\n                                            <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                                    class=\"btn btn-primary btn-lg\">\r\n                                                Create\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </div>\r\n                                <div *ngIf=\"ExistingDeliveries.length\">\r\n                                    <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                                <h2 class=\"mb-0\">\r\n                                                    <button class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                            type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                            aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                        Existing Delivery Request(s)\r\n                                                        <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                            <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                            <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                        </span>\r\n                                                    </button>\r\n                                                </h2>\r\n\r\n                                            </div>\r\n                                            <div id=\"collapseOne\" class=\"collapse\"\r\n                                                 [ngClass]=\"{'show':modalDetails.IsScheduled}\"\r\n                                                 aria-labelledby=\"headingOne\" data-parent=\"#accordionExitingDrReq\">\r\n                                                <div class=\"card-body pa5\">\r\n                                                    <div class=\"table-responsive\">\r\n                                                        <table class=\"table table-hover margin bottom details-table\">\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>Quantity</th>\r\n                                                                    <th>Schedule Date</th>\r\n                                                                    <th>Schedule Time</th>\r\n                                                                    <th>Driver</th>\r\n                                                                    <th>Carrier</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                                    <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}</td>\r\n                                                                    <td>{{del.ScheduleDate}}</td>\r\n                                                                    <td>{{del.ScheduleTime}}</td>\r\n                                                                    <td>{{del.Driver}}</td>\r\n                                                                    <td>{{del.Carrier}}</td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <div id=\"create-dip-test\">\r\n            <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\r\n        </div>\r\n","import { Component, OnInit, ViewChildren, QueryList, Input, SimpleChanges, OnDestroy, OnChanges, ViewChild } from '@angular/core';\nimport { Subject, forkJoin, Subscription, merge } from 'rxjs';\nimport { DeliveryDetailsModel, SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { SalesFilterModal } from '../Models/BuyerWallyBoard';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-priority-view',\n    templateUrl: './priority-view.component.html',\n    styleUrls: ['./priority-view.component.css']\n})\nexport class PriorityViewComponent implements OnInit, OnDestroy {\n    public MustGoSchedules: any = [];\n    public ShouldGoSchedules: any = [];\n    public CouldGoSchedules: any = [];\n    public dtMustGoOptions: any = {};\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoTrigger: Subject<any> = new Subject();\n    public dtCouldGoTrigger: Subject<any> = new Subject();\n    public IsShouldGoLoading: boolean;\n    public IsCouldGoLoading: boolean;\n    public IsMustGoLoading: boolean;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTank: SalesDataModel;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public ScheduleQuantityTypes: any = [];\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n\n\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    public SelectedTankRegionId: string = '';\n\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[]= [];\n\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) {\n    }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    init() {\n\n        this.applyFilterSubscription.push(merge(\n            this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n                if(this.salesTabFilterForm.get('SalesViewType').value == 1){\n                    this.getSalesData();\n                }\n         }));\n        //to load data - after second ngOnInit\n        if (this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').value) {\n            this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(false);\n            this.getSalesData();\n        }\n\n        this.initializeMustGo();\n        this.initializeCouldGo();\n        this.initializeShouldGo();\n        this.getScheduleQuantityType();\n    }\n\n    ngOnDestroy(): void {\n        this.dtCouldGoTrigger.unsubscribe();\n        this.dtShouldGoTrigger.unsubscribe();\n        this.dtMustGoTrigger.unsubscribe();\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n\n    columnsDetails = [\n        { data: 'Cust', \"autoWidth\": true },\n        { data: 'LocName', \"autoWidth\": true },\n        { data: 'Loc', \"autoWidth\": true },\n        { data: 'TName', \"autoWidth\": true },\n        { data: 'Avg7Day', \"autoWidth\": true },\n        { data: 'PDS', \"autoWidth\": true },\n        { data: 'CI', \"autoWidth\": true },\n        { data: 'Ullg', \"autoWidth\": true },\n        { data: 'lastDelivery', \"autoWidth\": true },\n        { data: 'lastDeliveryQty', \"autoWidth\": true },\n        { data: 'DRemg', \"autoWidth\": true }\n    ];\n\n    initializeMustGo() {\n\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtMustGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-MustGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-MustGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n\n        };\n    }\n\n    initializeCouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtCouldGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-CouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-CouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n    initializeShouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtShouldGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-ShouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-ShouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            fixedHeader: false,\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            order: [13]\n        };\n\n    }\n    getScheduleQuantityType() {\n        this.dispatcherService.GetBuyerScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n    getSalesDtls() {\n        let inputs = {\n            Priority: DeliveryReqPriority.None,\n            LocationId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedlocationList').value),\n            SelectedTab: SelectedTabEnum.Priority,\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            InventoryCaptureTypeIds: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n        };\n        this.IsShouldGoLoading = true;\n        this.IsCouldGoLoading = true;\n        this.IsMustGoLoading = true;\n        forkJoin([this.dispatcherService.getBuyerSalesData(inputs),\n        this.dispatcherService.GetRaisedBuyerExceptions()])\n            .subscribe(async (resp) => {\n\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                this.ShouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.ShouldGo) as SalesDataModel[];\n                this.CouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.CouldGo) as SalesDataModel[];\n                this.MustGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.MustGo) as SalesDataModel[];\n                this.destroyDatatable();\n                this.IsShouldGoLoading = false;\n                this.IsCouldGoLoading = false;\n                this.IsMustGoLoading = false;\n                this.dtCouldGoTrigger.next();\n                this.dtShouldGoTrigger.next();\n                this.dtMustGoTrigger.next();\n\n            });\n    }\n\n\n    filterData(): void {\n        this.getSalesData();\n    }\n\n    getSalesData(): void {\n        this.IsCouldGoLoading = true;\n        this.IsShouldGoLoading = true;\n        this.IsMustGoLoading = true;\n        this.getSalesDtls();\n    }\n\n    destroyDatatable(): void {\n        if (this.dtElements) {\n            this.dtElements.forEach((dtElement: DataTableDirective) => {\n                if (dtElement.dtInstance) {\n                    dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                        dtInstance.destroy();\n\n                    });\n                }\n            });\n        }\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetBuyerDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n    public onDrSubmit() {\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (this.RequiredQuantity == null || this.RequiredQuantity == 0)) {\n            Declarations.msgerror(\"Invalid required quantity.\", undefined, undefined);\n            this.isValid = false;\n        }\n        else if ((this.SelectedTank.MaxFillQuantity != null && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity)) {\n            Declarations.msgerror(\"Quantity Should be less than max fill quantity: \" + this.SelectedTank.MaxFillQuantity, undefined, undefined);\n            this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.isValid = true;\n            this.dispatcherService.PostBuyerRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.DRLoader = false;\n                this.closeModal();\n                $(\".modal-backdrop\").removeClass(\"show\");\n                $(\".modal-backdrop\").addClass(\"hide\");\n\n            });\n        }\n    }\n\n    public showTanks(row) {\n        this.SelectedTankRegionId = row.RegionId;\n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = row.RegionId;\n        salesDataModel.SiteId = row.SiteId;\n        salesDataModel.TankId = row.TankId;\n        salesDataModel.StorageId = row.StorageId;\n        salesDataModel.TfxJobId = row.TfxJobId;\n        salesDataModel.LocationManagedType = row.LocationManagedType ? row.LocationManagedType: null;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsMustGoLoading || IsShouldGoLoading || IsCouldGoLoading\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row mt60\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div>\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-salemustgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsMustGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of MustGoSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td> <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span>\r\n                                                                   <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"  *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                         <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining==\"--\" ? \"NA\" :row.DaysRemaining}}</td>\r\n                                        <!-- <td><a (click)=\"openModal(row)\">{{row.Status}}</a></td> -->\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                            <table id=\"table-saleshouldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsShouldGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of ShouldGoSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td>  <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining==\"--\" ? \"NA\" :row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                            <table id=\"table-salecouldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <!-- <th data-key=\"Cust\">Customer</th> -->\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level </th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsCouldGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of CouldGoSchedules\">\r\n                                        <!-- <td>{{row.CompanyName}}</td> -->\r\n                                        <td>{{row.LocationName}}</td>  <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}</td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory}}</td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage =='--'?'Not Available':row.Ullage}}</td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}</td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining==\"--\" ? \"NA\" :row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n</ng-container>\r\n\r\n<ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n         [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n         aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt10 pb5 no-border\">\r\n                    <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{modalDetails.title}}\r\n                    </h3>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fa-lg\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h3 class=\"fs14 font-bold\">Create DR</h3>\r\n                                </div>\r\n                                <div class=\"row col-sm-12\">\r\n                                    <div class=\"col-sm-3 input-group\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity Type</label>\r\n                                            <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\" (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                    {{sqType.Name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" name=\"RequiredQuantity\"\r\n                                                       [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                       [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                       (change)=\"validateMsg=''\"\r\n                                                       class=\"form-control\" required />\r\n                                                <div class=\"invalid-feedback\"\r\n                                                     [ngClass]=\"{'show-element': !isValid}\">\r\n                                                    {{validateMsg}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 mt5\">\r\n                                        <label>Priority</label>\r\n                                        <div class=\"col-sm-12 pa0 mt5\">\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                <label class=\"form-check-label\" for=\"shouldgo-dr\">\r\n                                                    Should\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                <label class=\"form-check-label\" for=\"couldgo-dr\">\r\n                                                    Could\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 text-right mt10 \">\r\n                                    <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                            class=\"btn btn-primary btn-lg\">\r\n                                        Create\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div *ngIf=\"ExistingDeliveries.length\">\r\n                            <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                    type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                    aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                Existing Delivery Request(s)\r\n                                                <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                    <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                    <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                </span>\r\n                                            </button>\r\n                                        </h2>\r\n\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" class=\"collapse\"\r\n                                         [ngClass]=\"{'show':modalDetails.IsScheduled}\"\r\n                                         aria-labelledby=\"headingOne\" data-parent=\"#accordionExitingDrReq\">\r\n                                        <div class=\"card-body pa5\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover margin bottom details-table\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Schedule Date</th>\r\n                                                            <th>Schedule Time</th>\r\n                                                            <th>Driver</th>\r\n                                                            <th>Carrier</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                            <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}</td>\r\n                                                            <td>{{del.ScheduleDate}}</td>\r\n                                                            <td>{{del.ScheduleTime}}</td>\r\n                                                            <td>{{del.Driver}}</td>\r\n                                                            <td>{{del.Carrier}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\r\n</div>","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-tank-view-master',\n  templateUrl: './tank-view-master.component.html',\n  styleUrls: ['./tank-view-master.component.css']\n})\nexport class TankViewMasterComponent implements OnInit {\n\n    @Input() salesTabFilterForm: FormGroup;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n}\n","<div class=\"col-sm-12\" [formGroup]=\"salesTabFilterForm\">\r\n    <div class=\"row mt60\">\r\n        <div class=\"col-sm-12 text-center\">\r\n            <div class=\"custom-control custom-switch mb10\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"chk-consumptionrate\" name=\"chkRateOfConsumption\"\r\n                    formControlName=\"RateOfConsumption\" />\r\n                <label class=\"custom-control-label\" for=\"chk-consumptionrate\">Rate Of Consumption</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div>\r\n    <app-buyertank-view *ngIf=\"!salesTabFilterForm.get('RateOfConsumption').value\" [salesTabFilterForm]=\"salesTabFilterForm\">Loading...\r\n    </app-buyertank-view>\r\n\r\n    <app-forecasting-tank-view *ngIf=\"salesTabFilterForm.get('RateOfConsumption').value\" [salesTabFilterForm]=\"salesTabFilterForm\" [RequestFromBuyerWallyBoard]=\"true\">Loading...\r\n    </app-forecasting-tank-view>\r\n</div>","import { Component, OnInit, SimpleChanges, Input, ViewChildren, QueryList, ViewChild, OnChanges, OnDestroy } from '@angular/core';\nimport { Subject, forkJoin, merge, Subscription } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { ForecastingLocationFilter } from 'src/app/dispatcher/dispatcher.model';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-buyertank-view',\n    templateUrl: './tank-view.component.html',\n    styleUrls: ['./tank-view.component.css']\n})\nexport class TankViewComponent implements OnInit, OnDestroy {\n\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[]= [];\n    public LocationSchedules: any = [];\n    CloneLocationSchedules = [];\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\n    public FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\n    IsLoading = false;\n    IsLocDrpDwnLoading = false;\n\n    public dtTrigger: Subject<any> = new Subject();\n    public dtOptions: any = {};\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    public SelectedRegionId: string;\n    public SelectedCustomerId: string;\n    SelectedLocationId: string;\n    SelectedTankId: string;\n    SelectedSiteId: string;\n\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    filterArgs = { key: \"DaysRemaining\", asc: true };\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) {\n    }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n        //  this.initLocationDropDown();\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n            this.initLocationDropDown();\n        }));\n        //to load data - after in ngOnInit\n        if(this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').value){\n            this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(false);\n            this.initLocationDropDown();\n        }\n    }\n\n    ngOnDestroy(){\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n\n    setSortArgs(key: string) {\n        if (this.filterArgs.key == key) {\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\n        }\n        else {\n            this.filterArgs = { asc: true, key: key }\n        }\n    }\n\n    initLocationDropDown() {\n        this.IsLocDrpDwnLoading = true;\n        this.LocationDrpDwnList = [];\n\n        let filter: ForecastingLocationFilter = {\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            CustomerIds: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n        };\n\n        forkJoin([this.dispatcherService.getBuyerLocationTanks(filter), this.dispatcherService.GetRaisedBuyerExceptions()])\n            .subscribe(result => {\n                this.IsLocDrpDwnLoading = false;\n                this.LocationDrpDwnList = result[0];\n                this.Partsfiltering();\n                this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\n                if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\n                    this.LocationDrpDwnList.forEach(loc => {\n                        loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\n                            if (result[1] && result[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\n                                m.IsUnknowDeliveryOrMissDelivery = true;\n                            else\n                                m.IsUnknowDeliveryOrMissDelivery = false;\n                        });\n                    });\n                }\n                else {\n                    this.SelectedTankId = null;\n                    this.LocationSchedules = [];\n                    this.CloneLocationSchedules = [];\n                    this.SelectedLocationId = '0';\n                }\n            });\n    }\n\n    locationChange($event) {\n        this.SelectedTankId = null;\n        this.SelectedLocationId = $event.JobId;\n        this.SelectedSiteId = $event.SiteId;\n        this.LocationSchedules = [];\n        this.CloneLocationSchedules = [];\n        this.getSalesData();\n    }\n\n    tankChange($event) {\n        if (this.CloneLocationSchedules && this.CloneLocationSchedules.length > 0) {\n            this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\n            this.LocationSchedules = this.CloneLocationSchedules.filter(f => f.TankId == $event.TankId && f.StorageId == $event.StorageId);\n        }\n        else\n            this.LocationSchedules = [];\n    }\n\n    public getSalesData() {\n        let inputs = {\n            Priority: DeliveryReqPriority.None,\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Tanks,\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            InventoryCaptureTypeIds: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n        };\n        this.IsLoading = true;\n        this.dispatcherService.getBuyerSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\n            this.LocationSchedules = resp;\n            this.CloneLocationSchedules = resp;\n            this.IsLoading = false;\n            this.LocationSchedules && this.LocationSchedules.map(m => {\n                try {\n                    this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            })\n            this.datatableRerender();\n        });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                dtInstance.destroy();\n                this.dtTrigger.next();\n            });\n        }\n    }\n\n    Partsfiltering(inputName?) {\n        this.FilterLocationDrpDwnList = [];\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\n            let searchWord = inputName.target.value.toUpperCase();\n            this.LocationDrpDwnList.forEach(element => {\n                if (element.LocationName.toUpperCase().indexOf(searchWord) !== -1) {\n                    this.FilterLocationDrpDwnList.push(element);\n                }\n            });\n        } else {\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;\n        }\n    }\n\n\n    public showTanks(location: any) {\n\n        if (location && location.RegionId) {\n            this.SelectedRegionId = location.RegionId;\n\n            let salesDataModel = new SalesDataModel();\n            salesDataModel.RegionId = location.RegionId;\n            salesDataModel.SiteId = location.SiteId;\n            salesDataModel.TankId = location.TankId;\n            salesDataModel.StorageId = location.StorageId;\n            salesDataModel.TfxJobId = parseInt(location.JobId);\n            salesDataModel.LocationManagedType = location.LocationManagedType ? location.LocationManagedType: null;\n            this.dipTestComponent.loadTankDR(salesDataModel);\n        }\n        else {\n            Declarations.msgerror(\"Location not assigned to region. Contact your supplier\", undefined, undefined);\n            this.closeSidePanel();\n        }\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n\n\nexport class LocationTankDetailsModel {\n    JobId?: number;\n    SiteId?: string;\n    Tanks?: TankDetailModel[];\n    LocationName: string;\n    DaysRemaining: number\n    Status: string\n}\n\nexport class TankDetailModel {\n    TankId?: string;\n    StorageId?: string;\n    Name?: string;\n    IsUnknowDeliveryOrMissDelivery?: boolean;\n    TankInventoryDiffinHrs?: number;\n    Status: string;\n    DaysRemaining: number;\n    CustomerInfo?: string;\n}\n\n\n\n\n","<div class=\"row\">\n    <div class=\"col-sm-4\">\n        <div class=\"well bg-white shadow-b location-panel\">\n            <div id=\"accordion-location\" class=\"location-accordion\">\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\n                src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\n                alt=\"animated-truck-image-0009\" />-->\n                <div class=\"position-abs text-center\" [ngClass]=\"{'hide-element': !IsLocDrpDwnLoading }\">\n                    <span class='spinner-small ml10 mt5'></span>\n                </div>\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"mb10\">\n                    <div class=\"inner-addon left-addon\">\n                        <i class=\"glyphicon glyphicon-search\"></i>\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\"\n                            (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">No\n                    Location Available</div>\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\n\n                    <table class=\"table tank-view\">\n                        <thead>\n                            <tr>\n                                <th width=\"45%\">Location</th>\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                                </th>\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\n                                <th>\n                                    Status\n                                </th>\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\n                                </th> -->\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index\">\n                                <tr >\n                                    <td>\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.JobId\">\n                                            <h2 class=\"mb-0\">\n                                                <div ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\n                                                    class=\"position-relative pr-3 btn btn-link collapsed text-left position-relative pr-3\"\n                                                    data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.JobId\"\n                                                    aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.JobId\"\n                                                    (click)=\"locationChange(loc)\">\n                                                    <ng-container>\n                                                        {{loc?.LocationName}}\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\n                                                    </ng-container>\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\n                                                    </span>\n                                                </div>\n                                            </h2>\n                                        </div>\n                                       \n                                    </td>\n    \n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\n                                    <td>\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\n                                            <span class=\"\">{{loc.Status}}</span>\n                                        </a>\n                                    </td>\n                                </tr>\n                                <tr [attr.id]=\"'col'+loc?.JobId\" class=\"collapse\"\n                                data-parent=\"#accordion-location\"\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.JobId\">\n                                <td colspan=\"3\">\n                                    <div class=\"card-body\">\n                                        <ul class=\"list-group list-group-flush\">\n\n                                            <table class=\"table tank-view-child\">\n                                                <tbody>\n                                                    <tr *ngFor=\"let tank of loc?.Tanks\">\n                                                        <td width=\"49%\">\n\n                                                            <a href=\"javascript:void(0)\"\n                                                                (click)=\"tankChange(tank)\"\n                                                                [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\n                                                                {{tank.Name}}\n                                                                <span\n                                                                    *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\n                                                                    class=\"active-dot\"></span>\n\n                                                                <span title=\"Tank Inventory Alert\"\n                                                                    class=\"activediff-dot\"\n                                                                    *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\n                                                            </a>\n                                                        </td>\n                                                        <td width=\"24%\">\n                                                            {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\n                                                        </td>\n                                                        <td>\n                                                            <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\n                                                                <span class=\"\">{{tank.Status}}</span>\n                                                            </a>\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </ul>\n                                    </div>\n                                    </td>\n                                </tr>\n                            </ng-container>\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"col-sm-8 location-chart-panel\">\n        <div class=\"well bg-white shadow-b\">\n            <app-tank-chart [JobId]=\"SelectedLocationId\" [SiteId]=\"SelectedSiteId\" [TankId]=\"SelectedTankId\"\n                [isSupplierView]=\"false\"></app-tank-chart>\n        </div>\n        <div class=\"well bg-white shadow-b pr\">\n            <div class=\"ibox mb0\">\n                <div class=\"ibox-content no-padding no-border\">\n                    <div class=\"table-responsive\">\n                        <!--Enum - GridName.DispatherMustGoGrid => 19-->\n                        <table id=\"table-Location\" class=\"table table-bordered table-hover\" datatable\n                            [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\n                            <thead>\n                                <tr>\n                                    <!-- <th data-key=\"Cust\">Customer</th> -->\n                                    <th data-key=\"LocName\">Location Name</th>\n                                    <th data-key=\"Loc\">Location</th>\n                                    <th data-key=\"TName\">Tank Name</th>\n                                    <th data-key=\"WL\">Water Level</th>\n                                    <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\n                                    <th data-key=\"PDS\">Previous Day Sale</th>\n                                    <th data-key=\"SaleWeek\">Week Ago Sale</th>\n                                    <th data-key=\"CI\">Last Inventory Reading</th>\n                                    <th data-key=\"LastReadingTime\">Last Reading Time</th>\n                                    <th data-key=\"Ullg\">Ullage</th>\n                                    <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\n                                    <th data-key=\"lastDelivery\">Last Delivered On</th>\n                                    <th data-key=\"DRemg\">Days Remaining</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\n                                    <span class='spinner-dashboard pa'></span>\n                                </tr>\n                                <tr *ngFor=\"let row of LocationSchedules\">\n                                    <!-- <td>{{row.CompanyName}}</td> -->\n                                    <td>{{row.LocationName}}</td><!-- <td>{{row.SiteId}}</td> -->\n                                    <td>{{row.Location}}</td>\n                                    <td>{{row.TankName}}</td>\n                                    <td>{{row.WaterLevel}}</td>\n                                    <td>{{row.AvgSale}}</td>\n                                    <td>\n                                        <div *ngIf=\"row.PrevSale == 'NA*'\">\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\n                                        </div>\n                                        <div *ngIf=\"row.PrevSale != 'NA*'\">\n                                            {{row.PrevSale}}\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\n                                        </div>\n                                        <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\n                                            {{row.WeekAgoSale}}\n                                        </div>\n                                    </td>\n                                    <td>{{row.Inventory}}</td>\n                                    <td>{{row.LastReadingTime}}</td>\n                                    <td>{{row.Ullage}}</td>\n                                    <td>{{row.LastDeliveredQuantity}}</td>\n                                    <td>{{row.LastDeliveryDate}}</td>\n                                    <td>{{(row.DaysRemaining == null)? \"N\\A\": row.DaysRemaining + \" Days\"}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"create-dip-test\">\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" \n        [SelectedRegionId]=\"SelectedRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { LoadFilterModel, SalesFilterModal, SalesTankFilterModal, TfxModule } from './Models/BuyerWallyBoard';\nimport { BuyerwallyboardService } from './services/buyerwallyboard.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from '../carrier/service/wally-utility.service';\nimport { InventoryDataCaptureList, LoadPriorities } from '../app.constants';\nimport { SalesTabViewType } from '../app.enum';\n\n@Component({\n    selector: 'app-sales',\n    templateUrl: './sales.component.html',\n    styleUrls: ['./sales.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SalesComponent implements OnInit {\n    public filterCount: number = 0;\n\n    public CarrierDdlSettings: any = {};\n    public LocationDdlSettings: any = {};\n    public toogleFilter: Boolean = false;\n    public Locations: LoadFilterModel[] = [];\n    public Carriers: any = [];\n\n    public LoadPriorities: any = LoadPriorities;\n    public LocationAttributeList = InventoryDataCaptureList;\n    public salesTabFilterForm: FormGroup;\n    \n    constructor(private dispatcherService: BuyerwallyboardService, private wallyUtilService: WallyUtilService) {\n        this.salesTabFilterForm = this.wallyUtilService.getSalesTabFilterForm();\n    }\n\n    ngOnInit() {\n        this.CarrierDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.LocationDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n        this.GetFilters();\n    }\n\n    getCarrierLocations() {\n        this.dispatcherService.GetFilterData(this.salesTabFilterForm.get('IsShowCarrierManaged').value).subscribe(data => {\n            this.Locations = data;\n            this.Carriers = this.GetUniqueItems(data.map(t => t.Carriers).reduce((p, n) => p.concat(n), []));\n        });\n    }\n\n    public toggleFilterView() {\n        this.toogleFilter = !this.toogleFilter;\n    }\n\n    locationChanged(event?: any): void {\n        this.salesTabFilterForm.get('SelectedCarriers').setValue([])\n        this.setJobSuppliers();\n    }\n\n    setJobSuppliers(): void {\n        this.Carriers = [];\n        let SelectedLocations = this.salesTabFilterForm.get('SelectedlocationList').value as any[];\n        this.Locations.map(m => {\n            if (SelectedLocations.find(f => f.Id == m.Id) || SelectedLocations.length == 0) {\n                if (m && m.Carriers && m.Carriers.length > 0) {\n                    this.Carriers = this.Carriers.concat(m.Carriers);\n                }\n            }\n        })\n        this.Carriers = this.GetUniqueItems(this.Carriers.reduce((p, n) => p.concat(n), []));\n    }\n\n    GetUniqueItems(items: any[]) {\n        const ids = [];\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\n    }\n    public ShowCarrierMangedData() {\n        this.salesTabFilterForm.get('SelectedCarriers').setValue([]);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue([]);\n        \n        this.getCarrierLocations();\n        this.ApplyFilters();\n        this.SaveFilters(true);\n    }\n\n    public GetFilters() {\n        this.dispatcherService.getFilters(TfxModule.BuyerWallyboardSales).subscribe(res => {\n            if (res && res.length > 0) {\n                this.SetFilters(res);\n            }\n            else {\n                this.getCarrierLocations();\n                this.ApplyFilters();\n            }\n        });\n    }\n\n    public SaveFilters(isTopFilter: boolean) {\n        \n        this.dispatcherService.getFilters(TfxModule.BuyerWallyboardSales).subscribe(res => {\n            if (res) {\n                \n                let filterData = {};\n\n                var input = JSON.parse(res);\n                if (isTopFilter) {\n                    filterData['isShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    filterData['SelectedCarriers'] = this.salesTabFilterForm.get('SelectedCarriers').value;\n                    if (input.SelectedLocations && input.SelectedLocations.length > 0) {\n                        filterData['SelectedLocations'] = input.SelectedLocations || [];\n                    }\n                    if (input.selectedLocAttributeList && input.selectedLocAttributeList.length > 0) {\n                        filterData['selectedLocAttributeList'] = input.selectedLocAttributeList || [];\n                    }\n                } else {\n\n                    filterData['SelectedLocations'] = this.salesTabFilterForm.get('SelectedlocationList').value as any[] || [];\n                    filterData['selectedLocAttributeList'] = this.salesTabFilterForm.get('SelectedLocAttributeList').value as any[] || [];\n                    filterData['IsShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    if (input.SelectedCarriers && input.SelectedCarriers.length > 0) {\n                        filterData['SelectedCarriers'] = input.SelectedCarriers || [];\n                    }\n                }\n                this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardSales, JSON.stringify(filterData)).subscribe();\n            }\n        });\n    }\n\n    public SetFilters(input: any) {\n        let filter = JSON.parse(input);\n        this.salesTabFilterForm.get('IsShowCarrierManaged').setValue(filter.isShowCarrierManaged);\n        this.salesTabFilterForm.get('SelectedCarriers').setValue(filter.SelectedCarriers);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue(filter.SelectedLocations);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue(filter.selectedLocAttributeList);\n        \n        this.getCarrierLocations();\n        this.ApplyFilters();\n    }\n\n    public ResetFilters() {\n        this.salesTabFilterForm.get('SelectedlocationList').setValue([]);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue([]);\n        this.ApplyFilters('reset');\n    }\n\n    public ApplyFilters(msg?: string) {\n\n        this.salesTabFilterForm.get('IsApplyFilter').setValue(true);\n        \n        if (msg == \"set\") {\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\n        } else if (msg == \"reset\") {\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\n        }\n\n        this.setFilterCount();\n    }\n\n    setFilterCount(){\n\n        this.filterCount = 0;\n\n        let SelectedLocations = this.salesTabFilterForm.get('SelectedlocationList').value as any[];\n        let selectedLocAttributeList = this.salesTabFilterForm.get('SelectedLocAttributeList').value as any[];\n\n        if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.PriorityTab) {\n            this.filterCount += SelectedLocations.length;\n            this.filterCount += selectedLocAttributeList.length;\n        }\n        else if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.TanksTab) {\n            this.filterCount += selectedLocAttributeList.length;\n        }\n    }\n\n    triggerFilter($event: any){\n        if($event)\n            this.GetFilters();\n    }\n\n    salesViewTypeChanged(type: SalesTabViewType){\n        this.salesTabFilterForm.get('SalesViewType').setValue(type);\n        this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(true);\n        this.setFilterCount();\n    }\n}\n","<div class=\"col-sm-9 sticky-header-sales\">\r\n    <div class=\"row\">\r\n        <div class=\"col-2\">\r\n            <div class=\"dib border pa5 radius-capsule shadow-b pull-left mb10\">\r\n                <div class=\"btn-group btn-filter\">\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"1\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==1\" />\r\n                    <label class=\"btn ml0\" (click)=\"salesViewTypeChanged(1);\">Priority</label>\r\n\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"2\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==2\" />\r\n                    <label class=\"btn\" (click)=\"salesViewTypeChanged(2);\">Tanks</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\" [formGroup]=\"salesTabFilterForm\">\r\n            <div class=\"form-check form-check-inline fs14 mt10\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" name=\"IsShowCarrierManaged\"\r\n                formControlName=\"IsShowCarrierManaged\" (change)=\"ShowCarrierMangedData()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"mtm5\" *ngIf=\"salesTabFilterForm.get('IsShowCarrierManaged').value\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\" [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 p-0\">\r\n                        <ng-multiselect-dropdown formControlName=\"SelectedCarriers\"\r\n                                                 [settings]=\"CarrierDdlSettings\" [placeholder]=\"'Select Carrier'\"\r\n                                                 [data]=\"Carriers\" (onSelect)=\"SaveFilters(true)\" (onDeSelect)=\"SaveFilters(true)\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div class=\"col-sm-3 pr-5 pt5\" *ngIf=\"salesViewType!=2\">\r\n              <ng-multiselect-dropdown [(ngModel)]=\"SelectedLocations\" [settings]=\"LocationDdlSettings\"\r\n                         [placeholder]=\"'Select Location'\" [data]=\"Locations\" (onSelect)=\"onLocationSelect($event)\"\r\n                         (onDeSelect)=\"onLocationUnselect($event)\" (onSelectAll)=\"onAllLocationSelect($event)\"\r\n                         (onDeSelectAll)=\"onAllLocationDeSelect($event)\">\r\n             </ng-multiselect-dropdown>\r\n         </div>\r\n         <div class=\"col-sm-4 pr-5 pt5\">\r\n             <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\"\r\n                                     [settings]=\"LocationDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                     [data]=\"LocationAttributeList\">\r\n                                 </ng-multiselect-dropdown>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-4 pl0 text-right pt8\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i>Filters</a>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" [formGroup]=\"salesTabFilterForm\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\" *ngIf=\"salesTabFilterForm.get('SalesViewType').value!=2\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedlocationList\" [settings]=\"LocationDdlSettings\"\r\n                                             [placeholder]=\"'Select Location'\" [data]=\"Locations\" (onSelect)=\"locationChanged()\"\r\n                                             (onDeSelect)=\"locationChanged()\" (onSelectAll)=\"locationChanged()\"\r\n                                             (onDeSelectAll)=\"locationChanged()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"\" [ngClass]=\"salesTabFilterForm.get('SalesViewType').value!=2 ? 'col-6' : 'col-8'\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedLocAttributeList\"\r\n                                             [settings]=\"LocationDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                             [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"ResetFilters();SaveFilters(false);\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set');SaveFilters(false); p.close();\" class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<div class=\"row\"> \r\n    <div class=\"col-sm-12\">\r\n        <app-priority-view *ngIf=\"salesTabFilterForm.get('SalesViewType').value==1\" [salesTabFilterForm]=\"salesTabFilterForm\">Loading...\r\n        </app-priority-view>\r\n\r\n        <app-tank-view-master *ngIf=\"salesTabFilterForm.get('SalesViewType').value==2\" [salesTabFilterForm]=\"salesTabFilterForm\" \r\n                               (TriggerFilter)=\"triggerFilter($event)\" >Loading...</app-tank-view-master>\r\n    </div>\r\n</div>","import { Component, OnInit, AfterViewInit, ViewChildren, QueryList, OnDestroy, ViewChild, TemplateRef, SimpleChanges, OnChanges, Input } from '@angular/core';\r\nimport { Subject, from, Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DataTablesResponse } from '../../shared/models/DataTable-models';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { LoadFilterModel, TfxModule } from '../Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from '../services/buyerwallyboard.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DeliveryReqPriority, SelectedMapLabelEnum } from 'src/app/app.enum';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\ndeclare function IsUserActive(): boolean;\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver-grid-view',\r\n    templateUrl: './grid-view.component.html',\r\n    styleUrls: ['./grid-view.component.css']\r\n})\r\nexport class WhereIsMyDriverGridViewComponent implements OnInit {\r\n\r\n    @Input() singleMulti: number;\r\n    @Input() FilterForm: FormGroup;\r\n    public SelectedMapLabelEnum = SelectedMapLabelEnum;\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 4;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n    private searchLoadInterval: any;\r\n    private autoRefreshInterval: any;\r\n    private autoRefreshTimerInterval: any;\r\n    private setCountryCenterInterval: any;\r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Locations: LoadFilterModel[] = [];\r\n    public States: any = [];\r\n    public Suppliers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public SelectedLocationId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    public activePriorityTab = 1;\r\n    public DeliveryReqPriority = DeliveryReqPriority;\r\n    changeFilterValueIntervalForMultiWindow: any;\r\n    showMustGo=false;\r\n    showShouldGo=false;\r\n    showCouldGo=false;\r\n\r\n    constructor(private dispatcherService: BuyerwallyboardService, private chatService: chatService, private carrierService: CarrierService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.subscribeFormChanges();\r\n        let exportColumns = { columns: ':visible' };\r\n        let mustGocolumnsDetails = [];\r\n        let shouldGocolumnsDetails = [];\r\n        let couldGocolumnsDetails = [];\r\n\r\n        mustGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\r\n        { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\r\n        { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\r\n        { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\r\n        { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\r\n        { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\r\n        { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\r\n        { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\r\n        { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\r\n        { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }];\r\n\r\n        this.dtMustGoOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            fixedHeader: {\r\n                header: true,\r\n                headerOffset: 200,\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {                \r\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n                let inputs = {\r\n                    LocationIds: this.getLocationIds(),\r\n                    States: _states,\r\n                    Priority: DeliveryReqPriority.MustGo,\r\n                    FromDate: this.FilterForm.get('FromDate').value,\r\n                    ToDate: this.FilterForm.get('ToDate').value,\r\n                    DriverSearch: this.SearchedKeyword,\r\n                    SupplierCompanyIds: this.getSupplierIds(),\r\n                    CarrierCompanyIds: this.getCarrierIds(),\r\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n                    InventoryCaptureType:this.getselectedLocAttributeIds()\r\n                };\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsMustGoLoading = true;\r\n                this.dispatcherService.getBuyerLoadsForGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.MustGoSchedules = resp.data;\r\n                    this.IsMustGoLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                });\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[8, 'desc']],\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Must Go', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Must Go', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: mustGocolumnsDetails\r\n        };\r\n\r\n\r\n        shouldGocolumnsDetails = [\r\n            { title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\r\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\r\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\r\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\r\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\r\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\r\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\r\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\r\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\r\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }];\r\n\r\n        this.dtShouldGoOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            fixedHeader: {\r\n                header: true,\r\n                headerOffset: 200,\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n                let inputs = {\r\n                    LocationIds: this.getLocationIds(),\r\n                    States: _states,\r\n                    Priority: DeliveryReqPriority.ShouldGo,\r\n                    FromDate: this.FilterForm.get('FromDate').value,\r\n                    ToDate: this.FilterForm.get('ToDate').value,\r\n                    DriverSearch: this.SearchedKeyword,\r\n                    SupplierCompanyIds: this.getSupplierIds(),\r\n                    CarrierCompanyIds: this.getCarrierIds(),\r\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n                    InventoryCaptureType:this.getselectedLocAttributeIds()\r\n                };\r\n\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsShouldGoLoading = true;\r\n                this.dispatcherService.getBuyerLoadsForGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.ShouldGoSchedules = resp.data;\r\n                    this.IsShouldGoLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                });\r\n\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[8, 'desc']],\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns},\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Should Go', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Should Go', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: shouldGocolumnsDetails\r\n        };\r\n\r\n\r\n        couldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\r\n        { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\r\n        { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\r\n        { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\r\n        { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\r\n        { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\r\n        { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\r\n        { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\r\n        { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\r\n        { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }];\r\n\r\n        this.dtCouldGoOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            fixedHeader: {\r\n                header: true,\r\n                headerOffset: 200,\r\n            },\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n                let inputs = {\r\n                    LocationIds: this.getLocationIds(),\r\n                    States: _states,\r\n                    Priority: DeliveryReqPriority.CouldGo,\r\n                    FromDate: this.FilterForm.get('FromDate').value,\r\n                    ToDate: this.FilterForm.get('ToDate').value,\r\n                    DriverSearch: this.SearchedKeyword,\r\n                    SupplierCompanyIds: this.getSupplierIds(),\r\n                    CarrierCompanyIds: this.getCarrierIds(),\r\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n                    InventoryCaptureType:this.getselectedLocAttributeIds()\r\n                };\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsCouldGoLoading = true;\r\n                this.dispatcherService.getBuyerLoadsForGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.CouldGoSchedules = resp.data;\r\n                    this.IsCouldGoLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                });\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[8, 'desc']],\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns},\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Could Go', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Could Go', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: couldGocolumnsDetails\r\n        };\r\n        this.selectedDriverLoadsdtOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            searching: true,\r\n            destroy: true,\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis', exportOptions: exportColumns },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Dispatcher Dashboard - Selected Driver Loads', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Selected Driver Loads', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n        };\r\n\r\n        // this.changeFilterValueIntervalForMultiWindow = setInterval(() => {\r\n             //this.checkFilterValueChange();\r\n        // }, 10000);\r\n\r\n    }\r\n\r\n    getLocationIds() {\r\n        let locations = [];\r\n        let selectedLocationIds = '';\r\n        this.FilterForm.get('SelectedLocations').value.forEach(res => { locations.push(res.Id) });\r\n        selectedLocationIds = locations.join();\r\n        return selectedLocationIds == null ? '' : selectedLocationIds;\r\n    }\r\n\r\n    private getSupplierIds() {\r\n        let selectedSupplierIds = '';\r\n        let selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value || [];\r\n        selectedSuppliers.map(m => {\r\n            if (selectedSupplierIds == '')\r\n                selectedSupplierIds = m.Id;\r\n            else\r\n                selectedSupplierIds += ',' + m.Id;\r\n        });\r\n        return selectedSupplierIds;\r\n    }\r\n\r\n    private getCarrierIds() {\r\n        let selectedCarrierIds = '';\r\n        let selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\r\n        selectedCarriers.map(m => {\r\n            if (selectedCarrierIds == '')\r\n                selectedCarrierIds = m.Id;\r\n            else\r\n                selectedCarrierIds += ',' + m.Id;\r\n        });\r\n        return selectedCarrierIds;\r\n    }\r\nprivate getselectedLocAttributeIds(){\r\n    let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\r\n    let _locAttributeIds = _locAttribute.join();\r\n    return _locAttributeIds;\r\n}\r\n\r\n    public changeActiveTab(priority) {\r\n        this.activePriorityTab = priority;\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        // this.subscriptions.add(this.FilterForm.valueChanges\r\n        //     .subscribe(change => {\r\n        //         if (change.FromDate && change.ToDate) {\r\n        //             this.filterDriverData();\r\n        //         }\r\n        //     }));\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges.subscribe(change => {\r\n            this.loadingData = true;    \r\n            this.filterDriverData();\r\n        }));\r\n        this.subscriptions.add(this.FilterForm.get('SelectedCarriers').valueChanges.subscribe(change => {\r\n            this.loadingData = true;       \r\n            this.filterDriverData();\r\n        }));\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            //alert(change.singleMulti.currentValue)\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getBuyerLoads();\r\n        this.autoRefreshLoads();\r\n        this.dtCouldGoTrigger.next();\r\n        this.dtShouldGoTrigger.next();\r\n        this.dtMustGoTrigger.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clearAllIntervals();\r\n        this.unSubscribeFormChanges();\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();        \r\n    }\r\n\r\n    async checkFilterValueChange() {\r\n        if (this.singleMulti == 2) {\r\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n            let selectedLocations = MyLocalStorage.getData(MyLocalStorage.WBF_LOCATION_KEY);\r\n            selectedLocations == \"\" ? selectedLocations = [] : '';\r\n            let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n            selectedStates == \"\" ? selectedStates = [] : '';\r\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\r\n                this.FilterForm.get('FromDate').patchValue(frmDate);\r\n                this.initializeFilterChange();\r\n            } else if (!this.isArrayEqual(selectedLocations, this.FilterForm.get('SelectedLocations').value)) {\r\n                this.FilterForm.get('SelectedLocations').patchValue(selectedLocations);\r\n                this.initializeFilterChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    initializeFilterChange() {\r\n        localStorage.setItem(\"filterChange\", '1');\r\n        window.location.reload();\r\n    }\r\n\r\n    setDatatableData(data: WhereIsMyDriverModel[]): void {\r\n        this.MustGoSchedules = data.filter(x => x.LdPri == 1 || x.LdPri == 0).slice();\r\n        this.ShouldGoSchedules = data.filter(x => x.LdPri == 2).slice();\r\n        this.CouldGoSchedules = data.filter(x => x.LdPri == 3).slice();\r\n    }\r\n\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.draw();\r\n                });\r\n            }\r\n        });\r\n        if (this.driverModal.modalDetails.display === \"block\") {\r\n            this.showDriverDetails(this.driverModal.modalDetails.data);\r\n        }\r\n    }\r\n\r\n    filterDriverData(): void {\r\n        this.clearAllIntervals();\r\n        this.searchLoadInterval = window.setTimeout(() => {\r\n            this.getBuyerLoads();\r\n            this.autoRefreshLoads();\r\n        }, 2000);\r\n    }\r\n\r\n    clearAllIntervals(): void {\r\n        if (this.searchLoadInterval) {\r\n            clearInterval(this.searchLoadInterval);\r\n        }\r\n        if (this.autoRefreshInterval) {\r\n            clearInterval(this.autoRefreshInterval);\r\n        }\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    getBuyerLoads(statusId?): void {\r\n\r\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\r\n            return;\r\n        }\r\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\r\n        this.SelectedPrioritiesId = _priorities;\r\n        if(this.SelectedPrioritiesId.length>0){\r\n             this.showMustGo=this.SelectedPrioritiesId.filter(f=>f==1).length==1 ? true:false;\r\n             this.showShouldGo=this.SelectedPrioritiesId.filter(f=>f==2).length==1 ? true:false;\r\n             this.showCouldGo=this.SelectedPrioritiesId.filter(f=>f==3).length==1 ? true:false;\r\n        }else{\r\n            this.showMustGo=true;this.showShouldGo=true;this.showCouldGo=true;\r\n        }\r\n        this.startAutoRefreshTimer();\r\n        this.loadingData = false;\r\n        this.refreshDatatable();\r\n    }\r\n\r\n    autoRefreshLoads(): void {\r\n        this.autoRefreshInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.getBuyerLoads();\r\n            }\r\n        }, this.AUTO_REFRESH_TIME * 1000);\r\n    }\r\n\r\n    startAutoRefreshTimer(): void {\r\n        this.stopAutoRefreshTimer();\r\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n        this.autoRefreshTimerInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (this.autoRefreshTicks == 0) {\r\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n                    this.stopAutoRefreshTimer();\r\n                } else {\r\n                    this.autoRefreshTicks--;\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stopAutoRefreshTimer(): void {\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    public toggleGrids() {\r\n        var toggleGrid = this.FilterForm.get('ToggleGrids').value;\r\n        this.FilterForm.get('ToggleGrids').patchValue(!toggleGrid);\r\n    }\r\n\r\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\r\n        window.scrollTo(0, 0);\r\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\r\n        if (infoWindow && infoWindow.isOpen) {\r\n            infoWindow.close();\r\n        }\r\n        this.selectedDriverDetails = new DriverAdditionalDetails();\r\n        this.modalData = true;\r\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\r\n            if (data) {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\r\n                this.modalData = false;\r\n            }\r\n            else {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails();\r\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\r\n                this.modalData = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n        }\r\n    }\r\n\r\n    filterMapByStatus(statusId) {\r\n        this.selectedMaplable = statusId;\r\n        this.getBuyerLoads(statusId);\r\n    }\r\n\r\n    arraysEqual(a, b) {\r\n        if (a === b) return true;\r\n        if (a == null || b == null) return false;\r\n        if (a.length != b.length) return false;\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isArrayEqual(value, other) {\r\n        var type = Object.prototype.toString.call(value);\r\n        if (type !== Object.prototype.toString.call(other)) return false;\r\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\r\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n        if (valueLen !== otherLen) return false;\r\n        var compare = function (item1, item2) {\r\n        };\r\n        var match;\r\n        if (type === '[object Array]') {\r\n            for (var i = 0; i < valueLen; i++) {\r\n                compare(value[i], other[i]);\r\n            }\r\n        } else {\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    compare(value[key], other[key]);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public applyLoadsFilters(filterForm:FormGroup){\r\n        this.FilterForm = filterForm;\r\n            this.filterDriverData();\r\n    }\r\n}\r\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <a class=\"btn btn-link\" (click)=\"toggleGrids()\"><i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleGrids').value == true ? 'Show Grids' : 'Hide Grids'}}  </a>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\" [ngClass]=\"{'hide-element': FilterForm.get('ToggleGrids').value}\" style=\"margin-top:15px\">\r\n        <div class=\"sticky-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 text-right priority-tabs\">\r\n                    <ul class=\"nav nav-pills float-right\">\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\r\n                            <a class=\"nav-link mustgo active\"  [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\"  >Must Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\r\n                            <a class=\"nav-link shouldgo\"  [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\" >Should Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\r\n                            <a class=\"nav-link couldgo\"  [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\"  >Could Go</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n      \r\n        </div>\r\n        <div [ngClass]=\"{'hide-element': !showMustGo}\">\r\n        <div \r\n              [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.ShouldGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"table-mustgo\" data-gridname=\"19\" class=\"table table-bordered table-hover serverside-table\" datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>  \r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass]=\"{'hide-element': !showShouldGo}\">\r\n        <div  \r\n            [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"table-shouldgo\" data-gridname=\"20\" class=\"table table-bordered table-hover serverside-table\" datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>                                \r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass]=\"{'hide-element': !showCouldGo}\">\r\n\r\n    \r\n        <div \r\n             [ngClass]=\"{'hide-element':(activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.ShouldGo )}\">\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"table-couldgo\" data-gridname=\"21\" class=\"table table-bordered table-hover serverside-table\" datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChildren, QueryList, OnDestroy, ViewChild, TemplateRef, SimpleChanges, OnChanges, Input } from '@angular/core';\r\nimport { Subject, from, Subscription, Observable } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { BuyerSendbirdComponent } from 'src/app/shared-components/sendbird/buyer-sendbird/buyer-sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel, routesColor } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { LoadFilterModel } from '../Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from '../services/buyerwallyboard.service';\r\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\ndeclare function IsUserActive(): boolean;\r\n\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver-map-view',\r\n    templateUrl: './map-view.component.html',\r\n    styleUrls: ['./map-view.component.css']\r\n})\r\nexport class WhereIsMyDriverMapViewComponent implements OnInit {\r\n    @Input() singleMulti: number;\r\n    @Input() FilterForm: FormGroup;\r\n\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 5;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    private UserCountry = \"\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n\r\n    private searchLoadInterval: any;\r\n    private autoRefreshInterval: any;\r\n    private autoRefreshTimerInterval: any;\r\n    private setCountryCenterInterval: any;\r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Locations: LoadFilterModel[] = [];\r\n    public States: any = [];\r\n    public Suppliers: any = [];\r\n    public Carriers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public LocationDdlSettings: any = {};\r\n    public SelectedLocationId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    changeFilterValueIntervalForMultiWindow: any;\r\n\r\n    @ViewChild(BuyerSendbirdComponent) sendbirdComponent: BuyerSendbirdComponent;\r\n\r\n    constructor(private dispatcherService: BuyerwallyboardService, private chatService: chatService, private carrierService: CarrierService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.setSelectedLocationId();\r\n        this.subscribeFormChanges();\r\n        this.dispatcherService.getDispatcherCountry().subscribe(data => {\r\n            this.UserCountry = data;\r\n            this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\r\n            this.setMapCenter();\r\n        });\r\n        this.chatService.loaderDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.loadingData = data;\r\n            }\r\n        });\r\n        this.chatService.memberInfoDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.memberInfo = data as MemberInfo[];\r\n                this.loadingData = false;\r\n                jQuery('#btnconfirm-memberInfo').click();\r\n            }\r\n        });\r\n        this.changeFilterValueIntervalForMultiWindow = setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.checkFilterValueChange();\r\n            }\r\n        }, 10000);\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    setSelectedLocationId() {\r\n        var ids = [];\r\n        var selectedLocationIds = this.FilterForm.get('SelectedLocations').value.forEach(res => { ids.push(res.Id) });\r\n        selectedLocationIds = ids.join();\r\n        this.SelectedLocationId = selectedLocationIds;\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            //alert(change.singleMulti.currentValue)\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getDispatcherLoads();\r\n        this.autoRefreshLoads();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clearAllIntervals();\r\n        this.unSubscribeFormChanges();\r\n        if (this.changeFilterValueIntervalForMultiWindow)\r\n            clearInterval(this.changeFilterValueIntervalForMultiWindow);\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        // this.subscriptions.add(this.FilterForm.valueChanges\r\n        //     .subscribe(change => {\r\n        //         if (change.FromDate && change.ToDate) {\r\n        //             var ids = [];\r\n        //             change.SelectedLocations.forEach(res => { ids.push(res.Id) });\r\n        //             var selectedLocationIds = ids.join();\r\n        //             if (selectedLocationIds != this.SelectedLocationId) {\r\n        //                 this.CloneOnGoingLoads = [];\r\n        //                 this.SelectedLocationId = selectedLocationIds;\r\n        //             }\r\n        //             this.filterDriverData();\r\n        //         }\r\n        //     }))\r\n\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges.subscribe(change => {\r\n            // this.loadingData = true;    \r\n            this.filterDriverData();\r\n        }));\r\n        this.subscriptions.add(this.FilterForm.get('SelectedCarriers').valueChanges.subscribe(change => {\r\n            // this.loadingData = true;       \r\n            this.filterDriverData();\r\n        }));\r\n\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    async checkFilterValueChange() {\r\n        if (this.singleMulti == 2) {\r\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n            //let selectedLocations = MyLocalStorage.getData(MyLocalStorage.WBF_LOCATION_KEY);\r\n            //selectedLocations == \"\" ? selectedLocations = [] : '';\r\n            // let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n            //selectedStates == \"\" ? selectedStates = [] : '';\r\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\r\n                this.FilterForm.get('FromDate').patchValue(frmDate);\r\n                this.initializeFilterChange();\r\n            }\r\n            //else if (!this.isArrayEqual(selectedLocations, this.FilterForm.get('SelectedLocations').value)) {\r\n            //    this.FilterForm.get('SelectedLocations').patchValue(selectedLocations);\r\n            //    this.initializeFilterChange();\r\n            //}\r\n        }\r\n    }\r\n    initializeFilterChange() {\r\n        localStorage.setItem(\"filterChange\", '1');\r\n        window.location.reload();\r\n    }\r\n\r\n    setMapCenter(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLoactionLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLoactionLng = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.googleMap && this.OnGoingLoads.length == 0) {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    bounds.extend(new google.maps.LatLng(this.centerLoactionLat, this.centerLoactionLng));\r\n                    this.googleMap.fitBounds(bounds);\r\n                    this.googleMap.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.filter(t => t.Lat != null && t.Lng != null).forEach(x => {\r\n                        x.statusColor = routesColor[x.SttsId];\r\n                        bounds.extend(new google.maps.LatLng(x.Lat, x.Lng));\r\n                    });\r\n                    this.googleMap.fitBounds(bounds);\r\n\r\n                    const locationbounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.forEach(x => {\r\n                        locationbounds.extend(new google.maps.LatLng(x.dLat, x.dLng));\r\n                    });\r\n                    if (this.googleMap && locationbounds) {\r\n                        this.googleMap.setCenter(locationbounds.getCenter());         \r\n                    }\r\n                    this.googleMap.setZoom(5);\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    searchDrivers(event: any): void {\r\n        this.SearchedKeyword = event.target.value;\r\n        this.filterDriverData();\r\n    }\r\n\r\n    filterDriverData(): void {\r\n        this.clearAllIntervals();\r\n        this.loadingData = true;\r\n        this.searchLoadInterval = window.setTimeout(() => {\r\n            this.getDispatcherLoads();\r\n            this.autoRefreshLoads();\r\n        }, 2000);\r\n    }\r\n\r\n    clearAllIntervals(): void {\r\n        if (this.searchLoadInterval) {\r\n            clearInterval(this.searchLoadInterval);\r\n        }\r\n        if (this.autoRefreshInterval) {\r\n            clearInterval(this.autoRefreshInterval);\r\n        }\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    getDispatcherLoads(statusId?): void {\r\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\r\n            return;\r\n        }\r\n        let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Id));\r\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\r\n        this.SelectedPrioritiesId = _priorities;\r\n        let selectedSupplierIds = '';\r\n        this.FilterForm.get('SelectedSuppliers').value.map(m => {\r\n            if (selectedSupplierIds == '') selectedSupplierIds = m.Id\r\n            else selectedSupplierIds += ',' + m.Id\r\n        })\r\n        let selectedCarrierIds = '';\r\n        this.FilterForm.get('SelectedCarriers').value.map(m => {\r\n            if (selectedCarrierIds == '') selectedCarrierIds = m.Id\r\n            else selectedCarrierIds += ',' + m.Id\r\n        })\r\n        var ids = [];\r\n        this.SelectedLocationId = '';\r\n        this.FilterForm.get('SelectedLocations').value.forEach(res => { ids.push(res.Id) });\r\n        this.SelectedLocationId = ids.join();\r\n\r\n        let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\r\n        let _locAttributeIds = _locAttribute.join();\r\n\r\n        let inputs = {\r\n            LocationIds: this.SelectedLocationId == null ? '' : this.SelectedLocationId,\r\n            States: _states,\r\n            Priorities: _priorities,\r\n            FromDate: this.FilterForm.get('FromDate').value,\r\n            ToDate: this.FilterForm.get('ToDate').value,\r\n            DriverSearch: this.SearchedKeyword,\r\n            SupplierCompanyIds: selectedSupplierIds,\r\n            CarrierCompanyIds: selectedCarrierIds,\r\n            IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\r\n            InventoryCaptureType:_locAttributeIds\r\n        };\r\n        this.loadingData = true;\r\n        var data = this.CloneOnGoingLoads;\r\n        var isFilter = false;\r\n\r\n        if (statusId && this.CloneOnGoingLoads && this.CloneOnGoingLoads.length > 0) {\r\n            data = data.filter(f => f.SttsId == statusId);\r\n            isFilter = true;\r\n        }\r\n        if (!isFilter) {\r\n            this.dispatcherService.getOnGoingLoadsForMap(inputs).subscribe((data) => {\r\n                this.CloneOnGoingLoads = data;\r\n                this.initailizeOnGoingLoad(data);\r\n\r\n            });\r\n        } else\r\n            this.initailizeOnGoingLoad(data);\r\n    }\r\n\r\n    private initailizeOnGoingLoad(data) {\r\n        this.OnGoingLoads = data;\r\n        this.Drivers = this.OnGoingLoads.filter((thing, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === thing.Id)) === i;\r\n        });\r\n        this.Drivers = this.Drivers.filter(x => x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        //last location not available\r\n        this.OfflineDrivers = [];\r\n        var driverFilter = [];\r\n        data && data.map(m => {\r\n            if (!driverFilter.find(f => f && f.Name == m.Name)) {\r\n                driverFilter.push(m);\r\n                if (m.Lat == null && m.Lng == null && m.Name != null && m.Name != undefined && m.Name.trim() != '')\r\n                    (this.Drivers && this.Drivers.filter(f => f.Name == m.Name).length > 0) ? '' : this.OfflineDrivers.push(m);\r\n            }\r\n        })\r\n        //this.OfflineDrivers = data.filter(x => x.Lat == null && x.Lng == null && x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        this.setMapCenter();\r\n        this.startAutoRefreshTimer();\r\n        this.loadingData = false;\r\n        this.addDrivertoBackground();\r\n    }\r\n\r\n    autoRefreshLoads(): void {\r\n        this.autoRefreshInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.getDispatcherLoads();\r\n            }\r\n        }, this.AUTO_REFRESH_TIME * 1000);\r\n    }\r\n\r\n    startAutoRefreshTimer(): void {\r\n        this.stopAutoRefreshTimer();\r\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n        this.autoRefreshTimerInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (this.autoRefreshTicks == 0) {\r\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n                    this.stopAutoRefreshTimer();\r\n                } else {\r\n                    this.autoRefreshTicks--;\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stopAutoRefreshTimer(): void {\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    mapReady(map: any): void {\r\n        this.googleMap = map;\r\n        this.setMapCenter();\r\n    }\r\n\r\n    setZoomLevel(): void {\r\n        if (this.OnGoingLoads.length == 0) {\r\n            this.setMapCenter();\r\n        } else {\r\n            this.zoomLevel = 8; // default zoom level\r\n        }\r\n    }\r\n\r\n    public toggleExpandMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\r\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleDriverView() {\r\n        var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\r\n        this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\r\n    }\r\n\r\n    public addDrivertoBackground() {\r\n        this.Drivers.forEach(xItem => {\r\n            this.backgroudchatDefault.push(xItem.Id);\r\n        })\r\n        this.sendbirdComponent.IntializeChatDefault(this.backgroudchatDefault, \"\");\r\n    }\r\n    public doChat(driverId: number) {\r\n        this.sendbirdComponent.IntializeDriverChat(driverId, \"\");\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        if (this.previousInfowindow && this.previousInfowindow.isOpen) {\r\n            this.previousInfowindow.close();\r\n        }\r\n        if (infoWindow) {\r\n            this.previousInfowindow = infoWindow;\r\n            this.previousInfowindow.isOpen = true;\r\n            infoWindow.open();\r\n        }\r\n    }\r\n\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent, index: number = null): void {\r\n        if (this.previousInfowindow && this.previousInfowindow.isOpen && infoWindow) {\r\n            this.previousInfowindow.close();\r\n            this.previousInfowindow.isOpen = false;\r\n        }\r\n        if (infoWindow) {\r\n            infoWindow.close();\r\n        }\r\n    }\r\n\r\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\r\n        window.scrollTo(0, 0);\r\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\r\n        if (infoWindow && infoWindow.isOpen) {\r\n            infoWindow.close();\r\n        }\r\n        this.selectedDriverDetails = new DriverAdditionalDetails();\r\n        this.modalData = true;\r\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\r\n            if (data) {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\r\n                this.modalData = false;\r\n            }\r\n            else {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails();\r\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\r\n                this.modalData = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    private closePreviousWindow(index: number): void {\r\n        if (this.previousInfowindowIndex != null && this.previousInfowindow != null) {\r\n            this.OnGoingLoads[this.previousInfowindowIndex].routeShow = false;\r\n            if (this.previousInfowindow && this.previousInfowindow.isOpen)\r\n                this.previousInfowindow.close();\r\n            this.setMapCenter();\r\n        }\r\n    }\r\n    public showHideRoutes(index: number): void {\r\n        if (index == this.previousInfowindowIndex || this.previousInfowindowIndex == null) {\r\n            this.OnGoingLoads[index].routeShow = !this.OnGoingLoads[index].routeShow;\r\n            if (!this.OnGoingLoads[index].routeShow)\r\n                this.setMapCenter();\r\n        } else {\r\n            this.closePreviousWindow(index);\r\n        }\r\n        this.previousInfowindowIndex = index;\r\n    }\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n        }\r\n    }\r\n\r\n    filterMapByStatus(statusId) {\r\n        this.selectedMaplable = statusId;\r\n        this.getDispatcherLoads(statusId)\r\n    }\r\n\r\n    isArrayEqual(value, other) {\r\n        var type = Object.prototype.toString.call(value);\r\n        if (type !== Object.prototype.toString.call(other)) return false;\r\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\r\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n        if (valueLen !== otherLen) return false;\r\n        var compare = function (item1, item2) {\r\n        };\r\n        var match;\r\n        if (type === '[object Array]') {\r\n            for (var i = 0; i < valueLen; i++) {\r\n                compare(value[i], other[i]);\r\n            }\r\n        } else {\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    compare(value[key], other[key]);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n\r\n    }\r\n    public applyLoadsFilters(filterForm:FormGroup){\r\n        this.FilterForm = filterForm;\r\n        this.filterDriverData();\r\n    }\r\n}\r\n\r\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row animated mt60\">\r\n    <div class=\"\" [ngClass]=\"{'fadeIn': FilterForm.get('ToggleMap').value, 'display_hide': !FilterForm.get('ToggleMap').value ,'col-sm-9': !FilterForm.get('ToggleExpandMapView').value , 'col-sm-12':FilterForm.get('ToggleExpandMapView').value === true  }\">\r\n        <div class=\"expand_map_btn\">\r\n            <a class=\"\" (click)=\"toggleExpandMapView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleExpandMapView').value, 'fa-arrow-circle-left': FilterForm.get('ToggleExpandMapView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div id=\"map-view\" class=\"mb15\">\r\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; top: -5px; left: 10px; font-size: 11px;\">\r\n                <div id=\"status-legends\" class=\"well pa0\">\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(11)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==11}\">\r\n                            <img src=\"src/assets/truck-11.svg\" data-statusid=\"11\">\r\n                            On the way to terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(12)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==12}\">\r\n                            <img src=\"src/assets/truck-12.svg\" data-statusid=\"12\">\r\n                            Arrived at terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(1)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==1}\">\r\n                            <img src=\"src/assets/truck-1.svg\" data-statusid=\"1\">\r\n                            On the way to location\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(18)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==18}\">\r\n                            <img src=\"src/assets/truck-18.svg\" data-statusid=\"18\">\r\n                            Arrived at location\r\n                        </a>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style=\"z-index: 1; position: absolute; top: 0; right: 65px; font-size: 11px; opacity:0.9\">\r\n                <div class=\"well pa5\">Auto Refresh in: <b>{{autoRefreshTicks * 1000 | date:'mm:ss':'UTC'}}</b> minutes</div>\r\n            </div>\r\n            <agm-map [ngStyle]=\"{'height':singleMulti == 2 ? '80vh' : '60vh' }\"  [zoom]=\"zoomLevel\" [maxZoom]=\"16\" [minZoom]=\"2\"\r\n                (mapReady)=\"mapReady($event)\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\">\r\n                <ng-container *ngFor=\"let driver of OnGoingLoads let indx=index\">\r\n                    <agm-marker *ngIf=\"driver.Lat!= null &&driver.Lng!= null\" [latitude]=\"driver.Lat\" [longitude]=\"driver.Lng\"\r\n                                [iconUrl]=\"{'url':'src/assets/truck-'+driver.SttsId+'.svg','scaledSize':{'height':40,'width':50}}\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (markerClick)=\"showHideRoutes(indx)\" (mouseOut)=\"mouseHoveOutMarker(null,$event,indx)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                            <div>\r\n                                <p><strong>Driver Name: </strong> {{ driver.Name}}</p>\r\n                                <p><strong>Contact Number: </strong><a href=\"tel:{{driver.PhNo}}\" target=\"_blank\" title=\"Call {{driver.Name}}\">{{driver.PhNo}}</a></p>\r\n                                <p><strong>Last UpdatedAt: </strong> {{ driver.AppLastUpdatedDate}}</p>\r\n                                <p style=\"font-size:11px;padding-top: 10px;\" *ngIf=\"driver.routeShow else showRouteTemplate\"><strong>Note:</strong> Click truck to hide routes.</p>\r\n                                <ng-template #showRouteTemplate>\r\n                                    <p style=\"font-size:11px;padding-top: 10px;\"><strong>Note:</strong>  Click truck to view routes</p>\r\n                                </ng-template>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    <agm-marker [latitude]=\"driver.dLat\" [longitude]=\"driver.dLng\" [iconUrl]='{ \"url\": \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", \"scaledSize\": { \"height\": 25, \"width\": 25 } }' (mouseOver)=\"mouseHoverMarker(infoWindow2,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow2,$event,null)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" [maxWidth]=\"200\" #infoWindow2>\r\n                            <div>\r\n                                <p><b>Engaged Driver : </b> {{ driver.Name}}</p>\r\n                                <p><b>Drop Location: </b>{{ driver.Loc}}</p>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    <agm-direction *ngIf=\"driver.dLat && driver.dLng && driver.Lat!= null && driver.Lng!= null\" [origin]=\"{lat:driver.Lat, lng: driver.Lng}\" [destination]=\"{lat:driver.dLat, lng: driver.dLng}\"\r\n                                   [visible]=\"driver.routeShow\" [renderOptions]=\"{ suppressMarkers: true , polylineOptions: { strokeColor: driver.statusColor }}\"></agm-direction>\r\n                </ng-container>\r\n            </agm-map>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"pl0\" [ngClass]=\"{'col-sm-3': (FilterForm.get('ToggleExpandMapView').value === false && FilterForm.get('ToggleMap').value === true), 'absolute_driver': FilterForm.get('ToggleMap').value===false, 'hide_absolute_driver': (FilterForm.get('ToggleDriverView').value === true && FilterForm.get('ToggleMap').value === false), 'display_hide': (FilterForm.get('ToggleExpandMapView').value === true && FilterForm.get('ToggleMap').value===true) }\">\r\n        <div class=\"driver_btn\" *ngIf=\"!FilterForm.get('ToggleMap').value\">\r\n            <a class=\"\" (click)=\"toggleDriverView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleDriverView').value, 'fa-arrow-circle-left': FilterForm.get('ToggleDriverView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div class=\"mt10\">\r\n            <h3 class=\"pull-left mt6 pb0 dib\">Drivers</h3>\r\n            <div class=\"inner-addon left-addon pull-left ml10\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Drivers\" type=\"text\" (input)=\"searchDrivers($event)\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"driver-list dib full-width\">\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of Drivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\"><span [ngClass]=\"driver.IsOnline ? 'live':''\"></span>{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" [ngClass]=\"{'activeRoute':driver.routeShow}\" [ngStyle]=\"{ 'color': (driver.routeShow ? driver.statusColor : '#2b2b2b') }\" title=\"Click to {{driver.routeShow ? 'hide':'show'}} routes\" (click)=\"showHideRoutes(indx)\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of OfflineDrivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\">{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" title=\"Last location is not available\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"chat-wrapper\" style=\"z-index: 9999;\">\r\n    <app-buyer-sendbird></app-buyer-sendbird>\r\n</div>\r\n<ng-template #driverDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true, 'left':true,'fade':true,'show': modalDetails.display==='block'}\" [ngStyle]=\"{'display':modalDetails.display}\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n            <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pb0 pt0\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{selectedDriverDetails.Name}}\r\n                        <a (click)=\"doChat(modalDetails.data.Id);\" title=\"Chat\"> <span class=\"fs18 far fa-comment\"></span></a>\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt10\" (click)=\"modalClose()\" aria-label=\"Close\"> <i class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>               \r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-container *ngTemplateOutlet=\"driverDetailsModal;context:driverModal\">\r\n</ng-container>\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>\r\n\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatatableCustomSortingService } from 'src/app/directives/sorting.pipe';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { BuyerwallyboardService } from '../services/buyerwallyboard.service';\r\n\r\n@Component({\r\n    selector: 'app-wally-dashboard',\r\n    templateUrl: './wally-dashboard.component.html',\r\n    styleUrls: ['./wally-dashboard.component.css']\r\n})\r\n\r\nexport class WallyDashboardComponent implements OnInit, AfterViewInit {\r\n    public viewType: any;\r\n    public singleMulti: any;\r\n    public disableControl: boolean = false;\r\n    private dispatcherDashboard: Window;\r\n\r\n    constructor(private wallyBoardService: BuyerwallyboardService, private _activateRoute: ActivatedRoute, private customSortingService: DatatableCustomSortingService) { }\r\n\r\n    ngOnInit() {\r\n        this.checkWindowSelection();\r\n        //this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        let params: any = this._activateRoute.snapshot.queryParams;\r\n        if (params && params.viewTypeFromDashboard)\r\n            this.changeViewType(params.viewTypeFromDashboard);\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        this.customSortingService.configColumnDefsNullToBottom();\r\n    }\r\n\r\n    public changeViewType(type: any): void {\r\n        localStorage.setItem('viewType', <string>type);\r\n        if (this.singleMulti === 2) {\r\n            this.dispatcherDashboard = window.open(\"/Buyer/Job/BuyerWallyBoard\", \"_blank\");\r\n        } else {\r\n            this.viewType = type;\r\n        }\r\n    }\r\n\r\n\r\n    public changeWindowType(type: number): void {\r\n        this.singleMulti = type;\r\n        this.wallyBoardService.SingleMultiWindowSubject.next(type);\r\n        if (type === 1 && +(localStorage.getItem('singleMulti')) !== 1) {\r\n            setTimeout(() => {\r\n                this.dispatcherDashboard.close();\r\n            }, 10000);\r\n        }\r\n        localStorage.setItem('singleMulti', <string>this.singleMulti);\r\n    }\r\n\r\n    private checkWindowSelection(): void {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        this.viewType = (localStorage.getItem('viewType')) ? +(localStorage.getItem('viewType')) : 1;\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl == true) {\r\n            this.viewType = 2;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"sticky-header-dash\" [ngClass]=\" viewType == 3 ? 'col-sm-3' : 'col-sm-3' \" >\r\n                <div class=\"dib border pa5 radius-capsule shadow-b pull-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Location</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">Loads</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"3\" [checked]=\"viewType==3\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(3)\">Sales</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dib switch-window ml20 pull-left mt5\" *ngIf=\"viewType!=3\" >\r\n                    <div class=\"btn-group\">\r\n                        <input class=\"hide-element\" name=\"single\" type=\"radio\" [value]=\"1\" [checked]=\"singleMulti==1\">\r\n                        <label class=\"btn ml0 first-icon\" (click)=\"changeWindowType(1)\" placement=\"bottom\" ngbTooltip=\"Single Window\"><i class=\"far fa-window-maximize fs14 mt3\"></i></label>\r\n                        <input class=\"hide-element\" name=\"multiple\" type=\"radio\" [value]=\"2\" [checked]=\"singleMulti==2\">\r\n                        <label class=\"btn last-icon\" (click)=\"changeWindowType(2)\" placement=\"bottom\" ngbTooltip=\"Multi Window\"><i class=\"far fa-window-restore fs14 mt3\"></i></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-buyer-locations [singleMulti]=\"singleMulti\" *ngIf=\"viewType==1\">Loading...</app-buyer-locations>\r\n                <app-where-is-my-driver [singleMulti]=\"singleMulti\" *ngIf=\"viewType==2\">Loading...\r\n                </app-where-is-my-driver>\r\n                <app-sales *ngIf=\"viewType==3\">Loading...</app-sales>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, AfterViewInit, EventEmitter, ViewChildren, QueryList, OnDestroy, ViewChild, TemplateRef, SimpleChanges, OnChanges, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Subject, from, Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird/sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { LoadFilterModel, TfxModule } from './Models/BuyerWallyBoard';\r\nimport { BuyerwallyboardService } from './services/buyerwallyboard.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { WhereIsMyDriverMapViewComponent } from './wally-dashboard/map-view.component';\r\nimport { WhereIsMyDriverGridViewComponent } from './wally-dashboard/grid-view.component';\r\nimport { InventoryDataCaptureList, LoadPriorities, RegExConstants } from '../app.constants';\r\n\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver',\r\n    templateUrl: './where-is-my-driver.component.html',\r\n    styleUrls: ['./where-is-my-driver.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class WhereIsMyDriverComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() singleMulti: number;\r\n    // @Output() singleMultiOutput = new EventEmitter<number>();\r\n\r\n    @ViewChild(WhereIsMyDriverMapViewComponent)  loadsMapView : WhereIsMyDriverMapViewComponent;\r\n    @ViewChild(WhereIsMyDriverGridViewComponent) loadsGridView: WhereIsMyDriverGridViewComponent;\r\n\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 4;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n    public FilterForm: FormGroup;\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    selectedLocAttributeList=[];\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n  \r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Locations: LoadFilterModel[] = [];\r\n    public DefaultLocations: LoadFilterModel[] = [];\r\n    public States: any = [];\r\n    public Suppliers: any = [];\r\n    public Carriers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public LocationDdlSettings: any = {};\r\n    public SelectedLocationId: string;\r\n    public SelectedStateId: string;\r\n    public SelectedSupplierId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    //@ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    public viewLoadType = 1;\r\n    public loadScreenType = 'All';\r\n    subscription: Subscription;\r\n    public carrierList: any[] = [];\r\n    public IsDataLoaded: boolean = false;\r\n    public filterCount: number;\r\n\r\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: BuyerwallyboardService, private chatService: chatService, private carrierService: CarrierService) {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        if (this.singleMulti == 1)\r\n            this.loadScreenType = 'All';\r\n\r\n        var _this = this;\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            _this.SaveFilters(true);\r\n            return;\r\n        });\r\n        this.setFilterForm();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.StateDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.PriorityDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.LocationDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        this.restoreFilterStates();\r\n        this.subscribeFormChanges();\r\n        this.GetFilters();\r\n        //this.getFilterData();\r\n    }\r\n\r\n    public setFilterForm() {\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n\r\n        this.FilterForm = this.fb.group({\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            ToggleMap: this.fb.control(true),\r\n            ToggleExpandMapView: this.fb.control(false),\r\n            ToggleGrids: this.fb.control(false),\r\n            ToggleDriverView: this.fb.control(false),\r\n            SelectedSuppliers: this.fb.control([]),\r\n            SelectedCarriers: this.fb.control([]),\r\n            SelectedLocations: this.fb.control([]),\r\n            SelectedStates: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([]),\r\n            singleMulti: this.fb.control(this.singleMulti),\r\n            FromDate: this.fb.control(fromDate),\r\n            ToDate: this.fb.control(toDate),\r\n            selectedLocAttributeList:this.fb.control([])\r\n        });\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        // this.subscriptions.add(this.FilterForm.get('SelectedLocations').valueChanges\r\n        //     .subscribe(change => {\r\n        //         var selectedLocation = this.setSelectedLocationId();\r\n        //         if (this.SelectedLocationId != selectedLocation) {\r\n        //             this.locationChanged();\r\n        //         }\r\n        //     }))\r\n        this.subscriptions.add(this.FilterForm.get('SelectedStates').valueChanges\r\n            .subscribe(change => {\r\n                var selectedStates = this.setSelectedStateId();\r\n                if (this.SelectedStateId != selectedStates) {\r\n                    this.stateChanged();\r\n                }\r\n            }));\r\n            this.subscriptions.add(this.FilterForm.get('SelectedSuppliers').valueChanges\r\n            .subscribe(change => {\r\n                var selectedSupplier = this.setSelectedSupplierId();\r\n                if (this.SelectedSupplierId != selectedSupplier) {\r\n                    this.suppplierChanged();\r\n                }\r\n            }));\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges\r\n            .subscribe(change => {\r\n                this.ShowCarrierMangedData();\r\n            }))\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    getFilterData() {\r\n        var isCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\r\n        this.IsDataLoaded = false;\r\n        this.dispatcherService.GetFilterData(isCarrierManaged).subscribe(data => {\r\n            // this.IsDataLoaded = true;\r\n            this.Locations = data;\r\n            this.DefaultLocations=data;\r\n            this.States = this.GetUniqueItems(data.map(t => t.States).reduce((p, n) => p.concat(n), []));\r\n            this.Suppliers = this.GetUniqueItems(data.map(t => t.Suppliers).reduce((p, n) => p.concat(n), []));\r\n            this.Carriers = this.GetUniqueItems(data.map(t => t.Carriers).reduce((p, n) => p.concat(n), []));\r\n            var selectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n            selectedLocations = selectedLocations.filter(t => { return this.Locations.filter(el => t.Id == el.Id).length > 0 });\r\n            this.FilterForm.get('SelectedLocations').patchValue(selectedLocations);\r\n            this.SelectedLocationId = this.setSelectedLocationId();\r\n            this.setSelectedFilters();\r\n        });\r\n    }\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        let filterChange = localStorage.getItem(\"filterChange\") ? localStorage.getItem(\"filterChange\") : 0;\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            this.viewLoadType = (localStorage.getItem('viewLoadType')) ? +(localStorage.getItem('viewLoadType')) : 1;\r\n            if (this.singleMulti == 1) {\r\n                this.viewLoadType = 1\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType = \"All\"\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 0 && filterChange == 0) {\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType == \"Grid\" ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.viewLoadType == 2 && this.singleMulti == 2 && filterChange == 0) {\r\n                this.loadScreenType = sessionStorage.getItem('loadScreenType');\r\n                //this.loadScreenType == \"Grid\" ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 1 && filterChange == 0) {\r\n                this.viewLoadType == 1 ? this.loadScreenType = \"Map\" : '';\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (filterChange == 1 && this.singleMulti == 2) {\r\n                sessionStorage.getItem('loadScreenType') ? this.loadScreenType = sessionStorage.getItem('loadScreenType') : 'All';\r\n                //  type == 'Grid' ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n            }\r\n            if (this.loadScreenType == null && this.singleMulti == 2) { this.loadScreenType = 'Map' }\r\n\r\n        }\r\n        filterChange = 0;\r\n        localStorage.setItem('filterChange', filterChange.toString());\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unSubscribeFormChanges();\r\n        this.SaveFilters(true);\r\n    }\r\n\r\n    locationChanged(): void {\r\n        this.SelectedLocationId = this.setSelectedLocationId();\r\n        this.setJobSuppliers();\r\n\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_LOCATION_KEY, this.SelectedLocations);\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDSTATES_KEY, this.SelectedStates);\r\n    }\r\n\r\n    stateChanged(): void {\r\n        this.SelectedStateId = this.setSelectedStateId();\r\n        this.onSelectStates();\r\n    }\r\n\r\n    suppplierChanged(): void {\r\n        this.SelectedStateId = this.setSelectedSupplierId();\r\n        this.onSelectSupplier();\r\n    }\r\n\r\n    setSelectedLocationId() {\r\n        var ids = [];\r\n        var selectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n        selectedLocations.forEach(res => { ids.push(res.Id) });\r\n        return ids.join();\r\n    }\r\n\r\n\r\n    setSelectedStateId() {\r\n        var ids = [];\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        selectedStates.forEach(res => { ids.push(res.Id) });\r\n        return ids.join();\r\n    }\r\n\r\n    setSelectedSupplierId() {\r\n        var ids = [];\r\n        var selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value;\r\n        selectedSuppliers.forEach(res => { ids.push(res.Id) });\r\n        return ids.join();\r\n    }\r\n\r\n    setJobSuppliers(): void {\r\n        this.Suppliers = [];\r\n        this.Carriers = [];\r\n        this.States = [];\r\n        this.Locations.map(m => {\r\n            var selectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n            if (selectedLocations.find(f => f.Id == m.Id) || selectedLocations.length == 0) {\r\n                if (m && m.Suppliers && m.Suppliers.length > 0) {\r\n                    this.Suppliers = this.Suppliers.concat(m.Suppliers);\r\n                }\r\n                if (m && m.Carriers && m.Carriers.length > 0) {\r\n                    this.Carriers = this.Carriers.concat(m.Carriers);\r\n                }\r\n                if (m && m.States && m.States.length > 0) {\r\n                    this.States = this.States.concat(m.States);\r\n                }\r\n            }\r\n        })\r\n        this.States = this.GetUniqueItems(this.States.reduce((p, n) => p.concat(n), []));\r\n        this.Suppliers = this.GetUniqueItems(this.Suppliers.reduce((p, n) => p.concat(n), []));\r\n        this.Carriers = this.GetUniqueItems(this.Carriers.reduce((p, n) => p.concat(n), []));\r\n        if (this.IsDataLoaded) {\r\n            this.setSelectedFilters();\r\n        }\r\n    }\r\n\r\n\r\n    onSelectStates(): void {\r\n        this.Suppliers = [];\r\n        this.Locations=[]\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        this.Locations=this.DefaultLocations.filter(t=>selectedStates.some(t1=>t1.Id==t.States[0].Id));\r\n        if(!selectedStates || !selectedStates.length){\r\n            this.Locations=this.DefaultLocations;\r\n        }\r\n        this.Suppliers=this.Locations.map(t=>{\r\n            return t.Suppliers;\r\n        });\r\n      \r\n        this.Locations = this.GetUniqueItems(this.Locations.reduce((p, n) => p.concat(n), []));\r\n        this.Suppliers = this.GetUniqueItems(this.Suppliers.reduce((p, n) => p.concat(n), []));\r\n        if (this.IsDataLoaded) {\r\n            this.setSelectedFilters();\r\n        }\r\n    }\r\n\r\n    onSelectSupplier(): void {\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        var selectedSupplier = this.FilterForm.get('SelectedSuppliers').value;\r\n        selectedStates.forEach(element => {\r\n        this.Locations=this.DefaultLocations.filter(t=>t.States.filter(t1 => t1.Id == element.Id).length > 0);\r\n        });\r\n        selectedSupplier.forEach(element => {\r\n            this.Locations=this.Locations.filter(t=>t.Suppliers.filter(t1=>t1.Id == element.Id).length > 0);\r\n        });\r\n        this.Locations = this.GetUniqueItems(this.Locations.reduce((p, n) => p.concat(n), []));\r\n        if (this.IsDataLoaded) {\r\n            this.setSelectedFilters();\r\n        }\r\n    }\r\n\r\n    setSelectedFilters() {\r\n        var selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value;\r\n        var selectedCarriers = this.FilterForm.get('SelectedCarriers').value;\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value;\r\n        selectedSuppliers = selectedSuppliers.filter(t => { return this.Suppliers.filter(el => t.Id == el.Id).length > 0 });\r\n        selectedCarriers = selectedCarriers.filter(t => { return this.Carriers.filter(el => t.Id == el.Id).length > 0 });\r\n        selectedStates = selectedStates.filter(t => { return this.States.filter(el => t.Id == el.Id).length > 0 });\r\n\r\n        this.FilterForm.get('SelectedSuppliers').patchValue(selectedSuppliers);\r\n        this.FilterForm.get('SelectedCarriers').patchValue(selectedCarriers);\r\n        this.FilterForm.get('SelectedStates').patchValue(selectedStates);\r\n\r\n        this.ApplyLoadsFilters();\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('FromDate').patchValue(event);\r\n        }\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' && RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_toDate < _fromDate) {\r\n                this.FilterForm.get('ToDate').patchValue(event);\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    setToDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('ToDate').patchValue(event);\r\n        }\r\n        this.FilterForm.get('ToDate').patchValue(event);\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' && RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_fromDate > _toDate) {\r\n                this.FilterForm.get('FromDate').patchValue(event);\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    public toggleMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleFilterView() {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n\r\n    private restoreFilterStates(): void {\r\n        if (this.disableControl == true) {\r\n            let _selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n            if (_selectedDate != '') {\r\n                this.FilterForm.get('FromDate').patchValue(_selectedDate);\r\n                this.FilterForm.get('ToDate').patchValue(_selectedDate);\r\n            }\r\n        }\r\n    }\r\n\r\n    public GetFilters() {\r\n        this.dispatcherService.getFilters(TfxModule.BuyerWallyboardLoads).subscribe(res => {\r\n            if (res && res.length > 0) {\r\n                this.SetFilters(res);\r\n            }\r\n            else {\r\n                this.getFilterData();\r\n            }\r\n        });\r\n    }\r\n\r\n    public SaveFilters(isTopFilter) {\r\n        if(isTopFilter){\r\n            this.dispatcherService.getFilters(TfxModule.BuyerWallyboardLoads).subscribe(res => {\r\n                if (res && Object.keys(res).length > 0) {\r\n                    var IsShowCarrierManaged = this.FilterForm.get(\"IsShowCarrierManaged\").value;\r\n                    var  SelectedCarriers=  this.FilterForm.get(\"SelectedCarriers\").value || [];                  \r\n                    let jsonFilterForm : FormGroup = null;                \r\n                    jsonFilterForm = JSON.parse(res);\r\n                    jsonFilterForm[\"IsShowCarrierManaged\"]= IsShowCarrierManaged;\r\n                    jsonFilterForm[\"SelectedCarriers\"] =SelectedCarriers;\r\n                    var filterModel = JSON.stringify(jsonFilterForm);                   \r\n                    this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardLoads, filterModel).subscribe(res => {\r\n                        if (res) {\r\n            \r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            var filterModel = JSON.stringify(this.FilterForm.value);\r\n            this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardLoads, filterModel).subscribe(res => {\r\n                if (res) {\r\n    \r\n                }\r\n            });\r\n        }\r\n        // var filterData = this.FilterForm.value;\r\n        // delete filterData[\"FromDate\"];\r\n        // delete filterData[\"ToDate\"];\r\n        // var filterModel = JSON.stringify(filterData);\r\n        // this.dispatcherService.saveFilters(TfxModule.BuyerWallyboardLoads, filterModel).subscribe(res => {\r\n        //     if (res) {\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        var filterData = JSON.parse(input);\r\n        this.FilterForm.patchValue(filterData);\r\n        this.getFilterData(); \r\n        this.ApplyLoadsFilters();\r\n    }\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n            //this.toogleDriver = true;\r\n        }\r\n\r\n    }\r\n\r\n    public ShowCarrierMangedData() {\r\n        this.FilterForm.get('SelectedCarriers').patchValue([]);\r\n        this.getFilterData();\r\n        this.loadsGridView.applyLoadsFilters(this.FilterForm);\r\n        this.loadsMapView.applyLoadsFilters(this.FilterForm);\r\n    }\r\n\r\n    public ResetLoadsFilters() {\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n        this.FilterForm.get('SelectedStates').patchValue([]);\r\n        this.FilterForm.get('SelectedPriorities').patchValue([]);\r\n        this.FilterForm.get('SelectedSuppliers').patchValue([]);\r\n        this.FilterForm.get('SelectedLocations').patchValue([]);\r\n        this.FilterForm.get('FromDate').patchValue(fromDate);\r\n        this.FilterForm.get('ToDate').patchValue(toDate);\r\n        this.FilterForm.get('selectedLocAttributeList').patchValue([]);\r\n        this.ApplyLoadsFilters('reset');\r\n    }\r\n\r\n    public ApplyLoadsFilters(msg?) {\r\n        this.SaveFilters(false);\r\n        this.filterCount = 0;\r\n\r\n        if (this.FilterForm) {\r\n\r\n            var selectedStates = this.FilterForm.get('SelectedStates').value || [];\r\n            this.filterCount += selectedStates.length;\r\n\r\n            var selectedSuppliers = this.FilterForm.get('SelectedSuppliers').value || [];\r\n            this.filterCount += selectedSuppliers.length;\r\n\r\n            var selectedLocations = this.FilterForm.get('SelectedLocations').value || [];\r\n            this.filterCount += selectedLocations.length;\r\n\r\n            var selectedPriorities = this.FilterForm.get('SelectedPriorities').value || [];\r\n            this.filterCount += selectedPriorities.length;\r\n\r\n            var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\r\n            this.filterCount += selectedLocAttributeList.length;\r\n        }\r\n\r\n        this.loadsGridView.applyLoadsFilters(this.FilterForm);\r\n        this.loadsMapView.applyLoadsFilters(this.FilterForm);\r\n\r\n        if (msg == \"set\") {\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n<div class=\"col-sm-9 sticky-header-wmd\">\r\n    <div class=\"row\" [formGroup]=\"FilterForm\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-7\">\r\n                    <div class=\"form-check form-check-inline fs14 mt5\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" formControlName=\"IsShowCarrierManaged\" />\r\n                        <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n                    </div>\r\n                    <div class=\"mtm10\" *ngIf=\"FilterForm.get('IsShowCarrierManaged').value\">\r\n                        <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\" [autoClose]=\"'outside'\">Select Carrier</a>\r\n                        <ng-template #popContent>\r\n                            <div class=\"col-sm-12 p-0\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedCarriers']\"\r\n                                                         [settings]=\"PriorityDdlSettings\"\r\n                                                         [placeholder]=\"'Select Carrier'\"\r\n                                                         [data]=\"Carriers\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-5\">\r\n                    <!--<ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedLocations']\"\r\n                                             [settings]=\"LocationDdlSettings\" [placeholder]=\"'Select Location'\" [data]=\"Locations\">\r\n                    </ng-multiselect-dropdown>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n               [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\" formControlName=\"FromDate\" autocomplete=\"off\">-->\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n               [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\" formControlName=\"ToDate\" autocomplete=\"off\">-->\r\n        </div>\r\n\r\n        <!--<span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span>-->\r\n        <div class=\"col-3 pl0 text-right pt2\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i>Filters</a>\r\n            <a *ngIf=\"singleMulti!=2\" class=\"hide_show_map fs14 ml10\" (click)=\"toggleMapView()\">\r\n                <i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleMap').value ? 'Hide Map' : 'Show Map'}}\r\n            </a>\r\n            <!--<div class=\"col-sm-3 pl0 text-right pt8\" (clickOutside)=\"clickOutsideDropdown()\">\r\n                <a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>\r\n                <div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n                    <div class=\"pull-right\">\r\n                        <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 mb15\">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\"\r\n                                                             [settings]=\"StateDdlSettings\" [placeholder]=\"'Select States'\" [data]=\"States\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-sm-12 mb15\">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\" [data]=\"LoadPriorities\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-sm-12 mb15\">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedSuppliers']\"\r\n                                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Supplier'\" [data]=\"Suppliers\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-sm-12 \">\r\n                                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                                             [data]=\"LocationAttributeList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n        <ng-template #popContent>\r\n            <div class=\"popover-details\">\r\n                <div class=\"row border-bottom-2\">\r\n                    <div class=\"col-6 pr-0\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">State</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\"\r\n                                                     [settings]=\"StateDdlSettings\" [placeholder]=\"'Select States'\" [data]=\"States\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6 \">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Supplier</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedSuppliers']\"\r\n                                                     [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Supplier'\" [data]=\"Suppliers\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"row border-bottom-2 mt10\">\r\n                    <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedLocations']\"\r\n                                                     [settings]=\"LocationDdlSettings\" [placeholder]=\"'Select Location'\" [data]=\"Locations\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row border-bottom-2 mt10\">\r\n                    <div class=\"col-6 pr-0\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">From</label>\r\n                            <input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\" formControlName=\"FromDate\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">To</label>\r\n                            <input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\" formControlName=\"ToDate\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row border-bottom-2 mt10\">\r\n                    <div class=\"col-6 pr-0\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Priority</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                     [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\" [data]=\"LoadPriorities\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                            <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                     [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                                     [data]=\"LocationAttributeList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                 \r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div class=\"col-12 text-right\">\r\n                        <button type=\"button\" (click)=\"ResetLoadsFilters();\" class=\"btn btn-default\">\r\n                            Reset\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"ApplyLoadsFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n\r\n\r\n<app-where-is-my-driver-map-view *ngIf=\"(loadScreenType == 'Map' || loadScreenType == 'All') \" [singleMulti]=\"singleMulti\" [FilterForm]=\"FilterForm\"></app-where-is-my-driver-map-view>\r\n<app-where-is-my-driver-grid-view *ngIf=\"(loadScreenType == 'Grid' || loadScreenType == 'All') \" [singleMulti]=\"singleMulti\" [FilterForm]=\"FilterForm\"></app-where-is-my-driver-grid-view>"],"sourceRoot":"webpack:///"}