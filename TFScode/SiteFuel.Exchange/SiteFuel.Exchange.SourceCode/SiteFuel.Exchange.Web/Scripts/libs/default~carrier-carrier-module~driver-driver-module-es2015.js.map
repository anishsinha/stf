{"version":3,"sources":["./src/app/carrier/service/route-info.service.ts","./src/app/company-addresses/region/service/region.service.ts"],"names":[],"mappings":"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","file":"default~carrier-carrier-module~driver-driver-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { RouteInformationModel } from '../models/location';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RouteInfoService extends HandleError {\r\n    routeInfoDetails: BehaviorSubject<any>;\r\n    routeInfo: any;\r\n    private urlGetRouteInfoDetails = '/Carrier/ScheduleBuilder/GetRouteInfoDetails';\r\n    private urlGetRegionLocationDetails = '/Carrier/ScheduleBuilder/GetRegionLocationDetails';\r\n    private urlGetRouteLocationDetails = '/Carrier/ScheduleBuilder/GetRouteLocationDetails';\r\n    private urlDeleteRouteInfo = '/Carrier/ScheduleBuilder/DeleteRouteInfo';\r\n    private urlCreateRouteInfo = '/Carrier/ScheduleBuilder/CreateRouteInfo';\r\n    private urlUpdateRouteInfo = '/Carrier/ScheduleBuilder/UpdateRouteInfo';\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.routeInfoDetails = new BehaviorSubject(this.routeInfo);\r\n    }\r\n\r\n    getRoutesByRegion(regionId: string): Observable<any[]> {\r\n        return this.httpClient.get<any[]>(this.urlGetRouteInfoDetails + '?regionId=' + regionId)\r\n            .pipe(catchError(this.handleError<any>('getRoutesByRegion', null)));\r\n    }\r\n    getLocationsByRegion(regionId: string): Observable<any[]> {\r\n        return this.httpClient.get<any[]>(this.urlGetRegionLocationDetails + '?regionId=' + regionId)\r\n            .pipe(catchError(this.handleError<any>('getLocationsByRegion', null)));\r\n    }\r\n    getLocationsByRoute(Id: string, regionId: string): Observable<any[]> {\r\n        return this.httpClient.get<any[]>(this.urlGetRouteLocationDetails + '?Id=' + Id + '&regionId=' + regionId)\r\n            .pipe(catchError(this.handleError<any>('getLocationsByRegion', null)));\r\n    }\r\n    deleteRouteInfo(data: any): Observable<any[]> {\r\n        return this.httpClient.post<any>(this.urlDeleteRouteInfo, data)\r\n            .pipe(catchError(this.handleError<any>('deleteRouteInfo', null)));\r\n    }\r\n    createRouteInfo(data: RouteInformationModel): Observable<any[]> {\r\n        return this.httpClient.post<any>(this.urlCreateRouteInfo, data)\r\n            .pipe(catchError(this.handleError<any>('createRouteInfo', null)));\r\n    }\r\n    updateRouteInfo(data: RouteInformationModel): Observable<any[]> {\r\n        return this.httpClient.post<any>(this.urlUpdateRouteInfo, data)\r\n            .pipe(catchError(this.handleError<any>('createRouteInfo', null)));\r\n    }\r\n    sendRouteInfo(memberData: any) {\r\n        this.routeInfoDetails.next(memberData);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}