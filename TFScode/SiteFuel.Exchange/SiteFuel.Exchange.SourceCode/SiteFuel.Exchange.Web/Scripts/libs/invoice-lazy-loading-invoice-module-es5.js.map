{"version":3,"sources":["webpack:///node_modules/@azure/abort-controller/dist-esm/src/AbortController.js","webpack:///node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js","webpack:///node_modules/@azure/abort-controller/dist-esm/src/index.js","webpack:///node_modules/@azure/abort-controller/node_modules/tslib/tslib.es6.js","webpack:///node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js","webpack:///node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js","webpack:///node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js","webpack:///node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js","webpack:///node_modules/@azure/core-auth/dist-esm/src/index.js","webpack:///node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js","webpack:///node_modules/@azure/core-auth/dist-esm/src/typeguards.js","webpack:///node_modules/@azure/core-http/dist-esm/src/coreHttp.js","webpack:///node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js","webpack:///node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js","webpack:///node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js","webpack:///node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js","webpack:///node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js","webpack:///node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/httpClientCache.js","webpack:///node_modules/@azure/core-http/dist-esm/src/httpHeaders.js","webpack:///node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js","webpack:///node_modules/@azure/core-http/dist-esm/src/log.js","webpack:///node_modules/@azure/core-http/dist-esm/src/operationOptions.js","webpack:///node_modules/@azure/core-http/dist-esm/src/operationParameter.js","webpack:///node_modules/@azure/core-http/dist-esm/src/operationSpec.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js","webpack:///node_modules/@azure/core-http/dist-esm/src/restError.js","webpack:///node_modules/@azure/core-http/dist-esm/src/serializer.js","webpack:///node_modules/@azure/core-http/dist-esm/src/serviceClient.js","webpack:///node_modules/@azure/core-http/dist-esm/src/url.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/constants.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/delay.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/typeguards.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/url.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/utils.js","webpack:///node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js","webpack:///node_modules/@azure/core-http/dist-esm/src/webResource.js","webpack:///node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js","webpack:///node_modules/@azure/core-http/node_modules/tslib/tslib.es6.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/index.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/md5.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/nil.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/parse.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/regex.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/rng.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/sha1.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/stringify.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v1.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v3.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v35.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v4.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v5.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/validate.js","webpack:///node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/version.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/index.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/azureAsyncPolling.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/bodyPolling.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/index.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/locationPolling.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/logger.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/lroEngine.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/models.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/operation.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/passthrough.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/lroEngine/stateMachine.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/pollOperation.js","webpack:///node_modules/@azure/core-lro/dist-esm/src/poller.js","webpack:///node_modules/@azure/core-paging/dist-esm/src/getPagedAsyncIterator.js","webpack:///node_modules/@azure/core-paging/dist-esm/src/index.js","webpack:///node_modules/@azure/core-paging/dist-esm/src/models.js","webpack:///node_modules/@azure/core-paging/node_modules/tslib/tslib.es6.js","webpack:///node_modules/@azure/core-tracing/dist-esm/src/createSpan.js","webpack:///node_modules/@azure/core-tracing/dist-esm/src/index.js","webpack:///node_modules/@azure/core-tracing/dist-esm/src/interfaces.js","webpack:///node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js","webpack:///node_modules/@azure/logger/dist-esm/src/debug.js","webpack:///node_modules/@azure/logger/dist-esm/src/index.js","webpack:///node_modules/@azure/logger/dist-esm/src/log.browser.js","webpack:///node_modules/@azure/logger/node_modules/tslib/tslib.es6.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchResponse.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchResponseParser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchUtils.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatch.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatchClient.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobDownloadResponse.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobLeaseClient.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobQueryResponse.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobServiceClient.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Clients.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/ContainerClient.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/PageBlobRangeResponse.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Range.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageBrowserPolicyFactory.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageClient.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageRetryPolicyFactory.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/TelemetryPolicyFactory.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/Credential.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/UserDelegationKeyCredential.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/index.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/index.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/appendBlob.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/blob.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/blockBlob.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/container.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/pageBlob.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/service.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClient.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClientContext.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generatedModels.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/index.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/log.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/models.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/AnonymousCredentialPolicy.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/CredentialPolicy.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/StorageBrowserPolicy.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/StorageRetryPolicy.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/TelemetryPolicy.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASPermissions.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASResourceTypes.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASServices.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASSignatureValues.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASPermissions.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASSignatureValues.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/ContainerSASPermissions.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SASQueryParameters.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SasIPRange.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/Batch.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/Mutex.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/cache.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-common/src/BufferScheduler.browser.js","webpack:///node_modules/@azure/storage-blob/dist-esm/storage-common/src/index.browser.js","webpack:///node_modules/@azure/storage-blob/node_modules/tslib/tslib.es6.js","webpack:///node_modules/@opentelemetry/api/build/esm/api/context.js","webpack:///node_modules/@opentelemetry/api/build/esm/api/diag.js","webpack:///node_modules/@opentelemetry/api/build/esm/api/propagation.js","webpack:///node_modules/@opentelemetry/api/build/esm/api/trace.js","webpack:///node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","webpack:///node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","webpack:///node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","webpack:///node_modules/@opentelemetry/api/build/esm/baggage/types.js","webpack:///node_modules/@opentelemetry/api/build/esm/baggage/utils.js","webpack:///node_modules/@opentelemetry/api/build/esm/common/Exception.js","webpack:///node_modules/@opentelemetry/api/build/esm/common/Time.js","webpack:///node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","webpack:///node_modules/@opentelemetry/api/build/esm/context/context.js","webpack:///node_modules/@opentelemetry/api/build/esm/context/types.js","webpack:///node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","webpack:///node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js","webpack:///node_modules/@opentelemetry/api/build/esm/diag/index.js","webpack:///node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","webpack:///node_modules/@opentelemetry/api/build/esm/diag/types.js","webpack:///node_modules/@opentelemetry/api/build/esm/index.js","webpack:///node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","webpack:///node_modules/@opentelemetry/api/build/esm/internal/semver.js","webpack:///node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","webpack:///node_modules/@opentelemetry/api/build/esm/platform/browser/index.js","webpack:///node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","webpack:///node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/Sampler.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/attributes.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/link.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/span.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/span_context.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/status.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/trace_state.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/tracer.js","webpack:///node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js","webpack:///node_modules/@opentelemetry/api/build/esm/version.js","webpack:///node_modules/events/events.js","webpack:///node_modules/rxjs/internal/Observable.js","webpack:///node_modules/rxjs/internal/Observer.js","webpack:///node_modules/rxjs/internal/Subject.js","webpack:///node_modules/rxjs/internal/SubjectSubscription.js","webpack:///node_modules/rxjs/internal/Subscriber.js","webpack:///node_modules/rxjs/internal/Subscription.js","webpack:///node_modules/rxjs/internal/config.js","webpack:///node_modules/rxjs/internal/symbol/observable.js","webpack:///node_modules/rxjs/internal/symbol/rxSubscriber.js","webpack:///node_modules/rxjs/internal/util/ObjectUnsubscribedError.js","webpack:///node_modules/rxjs/internal/util/UnsubscriptionError.js","webpack:///node_modules/rxjs/internal/util/canReportError.js","webpack:///node_modules/rxjs/internal/util/hostReportError.js","webpack:///node_modules/rxjs/internal/util/identity.js","webpack:///node_modules/rxjs/internal/util/isArray.js","webpack:///node_modules/rxjs/internal/util/isFunction.js","webpack:///node_modules/rxjs/internal/util/isObject.js","webpack:///node_modules/rxjs/internal/util/pipe.js","webpack:///node_modules/rxjs/internal/util/toSubscriber.js","webpack:///src/app/directives/on-create.directive.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/invoice/asset-list/asset-list.component.ts","webpack:///src/app/invoice/asset-list/asset-list.component.html","webpack:///src/app/invoice/bdr-detail/bdr-detail.component.ts","webpack:///src/app/invoice/bdr-detail/bdr-detail.component.html","webpack:///src/app/invoice/bdr-detail/show-bdr-detail.component.ts","webpack:///src/app/invoice/bdr-detail/show-bdr-detail.component.html","webpack:///src/app/invoice/bol-detail/bol-detail.component.ts","webpack:///src/app/invoice/bol-detail/bol-detail.component.html","webpack:///src/app/invoice/bol-detail/bol-list.component.ts","webpack:///src/app/invoice/bol-detail/bol-list.component.html","webpack:///src/app/invoice/createinvoice.component.ts","webpack:///src/app/invoice/createinvoice.component.html","webpack:///src/app/invoice/customer-detail/customer-detail.component.ts","webpack:///src/app/invoice/customer-detail/customer-detail.component.html","webpack:///src/app/invoice/lazy-loading/invoice-routing.module.ts","webpack:///src/app/invoice/lazy-loading/invoice.module.ts","webpack:///src/app/invoice/lift-tickets/lift-detail.component.ts","webpack:///src/app/invoice/lift-tickets/lift-detail.component.html","webpack:///src/app/invoice/lift-tickets/lift-tickets.component.ts","webpack:///src/app/invoice/lift-tickets/lift-tickets.component.html","webpack:///src/app/invoice/payment-terms/payment-terms.component.ts","webpack:///src/app/invoice/payment-terms/payment-terms.component.html","webpack:///src/app/invoice/produc-detail/fuel-surcharge.component.html","webpack:///src/app/invoice/produc-detail/fuel-surcharge.component.ts","webpack:///src/app/invoice/produc-detail/produc-detail.component.ts","webpack:///src/app/invoice/produc-detail/produc-detail.component.html","webpack:///src/app/invoice/services/imageservice.service.ts","webpack:///src/app/invoice/taxes/other-product-taxes.component.ts","webpack:///src/app/invoice/taxes/other-product-taxes.component.html","webpack:///src/app/invoice/various-drop-location/various-drop-location.component.ts","webpack:///src/app/invoice/various-drop-location/various-drop-location.component.html","webpack:///src/app/services/validation.service.ts","webpack:///os (ignored)"],"names":["AbortError","_super","message","_this","call","name","Error","AbortController","parentSignals","_signal","Array","isArray","arguments","_i","parentSignals_1","length","parentSignal","aborted","abort","addEventListener","Object","defineProperty","prototype","get","enumerable","configurable","timeout","ms","signal","timer","setTimeout","unref","listenersMap","WeakMap","abortedMap","AbortSignal","onabort","set","has","TypeError","_type","listener","listeners","push","removeEventListener","index","indexOf","splice","dispatchEvent","_event","abortSignal","slice","forEach","type","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","String","__","constructor","create","__assign","assign","t","s","i","n","apply","__rest","e","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","pop","__createBinding","o","m","k","k2","undefined","__exportStar","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__spreadArray","to","from","pack","l","__await","__asyncGenerator","asyncIterator","q","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","receiver","state","kind","__classPrivateFieldSet","AzureKeyCredential","_key","newKey","AzureNamedKeyCredential","_name","newName","isNamedKeyCredential","credential","AzureSASCredential","signature","_signature","newSignature","isSASCredential","isTokenCredential","castCredential","getToken","signRequest","isDefined","thing","isObjectWithProperties","properties","property","objectHasProperty","createSpanFunction","args","TokenRefreshBufferMs","ExpiringAccessTokenCache","tokenRefreshBufferMs","cachedToken","accessToken","Date","now","expiresOnTimestamp","AccessTokenRefresher","scopes","requiredMillisecondsBeforeNewRefresh","lastCalled","options","token","promise","ApiKeyCredentials","inHeader","inQuery","webResource","headers","headerName","url","endsWith","HeaderConstants","DEFAULT_AUTHORIZATION_SCHEME","BasicAuthenticationCredentials","userName","password","authorizationScheme","valueOf","credentials","encodedCredentials","AUTHORIZATION","TopicCredentials","topicKey","cachedHttpClient","getCachedDefaultHttpClient","getHeaderKey","toLowerCase","isHttpHeadersLike","object","castObject","rawHeaders","clone","contains","remove","headersArray","headerValues","headerNames","toJson","HttpHeaders","_headersMap","headerValue","toString","header","headerKey","JSON","stringify","HttpPipelineLogLevel","logger","operationOptionsToRequestOptionsBase","opts","_a","requestOptions","tracingOptions","additionalOptions","tracingContext","spanOptions","getPathStringFromParameter","parameter","getPathStringFromParameterPath","parameterPath","mapper","join","serializedName","getStreamResponseStatusCodes","operationSpec","Set","statusCode","responses","operationResponse","bodyMapper","Stream","add","Number","DEFAULT_CYCLER_OPTIONS","forcedRefreshWindowInMs","retryIntervalInMs","refreshWindowInMs","beginRefresh","getAccessToken","timeoutInMs","tryGetAccessToken","finalToken","createTokenCycler","tokenCyclerOptions","refreshWorker","cycler","isRefreshing","shouldRefresh","mustRefresh","refresh","getTokenOptions","_token","reason","tokenOptions","bearerTokenAuthenticationPolicy","BearerTokenAuthenticationPolicy","nextPolicy","startsWith","_nextPolicy","sendRequest","deserializationPolicy","deserializationContentTypes","parsingOptions","DeserializationPolicy","defaultJsonContentTypes","defaultXmlContentTypes","DefaultDeserializationOptions","expectedContentTypes","json","xml","requestPolicyOptions","jsonContentTypes","xmlContentTypes","xmlCharKey","request","response","deserializeResponseBody","getOperationResponse","parsedResponse","operationResponseGetter","status","shouldDeserializeResponse","shouldDeserialize","_b","_c","updatedOptions","rootName","includeRoot","parse","responseSpec","handleErrorResponse","shouldReturnResponse","valueToDeserialize","parsedBody","isXML","Sequence","xmlElementName","serializer","deserialize","innerError","restError","bodyAsText","httpMethod","headersMapper","parsedHeaders","isOperationSpecEmpty","expectedStatusCodes","keys","isSuccessByStatus","isExpectedStatusCode","isError","errorResponseSpec","streaming","streamResponseStatusCodes","streamResponseBody","initialErrorMessage","defaultBodyMapper","defaultHeadersMapper","parsedError","internalError","code","defaultError","errorHandler","err","msg","errCode","PARSE_ERROR","text","contentType","contentComponents","split","map","component","some","DisbleResponseDecompressionNotSupportedInBrowser","disableResponseDecompressionPolicy","_options","DisableResponseDecompressionPolicy","_request","exponentialRetryPolicy","retryCount","retryInterval","maxRetryInterval","ExponentialRetryPolicy","RetryMode","DefaultRetryOptions","maxRetries","retryDelayInMs","maxRetryDelayInMs","retry","policy","retryData","requestError","shouldPolicyRetry","responseParam","RETRY_AFTER","minRetryInterval","isAborted","info","res","REQUEST_SEND_ERROR","generateClientRequestIdPolicy","requestIdHeaderName","GenerateClientRequestIdPolicy","_requestIdHeaderName","requestId","DefaultKeepAliveOptions","enable","keepAlivePolicy","keepAliveOptions","KeepAlivePolicy","keepAlive","logPolicy","loggingOptions","LogPolicy","allowedHeaderNames","allowedQueryParameters","sanitizer","enabled","logRequest","logResponse","sanitize","getDefaultUserAgentKey","getPlatformSpecificData","navigator","self","osInfo","oscpu","platform","replace","ndJsonPolicy","NdJsonPolicy","item","proxyNotSupportedInBrowser","getDefaultProxySettings","_proxyUrl","proxyPolicy","_proxySettings","ProxyPolicy","allowedRedirect","DefaultRedirectOptions","handleRedirects","redirectPolicy","maximumRetries","RedirectPolicy","handleRedirect","currentRetries","locationHeader","includes","method","builder","setPath","BaseRequestPolicy","logLevel","shouldLog","log","RequestPolicyOptions","_logger","OFF","minimumLogLevel","rpRegistrationPolicy","retryTimeout","RPRegistrationPolicy","_retryTimeout","registerIfNeeded","rpName","checkRPNotRegisteredError","urlPrefix","extractSubscriptionUrl","registerRP","registrationStatus","getRequestEssentials","originalRequest","reuseUrlToo","reqOptions","responseBody","matchRes","match","provider","postUrl","getUrl","getRegistrationStatus","obj","registrationState","signingPolicy","authenticationProvider","SigningPolicy","nextRequest","systemErrorRetryPolicy","SystemErrorRetryPolicy","_response","StatusCodes","HttpConstants","throttlingRetryPolicy","ThrottlingRetryPolicy","StandardAbortMessage","_handleResponse","numberOfRetries","_defaultResponseHandler","httpRequest","TooManyRequests","ServiceUnavailable","httpResponse","retryAfterHeader","delayInMs","parseRetryAfterHeader","abortErrorMsg","retryAfterInSeconds","isNaN","parseDateRetryAfterHeader","date","diff","createSpan","packagePrefix","namespace","tracingPolicy","TracingPolicy","userAgent","span","tryCreateSpan","tryProcessResponse","tryProcessError","path","getPath","CLIENT","isRecording","end","namespaceFromContext","getValue","setAttribute","setAttributes","spanContext","traceParentHeader","traceState","serialize","warning","setStatus","ERROR","serviceRequestId","OK","getRuntimeInfo","msRestRuntime","coreHttpVersion","getUserAgentString","telemetryInfo","keySeparator","valueSeparator","getDefaultUserAgentHeaderName","getDefaultUserAgentValue","runtimeInfo","platformSpecificData","userAgentPolicy","userAgentData","UserAgentPolicy","addUserAgentHeader","QueryCollectionFormat","errorSanitizer","RestError","Serializer","modelMappers","objectName","failValidation","constraintName","constraintValue","constraints","valueAsNumber","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","valueAsArray","pattern","RegExp","payload","mapperType","isConstant","defaultValue","required","nullable","validateConstraints","serializeBasicTypes","enumMapper","serializeEnumType","allowedValues","serializeDateTypes","serializeByteArrayType","serializeBase64UrlType","serializeSequenceType","Boolean","serializeDictionaryType","serializeCompositeType","xmlIsWrapped","deserializeCompositeType","castResponseBody","parseFloat","unixTimeToDate","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","trimEnd","str","ch","len","substr","bufferToBase64Url","buffer","Uint8Array","splitSerializeName","prop","classes","partialclass","subwords","charAt","dateToUnixTime","Math","floor","getTime","typeName","objectType","ArrayBuffer","isView","Blob","isPresent","returnValue","toISOString","substring","toUTCString","isXml","elementType","element","tempArray","serializedValue","xmlNamespace","xmlnsKey","xmlNamespacePrefix","valueType","tempDictionary","getXmlObjectValue","resolveAdditionalProperties","additionalProperties","className","modelMapper","resolveReferencedMapper","resolveModelProperties","modelProps","modelProperties","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","propertyMapper","readOnly","propName","parentObject","xmlName","paths","pathName","childObject","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","xmlIsAttribute","additionalPropertiesMapper","propNames","clientPropName","isAdditionalProperty","every","pn","isSpecialXmlProperty","propertyName","instance","handledPropertyNames","headerCollectionPrefix","dictionary","wrapped","elementList","propertyInstance","arrayInstance","entries","responsePropName","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","indexDiscriminator","polymorphicMapper","discriminators","getPolymorphicDiscriminatorSafely","serializeObject","castToSerialize","array","strEnum","MapperType","ServiceClient","_withCredentials","withCredentials","_httpClient","httpClient","_requestPolicyOptions","httpPipelineLogger","requestPolicyFactories","authPolicyFactory","wrappedPolicyFactory","bearerTokenPolicyFactory","serviceClient","serviceClientOptions","createOptions","credentialScopes","getCredentialScopes","baseUri","createDefaultRequestPolicyFactories","newRequestPolicyFactories","_requestPolicyFactories","validateRequestProperties","prepare","httpPipeline","operationArguments","callback","serializerOptions","baseUrl","requestUrl","appendPath","urlParameters","urlParameter","urlParameterValue","getOperationArgumentValueFromParameter","skipEncoding","encodeURIComponent","replaceAll","queryParameters","queryParameter","queryParameterValue","collectionFormat","Multi","Ssv","Tsv","setQueryParameter","requestContentType","requestBody","headerParameters","headerParameter","customHeaders","customHeaderName","onUploadProgress","onDownloadProgress","serializeRequestBody","rawResponse","sendRequestError","details","flattenResponse","cb","_d","_e","_f","requestBodyParameterPathString","isStream","getXmlValueWithNamespace","mediaType","formDataParameters","formData","formDataParameter","formDataParameterValue","formDataParameterPropertyName","getValueOrFunctionResult","defaultValueCreator","factories","generateClientRequestIdHeader","clientRequestIdHeaderName","userAgentHeaderName","userAgentHeaderValue","rpRegistrationRetryTimeout","noRetryPolicy","proxySettings","createPipelineFromOptions","pipelineOptions","sendStreamingJson","userAgentValue","userAgentOptions","userAgentPrefix","userAgentInfo","defaultUserAgentInfo","retryOptions","redirectOptions","proxyOptions","deserializationOptions","decompressResponse","getPropertyParent","parent","propertyPath","propertyPathLength","getOperationArgumentValueFromParameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathString","propertyPathString","parameterPathPart","addOperationResponse","blobBody","readableStreamBody","isPageableResponse","arrayResponse","scope","URLQuery","_rawQuery","parameterName","parameterValue","caseParameterValue","newValue","parameterStrings","parameterValueElement","currentState","currentCharacter","URLBuilder","scheme","_scheme","host","_host","port","_port","_path","schemeIndex","schemeStart","lastIndexOf","currentPath","query","_query","queryParameterName","startState","tokenizer","URLTokenizer","current","tokenPath","any","searchValue","replaceValue","setScheme","getScheme","setHost","getHost","setPort","getPort","setQuery","getQuery","URLToken","isAlphaNumericCharacter","character","characterCode","charCodeAt","_text","_textLength","_currentState","_currentIndex","_currentToken","hasCurrentCharacter","nextScheme","nextSchemeOrHost","nextHost","nextPort","nextPath","nextQuery","readRemaining","getCurrentCharacter","nextCharacter","peekCharacters","charactersToPeek","endIndex","readWhile","condition","readWhileLetterOrDigit","readUntilCharacter","terminatingCharacters","schemeOrHost","encodeString","btoa","encodeByteArray","fromCharCode","decodeString","byteString","atob","arr","Constants","HTTP","HTTPS","HTTP_PROXY","HTTPS_PROXY","NO_PROXY","ALL_PROXY","HttpVerbs","PUT","GET","DELETE","POST","MERGE","HEAD","PATCH","AUTHORIZATION_SCHEME","USER_AGENT","delay","onAborted","rejectOnAbort","removeListeners","clearTimeout","DEFAULT_CLIENT_RETRY_COUNT","DEFAULT_CLIENT_RETRY_INTERVAL","DEFAULT_CLIENT_MAX_RETRY_INTERVAL","DEFAULT_CLIENT_MIN_RETRY_INTERVAL","isNumber","shouldRetry","retryLimit","predicate","updateRetryData","incrementDelta","pow","boundedRandDelta","random","min","custom","RedactedString","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","seen","sanitizeHeaders","sanitizeUrl","sanitizeQuery","sanitizeObject","allowedKeys","accessor","sanitized","urlBuilder","queryString","XML_ATTRKEY","XML_CHARKEY","DEFAULT_CLIENT_MAX_RETRY_COUNT","URL","validUuidRegex","isNode","process","version","versions","node","urlIsHTTPS","urlToCheck","protocol","encodeUri","uri","stripResponse","strippedResponse","stripRequest","strippedRequest","isValidUuid","uuid","test","generateUuid","executePromisesSequentially","promiseFactories","kickstart","promiseFactory","promiseToCallback","data","promiseToServiceCallback","nextTick","prepareXMLRootList","elementName","xmlNamespaceKey","applyMixins","targetCtorParam","sourceCtors","castTargetCtorParam","sourceCtor","getOwnPropertyNames","validateISODuration","isDuration","isPrimitiveType","getEnvironmentValue","env","isObject","input","document","DOMParser","Node","XMLSerializer","doc","implementation","createDocument","parser","parseXML","dom","parseFromString","throwIfError","domToObject","childNodes","errorNS","getErrorNamespace","getElementsByTagName","namespaceURI","ignored","parserErrors","innerHTML","isElement","attributes","asElementWithAttributes","hasAttributes","childNodeCount","firstChildNode","onlyChildTextValue","nodeType","TEXT_NODE","nodeValue","elementWithAttributes","attr","nodeName","child","stringifyXML","content","buildNode","serializeToString","buildAttributes","attrs","createAttribute","elem","createElement","textContent","arrayElem","setNamedItem","appendChild","isWebResourceLike","WebResource","pathTemplate","validMethods","toUpperCase","pathParameters","segments","pathParamName","pathParam","stringifiedPathParameters","skipUrlEncoding","queryParams","queryParamName","queryParam","disableClientRequestId","bodyIsStream","serializationMapper","mappers","disableJsonStringifyOnBody","XhrHttpClient","xhr","XMLHttpRequest","readyState","DONE","addProgressListener","upload","requestForm","FormData","appendFormValue","append","formKey","formValue","open","setRequestHeader","responseType","size","send","handleBlobResponse","rejectOnTerminalEvent","parseHeaders","responseText","rej","HEADERS_RECEIVED","reader","FileReader","onload","onerror","readAsText","rawEvent","loadedBytes","loaded","responseHeaders","headerLines","getAllResponseHeaders","trim","line","abortError","md5","bytes","unescape","md5ToHexEncodedArray","wordsToMd5","bytesToWords","output","length32","hexTab","x","hex","parseInt","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","lsw","msw","bitRotateLeft","num","cnt","md5cmn","getRandomValues","rnds8","rng","crypto","bind","msCrypto","z","ROTL","sha1","K","H","N","ceil","M","_i2","W","_t","_t2","T","byteToHex","offset","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","buf","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","v3","stringToBytes","DNS","generateUUID","hashfunc","v4","rnds","v5","validate","getResponseStatus","isAzureAsyncPollingDone","sendFinalRequest","lro","resourceLocation","lroResourceLocationConfig","sendPollRequest","requestPath","processAzureAsyncOperationResult","finalResponse","getProvisioningState","provisioningState","isBodyPollingDone","processBodyPollingOperationResult","isLocationPollingDone","processLocationPollingOperationResult","deserializeState","serializedState","LroEngine","intervalInMs","resumeFrom","operation","processResult","updateState","isDone","config","setPollerConfig","successStates","failureStates","terminalStates","GenericPollOperation","pollerConfig","lastResponse","isStarted","initializeState","requestMethod","sendInitialRequest","isCompleted","poll","getLroStatusFromResponse","flatResponse","pollingURL","verbose","fireProgress","isCancelled","processPassthroughOperationResult","getPollingUrl","defaultPath","getAzureAsyncOperation","getLocation","getOperationLocation","inferLroMode","mode","SimpleRestError","isUnexpectedInitialResponse","isUnexpectedPollingResponse","createGetLroStatusFromResponse","lroPrimitives","createPoll","retryAfter","retryAfterInMs","calculatePollingIntervalFromDate","retryAfterDate","defaultIntervalInMs","timeNow","retryAfterTime","createInitializeState","initialRawResponse","PollerStoppedError","PollerCancelledError","Poller","stopped","pollProgressCallbacks","isStopped","update","cancel","pollOncePromise","pollOnce","clearPollOncePromise","startPolling","filter","cancelPromise","cancelOnce","getPagedAsyncIterator","pagedResult","iter","getItemAsyncIterator","byPage","settings","getPageAsyncIterator","maxPageSize","getItemAsyncIterator_1","pages","firstVal","pages_1","pages_1_1","page","e_1","getPageAsyncIterator_1","getPage","firstPageLink","nextPageLink","isTracingDisabled","azureTracingDisabledValue","AZURE_TRACING_DISABLED","operationName","operationOptions","tracer","INTERNAL","spanName","wrapSpanContext","startSpan","newSpanOptions","newTracingOptions","active","newOperationOptions","SpanKind","getSpan","context","setSpan","setSpanContext","getSpanContext","isSpanContextValid","getTracer","SpanStatusCode","VERSION","extractSpanContextFromTraceParentHeader","parts","traceId","spanId","traceOptions","traceFlags","getTraceParentHeader","missingFields","flags","hexFlags","debugEnvVariable","DEBUG","enabledString","enabledNamespaces","skippedNamespaces","debuggers","debugObj","createDebugger","disable","namespaces","e_2","wildcard","namespaceList","ns","namespaceList_1","namespaceList_1_1","e_1_1","debuggers_1","debuggers_1_1","e_2_1","e_3","e_4","skippedNamespaces_1","skippedNamespaces_1_1","skipped","e_3_1","enabledNamespaces_1","enabledNamespaces_1_1","enabledNamespace","e_4_1","newDebugger","debug","destroy","extend","registeredLoggers","logLevelFromEnv","AZURE_LOG_LEVEL","azureLogLevel","AzureLogger","AZURE_LOG_LEVELS","isAzureLogLevel","setLogLevel","console","level","registeredLoggers_1","registeredLoggers_1_1","shouldEnable","getLogLevel","levelMap","createClientLogger","clientRootLogger","patchLogMethod","createLogger","firstArg","warn","HTTP_HEADER_DELIMITER","SPACE_DELIMITER","NOT_FOUND","BatchResponseParser","batchResponse","subRequests","RangeError","responseBatchBoundary","perResponsePrefix","batchResponseEnding","HTTP_ACCEPTED","responseBodyAsText","subResponses","subResponseCount","deserializedSubResponses","subResponsesSucceededCount","subResponsesFailedCount","subResponse","deserializedSubResponse","responseLines","subRespHeaderStartFound","subRespHeaderEndFound","subRespFailed","contentId","responseLine","CONTENT_ID","tokens","statusMessage","X_MS_ERROR_CODE","errorCode","isInteger","getBodyAsText","blob","utf8ByteLength","BlobBatch","batch","batchRequest","InnerBatchRequest","getMultipartContentType","getHttpRequestBody","getSubRequests","subRequest","assembleSubRequestFunc","lock","preAddSubRequest","postAddSubRequest","unlock","batchType","urlOrBlobClient","credentialOrOptions","setBatchType","addSubRequestInternal","createPipeline","credentialOrTier","tierOrOptions","tier","setAccessTier","operationCount","tempGuid","boundary","subRequestPrefix","CONTENT_TYPE","CONTENT_TRANSFER_ENCODING","multipartContentType","batchRequestEnding","Map","isAnonymousCreds","policyFactoryLength","BatchHeaderFilterPolicyFactory","BatchRequestAssemblePolicyFactory","BatchRequestAssemblePolicy","dummyResponse","appendSubRequestToBody","BatchHeaderFilterPolicy","xMsHeaderName","X_MS_VERSION","BlobBatchClient","credentialOrPipeline","pipeline","storageClientContext","toServiceClientOptions","serviceOrContainerContext","urlsOrBlobClients","deleteBlob","submitBatch","setBlobAccessTier","batchRequestBody","getMultiPartContentType","rawBatchResponse","batchResponseParser","parseBatchResponse","responseSummary","clientRequestId","BlobDownloadResponse","BlobLeaseClient","client","leaseId","clientContext","_url","_isContainer","_containerOrBlobOperation","_leaseId","duration","conditions","ifMatch","ifNoneMatch","tagConditions","acquireLease","modifiedAccessConditions","ifTags","proposedLeaseId","changeLease","releaseLease","renewLease","breakPeriod","breakLease","BlobQueryResponse","originalResponse","acceptRanges","cacheControl","contentDisposition","contentEncoding","contentLanguage","blobSequenceNumber","blobType","contentLength","contentMD5","contentRange","copyId","copyProgress","copySource","copyStatus","copyStatusDescription","leaseDuration","leaseState","leaseStatus","blobCommittedBlockCount","etag","isServerEncrypted","blobContentMD5","lastModified","encryptionKeySha256","contentCrc64","BlobServiceClient","serviceContext","containerName","containerClient","getContainerClient","containerCreateResponse","deletedContainerName","deletedContainerVersion","destinationContainerName","containerContext","restore","containerUndeleteResponse","sourceContainerName","rename","sourceLeaseId","sourceCondition","containerRenameResponse","getProperties","setProperties","getStatistics","getAccountInfo","marker","listContainersSegment","include","tagFilterSqlExpression","filterBlobs","where","wrappedResponse","blobs","tagValue","tags","blobTagSet","findBlobsByTagsSegments_1","findBlobsByTagsSegment","continuationToken","findBlobsByTagsItems_1","findBlobsByTagsSegments","segment","listSegmentOptions","findBlobsByTagsItems","listSegments_1","listContainersSegmentResponse","containerItems","listItems_1","listSegments","prefix","includeDeleted","includeMetadata","listItems","startsOn","expiresOn","getUserDelegationKey","userDelegationKey","signedObjectId","signedTenantId","signedStartsOn","signedExpiresOn","signedService","signedVersion","permissions","resourceTypes","sas","services","connectionString","extractedCreds","sharedKeyCredential","accountName","accountKey","proxyUri","accountSas","BlobClient","urlOrConnectionString","credentialOrPipelineOrContainerName","blobNameOrOptions","blobName","getBlobAndContainerNamesFromUrl","_containerName","blobContext","_snapshot","Parameters","SNAPSHOT","_versionId","VERSIONID","snapshot","versionId","AppendBlobClient","BlockBlobClient","PageBlobClient","count","customerProvidedKey","isHttps","download","leaseAccessConditions","onProgress","range","rangeGetContentMD5","rangeGetContentCRC64","rangeGetContentCrc64","cpkInfo","wrappedRes","objectReplicationDestinationPolicyId","objectReplicationPolicyId","objectReplicationSourceProperties","objectReplicationRules","maxRetryRequests","start","updatedDownloadOptions","ifModifiedSince","ifUnmodifiedSince","deleteSnapshots","succeeded","undelete","blobHTTPHeaders","setHttpHeaders","blobHttpHeaders","setMetadata","encryptionScope","setTags","getTags","proposeLeaseId","createSnapshot","abortCopyFromURL","startCopyFromURL","poller","blobClient","startCopyFromURLOptions","sourceConditions","copyFromURL","sourceModifiedAccessConditions","sourceIfMatch","sourceIfModifiedSince","sourceIfNoneMatch","sourceIfUnmodifiedSince","sourceContentMD5","copySourceAuthorization","sourceAuthorization","blobTagsString","immutabilityPolicyExpiry","immutabilityPolicy","expiriesOn","immutabilityPolicyMode","policyMode","legalHold","setTier","rehydratePriority","param1","param2","param3","param4","Buffer","blockSize","alloc","transferProgress","concurrency","off","addOperation","chunkEnd","maxRetryRequestsPerBlock","stream","filePath","blobDownloadStream","parsedUrl","pathComponents","decodeURIComponent","sourceIfTags","sealBlob","snapshotTime","deleteImmutabilityPolicy","setImmutabilityPolicy","modifiedAccessCondition","legalHoldEnabled","setLegalHold","appendBlobContext","seal","appendPositionAccessConditions","appendBlock","transactionalContentMD5","transactionalContentCrc64","sourceURL","sourceOffset","appendBlockFromUrl","sourceRange","sourceContentCrc64","blockBlobContext","_blobContext","queryRequest","queryType","expression","inputSerialization","inputTextConfiguration","outputSerialization","outputTextConfiguration","onError","putBlobFromUrl","blockId","stageBlock","stageBlockFromURL","blocks","commitBlockList","latest","listType","getBlockList","committedBlocks","uncommittedBlocks","byteOffset","byteLength","uploadSeekableInternal","browserBlob","browserData","bodyFactory","maxSingleShotSize","numBlocks","blockList","blockIDPrefix","blockID","autoClose","Infinity","bufferSize","maxConcurrency","blockNum","scheduler","pageBlobContext","uploadPages","sequenceNumberAccessConditions","destOffset","uploadPagesFromURL","clearPages","getPageRanges","prevSnapshot","getPageRangesDiff","prevsnapshot","prevSnapshotUrl","resize","sequenceNumberAction","sequenceNumber","updateSequenceNumber","copyIncremental","ContainerClient","getContainerNameFromUrl","getAccessPolicy","blobPublicAccess","signedIdentifiers","identifier","accessPolicy","id","access","containerAcl","acl","setAccessPolicy","blockBlobClient","getBlockBlobClient","getBlobClient","withVersion","listBlobFlatSegment","blobItems","blobItemInteral","blobItem","blobTags","objectReplicationMetadata","delimiter","listBlobHierarchySegment","listBlobsFlatSegmentResponse","includeCopy","includeSnapshots","includeVersions","includeUncommitedBlobs","includeTags","includeDeletedWithVersions","includeImmutabilityPolicy","includeLegalHold","listHierarchySegments_1","listBlobsHierarchySegmentResponse","listItemsByHierarchy_1","listHierarchySegments","blobPrefixes","listItemsByHierarchy","rangeResponseFromModel","pageRange","clearRange","isPipelineLike","castPipeline","Pipeline","newPipeline","telemetryPolicy","telemetryString","rangeToString","iRange","StorageBrowserPolicyFactory","StorageClient","factory","StorageRetryPolicyFactory","TelemetryPolicyFactory","telemetry","libInfo","AnonymousCredential","Credential","StorageSharedKeyCredential","UserDelegationKeyCredential","BlobServiceProperties","blobAnalyticsLogging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","Logging","deleteProperty","read","write","retentionPolicy","RetentionPolicy","days","Metrics","includeAPIs","CorsRule","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","StaticWebsite","indexDocument","errorDocument404Path","defaultIndexDocumentPath","StorageError","BlobServiceStatistics","geoReplication","GeoReplication","lastSyncOn","ListContainersSegmentResponse","serviceEndpoint","ContainerItem","deleted","ContainerProperties","publicAccess","hasImmutabilityPolicy","hasLegalHold","defaultEncryptionScope","preventEncryptionScopeOverride","deletedOn","remainingRetentionDays","isImmutableStorageWithVersioningEnabled","KeyInfo","UserDelegationKey","FilterBlobSegment","FilterBlobItem","BlobTags","BlobTag","SignedIdentifier","AccessPolicy","ListBlobsFlatSegmentResponse","BlobFlatListSegment","BlobItemInternal","isCurrentVersion","hasVersionsOnly","BlobPropertiesInternal","createdOn","copyCompletedOn","serverEncrypted","incrementalCopy","destinationSnapshot","accessTier","accessTierInferred","archiveStatus","customerProvidedKeySha256","accessTierChangedOn","tagCount","isSealed","lastAccessedOn","immutabilityPolicyExpiresOn","ListBlobsHierarchySegmentResponse","BlobHierarchyListSegment","BlobPrefix","BlockLookupList","committed","uncommitted","BlockList","Block","PageList","PageRange","ClearRange","QueryRequest","QuerySerialization","format","QueryFormat","delimitedTextConfiguration","jsonTextConfiguration","arrowConfiguration","parquetTextConfiguration","DelimitedTextConfiguration","columnSeparator","fieldQuote","recordSeparator","escapeChar","headersPresent","JsonTextConfiguration","ArrowConfiguration","schema","ArrowField","precision","scale","ServiceSetPropertiesHeaders","ServiceSetPropertiesExceptionHeaders","ServiceGetPropertiesHeaders","ServiceGetPropertiesExceptionHeaders","ServiceGetStatisticsHeaders","ServiceGetStatisticsExceptionHeaders","ServiceListContainersSegmentHeaders","ServiceListContainersSegmentExceptionHeaders","ServiceGetUserDelegationKeyHeaders","ServiceGetUserDelegationKeyExceptionHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","isHierarchicalNamespaceEnabled","ServiceGetAccountInfoExceptionHeaders","ServiceSubmitBatchHeaders","ServiceSubmitBatchExceptionHeaders","ServiceFilterBlobsHeaders","ServiceFilterBlobsExceptionHeaders","ContainerCreateHeaders","ContainerCreateExceptionHeaders","ContainerGetPropertiesHeaders","denyEncryptionScopeOverride","ContainerGetPropertiesExceptionHeaders","ContainerDeleteHeaders","ContainerDeleteExceptionHeaders","ContainerSetMetadataHeaders","ContainerSetMetadataExceptionHeaders","ContainerGetAccessPolicyHeaders","ContainerGetAccessPolicyExceptionHeaders","ContainerSetAccessPolicyHeaders","ContainerSetAccessPolicyExceptionHeaders","ContainerRestoreHeaders","ContainerRestoreExceptionHeaders","ContainerRenameHeaders","ContainerRenameExceptionHeaders","ContainerSubmitBatchHeaders","ContainerSubmitBatchExceptionHeaders","ContainerAcquireLeaseHeaders","ContainerAcquireLeaseExceptionHeaders","ContainerReleaseLeaseHeaders","ContainerReleaseLeaseExceptionHeaders","ContainerRenewLeaseHeaders","ContainerRenewLeaseExceptionHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerBreakLeaseExceptionHeaders","ContainerChangeLeaseHeaders","ContainerChangeLeaseExceptionHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobFlatSegmentExceptionHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerListBlobHierarchySegmentExceptionHeaders","ContainerGetAccountInfoHeaders","ContainerGetAccountInfoExceptionHeaders","BlobDownloadHeaders","lastAccessed","BlobDownloadExceptionHeaders","BlobGetPropertiesHeaders","isIncrementalCopy","BlobGetPropertiesExceptionHeaders","BlobDeleteHeaders","BlobDeleteExceptionHeaders","BlobUndeleteHeaders","BlobUndeleteExceptionHeaders","BlobSetExpiryHeaders","BlobSetExpiryExceptionHeaders","BlobSetHttpHeadersHeaders","BlobSetHttpHeadersExceptionHeaders","BlobSetImmutabilityPolicyHeaders","BlobSetImmutabilityPolicyExceptionHeaders","BlobDeleteImmutabilityPolicyHeaders","BlobDeleteImmutabilityPolicyExceptionHeaders","BlobSetLegalHoldHeaders","BlobSetLegalHoldExceptionHeaders","BlobSetMetadataHeaders","BlobSetMetadataExceptionHeaders","BlobAcquireLeaseHeaders","BlobAcquireLeaseExceptionHeaders","BlobReleaseLeaseHeaders","BlobReleaseLeaseExceptionHeaders","BlobRenewLeaseHeaders","BlobRenewLeaseExceptionHeaders","BlobChangeLeaseHeaders","BlobChangeLeaseExceptionHeaders","BlobBreakLeaseHeaders","BlobBreakLeaseExceptionHeaders","BlobCreateSnapshotHeaders","BlobCreateSnapshotExceptionHeaders","BlobStartCopyFromURLHeaders","BlobStartCopyFromURLExceptionHeaders","BlobCopyFromURLHeaders","xMsContentCrc64","BlobCopyFromURLExceptionHeaders","BlobAbortCopyFromURLHeaders","BlobAbortCopyFromURLExceptionHeaders","BlobSetTierHeaders","BlobSetTierExceptionHeaders","BlobGetAccountInfoHeaders","BlobGetAccountInfoExceptionHeaders","BlobQueryHeaders","copyCompletionTime","BlobQueryExceptionHeaders","BlobGetTagsHeaders","BlobGetTagsExceptionHeaders","BlobSetTagsHeaders","BlobSetTagsExceptionHeaders","PageBlobCreateHeaders","PageBlobCreateExceptionHeaders","PageBlobUploadPagesHeaders","PageBlobUploadPagesExceptionHeaders","PageBlobClearPagesHeaders","PageBlobClearPagesExceptionHeaders","PageBlobUploadPagesFromURLHeaders","PageBlobUploadPagesFromURLExceptionHeaders","PageBlobGetPageRangesHeaders","blobContentLength","PageBlobGetPageRangesExceptionHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobGetPageRangesDiffExceptionHeaders","PageBlobResizeHeaders","PageBlobResizeExceptionHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobUpdateSequenceNumberExceptionHeaders","PageBlobCopyIncrementalHeaders","PageBlobCopyIncrementalExceptionHeaders","AppendBlobCreateHeaders","AppendBlobCreateExceptionHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","AppendBlobAppendBlockExceptionHeaders","AppendBlobAppendBlockFromUrlHeaders","AppendBlobAppendBlockFromUrlExceptionHeaders","AppendBlobSealHeaders","AppendBlobSealExceptionHeaders","BlockBlobUploadHeaders","BlockBlobUploadExceptionHeaders","BlockBlobPutBlobFromUrlHeaders","BlockBlobPutBlobFromUrlExceptionHeaders","BlockBlobStageBlockHeaders","BlockBlobStageBlockExceptionHeaders","BlockBlobStageBlockFromURLHeaders","BlockBlobStageBlockFromURLExceptionHeaders","BlockBlobCommitBlockListHeaders","BlockBlobCommitBlockListExceptionHeaders","BlockBlobGetBlockListHeaders","BlockBlobGetBlockListExceptionHeaders","blobServiceProperties","accept","restype","comp","timeoutInSeconds","accept1","comp1","comp2","Csv","keyInfo","comp3","restype1","comp4","comp5","restype2","comp6","comp7","comp8","comp9","comp10","action","action1","leaseId1","action2","action3","action4","proposedLeaseId1","include1","encryptionKey","encryptionAlgorithm","blobDeleteType","comp11","expiryOptions","blobCacheControl","blobContentType","blobContentEncoding","blobContentLanguage","blobContentDisposition","comp12","comp13","comp14","legalHold1","xMsRequiresSync","comp15","copyActionAbortConstant","comp16","tier1","comp17","comp18","contentType1","body1","accept2","comp19","pageWrite","ifSequenceNumberLessThanOrEqualTo","ifSequenceNumberLessThan","ifSequenceNumberEqualTo","pageWrite1","sourceUrl","range1","comp20","comp21","blobType1","comp22","maxSize","appendPosition","sourceRange1","comp23","blobType2","copySourceBlobProperties","comp24","comp25","AppendBlob","sendOperationRequest","createOperationSpec","appendBlockOperationSpec","appendBlockFromUrlOperationSpec","sealOperationSpec","xmlSerializer","downloadOperationSpec","getPropertiesOperationSpec","deleteOperationSpec","undeleteOperationSpec","setExpiryOperationSpec","setHttpHeadersOperationSpec","setImmutabilityPolicyOperationSpec","deleteImmutabilityPolicyOperationSpec","setLegalHoldOperationSpec","setMetadataOperationSpec","acquireLeaseOperationSpec","releaseLeaseOperationSpec","renewLeaseOperationSpec","changeLeaseOperationSpec","breakLeaseOperationSpec","createSnapshotOperationSpec","startCopyFromURLOperationSpec","copyFromURLOperationSpec","abortCopyFromURLOperationSpec","setTierOperationSpec","getAccountInfoOperationSpec","queryOperationSpec","getTagsOperationSpec","setTagsOperationSpec","BlockBlob","uploadOperationSpec","putBlobFromUrlOperationSpec","stageBlockOperationSpec","stageBlockFromURLOperationSpec","commitBlockListOperationSpec","getBlockListOperationSpec","Container","getAccessPolicyOperationSpec","setAccessPolicyOperationSpec","restoreOperationSpec","renameOperationSpec","submitBatchOperationSpec","listBlobFlatSegmentOperationSpec","listBlobHierarchySegmentOperationSpec","PageBlob","uploadPagesOperationSpec","clearPagesOperationSpec","uploadPagesFromURLOperationSpec","getPageRangesOperationSpec","getPageRangesDiffOperationSpec","resizeOperationSpec","updateSequenceNumberOperationSpec","copyIncrementalOperationSpec","Service","setPropertiesOperationSpec","getStatisticsOperationSpec","listContainersSegmentOperationSpec","getUserDelegationKeyOperationSpec","filterBlobsOperationSpec","service","container","pageBlob","appendBlob","blockBlob","packageName","packageVersion","StorageClientContext","defaultUserAgent","endpoint","BlockBlobTier","PremiumPageBlobTier","toAccessTier","ensureCpkIfSpecified","cpk","AnonymousCredentialPolicy","CredentialPolicy","StorageBrowserPolicy","FORCE_BROWSER_NO_CACHE","COOKIE","CONTENT_LENGTH","NewRetryPolicyFactory","StorageRetryPolicy","StorageRetryPolicyType","DEFAULT_RETRY_OPTIONS","maxTries","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RETRY_ABORT_ERROR","attemptSendRequest","secondaryHas404","attempt","newRequest","isPrimaryRetry","TIMEOUT","retriableErrors","retriableError","delayTimeInMs","FIXED","TelemetryPolicy","BlobBeginCopyFromUrlPoller","makeBlobBeginCopyFromURLPollOperation","prevCopyProgress","AccountSASPermissions","deleteVersion","list","tag","accountSASPermissions","permissionLike","AccountSASResourceTypes","accountSASResourceTypes","AccountSASServices","file","queue","table","accountSASServices","generateAccountSASQueryParameters","accountSASSignatureValues","parsedPermissions","parsedServices","parsedResourceTypes","stringToSign","ipRange","computeHMACSHA256","BlobSASPermissions","move","execute","blobSASPermissions","char","generateBlobSASQueryParameters","blobSASSignatureValues","sharedKeyCredentialOrUserDelegationKey","userDelegationKeyCredential","generateBlobSASQueryParameters20181109","generateBlobSASQueryParametersUDK20200210","generateBlobSASQueryParametersUDK20181109","generateBlobSASQueryParameters20150405","SASSignatureValuesSanityCheckAndAutofill","resource","verifiedPermissions","getCanonicalName","timestamp","preauthorizedAgentObjectId","correlationId","elements","ContainerSASPermissions","containerSASPermissions","SASProtocol","SASQueryParameters","permissionsOrOptions","ipRangeInner","signedOid","params","queries","param","tryAppendQueryParameter","ipRangeToString","BatchStates","Batch","actives","completed","operations","Good","emitter","parallelExecute","emit","on","nextOperation","MutexLockStatus","Mutex","UNLOCKED","LOCKED","onUnlockEvent","emitUnlockEvent","handler","setImmediate","_defaultHttpClient","SDK_VERSION","SERVICE_VERSION","BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","BLOCK_BLOB_MAX_BLOCKS","DEFAULT_BLOCK_BUFFER_SIZE_BYTES","DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES","DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS","StorageOAuthScopes","URLConstants","SIGNATURE","HTTPURLConnection","HTTP_CONFLICT","HTTP_NOT_FOUND","HTTP_PRECON_FAILED","HTTP_RANGE_NOT_SATISFIABLE","CONTENT_ENCODING","CONTENT_LANGUAGE","CONTENT_MD5","DATE","IF_MATCH","IF_MODIFIED_SINCE","IF_NONE_MATCH","IF_UNMODIFIED_SINCE","PREFIX_FOR_STORAGE","RANGE","X_MS_CLIENT_REQUEST_ID","X_MS_COPY_SOURCE","X_MS_DATE","ETagNone","ETagAny","SIZE_1_MB","BATCH_MAX_REQUEST","BATCH_MAX_PAYLOAD_IN_BYTES","HTTP_LINE_ENDING","HTTP_VERSION_1_1","EncryptionAlgorithmAES25","DevelopmentConnectionString","StorageBlobLoggingAllowedHeaderNames","StorageBlobLoggingAllowedQueryParameters","convertTracingToRequestOptionsBase","blobToArrayBuffer","fileReader","onloadend","ev","readAsArrayBuffer","blobToString","streamToBuffer","streamToBuffer2","readStreamToLocalFile","fsStat","stat","fsCreateReadStream","createReadStream","escapeURLPath","urlParsed","escape","getProxyUriFromDevConnString","search","matchCredentials","getValueInConnString","argument","extractConnectionStringParts","blobEndpoint","defaultEndpointsProtocol","endpointSuffix","getAccountNameFromUrl","appendToURLPath","setURLParameter","getURLParameter","getQueryParameterValue","setURLHost","getURLPath","getURLScheme","getURLPathAndQuery","pathString","getURLQueries","querySubStrings","indexOfEqual","lastIndexOfEqual","querySubString","splitResults","appendToURLQuery","queryParts","truncatedISO8061Date","withMilliseconds","dateString","base64encode","base64decode","encodedString","generateBlockID","blockIndex","maxSourceStringLength","maxBlockIndexLength","maxAllowedBlockIDPrefixLength","padStart","timeInMs","aborter","abortHandler","resolveHandler","currentString","targetLength","padString","repeat","sanitizeURL","safeURL","originalHeader","iEqual","str1","str2","toLocaleLowerCase","isIpEndpointStyle","toBlobTagsString","tagPairs","toBlobTags","toTags","blobTag","toQuerySerialization","textConfiguration","escapeCharacter","hasHeaders","parseObjectReplicationRecord","objectReplicationRecord","orProperties","ids","policyPrefix","rule","ruleId","replicationStatus","policyIndex","findIndex","policyId","rules","attachCredential","httpAuthorizationToString","httpAuthorization","BufferScheduler","API_NAME","NOOP_CONTEXT_MANAGER","ContextAPI","getInstance","_instance","setGlobalContextManager","contextManager","_getContextManager","fn","DiagAPI","_logProxy","funcName","setLogger","INFO","stack","oldLogger","newLogger","createComponentLogger","NOOP_TEXT_MAP_PROPAGATOR","PropagationAPI","createBaggage","getBaggage","setBaggage","deleteBaggage","setGlobalPropagator","propagator","inject","carrier","setter","_getGlobalPropagator","extract","getter","fields","TraceAPI","_proxyTracerProvider","deleteSpan","setGlobalTracerProvider","success","setDelegate","getTracerProvider","BAGGAGE_KEY","baggage","setValue","deleteValue","BaggageImpl","_entries","getEntry","entry","getAllEntries","setEntry","newBaggage","removeEntry","removeEntries","keys_1","clear","baggageEntryMetadataSymbol","diag","baggageEntryMetadataFromString","__TYPE__","NoopContextManager","_context","createContextKey","description","BaseContext","parentContext","_currentContext","ROOT_CONTEXT","DiagComponentLogger","props","_namespace","logProxy","unshift","consoleMap","DiagConsoleLogger","_consoleFunc","orgArguments","theFunc","createLogLevelDiagLogger","maxLevel","NONE","ALL","_filterFunc","theLevel","WARN","VERBOSE","DiagLogLevel","trace","propagation","major","GLOBAL_OPENTELEMETRY_API_KEY","_global","registerGlobal","allowOverride","api","getGlobal","globalVersion","unregisterGlobal","re","_makeCompatibilityCheck","ownVersion","acceptedVersions","rejectedVersions","myVersionMatch","ownVersionParsed","minor","patch","prerelease","isExactmatch","_reject","_accept","isCompatible","globalVersionMatch","globalVersionParsed","_globalThis","globalThis","window","NoopTextMapPropagator","_carrier","defaultTextMapGetter","defaultTextMapSetter","NonRecordingSpan","_spanContext","_value","_attributes","addEvent","_status","updateName","_endTime","recordException","_exception","_time","NoopTracer","root","parentFromContext","isSpanContext","startActiveSpan","arg2","arg3","arg4","ctx","contextWithSpanSet","NoopTracerProvider","_version","NOOP_TRACER","ProxyTracer","_provider","_getTracer","_fn","_delegate","getDelegateTracer","NOOP_TRACER_PROVIDER","ProxyTracerProvider","getDelegate","delegate","SamplingDecision","SPAN_KEY","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","isValidTraceId","isValidSpanId","TraceFlags","R","ReflectApply","Function","ReflectOwnKeys","ownKeys","ProcessEmitWarning","NumberIsNaN","EventEmitter","init","module","exports","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","arg","getPrototypeOf","setMaxListeners","_getMaxListeners","that","getMaxListeners","doError","events","er","arrayClone","_addListener","prepend","existing","newListener","warned","w","addListener","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","prependOnceListener","position","originalListener","spliceOne","removeAllListeners","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","copy","ret","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","wrapListener","canReportError_1","toSubscriber_1","observable_1","pipe_1","config_1","Observable","subscribe","_isScalar","_subscribe","lift","operator","observable","source","observerOrNext","complete","sink","toSubscriber","useDeprecatedSynchronousErrorHandling","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","canReportError","promiseCtor","getPromiseCtor","subscription","unsubscribe","subscriber","pipe","pipeFromArray","toPromise","hostReportError_1","empty","closed","hostReportError","Observable_1","Subscriber_1","Subscription_1","ObjectUnsubscribedError_1","SubjectSubscription_1","rxSubscriber_1","SubjectSubscriber","destination","Subscriber","Subject","observers","hasError","thrownError","rxSubscriber","subject","AnonymousSubject","ObjectUnsubscribedError","Subscription","EMPTY","SubjectSubscription","asObservable","subscriberIndex","isFunction_1","Observer_1","destinationOrNext","SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentOrParents","_parentSubscriber","isFunction","__tryOrUnsub","__tryOrSetError","wrappedComplete","_unsubscribe","isArray_1","isObject_1","UnsubscriptionError_1","_subscriptions","errors","parent_1","UnsubscriptionError","flattenUnsubscriptionErrors","sub","teardown","tmp","subscriptions","subscriptionIndex","reduce","errs","_enable_super_gross_mode_that_will_cause_bad_things","$$rxSubscriber","ObjectUnsubscribedErrorImpl","UnsubscriptionErrorImpl","observer","closed_1","identity","identity_1","fns","piped","prev","nextOrObserver","OnCreateDirective","onCreate","selector","ImageuploadComponent","imageservice","fb","invoiceservice","files","funcs","inputFile","ContainerName","onImageUpload","onTouched","imageForm","group","Image","control","FileUrl","currentInstance","uploadFunc","UploadFile","FileUrls","change","currentValue","event","fileNumber","fileSize","currentFileName","msgerror","reset","extension","image","createOnloadFunction","event2","readAsDataURL","FileInfo","Name","Extension","IsNewFile","IsPdf","AzurePath","getSASforblobStorage","entireInvoiceModel","fileType","mnth","getMonth","getFullYear","uploadImageToBlob","orderId","val","emitEvent","valueChanges","isDisabled","provide","useExisting","multi","onImageSelect","templateUrl","styleUrls","providers","$event","AssetListComponent","invoiceService","validationService","UOMsForDipTest","IsCalculating","SelectedAssets","showAssets","UoM","uom","setUoM","CreateUOMsListForDipTestCalculation","IsSelectedMT","Parent","drop","IsDipDataRequired","setDipDataValidatorForInvoiceConversion","asset","form","Id","AssetName","JobXAssetId","DropGallons","StartTime","EndTime","IsNewAsset","PreDip","PostDip","TankMakeModel","TankScaleMeasurement","_assetForm","setDipDataValidators","assetForm","setValidators","assetArray","_dropQuantityFormControls","controls","formControl","UOM","assets","sumOfAssetQuantity","isQuantityMismatch","addError","removeError","getNewAsset","validateSumOfAssetQuantity","idx","removeAt","existingAssets","find","idx2","newAssets","el","model","removedIndex","thisDrop","Drops","OrderId","Assets","e1","ast","removeAssets","_centrimeteruom","_inchuom","_gallonsuom","litreUom","assetsInfo","addedAssets","incompleteInfoAssets","missingUoMAssets","assetsFormArray","isNewAsset","markAsTouched","postPrePostAssetsInfo","_group","JobxAssetId","StatusCode","DropQuantity","assetName","errMessage","StatusMessage","isdipdataRequired","ValidationTriggedFrom","dropForm","stringDropStartTime","stringDropEndTime","stringAssetStartTime","stringAssetEndTime","dropStartTime","getSeconds","convertTo24Hour","dropEndTime","assetStartTime","assetEndTime","setErrors","invalidDropTime","time","timewithFormat","hours","minutes","splitTime","seconds","getMinutes","BdrDetailComponent","route","_opened","_animate","_loading","_positionNum","_POSITIONS","EditIndex","onBdrDetailsAdded","onBdrDetailsUpdated","BdrDetailForm","buildForm","shouldOpen","patchValue","bdrDetails","markAllAsTouched","valid","toggleOpen","eventData","bdrDetail","invalid","dirty","touched","PumpingStartTime","PumpingStopTime","OpenMeterReading","CloseMeterReading","MarpolSampleNumbers","MVMarpolSampleNumbers","Viscosity","SulphurContent","FlashPoint","DensityInVaccum","ObservedTemperature","MeasuredVolume","StandardVolume","IsEngineerInvitedToWitnessSample","IsNoticeToProtestIssued","measuredVolume","setStandardVolume","onBdrCancel","ShowBdrDetailComponent","IsBDRAdded","OnBDREdit","OnBDRDelete","BdrModel","BdrDetails","field","removeControl","bdrDetailsFormGroup","addControl","BolDetailComponent","dataService","_loadingTerminals","Terminals","minCharRequired","searchError","noTerminalFound","_dropsForm","bolnumberslist","isBadgeMandatory","onBolDetailAdded","onBolDetailUpdated","TerminalList","queryParamMap","BolDetailForm","clearValidators","IsBadgeMandatory","_drops","setCurrency","FuelTypeId","loadTerminals","setProductsToFormArray","jobCountryId","productForm","MetricTons","Barrels","Gallons","Litres","drops","currency","Currency","prodArray","currentObj","buildProduct","setPrice","_control","getTerminalPriceById","DropDate","getDate","bolFormData","getBolFormData","bolDetail","_products","Products","ProductId","ProductName","GrossQuantity","NetQuantity","TerminalId","TerminalName","DeliveredQuantity","BolNumber","BadgeNumber","LiftDate","formG","FuelTypeName","Quantity","terminalConditionallyRequiredValidator","TerminalPrice","QuantityIndicatorTypeId","JobCountryId","bolnumber","products","prodNumber","product","isFormValidInfo","validateForm","isFormValid","updatedBolnumber","curBolNumber","_orderId","_fuelTypeId","getTerminals","keyword","searchKeyword$","term","dropdates","findMinDate","dates","dropdate","minimumDate","minDate","toDateString","getFormattedDate","year","month","day","terminal","setDropTerminalSelectedSubject","invalidFormInfo","items","bolnumbers","max","cancelBolDetail","BolListComponent","quantities","onBolEditRequest","IsBolImageRequired","onBolAdded","OnBolDeleted","onBolEdit","OnBolQuantitiesAdded","IsImageRequired","Model","bols","bolDetailAdded","BolImages","DisplayLiftDate","BolDetails","CreateinvoiceComponent","cdr","DtTrigger","trackableScheduleId","invoiceId","PoList","DriverList","PoDdlSettings","DriverDdlSettings","SingleSelectSettingsById","MultiSelectSettingsById","SelectedDriver","OtherProductAdded","IsFrieghtPricingMethodAuto","IsSignatureRequired","IsBOLImageRequired","IsDropImageRequired","IsBolDetailsRequired","IsSupressOrderPricing","BlendedScheduleDetail","InvalidFtlDetails","InvalidBOLDetails","IsDateInvalid","InValidBolImage","dropInfos","IsInvalidFtlDetailsnew","IsInvalidFtlDetailsnewlift","InvalidDropInfos","MissingImgInfos","IsLoading","IsLoadingImages","disabled","InvoiceImages","SignatureImages","TaxAffidavitImages","BDNImages","CoastGuardInspectionImages","InspectionRequestVoucherImages","AdditionalImages","disableInputControls","waitingAction","exceptionId","invoiceForm","PaymentTerm","Customer","TicketDetails","InvoiceTypeId","IsVariousOrigin","InvoiceNotes","FuelDropLocation","OriginalInvoiceHeaderId","IsRebillInvoice","SupplierInvoiceNumber","Driver","Carrier","BrokerChainId","ExistingHeaderId","SelectedOrders","OtherProductTaxes","invId","number","baseDetailUrl","singleSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","closeDropDownOnSelection","getDriverList","getPoDetailsList","getInvoiceDetails","getDefaultDetail","detectChanges","driver","fuelDropLocation","IsAddressAvailable","Address","City","State","Code","Country","Latitude","Longitude","CountyName","ZipCode","SignatureImage","TaxAffidavitImage","BDNImage","CoastGuardInspectionImage","InspectionRequestVoucherImage","IsMarineLocation","Location","TermId","NetDays","CompanyId","CompanyName","JobId","SiteName","StateCode","CountryId","ContactName","ContactPhone","ContactEmail","allPromises","imageuploadComponents","imageComponent","BolListComponents","children","LiftTicketsComponents","all","blendedScheduleId","deliveryLevelPO","getAnotherProduct","NoOrders","isAvoidBlend","existBlendDetail","Schedules","BlendId","RemoveBlendSchedules","removeProduct","clearDropInfo","dropIndex","InvoiceModel","otherProductTax","removeOrderTaxes","t1","TypeOfFuel","combinedIds","GetAccessorialFeeTablesForSelectedOrder","AccessorialTableDetails","_trackableScheduleId","_blendedScheduleId","getAnotherProductDetail","setImageFlags","setDropInfo","TrackableScheduleId","BlendedScheduleId","FreightPricingMethod","Manual","DeliveryLevelPO","getAnotherDropFees","addProduct","OtherTaxDetails","PoNumber","initFormData","InvoiceFees","Fees","IsFreightOnlyOrder","AccessorialFeeDetails","setFTLValidators","_invoiceId","getPoList","location","href","fuelTypeIds","hasDuplicateProduct","bolDetails","liftDates","dropDetails","dropDates","ticketdetails","liftTicketDates","minDropdt","ltdate","liftdt","liftktdate","strStartTime","strEndTime","startTime","setHours","GetHours","GetMinutes","endTime","endTimeD","h","currObject","bolProducts","liftProducts","missingbols","missingLifts","boldetails","prod","groupBy","xs","rv","bolgroupedProducts","productId","productsperproductId","prodCount","ticketDetails","liftgroupedProducts","BulkPlantName","dropinfo","missingbol","IsBolDetailsAvailable","IsLiftDetailsAvailble","validateLiftTicketDetails","Message","missingLift","IsLiftDetailsAvailable","validateBolDetails","missingInfoCount","liftproduct","IsBolDetailsAvailble","bolproduct","getInvoiceDropFees","fees","isBolLiftNotProvided","updateValueAndValidity","isBolImagenotprovided","isLiftImagenotProvided","signatureImages","liftTicketImage","LiftImages","bolImages","bolimgCount","bollength","bolimg","ImgMisingMsg","isImageNotProvided","imgMissingMsg","liftImgCount","liftLength","liftimg","liftImgMissingMsg","imgMisingMsg","schedules","prevBlendDetail","ScheduleId","getAssignedDriverForSchedule","AddBlendSchedules","getBlendedProducts","formOrders","poItem","scheduleId","selOrderId","onOrderSelect","scheduledrop","at","_prevScheduleBlendId","_isOrderDeselect","rmvOrders","_curOrderId","rmvPO","onOrderDeSelect","IsLiftTicketDetailsMissing","tktNumbers","LiftTicketNumber","isBdrDetailsAdded","findDuplicates","checkValidityforFtl","validateLiftDates","validateBolAndLiftDetails","checkValidityForImages","isLiftTicketDetails","invoiceViewModel","getRawValue","customer","CAR","isTerminalAssignedOnOrder","invaliddropinfo","missingimginfo","validateDropStartEndTime","FuelSurchargeFreightFee","FreightType","FreightRateRuleType","FreightTableType","FreightRateTableType","FreightTableName","FreightRateRuleId","FuelSurchargeTableType","FuelSurchargeTableName","FuelSurchargeTableId","_AccessorialFeeDetails","AccessorialFeeTableType","AccessorialFeeId","_element","ExceptionId","first","GetSasForBlob","recieveChildImages","postCreateInvoice","msgsuccess","invalidControls","findInvalidControlsRecursive","formToInvestigate","recursiveFunc","isTerminalAssigned","currObj","onSubmit","OnScheduleReceived","onCancel","OnDriverSelect","OnDriverDeSelect","DropInfo","InvalidDropDetailInfo","MissingImageInfo","CustomerDetailComponent","registerOnChange","CustomerData","routeInvoice","title","InvoiceRoutingModule","forChild","imports","InvoiceModule","declarations","LiftDetailComponent","stateService","addresService","_loadingAddress","_searchKeyword","StateList","liftticketnumberslist","onTicketDetailAdded","onTicketDetailUpdated","CountryList","CountryGroupList","BulkPlants","BulkplantList","TicketDetailForm","getStates","getCountries","getCountryGroup","showBulkPlantOnLift","getBulkPlantsForAutoFreightMethod","getBulkPlants","ticketFormData","getTicketFormData","ticketDetail","BulkPlantId","buildAddress","CountryGroup","zipCode","_address","UsaZip","CanZip","getAddress","CountryCode","addressModel","addressMapper","country","countryGroup","invalidQuantityCount","isValid","validateTicketDetails","isValidQuantities","invalidQuantities","validateQuantities","liftTicketNumber","updatedLiftnumber","curLiftTicketNumber","_liftTicketNumber","_liftDate","getBulKPlantAddress","selectedOptions","filterStates","countryId","countryGroupId","CountryGroupId","bulkPlantName","address","GetBulkPlantDetails","tktnumbers","tktnumber","cancelTicketDetail","LiftTicketsComponent","addressService","onTicketEditRequest","onLiftTicketAdded","OnLiftTicketDeleted","onLiftTicketEdit","OnLiftQuantitiesAdded","lifts","ticketDetailAdded","updated","_matched","_lift","PaymentTermsComponent","termId","netdays","readonlyNetDays","FuelSurchargeComponent","SurchargeEnabled","LoadingPrice","dropQuantity","IsDistanceVisible","IsFreightTableTypeVisible","dateRegex","SurchargeForm","setDefaultDetail","getInvoiceType","qty","calculateSurcharge","ActualDropQuantity","selectedFreightType","getFreightCostForAutoInvoice","distance","cost","Startdate","getEiaPriceForDate","getEiaPriceAutoInvoice","surchargeForm","IsSurchargeApplicable","CheckBoxFuelSurcharge","IsFreightCostApplicable","CheckBoxFreightCost","GetFreightType","getTableTypes","SurchargePricingType","SurchargeProductType","FeeSubTypeId","SurchargeFreightCost","SurchargePercentage","SurchargeEiaPrice","SurchargeTableRangeStart","SurchargeTableRangeEnd","IsFeeByDistance","TotalFuelSurchargeFee","Distance","AutoFreightDistance","AutoSurchargeFreightCost","checked","validateFreight","validateFuelSurcharge","quantity","percent","freightCost","surchargePartial","surchargeFee","toFixed","_date","EIAdata","buyerCompanyId","BuyerCompanyId","pricingType","productType","deliveryDate","getEiaPrice","eiaResponse","freightRateRuleTypeIds","FreightRateRuleIds","Range","Route","selectedFuelSurchargeTableName","surchargeTableNameId","fuelSurchargeIndexId","getEiaPriceAutoFreightMethod","selectedFreightTableName","freightRateRuleId","GetFreightCostForAutoInvoice","surchargeFreightCost","feeByQty","DeliveryFeeByQuantity","MinQuantity","MaxQuantity","Fee","getFreightTable","FreightTypeList","FuelSurchargeTableTypeList","FreightTableTypeList","GetFuelSurchargeTableName","selectedFuelSurchargeId","selectedFuelSurchargeTableType","surchargeTableTypeIds","TableType","getFuelSurchargeTableName","FuelSurchargeTableNameList","FuelSurchargeTableNames","GetFreightTableName","Auto","freightRateType","P2P","FreightTableNameList","selectedFreightRateId","selectedFreightTableType","freightTableType","getFreightTableName","FreightTableNames","selectedType","selectedFuelTableType","ProducDetailComponent","onBulkplantUpdated","onBulkplantPickupReceived","OnBdrDeleted","onBdrEdit","MinDropDate","DefaultDate","IsConvertingGravity","CalculatedQty","IsBdrAdded","DropTerminalSelectedSubject","bolTerminalChange","currValues","_selectedAssets","InvoiceId","getForm","getSchedules","sendBulkplantUpdate","PickUpAddress","PickupLocationType","bulkplantInfo","bulkPlantMapper","selectedAssets","toDate","dropDate","DisplayDropDate","Allowance","IsAssetTracked","Index","DropEndDate","Gravity","ConversionFactor","ConvertedQuantity","ActualQuantityUOM","setGravityValidatorForMFN","getUoMFromCountry","removeFreightFuelSurchargeForm","controlName","timeRegex","DisplayInvalidTime","formControlName","removedProductIndex","_currentObj","productName","scheduleChangeEvent","getBulkplantAddress","selectedSchedule","SiteId","dropFg","OnUomChange","dropModel","inputGravity","actualDropQty","gravity","dropQty","conversionRequest","DroppedGallons","ValidateGravityAndConvertForMFN","IsValidGravity","ConvertedQty","invalidGravity","calculateQuantities","assetListComp","newProds","newprod","groupedProducts","totaldroppedquantity","values","Totalsumperproduct","TotalDroppedQuantity","nativeElement","Event","ValidateAssetTime","isAdded","IsBdrDetailsAdded","ImageserviceService","sasToken","prefixId","fileUrls","anonymouscredentials","fileNames","promises","ftype","fileName","GenerateRandomNumber","FilePath","InvoiceImage","AdditionalImage","Images","liftDetail","blobserviceclient","uploadBlobResponse","maxNumber","providedIn","OtherProductTaxesComponent","Taxes","TaxPricingTypes","getTaxePricingTypes","prevValues","previousValue","newTaxes","addTax","DisplayCurrency","TaxId","TaxPricingTypeId","TaxAmountSymbol","TaxDescription","TaxAmount","taxObj","taxGroup","taxArray","removedTaxIndexes","tax","selectedTaxType","displaySymbol","VariousDropLocationComponent","setStateAndCountry","stateCode","countryCode","ValidationService","existingErrors","errorToSet"],"mappings":"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;;QACa+B,kB;;;;;AACT,kCAAY3tC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,sCAAMA,OAAN;AACA,gBAAKG,IAAL,GAAY,oBAAZ;AACAe,cAAM,CAACqC,cAAP,kCAA4BoqC,kBAAkB,CAACvsC,SAA/C;AAHiB;AAIpB;;;qCALmChB,K;AAOxC;AACA;AACA;AACA;;;QACawtC,oB;;;;;AACT,oCAAY5tC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,sCAAMA,OAAN;AACA,gBAAKG,IAAL,GAAY,sBAAZ;AACAe,cAAM,CAACqC,cAAP,kCAA4BqqC,oBAAoB,CAACxsC,SAAjD;AAHiB;AAIpB;;;qCALqChB,K;AAO1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;QACaytC,M;AACT;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,sBAAYjD,SAAZ,EAAuB;AAAA;;AAAA;;AACnB,aAAKkD,OAAL,GAAe,IAAf;AACA,aAAKC,qBAAL,GAA6B,EAA7B;AACA,aAAKnD,SAAL,GAAiBA,SAAjB;AACA,aAAK19B,OAAL,GAAe,IAAI9G,OAAJ,CAAY,UAACD,OAAD,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;AACA;AACA;AACA;AACA;;;;aACI,eAAsB;AAClB,iBAAO,KAAKJ,gBAAL,CAAsBK,eAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;aACI,eAAyB;AACrB,iBAAO,KAAKL,gBAAL,CAAsBM,kBAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;aACI,eAAe;AACX,iBAAO,KAAKN,gBAAL,CAAsBO,QAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;aACI,eAAoB;AAChB,iBAAO,KAAKP,gBAAL,CAAsBQ,aAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAiB;AACb,iBAAO,KAAKR,gBAAL,CAAsBS,UAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAmB;AACf,iBAAO,KAAKT,gBAAL,CAAsBU,YAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;aACI,eAAkB;AACd,iBAAO,KAAKV,gBAAL,CAAsBnlC,WAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAsB;AAClB,iBAAOtP,SAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;aACI,eAAa;AACT,iBAAO,KAAKy0C,gBAAL,CAAsBW,MAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAmB;AACf,iBAAO,KAAKX,gBAAL,CAAsBY,YAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAiB;AACb,iBAAO,KAAKZ,gBAAL,CAAsBa,UAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAiB;AACb,iBAAO,KAAKb,gBAAL,CAAsBc,UAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAA4B;AACxB,iBAAO,KAAKd,gBAAL,CAAsBe,qBAA7B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;aACI,eAAoB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;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAA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","file":"invoice-lazy-loading-invoice-module-es5.js","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __extends } from \"tslib\";\nimport { AbortSignal, abortSignal } from \"./AbortSignal\";\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nvar AbortError = /** @class */ (function (_super) {\n    __extends(AbortError, _super);\n    function AbortError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"AbortError\";\n        return _this;\n    }\n    return AbortError;\n}(Error));\nexport { AbortError };\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nvar AbortController = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    function AbortController(parentSignals) {\n        var _this = this;\n        this._signal = new AbortSignal();\n        if (!parentSignals) {\n            return;\n        }\n        // coerce parentSignals into an array\n        if (!Array.isArray(parentSignals)) {\n            // eslint-disable-next-line prefer-rest-params\n            parentSignals = arguments;\n        }\n        for (var _i = 0, parentSignals_1 = parentSignals; _i < parentSignals_1.length; _i++) {\n            var parentSignal = parentSignals_1[_i];\n            // if the parent signal has already had abort() called,\n            // then call abort on this signal as well.\n            if (parentSignal.aborted) {\n                this.abort();\n            }\n            else {\n                // when the parent signal aborts, this signal should as well.\n                parentSignal.addEventListener(\"abort\", function () {\n                    _this.abort();\n                });\n            }\n        }\n    }\n    Object.defineProperty(AbortController.prototype, \"signal\", {\n        /**\n         * The AbortSignal associated with this controller that will signal aborted\n         * when the abort method is called on this controller.\n         *\n         * @readonly\n         */\n        get: function () {\n            return this._signal;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Signal that any operations passed this controller's associated abort signal\n     * to cancel any remaining work and throw an `AbortError`.\n     */\n    AbortController.prototype.abort = function () {\n        abortSignal(this._signal);\n    };\n    /**\n     * Creates a new AbortSignal instance that will abort after the provided ms.\n     * @param ms - Elapsed time in milliseconds to trigger an abort.\n     */\n    AbortController.timeout = function (ms) {\n        var signal = new AbortSignal();\n        var timer = setTimeout(abortSignal, ms, signal);\n        // Prevent the active Timer from keeping the Node.js event loop active.\n        if (typeof timer.unref === \"function\") {\n            timer.unref();\n        }\n        return signal;\n    };\n    return AbortController;\n}());\nexport { AbortController };\n//# sourceMappingURL=AbortController.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar listenersMap = new WeakMap();\nvar abortedMap = new WeakMap();\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nvar AbortSignal = /** @class */ (function () {\n    function AbortSignal() {\n        /**\n         * onabort event listener.\n         */\n        this.onabort = null;\n        listenersMap.set(this, []);\n        abortedMap.set(this, false);\n    }\n    Object.defineProperty(AbortSignal.prototype, \"aborted\", {\n        /**\n         * Status of whether aborted or not.\n         *\n         * @readonly\n         */\n        get: function () {\n            if (!abortedMap.has(this)) {\n                throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n            }\n            return abortedMap.get(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbortSignal, \"none\", {\n        /**\n         * Creates a new AbortSignal instance that will never be aborted.\n         *\n         * @readonly\n         */\n        get: function () {\n            return new AbortSignal();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Added new \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be added\n     */\n    AbortSignal.prototype.addEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        var listeners = listenersMap.get(this);\n        listeners.push(listener);\n    };\n    /**\n     * Remove \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be removed\n     */\n    AbortSignal.prototype.removeEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        var listeners = listenersMap.get(this);\n        var index = listeners.indexOf(listener);\n        if (index > -1) {\n            listeners.splice(index, 1);\n        }\n    };\n    /**\n     * Dispatches a synthetic event to the AbortSignal.\n     */\n    AbortSignal.prototype.dispatchEvent = function (_event) {\n        throw new Error(\"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\");\n    };\n    return AbortSignal;\n}());\nexport { AbortSignal };\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nexport function abortSignal(signal) {\n    if (signal.aborted) {\n        return;\n    }\n    if (signal.onabort) {\n        signal.onabort.call(signal);\n    }\n    var listeners = listenersMap.get(signal);\n    if (listeners) {\n        // Create a copy of listeners so mutations to the array\n        // (e.g. via removeListener calls) don't affect the listeners\n        // we invoke.\n        listeners.slice().forEach(function (listener) {\n            listener.call(signal, { type: \"abort\" });\n        });\n    }\n    abortedMap.set(signal, true);\n}\n//# sourceMappingURL=AbortSignal.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// Changes to Aborter\n// * Rename Aborter to AbortSignal\n// * Remove withValue and getValue - async context should be solved differently/wholistically, not tied to cancellation\n// * Remove withTimeout, it's moved to the controller\n// * AbortSignal constructor no longer takes a parent. Cancellation graphs are created from the controller.\n// Potential changes to align with DOM Spec\n// * dispatchEvent on Signal\nexport { AbortController, AbortError } from \"./AbortController\";\nexport { AbortSignal } from \"./AbortSignal\";\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","\"use strict\";\nif (typeof Symbol === undefined || !Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential {\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\n//# sourceMappingURL=azureKeyCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObjectWithProperties } from \"./typeguards\";\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nexport class AzureNamedKeyCredential {\n    /**\n     * Create an instance of an AzureNamedKeyCredential for use\n     * with a service client.\n     *\n     * @param name - The initial value of the name to use in authentication.\n     * @param key - The initial value of the key to use in authentication.\n     */\n    constructor(name, key) {\n        if (!name || !key) {\n            throw new TypeError(\"name and key must be non-empty strings\");\n        }\n        this._name = name;\n        this._key = key;\n    }\n    /**\n     * The value of the key to be used in authentication.\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * The value of the name to be used in authentication.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newName - The new name value to be used.\n     * @param newKey - The new key value to be used.\n     */\n    update(newName, newKey) {\n        if (!newName || !newKey) {\n            throw new TypeError(\"newName and newKey must be non-empty strings\");\n        }\n        this._name = newName;\n        this._key = newKey;\n    }\n}\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nexport function isNamedKeyCredential(credential) {\n    return (isObjectWithProperties(credential, [\"name\", \"key\"]) &&\n        typeof credential.key === \"string\" &&\n        typeof credential.name === \"string\");\n}\n//# sourceMappingURL=azureNamedKeyCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObjectWithProperties } from \"./typeguards\";\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nexport class AzureSASCredential {\n    /**\n     * Create an instance of an AzureSASCredential for use\n     * with a service client.\n     *\n     * @param signature - The initial value of the shared access signature to use in authentication\n     */\n    constructor(signature) {\n        if (!signature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = signature;\n    }\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get signature() {\n        return this._signature;\n    }\n    /**\n     * Change the value of the signature.\n     *\n     * Updates will take effect upon the next request after\n     * updating the signature value.\n     *\n     * @param newSignature - The new shared access signature value to be used\n     */\n    update(newSignature) {\n        if (!newSignature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = newSignature;\n    }\n}\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nexport function isSASCredential(credential) {\n    return (isObjectWithProperties(credential, [\"signature\"]) && typeof credential.signature === \"string\");\n}\n//# sourceMappingURL=azureSASCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport { AzureKeyCredential } from \"./azureKeyCredential\";\nexport { AzureNamedKeyCredential, isNamedKeyCredential } from \"./azureNamedKeyCredential\";\nexport { AzureSASCredential, isSASCredential } from \"./azureSASCredential\";\nexport { isTokenCredential } from \"./tokenCredential\";\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n * @internal\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * Note: The properties may be inherited.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n * @internal\n */\nexport function isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * Note: The property may be inherited.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n * @internal\n */\nfunction objectHasProperty(thing, property) {\n    return typeof thing === \"object\" && property in thing;\n}\n//# sourceMappingURL=typeguards.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\nexport { WebResource } from \"./webResource\";\nexport { DefaultHttpClient } from \"./defaultHttpClient\";\nexport { HttpHeaders } from \"./httpHeaders\";\nexport { HttpPipelineLogLevel } from \"./httpPipelineLogLevel\";\nexport { RestError } from \"./restError\";\nexport { operationOptionsToRequestOptionsBase } from \"./operationOptions\";\nexport { ServiceClient, flattenResponse, createPipelineFromOptions } from \"./serviceClient\";\nexport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nexport { Constants } from \"./util/constants\";\nexport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { logPolicy } from \"./policies/logPolicy\";\nexport { BaseRequestPolicy, RequestPolicyOptions } from \"./policies/requestPolicy\";\nexport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nexport { exponentialRetryPolicy, RetryMode } from \"./policies/exponentialRetryPolicy\";\nexport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nexport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nexport { getDefaultProxySettings, proxyPolicy } from \"./policies/proxyPolicy\";\nexport { redirectPolicy } from \"./policies/redirectPolicy\";\nexport { keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nexport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nexport { signingPolicy } from \"./policies/signingPolicy\";\nexport { userAgentPolicy, getDefaultUserAgentValue } from \"./policies/userAgentPolicy\";\nexport { deserializationPolicy, deserializeResponseBody } from \"./policies/deserializationPolicy\";\nexport { tracingPolicy } from \"./policies/tracingPolicy\";\nexport { MapperType, Serializer, serializeObject } from \"./serializer\";\nexport { stripRequest, stripResponse, executePromisesSequentially, generateUuid, encodeUri, promiseToCallback, promiseToServiceCallback, isValidUuid, applyMixins, isNode, isDuration } from \"./util/utils\";\nexport { URLBuilder, URLQuery } from \"./url\";\nexport { delay } from \"./util/delay\";\n// legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\nexport { createSpanFunction } from \"./createSpanLegacy\";\n// Credentials\nexport { isTokenCredential } from \"@azure/core-auth\";\nexport { ExpiringAccessTokenCache } from \"./credentials/accessTokenCache\";\nexport { AccessTokenRefresher } from \"./credentials/accessTokenRefresher\";\nexport { BasicAuthenticationCredentials } from \"./credentials/basicAuthenticationCredentials\";\nexport { ApiKeyCredentials } from \"./credentials/apiKeyCredentials\";\nexport { TopicCredentials } from \"./credentials/topicCredentials\";\nexport { parseXML, stringifyXML } from \"./util/xml\";\nexport { XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\nimport \"@azure/core-asynciterator-polyfill\";\n//# sourceMappingURL=coreHttp.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// NOTE: we've moved this code into core-tracing but these functions\n// were a part of the GA'd library and can't be removed until the next major\n// release. They currently get called always, even if tracing is not enabled.\nimport { createSpanFunction as coreTracingCreateSpanFunction } from \"@azure/core-tracing\";\n/**\n * This function is only here for compatibility. Use createSpanFunction in core-tracing.\n *\n * @deprecated This function is only here for compatibility. Use createSpanFunction in core-tracing.\n * @hidden\n\n * @param spanConfig - The name of the operation being performed.\n * @param tracingOptions - The options for the underlying http request.\n */\nexport function createSpanFunction(args) {\n    return coreTracingCreateSpanFunction(args);\n}\n//# sourceMappingURL=createSpanLegacy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Defines the default token refresh buffer duration.\n */\nexport const TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nexport class ExpiringAccessTokenCache {\n    /**\n     * Constructs an instance of {@link ExpiringAccessTokenCache} with\n     * an optional expiration buffer time.\n     */\n    constructor(tokenRefreshBufferMs = TokenRefreshBufferMs) {\n        this.cachedToken = undefined;\n        this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n    }\n    setCachedToken(accessToken) {\n        this.cachedToken = accessToken;\n    }\n    getCachedToken() {\n        if (this.cachedToken &&\n            Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp) {\n            this.cachedToken = undefined;\n        }\n        return this.cachedToken;\n    }\n}\n//# sourceMappingURL=accessTokenCache.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.\n *\n * @deprecated No longer used in the bearer authorization policy.\n */\nexport class AccessTokenRefresher {\n    constructor(credential, scopes, requiredMillisecondsBeforeNewRefresh = 30000) {\n        this.credential = credential;\n        this.scopes = scopes;\n        this.requiredMillisecondsBeforeNewRefresh = requiredMillisecondsBeforeNewRefresh;\n        this.lastCalled = 0;\n    }\n    /**\n     * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying\n     * that we are ready for a new refresh.\n     */\n    isReady() {\n        // We're only ready for a new refresh if the required milliseconds have passed.\n        return (!this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh);\n    }\n    /**\n     * Stores the time in which it is called,\n     * then requests a new token,\n     * then sets this.promise to undefined,\n     * then returns the token.\n     */\n    async getToken(options) {\n        this.lastCalled = Date.now();\n        const token = await this.credential.getToken(this.scopes, options);\n        this.promise = undefined;\n        return token || undefined;\n    }\n    /**\n     * Requests a new token if we're not currently waiting for a new token.\n     * Returns null if the required time between each call hasn't been reached.\n     */\n    refresh(options) {\n        if (!this.promise) {\n            this.promise = this.getToken(options);\n        }\n        return this.promise;\n    }\n}\n//# sourceMappingURL=accessTokenRefresher.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpHeaders } from \"../httpHeaders\";\n/**\n * Authenticates to a service using an API key.\n */\nexport class ApiKeyCredentials {\n    /**\n     * @param options - Specifies the options to be provided for auth. Either header or query needs to be provided.\n     */\n    constructor(options) {\n        if (!options || (options && !options.inHeader && !options.inQuery)) {\n            throw new Error(`options cannot be null or undefined. Either \"inHeader\" or \"inQuery\" property of the options object needs to be provided.`);\n        }\n        this.inHeader = options.inHeader;\n        this.inQuery = options.inQuery;\n    }\n    /**\n     * Signs a request with the values provided in the inHeader and inQuery parameter.\n     *\n     * @param webResource - The WebResourceLike to be signed.\n     * @returns The signed request object.\n     */\n    signRequest(webResource) {\n        if (!webResource) {\n            return Promise.reject(new Error(`webResource cannot be null or undefined and must be of type \"object\".`));\n        }\n        if (this.inHeader) {\n            if (!webResource.headers) {\n                webResource.headers = new HttpHeaders();\n            }\n            for (const headerName in this.inHeader) {\n                webResource.headers.set(headerName, this.inHeader[headerName]);\n            }\n        }\n        if (this.inQuery) {\n            if (!webResource.url) {\n                return Promise.reject(new Error(`url cannot be null in the request object.`));\n            }\n            if (webResource.url.indexOf(\"?\") < 0) {\n                webResource.url += \"?\";\n            }\n            for (const key in this.inQuery) {\n                if (!webResource.url.endsWith(\"?\")) {\n                    webResource.url += \"&\";\n                }\n                webResource.url += `${key}=${this.inQuery[key]}`;\n            }\n        }\n        return Promise.resolve(webResource);\n    }\n}\n//# sourceMappingURL=apiKeyCredentials.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpHeaders } from \"../httpHeaders\";\nimport * as base64 from \"../util/base64\";\nimport { Constants } from \"../util/constants\";\nconst HeaderConstants = Constants.HeaderConstants;\nconst DEFAULT_AUTHORIZATION_SCHEME = \"Basic\";\nexport class BasicAuthenticationCredentials {\n    /**\n     * Creates a new BasicAuthenticationCredentials object.\n     *\n     * @param userName - User name.\n     * @param password - Password.\n     * @param authorizationScheme - The authorization scheme.\n     */\n    constructor(userName, password, authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME) {\n        this.authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;\n        if (userName === null || userName === undefined || typeof userName.valueOf() !== \"string\") {\n            throw new Error(\"userName cannot be null or undefined and must be of type string.\");\n        }\n        if (password === null || password === undefined || typeof password.valueOf() !== \"string\") {\n            throw new Error(\"password cannot be null or undefined and must be of type string.\");\n        }\n        this.userName = userName;\n        this.password = password;\n        this.authorizationScheme = authorizationScheme;\n    }\n    /**\n     * Signs a request with the Authentication header.\n     *\n     * @param webResource - The WebResourceLike to be signed.\n     * @returns The signed request object.\n     */\n    signRequest(webResource) {\n        const credentials = `${this.userName}:${this.password}`;\n        const encodedCredentials = `${this.authorizationScheme} ${base64.encodeString(credentials)}`;\n        if (!webResource.headers)\n            webResource.headers = new HttpHeaders();\n        webResource.headers.set(HeaderConstants.AUTHORIZATION, encodedCredentials);\n        return Promise.resolve(webResource);\n    }\n}\n//# sourceMappingURL=basicAuthenticationCredentials.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\nexport class TopicCredentials extends ApiKeyCredentials {\n    /**\n     * Creates a new EventGrid TopicCredentials object.\n     *\n     * @param topicKey - The EventGrid topic key\n     */\n    constructor(topicKey) {\n        if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n            throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n        }\n        const options = {\n            inHeader: {\n                \"aeg-sas-key\": topicKey\n            }\n        };\n        super(options);\n    }\n}\n//# sourceMappingURL=topicCredentials.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport { XhrHttpClient as DefaultHttpClient } from \"./xhrHttpClient\";\n//# sourceMappingURL=defaultHttpClient.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nlet cachedHttpClient;\nexport function getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = new DefaultHttpClient();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\nexport function isHttpHeadersLike(object) {\n    if (object && typeof object === \"object\") {\n        const castObject = object;\n        if (typeof castObject.rawHeaders === \"function\" &&\n            typeof castObject.clone === \"function\" &&\n            typeof castObject.get === \"function\" &&\n            typeof castObject.set === \"function\" &&\n            typeof castObject.contains === \"function\" &&\n            typeof castObject.remove === \"function\" &&\n            typeof castObject.headersArray === \"function\" &&\n            typeof castObject.headerValues === \"function\" &&\n            typeof castObject.headerNames === \"function\" &&\n            typeof castObject.toJson === \"function\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders {\n    constructor(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (const headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName - The name of the header to set. This value is case-insensitive.\n     * @param headerValue - The value of the header to set.\n     */\n    set(headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString()\n        };\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName - The name of the header.\n     */\n    get(headerName) {\n        const header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    contains(headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    }\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName - The name of the header to remove.\n     */\n    remove(headerName) {\n        const result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    }\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    rawHeaders() {\n        const result = {};\n        for (const headerKey in this._headersMap) {\n            const header = this._headersMap[headerKey];\n            result[header.name.toLowerCase()] = header.value;\n        }\n        return result;\n    }\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    headersArray() {\n        const headers = [];\n        for (const headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    }\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    headerNames() {\n        const headerNames = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    }\n    /**\n     * Get the header values that are contained in this collection.\n     */\n    headerValues() {\n        const headerValues = [];\n        const headers = this.headersArray();\n        for (let i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJson() {\n        return this.rawHeaders();\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJson());\n    }\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    clone() {\n        return new HttpHeaders(this.rawHeaders());\n    }\n}\n//# sourceMappingURL=httpHeaders.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport var HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    /**\n     * A log level that indicates that no logs will be logged.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    /**\n     * An error log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    /**\n     * A warning log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n    /**\n     * An information log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\n//# sourceMappingURL=httpPipelineLogLevel.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-http\");\n//# sourceMappingURL=log.js.map","import { __rest } from \"tslib\";\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts - OperationOptions object to convert to RequestOptionsBase\n */\nexport function operationOptionsToRequestOptionsBase(opts) {\n    var _a;\n    const { requestOptions, tracingOptions } = opts, additionalOptions = __rest(opts, [\"requestOptions\", \"tracingOptions\"]);\n    let result = additionalOptions;\n    if (requestOptions) {\n        result = Object.assign(Object.assign({}, result), requestOptions);\n    }\n    if (tracingOptions) {\n        result.tracingContext = tracingOptions.tracingContext;\n        // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n        result.spanOptions = (_a = tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions;\n    }\n    return result;\n}\n//# sourceMappingURL=operationOptions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=operationParameter.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { MapperType } from \"./serializer\";\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === MapperType.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=operationSpec.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"../policies/requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { delay } from \"../util/delay\";\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000,\n    retryIntervalInMs: 3000,\n    refreshWindowInMs: 1000 * 60 * 2 // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - a function that produces a promise of an access\n * token that may fail by returning null\n * @param retryIntervalInMs - the time (in milliseconds) to wait between retry\n * attempts\n * @param timeoutInMs - the timestamp after which the refresh attempt will fail,\n * throwing an exception\n * @returns - a promise that, if it resolves, will resolve with an access token\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, timeoutInMs) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < timeoutInMs) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await delay(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param scopes - the scopes to request authorization for\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, scopes, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            return (!cycler.isRefreshing &&\n                ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now());\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        }\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        if (cycler.mustRefresh)\n            return refresh(tokenOptions);\n        if (cycler.shouldRefresh) {\n            refresh(tokenOptions);\n        }\n        return token;\n    };\n}\n// #endregion\n/**\n * Creates a new factory for a RequestPolicy that applies a bearer token to\n * the requests' `Authorization` headers.\n *\n * @param credential - The TokenCredential implementation that can supply the bearer token.\n * @param scopes - The scopes for which the bearer token applies.\n */\nexport function bearerTokenAuthenticationPolicy(credential, scopes) {\n    // This simple function encapsulates the entire process of reliably retrieving the token\n    const getToken = createTokenCycler(credential, scopes /* , options */);\n    class BearerTokenAuthenticationPolicy extends BaseRequestPolicy {\n        constructor(nextPolicy, options) {\n            super(nextPolicy, options);\n        }\n        async sendRequest(webResource) {\n            if (!webResource.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            const { token } = await getToken({\n                abortSignal: webResource.abortSignal,\n                tracingOptions: {\n                    tracingContext: webResource.tracingContext\n                }\n            });\n            webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n            return this._nextPolicy.sendRequest(webResource);\n        }\n    }\n    return {\n        create: (nextPolicy, options) => {\n            return new BearerTokenAuthenticationPolicy(nextPolicy, options);\n        }\n    };\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { RestError } from \"../restError\";\nimport { MapperType } from \"../serializer\";\nimport { parseXML } from \"../util/xml\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { XML_CHARKEY } from \"../util/serializer.common\";\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(deserializationContentTypes, parsingOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new DeserializationPolicy(nextPolicy, options, deserializationContentTypes, parsingOptions);\n        }\n    };\n}\nexport const defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nexport const defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\nexport const DefaultDeserializationOptions = {\n    expectedContentTypes: {\n        json: defaultJsonContentTypes,\n        xml: defaultXmlContentTypes\n    }\n};\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nexport class DeserializationPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, requestPolicyOptions, deserializationContentTypes, parsingOptions = {}) {\n        var _a;\n        super(nextPolicy, requestPolicyOptions);\n        this.jsonContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n        this.xmlContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n        this.xmlCharKey = (_a = parsingOptions.xmlCharKey) !== null && _a !== void 0 ? _a : XML_CHARKEY;\n    }\n    async sendRequest(request) {\n        return this._nextPolicy.sendRequest(request).then((response) => deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response, {\n            xmlCharKey: this.xmlCharKey\n        }));\n    }\n}\nfunction getOperationResponse(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationSpec = request.operationSpec;\n    if (operationSpec) {\n        const operationResponseGetter = request.operationResponseGetter;\n        if (!operationResponseGetter) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const shouldDeserialize = parsedResponse.request.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nexport function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options = {}) {\n    var _a, _b, _c;\n    const updatedOptions = {\n        rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n        includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n        xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n    };\n    return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then((parsedResponse) => {\n        if (!shouldDeserializeResponse(parsedResponse)) {\n            return parsedResponse;\n        }\n        const operationSpec = parsedResponse.request.operationSpec;\n        if (!operationSpec || !operationSpec.responses) {\n            return parsedResponse;\n        }\n        const responseSpec = getOperationResponse(parsedResponse);\n        const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec);\n        if (error) {\n            throw error;\n        }\n        else if (shouldReturnResponse) {\n            return parsedResponse;\n        }\n        // An operation response spec does exist for current status code, so\n        // use it to deserialize the response.\n        if (responseSpec) {\n            if (responseSpec.bodyMapper) {\n                let valueToDeserialize = parsedResponse.parsedBody;\n                if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n                    valueToDeserialize =\n                        typeof valueToDeserialize === \"object\"\n                            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                            : [];\n                }\n                try {\n                    parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n                }\n                catch (innerError) {\n                    const restError = new RestError(`Error ${innerError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n                    throw restError;\n                }\n            }\n            else if (operationSpec.httpMethod === \"HEAD\") {\n                // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n            }\n            if (responseSpec.headersMapper) {\n                parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\", options);\n            }\n        }\n        return parsedResponse;\n    });\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec) {\n    var _a;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const streaming = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status)) ||\n        parsedResponse.request.streamResponseBody;\n    const initialErrorMessage = streaming\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new RestError(initialErrorMessage, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let parsedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === MapperType.Sequence) {\n                    valueToDeserialize =\n                        typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName] : [];\n                }\n                parsedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\");\n            }\n            const internalError = parsedBody.error || parsedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = parsedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders = operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nfunction parse(jsonContentTypes, xmlContentTypes, operationResponse, opts) {\n    var _a;\n    const errorHandler = (err) => {\n        const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n        const errCode = err.code || RestError.PARSE_ERROR;\n        const e = new RestError(msg, errCode, operationResponse.status, operationResponse.request, operationResponse);\n        return Promise.reject(e);\n    };\n    const streaming = ((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) ||\n        operationResponse.request.streamResponseBody;\n    if (!streaming && operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        if (contentComponents.length === 0 ||\n            contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n            return new Promise((resolve) => {\n                operationResponse.parsedBody = JSON.parse(text);\n                resolve(operationResponse);\n            }).catch(errorHandler);\n        }\n        else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n            return parseXML(text, opts)\n                .then((body) => {\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            })\n                .catch(errorHandler);\n        }\n    }\n    return Promise.resolve(operationResponse);\n}\n//# sourceMappingURL=deserializationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nconst DisbleResponseDecompressionNotSupportedInBrowser = new Error(\"DisableResponseDecompressionPolicy is not supported in browser environment\");\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy() {\n    return {\n        create: (_nextPolicy, _options) => {\n            throw DisbleResponseDecompressionNotSupportedInBrowser;\n        }\n    };\n}\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n    async sendRequest(_request) {\n        throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n}\n//# sourceMappingURL=disableResponseDecompressionPolicy.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { DEFAULT_CLIENT_MAX_RETRY_INTERVAL, DEFAULT_CLIENT_RETRY_COUNT, DEFAULT_CLIENT_RETRY_INTERVAL, isNumber, updateRetryData, shouldRetry } from \"../util/exponentialBackoffStrategy\";\nimport { RestError } from \"../restError\";\nimport { logger } from \"../log\";\nimport { Constants } from \"../util/constants\";\nimport { delay } from \"../util/delay\";\nexport function exponentialRetryPolicy(retryCount, retryInterval, maxRetryInterval) {\n    return {\n        create: (nextPolicy, options) => {\n            return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval);\n        }\n    };\n}\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n */\nexport var RetryMode;\n(function (RetryMode) {\n    RetryMode[RetryMode[\"Exponential\"] = 0] = \"Exponential\";\n})(RetryMode || (RetryMode = {}));\nexport const DefaultRetryOptions = {\n    maxRetries: DEFAULT_CLIENT_RETRY_COUNT,\n    retryDelayInMs: DEFAULT_CLIENT_RETRY_INTERVAL,\n    maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL\n};\n/**\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nexport class ExponentialRetryPolicy extends BaseRequestPolicy {\n    /**\n     * @param nextPolicy - The next RequestPolicy in the pipeline chain.\n     * @param options - The options for this RequestPolicy.\n     * @param retryCount - The client retry count.\n     * @param retryInterval - The client retry interval, in milliseconds.\n     * @param minRetryInterval - The minimum retry interval, in milliseconds.\n     * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n     */\n    constructor(nextPolicy, options, retryCount, retryInterval, maxRetryInterval) {\n        super(nextPolicy, options);\n        this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n        this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n        this.maxRetryInterval = isNumber(maxRetryInterval)\n            ? maxRetryInterval\n            : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then((response) => retry(this, request, response))\n            .catch((error) => retry(this, request, error.response, undefined, error));\n    }\n}\nasync function retry(policy, request, response, retryData, requestError) {\n    function shouldPolicyRetry(responseParam) {\n        const statusCode = responseParam === null || responseParam === void 0 ? void 0 : responseParam.status;\n        if (statusCode === 503 && (response === null || response === void 0 ? void 0 : response.headers.get(Constants.HeaderConstants.RETRY_AFTER))) {\n            return false;\n        }\n        if (statusCode === undefined ||\n            (statusCode < 500 && statusCode !== 408) ||\n            statusCode === 501 ||\n            statusCode === 505) {\n            return false;\n        }\n        return true;\n    }\n    retryData = updateRetryData({\n        retryInterval: policy.retryInterval,\n        minRetryInterval: 0,\n        maxRetryInterval: policy.maxRetryInterval\n    }, retryData, requestError);\n    const isAborted = request.abortSignal && request.abortSignal.aborted;\n    if (!isAborted && shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, response)) {\n        logger.info(`Retrying request in ${retryData.retryInterval}`);\n        try {\n            await delay(retryData.retryInterval);\n            const res = await policy._nextPolicy.sendRequest(request.clone());\n            return retry(policy, request, res, retryData);\n        }\n        catch (err) {\n            return retry(policy, request, response, retryData, err);\n        }\n    }\n    else if (isAborted || requestError || !response) {\n        // If the operation failed in the end, return all errors instead of just the last one\n        const err = retryData.error ||\n            new RestError(\"Failed to send the request.\", RestError.REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n        throw err;\n    }\n    else {\n        return response;\n    }\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        create: (nextPolicy, options) => {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        }\n    };\n}\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, _requestIdHeaderName) {\n        super(nextPolicy, options);\n        this._requestIdHeaderName = _requestIdHeaderName;\n    }\n    sendRequest(request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, request.requestId);\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=generateClientRequestIdPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport const DefaultKeepAliveOptions = {\n    enable: true\n};\nexport function keepAlivePolicy(keepAliveOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n        }\n    };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     *\n     * @param nextPolicy -\n     * @param options -\n     * @param keepAliveOptions -\n     */\n    constructor(nextPolicy, options, keepAliveOptions) {\n        super(nextPolicy, options);\n        this.keepAliveOptions = keepAliveOptions;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     * @returns\n     */\n    async sendRequest(request) {\n        request.keepAlive = this.keepAliveOptions.enable;\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=keepAlivePolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { logger as coreLogger } from \"../log\";\nimport { Sanitizer } from \"../util/sanitizer\";\nexport function logPolicy(loggingOptions = {}) {\n    return {\n        create: (nextPolicy, options) => {\n            return new LogPolicy(nextPolicy, options, loggingOptions);\n        }\n    };\n}\nexport class LogPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, { logger = coreLogger.info, allowedHeaderNames = [], allowedQueryParameters = [] } = {}) {\n        super(nextPolicy, options);\n        this.logger = logger;\n        this.sanitizer = new Sanitizer({ allowedHeaderNames, allowedQueryParameters });\n    }\n    /**\n     * Header names whose values will be logged when logging is enabled. Defaults to\n     * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n     * specified in this field will be added to that list.  Any other values will\n     * be written to logs as \"REDACTED\".\n     * @deprecated Pass these into the constructor instead.\n     */\n    get allowedHeaderNames() {\n        return this.sanitizer.allowedHeaderNames;\n    }\n    /**\n     * Header names whose values will be logged when logging is enabled. Defaults to\n     * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n     * specified in this field will be added to that list.  Any other values will\n     * be written to logs as \"REDACTED\".\n     * @deprecated Pass these into the constructor instead.\n     */\n    set allowedHeaderNames(allowedHeaderNames) {\n        this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n    }\n    /**\n     * Query string names whose values will be logged when logging is enabled. By default no\n     * query string values are logged.\n     * @deprecated Pass these into the constructor instead.\n     */\n    get allowedQueryParameters() {\n        return this.sanitizer.allowedQueryParameters;\n    }\n    /**\n     * Query string names whose values will be logged when logging is enabled. By default no\n     * query string values are logged.\n     * @deprecated Pass these into the constructor instead.\n     */\n    set allowedQueryParameters(allowedQueryParameters) {\n        this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n    }\n    sendRequest(request) {\n        if (!this.logger.enabled)\n            return this._nextPolicy.sendRequest(request);\n        this.logRequest(request);\n        return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n    }\n    logRequest(request) {\n        this.logger(`Request: ${this.sanitizer.sanitize(request)}`);\n    }\n    logResponse(response) {\n        this.logger(`Response status code: ${response.status}`);\n        this.logger(`Headers: ${this.sanitizer.sanitize(response.headers)}`);\n        return response;\n    }\n}\n//# sourceMappingURL=logPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function getDefaultUserAgentKey() {\n    return \"x-ms-useragent\";\n}\nexport function getPlatformSpecificData() {\n    const navigator = self.navigator;\n    const osInfo = {\n        key: \"OS\",\n        value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n    };\n    return [osInfo];\n}\n//# sourceMappingURL=msRestUserAgentPolicy.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// BaseRequestPolicy has a protected constructor.\n/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function ndJsonPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new NdJsonPolicy(nextPolicy, options);\n        }\n    };\n}\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\nclass NdJsonPolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     */\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n    /**\n     * Sends a request.\n     */\n    async sendRequest(request) {\n        // There currently isn't a good way to bypass the serializer\n        if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n            const body = JSON.parse(request.body);\n            if (Array.isArray(body)) {\n                request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n            }\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=ndJsonPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n    return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n    return {\n        create: (_nextPolicy, _options) => {\n            throw proxyNotSupportedInBrowser;\n        }\n    };\n}\nexport class ProxyPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n        throw proxyNotSupportedInBrowser;\n    }\n    sendRequest(_request) {\n        throw proxyNotSupportedInBrowser;\n    }\n}\n//# sourceMappingURL=proxyPolicy.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { URLBuilder } from \"../url\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\nexport const DefaultRedirectOptions = {\n    handleRedirects: true,\n    maxRetries: 20\n};\nexport function redirectPolicy(maximumRetries = 20) {\n    return {\n        create: (nextPolicy, options) => {\n            return new RedirectPolicy(nextPolicy, options, maximumRetries);\n        }\n    };\n}\nexport class RedirectPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, maxRetries = 20) {\n        super(nextPolicy, options);\n        this.maxRetries = maxRetries;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request)\n            .then((response) => handleRedirect(this, response, 0));\n    }\n}\nfunction handleRedirect(policy, response, currentRetries) {\n    const { request, status } = response;\n    const locationHeader = response.headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        (!policy.maxRetries || currentRetries < policy.maxRetries)) {\n        const builder = URLBuilder.parse(request.url);\n        builder.setPath(locationHeader);\n        request.url = builder.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            delete request.body;\n        }\n        return policy._nextPolicy\n            .sendRequest(request)\n            .then((res) => handleRedirect(policy, res, currentRetries + 1));\n    }\n    return Promise.resolve(response);\n}\n//# sourceMappingURL=redirectPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nexport class BaseRequestPolicy {\n    constructor(_nextPolicy, _options) {\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel - The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    shouldLog(logLevel) {\n        return this._options.shouldLog(logLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n    log(logLevel, message) {\n        this._options.log(logLevel, message);\n    }\n}\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n    constructor(_logger) {\n        this._logger = _logger;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel - The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    shouldLog(logLevel) {\n        return (!!this._logger &&\n            logLevel !== HttpPipelineLogLevel.OFF &&\n            logLevel <= this._logger.minimumLogLevel);\n    }\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meet the logger's threshold, then nothing will be logged.\n     * @param logLevel - The log level of this log.\n     * @param message - The message of this log.\n     */\n    log(logLevel, message) {\n        if (this._logger && this.shouldLog(logLevel)) {\n            this._logger.log(logLevel, message);\n        }\n    }\n}\n//# sourceMappingURL=requestPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { delay } from \"../util/delay\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function rpRegistrationPolicy(retryTimeout = 30) {\n    return {\n        create: (nextPolicy, options) => {\n            return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n        }\n    };\n}\nexport class RPRegistrationPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, _retryTimeout = 30) {\n        super(nextPolicy, options);\n        this._retryTimeout = _retryTimeout;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then((response) => registerIfNeeded(this, request, response));\n    }\n}\nfunction registerIfNeeded(policy, request, response) {\n    if (response.status === 409) {\n        const rpName = checkRPNotRegisteredError(response.bodyAsText);\n        if (rpName) {\n            const urlPrefix = extractSubscriptionUrl(request.url);\n            return (registerRP(policy, urlPrefix, rpName, request)\n                // Autoregistration of ${provider} failed for some reason. We will not return this error\n                // instead will return the initial response with 409 status code back to the user.\n                // do nothing here as we are returning the original response at the end of this method.\n                .catch(() => false)\n                .then((registrationStatus) => {\n                if (registrationStatus) {\n                    // Retry the original request. We have to change the x-ms-client-request-id\n                    // otherwise Azure endpoint will return the initial 409 (cached) response.\n                    request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n                    return policy._nextPolicy.sendRequest(request.clone());\n                }\n                return response;\n            }));\n        }\n    }\n    return Promise.resolve(response);\n}\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param originalRequest - The original request\n * @param reuseUrlToo - Should the url from the original request be reused as well. Default false.\n * @returns A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest, reuseUrlToo = false) {\n    const reqOptions = originalRequest.clone();\n    if (reuseUrlToo) {\n        reqOptions.url = originalRequest.url;\n    }\n    // We have to change the x-ms-client-request-id otherwise Azure endpoint\n    // will return the initial 409 (cached) response.\n    reqOptions.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n    // Set content-type to application/json\n    reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    return reqOptions;\n}\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param body - The response body received after making the original request.\n * @returns The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body) {\n    let result, responseBody;\n    if (body) {\n        try {\n            responseBody = JSON.parse(body);\n        }\n        catch (err) {\n            // do nothing;\n        }\n        if (responseBody &&\n            responseBody.error &&\n            responseBody.error.message &&\n            responseBody.error.code &&\n            responseBody.error.code === \"MissingSubscriptionRegistration\") {\n            const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n            if (matchRes) {\n                result = matchRes.pop();\n            }\n        }\n    }\n    return result;\n}\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param url - The original request url\n * @returns The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url) {\n    let result;\n    const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n    if (matchRes && matchRes[0]) {\n        result = matchRes[0];\n    }\n    else {\n        throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n    }\n    return result;\n}\n/**\n * Registers the given provider.\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param urlPrefix - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param provider - The provider name to be registered.\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n */\nasync function registerRP(policy, urlPrefix, provider, originalRequest) {\n    const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n    const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n    const reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.method = \"POST\";\n    reqOptions.url = postUrl;\n    const response = await policy._nextPolicy.sendRequest(reqOptions);\n    if (response.status !== 200) {\n        throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n    }\n    return getRegistrationStatus(policy, getUrl, originalRequest);\n}\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param url - The request url for polling\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns True if RP Registration is successful.\n */\nasync function getRegistrationStatus(policy, url, originalRequest) {\n    const reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.url = url;\n    reqOptions.method = \"GET\";\n    const res = await policy._nextPolicy.sendRequest(reqOptions);\n    const obj = res.parsedBody;\n    if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n        return true;\n    }\n    else {\n        await delay(policy._retryTimeout * 1000);\n        return getRegistrationStatus(policy, url, originalRequest);\n    }\n}\n//# sourceMappingURL=rpRegistrationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function signingPolicy(authenticationProvider) {\n    return {\n        create: (nextPolicy, options) => {\n            return new SigningPolicy(nextPolicy, options, authenticationProvider);\n        }\n    };\n}\nexport class SigningPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, authenticationProvider) {\n        super(nextPolicy, options);\n        this.authenticationProvider = authenticationProvider;\n    }\n    signRequest(request) {\n        return this.authenticationProvider.signRequest(request);\n    }\n    sendRequest(request) {\n        return this.signRequest(request).then((nextRequest) => this._nextPolicy.sendRequest(nextRequest));\n    }\n}\n//# sourceMappingURL=signingPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { shouldRetry, updateRetryData, DEFAULT_CLIENT_MAX_RETRY_INTERVAL, DEFAULT_CLIENT_RETRY_COUNT, DEFAULT_CLIENT_RETRY_INTERVAL, DEFAULT_CLIENT_MIN_RETRY_INTERVAL, isNumber } from \"../util/exponentialBackoffStrategy\";\nimport { delay } from \"../util/delay\";\nexport function systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: (nextPolicy, options) => {\n            return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        }\n    };\n}\n/**\n * @param retryCount - The client retry count.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n */\nexport class SystemErrorRetryPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        super(nextPolicy, options);\n        this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n        this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n        this.minRetryInterval = isNumber(minRetryInterval)\n            ? minRetryInterval\n            : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        this.maxRetryInterval = isNumber(maxRetryInterval)\n            ? maxRetryInterval\n            : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    }\n    sendRequest(request) {\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .catch((error) => retry(this, request, error.response, error));\n    }\n}\nasync function retry(policy, request, operationResponse, err, retryData) {\n    retryData = updateRetryData(policy, retryData, err);\n    function shouldPolicyRetry(_response, error) {\n        if (error &&\n            error.code &&\n            (error.code === \"ETIMEDOUT\" ||\n                error.code === \"ESOCKETTIMEDOUT\" ||\n                error.code === \"ECONNREFUSED\" ||\n                error.code === \"ECONNRESET\" ||\n                error.code === \"ENOENT\")) {\n            return true;\n        }\n        return false;\n    }\n    if (shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {\n        // If previous operation ended with an error and the policy allows a retry, do that\n        try {\n            await delay(retryData.retryInterval);\n            return policy._nextPolicy.sendRequest(request.clone());\n        }\n        catch (nestedErr) {\n            return retry(policy, request, operationResponse, nestedErr, retryData);\n        }\n    }\n    else {\n        if (err) {\n            // If the operation failed in the end, return all errors instead of just the last one\n            return Promise.reject(retryData.error);\n        }\n        return operationResponse;\n    }\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortError } from \"@azure/abort-controller\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { DEFAULT_CLIENT_MAX_RETRY_COUNT } from \"../util/throttlingRetryStrategy\";\nimport { delay } from \"../util/delay\";\nconst StatusCodes = Constants.HttpConstants.StatusCodes;\nexport function throttlingRetryPolicy() {\n    return {\n        create: (nextPolicy, options) => {\n            return new ThrottlingRetryPolicy(nextPolicy, options);\n        }\n    };\n}\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nexport class ThrottlingRetryPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, _handleResponse) {\n        super(nextPolicy, options);\n        this.numberOfRetries = 0;\n        this._handleResponse = _handleResponse || this._defaultResponseHandler;\n    }\n    async sendRequest(httpRequest) {\n        const response = await this._nextPolicy.sendRequest(httpRequest.clone());\n        if (response.status !== StatusCodes.TooManyRequests &&\n            response.status !== StatusCodes.ServiceUnavailable) {\n            return response;\n        }\n        else {\n            return this._handleResponse(httpRequest, response);\n        }\n    }\n    async _defaultResponseHandler(httpRequest, httpResponse) {\n        var _a;\n        const retryAfterHeader = httpResponse.headers.get(Constants.HeaderConstants.RETRY_AFTER);\n        if (retryAfterHeader) {\n            const delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n            if (delayInMs) {\n                this.numberOfRetries += 1;\n                await delay(delayInMs, undefined, {\n                    abortSignal: httpRequest.abortSignal,\n                    abortErrorMsg: StandardAbortMessage\n                });\n                if ((_a = httpRequest.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    throw new AbortError(StandardAbortMessage);\n                }\n                if (this.numberOfRetries < DEFAULT_CLIENT_MAX_RETRY_COUNT) {\n                    return this.sendRequest(httpRequest);\n                }\n                else {\n                    return this._nextPolicy.sendRequest(httpRequest);\n                }\n            }\n        }\n        return httpResponse;\n    }\n    static parseRetryAfterHeader(headerValue) {\n        const retryAfterInSeconds = Number(headerValue);\n        if (Number.isNaN(retryAfterInSeconds)) {\n            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n        }\n        else {\n            return retryAfterInSeconds * 1000;\n        }\n    }\n    static parseDateRetryAfterHeader(headerValue) {\n        try {\n            const now = Date.now();\n            const date = Date.parse(headerValue);\n            const diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n        catch (error) {\n            return undefined;\n        }\n    }\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getTraceParentHeader, createSpanFunction, SpanKind, SpanStatusCode, isSpanContextValid } from \"@azure/core-tracing\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { URLBuilder } from \"../url\";\nimport { logger } from \"../log\";\nconst createSpan = createSpanFunction({\n    packagePrefix: \"\",\n    namespace: \"\"\n});\nexport function tracingPolicy(tracingOptions = {}) {\n    return {\n        create(nextPolicy, options) {\n            return new TracingPolicy(nextPolicy, options, tracingOptions);\n        }\n    };\n}\nexport class TracingPolicy extends BaseRequestPolicy {\n    constructor(nextPolicy, options, tracingOptions) {\n        super(nextPolicy, options);\n        this.userAgent = tracingOptions.userAgent;\n    }\n    async sendRequest(request) {\n        if (!request.tracingContext) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        const span = this.tryCreateSpan(request);\n        if (!span) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        try {\n            const response = await this._nextPolicy.sendRequest(request);\n            this.tryProcessResponse(span, response);\n            return response;\n        }\n        catch (err) {\n            this.tryProcessError(span, err);\n            throw err;\n        }\n    }\n    tryCreateSpan(request) {\n        var _a;\n        try {\n            const path = URLBuilder.parse(request.url).getPath() || \"/\";\n            // Passing spanOptions as part of tracingOptions to maintain compatibility @azure/core-tracing@preview.13 and earlier.\n            // We can pass this as a separate parameter once we upgrade to the latest core-tracing.\n            const { span } = createSpan(path, {\n                tracingOptions: {\n                    spanOptions: Object.assign(Object.assign({}, request.spanOptions), { kind: SpanKind.CLIENT }),\n                    tracingContext: request.tracingContext\n                }\n            });\n            // If the span is not recording, don't do any more work.\n            if (!span.isRecording()) {\n                span.end();\n                return undefined;\n            }\n            const namespaceFromContext = (_a = request.tracingContext) === null || _a === void 0 ? void 0 : _a.getValue(Symbol.for(\"az.namespace\"));\n            if (typeof namespaceFromContext === \"string\") {\n                span.setAttribute(\"az.namespace\", namespaceFromContext);\n            }\n            span.setAttributes({\n                \"http.method\": request.method,\n                \"http.url\": request.url,\n                requestId: request.requestId\n            });\n            if (this.userAgent) {\n                span.setAttribute(\"http.user_agent\", this.userAgent);\n            }\n            // set headers\n            const spanContext = span.spanContext();\n            const traceParentHeader = getTraceParentHeader(spanContext);\n            if (traceParentHeader && isSpanContextValid(spanContext)) {\n                request.headers.set(\"traceparent\", traceParentHeader);\n                const traceState = spanContext.traceState && spanContext.traceState.serialize();\n                // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n                if (traceState) {\n                    request.headers.set(\"tracestate\", traceState);\n                }\n            }\n            return span;\n        }\n        catch (error) {\n            logger.warning(`Skipping creating a tracing span due to an error: ${error.message}`);\n            return undefined;\n        }\n    }\n    tryProcessError(span, err) {\n        try {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n            if (err.statusCode) {\n                span.setAttribute(\"http.status_code\", err.statusCode);\n            }\n            span.end();\n        }\n        catch (error) {\n            logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n        }\n    }\n    tryProcessResponse(span, response) {\n        try {\n            span.setAttribute(\"http.status_code\", response.status);\n            const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n            if (serviceRequestId) {\n                span.setAttribute(\"serviceRequestId\", serviceRequestId);\n            }\n            span.setStatus({\n                code: SpanStatusCode.OK\n            });\n            span.end();\n        }\n        catch (error) {\n            logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n        }\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { Constants } from \"../util/constants\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nfunction getRuntimeInfo() {\n    const msRestRuntime = {\n        key: \"core-http\",\n        value: Constants.coreHttpVersion\n    };\n    return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator = \" \", valueSeparator = \"/\") {\n    return telemetryInfo\n        .map((info) => {\n        const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n        return `${info.key}${value}`;\n    })\n        .join(keySeparator);\n}\nexport const getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\nexport function getDefaultUserAgentValue() {\n    const runtimeInfo = getRuntimeInfo();\n    const platformSpecificData = getPlatformSpecificData();\n    const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n    return userAgent;\n}\nexport function userAgentPolicy(userAgentData) {\n    const key = !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n        ? getDefaultUserAgentKey()\n        : userAgentData.key;\n    const value = !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n        ? getDefaultUserAgentValue()\n        : userAgentData.value;\n    return {\n        create: (nextPolicy, options) => {\n            return new UserAgentPolicy(nextPolicy, options, key, value);\n        }\n    };\n}\nexport class UserAgentPolicy extends BaseRequestPolicy {\n    constructor(_nextPolicy, _options, headerKey, headerValue) {\n        super(_nextPolicy, _options);\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n        this.headerKey = headerKey;\n        this.headerValue = headerValue;\n    }\n    sendRequest(request) {\n        this.addUserAgentHeader(request);\n        return this._nextPolicy.sendRequest(request);\n    }\n    addUserAgentHeader(request) {\n        if (!request.headers) {\n            request.headers = new HttpHeaders();\n        }\n        if (!request.headers.get(this.headerKey) && this.headerValue) {\n            request.headers.set(this.headerKey, this.headerValue);\n        }\n    }\n}\n//# sourceMappingURL=userAgentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport var QueryCollectionFormat;\n(function (QueryCollectionFormat) {\n    QueryCollectionFormat[\"Csv\"] = \",\";\n    QueryCollectionFormat[\"Ssv\"] = \" \";\n    QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n    QueryCollectionFormat[\"Pipes\"] = \"|\";\n    QueryCollectionFormat[\"Multi\"] = \"Multi\";\n})(QueryCollectionFormat || (QueryCollectionFormat = {}));\n//# sourceMappingURL=queryCollectionFormat.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { custom } from \"./util/inspect\";\nimport { Sanitizer } from \"./util/sanitizer\";\nconst errorSanitizer = new Sanitizer();\nexport class RestError extends Error {\n    constructor(message, code, statusCode, request, response) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = code;\n        this.statusCode = statusCode;\n        this.request = request;\n        this.response = response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [custom]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\nexport class Serializer {\n    constructor(modelMappers = {}, isXML) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value != undefined) {\n            const valueAsNumber = value;\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems } = mapper.constraints;\n            if (ExclusiveMaximum != undefined && valueAsNumber >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum != undefined && valueAsNumber <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum != undefined && valueAsNumber > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum != undefined && valueAsNumber < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            const valueAsArray = value;\n            if (MaxItems != undefined && valueAsArray.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength != undefined && valueAsArray.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems != undefined && valueAsArray.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength != undefined && valueAsArray.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf != undefined && valueAsNumber % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                valueAsArray.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     * @param object - A valid Javascript object to be serialized\n     * @param objectName - Name of the serialized object\n     * @param options - additional options to deserialization\n     * @returns A valid serialized Javascript object\n     */\n    serialize(mapper, object, objectName, options = {}) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && object == undefined) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object == undefined) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     * @param responseBody - A valid Javascript entity to be deserialized\n     * @param objectName - Name of the deserialized object\n     * @param options - Controls behavior of XML parser and builder.\n     * @returns A valid deserialized Javascript object\n     */\n    deserialize(mapper, responseBody, objectName, options = {}) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n        };\n        if (responseBody == undefined) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xmlCharKey;\n                const castResponseBody = responseBody;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (castResponseBody[XML_ATTRKEY] != undefined &&\n                    castResponseBody[xmlCharKey] != undefined) {\n                    responseBody = castResponseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = base64.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = base64.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return base64.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                objectType !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)) {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    let returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        returnValue = base64.encodeByteArray(value);\n    }\n    return returnValue;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    let returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        returnValue = bufferToBase64Url(value) || \"\";\n    }\n    return returnValue;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value != undefined) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!utils.isDuration(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    const elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xmlCharKey] = serializedValue;\n                tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by className\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object != undefined) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if (childObject == undefined &&\n                        (object[key] != undefined || propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject != undefined) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    toSerialize == undefined) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName != undefined) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n                        parentObject[XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [XML_ATTRKEY, options.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_a = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _a !== void 0 ? _a : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            for (const item of paths) {\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                propertyInstance == undefined) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    const element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName != undefined) {\n            const discriminatorValue = object[discriminatorName];\n            if (discriminatorValue != undefined) {\n                const typeName = mapper.type.uberParent || mapper.type.className;\n                const indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n// TODO: why is this here?\nexport function serializeObject(toSerialize) {\n    const castToSerialize = toSerialize;\n    if (toSerialize == undefined)\n        return undefined;\n    if (toSerialize instanceof Uint8Array) {\n        toSerialize = base64.encodeByteArray(toSerialize);\n        return toSerialize;\n    }\n    else if (toSerialize instanceof Date) {\n        return toSerialize.toISOString();\n    }\n    else if (Array.isArray(toSerialize)) {\n        const array = [];\n        for (let i = 0; i < toSerialize.length; i++) {\n            array.push(serializeObject(toSerialize[i]));\n        }\n        return array;\n    }\n    else if (typeof toSerialize === \"object\") {\n        const dictionary = {};\n        for (const property in toSerialize) {\n            dictionary[property] = serializeObject(castToSerialize[property]);\n        }\n        return dictionary;\n    }\n    return toSerialize;\n}\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum(o) {\n    const result = {};\n    for (const key of o) {\n        result[key] = key;\n    }\n    return result;\n}\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const MapperType = strEnum([\n    \"Base64Url\",\n    \"Boolean\",\n    \"ByteArray\",\n    \"Composite\",\n    \"Date\",\n    \"DateTime\",\n    \"DateTimeRfc1123\",\n    \"Dictionary\",\n    \"Enum\",\n    \"Number\",\n    \"Object\",\n    \"Sequence\",\n    \"String\",\n    \"Stream\",\n    \"TimeSpan\",\n    \"UnixTime\"\n]);\n//# sourceMappingURL=serializer.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { logPolicy } from \"./policies/logPolicy\";\nimport { getPathStringFromParameter, getPathStringFromParameterPath } from \"./operationParameter\";\nimport { getStreamResponseStatusCodes } from \"./operationSpec\";\nimport { deserializationPolicy, DefaultDeserializationOptions } from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy, DefaultRetryOptions } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport { userAgentPolicy, getDefaultUserAgentHeaderName, getDefaultUserAgentValue } from \"./policies/userAgentPolicy\";\nimport { redirectPolicy, DefaultRedirectOptions } from \"./policies/redirectPolicy\";\nimport { RequestPolicyOptions } from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { MapperType } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport { WebResource, isWebResourceLike } from \"./webResource\";\nimport { isNode } from \"./util/utils\";\nimport { proxyPolicy } from \"./policies/proxyPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { logger } from \"./log\";\nimport { DefaultKeepAliveOptions, keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nimport { tracingPolicy } from \"./policies/tracingPolicy\";\nimport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nimport { ndJsonPolicy } from \"./policies/ndJsonPolicy\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\nimport { URL } from \"./url\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache\";\n/**\n * ServiceClient sends service requests and receives responses.\n */\nexport class ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param credentials - The credentials used for authentication with the service.\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(credentials, \n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options) {\n        if (!options) {\n            options = {};\n        }\n        this._withCredentials = options.withCredentials || false;\n        this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n        this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n        let requestPolicyFactories;\n        if (Array.isArray(options.requestPolicyFactories)) {\n            logger.info(\"ServiceClient: using custom request policies\");\n            requestPolicyFactories = options.requestPolicyFactories;\n        }\n        else {\n            let authPolicyFactory = undefined;\n            if (isTokenCredential(credentials)) {\n                logger.info(\"ServiceClient: creating bearer token authentication policy from provided credentials\");\n                // Create a wrapped RequestPolicyFactory here so that we can provide the\n                // correct scope to the BearerTokenAuthenticationPolicy at the first time\n                // one is requested.  This is needed because generated ServiceClient\n                // implementations do not set baseUri until after ServiceClient's constructor\n                // is finished, leaving baseUri empty at the time when it is needed to\n                // build the correct scope name.\n                const wrappedPolicyFactory = () => {\n                    let bearerTokenPolicyFactory = undefined;\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    const serviceClient = this;\n                    const serviceClientOptions = options;\n                    return {\n                        create(nextPolicy, createOptions) {\n                            const credentialScopes = getCredentialScopes(serviceClientOptions, serviceClient.baseUri);\n                            if (!credentialScopes) {\n                                throw new Error(`When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy`);\n                            }\n                            if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                                bearerTokenPolicyFactory = bearerTokenAuthenticationPolicy(credentials, credentialScopes);\n                            }\n                            return bearerTokenPolicyFactory.create(nextPolicy, createOptions);\n                        }\n                    };\n                };\n                authPolicyFactory = wrappedPolicyFactory();\n            }\n            else if (credentials && typeof credentials.signRequest === \"function\") {\n                logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n                authPolicyFactory = signingPolicy(credentials);\n            }\n            else if (credentials !== undefined && credentials !== null) {\n                throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n            }\n            logger.info(\"ServiceClient: using default request policies\");\n            requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n            if (options.requestPolicyFactories) {\n                // options.requestPolicyFactories can also be a function that manipulates\n                // the default requestPolicyFactories array\n                const newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n                if (newRequestPolicyFactories) {\n                    requestPolicyFactories = newRequestPolicyFactories;\n                }\n            }\n        }\n        this._requestPolicyFactories = requestPolicyFactories;\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    sendRequest(options) {\n        if (options === null || options === undefined || typeof options !== \"object\") {\n            throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n        }\n        let httpRequest;\n        try {\n            if (isWebResourceLike(options)) {\n                options.validateRequestProperties();\n                httpRequest = options;\n            }\n            else {\n                httpRequest = new WebResource();\n                httpRequest = httpRequest.prepare(options);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n        let httpPipeline = this._httpClient;\n        if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n            for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n            }\n        }\n        return httpPipeline.sendRequest(httpRequest);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     * @param callback - The callback to call when the response is received.\n     */\n    async sendOperationRequest(operationArguments, operationSpec, callback) {\n        var _a;\n        if (typeof operationArguments.options === \"function\") {\n            callback = operationArguments.options;\n            operationArguments.options = undefined;\n        }\n        const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n        const httpRequest = new WebResource();\n        let result;\n        try {\n            const baseUri = operationSpec.baseUrl || this.baseUri;\n            if (!baseUri) {\n                throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n            }\n            httpRequest.method = operationSpec.httpMethod;\n            httpRequest.operationSpec = operationSpec;\n            const requestUrl = URLBuilder.parse(baseUri);\n            if (operationSpec.path) {\n                requestUrl.appendPath(operationSpec.path);\n            }\n            if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                for (const urlParameter of operationSpec.urlParameters) {\n                    let urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                    urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, getPathStringFromParameter(urlParameter), serializerOptions);\n                    if (!urlParameter.skipEncoding) {\n                        urlParameterValue = encodeURIComponent(urlParameterValue);\n                    }\n                    requestUrl.replaceAll(`{${urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)}}`, urlParameterValue);\n                }\n            }\n            if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                for (const queryParameter of operationSpec.queryParameters) {\n                    let queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                    if (queryParameterValue !== undefined && queryParameterValue !== null) {\n                        queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter), serializerOptions);\n                        if (queryParameter.collectionFormat !== undefined &&\n                            queryParameter.collectionFormat !== null) {\n                            if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                                if (queryParameterValue.length === 0) {\n                                    // The collection is empty, no need to try serializing the current queryParam\n                                    continue;\n                                }\n                                else {\n                                    for (const index in queryParameterValue) {\n                                        const item = queryParameterValue[index];\n                                        queryParameterValue[index] =\n                                            item === undefined || item === null ? \"\" : item.toString();\n                                    }\n                                }\n                            }\n                            else if (queryParameter.collectionFormat === QueryCollectionFormat.Ssv ||\n                                queryParameter.collectionFormat === QueryCollectionFormat.Tsv) {\n                                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                            }\n                        }\n                        if (!queryParameter.skipEncoding) {\n                            if (Array.isArray(queryParameterValue)) {\n                                for (const index in queryParameterValue) {\n                                    if (queryParameterValue[index] !== undefined &&\n                                        queryParameterValue[index] !== null) {\n                                        queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                    }\n                                }\n                            }\n                            else {\n                                queryParameterValue = encodeURIComponent(queryParameterValue);\n                            }\n                        }\n                        if (queryParameter.collectionFormat !== undefined &&\n                            queryParameter.collectionFormat !== null &&\n                            queryParameter.collectionFormat !== QueryCollectionFormat.Multi &&\n                            queryParameter.collectionFormat !== QueryCollectionFormat.Ssv &&\n                            queryParameter.collectionFormat !== QueryCollectionFormat.Tsv) {\n                            queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                        }\n                        requestUrl.setQueryParameter(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n                    }\n                }\n            }\n            httpRequest.url = requestUrl.toString();\n            const contentType = operationSpec.contentType || this.requestContentType;\n            if (contentType && operationSpec.requestBody) {\n                httpRequest.headers.set(\"Content-Type\", contentType);\n            }\n            if (operationSpec.headerParameters) {\n                for (const headerParameter of operationSpec.headerParameters) {\n                    let headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                    if (headerValue !== undefined && headerValue !== null) {\n                        headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter), serializerOptions);\n                        const headerCollectionPrefix = headerParameter.mapper\n                            .headerCollectionPrefix;\n                        if (headerCollectionPrefix) {\n                            for (const key of Object.keys(headerValue)) {\n                                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                            }\n                        }\n                        else {\n                            httpRequest.headers.set(headerParameter.mapper.serializedName ||\n                                getPathStringFromParameter(headerParameter), headerValue);\n                        }\n                    }\n                }\n            }\n            const options = operationArguments.options;\n            if (options) {\n                if (options.customHeaders) {\n                    for (const customHeaderName in options.customHeaders) {\n                        httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                    }\n                }\n                if (options.abortSignal) {\n                    httpRequest.abortSignal = options.abortSignal;\n                }\n                if (options.timeout) {\n                    httpRequest.timeout = options.timeout;\n                }\n                if (options.onUploadProgress) {\n                    httpRequest.onUploadProgress = options.onUploadProgress;\n                }\n                if (options.onDownloadProgress) {\n                    httpRequest.onDownloadProgress = options.onDownloadProgress;\n                }\n                if (options.spanOptions) {\n                    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n                    httpRequest.spanOptions = options.spanOptions;\n                }\n                if (options.tracingContext) {\n                    httpRequest.tracingContext = options.tracingContext;\n                }\n                if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n                    httpRequest.shouldDeserialize = options.shouldDeserialize;\n                }\n            }\n            httpRequest.withCredentials = this._withCredentials;\n            serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n            if (httpRequest.streamResponseStatusCodes === undefined) {\n                httpRequest.streamResponseStatusCodes = getStreamResponseStatusCodes(operationSpec);\n            }\n            let rawResponse;\n            let sendRequestError;\n            try {\n                rawResponse = await this.sendRequest(httpRequest);\n            }\n            catch (error) {\n                sendRequestError = error;\n            }\n            if (sendRequestError) {\n                if (sendRequestError.response) {\n                    sendRequestError.details = flattenResponse(sendRequestError.response, operationSpec.responses[sendRequestError.statusCode] ||\n                        operationSpec.responses[\"default\"]);\n                }\n                result = Promise.reject(sendRequestError);\n            }\n            else {\n                result = Promise.resolve(flattenResponse(rawResponse, operationSpec.responses[rawResponse.status]));\n            }\n        }\n        catch (error) {\n            result = Promise.reject(error);\n        }\n        const cb = callback;\n        if (cb) {\n            result\n                .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n                .catch((err) => cb(err));\n        }\n        return result;\n    }\n}\nexport function serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n    var _a, _b, _c, _d, _e, _f;\n    const serializerOptions = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions) !== null && _b !== void 0 ? _b : {};\n    const updatedOptions = {\n        rootName: (_c = serializerOptions.rootName) !== null && _c !== void 0 ? _c : \"\",\n        includeRoot: (_d = serializerOptions.includeRoot) !== null && _d !== void 0 ? _d : false,\n        xmlCharKey: (_e = serializerOptions.xmlCharKey) !== null && _e !== void 0 ? _e : XML_CHARKEY\n    };\n    const xmlCharKey = serializerOptions.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, xmlName, xmlElementName, serializedName, xmlNamespace, xmlNamespacePrefix } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n                const requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n                httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === MapperType.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, httpRequest.body, updatedOptions);\n                    if (typeName === MapperType.Sequence) {\n                        httpRequest.body = stringifyXML(utils.prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey\n                        });\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = stringifyXML(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey\n                        });\n                    }\n                }\n                else if (typeName === MapperType.String &&\n                    (((_f = operationSpec.contentType) === null || _f === void 0 ? void 0 : _f.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    httpRequest.body = JSON.stringify(httpRequest.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        httpRequest.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n                httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xmlCharKey] = serializedValue;\n        result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction getValueOrFunctionResult(value, defaultValueCreator) {\n    let result;\n    if (typeof value === \"string\") {\n        result = value;\n    }\n    else {\n        result = defaultValueCreator();\n        if (typeof value === \"function\") {\n            result = value(result);\n        }\n    }\n    return result;\n}\nfunction createDefaultRequestPolicyFactories(authPolicyFactory, options) {\n    const factories = [];\n    if (options.generateClientRequestIdHeader) {\n        factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n    }\n    if (authPolicyFactory) {\n        factories.push(authPolicyFactory);\n    }\n    const userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, getDefaultUserAgentHeaderName);\n    const userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, getDefaultUserAgentValue);\n    if (userAgentHeaderName && userAgentHeaderValue) {\n        factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n    }\n    factories.push(redirectPolicy());\n    factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n    if (!options.noRetryPolicy) {\n        factories.push(exponentialRetryPolicy());\n        factories.push(systemErrorRetryPolicy());\n        factories.push(throttlingRetryPolicy());\n    }\n    factories.push(deserializationPolicy(options.deserializationContentTypes));\n    if (isNode) {\n        factories.push(proxyPolicy(options.proxySettings));\n    }\n    factories.push(logPolicy({ logger: logger.info }));\n    return factories;\n}\nexport function createPipelineFromOptions(pipelineOptions, authPolicyFactory) {\n    const requestPolicyFactories = [];\n    if (pipelineOptions.sendStreamingJson) {\n        requestPolicyFactories.push(ndJsonPolicy());\n    }\n    let userAgentValue = undefined;\n    if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n        const userAgentInfo = [];\n        userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n        // Add the default user agent value if it isn't already specified\n        // by the userAgentPrefix option.\n        const defaultUserAgentInfo = getDefaultUserAgentValue();\n        if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n            userAgentInfo.push(defaultUserAgentInfo);\n        }\n        userAgentValue = userAgentInfo.join(\" \");\n    }\n    const keepAliveOptions = Object.assign(Object.assign({}, DefaultKeepAliveOptions), pipelineOptions.keepAliveOptions);\n    const retryOptions = Object.assign(Object.assign({}, DefaultRetryOptions), pipelineOptions.retryOptions);\n    const redirectOptions = Object.assign(Object.assign({}, DefaultRedirectOptions), pipelineOptions.redirectOptions);\n    if (isNode) {\n        requestPolicyFactories.push(proxyPolicy(pipelineOptions.proxyOptions));\n    }\n    const deserializationOptions = Object.assign(Object.assign({}, DefaultDeserializationOptions), pipelineOptions.deserializationOptions);\n    const loggingOptions = Object.assign({}, pipelineOptions.loggingOptions);\n    requestPolicyFactories.push(tracingPolicy({ userAgent: userAgentValue }), keepAlivePolicy(keepAliveOptions), userAgentPolicy({ value: userAgentValue }), generateClientRequestIdPolicy(), deserializationPolicy(deserializationOptions.expectedContentTypes), throttlingRetryPolicy(), systemErrorRetryPolicy(), exponentialRetryPolicy(retryOptions.maxRetries, retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs));\n    if (redirectOptions.handleRedirects) {\n        requestPolicyFactories.push(redirectPolicy(redirectOptions.maxRetries));\n    }\n    if (authPolicyFactory) {\n        requestPolicyFactories.push(authPolicyFactory);\n    }\n    requestPolicyFactories.push(logPolicy(loggingOptions));\n    if (isNode && pipelineOptions.decompressResponse === false) {\n        requestPolicyFactories.push(disableResponseDecompressionPolicy());\n    }\n    return {\n        httpClient: pipelineOptions.httpClient,\n        requestPolicyFactories\n    };\n}\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent, propertyPath) {\n    if (parent && propertyPath) {\n        const propertyPathLength = propertyPath.length;\n        for (let i = 0; i < propertyPathLength - 1; ++i) {\n            const propertyName = propertyPath[i];\n            if (!parent[propertyName]) {\n                parent[propertyName] = {};\n            }\n            parent = parent[propertyName];\n        }\n    }\n    return parent;\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n    return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nexport function getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n    var _a;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound) {\n                    propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n            // Serialize just for validation purposes.\n            const parameterPathString = getPathStringFromParameterPath(parameterPath, parameterMapper);\n            serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n            // Serialize just for validation purposes.\n            const propertyPathString = getPathStringFromParameterPath(propertyPath, propertyMapper);\n            serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);\n            if (propertyValue !== undefined && propertyValue !== null) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nexport function flattenResponse(_response, responseSpec) {\n    const parsedHeaders = _response.parsedHeaders;\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const addOperationResponse = (obj) => {\n        return Object.defineProperty(obj, \"_response\", {\n            value: _response\n        });\n    };\n    if (bodyMapper) {\n        const typeName = bodyMapper.type.name;\n        if (typeName === \"Stream\") {\n            return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n        }\n        const modelProperties = (typeName === \"Composite\" && bodyMapper.type.modelProperties) || {};\n        const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n        if (typeName === \"Sequence\" || isPageableResponse) {\n            const arrayResponse = [...(_response.parsedBody || [])];\n            for (const key of Object.keys(modelProperties)) {\n                if (modelProperties[key].serializedName) {\n                    arrayResponse[key] = _response.parsedBody[key];\n                }\n            }\n            if (parsedHeaders) {\n                for (const key of Object.keys(parsedHeaders)) {\n                    arrayResponse[key] = parsedHeaders[key];\n                }\n            }\n            addOperationResponse(arrayResponse);\n            return arrayResponse;\n        }\n        if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n            return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));\n        }\n    }\n    if (bodyMapper ||\n        _response.request.method === \"HEAD\" ||\n        utils.isPrimitiveType(_response.parsedBody)) {\n        // primitive body types and HEAD booleans\n        return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), { body: _response.parsedBody }));\n    }\n    return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));\n}\nfunction getCredentialScopes(options, baseUri) {\n    if (options === null || options === void 0 ? void 0 : options.credentialScopes) {\n        const scopes = options.credentialScopes;\n        return Array.isArray(scopes)\n            ? scopes.map((scope) => new URL(scope).toString())\n            : new URL(scopes).toString();\n    }\n    if (baseUri) {\n        return `${baseUri}/.default`;\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { replaceAll } from \"./util/utils\";\nexport { URL } from \"./util/url\";\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nexport class URLQuery {\n    constructor() {\n        this._rawQuery = {};\n    }\n    /**\n     * Get whether or not there any query parameters in this URLQuery.\n     */\n    any() {\n        return Object.keys(this._rawQuery).length > 0;\n    }\n    /**\n     * Get the keys of the query string.\n     */\n    keys() {\n        return Object.keys(this._rawQuery);\n    }\n    /**\n     * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n     * empty, then this will attempt to remove an existing query parameter with the provided\n     * parameterName.\n     */\n    set(parameterName, parameterValue) {\n        const caseParameterValue = parameterValue;\n        if (parameterName) {\n            if (caseParameterValue !== undefined && caseParameterValue !== null) {\n                const newValue = Array.isArray(caseParameterValue)\n                    ? caseParameterValue\n                    : caseParameterValue.toString();\n                this._rawQuery[parameterName] = newValue;\n            }\n            else {\n                delete this._rawQuery[parameterName];\n            }\n        }\n    }\n    /**\n     * Get the value of the query parameter with the provided name. If no parameter exists with the\n     * provided parameter name, then undefined will be returned.\n     */\n    get(parameterName) {\n        return parameterName ? this._rawQuery[parameterName] : undefined;\n    }\n    /**\n     * Get the string representation of this query. The return value will not start with a \"?\".\n     */\n    toString() {\n        let result = \"\";\n        for (const parameterName in this._rawQuery) {\n            if (result) {\n                result += \"&\";\n            }\n            const parameterValue = this._rawQuery[parameterName];\n            if (Array.isArray(parameterValue)) {\n                const parameterStrings = [];\n                for (const parameterValueElement of parameterValue) {\n                    parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n                }\n                result += parameterStrings.join(\"&\");\n            }\n            else {\n                result += `${parameterName}=${parameterValue}`;\n            }\n        }\n        return result;\n    }\n    /**\n     * Parse a URLQuery from the provided text.\n     */\n    static parse(text) {\n        const result = new URLQuery();\n        if (text) {\n            if (text.startsWith(\"?\")) {\n                text = text.substring(1);\n            }\n            let currentState = \"ParameterName\";\n            let parameterName = \"\";\n            let parameterValue = \"\";\n            for (let i = 0; i < text.length; ++i) {\n                const currentCharacter = text[i];\n                switch (currentState) {\n                    case \"ParameterName\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                currentState = \"ParameterValue\";\n                                break;\n                            case \"&\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                break;\n                            default:\n                                parameterName += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"ParameterValue\":\n                        switch (currentCharacter) {\n                            case \"&\":\n                                result.set(parameterName, parameterValue);\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"ParameterName\";\n                                break;\n                            default:\n                                parameterValue += currentCharacter;\n                                break;\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                }\n            }\n            if (currentState === \"ParameterValue\") {\n                result.set(parameterName, parameterValue);\n            }\n        }\n        return result;\n    }\n}\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nexport class URLBuilder {\n    /**\n     * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n     * (such as a host, port, path, or query), those parts will be added to this URL as well.\n     */\n    setScheme(scheme) {\n        if (!scheme) {\n            this._scheme = undefined;\n        }\n        else {\n            this.set(scheme, \"SCHEME\");\n        }\n    }\n    /**\n     * Get the scheme that has been set in this URL.\n     */\n    getScheme() {\n        return this._scheme;\n    }\n    /**\n     * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n     * port, path, or query), those parts will be added to this URL as well.\n     */\n    setHost(host) {\n        if (!host) {\n            this._host = undefined;\n        }\n        else {\n            this.set(host, \"SCHEME_OR_HOST\");\n        }\n    }\n    /**\n     * Get the host that has been set in this URL.\n     */\n    getHost() {\n        return this._host;\n    }\n    /**\n     * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n     * path or query), those parts will be added to this URL as well.\n     */\n    setPort(port) {\n        if (port === undefined || port === null || port === \"\") {\n            this._port = undefined;\n        }\n        else {\n            this.set(port.toString(), \"PORT\");\n        }\n    }\n    /**\n     * Get the port that has been set in this URL.\n     */\n    getPort() {\n        return this._port;\n    }\n    /**\n     * Set the path for this URL. If the provided path contains a query, then it will be added to\n     * this URL as well.\n     */\n    setPath(path) {\n        if (!path) {\n            this._path = undefined;\n        }\n        else {\n            const schemeIndex = path.indexOf(\"://\");\n            if (schemeIndex !== -1) {\n                const schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n                // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n                // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n                this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n            }\n            else {\n                this.set(path, \"PATH\");\n            }\n        }\n    }\n    /**\n     * Append the provided path to this URL's existing path. If the provided path contains a query,\n     * then it will be added to this URL as well.\n     */\n    appendPath(path) {\n        if (path) {\n            let currentPath = this.getPath();\n            if (currentPath) {\n                if (!currentPath.endsWith(\"/\")) {\n                    currentPath += \"/\";\n                }\n                if (path.startsWith(\"/\")) {\n                    path = path.substring(1);\n                }\n                path = currentPath + path;\n            }\n            this.set(path, \"PATH\");\n        }\n    }\n    /**\n     * Get the path that has been set in this URL.\n     */\n    getPath() {\n        return this._path;\n    }\n    /**\n     * Set the query in this URL.\n     */\n    setQuery(query) {\n        if (!query) {\n            this._query = undefined;\n        }\n        else {\n            this._query = URLQuery.parse(query);\n        }\n    }\n    /**\n     * Set a query parameter with the provided name and value in this URL's query. If the provided\n     * query parameter value is undefined or empty, then the query parameter will be removed if it\n     * existed.\n     */\n    setQueryParameter(queryParameterName, queryParameterValue) {\n        if (queryParameterName) {\n            if (!this._query) {\n                this._query = new URLQuery();\n            }\n            this._query.set(queryParameterName, queryParameterValue);\n        }\n    }\n    /**\n     * Get the value of the query parameter with the provided query parameter name. If no query\n     * parameter exists with the provided name, then undefined will be returned.\n     */\n    getQueryParameterValue(queryParameterName) {\n        return this._query ? this._query.get(queryParameterName) : undefined;\n    }\n    /**\n     * Get the query in this URL.\n     */\n    getQuery() {\n        return this._query ? this._query.toString() : undefined;\n    }\n    /**\n     * Set the parts of this URL by parsing the provided text using the provided startState.\n     */\n    set(text, startState) {\n        const tokenizer = new URLTokenizer(text, startState);\n        while (tokenizer.next()) {\n            const token = tokenizer.current();\n            let tokenPath;\n            if (token) {\n                switch (token.type) {\n                    case \"SCHEME\":\n                        this._scheme = token.text || undefined;\n                        break;\n                    case \"HOST\":\n                        this._host = token.text || undefined;\n                        break;\n                    case \"PORT\":\n                        this._port = token.text || undefined;\n                        break;\n                    case \"PATH\":\n                        tokenPath = token.text || undefined;\n                        if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                            this._path = tokenPath;\n                        }\n                        break;\n                    case \"QUERY\":\n                        this._query = URLQuery.parse(token.text);\n                        break;\n                    default:\n                        throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n                }\n            }\n        }\n    }\n    toString() {\n        let result = \"\";\n        if (this._scheme) {\n            result += `${this._scheme}://`;\n        }\n        if (this._host) {\n            result += this._host;\n        }\n        if (this._port) {\n            result += `:${this._port}`;\n        }\n        if (this._path) {\n            if (!this._path.startsWith(\"/\")) {\n                result += \"/\";\n            }\n            result += this._path;\n        }\n        if (this._query && this._query.any()) {\n            result += `?${this._query.toString()}`;\n        }\n        return result;\n    }\n    /**\n     * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n     * replaceValue.\n     */\n    replaceAll(searchValue, replaceValue) {\n        if (searchValue) {\n            this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n            this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n            this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n            this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n            this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n        }\n    }\n    static parse(text) {\n        const result = new URLBuilder();\n        result.set(text, \"SCHEME_OR_HOST\");\n        return result;\n    }\n}\nexport class URLToken {\n    constructor(text, type) {\n        this.text = text;\n        this.type = type;\n    }\n    static scheme(text) {\n        return new URLToken(text, \"SCHEME\");\n    }\n    static host(text) {\n        return new URLToken(text, \"HOST\");\n    }\n    static port(text) {\n        return new URLToken(text, \"PORT\");\n    }\n    static path(text) {\n        return new URLToken(text, \"PATH\");\n    }\n    static query(text) {\n        return new URLToken(text, \"QUERY\");\n    }\n}\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character) {\n    const characterCode = character.charCodeAt(0);\n    return ((48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n        (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n        (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */);\n}\n/**\n * A class that tokenizes URL strings.\n */\nexport class URLTokenizer {\n    constructor(_text, state) {\n        this._text = _text;\n        this._textLength = _text ? _text.length : 0;\n        this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n        this._currentIndex = 0;\n    }\n    /**\n     * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n     * hasn't started or has finished tokenizing.\n     */\n    current() {\n        return this._currentToken;\n    }\n    /**\n     * Advance to the next URLToken and return whether or not a URLToken was found.\n     */\n    next() {\n        if (!hasCurrentCharacter(this)) {\n            this._currentToken = undefined;\n        }\n        else {\n            switch (this._currentState) {\n                case \"SCHEME\":\n                    nextScheme(this);\n                    break;\n                case \"SCHEME_OR_HOST\":\n                    nextSchemeOrHost(this);\n                    break;\n                case \"HOST\":\n                    nextHost(this);\n                    break;\n                case \"PORT\":\n                    nextPort(this);\n                    break;\n                case \"PATH\":\n                    nextPath(this);\n                    break;\n                case \"QUERY\":\n                    nextQuery(this);\n                    break;\n                default:\n                    throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n            }\n        }\n        return !!this._currentToken;\n    }\n}\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer) {\n    let result = \"\";\n    if (tokenizer._currentIndex < tokenizer._textLength) {\n        result = tokenizer._text.substring(tokenizer._currentIndex);\n        tokenizer._currentIndex = tokenizer._textLength;\n    }\n    return result;\n}\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer) {\n    return tokenizer._currentIndex < tokenizer._textLength;\n}\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer) {\n    return tokenizer._text[tokenizer._currentIndex];\n}\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer, step) {\n    if (hasCurrentCharacter(tokenizer)) {\n        if (!step) {\n            step = 1;\n        }\n        tokenizer._currentIndex += step;\n    }\n}\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer, charactersToPeek) {\n    let endIndex = tokenizer._currentIndex + charactersToPeek;\n    if (tokenizer._textLength < endIndex) {\n        endIndex = tokenizer._textLength;\n    }\n    return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer, condition) {\n    let result = \"\";\n    while (hasCurrentCharacter(tokenizer)) {\n        const currentCharacter = getCurrentCharacter(tokenizer);\n        if (!condition(currentCharacter)) {\n            break;\n        }\n        else {\n            result += currentCharacter;\n            nextCharacter(tokenizer);\n        }\n    }\n    return result;\n}\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer) {\n    return readWhile(tokenizer, (character) => isAlphaNumericCharacter(character));\n}\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer, ...terminatingCharacters) {\n    return readWhile(tokenizer, (character) => terminatingCharacters.indexOf(character) === -1);\n}\nfunction nextScheme(tokenizer) {\n    const scheme = readWhileLetterOrDigit(tokenizer);\n    tokenizer._currentToken = URLToken.scheme(scheme);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"HOST\";\n    }\n}\nfunction nextSchemeOrHost(tokenizer) {\n    const schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n            tokenizer._currentState = \"HOST\";\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"PORT\";\n        }\n    }\n    else {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n}\nfunction nextHost(tokenizer) {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n        nextCharacter(tokenizer, 3);\n    }\n    const host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    tokenizer._currentToken = URLToken.host(host);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        tokenizer._currentState = \"PORT\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPort(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \":\") {\n        nextCharacter(tokenizer);\n    }\n    const port = readUntilCharacter(tokenizer, \"/\", \"?\");\n    tokenizer._currentToken = URLToken.port(port);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPath(tokenizer) {\n    const path = readUntilCharacter(tokenizer, \"?\");\n    tokenizer._currentToken = URLToken.path(path);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextQuery(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \"?\") {\n        nextCharacter(tokenizer);\n    }\n    const query = readRemaining(tokenizer);\n    tokenizer._currentToken = URLToken.query(query);\n    tokenizer._currentState = \"DONE\";\n}\n//# sourceMappingURL=url.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode\n */\nexport function encodeString(value) {\n    return btoa(value);\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - The Uint8Aray to encode\n */\nexport function encodeByteArray(value) {\n    let str = \"\";\n    for (let i = 0; i < value.length; i++) {\n        str += String.fromCharCode(value[i]);\n    }\n    return btoa(str);\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - The base64 string to decode\n */\nexport function decodeString(value) {\n    const byteString = atob(value);\n    const arr = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n}\n//# sourceMappingURL=base64.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const Constants = {\n    /**\n     * The core-http version\n     */\n    coreHttpVersion: \"2.2.0\",\n    /**\n     * Specifies HTTP.\n     */\n    HTTP: \"http:\",\n    /**\n     * Specifies HTTPS.\n     */\n    HTTPS: \"https:\",\n    /**\n     * Specifies HTTP Proxy.\n     */\n    HTTP_PROXY: \"HTTP_PROXY\",\n    /**\n     * Specifies HTTPS Proxy.\n     */\n    HTTPS_PROXY: \"HTTPS_PROXY\",\n    /**\n     * Specifies NO Proxy.\n     */\n    NO_PROXY: \"NO_PROXY\",\n    /**\n     * Specifies ALL Proxy.\n     */\n    ALL_PROXY: \"ALL_PROXY\",\n    HttpConstants: {\n        /**\n         * Http Verbs\n         */\n        HttpVerbs: {\n            PUT: \"PUT\",\n            GET: \"GET\",\n            DELETE: \"DELETE\",\n            POST: \"POST\",\n            MERGE: \"MERGE\",\n            HEAD: \"HEAD\",\n            PATCH: \"PATCH\"\n        },\n        StatusCodes: {\n            TooManyRequests: 429,\n            ServiceUnavailable: 503\n        }\n    },\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         */\n        AUTHORIZATION: \"authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        /**\n         * The Retry-After response-header field can be used with a 503 (Service\n         * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n         * the service is expected to be unavailable to the requesting client.\n         */\n        RETRY_AFTER: \"Retry-After\",\n        /**\n         * The UserAgent header.\n         */\n        USER_AGENT: \"User-Agent\"\n    }\n};\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isDefined } from \"./typeguards\";\nimport { AbortError } from \"@azure/abort-controller\";\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *   @param abortSignal - The abortSignal associated with containing operation.\n *   @param abortErrorMsg - The abort error message associated with containing operation.\n * @returns - Resolved promise\n */\nexport function delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (isDefined(timer)) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n//# sourceMappingURL=delay.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nexport const DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nexport const DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nexport const DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\nexport function isNumber(n) {\n    return typeof n === \"number\";\n}\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nexport function shouldRetry(retryLimit, predicate, retryData, response, error) {\n    if (!predicate(response, error)) {\n        return false;\n    }\n    return retryData.retryCount < retryLimit;\n}\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nexport function updateRetryData(retryOptions, retryData = { retryCount: 0, retryInterval: 0 }, err) {\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n    const boundedRandDelta = retryOptions.retryInterval * 0.8 +\n        Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(retryOptions.minRetryInterval + incrementDelta, retryOptions.maxRetryInterval);\n    return retryData;\n}\n//# sourceMappingURL=exponentialBackoffStrategy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const custom = {};\n//# sourceMappingURL=inspect.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { URLBuilder, URLQuery } from \"../url\";\nimport { isObject } from \"./utils\";\nconst RedactedString = \"REDACTED\";\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\"\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\nexport class Sanitizer {\n    constructor({ allowedHeaderNames = [], allowedQueryParameters = [] } = {}) {\n        allowedHeaderNames = Array.isArray(allowedHeaderNames)\n            ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n            : defaultAllowedHeaderNames;\n        allowedQueryParameters = Array.isArray(allowedQueryParameters)\n            ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n            : defaultAllowedQueryParameters;\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"_headersMap\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || isObject(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeHeaders(value) {\n        return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n    }\n    sanitizeQuery(value) {\n        return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n    }\n    sanitizeObject(value, allowedKeys, accessor) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (allowedKeys.has(k.toLowerCase())) {\n                sanitized[k] = accessor(value, k);\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        const urlBuilder = URLBuilder.parse(value);\n        const queryString = urlBuilder.getQuery();\n        if (!queryString) {\n            return value;\n        }\n        const query = URLQuery.parse(queryString);\n        for (const k of query.keys()) {\n            if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n                query.set(k, RedactedString);\n            }\n        }\n        urlBuilder.setQuery(query.toString());\n        return urlBuilder.toString();\n    }\n}\n//# sourceMappingURL=sanitizer.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n//# sourceMappingURL=serializer.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Maximum number of retries for the throttling retry policy\n */\nexport const DEFAULT_CLIENT_MAX_RETRY_COUNT = 3;\n//# sourceMappingURL=throttlingRetryStrategy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if the value is not null or undefined.\n * @param thing - Anything\n * @internal\n */\nexport function isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n//# sourceMappingURL=typeguards.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst url = URL;\nexport { url as URL };\n//# sourceMappingURL=url.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Constants } from \"./constants\";\nimport { XML_ATTRKEY } from \"./serializer.common\";\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode = typeof process !== \"undefined\" &&\n    !!process.version &&\n    !!process.versions &&\n    !!process.versions.node;\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck) {\n    return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nexport function encodeUri(uri) {\n    return encodeURIComponent(uri)\n        .replace(/!/g, \"%21\")\n        .replace(/\"/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nexport function stripResponse(response) {\n    const strippedResponse = {};\n    strippedResponse.body = response.bodyAsText;\n    strippedResponse.headers = response.headers;\n    strippedResponse.status = response.status;\n    return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nexport function stripRequest(request) {\n    const strippedRequest = request.clone();\n    if (strippedRequest.headers) {\n        strippedRequest.headers.remove(\"authorization\");\n    }\n    return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUuid() {\n    return uuidv4();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(promiseFactories, kickstart) {\n    let result = Promise.resolve(kickstart);\n    promiseFactories.forEach((promiseFactory) => {\n        result = result.then(promiseFactory);\n    });\n    return result;\n}\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function promiseToCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (cb) => {\n        promise\n            .then((data) => {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            return cb(undefined, data);\n        })\n            .catch((err) => {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            cb(err);\n        });\n    };\n}\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return (cb) => {\n        promise\n            .then((data) => {\n            return process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n        })\n            .catch((err) => {\n            process.nextTick(cb, err);\n        });\n    };\n}\nexport function prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtorParam, sourceCtors) {\n    const castTargetCtorParam = targetCtorParam;\n    sourceCtors.forEach((sourceCtor) => {\n        Object.getOwnPropertyNames(sourceCtor.prototype).forEach((name) => {\n            castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n        });\n    });\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nexport function isDuration(value) {\n    return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value) {\n    return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\nexport function getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./serializer.common\";\nif (!self.document || !self.DOMParser || !self.Node || !self.XMLSerializer) {\n    throw new Error(`This library depends on the following DOM objects: [\"document\", \"DOMParser\", \"Node\", \"XMLSerializer\"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. `);\n}\nconst doc = document.implementation.createDocument(null, null, null);\nconst parser = new DOMParser();\nexport function parseXML(str, opts = {}) {\n    var _a, _b, _c;\n    try {\n        const updatedOptions = {\n            rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"\",\n            includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n            xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n        };\n        const dom = parser.parseFromString(str, \"application/xml\");\n        throwIfError(dom);\n        let obj;\n        if (updatedOptions.includeRoot) {\n            obj = domToObject(dom, updatedOptions);\n        }\n        else {\n            obj = domToObject(dom.childNodes[0], updatedOptions);\n        }\n        return Promise.resolve(obj);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\nlet errorNS;\nfunction getErrorNamespace() {\n    var _a;\n    if (errorNS === undefined) {\n        try {\n            errorNS =\n                (_a = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n                    .namespaceURI) !== null && _a !== void 0 ? _a : \"\";\n        }\n        catch (ignored) {\n            // Most browsers will return a document containing <parsererror>, but IE will throw.\n            errorNS = \"\";\n        }\n    }\n    return errorNS;\n}\nfunction throwIfError(dom) {\n    const parserErrors = dom.getElementsByTagName(\"parsererror\");\n    if (parserErrors.length > 0 && getErrorNamespace()) {\n        for (let i = 0; i < parserErrors.length; i++) {\n            if (parserErrors[i].namespaceURI === errorNS) {\n                throw new Error(parserErrors[i].innerHTML);\n            }\n        }\n    }\n}\nfunction isElement(node) {\n    return !!node.attributes;\n}\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node) {\n    return isElement(node) && node.hasAttributes() ? node : undefined;\n}\nfunction domToObject(node, options) {\n    let result = {};\n    const childNodeCount = node.childNodes.length;\n    const firstChildNode = node.childNodes[0];\n    const onlyChildTextValue = (firstChildNode &&\n        childNodeCount === 1 &&\n        firstChildNode.nodeType === Node.TEXT_NODE &&\n        firstChildNode.nodeValue) ||\n        undefined;\n    const elementWithAttributes = asElementWithAttributes(node);\n    if (elementWithAttributes) {\n        result[XML_ATTRKEY] = {};\n        for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n            const attr = elementWithAttributes.attributes[i];\n            result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n        }\n        if (onlyChildTextValue) {\n            result[options.xmlCharKey] = onlyChildTextValue;\n        }\n    }\n    else if (childNodeCount === 0) {\n        result = \"\";\n    }\n    else if (onlyChildTextValue) {\n        result = onlyChildTextValue;\n    }\n    if (!onlyChildTextValue) {\n        for (let i = 0; i < childNodeCount; i++) {\n            const child = node.childNodes[i];\n            // Ignore leading/trailing whitespace nodes\n            if (child.nodeType !== Node.TEXT_NODE) {\n                const childObject = domToObject(child, options);\n                if (!result[child.nodeName]) {\n                    result[child.nodeName] = childObject;\n                }\n                else if (Array.isArray(result[child.nodeName])) {\n                    result[child.nodeName].push(childObject);\n                }\n                else {\n                    result[child.nodeName] = [result[child.nodeName], childObject];\n                }\n            }\n        }\n    }\n    return result;\n}\nconst serializer = new XMLSerializer();\nexport function stringifyXML(content, opts = {}) {\n    var _a, _b, _c;\n    const updatedOptions = {\n        rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : \"root\",\n        includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,\n        xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY\n    };\n    const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n    return ('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom));\n}\nfunction buildAttributes(attrs) {\n    const result = [];\n    for (const key of Object.keys(attrs)) {\n        const attr = doc.createAttribute(key);\n        attr.value = attrs[key].toString();\n        result.push(attr);\n    }\n    return result;\n}\nfunction buildNode(obj, elementName, options) {\n    if (obj === undefined ||\n        obj === null ||\n        typeof obj === \"string\" ||\n        typeof obj === \"number\" ||\n        typeof obj === \"boolean\") {\n        const elem = doc.createElement(elementName);\n        elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n        return [elem];\n    }\n    else if (Array.isArray(obj)) {\n        const result = [];\n        for (const arrayElem of obj) {\n            for (const child of buildNode(arrayElem, elementName, options)) {\n                result.push(child);\n            }\n        }\n        return result;\n    }\n    else if (typeof obj === \"object\") {\n        const elem = doc.createElement(elementName);\n        for (const key of Object.keys(obj)) {\n            if (key === XML_ATTRKEY) {\n                for (const attr of buildAttributes(obj[key])) {\n                    elem.attributes.setNamedItem(attr);\n                }\n            }\n            else if (key === options.xmlCharKey) {\n                elem.textContent = obj[key].toString();\n            }\n            else {\n                for (const child of buildNode(obj[key], key, options)) {\n                    elem.appendChild(child);\n                }\n            }\n        }\n        return [elem];\n    }\n    else {\n        throw new Error(`Illegal value passed to buildObject: ${obj}`);\n    }\n}\n//# sourceMappingURL=xml.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpHeaders, isHttpHeadersLike } from \"./httpHeaders\";\nimport { Serializer } from \"./serializer\";\nimport { generateUuid } from \"./util/utils\";\nexport function isWebResourceLike(object) {\n    if (object && typeof object === \"object\") {\n        const castObject = object;\n        if (typeof castObject.url === \"string\" &&\n            typeof castObject.method === \"string\" &&\n            typeof castObject.headers === \"object\" &&\n            isHttpHeadersLike(castObject.headers) &&\n            typeof castObject.validateRequestProperties === \"function\" &&\n            typeof castObject.prepare === \"function\" &&\n            typeof castObject.clone === \"function\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n */\nexport class WebResource {\n    constructor(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive, decompressResponse, streamResponseStatusCodes) {\n        this.streamResponseBody = streamResponseBody;\n        this.streamResponseStatusCodes = streamResponseStatusCodes;\n        this.url = url || \"\";\n        this.method = method || \"GET\";\n        this.headers = isHttpHeadersLike(headers) ? headers : new HttpHeaders(headers);\n        this.body = body;\n        this.query = query;\n        this.formData = undefined;\n        this.withCredentials = withCredentials || false;\n        this.abortSignal = abortSignal;\n        this.timeout = timeout || 0;\n        this.onUploadProgress = onUploadProgress;\n        this.onDownloadProgress = onDownloadProgress;\n        this.proxySettings = proxySettings;\n        this.keepAlive = keepAlive;\n        this.decompressResponse = decompressResponse;\n        this.requestId = this.headers.get(\"x-ms-client-request-id\") || generateUuid();\n    }\n    /**\n     * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n     * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n     * mentioned properties are not defined.\n     */\n    validateRequestProperties() {\n        if (!this.method) {\n            throw new Error(\"WebResource.method is required.\");\n        }\n        if (!this.url) {\n            throw new Error(\"WebResource.url is required.\");\n        }\n    }\n    /**\n     * Prepares the request.\n     * @param options - Options to provide for preparing the request.\n     * @returns Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n     */\n    prepare(options) {\n        if (!options) {\n            throw new Error(\"options object is required\");\n        }\n        if (options.method === undefined ||\n            options.method === null ||\n            typeof options.method.valueOf() !== \"string\") {\n            throw new Error(\"options.method must be a string.\");\n        }\n        if (options.url && options.pathTemplate) {\n            throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n        }\n        if ((options.pathTemplate === undefined ||\n            options.pathTemplate === null ||\n            typeof options.pathTemplate.valueOf() !== \"string\") &&\n            (options.url === undefined ||\n                options.url === null ||\n                typeof options.url.valueOf() !== \"string\")) {\n            throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n        }\n        // set the url if it is provided.\n        if (options.url) {\n            if (typeof options.url !== \"string\") {\n                throw new Error('options.url must be of type \"string\".');\n            }\n            this.url = options.url;\n        }\n        // set the method\n        if (options.method) {\n            const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                throw new Error('The provided method \"' +\n                    options.method +\n                    '\" is invalid. Supported HTTP methods are: ' +\n                    JSON.stringify(validMethods));\n            }\n        }\n        this.method = options.method.toUpperCase();\n        // construct the url if path template is provided\n        if (options.pathTemplate) {\n            const { pathTemplate, pathParameters } = options;\n            if (typeof pathTemplate !== \"string\") {\n                throw new Error('options.pathTemplate must be of type \"string\".');\n            }\n            if (!options.baseUrl) {\n                options.baseUrl = \"https://management.azure.com\";\n            }\n            const baseUrl = options.baseUrl;\n            let url = baseUrl +\n                (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n                (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n            const segments = url.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n            if (segments && segments.length) {\n                if (!pathParameters) {\n                    throw new Error(`pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`);\n                }\n                segments.forEach(function (item) {\n                    const pathParamName = item.slice(1, -1);\n                    const pathParam = pathParameters[pathParamName];\n                    if (pathParam === null ||\n                        pathParam === undefined ||\n                        !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                        const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n                        throw new Error(`pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                            ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                            `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                            `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`);\n                    }\n                    if (typeof pathParam.valueOf() === \"string\") {\n                        url = url.replace(item, encodeURIComponent(pathParam));\n                    }\n                    if (typeof pathParam.valueOf() === \"object\") {\n                        if (!pathParam.value) {\n                            throw new Error(`options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`);\n                        }\n                        if (pathParam.skipUrlEncoding) {\n                            url = url.replace(item, pathParam.value);\n                        }\n                        else {\n                            url = url.replace(item, encodeURIComponent(pathParam.value));\n                        }\n                    }\n                });\n            }\n            this.url = url;\n        }\n        // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n        if (options.queryParameters) {\n            const queryParameters = options.queryParameters;\n            if (typeof queryParameters !== \"object\") {\n                throw new Error(`options.queryParameters must be of type object. It should be a JSON object ` +\n                    `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n                    `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`);\n            }\n            // append question mark if it is not present in the url\n            if (this.url && this.url.indexOf(\"?\") === -1) {\n                this.url += \"?\";\n            }\n            // construct queryString\n            const queryParams = [];\n            // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n            this.query = {};\n            for (const queryParamName in queryParameters) {\n                const queryParam = queryParameters[queryParamName];\n                if (queryParam) {\n                    if (typeof queryParam === \"string\") {\n                        queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                        this.query[queryParamName] = encodeURIComponent(queryParam);\n                    }\n                    else if (typeof queryParam === \"object\") {\n                        if (!queryParam.value) {\n                            throw new Error(`options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`);\n                        }\n                        if (queryParam.skipUrlEncoding) {\n                            queryParams.push(queryParamName + \"=\" + queryParam.value);\n                            this.query[queryParamName] = queryParam.value;\n                        }\n                        else {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                            this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                        }\n                    }\n                }\n            } // end-of-for\n            // append the queryString\n            this.url += queryParams.join(\"&\");\n        }\n        // add headers to the request if they are provided\n        if (options.headers) {\n            const headers = options.headers;\n            for (const headerName of Object.keys(options.headers)) {\n                this.headers.set(headerName, headers[headerName]);\n            }\n        }\n        // ensure accept-language is set correctly\n        if (!this.headers.get(\"accept-language\")) {\n            this.headers.set(\"accept-language\", \"en-US\");\n        }\n        // ensure the request-id is set correctly\n        if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n            this.headers.set(\"x-ms-client-request-id\", this.requestId);\n        }\n        // default\n        if (!this.headers.get(\"Content-Type\")) {\n            this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        }\n        // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicitly\n        this.body = options.body;\n        if (options.body !== undefined && options.body !== null) {\n            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n            if (options.bodyIsStream) {\n                if (!this.headers.get(\"Transfer-Encoding\")) {\n                    this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                }\n                if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                    this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                }\n            }\n            else {\n                if (options.serializationMapper) {\n                    this.body = new Serializer(options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                }\n                if (!options.disableJsonStringifyOnBody) {\n                    this.body = JSON.stringify(options.body);\n                }\n            }\n        }\n        if (options.spanOptions) {\n            this.spanOptions = options.spanOptions;\n        }\n        if (options.tracingContext) {\n            this.tracingContext = options.tracingContext;\n        }\n        this.abortSignal = options.abortSignal;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.onUploadProgress = options.onUploadProgress;\n        return this;\n    }\n    /**\n     * Clone this WebResource HTTP request object.\n     * @returns The clone of this WebResource HTTP request object.\n     */\n    clone() {\n        const result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress, this.proxySettings, this.keepAlive, this.decompressResponse, this.streamResponseStatusCodes);\n        if (this.formData) {\n            result.formData = this.formData;\n        }\n        if (this.operationSpec) {\n            result.operationSpec = this.operationSpec;\n        }\n        if (this.shouldDeserialize) {\n            result.shouldDeserialize = this.shouldDeserialize;\n        }\n        if (this.operationResponseGetter) {\n            result.operationResponseGetter = this.operationResponseGetter;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=webResource.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortError } from \"@azure/abort-controller\";\nimport { HttpHeaders } from \"./httpHeaders\";\nimport { RestError } from \"./restError\";\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nexport class XhrHttpClient {\n    sendRequest(request) {\n        var _a;\n        const xhr = new XMLHttpRequest();\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        const abortSignal = request.abortSignal;\n        if (abortSignal) {\n            if (abortSignal.aborted) {\n                return Promise.reject(new AbortError(\"The operation was aborted.\"));\n            }\n            const listener = () => {\n                xhr.abort();\n            };\n            abortSignal.addEventListener(\"abort\", listener);\n            xhr.addEventListener(\"readystatechange\", () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    abortSignal.removeEventListener(\"abort\", listener);\n                }\n            });\n        }\n        addProgressListener(xhr.upload, request.onUploadProgress);\n        addProgressListener(xhr, request.onDownloadProgress);\n        if (request.formData) {\n            const formData = request.formData;\n            const requestForm = new FormData();\n            const appendFormValue = (key, value) => {\n                if (value &&\n                    Object.prototype.hasOwnProperty.call(value, \"value\") &&\n                    Object.prototype.hasOwnProperty.call(value, \"options\")) {\n                    requestForm.append(key, value.value, value.options);\n                }\n                else {\n                    requestForm.append(key, value);\n                }\n            };\n            for (const formKey of Object.keys(formData)) {\n                const formValue = formData[formKey];\n                if (Array.isArray(formValue)) {\n                    for (let j = 0; j < formValue.length; j++) {\n                        appendFormValue(formKey, formValue[j]);\n                    }\n                }\n                else {\n                    appendFormValue(formKey, formValue);\n                }\n            }\n            request.body = requestForm;\n            request.formData = undefined;\n            const contentType = request.headers.get(\"Content-Type\");\n            if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                // browser will automatically apply a suitable content-type header\n                request.headers.remove(\"Content-Type\");\n            }\n        }\n        xhr.open(request.method, request.url);\n        xhr.timeout = request.timeout;\n        xhr.withCredentials = request.withCredentials;\n        for (const header of request.headers.headersArray()) {\n            xhr.setRequestHeader(header.name, header.value);\n        }\n        xhr.responseType =\n            ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.size) || request.streamResponseBody ? \"blob\" : \"text\";\n        // tslint:disable-next-line:no-null-keyword\n        xhr.send(request.body === undefined ? null : request.body);\n        if (xhr.responseType === \"blob\") {\n            return new Promise((resolve, reject) => {\n                handleBlobResponse(xhr, request, resolve, reject);\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"load\", () => resolve({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    bodyAsText: xhr.responseText\n                }));\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n    }\n}\nfunction handleBlobResponse(xhr, request, res, rej) {\n    xhr.addEventListener(\"readystatechange\", () => {\n        var _a;\n        // Resolve as soon as headers are loaded\n        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            if (request.streamResponseBody || ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(xhr.status))) {\n                const blobBody = new Promise((resolve, reject) => {\n                    xhr.addEventListener(\"load\", () => {\n                        resolve(xhr.response);\n                    });\n                    rejectOnTerminalEvent(request, xhr, reject);\n                });\n                res({\n                    request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    blobBody\n                });\n            }\n            else {\n                xhr.addEventListener(\"load\", () => {\n                    // xhr.response is of Blob type if the request is sent with xhr.responseType === \"blob\"\n                    // but the status code is not one of the stream response status codes,\n                    // so treat it as text and convert from Blob to text\n                    if (xhr.response) {\n                        // Blob.text() is not supported in IE so using FileReader instead\n                        const reader = new FileReader();\n                        reader.onload = function (e) {\n                            var _a;\n                            const text = (_a = e.target) === null || _a === void 0 ? void 0 : _a.result;\n                            res({\n                                request,\n                                status: xhr.status,\n                                headers: parseHeaders(xhr),\n                                bodyAsText: text\n                            });\n                        };\n                        reader.onerror = function (_e) {\n                            rej(reader.error);\n                        };\n                        reader.readAsText(xhr.response, \"UTF-8\");\n                    }\n                    else {\n                        res({\n                            request,\n                            status: xhr.status,\n                            headers: parseHeaders(xhr)\n                        });\n                    }\n                });\n            }\n        }\n    });\n}\nfunction addProgressListener(xhr, listener) {\n    if (listener) {\n        xhr.addEventListener(\"progress\", (rawEvent) => listener({\n            loadedBytes: rawEvent.loaded\n        }));\n    }\n}\n// exported locally for testing\nexport function parseHeaders(xhr) {\n    const responseHeaders = new HttpHeaders();\n    const headerLines = xhr\n        .getAllResponseHeaders()\n        .trim()\n        .split(/[\\r\\n]+/);\n    for (const line of headerLines) {\n        const index = line.indexOf(\":\");\n        const headerName = line.slice(0, index);\n        const headerValue = line.slice(index + 2);\n        responseHeaders.set(headerName, headerValue);\n    }\n    return responseHeaders;\n}\nfunction rejectOnTerminalEvent(request, xhr, reject) {\n    xhr.addEventListener(\"error\", () => reject(new RestError(`Failed to send request to ${request.url}`, RestError.REQUEST_SEND_ERROR, undefined, request)));\n    const abortError = new AbortError(\"The operation was aborted.\");\n    xhr.addEventListener(\"abort\", () => reject(abortError));\n    xhr.addEventListener(\"timeout\", () => reject(abortError));\n}\n//# sourceMappingURL=xhrHttpClient.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport * from \"./pollOperation\";\nexport * from \"./poller\";\nexport * from \"./lroEngine\";\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { failureStates, successStates } from \"./models\";\nimport { isUnexpectedPollingResponse } from \"./requestUtils\";\nfunction getResponseStatus(rawResponse) {\n    var _a, _b;\n    const { status } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n    return (_b = status === null || status === void 0 ? void 0 : status.toLowerCase()) !== null && _b !== void 0 ? _b : \"succeeded\";\n}\nfunction isAzureAsyncPollingDone(rawResponse) {\n    const state = getResponseStatus(rawResponse);\n    if (isUnexpectedPollingResponse(rawResponse) || failureStates.includes(state)) {\n        throw new Error(`The long running operation has failed. The provisioning state: ${state}.`);\n    }\n    return successStates.includes(state);\n}\n/**\n * Sends a request to the URI of the provisioned resource if needed.\n */\nasync function sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig) {\n    switch (lroResourceLocationConfig) {\n        case \"original-uri\":\n            return lro.sendPollRequest(lro.requestPath);\n        case \"azure-async-operation\":\n            return undefined;\n        case \"location\":\n        default:\n            return lro.sendPollRequest(resourceLocation !== null && resourceLocation !== void 0 ? resourceLocation : lro.requestPath);\n    }\n}\nexport function processAzureAsyncOperationResult(lro, resourceLocation, lroResourceLocationConfig) {\n    return (response) => {\n        if (isAzureAsyncPollingDone(response.rawResponse)) {\n            if (resourceLocation === undefined) {\n                return Object.assign(Object.assign({}, response), { done: true });\n            }\n            else {\n                return Object.assign(Object.assign({}, response), { done: false, next: async () => {\n                        const finalResponse = await sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig);\n                        return Object.assign(Object.assign({}, (finalResponse !== null && finalResponse !== void 0 ? finalResponse : response)), { done: true });\n                    } });\n            }\n        }\n        return Object.assign(Object.assign({}, response), { done: false });\n    };\n}\n//# sourceMappingURL=azureAsyncPolling.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { failureStates, successStates } from \"./models\";\nimport { isUnexpectedPollingResponse } from \"./requestUtils\";\nfunction getProvisioningState(rawResponse) {\n    var _a, _b, _c;\n    const { properties, provisioningState } = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {};\n    const state = (_b = properties === null || properties === void 0 ? void 0 : properties.provisioningState) !== null && _b !== void 0 ? _b : provisioningState;\n    return (_c = state === null || state === void 0 ? void 0 : state.toLowerCase()) !== null && _c !== void 0 ? _c : \"succeeded\";\n}\nexport function isBodyPollingDone(rawResponse) {\n    const state = getProvisioningState(rawResponse);\n    if (isUnexpectedPollingResponse(rawResponse) || failureStates.includes(state)) {\n        throw new Error(`The long running operation has failed. The provisioning state: ${state}.`);\n    }\n    return successStates.includes(state);\n}\n/**\n * Creates a polling strategy based on BodyPolling which uses the provisioning state\n * from the result to determine the current operation state\n */\nexport function processBodyPollingOperationResult(response) {\n    return Object.assign(Object.assign({}, response), { done: isBodyPollingDone(response.rawResponse) });\n}\n//# sourceMappingURL=bodyPolling.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport { LroEngine } from \"./lroEngine\";\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isUnexpectedPollingResponse } from \"./requestUtils\";\nfunction isLocationPollingDone(rawResponse) {\n    return !isUnexpectedPollingResponse(rawResponse) && rawResponse.statusCode !== 202;\n}\nexport function processLocationPollingOperationResult(response) {\n    return Object.assign(Object.assign({}, response), { done: isLocationPollingDone(response.rawResponse) });\n}\n//# sourceMappingURL=locationPolling.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nexport const logger = createClientLogger(\"core-lro\");\n//# sourceMappingURL=logger.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Poller } from \"../poller\";\nimport { GenericPollOperation } from \"./operation\";\nfunction deserializeState(serializedState) {\n    try {\n        return JSON.parse(serializedState).state;\n    }\n    catch (e) {\n        throw new Error(`LroEngine: Unable to deserialize state: ${serializedState}`);\n    }\n}\n/**\n * The LRO Engine, a class that performs polling.\n */\nexport class LroEngine extends Poller {\n    constructor(lro, options) {\n        const { intervalInMs = 2000, resumeFrom } = options || {};\n        const state = resumeFrom\n            ? deserializeState(resumeFrom)\n            : {};\n        const operation = new GenericPollOperation(state, lro, options === null || options === void 0 ? void 0 : options.lroResourceLocationConfig, options === null || options === void 0 ? void 0 : options.processResult, options === null || options === void 0 ? void 0 : options.updateState, options === null || options === void 0 ? void 0 : options.isDone);\n        super(operation);\n        this.config = { intervalInMs: intervalInMs };\n        operation.setPollerConfig(this.config);\n    }\n    /**\n     * The method used by the poller to wait before attempting to update its operation.\n     */\n    delay() {\n        return new Promise((resolve) => setTimeout(() => resolve(), this.config.intervalInMs));\n    }\n}\n//# sourceMappingURL=lroEngine.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const successStates = [\"succeeded\"];\nexport const failureStates = [\"failed\", \"canceled\", \"cancelled\"];\n/**\n * The LRO states that signal that the LRO has completed.\n */\nexport const terminalStates = successStates.concat(failureStates);\n//# sourceMappingURL=models.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { logger } from \"./logger\";\nimport { getPollingUrl } from \"./requestUtils\";\nimport { createGetLroStatusFromResponse, createInitializeState, createPoll } from \"./stateMachine\";\nexport class GenericPollOperation {\n    constructor(state, lro, lroResourceLocationConfig, processResult, updateState, isDone) {\n        this.state = state;\n        this.lro = lro;\n        this.lroResourceLocationConfig = lroResourceLocationConfig;\n        this.processResult = processResult;\n        this.updateState = updateState;\n        this.isDone = isDone;\n    }\n    setPollerConfig(pollerConfig) {\n        this.pollerConfig = pollerConfig;\n    }\n    /**\n     * General update function for LROPoller, the general process is as follows\n     * 1. Check initial operation result to determine the strategy to use\n     *  - Strategies: Location, Azure-AsyncOperation, Original Uri\n     * 2. Check if the operation result has a terminal state\n     *  - Terminal state will be determined by each strategy\n     *  2.1 If it is terminal state Check if a final GET request is required, if so\n     *      send final GET request and return result from operation. If no final GET\n     *      is required, just return the result from operation.\n     *      - Determining what to call for final request is responsibility of each strategy\n     *  2.2 If it is not terminal state, call the polling operation and go to step 1\n     *      - Determining what to call for polling is responsibility of each strategy\n     *      - Strategies will always use the latest URI for polling if provided otherwise\n     *        the last known one\n     */\n    async update(options) {\n        var _a, _b, _c;\n        const state = this.state;\n        let lastResponse = undefined;\n        if (!state.isStarted) {\n            const initializeState = createInitializeState(state, this.lro.requestPath, this.lro.requestMethod);\n            lastResponse = await this.lro.sendInitialRequest();\n            initializeState(lastResponse);\n        }\n        if (!state.isCompleted) {\n            if (!this.poll || !this.getLroStatusFromResponse) {\n                if (!state.config) {\n                    throw new Error(\"Bad state: LRO mode is undefined. Please check if the serialized state is well-formed.\");\n                }\n                const isDone = this.isDone;\n                this.getLroStatusFromResponse = isDone\n                    ? (response) => (Object.assign(Object.assign({}, response), { done: isDone(response.flatResponse, this.state) }))\n                    : createGetLroStatusFromResponse(this.lro, state.config, this.lroResourceLocationConfig);\n                this.poll = createPoll(this.lro);\n            }\n            if (!state.pollingURL) {\n                throw new Error(\"Bad state: polling URL is undefined. Please check if the serialized state is well-formed.\");\n            }\n            const currentState = await this.poll(state.pollingURL, this.pollerConfig, this.getLroStatusFromResponse);\n            logger.verbose(`LRO: polling response: ${JSON.stringify(currentState.rawResponse)}`);\n            if (currentState.done) {\n                state.result = this.processResult\n                    ? this.processResult(currentState.flatResponse, state)\n                    : currentState.flatResponse;\n                state.isCompleted = true;\n            }\n            else {\n                this.poll = (_a = currentState.next) !== null && _a !== void 0 ? _a : this.poll;\n                state.pollingURL = getPollingUrl(currentState.rawResponse, state.pollingURL);\n            }\n            lastResponse = currentState;\n        }\n        logger.verbose(`LRO: current state: ${JSON.stringify(state)}`);\n        if (lastResponse) {\n            (_b = this.updateState) === null || _b === void 0 ? void 0 : _b.call(this, state, lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.rawResponse);\n        }\n        else {\n            logger.error(`LRO: no response was received`);\n        }\n        (_c = options === null || options === void 0 ? void 0 : options.fireProgress) === null || _c === void 0 ? void 0 : _c.call(options, state);\n        return this;\n    }\n    async cancel() {\n        this.state.isCancelled = true;\n        return this;\n    }\n    /**\n     * Serializes the Poller operation.\n     */\n    toString() {\n        return JSON.stringify({\n            state: this.state\n        });\n    }\n}\n//# sourceMappingURL=operation.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function processPassthroughOperationResult(response) {\n    return Object.assign(Object.assign({}, response), { done: true });\n}\n//# sourceMappingURL=passthrough.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Detects where the continuation token is and returns it. Notice that azure-asyncoperation\n * must be checked first before the other location headers because there are scenarios\n * where both azure-asyncoperation and location could be present in the same response but\n * azure-asyncoperation should be the one to use for polling.\n */\nexport function getPollingUrl(rawResponse, defaultPath) {\n    var _a, _b, _c;\n    return ((_c = (_b = (_a = getAzureAsyncOperation(rawResponse)) !== null && _a !== void 0 ? _a : getLocation(rawResponse)) !== null && _b !== void 0 ? _b : getOperationLocation(rawResponse)) !== null && _c !== void 0 ? _c : defaultPath);\n}\nfunction getLocation(rawResponse) {\n    return rawResponse.headers[\"location\"];\n}\nfunction getOperationLocation(rawResponse) {\n    return rawResponse.headers[\"operation-location\"];\n}\nfunction getAzureAsyncOperation(rawResponse) {\n    return rawResponse.headers[\"azure-asyncoperation\"];\n}\nexport function inferLroMode(requestPath, requestMethod, rawResponse) {\n    if (getAzureAsyncOperation(rawResponse) !== undefined) {\n        return {\n            mode: \"AzureAsync\",\n            resourceLocation: requestMethod === \"PUT\"\n                ? requestPath\n                : requestMethod === \"POST\"\n                    ? getLocation(rawResponse)\n                    : undefined\n        };\n    }\n    else if (getLocation(rawResponse) !== undefined ||\n        getOperationLocation(rawResponse) !== undefined) {\n        return {\n            mode: \"Location\"\n        };\n    }\n    else if ([\"PUT\", \"PATCH\"].includes(requestMethod)) {\n        return {\n            mode: \"Body\"\n        };\n    }\n    return {};\n}\nclass SimpleRestError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = \"RestError\";\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, SimpleRestError.prototype);\n    }\n}\nexport function isUnexpectedInitialResponse(rawResponse) {\n    const code = rawResponse.statusCode;\n    if (![203, 204, 202, 201, 200, 500].includes(code)) {\n        throw new SimpleRestError(`Received unexpected HTTP status code ${code} in the initial response. This may indicate a server issue.`, code);\n    }\n    return false;\n}\nexport function isUnexpectedPollingResponse(rawResponse) {\n    const code = rawResponse.statusCode;\n    if (![202, 201, 200, 500].includes(code)) {\n        throw new SimpleRestError(`Received unexpected HTTP status code ${code} while polling. This may indicate a server issue.`, code);\n    }\n    return false;\n}\n//# sourceMappingURL=requestUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { processAzureAsyncOperationResult } from \"./azureAsyncPolling\";\nimport { isBodyPollingDone, processBodyPollingOperationResult } from \"./bodyPolling\";\nimport { processLocationPollingOperationResult } from \"./locationPolling\";\nimport { logger } from \"./logger\";\nimport { processPassthroughOperationResult } from \"./passthrough\";\nimport { getPollingUrl, inferLroMode, isUnexpectedInitialResponse } from \"./requestUtils\";\n/**\n * creates a stepping function that maps an LRO state to another.\n */\nexport function createGetLroStatusFromResponse(lroPrimitives, config, lroResourceLocationConfig) {\n    switch (config.mode) {\n        case \"AzureAsync\": {\n            return processAzureAsyncOperationResult(lroPrimitives, config.resourceLocation, lroResourceLocationConfig);\n        }\n        case \"Location\": {\n            return processLocationPollingOperationResult;\n        }\n        case \"Body\": {\n            return processBodyPollingOperationResult;\n        }\n        default: {\n            return processPassthroughOperationResult;\n        }\n    }\n}\n/**\n * Creates a polling operation.\n */\nexport function createPoll(lroPrimitives) {\n    return async (path, pollerConfig, getLroStatusFromResponse) => {\n        const response = await lroPrimitives.sendPollRequest(path);\n        const retryAfter = response.rawResponse.headers[\"retry-after\"];\n        if (retryAfter !== undefined) {\n            const retryAfterInMs = parseInt(retryAfter);\n            pollerConfig.intervalInMs = isNaN(retryAfterInMs)\n                ? calculatePollingIntervalFromDate(new Date(retryAfter), pollerConfig.intervalInMs)\n                : retryAfterInMs;\n        }\n        return getLroStatusFromResponse(response);\n    };\n}\nfunction calculatePollingIntervalFromDate(retryAfterDate, defaultIntervalInMs) {\n    const timeNow = Math.floor(new Date().getTime());\n    const retryAfterTime = retryAfterDate.getTime();\n    if (timeNow < retryAfterTime) {\n        return retryAfterTime - timeNow;\n    }\n    return defaultIntervalInMs;\n}\n/**\n * Creates a callback to be used to initialize the polling operation state.\n * @param state - of the polling operation\n * @param operationSpec - of the LRO\n * @param callback - callback to be called when the operation is done\n * @returns callback that initializes the state of the polling operation\n */\nexport function createInitializeState(state, requestPath, requestMethod) {\n    return (response) => {\n        if (isUnexpectedInitialResponse(response.rawResponse))\n            return true;\n        state.initialRawResponse = response.rawResponse;\n        state.isStarted = true;\n        state.pollingURL = getPollingUrl(state.initialRawResponse, requestPath);\n        state.config = inferLroMode(requestPath, requestMethod, state.initialRawResponse);\n        /** short circuit polling if body polling is done in the initial request */\n        if (state.config.mode === undefined ||\n            (state.config.mode === \"Body\" && isBodyPollingDone(state.initialRawResponse))) {\n            state.result = response.flatResponse;\n            state.isCompleted = true;\n        }\n        logger.verbose(`LRO: initial state: ${JSON.stringify(state)}`);\n        return Boolean(state.isCompleted);\n    };\n}\n//# sourceMappingURL=stateMachine.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport {};\n//# sourceMappingURL=pollOperation.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PollerStoppedError\";\n        Object.setPrototypeOf(this, PollerStoppedError.prototype);\n    }\n}\n/**\n * When a poller is cancelled through the `cancelOperation` method,\n * the poller will be rejected with an instance of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PollerCancelledError\";\n        Object.setPrototypeOf(this, PollerCancelledError.prototype);\n    }\n}\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport class Poller {\n    /**\n     * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n     *\n     * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n     * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n     * operation has already been defined, at least its basic properties. The code below shows how to approach\n     * the definition of the constructor of a new custom poller.\n     *\n     * ```ts\n     * export class MyPoller extends Poller<MyOperationState, string> {\n     *   constructor({\n     *     // Anything you might need outside of the basics\n     *   }) {\n     *     let state: MyOperationState = {\n     *       privateProperty: private,\n     *       publicProperty: public,\n     *     };\n     *\n     *     const operation = {\n     *       state,\n     *       update,\n     *       cancel,\n     *       toString\n     *     }\n     *\n     *     // Sending the operation to the parent's constructor.\n     *     super(operation);\n     *\n     *     // You can assign more local properties here.\n     *   }\n     * }\n     * ```\n     *\n     * Inside of this constructor, a new promise is created. This will be used to\n     * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n     * resolve and reject methods are also used internally to control when to resolve\n     * or reject anyone waiting for the poller to finish.\n     *\n     * The constructor of a custom implementation of a poller is where any serialized version of\n     * a previous poller's operation should be deserialized into the operation sent to the\n     * base constructor. For example:\n     *\n     * ```ts\n     * export class MyPoller extends Poller<MyOperationState, string> {\n     *   constructor(\n     *     baseOperation: string | undefined\n     *   ) {\n     *     let state: MyOperationState = {};\n     *     if (baseOperation) {\n     *       state = {\n     *         ...JSON.parse(baseOperation).state,\n     *         ...state\n     *       };\n     *     }\n     *     const operation = {\n     *       state,\n     *       // ...\n     *     }\n     *     super(operation);\n     *   }\n     * }\n     * ```\n     *\n     * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n     */\n    constructor(operation) {\n        this.stopped = true;\n        this.pollProgressCallbacks = [];\n        this.operation = operation;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n        // The above warning would get thrown if `poller.poll` is called, it returns an error,\n        // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n        this.promise.catch(() => {\n            /* intentionally blank */\n        });\n    }\n    /**\n     * @internal\n     * Starts a loop that will break only if the poller is done\n     * or if the poller is stopped.\n     */\n    async startPolling() {\n        if (this.stopped) {\n            this.stopped = false;\n        }\n        while (!this.isStopped() && !this.isDone()) {\n            await this.poll();\n            await this.delay();\n        }\n    }\n    /**\n     * @internal\n     * pollOnce does one polling, by calling to the update method of the underlying\n     * poll operation to make any relevant change effective.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    async pollOnce(options = {}) {\n        try {\n            if (!this.isDone()) {\n                this.operation = await this.operation.update({\n                    abortSignal: options.abortSignal,\n                    fireProgress: this.fireProgress.bind(this)\n                });\n                if (this.isDone() && this.resolve) {\n                    // If the poller has finished polling, this means we now have a result.\n                    // However, it can be the case that TResult is instantiated to void, so\n                    // we are not expecting a result anyway. To assert that we might not\n                    // have a result eventually after finishing polling, we cast the result\n                    // to TResult.\n                    this.resolve(this.operation.state.result);\n                }\n            }\n        }\n        catch (e) {\n            this.operation.state.error = e;\n            if (this.reject) {\n                this.reject(e);\n            }\n            throw e;\n        }\n    }\n    /**\n     * @internal\n     * fireProgress calls the functions passed in via onProgress the method of the poller.\n     *\n     * It loops over all of the callbacks received from onProgress, and executes them, sending them\n     * the current operation state.\n     *\n     * @param state - The current operation state.\n     */\n    fireProgress(state) {\n        for (const callback of this.pollProgressCallbacks) {\n            callback(state);\n        }\n    }\n    /**\n     * @internal\n     * Invokes the underlying operation's cancel method, and rejects the\n     * pollUntilDone promise.\n     */\n    async cancelOnce(options = {}) {\n        this.operation = await this.operation.cancel(options);\n        if (this.reject) {\n            this.reject(new PollerCancelledError(\"Poller cancelled\"));\n        }\n    }\n    /**\n     * Returns a promise that will resolve once a single polling request finishes.\n     * It does this by calling the update method of the Poller's operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    poll(options = {}) {\n        if (!this.pollOncePromise) {\n            this.pollOncePromise = this.pollOnce(options);\n            const clearPollOncePromise = () => {\n                this.pollOncePromise = undefined;\n            };\n            this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n        }\n        return this.pollOncePromise;\n    }\n    /**\n     * Returns a promise that will resolve once the underlying operation is completed.\n     */\n    async pollUntilDone() {\n        if (this.stopped) {\n            this.startPolling().catch(this.reject);\n        }\n        return this.promise;\n    }\n    /**\n     * Invokes the provided callback after each polling is completed,\n     * sending the current state of the poller's operation.\n     *\n     * It returns a method that can be used to stop receiving updates on the given callback function.\n     */\n    onProgress(callback) {\n        this.pollProgressCallbacks.push(callback);\n        return () => {\n            this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n        };\n    }\n    /**\n     * Returns true if the poller has finished polling.\n     */\n    isDone() {\n        const state = this.operation.state;\n        return Boolean(state.isCompleted || state.isCancelled || state.error);\n    }\n    /**\n     * Stops the poller from continuing to poll.\n     */\n    stopPolling() {\n        if (!this.stopped) {\n            this.stopped = true;\n            if (this.reject) {\n                this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n            }\n        }\n    }\n    /**\n     * Returns true if the poller is stopped.\n     */\n    isStopped() {\n        return this.stopped;\n    }\n    /**\n     * Attempts to cancel the underlying operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * If it's called again before it finishes, it will throw an error.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    cancelOperation(options = {}) {\n        if (!this.stopped) {\n            this.stopped = true;\n        }\n        if (!this.cancelPromise) {\n            this.cancelPromise = this.cancelOnce(options);\n        }\n        else if (options.abortSignal) {\n            throw new Error(\"A cancel request is currently pending\");\n        }\n        return this.cancelPromise;\n    }\n    /**\n     * Returns the state of the operation.\n     *\n     * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n     * implementations of the pollers can customize what's shared with the public by writing their own\n     * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n     * and a public type representing a safe to share subset of the properties of the internal state.\n     * Their definition of getOperationState can then return their public type.\n     *\n     * Example:\n     *\n     * ```ts\n     * // Let's say we have our poller's operation state defined as:\n     * interface MyOperationState extends PollOperationState<ResultType> {\n     *   privateProperty?: string;\n     *   publicProperty?: string;\n     * }\n     *\n     * // To allow us to have a true separation of public and private state, we have to define another interface:\n     * interface PublicState extends PollOperationState<ResultType> {\n     *   publicProperty?: string;\n     * }\n     *\n     * // Then, we define our Poller as follows:\n     * export class MyPoller extends Poller<MyOperationState, ResultType> {\n     *   // ... More content is needed here ...\n     *\n     *   public getOperationState(): PublicState {\n     *     const state: PublicState = this.operation.state;\n     *     return {\n     *       // Properties from PollOperationState<TResult>\n     *       isStarted: state.isStarted,\n     *       isCompleted: state.isCompleted,\n     *       isCancelled: state.isCancelled,\n     *       error: state.error,\n     *       result: state.result,\n     *\n     *       // The only other property needed by PublicState.\n     *       publicProperty: state.publicProperty\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * You can see this in the tests of this repository, go to the file:\n     * `../test/utils/testPoller.ts`\n     * and look for the getOperationState implementation.\n     */\n    getOperationState() {\n        return this.operation.state;\n    }\n    /**\n     * Returns the result value of the operation,\n     * regardless of the state of the poller.\n     * It can return undefined or an incomplete form of the final TResult value\n     * depending on the implementation.\n     */\n    getResult() {\n        const state = this.operation.state;\n        return state.result;\n    }\n    /**\n     * Returns a serialized version of the poller's operation\n     * by invoking the operation's toString method.\n     */\n    toString() {\n        return this.operation.toString();\n    }\n}\n//# sourceMappingURL=poller.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\n/**\n * returns an async iterator that iterates over results. It also has a `byPage`\n * method that returns pages of items at once.\n *\n * @param pagedResult - an object that specifies how to get pages.\n * @returns a paged async iterator that iterates over results.\n */\nexport function getPagedAsyncIterator(pagedResult) {\n    var _a;\n    const iter = getItemAsyncIterator(pagedResult);\n    return {\n        next() {\n            return iter.next();\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        byPage: (_a = pagedResult === null || pagedResult === void 0 ? void 0 : pagedResult.byPage) !== null && _a !== void 0 ? _a : ((settings) => {\n            return getPageAsyncIterator(pagedResult, settings === null || settings === void 0 ? void 0 : settings.maxPageSize);\n        })\n    };\n}\nfunction getItemAsyncIterator(pagedResult, maxPageSize) {\n    return __asyncGenerator(this, arguments, function* getItemAsyncIterator_1() {\n        var e_1, _a;\n        const pages = getPageAsyncIterator(pagedResult, maxPageSize);\n        const firstVal = yield __await(pages.next());\n        // if the result does not have an array shape, i.e. TPage = TElement, then we return it as is\n        if (!Array.isArray(firstVal.value)) {\n            yield yield __await(firstVal.value);\n            // `pages` is of type `AsyncIterableIterator<TPage>` but TPage = TElement in this case\n            yield __await(yield* __asyncDelegator(__asyncValues(pages)));\n        }\n        else {\n            yield __await(yield* __asyncDelegator(__asyncValues(firstVal.value)));\n            try {\n                for (var pages_1 = __asyncValues(pages), pages_1_1; pages_1_1 = yield __await(pages_1.next()), !pages_1_1.done;) {\n                    const page = pages_1_1.value;\n                    // pages is of type `AsyncIterableIterator<TPage>` so `page` is of type `TPage`. In this branch,\n                    // it must be the case that `TPage = TElement[]`\n                    yield __await(yield* __asyncDelegator(__asyncValues(page)));\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (pages_1_1 && !pages_1_1.done && (_a = pages_1.return)) yield __await(_a.call(pages_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    });\n}\nfunction getPageAsyncIterator(pagedResult, maxPageSize) {\n    return __asyncGenerator(this, arguments, function* getPageAsyncIterator_1() {\n        let response = yield __await(pagedResult.getPage(pagedResult.firstPageLink, maxPageSize));\n        yield yield __await(response.page);\n        while (response.nextPageLink) {\n            response = yield __await(pagedResult.getPage(response.nextPageLink, maxPageSize));\n            yield yield __await(response.page);\n        }\n    });\n}\n//# sourceMappingURL=getPagedAsyncIterator.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport \"@azure/core-asynciterator-polyfill\";\nexport * from \"./models\";\nexport * from \"./getPagedAsyncIterator\";\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport {};\n//# sourceMappingURL=models.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { SpanKind, setSpan, context as otContext, getTracer } from \"./interfaces\";\nimport { trace, INVALID_SPAN_CONTEXT } from \"@opentelemetry/api\";\nexport function isTracingDisabled() {\n    var _a;\n    if (typeof process === \"undefined\") {\n        // not supported in browser for now without polyfills\n        return false;\n    }\n    const azureTracingDisabledValue = (_a = process.env.AZURE_TRACING_DISABLED) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    if (azureTracingDisabledValue === \"false\" || azureTracingDisabledValue === \"0\") {\n        return false;\n    }\n    return Boolean(azureTracingDisabledValue);\n}\n/**\n * Creates a function that can be used to create spans using the global tracer.\n *\n * Usage:\n *\n * ```typescript\n * // once\n * const createSpan = createSpanFunction({ packagePrefix: \"Azure.Data.AppConfiguration\", namespace: \"Microsoft.AppConfiguration\" });\n *\n * // in each operation\n * const span = createSpan(\"deleteConfigurationSetting\", operationOptions);\n *    // code...\n * span.end();\n * ```\n *\n * @hidden\n * @param args - allows configuration of the prefix for each span as well as the az.namespace field.\n */\nexport function createSpanFunction(args) {\n    return function (operationName, operationOptions) {\n        const tracer = getTracer();\n        const tracingOptions = (operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) || {};\n        const spanOptions = Object.assign({ kind: SpanKind.INTERNAL }, tracingOptions.spanOptions);\n        const spanName = args.packagePrefix ? `${args.packagePrefix}.${operationName}` : operationName;\n        let span;\n        if (isTracingDisabled()) {\n            span = trace.wrapSpanContext(INVALID_SPAN_CONTEXT);\n        }\n        else {\n            span = tracer.startSpan(spanName, spanOptions, tracingOptions.tracingContext);\n        }\n        if (args.namespace) {\n            span.setAttribute(\"az.namespace\", args.namespace);\n        }\n        let newSpanOptions = tracingOptions.spanOptions || {};\n        if (span.isRecording() && args.namespace) {\n            newSpanOptions = Object.assign(Object.assign({}, tracingOptions.spanOptions), { attributes: Object.assign(Object.assign({}, spanOptions.attributes), { \"az.namespace\": args.namespace }) });\n        }\n        const newTracingOptions = Object.assign(Object.assign({}, tracingOptions), { spanOptions: newSpanOptions, tracingContext: setSpan(tracingOptions.tracingContext || otContext.active(), span) });\n        const newOperationOptions = Object.assign(Object.assign({}, operationOptions), { tracingOptions: newTracingOptions });\n        return {\n            span,\n            updatedOptions: newOperationOptions\n        };\n    };\n}\n//# sourceMappingURL=createSpan.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// Tracers and wrappers\nexport { createSpanFunction } from \"./createSpan\";\n// Shared interfaces\nexport { context, getSpan, getSpanContext, getTracer, isSpanContextValid, setSpan, setSpanContext, SpanKind, SpanStatusCode } from \"./interfaces\";\n// Utilities\nexport { extractSpanContextFromTraceParentHeader, getTraceParentHeader } from \"./utils/traceParentHeader\";\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { context as otContext, trace as otTrace } from \"@opentelemetry/api\";\n/**\n * The kind of span.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n/**\n * Return the span if one exists\n *\n * @param context - context to get span from\n */\nexport function getSpan(context) {\n    return otTrace.getSpan(context);\n}\n/**\n * Set the span on a context\n *\n * @param context - context to use as parent\n * @param span - span to set active\n */\nexport function setSpan(context, span) {\n    return otTrace.setSpan(context, span);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context - context to set active span on\n * @param spanContext - span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return otTrace.setSpanContext(context, spanContext);\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context - context to get values from\n */\nexport function getSpanContext(context) {\n    return otTrace.getSpanContext(context);\n}\n/**\n * Returns true of the given {@link SpanContext} is valid.\n * A valid {@link SpanContext} is one which has a valid trace ID and span ID as per the spec.\n *\n * @param context - the {@link SpanContext} to validate.\n *\n * @returns true if the {@link SpanContext} is valid, false otherwise.\n */\nexport function isSpanContextValid(context) {\n    return otTrace.isSpanContextValid(context);\n}\nexport function getTracer(name, version) {\n    return otTrace.getTracer(name || \"azure/core-tracing\", version);\n}\n/** Entrypoint for context API */\nexport const context = otContext;\n/** SpanStatusCode */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=interfaces.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst VERSION = \"00\";\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent - Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(traceParentHeader) {\n    const parts = traceParentHeader.split(\"-\");\n    if (parts.length !== 4) {\n        return;\n    }\n    const [version, traceId, spanId, traceOptions] = parts;\n    if (version !== VERSION) {\n        return;\n    }\n    const traceFlags = parseInt(traceOptions, 16);\n    const spanContext = {\n        spanId,\n        traceId,\n        traceFlags\n    };\n    return spanContext;\n}\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext - Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext) {\n    const missingFields = [];\n    if (!spanContext.traceId) {\n        missingFields.push(\"traceId\");\n    }\n    if (!spanContext.spanId) {\n        missingFields.push(\"spanId\");\n    }\n    if (missingFields.length) {\n        return;\n    }\n    const flags = spanContext.traceFlags || 0 /* NONE */;\n    const hexFlags = flags.toString(16);\n    const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n    // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n    return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n//# sourceMappingURL=traceParentHeader.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __read, __spread, __values } from \"tslib\";\n/* eslint-disable no-invalid-this */\nimport { log } from \"./log\";\nvar debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nvar enabledString;\nvar enabledNamespaces = [];\nvar skippedNamespaces = [];\nvar debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nvar debugObj = Object.assign(function (namespace) {\n    return createDebugger(namespace);\n}, {\n    enable: enable,\n    enabled: enabled,\n    disable: disable,\n    log: log\n});\nfunction enable(namespaces) {\n    var e_1, _a, e_2, _b;\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    var wildcard = /\\*/g;\n    var namespaceList = namespaces.split(\",\").map(function (ns) { return ns.trim().replace(wildcard, \".*?\"); });\n    try {\n        for (var namespaceList_1 = __values(namespaceList), namespaceList_1_1 = namespaceList_1.next(); !namespaceList_1_1.done; namespaceList_1_1 = namespaceList_1.next()) {\n            var ns = namespaceList_1_1.value;\n            if (ns.startsWith(\"-\")) {\n                skippedNamespaces.push(new RegExp(\"^\" + ns.substr(1) + \"$\"));\n            }\n            else {\n                enabledNamespaces.push(new RegExp(\"^\" + ns + \"$\"));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (namespaceList_1_1 && !namespaceList_1_1.done && (_a = namespaceList_1.return)) _a.call(namespaceList_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    try {\n        for (var debuggers_1 = __values(debuggers), debuggers_1_1 = debuggers_1.next(); !debuggers_1_1.done; debuggers_1_1 = debuggers_1.next()) {\n            var instance = debuggers_1_1.value;\n            instance.enabled = enabled(instance.namespace);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (debuggers_1_1 && !debuggers_1_1.done && (_b = debuggers_1.return)) _b.call(debuggers_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n}\nfunction enabled(namespace) {\n    var e_3, _a, e_4, _b;\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    try {\n        for (var skippedNamespaces_1 = __values(skippedNamespaces), skippedNamespaces_1_1 = skippedNamespaces_1.next(); !skippedNamespaces_1_1.done; skippedNamespaces_1_1 = skippedNamespaces_1.next()) {\n            var skipped = skippedNamespaces_1_1.value;\n            if (skipped.test(namespace)) {\n                return false;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (skippedNamespaces_1_1 && !skippedNamespaces_1_1.done && (_a = skippedNamespaces_1.return)) _a.call(skippedNamespaces_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    try {\n        for (var enabledNamespaces_1 = __values(enabledNamespaces), enabledNamespaces_1_1 = enabledNamespaces_1.next(); !enabledNamespaces_1_1.done; enabledNamespaces_1_1 = enabledNamespaces_1.next()) {\n            var enabledNamespace = enabledNamespaces_1_1.value;\n            if (enabledNamespace.test(namespace)) {\n                return true;\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (enabledNamespaces_1_1 && !enabledNamespaces_1_1.done && (_b = enabledNamespaces_1.return)) _b.call(enabledNamespaces_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return false;\n}\nfunction disable() {\n    var result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    var newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy: destroy,\n        log: debugObj.log,\n        namespace: namespace,\n        extend: extend\n    });\n    function debug() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = namespace + \" \" + args[0];\n        }\n        newDebugger.log.apply(newDebugger, __spread(args));\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    var index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    var newDebugger = createDebugger(this.namespace + \":\" + namespace);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\nexport default debugObj;\n//# sourceMappingURL=debug.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __read, __spread, __values } from \"tslib\";\nimport debug from \"./debug\";\nvar registeredLoggers = new Set();\nvar logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nvar azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport var AzureLogger = debug(\"azure\");\nAzureLogger.log = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    debug.log.apply(debug, __spread(args));\n};\nvar AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(\"AZURE_LOG_LEVEL set to unknown log level '\" + logLevelFromEnv + \"'; logging is not enabled. Acceptable values: \" + AZURE_LOG_LEVELS.join(\", \") + \".\");\n    }\n}\n/**\n * Immediately enables logging at the specified log level.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level) {\n    var e_1, _a;\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(\"Unknown log level '\" + level + \"'. Acceptable values: \" + AZURE_LOG_LEVELS.join(\",\"));\n    }\n    azureLogLevel = level;\n    var enabledNamespaces = [];\n    try {\n        for (var registeredLoggers_1 = __values(registeredLoggers), registeredLoggers_1_1 = registeredLoggers_1.next(); !registeredLoggers_1_1.done; registeredLoggers_1_1 = registeredLoggers_1.next()) {\n            var logger = registeredLoggers_1_1.value;\n            if (shouldEnable(logger)) {\n                enabledNamespaces.push(logger.namespace);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (registeredLoggers_1_1 && !registeredLoggers_1_1.done && (_a = registeredLoggers_1.return)) _a.call(registeredLoggers_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    debug.enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n    return azureLogLevel;\n}\nvar levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace) {\n    var clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\")\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        parent.log.apply(parent, __spread(args));\n    };\n}\nfunction createLogger(parent, level) {\n    var logger = Object.assign(parent.extend(level), {\n        level: level\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        var enabledNamespaces = debug.disable();\n        debug.enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { __read, __spread } from \"tslib\";\nexport function log() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length > 0) {\n        var firstArg = String(args[0]);\n        if (firstArg.includes(\":error\")) {\n            console.error.apply(console, __spread(args));\n        }\n        else if (firstArg.includes(\":warning\")) {\n            console.warn.apply(console, __spread(args));\n        }\n        else if (firstArg.includes(\":info\")) {\n            console.info.apply(console, __spread(args));\n        }\n        else if (firstArg.includes(\":verbose\")) {\n            console.debug.apply(console, __spread(args));\n        }\n        else {\n            console.debug.apply(console, __spread(args));\n        }\n    }\n}\n//# sourceMappingURL=log.browser.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport {};\n//# sourceMappingURL=BatchResponse.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpHeaders } from \"@azure/core-http\";\nimport { HTTP_VERSION_1_1, HTTP_LINE_ENDING, HeaderConstants, HTTPURLConnection } from \"./utils/constants\";\nimport { getBodyAsText } from \"./BatchUtils\";\nimport { logger } from \"./log\";\nconst HTTP_HEADER_DELIMITER = \": \";\nconst SPACE_DELIMITER = \" \";\nconst NOT_FOUND = -1;\n/**\n * Util class for parsing batch response.\n */\nexport class BatchResponseParser {\n    constructor(batchResponse, subRequests) {\n        if (!batchResponse || !batchResponse.contentType) {\n            // In special case(reported), server may return invalid content-type which could not be parsed.\n            throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n        }\n        if (!subRequests || subRequests.size === 0) {\n            // This should be prevent during coding.\n            throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n        }\n        this.batchResponse = batchResponse;\n        this.subRequests = subRequests;\n        this.responseBatchBoundary = this.batchResponse.contentType.split(\"=\")[1];\n        this.perResponsePrefix = `--${this.responseBatchBoundary}${HTTP_LINE_ENDING}`;\n        this.batchResponseEnding = `--${this.responseBatchBoundary}--`;\n    }\n    // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n    async parseBatchResponse() {\n        // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n        // sub request's response.\n        if (this.batchResponse._response.status !== HTTPURLConnection.HTTP_ACCEPTED) {\n            throw new Error(`Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`);\n        }\n        const responseBodyAsText = await getBodyAsText(this.batchResponse);\n        const subResponses = responseBodyAsText\n            .split(this.batchResponseEnding)[0] // string after ending is useless\n            .split(this.perResponsePrefix)\n            .slice(1); // string before first response boundary is useless\n        const subResponseCount = subResponses.length;\n        // Defensive coding in case of potential error parsing.\n        // Note: subResponseCount == 1 is special case where sub request is invalid.\n        // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n        // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n        if (subResponseCount !== this.subRequests.size && subResponseCount !== 1) {\n            throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n        }\n        const deserializedSubResponses = new Array(subResponseCount);\n        let subResponsesSucceededCount = 0;\n        let subResponsesFailedCount = 0;\n        // Parse sub subResponses.\n        for (let index = 0; index < subResponseCount; index++) {\n            const subResponse = subResponses[index];\n            const deserializedSubResponse = {};\n            deserializedSubResponse.headers = new HttpHeaders();\n            const responseLines = subResponse.split(`${HTTP_LINE_ENDING}`);\n            let subRespHeaderStartFound = false;\n            let subRespHeaderEndFound = false;\n            let subRespFailed = false;\n            let contentId = NOT_FOUND;\n            for (const responseLine of responseLines) {\n                if (!subRespHeaderStartFound) {\n                    // Convention line to indicate content ID\n                    if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n                        contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n                    }\n                    // Http version line with status code indicates the start of sub request's response.\n                    // Example: HTTP/1.1 202 Accepted\n                    if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n                        subRespHeaderStartFound = true;\n                        const tokens = responseLine.split(SPACE_DELIMITER);\n                        deserializedSubResponse.status = parseInt(tokens[1]);\n                        deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n                    }\n                    continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n                }\n                if (responseLine.trim() === \"\") {\n                    // Sub response's header start line already found, and the first empty line indicates header end line found.\n                    if (!subRespHeaderEndFound) {\n                        subRespHeaderEndFound = true;\n                    }\n                    continue; // Skip empty line\n                }\n                // Note: when code reach here, it indicates subRespHeaderStartFound == true\n                if (!subRespHeaderEndFound) {\n                    if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n                        // Defensive coding to prevent from missing valuable lines.\n                        throw new Error(`Invalid state: find non-empty line '${responseLine}' without HTTP header delimiter '${HTTP_HEADER_DELIMITER}'.`);\n                    }\n                    // Parse headers of sub response.\n                    const tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n                    deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n                    if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n                        deserializedSubResponse.errorCode = tokens[1];\n                        subRespFailed = true;\n                    }\n                }\n                else {\n                    // Assemble body of sub response.\n                    if (!deserializedSubResponse.bodyAsText) {\n                        deserializedSubResponse.bodyAsText = \"\";\n                    }\n                    deserializedSubResponse.bodyAsText += responseLine;\n                }\n            } // Inner for end\n            // The response will contain the Content-ID header for each corresponding subrequest response to use for tracking.\n            // The Content-IDs are set to a valid index in the subrequests we sent. In the status code 202 path, we could expect it\n            // to be 1-1 mapping from the [0, subRequests.size) to the Content-IDs returned. If not, we simply don't return that\n            // unexpected subResponse in the parsed reponse and we can always look it up in the raw response for debugging purpose.\n            if (contentId !== NOT_FOUND &&\n                Number.isInteger(contentId) &&\n                contentId >= 0 &&\n                contentId < this.subRequests.size &&\n                deserializedSubResponses[contentId] === undefined) {\n                deserializedSubResponse._request = this.subRequests.get(contentId);\n                deserializedSubResponses[contentId] = deserializedSubResponse;\n            }\n            else {\n                logger.error(`subResponses[${index}] is dropped as the Content-ID is not found or invalid, Content-ID: ${contentId}`);\n            }\n            if (subRespFailed) {\n                subResponsesFailedCount++;\n            }\n            else {\n                subResponsesSucceededCount++;\n            }\n        }\n        return {\n            subResponses: deserializedSubResponses,\n            subResponsesSucceededCount: subResponsesSucceededCount,\n            subResponsesFailedCount: subResponsesFailedCount\n        };\n    }\n}\n//# sourceMappingURL=BatchResponseParser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { blobToString } from \"./utils/utils.browser\";\nexport async function getBodyAsText(batchResponse) {\n    const blob = (await batchResponse.blobBody);\n    return blobToString(blob);\n}\nexport function utf8ByteLength(str) {\n    return new Blob([str]).size;\n}\n//# sourceMappingURL=BatchUtils.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, deserializationPolicy, generateUuid, HttpHeaders, WebResource, isTokenCredential, bearerTokenAuthenticationPolicy, isNode } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { BlobClient } from \"./Clients\";\nimport { Mutex } from \"./utils/Mutex\";\nimport { Pipeline } from \"./Pipeline\";\nimport { attachCredential, getURLPath, getURLPathAndQuery, iEqual } from \"./utils/utils.common\";\nimport { HeaderConstants, BATCH_MAX_REQUEST, HTTP_VERSION_1_1, HTTP_LINE_ENDING, StorageOAuthScopes } from \"./utils/constants\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { createSpan } from \"./utils/tracing\";\n/**\n * A BlobBatch represents an aggregated set of operations on blobs.\n * Currently, only `delete` and `setAccessTier` are supported.\n */\nexport class BlobBatch {\n    constructor() {\n        this.batch = \"batch\";\n        this.batchRequest = new InnerBatchRequest();\n    }\n    /**\n     * Get the value of Content-Type for a batch request.\n     * The value must be multipart/mixed with a batch boundary.\n     * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n     */\n    getMultiPartContentType() {\n        return this.batchRequest.getMultipartContentType();\n    }\n    /**\n     * Get assembled HTTP request body for sub requests.\n     */\n    getHttpRequestBody() {\n        return this.batchRequest.getHttpRequestBody();\n    }\n    /**\n     * Get sub requests that are added into the batch request.\n     */\n    getSubRequests() {\n        return this.batchRequest.getSubRequests();\n    }\n    async addSubRequestInternal(subRequest, assembleSubRequestFunc) {\n        await Mutex.lock(this.batch);\n        try {\n            this.batchRequest.preAddSubRequest(subRequest);\n            await assembleSubRequestFunc();\n            this.batchRequest.postAddSubRequest(subRequest);\n        }\n        finally {\n            await Mutex.unlock(this.batch);\n        }\n    }\n    setBatchType(batchType) {\n        if (!this.batchType) {\n            this.batchType = batchType;\n        }\n        if (this.batchType !== batchType) {\n            throw new RangeError(`BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`);\n        }\n    }\n    async deleteBlob(urlOrBlobClient, credentialOrOptions, options) {\n        let url;\n        let credential;\n        if (typeof urlOrBlobClient === \"string\" &&\n            ((isNode && credentialOrOptions instanceof StorageSharedKeyCredential) ||\n                credentialOrOptions instanceof AnonymousCredential ||\n                isTokenCredential(credentialOrOptions))) {\n            // First overload\n            url = urlOrBlobClient;\n            credential = credentialOrOptions;\n        }\n        else if (urlOrBlobClient instanceof BlobClient) {\n            // Second overload\n            url = urlOrBlobClient.url;\n            credential = urlOrBlobClient.credential;\n            options = credentialOrOptions;\n        }\n        else {\n            throw new RangeError(\"Invalid arguments. Either url and credential, or BlobClient need be provided.\");\n        }\n        if (!options) {\n            options = {};\n        }\n        const { span, updatedOptions } = createSpan(\"BatchDeleteRequest-addSubRequest\", options);\n        try {\n            this.setBatchType(\"delete\");\n            await this.addSubRequestInternal({\n                url: url,\n                credential: credential\n            }, async () => {\n                await new BlobClient(url, this.batchRequest.createPipeline(credential)).delete(updatedOptions);\n            });\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async setBlobAccessTier(urlOrBlobClient, credentialOrTier, tierOrOptions, options) {\n        let url;\n        let credential;\n        let tier;\n        if (typeof urlOrBlobClient === \"string\" &&\n            ((isNode && credentialOrTier instanceof StorageSharedKeyCredential) ||\n                credentialOrTier instanceof AnonymousCredential ||\n                isTokenCredential(credentialOrTier))) {\n            // First overload\n            url = urlOrBlobClient;\n            credential = credentialOrTier;\n            tier = tierOrOptions;\n        }\n        else if (urlOrBlobClient instanceof BlobClient) {\n            // Second overload\n            url = urlOrBlobClient.url;\n            credential = urlOrBlobClient.credential;\n            tier = credentialOrTier;\n            options = tierOrOptions;\n        }\n        else {\n            throw new RangeError(\"Invalid arguments. Either url and credential, or BlobClient need be provided.\");\n        }\n        if (!options) {\n            options = {};\n        }\n        const { span, updatedOptions } = createSpan(\"BatchSetTierRequest-addSubRequest\", options);\n        try {\n            this.setBatchType(\"setAccessTier\");\n            await this.addSubRequestInternal({\n                url: url,\n                credential: credential\n            }, async () => {\n                await new BlobClient(url, this.batchRequest.createPipeline(credential)).setAccessTier(tier, updatedOptions);\n            });\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n/**\n * Inner batch request class which is responsible for assembling and serializing sub requests.\n * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.\n */\nclass InnerBatchRequest {\n    constructor() {\n        this.operationCount = 0;\n        this.body = \"\";\n        const tempGuid = generateUuid();\n        // batch_{batchid}\n        this.boundary = `batch_${tempGuid}`;\n        // --batch_{batchid}\n        // Content-Type: application/http\n        // Content-Transfer-Encoding: binary\n        this.subRequestPrefix = `--${this.boundary}${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: application/http${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`;\n        // multipart/mixed; boundary=batch_{batchid}\n        this.multipartContentType = `multipart/mixed; boundary=${this.boundary}`;\n        // --batch_{batchid}--\n        this.batchRequestEnding = `--${this.boundary}--`;\n        this.subRequests = new Map();\n    }\n    /**\n     * Create pipeline to assemble sub requests. The idea here is to use existing\n     * credential and serialization/deserialization components, with additional policies to\n     * filter unnecessary headers, assemble sub requests into request's body\n     * and intercept request from going to wire.\n     * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n     */\n    createPipeline(credential) {\n        const isAnonymousCreds = credential instanceof AnonymousCredential;\n        const policyFactoryLength = 3 + (isAnonymousCreds ? 0 : 1); // [deserializationPolicy, BatchHeaderFilterPolicyFactory, (Optional)Credential, BatchRequestAssemblePolicyFactory]\n        const factories = new Array(policyFactoryLength);\n        factories[0] = deserializationPolicy(); // Default deserializationPolicy is provided by protocol layer\n        factories[1] = new BatchHeaderFilterPolicyFactory(); // Use batch header filter policy to exclude unnecessary headers\n        if (!isAnonymousCreds) {\n            factories[2] = isTokenCredential(credential)\n                ? attachCredential(bearerTokenAuthenticationPolicy(credential, StorageOAuthScopes), credential)\n                : credential;\n        }\n        factories[policyFactoryLength - 1] = new BatchRequestAssemblePolicyFactory(this); // Use batch assemble policy to assemble request and intercept request from going to wire\n        return new Pipeline(factories, {});\n    }\n    appendSubRequestToBody(request) {\n        // Start to assemble sub request\n        this.body += [\n            this.subRequestPrefix,\n            `${HeaderConstants.CONTENT_ID}: ${this.operationCount}`,\n            \"\",\n            `${request.method.toString()} ${getURLPathAndQuery(request.url)} ${HTTP_VERSION_1_1}${HTTP_LINE_ENDING}` // sub request start line with method\n        ].join(HTTP_LINE_ENDING);\n        for (const header of request.headers.headersArray()) {\n            this.body += `${header.name}: ${header.value}${HTTP_LINE_ENDING}`;\n        }\n        this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n        // No body to assemble for current batch request support\n        // End to assemble sub request\n    }\n    preAddSubRequest(subRequest) {\n        if (this.operationCount >= BATCH_MAX_REQUEST) {\n            throw new RangeError(`Cannot exceed ${BATCH_MAX_REQUEST} sub requests in a single batch`);\n        }\n        // Fast fail if url for sub request is invalid\n        const path = getURLPath(subRequest.url);\n        if (!path || path === \"\") {\n            throw new RangeError(`Invalid url for sub request: '${subRequest.url}'`);\n        }\n    }\n    postAddSubRequest(subRequest) {\n        this.subRequests.set(this.operationCount, subRequest);\n        this.operationCount++;\n    }\n    // Return the http request body with assembling the ending line to the sub request body.\n    getHttpRequestBody() {\n        return `${this.body}${this.batchRequestEnding}${HTTP_LINE_ENDING}`;\n    }\n    getMultipartContentType() {\n        return this.multipartContentType;\n    }\n    getSubRequests() {\n        return this.subRequests;\n    }\n}\nclass BatchRequestAssemblePolicy extends BaseRequestPolicy {\n    constructor(batchRequest, nextPolicy, options) {\n        super(nextPolicy, options);\n        this.dummyResponse = {\n            request: new WebResource(),\n            status: 200,\n            headers: new HttpHeaders()\n        };\n        this.batchRequest = batchRequest;\n    }\n    async sendRequest(request) {\n        await this.batchRequest.appendSubRequestToBody(request);\n        return this.dummyResponse; // Intercept request from going to wire\n    }\n}\nclass BatchRequestAssemblePolicyFactory {\n    constructor(batchRequest) {\n        this.batchRequest = batchRequest;\n    }\n    create(nextPolicy, options) {\n        return new BatchRequestAssemblePolicy(this.batchRequest, nextPolicy, options);\n    }\n}\nclass BatchHeaderFilterPolicy extends BaseRequestPolicy {\n    // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n    /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n    async sendRequest(request) {\n        let xMsHeaderName = \"\";\n        for (const header of request.headers.headersArray()) {\n            if (iEqual(header.name, HeaderConstants.X_MS_VERSION)) {\n                xMsHeaderName = header.name;\n            }\n        }\n        if (xMsHeaderName !== \"\") {\n            request.headers.remove(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\nclass BatchHeaderFilterPolicyFactory {\n    create(nextPolicy, options) {\n        return new BatchHeaderFilterPolicy(nextPolicy, options);\n    }\n}\n//# sourceMappingURL=BlobBatch.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BatchResponseParser } from \"./BatchResponseParser\";\nimport { utf8ByteLength } from \"./BatchUtils\";\nimport { BlobBatch } from \"./BlobBatch\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { Service, Container } from \"./generated/src/operations\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport { getURLPath } from \"./utils/utils.common\";\n/**\n * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n */\nexport class BlobBatchClient {\n    constructor(url, credentialOrPipeline, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        let pipeline;\n        if (isPipelineLike(credentialOrPipeline)) {\n            pipeline = credentialOrPipeline;\n        }\n        else if (!credentialOrPipeline) {\n            // no credential provided\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        else {\n            pipeline = newPipeline(credentialOrPipeline, options);\n        }\n        const storageClientContext = new StorageClientContext(url, pipeline.toServiceClientOptions());\n        const path = getURLPath(url);\n        if (path && path !== \"/\") {\n            // Container scoped.\n            this.serviceOrContainerContext = new Container(storageClientContext);\n        }\n        else {\n            this.serviceOrContainerContext = new Service(storageClientContext);\n        }\n    }\n    /**\n     * Creates a {@link BlobBatch}.\n     * A BlobBatch represents an aggregated set of operations on blobs.\n     */\n    createBatch() {\n        return new BlobBatch();\n    }\n    async deleteBlobs(urlsOrBlobClients, credentialOrOptions, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        const batch = new BlobBatch();\n        for (const urlOrBlobClient of urlsOrBlobClients) {\n            if (typeof urlOrBlobClient === \"string\") {\n                await batch.deleteBlob(urlOrBlobClient, credentialOrOptions, options);\n            }\n            else {\n                await batch.deleteBlob(urlOrBlobClient, credentialOrOptions);\n            }\n        }\n        return this.submitBatch(batch);\n    }\n    async setBlobsAccessTier(urlsOrBlobClients, credentialOrTier, tierOrOptions, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        const batch = new BlobBatch();\n        for (const urlOrBlobClient of urlsOrBlobClients) {\n            if (typeof urlOrBlobClient === \"string\") {\n                await batch.setBlobAccessTier(urlOrBlobClient, credentialOrTier, tierOrOptions, options);\n            }\n            else {\n                await batch.setBlobAccessTier(urlOrBlobClient, credentialOrTier, tierOrOptions);\n            }\n        }\n        return this.submitBatch(batch);\n    }\n    /**\n     * Submit batch request which consists of multiple subrequests.\n     *\n     * Get `blobBatchClient` and other details before running the snippets.\n     * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`\n     *\n     * Example usage:\n     *\n     * ```js\n     * let batchRequest = new BlobBatch();\n     * await batchRequest.deleteBlob(urlInString0, credential0);\n     * await batchRequest.deleteBlob(urlInString1, credential1, {\n     *  deleteSnapshots: \"include\"\n     * });\n     * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n     * console.log(batchResp.subResponsesSucceededCount);\n     * ```\n     *\n     * Example using a lease:\n     *\n     * ```js\n     * let batchRequest = new BlobBatch();\n     * await batchRequest.setBlobAccessTier(blockBlobClient0, \"Cool\");\n     * await batchRequest.setBlobAccessTier(blockBlobClient1, \"Cool\", {\n     *  conditions: { leaseId: leaseId }\n     * });\n     * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n     * console.log(batchResp.subResponsesSucceededCount);\n     * ```\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n     *\n     * @param batchRequest - A set of Delete or SetTier operations.\n     * @param options -\n     */\n    async submitBatch(batchRequest, options = {}) {\n        if (!batchRequest || batchRequest.getSubRequests().size === 0) {\n            throw new RangeError(\"Batch request should contain one or more sub requests.\");\n        }\n        const { span, updatedOptions } = createSpan(\"BlobBatchClient-submitBatch\", options);\n        try {\n            const batchRequestBody = batchRequest.getHttpRequestBody();\n            // ServiceSubmitBatchResponseModel and ContainerSubmitBatchResponse are compatible for now.\n            const rawBatchResponse = await this.serviceOrContainerContext.submitBatch(utf8ByteLength(batchRequestBody), batchRequest.getMultiPartContentType(), batchRequestBody, Object.assign(Object.assign({}, options), convertTracingToRequestOptionsBase(updatedOptions)));\n            // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).\n            const batchResponseParser = new BatchResponseParser(rawBatchResponse, batchRequest.getSubRequests());\n            const responseSummary = await batchResponseParser.parseBatchResponse();\n            const res = {\n                _response: rawBatchResponse._response,\n                contentType: rawBatchResponse.contentType,\n                errorCode: rawBatchResponse.errorCode,\n                requestId: rawBatchResponse.requestId,\n                clientRequestId: rawBatchResponse.clientRequestId,\n                version: rawBatchResponse.version,\n                subResponses: responseSummary.subResponses,\n                subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n                subResponsesFailedCount: responseSummary.subResponsesFailedCount\n            };\n            return res;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n//# sourceMappingURL=BlobBatchClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// This file is used as a shim of \"BlobDownloadResponse\" for some browser bundlers\n// when trying to bundle \"BlobDownloadResponse\"\n// \"BlobDownloadResponse\" class is only available in Node.js runtime\nexport const BlobDownloadResponse = 1;\n//# sourceMappingURL=BlobDownloadResponse.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { generateUuid } from \"@azure/core-http\";\nimport { StorageClientContext } from \"./generated/src/index\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { Blob as StorageBlob, Container } from \"./generated/src/operations\";\nimport { ETagNone } from \"./utils/constants\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\n/**\n * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.\n */\nexport class BlobLeaseClient {\n    /**\n     * Creates an instance of BlobLeaseClient.\n     * @param client - The client to make the lease operation requests.\n     * @param leaseId - Initial proposed lease id.\n     */\n    constructor(client, leaseId) {\n        const clientContext = new StorageClientContext(client.url, client.pipeline.toServiceClientOptions());\n        this._url = client.url;\n        if (client.name === undefined) {\n            this._isContainer = true;\n            this._containerOrBlobOperation = new Container(clientContext);\n        }\n        else {\n            this._isContainer = false;\n            this._containerOrBlobOperation = new StorageBlob(clientContext);\n        }\n        if (!leaseId) {\n            leaseId = generateUuid();\n        }\n        this._leaseId = leaseId;\n    }\n    /**\n     * Gets the lease Id.\n     *\n     * @readonly\n     */\n    get leaseId() {\n        return this._leaseId;\n    }\n    /**\n     * Gets the url.\n     *\n     * @readonly\n     */\n    get url() {\n        return this._url;\n    }\n    /**\n     * Establishes and manages a lock on a container for delete operations, or on a blob\n     * for write and delete operations.\n     * The lock duration can be 15 to 60 seconds, or can be infinite.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     * and\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param duration - Must be between 15 to 60 seconds, or infinite (-1)\n     * @param options - option to configure lease management operations.\n     * @returns Response data for acquire lease operation.\n     */\n    async acquireLease(duration, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const { span, updatedOptions } = createSpan(\"BlobLeaseClient-acquireLease\", options);\n        if (this._isContainer &&\n            ((((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== ETagNone) ||\n                (((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== ETagNone) ||\n                ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions))) {\n            throw new RangeError(\"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\");\n        }\n        try {\n            return await this._containerOrBlobOperation.acquireLease(Object.assign({ abortSignal: options.abortSignal, duration, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions }), proposedLeaseId: this._leaseId }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * To change the ID of the lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     * and\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param proposedLeaseId - the proposed new lease Id.\n     * @param options - option to configure lease management operations.\n     * @returns Response data for change lease operation.\n     */\n    async changeLease(proposedLeaseId, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const { span, updatedOptions } = createSpan(\"BlobLeaseClient-changeLease\", options);\n        if (this._isContainer &&\n            ((((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== ETagNone) ||\n                (((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== ETagNone) ||\n                ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions))) {\n            throw new RangeError(\"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\");\n        }\n        try {\n            const response = await this._containerOrBlobOperation.changeLease(this._leaseId, proposedLeaseId, Object.assign({ abortSignal: options.abortSignal, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n            this._leaseId = proposedLeaseId;\n            return response;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * To free the lease if it is no longer needed so that another client may\n     * immediately acquire a lease against the container or the blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     * and\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param options - option to configure lease management operations.\n     * @returns Response data for release lease operation.\n     */\n    async releaseLease(options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const { span, updatedOptions } = createSpan(\"BlobLeaseClient-releaseLease\", options);\n        if (this._isContainer &&\n            ((((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== ETagNone) ||\n                (((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== ETagNone) ||\n                ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions))) {\n            throw new RangeError(\"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\");\n        }\n        try {\n            return await this._containerOrBlobOperation.releaseLease(this._leaseId, Object.assign({ abortSignal: options.abortSignal, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * To renew the lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     * and\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param options - Optional option to configure lease management operations.\n     * @returns Response data for renew lease operation.\n     */\n    async renewLease(options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const { span, updatedOptions } = createSpan(\"BlobLeaseClient-renewLease\", options);\n        if (this._isContainer &&\n            ((((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== ETagNone) ||\n                (((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== ETagNone) ||\n                ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions))) {\n            throw new RangeError(\"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\");\n        }\n        try {\n            return await this._containerOrBlobOperation.renewLease(this._leaseId, Object.assign({ abortSignal: options.abortSignal, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * To end the lease but ensure that another client cannot acquire a new lease\n     * until the current lease period has expired.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     * and\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param breakPeriod - Break period\n     * @param options - Optional options to configure lease management operations.\n     * @returns Response data for break lease operation.\n     */\n    async breakLease(breakPeriod, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const { span, updatedOptions } = createSpan(\"BlobLeaseClient-breakLease\", options);\n        if (this._isContainer &&\n            ((((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== ETagNone) ||\n                (((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== ETagNone) ||\n                ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions))) {\n            throw new RangeError(\"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\");\n        }\n        try {\n            const operationOptions = Object.assign({ abortSignal: options.abortSignal, breakPeriod, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions));\n            return await this._containerOrBlobOperation.breakLease(operationOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n//# sourceMappingURL=BlobLeaseClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN BROWSER RUNTIME.\n *\n * BlobQueryResponse implements BlobDownloadResponseModel interface, and in browser runtime it will\n * parse avor data returned by blob query.\n */\nexport class BlobQueryResponse {\n    /**\n     * Creates an instance of BlobQueryResponse.\n     *\n     * @param originalResponse -\n     * @param options -\n     */\n    constructor(originalResponse, _options = {}) {\n        this.originalResponse = originalResponse;\n    }\n    /**\n     * Indicates that the service supports\n     * requests for partial file content.\n     *\n     * @readonly\n     */\n    get acceptRanges() {\n        return this.originalResponse.acceptRanges;\n    }\n    /**\n     * Returns if it was previously specified\n     * for the file.\n     *\n     * @readonly\n     */\n    get cacheControl() {\n        return this.originalResponse.cacheControl;\n    }\n    /**\n     * Returns the value that was specified\n     * for the 'x-ms-content-disposition' header and specifies how to process the\n     * response.\n     *\n     * @readonly\n     */\n    get contentDisposition() {\n        return this.originalResponse.contentDisposition;\n    }\n    /**\n     * Returns the value that was specified\n     * for the Content-Encoding request header.\n     *\n     * @readonly\n     */\n    get contentEncoding() {\n        return this.originalResponse.contentEncoding;\n    }\n    /**\n     * Returns the value that was specified\n     * for the Content-Language request header.\n     *\n     * @readonly\n     */\n    get contentLanguage() {\n        return this.originalResponse.contentLanguage;\n    }\n    /**\n     * The current sequence number for a\n     * page blob. This header is not returned for block blobs or append blobs.\n     *\n     * @readonly\n     */\n    get blobSequenceNumber() {\n        return this.originalResponse.blobSequenceNumber;\n    }\n    /**\n     * The blob's type. Possible values include:\n     * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n     *\n     * @readonly\n     */\n    get blobType() {\n        return this.originalResponse.blobType;\n    }\n    /**\n     * The number of bytes present in the\n     * response body.\n     *\n     * @readonly\n     */\n    get contentLength() {\n        return this.originalResponse.contentLength;\n    }\n    /**\n     * If the file has an MD5 hash and the\n     * request is to read the full file, this response header is returned so that\n     * the client can check for message content integrity. If the request is to\n     * read a specified range and the 'x-ms-range-get-content-md5' is set to\n     * true, then the request returns an MD5 hash for the range, as long as the\n     * range size is less than or equal to 4 MB. If neither of these sets of\n     * conditions is true, then no value is returned for the 'Content-MD5'\n     * header.\n     *\n     * @readonly\n     */\n    get contentMD5() {\n        return this.originalResponse.contentMD5;\n    }\n    /**\n     * Indicates the range of bytes returned if\n     * the client requested a subset of the file by setting the Range request\n     * header.\n     *\n     * @readonly\n     */\n    get contentRange() {\n        return this.originalResponse.contentRange;\n    }\n    /**\n     * The content type specified for the file.\n     * The default content type is 'application/octet-stream'\n     *\n     * @readonly\n     */\n    get contentType() {\n        return this.originalResponse.contentType;\n    }\n    /**\n     * Conclusion time of the last attempted\n     * Copy File operation where this file was the destination file. This value\n     * can specify the time of a completed, aborted, or failed copy attempt.\n     *\n     * @readonly\n     */\n    get copyCompletedOn() {\n        return undefined;\n    }\n    /**\n     * String identifier for the last attempted Copy\n     * File operation where this file was the destination file.\n     *\n     * @readonly\n     */\n    get copyId() {\n        return this.originalResponse.copyId;\n    }\n    /**\n     * Contains the number of bytes copied and\n     * the total bytes in the source in the last attempted Copy File operation\n     * where this file was the destination file. Can show between 0 and\n     * Content-Length bytes copied.\n     *\n     * @readonly\n     */\n    get copyProgress() {\n        return this.originalResponse.copyProgress;\n    }\n    /**\n     * URL up to 2KB in length that specifies the\n     * source file used in the last attempted Copy File operation where this file\n     * was the destination file.\n     *\n     * @readonly\n     */\n    get copySource() {\n        return this.originalResponse.copySource;\n    }\n    /**\n     * State of the copy operation\n     * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n     * 'success', 'aborted', 'failed'\n     *\n     * @readonly\n     */\n    get copyStatus() {\n        return this.originalResponse.copyStatus;\n    }\n    /**\n     * Only appears when\n     * x-ms-copy-status is failed or pending. Describes cause of fatal or\n     * non-fatal copy operation failure.\n     *\n     * @readonly\n     */\n    get copyStatusDescription() {\n        return this.originalResponse.copyStatusDescription;\n    }\n    /**\n     * When a blob is leased,\n     * specifies whether the lease is of infinite or fixed duration. Possible\n     * values include: 'infinite', 'fixed'.\n     *\n     * @readonly\n     */\n    get leaseDuration() {\n        return this.originalResponse.leaseDuration;\n    }\n    /**\n     * Lease state of the blob. Possible\n     * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n     *\n     * @readonly\n     */\n    get leaseState() {\n        return this.originalResponse.leaseState;\n    }\n    /**\n     * The current lease status of the\n     * blob. Possible values include: 'locked', 'unlocked'.\n     *\n     * @readonly\n     */\n    get leaseStatus() {\n        return this.originalResponse.leaseStatus;\n    }\n    /**\n     * A UTC date/time value generated by the service that\n     * indicates the time at which the response was initiated.\n     *\n     * @readonly\n     */\n    get date() {\n        return this.originalResponse.date;\n    }\n    /**\n     * The number of committed blocks\n     * present in the blob. This header is returned only for append blobs.\n     *\n     * @readonly\n     */\n    get blobCommittedBlockCount() {\n        return this.originalResponse.blobCommittedBlockCount;\n    }\n    /**\n     * The ETag contains a value that you can use to\n     * perform operations conditionally, in quotes.\n     *\n     * @readonly\n     */\n    get etag() {\n        return this.originalResponse.etag;\n    }\n    /**\n     * The error code.\n     *\n     * @readonly\n     */\n    get errorCode() {\n        return this.originalResponse.errorCode;\n    }\n    /**\n     * The value of this header is set to\n     * true if the file data and application metadata are completely encrypted\n     * using the specified algorithm. Otherwise, the value is set to false (when\n     * the file is unencrypted, or if only parts of the file/application metadata\n     * are encrypted).\n     *\n     * @readonly\n     */\n    get isServerEncrypted() {\n        return this.originalResponse.isServerEncrypted;\n    }\n    /**\n     * If the blob has a MD5 hash, and if\n     * request contains range header (Range or x-ms-range), this response header\n     * is returned with the value of the whole blob's MD5 value. This value may\n     * or may not be equal to the value returned in Content-MD5 header, with the\n     * latter calculated from the requested range.\n     *\n     * @readonly\n     */\n    get blobContentMD5() {\n        return this.originalResponse.blobContentMD5;\n    }\n    /**\n     * Returns the date and time the file was last\n     * modified. Any operation that modifies the file or its properties updates\n     * the last modified time.\n     *\n     * @readonly\n     */\n    get lastModified() {\n        return this.originalResponse.lastModified;\n    }\n    /**\n     * A name-value pair\n     * to associate with a file storage object.\n     *\n     * @readonly\n     */\n    get metadata() {\n        return this.originalResponse.metadata;\n    }\n    /**\n     * This header uniquely identifies the request\n     * that was made and can be used for troubleshooting the request.\n     *\n     * @readonly\n     */\n    get requestId() {\n        return this.originalResponse.requestId;\n    }\n    /**\n     * If a client request id header is sent in the request, this header will be present in the\n     * response with the same value.\n     *\n     * @readonly\n     */\n    get clientRequestId() {\n        return this.originalResponse.clientRequestId;\n    }\n    /**\n     * Indicates the version of the File service used\n     * to execute the request.\n     *\n     * @readonly\n     */\n    get version() {\n        return this.originalResponse.version;\n    }\n    /**\n     * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n     * when the blob was encrypted with a customer-provided key.\n     *\n     * @readonly\n     */\n    get encryptionKeySha256() {\n        return this.originalResponse.encryptionKeySha256;\n    }\n    /**\n     * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n     * true, then the request returns a crc64 for the range, as long as the range size is less than\n     * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n     * specified in the same request, it will fail with 400(Bad Request)\n     */\n    get contentCrc64() {\n        return this.originalResponse.contentCrc64;\n    }\n    /**\n     * The response body as a browser Blob.\n     * Always undefined in node.js.\n     *\n     * @readonly\n     */\n    get blobBody() {\n        throw Error(`Quick query in browser is not supported yet.`);\n    }\n    /**\n     * The response body as a node.js Readable stream.\n     * Always undefined in the browser.\n     *\n     * @readonly\n     */\n    get readableStreamBody() {\n        return undefined;\n    }\n    /**\n     * The HTTP response.\n     */\n    get _response() {\n        return this.originalResponse._response;\n    }\n}\n//# sourceMappingURL=BlobQueryResponse.browser.js.map","import { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isTokenCredential, isNode, getDefaultProxySettings } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { Container, Service } from \"./generated/src/operations\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport { ContainerClient } from \"./ContainerClient\";\nimport { appendToURLPath, appendToURLQuery, extractConnectionStringParts, toTags } from \"./utils/utils.common\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport \"@azure/core-paging\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { AccountSASPermissions } from \"./sas/AccountSASPermissions\";\nimport { generateAccountSASQueryParameters } from \"./sas/AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./sas/AccountSASServices\";\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n */\nexport class BlobServiceClient extends StorageClient {\n    constructor(url, credentialOrPipeline, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        let pipeline;\n        if (isPipelineLike(credentialOrPipeline)) {\n            pipeline = credentialOrPipeline;\n        }\n        else if ((isNode && credentialOrPipeline instanceof StorageSharedKeyCredential) ||\n            credentialOrPipeline instanceof AnonymousCredential ||\n            isTokenCredential(credentialOrPipeline)) {\n            pipeline = newPipeline(credentialOrPipeline, options);\n        }\n        else {\n            // The second parameter is undefined. Use anonymous credential\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        super(url, pipeline);\n        this.serviceContext = new Service(this.storageClientContext);\n    }\n    /**\n     *\n     * Creates an instance of BlobServiceClient from connection string.\n     *\n     * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n     *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n     *                                  Account connection string example -\n     *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n     *                                  SAS connection string example -\n     *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n     * @param options - Optional. Options to configure the HTTP pipeline.\n     */\n    static fromConnectionString(connectionString, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        options = options || {};\n        const extractedCreds = extractConnectionStringParts(connectionString);\n        if (extractedCreds.kind === \"AccountConnString\") {\n            if (isNode) {\n                const sharedKeyCredential = new StorageSharedKeyCredential(extractedCreds.accountName, extractedCreds.accountKey);\n                options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n                const pipeline = newPipeline(sharedKeyCredential, options);\n                return new BlobServiceClient(extractedCreds.url, pipeline);\n            }\n            else {\n                throw new Error(\"Account connection string is only supported in Node.js environment\");\n            }\n        }\n        else if (extractedCreds.kind === \"SASConnString\") {\n            const pipeline = newPipeline(new AnonymousCredential(), options);\n            return new BlobServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n        }\n        else {\n            throw new Error(\"Connection string must be either an Account connection string or a SAS connection string\");\n        }\n    }\n    /**\n     * Creates a {@link ContainerClient} object\n     *\n     * @param containerName - A container name\n     * @returns A new ContainerClient object for the given container name.\n     *\n     * Example usage:\n     *\n     * ```js\n     * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n     * ```\n     */\n    getContainerClient(containerName) {\n        return new ContainerClient(appendToURLPath(this.url, encodeURIComponent(containerName)), this.pipeline);\n    }\n    /**\n     * Create a Blob container.\n     *\n     * @param containerName - Name of the container to create.\n     * @param options - Options to configure Container Create operation.\n     * @returns Container creation response and the corresponding container client.\n     */\n    async createContainer(containerName, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-createContainer\", options);\n        try {\n            const containerClient = this.getContainerClient(containerName);\n            const containerCreateResponse = await containerClient.create(updatedOptions);\n            return {\n                containerClient,\n                containerCreateResponse\n            };\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Deletes a Blob container.\n     *\n     * @param containerName - Name of the container to delete.\n     * @param options - Options to configure Container Delete operation.\n     * @returns Container deletion response.\n     */\n    async deleteContainer(containerName, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-deleteContainer\", options);\n        try {\n            const containerClient = this.getContainerClient(containerName);\n            return await containerClient.delete(updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Restore a previously deleted Blob container.\n     * This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.\n     *\n     * @param deletedContainerName - Name of the previously deleted container.\n     * @param deletedContainerVersion - Version of the previously deleted container, used to uniquely identify the deleted container.\n     * @param options - Options to configure Container Restore operation.\n     * @returns Container deletion response.\n     */\n    async undeleteContainer(deletedContainerName, deletedContainerVersion, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-undeleteContainer\", options);\n        try {\n            const containerClient = this.getContainerClient(options.destinationContainerName || deletedContainerName);\n            // Hack to access a protected member.\n            const containerContext = new Container(containerClient[\"storageClientContext\"]);\n            const containerUndeleteResponse = await containerContext.restore(Object.assign({ deletedContainerName,\n                deletedContainerVersion }, updatedOptions));\n            return { containerClient, containerUndeleteResponse };\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Rename an existing Blob Container.\n     *\n     * @param sourceContainerName - The name of the source container.\n     * @param destinationContainerName - The new name of the container.\n     * @param options - Options to configure Container Rename operation.\n     */\n    /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n    // @ts-ignore Need to hide this interface for now. Make it public and turn on the live tests for it when the service is ready.\n    async renameContainer(sourceContainerName, destinationContainerName, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-renameContainer\", options);\n        try {\n            const containerClient = this.getContainerClient(destinationContainerName);\n            // Hack to access a protected member.\n            const containerContext = new Container(containerClient[\"storageClientContext\"]);\n            const containerRenameResponse = await containerContext.rename(sourceContainerName, Object.assign(Object.assign({}, updatedOptions), { sourceLeaseId: (_a = options.sourceCondition) === null || _a === void 0 ? void 0 : _a.leaseId }));\n            return { containerClient, containerRenameResponse };\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Gets the properties of a storage account’s Blob service, including properties\n     * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n     *\n     * @param options - Options to the Service Get Properties operation.\n     * @returns Response data for the Service Get Properties operation.\n     */\n    async getProperties(options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-getProperties\", options);\n        try {\n            return await this.serviceContext.getProperties(Object.assign({ abortSignal: options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets properties for a storage account’s Blob service endpoint, including properties\n     * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties\n     *\n     * @param properties -\n     * @param options - Options to the Service Set Properties operation.\n     * @returns Response data for the Service Set Properties operation.\n     */\n    async setProperties(properties, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-setProperties\", options);\n        try {\n            return await this.serviceContext.setProperties(properties, Object.assign({ abortSignal: options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Retrieves statistics related to replication for the Blob service. It is only\n     * available on the secondary location endpoint when read-access geo-redundant\n     * replication is enabled for the storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats\n     *\n     * @param options - Options to the Service Get Statistics operation.\n     * @returns Response data for the Service Get Statistics operation.\n     */\n    async getStatistics(options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-getStatistics\", options);\n        try {\n            return await this.serviceContext.getStatistics(Object.assign({ abortSignal: options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * The Get Account Information operation returns the sku name and account kind\n     * for the specified account.\n     * The Get Account Information operation is available on service versions beginning\n     * with version 2018-03-28.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n     *\n     * @param options - Options to the Service Get Account Info operation.\n     * @returns Response data for the Service Get Account Info operation.\n     */\n    async getAccountInfo(options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-getAccountInfo\", options);\n        try {\n            return await this.serviceContext.getAccountInfo(Object.assign({ abortSignal: options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns a list of the containers under the specified account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n     *\n     * @param marker - A string value that identifies the portion of\n     *                        the list of containers to be returned with the next listing operation. The\n     *                        operation returns the continuationToken value within the response body if the\n     *                        listing operation did not return all containers remaining to be listed\n     *                        with the current page. The continuationToken value can be used as the value for\n     *                        the marker parameter in a subsequent call to request the next page of list\n     *                        items. The marker value is opaque to the client.\n     * @param options - Options to the Service List Container Segment operation.\n     * @returns Response data for the Service List Container Segment operation.\n     */\n    async listContainersSegment(marker, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-listContainersSegment\", options);\n        try {\n            return await this.serviceContext.listContainersSegment(Object.assign(Object.assign(Object.assign({ abortSignal: options.abortSignal, marker }, options), { include: typeof options.include === \"string\" ? [options.include] : options.include }), convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * The Filter Blobs operation enables callers to list blobs across all containers whose tags\n     * match a given search expression. Filter blobs searches across all containers within a\n     * storage account but can be scoped within the expression to a single container.\n     *\n     * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n     *                                        The given expression must evaluate to true for a blob to be returned in the results.\n     *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n     *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n     * @param marker - A string value that identifies the portion of\n     *                          the list of blobs to be returned with the next listing operation. The\n     *                          operation returns the continuationToken value within the response body if the\n     *                          listing operation did not return all blobs remaining to be listed\n     *                          with the current page. The continuationToken value can be used as the value for\n     *                          the marker parameter in a subsequent call to request the next page of list\n     *                          items. The marker value is opaque to the client.\n     * @param options - Options to find blobs by tags.\n     */\n    async findBlobsByTagsSegment(tagFilterSqlExpression, marker, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-findBlobsByTagsSegment\", options);\n        try {\n            const response = await this.serviceContext.filterBlobs(Object.assign({ abortSignal: options.abortSignal, where: tagFilterSqlExpression, marker, maxPageSize: options.maxPageSize }, convertTracingToRequestOptionsBase(updatedOptions)));\n            const wrappedResponse = Object.assign(Object.assign({}, response), { _response: response._response, blobs: response.blobs.map((blob) => {\n                    var _a;\n                    let tagValue = \"\";\n                    if (((_a = blob.tags) === null || _a === void 0 ? void 0 : _a.blobTagSet.length) === 1) {\n                        tagValue = blob.tags.blobTagSet[0].value;\n                    }\n                    return Object.assign(Object.assign({}, blob), { tags: toTags(blob.tags), tagValue });\n                }) });\n            return wrappedResponse;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns an AsyncIterableIterator for ServiceFindBlobsByTagsSegmentResponse.\n     *\n     * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n     *                                         The given expression must evaluate to true for a blob to be returned in the results.\n     *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n     *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n     * @param marker - A string value that identifies the portion of\n     *                          the list of blobs to be returned with the next listing operation. The\n     *                          operation returns the continuationToken value within the response body if the\n     *                          listing operation did not return all blobs remaining to be listed\n     *                          with the current page. The continuationToken value can be used as the value for\n     *                          the marker parameter in a subsequent call to request the next page of list\n     *                          items. The marker value is opaque to the client.\n     * @param options - Options to find blobs by tags.\n     */\n    findBlobsByTagsSegments(tagFilterSqlExpression, marker, options = {}) {\n        return __asyncGenerator(this, arguments, function* findBlobsByTagsSegments_1() {\n            let response;\n            if (!!marker || marker === undefined) {\n                do {\n                    response = yield __await(this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options));\n                    response.blobs = response.blobs || [];\n                    marker = response.continuationToken;\n                    yield yield __await(response);\n                } while (marker);\n            }\n        });\n    }\n    /**\n     * Returns an AsyncIterableIterator for blobs.\n     *\n     * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n     *                                         The given expression must evaluate to true for a blob to be returned in the results.\n     *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n     *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n     * @param options - Options to findBlobsByTagsItems.\n     */\n    findBlobsByTagsItems(tagFilterSqlExpression, options = {}) {\n        return __asyncGenerator(this, arguments, function* findBlobsByTagsItems_1() {\n            var e_1, _a;\n            let marker;\n            try {\n                for (var _b = __asyncValues(this.findBlobsByTagsSegments(tagFilterSqlExpression, marker, options)), _c; _c = yield __await(_b.next()), !_c.done;) {\n                    const segment = _c.value;\n                    yield __await(yield* __asyncDelegator(__asyncValues(segment.blobs)));\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield __await(_a.call(_b));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    /**\n     * Returns an async iterable iterator to find all blobs with specified tag\n     * under the specified account.\n     *\n     * .byPage() returns an async iterable iterator to list the blobs in pages.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n     *\n     * Example using `for await` syntax:\n     *\n     * ```js\n     * let i = 1;\n     * for await (const blob of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n     *   console.log(`Blob ${i++}: ${container.name}`);\n     * }\n     * ```\n     *\n     * Example using `iter.next()`:\n     *\n     * ```js\n     * let i = 1;\n     * const iter = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\");\n     * let blobItem = await iter.next();\n     * while (!blobItem.done) {\n     *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n     *   blobItem = await iter.next();\n     * }\n     * ```\n     *\n     * Example using `byPage()`:\n     *\n     * ```js\n     * // passing optional maxPageSize in the page settings\n     * let i = 1;\n     * for await (const response of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n     *   if (response.blobs) {\n     *     for (const blob of response.blobs) {\n     *       console.log(`Blob ${i++}: ${blob.name}`);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Example using paging with a marker:\n     *\n     * ```js\n     * let i = 1;\n     * let iterator = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n     * let response = (await iterator.next()).value;\n     *\n     * // Prints 2 blob names\n     * if (response.blobs) {\n     *   for (const blob of response.blobs) {\n     *     console.log(`Blob ${i++}: ${blob.name}`);\n     *   }\n     * }\n     *\n     * // Gets next marker\n     * let marker = response.continuationToken;\n     * // Passing next marker as continuationToken\n     * iterator = blobServiceClient\n     *   .findBlobsByTags(\"tagkey='tagvalue'\")\n     *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n     * response = (await iterator.next()).value;\n     *\n     * // Prints blob names\n     * if (response.blobs) {\n     *   for (const blob of response.blobs) {\n     *      console.log(`Blob ${i++}: ${blob.name}`);\n     *   }\n     * }\n     * ```\n     *\n     * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n     *                                         The given expression must evaluate to true for a blob to be returned in the results.\n     *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n     *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n     * @param options - Options to find blobs by tags.\n     */\n    findBlobsByTags(tagFilterSqlExpression, options = {}) {\n        // AsyncIterableIterator to iterate over blobs\n        const listSegmentOptions = Object.assign({}, options);\n        const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n        return {\n            /**\n             * The next method, part of the iteration protocol\n             */\n            next() {\n                return iter.next();\n            },\n            /**\n             * The connection to the async iterator, part of the iteration protocol\n             */\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            /**\n             * Return an AsyncIterableIterator that works a page at a time\n             */\n            byPage: (settings = {}) => {\n                return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, Object.assign({ maxPageSize: settings.maxPageSize }, listSegmentOptions));\n            }\n        };\n    }\n    /**\n     * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n     *\n     * @param marker - A string value that identifies the portion of\n     *                        the list of containers to be returned with the next listing operation. The\n     *                        operation returns the continuationToken value within the response body if the\n     *                        listing operation did not return all containers remaining to be listed\n     *                        with the current page. The continuationToken value can be used as the value for\n     *                        the marker parameter in a subsequent call to request the next page of list\n     *                        items. The marker value is opaque to the client.\n     * @param options - Options to list containers operation.\n     */\n    listSegments(marker, options = {}) {\n        return __asyncGenerator(this, arguments, function* listSegments_1() {\n            let listContainersSegmentResponse;\n            if (!!marker || marker === undefined) {\n                do {\n                    listContainersSegmentResponse = yield __await(this.listContainersSegment(marker, options));\n                    listContainersSegmentResponse.containerItems =\n                        listContainersSegmentResponse.containerItems || [];\n                    marker = listContainersSegmentResponse.continuationToken;\n                    yield yield __await(yield __await(listContainersSegmentResponse));\n                } while (marker);\n            }\n        });\n    }\n    /**\n     * Returns an AsyncIterableIterator for Container Items\n     *\n     * @param options - Options to list containers operation.\n     */\n    listItems(options = {}) {\n        return __asyncGenerator(this, arguments, function* listItems_1() {\n            var e_2, _a;\n            let marker;\n            try {\n                for (var _b = __asyncValues(this.listSegments(marker, options)), _c; _c = yield __await(_b.next()), !_c.done;) {\n                    const segment = _c.value;\n                    yield __await(yield* __asyncDelegator(__asyncValues(segment.containerItems)));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield __await(_a.call(_b));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        });\n    }\n    /**\n     * Returns an async iterable iterator to list all the containers\n     * under the specified account.\n     *\n     * .byPage() returns an async iterable iterator to list the containers in pages.\n     *\n     * Example using `for await` syntax:\n     *\n     * ```js\n     * let i = 1;\n     * for await (const container of blobServiceClient.listContainers()) {\n     *   console.log(`Container ${i++}: ${container.name}`);\n     * }\n     * ```\n     *\n     * Example using `iter.next()`:\n     *\n     * ```js\n     * let i = 1;\n     * const iter = blobServiceClient.listContainers();\n     * let containerItem = await iter.next();\n     * while (!containerItem.done) {\n     *   console.log(`Container ${i++}: ${containerItem.value.name}`);\n     *   containerItem = await iter.next();\n     * }\n     * ```\n     *\n     * Example using `byPage()`:\n     *\n     * ```js\n     * // passing optional maxPageSize in the page settings\n     * let i = 1;\n     * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n     *   if (response.containerItems) {\n     *     for (const container of response.containerItems) {\n     *       console.log(`Container ${i++}: ${container.name}`);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Example using paging with a marker:\n     *\n     * ```js\n     * let i = 1;\n     * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n     * let response = (await iterator.next()).value;\n     *\n     * // Prints 2 container names\n     * if (response.containerItems) {\n     *   for (const container of response.containerItems) {\n     *     console.log(`Container ${i++}: ${container.name}`);\n     *   }\n     * }\n     *\n     * // Gets next marker\n     * let marker = response.continuationToken;\n     * // Passing next marker as continuationToken\n     * iterator = blobServiceClient\n     *   .listContainers()\n     *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n     * response = (await iterator.next()).value;\n     *\n     * // Prints 10 container names\n     * if (response.containerItems) {\n     *   for (const container of response.containerItems) {\n     *      console.log(`Container ${i++}: ${container.name}`);\n     *   }\n     * }\n     * ```\n     *\n     * @param options - Options to list containers.\n     * @returns An asyncIterableIterator that supports paging.\n     */\n    listContainers(options = {}) {\n        if (options.prefix === \"\") {\n            options.prefix = undefined;\n        }\n        const include = [];\n        if (options.includeDeleted) {\n            include.push(\"deleted\");\n        }\n        if (options.includeMetadata) {\n            include.push(\"metadata\");\n        }\n        // AsyncIterableIterator to iterate over containers\n        const listSegmentOptions = Object.assign(Object.assign({}, options), (include.length > 0 ? { include } : {}));\n        const iter = this.listItems(listSegmentOptions);\n        return {\n            /**\n             * The next method, part of the iteration protocol\n             */\n            next() {\n                return iter.next();\n            },\n            /**\n             * The connection to the async iterator, part of the iteration protocol\n             */\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            /**\n             * Return an AsyncIterableIterator that works a page at a time\n             */\n            byPage: (settings = {}) => {\n                return this.listSegments(settings.continuationToken, Object.assign({ maxPageSize: settings.maxPageSize }, listSegmentOptions));\n            }\n        };\n    }\n    /**\n     * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n     *\n     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n     * bearer token authentication.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n     *\n     * @param startsOn -      The start time for the user delegation SAS. Must be within 7 days of the current time\n     * @param expiresOn -     The end time for the user delegation SAS. Must be within 7 days of the current time\n     */\n    async getUserDelegationKey(startsOn, expiresOn, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobServiceClient-getUserDelegationKey\", options);\n        try {\n            const response = await this.serviceContext.getUserDelegationKey({\n                startsOn: truncatedISO8061Date(startsOn, false),\n                expiresOn: truncatedISO8061Date(expiresOn, false)\n            }, Object.assign({ abortSignal: options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n            const userDelegationKey = {\n                signedObjectId: response.signedObjectId,\n                signedTenantId: response.signedTenantId,\n                signedStartsOn: new Date(response.signedStartsOn),\n                signedExpiresOn: new Date(response.signedExpiresOn),\n                signedService: response.signedService,\n                signedVersion: response.signedVersion,\n                value: response.value\n            };\n            const res = Object.assign({ _response: response._response, requestId: response.requestId, clientRequestId: response.clientRequestId, version: response.version, date: response.date, errorCode: response.errorCode }, userDelegationKey);\n            return res;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a BlobBatchClient object to conduct batch operations.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n     *\n     * @returns A new BlobBatchClient object for this service.\n     */\n    getBlobBatchClient() {\n        return new BlobBatchClient(this.url, this.pipeline);\n    }\n    /**\n     * Only available for BlobServiceClient constructed with a shared key credential.\n     *\n     * Generates a Blob account Shared Access Signature (SAS) URI based on the client properties\n     * and parameters passed in. The SAS is signed by the shared key credential of the client.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n     *\n     * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n     * @param permissions - Specifies the list of permissions to be associated with the SAS.\n     * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n     * @param options - Optional parameters.\n     * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n     */\n    generateAccountSasUrl(expiresOn, permissions = AccountSASPermissions.parse(\"r\"), resourceTypes = \"sco\", options = {}) {\n        if (!(this.credential instanceof StorageSharedKeyCredential)) {\n            throw RangeError(\"Can only generate the account SAS when the client is initialized with a shared key credential\");\n        }\n        if (expiresOn === undefined) {\n            const now = new Date();\n            expiresOn = new Date(now.getTime() + 3600 * 1000);\n        }\n        const sas = generateAccountSASQueryParameters(Object.assign({ permissions,\n            expiresOn,\n            resourceTypes, services: AccountSASServices.parse(\"b\").toString() }, options), this.credential).toString();\n        return appendToURLQuery(this.url, sas);\n    }\n}\n//# sourceMappingURL=BlobServiceClient.js.map","import { generateUuid, getDefaultProxySettings, isNode, isTokenCredential, URLBuilder } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { BlobQueryResponse } from \"./BlobQueryResponse\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AppendBlob, Blob as StorageBlob, BlockBlob, PageBlob } from \"./generated/src/operations\";\nimport { ensureCpkIfSpecified, toAccessTier } from \"./models\";\nimport { rangeResponseFromModel } from \"./PageBlobRangeResponse\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport { BlobBeginCopyFromUrlPoller } from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport { rangeToString } from \"./Range\";\nimport { StorageClient } from \"./StorageClient\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"../../storage-common/src\";\nimport { BLOCK_BLOB_MAX_BLOCKS, BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES, BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES, DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES, DEFAULT_BLOCK_BUFFER_SIZE_BYTES, DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS, ETagAny, URLConstants } from \"./utils/constants\";\nimport { createSpan, convertTracingToRequestOptionsBase } from \"./utils/tracing\";\nimport { appendToURLPath, appendToURLQuery, extractConnectionStringParts, generateBlockID, getURLParameter, httpAuthorizationToString, isIpEndpointStyle, parseObjectReplicationRecord, setURLParameter, toBlobTags, toBlobTagsString, toQuerySerialization, toTags } from \"./utils/utils.common\";\nimport { fsCreateReadStream, fsStat, readStreamToLocalFile, streamToBuffer } from \"./utils/utils.node\";\nimport { generateBlobSASQueryParameters } from \"./sas/BlobSASSignatureValues\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n */\nexport class BlobClient extends StorageClient {\n    constructor(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        options = options || {};\n        let pipeline;\n        let url;\n        if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n            // (url: string, pipeline: Pipeline)\n            url = urlOrConnectionString;\n            pipeline = credentialOrPipelineOrContainerName;\n        }\n        else if ((isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n            credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n            isTokenCredential(credentialOrPipelineOrContainerName)) {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            url = urlOrConnectionString;\n            options = blobNameOrOptions;\n            pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n        }\n        else if (!credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName !== \"string\") {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            // The second parameter is undefined. Use anonymous credential.\n            url = urlOrConnectionString;\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        else if (credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName === \"string\" &&\n            blobNameOrOptions &&\n            typeof blobNameOrOptions === \"string\") {\n            // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n            const containerName = credentialOrPipelineOrContainerName;\n            const blobName = blobNameOrOptions;\n            const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n            if (extractedCreds.kind === \"AccountConnString\") {\n                if (isNode) {\n                    const sharedKeyCredential = new StorageSharedKeyCredential(extractedCreds.accountName, extractedCreds.accountKey);\n                    url = appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));\n                    options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n                    pipeline = newPipeline(sharedKeyCredential, options);\n                }\n                else {\n                    throw new Error(\"Account connection string is only supported in Node.js environment\");\n                }\n            }\n            else if (extractedCreds.kind === \"SASConnString\") {\n                url =\n                    appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) +\n                        \"?\" +\n                        extractedCreds.accountSas;\n                pipeline = newPipeline(new AnonymousCredential(), options);\n            }\n            else {\n                throw new Error(\"Connection string must be either an Account connection string or a SAS connection string\");\n            }\n        }\n        else {\n            throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n        }\n        super(url, pipeline);\n        ({\n            blobName: this._name,\n            containerName: this._containerName\n        } = this.getBlobAndContainerNamesFromUrl());\n        this.blobContext = new StorageBlob(this.storageClientContext);\n        this._snapshot = getURLParameter(this.url, URLConstants.Parameters.SNAPSHOT);\n        this._versionId = getURLParameter(this.url, URLConstants.Parameters.VERSIONID);\n    }\n    /**\n     * The name of the blob.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * The name of the storage container the blob is associated with.\n     */\n    get containerName() {\n        return this._containerName;\n    }\n    /**\n     * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a Client to the base blob.\n     *\n     * @param snapshot - The snapshot timestamp.\n     * @returns A new BlobClient object identical to the source but with the specified snapshot timestamp\n     */\n    withSnapshot(snapshot) {\n        return new BlobClient(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    }\n    /**\n     * Creates a new BlobClient object pointing to a version of this blob.\n     * Provide \"\" will remove the versionId and return a Client to the base blob.\n     *\n     * @param versionId - The versionId.\n     * @returns A new BlobClient object pointing to the version of this blob.\n     */\n    withVersion(versionId) {\n        return new BlobClient(setURLParameter(this.url, URLConstants.Parameters.VERSIONID, versionId.length === 0 ? undefined : versionId), this.pipeline);\n    }\n    /**\n     * Creates a AppendBlobClient object.\n     *\n     */\n    getAppendBlobClient() {\n        return new AppendBlobClient(this.url, this.pipeline);\n    }\n    /**\n     * Creates a BlockBlobClient object.\n     *\n     */\n    getBlockBlobClient() {\n        return new BlockBlobClient(this.url, this.pipeline);\n    }\n    /**\n     * Creates a PageBlobClient object.\n     *\n     */\n    getPageBlobClient() {\n        return new PageBlobClient(this.url, this.pipeline);\n    }\n    /**\n     * Reads or downloads a blob from the system, including its metadata and properties.\n     * You can also call Get Blob to read a snapshot.\n     *\n     * * In Node.js, data returns in a Readable stream readableStreamBody\n     * * In browsers, data returns in a promise blobBody\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n     *\n     * @param offset - From which position of the blob to download, greater than or equal to 0\n     * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n     * @param options - Optional options to Blob Download operation.\n     *\n     *\n     * Example usage (Node.js):\n     *\n     * ```js\n     * // Download and convert a blob to a string\n     * const downloadBlockBlobResponse = await blobClient.download();\n     * const downloaded = await streamToBuffer(downloadBlockBlobResponse.readableStreamBody);\n     * console.log(\"Downloaded blob content:\", downloaded.toString());\n     *\n     * async function streamToBuffer(readableStream) {\n     * return new Promise((resolve, reject) => {\n     * const chunks = [];\n     * readableStream.on(\"data\", (data) => {\n     * chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n     * });\n     * readableStream.on(\"end\", () => {\n     * resolve(Buffer.concat(chunks));\n     * });\n     * readableStream.on(\"error\", reject);\n     * });\n     * }\n     * ```\n     *\n     * Example usage (browser):\n     *\n     * ```js\n     * // Download and convert a blob to a string\n     * const downloadBlockBlobResponse = await blobClient.download();\n     * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);\n     * console.log(\n     *   \"Downloaded blob content\",\n     *   downloaded\n     * );\n     *\n     * async function blobToString(blob: Blob): Promise<string> {\n     *   const fileReader = new FileReader();\n     *   return new Promise<string>((resolve, reject) => {\n     *     fileReader.onloadend = (ev: any) => {\n     *       resolve(ev.target!.result);\n     *     };\n     *     fileReader.onerror = reject;\n     *     fileReader.readAsText(blob);\n     *   });\n     * }\n     * ```\n     */\n    async download(offset = 0, count, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        options.conditions = options.conditions || {};\n        ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n        const { span, updatedOptions } = createSpan(\"BlobClient-download\", options);\n        try {\n            const res = await this.blobContext.download(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), requestOptions: {\n                    onDownloadProgress: isNode ? undefined : options.onProgress // for Node.js, progress is reported by RetriableReadableStream\n                }, range: offset === 0 && !count ? undefined : rangeToString({ offset, count }), rangeGetContentMD5: options.rangeGetContentMD5, rangeGetContentCRC64: options.rangeGetContentCrc64, snapshot: options.snapshot, cpkInfo: options.customerProvidedKey }, convertTracingToRequestOptionsBase(updatedOptions)));\n            const wrappedRes = Object.assign(Object.assign({}, res), { _response: res._response, objectReplicationDestinationPolicyId: res.objectReplicationPolicyId, objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules) });\n            // Return browser response immediately\n            if (!isNode) {\n                return wrappedRes;\n            }\n            // We support retrying when download stream unexpected ends in Node.js runtime\n            // Following code shouldn't be bundled into browser build, however some\n            // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n            // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n            // The config is in package.json \"browser\" field\n            if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n                // TODO: Default value or make it a required parameter?\n                options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n            }\n            if (res.contentLength === undefined) {\n                throw new RangeError(`File download response doesn't contain valid content length header`);\n            }\n            if (!res.etag) {\n                throw new RangeError(`File download response doesn't contain valid etag header`);\n            }\n            return new BlobDownloadResponse(wrappedRes, async (start) => {\n                var _a;\n                const updatedDownloadOptions = {\n                    leaseAccessConditions: options.conditions,\n                    modifiedAccessConditions: {\n                        ifMatch: options.conditions.ifMatch || res.etag,\n                        ifModifiedSince: options.conditions.ifModifiedSince,\n                        ifNoneMatch: options.conditions.ifNoneMatch,\n                        ifUnmodifiedSince: options.conditions.ifUnmodifiedSince,\n                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions\n                    },\n                    range: rangeToString({\n                        count: offset + res.contentLength - start,\n                        offset: start\n                    }),\n                    rangeGetContentMD5: options.rangeGetContentMD5,\n                    rangeGetContentCRC64: options.rangeGetContentCrc64,\n                    snapshot: options.snapshot,\n                    cpkInfo: options.customerProvidedKey\n                };\n                // Debug purpose only\n                // console.log(\n                //   `Read from internal stream, range: ${\n                //     updatedOptions.range\n                //   }, options: ${JSON.stringify(updatedOptions)}`\n                // );\n                return (await this.blobContext.download(Object.assign({ abortSignal: options.abortSignal }, updatedDownloadOptions))).readableStreamBody;\n            }, offset, res.contentLength, {\n                maxRetryRequests: options.maxRetryRequests,\n                onProgress: options.onProgress\n            });\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns true if the Azure blob resource represented by this client exists; false otherwise.\n     *\n     * NOTE: use this function with care since an existing blob might be deleted by other clients or\n     * applications. Vice versa new blobs might be added by other clients or applications after this\n     * function completes.\n     *\n     * @param options - options to Exists operation.\n     */\n    async exists(options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-exists\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            await this.getProperties({\n                abortSignal: options.abortSignal,\n                customerProvidedKey: options.customerProvidedKey,\n                conditions: options.conditions,\n                tracingOptions: updatedOptions.tracingOptions\n            });\n            return true;\n        }\n        catch (e) {\n            if (e.statusCode === 404) {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when checking blob existence\"\n                });\n                return false;\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns all user-defined metadata, standard HTTP properties, and system properties\n     * for the blob. It does not return the content of the blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n     *\n     * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n     * they originally contained uppercase characters. This differs from the metadata keys returned by\n     * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which\n     * will retain their original casing.\n     *\n     * @param options - Optional options to Get Properties operation.\n     */\n    async getProperties(options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-getProperties\", options);\n        try {\n            options.conditions = options.conditions || {};\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            const res = await this.blobContext.getProperties(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), cpkInfo: options.customerProvidedKey }, convertTracingToRequestOptionsBase(updatedOptions)));\n            return Object.assign(Object.assign({}, res), { _response: res._response, objectReplicationDestinationPolicyId: res.objectReplicationPolicyId, objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules) });\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Marks the specified blob or snapshot for deletion. The blob is later deleted\n     * during garbage collection. Note that in order to delete a blob, you must delete\n     * all of its snapshots. You can delete both at the same time with the Delete\n     * Blob operation.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n     *\n     * @param options - Optional options to Blob Delete operation.\n     */\n    async delete(options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-delete\", options);\n        options.conditions = options.conditions || {};\n        try {\n            return await this.blobContext.delete(Object.assign({ abortSignal: options.abortSignal, deleteSnapshots: options.deleteSnapshots, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted\n     * during garbage collection. Note that in order to delete a blob, you must delete\n     * all of its snapshots. You can delete both at the same time with the Delete\n     * Blob operation.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n     *\n     * @param options - Optional options to Blob Delete operation.\n     */\n    async deleteIfExists(options = {}) {\n        var _a, _b;\n        const { span, updatedOptions } = createSpan(\"BlobClient-deleteIfExists\", options);\n        try {\n            const res = await this.delete(updatedOptions);\n            return Object.assign(Object.assign({ succeeded: true }, res), { _response: res._response // _response is made non-enumerable\n             });\n        }\n        catch (e) {\n            if (((_a = e.details) === null || _a === void 0 ? void 0 : _a.errorCode) === \"BlobNotFound\") {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when deleting a blob or snapshot only if it exists.\"\n                });\n                return Object.assign(Object.assign({ succeeded: false }, (_b = e.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), { _response: e.response });\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Restores the contents and metadata of soft deleted blob and any associated\n     * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n     * or later.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n     *\n     * @param options - Optional options to Blob Undelete operation.\n     */\n    async undelete(options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-undelete\", options);\n        try {\n            return await this.blobContext.undelete(Object.assign({ abortSignal: options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets system properties on the blob.\n     *\n     * If no value provided, or no value provided for the specified blob HTTP headers,\n     * these blob HTTP headers without a value will be cleared.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n     *\n     * @param blobHTTPHeaders - If no value provided, or no value provided for\n     *                                                   the specified blob HTTP headers, these blob HTTP\n     *                                                   headers without a value will be cleared.\n     *                                                   A common header to set is `blobContentType`\n     *                                                   enabling the browser to provide functionality\n     *                                                   based on file type.\n     * @param options - Optional options to Blob Set HTTP Headers operation.\n     */\n    async setHTTPHeaders(blobHTTPHeaders, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-setHTTPHeaders\", options);\n        options.conditions = options.conditions || {};\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blobContext.setHttpHeaders(Object.assign({ abortSignal: options.abortSignal, blobHttpHeaders: blobHTTPHeaders, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n     *\n     * If no option provided, or no metadata defined in the parameter, the blob\n     * metadata will be removed.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n     *\n     * @param metadata - Replace existing metadata with this value.\n     *                               If no value provided the existing metadata will be removed.\n     * @param options - Optional options to Set Metadata operation.\n     */\n    async setMetadata(metadata, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-setMetadata\", options);\n        options.conditions = options.conditions || {};\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blobContext.setMetadata(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets tags on the underlying blob.\n     * A blob can have up to 10 tags. Tag keys must be between 1 and 128 characters.  Tag values must be between 0 and 256 characters.\n     * Valid tag key and value characters include lower and upper case letters, digits (0-9),\n     * space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'), colon (':'), equals ('='), and underscore ('_').\n     *\n     * @param tags -\n     * @param options -\n     */\n    async setTags(tags, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-setTags\", options);\n        try {\n            return await this.blobContext.setTags(Object.assign(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)), { tags: toBlobTags(tags) }));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Gets the tags associated with the underlying blob.\n     *\n     * @param options -\n     */\n    async getTags(options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-getTags\", options);\n        try {\n            const response = await this.blobContext.getTags(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n            const wrappedResponse = Object.assign(Object.assign({}, response), { _response: response._response, tags: toTags({ blobTagSet: response.blobTagSet }) || {} });\n            return wrappedResponse;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Get a {@link BlobLeaseClient} that manages leases on the blob.\n     *\n     * @param proposeLeaseId - Initial proposed lease Id.\n     * @returns A new BlobLeaseClient object for managing leases on the blob.\n     */\n    getBlobLeaseClient(proposeLeaseId) {\n        return new BlobLeaseClient(this, proposeLeaseId);\n    }\n    /**\n     * Creates a read-only snapshot of a blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n     *\n     * @param options - Optional options to the Blob Create Snapshot operation.\n     */\n    async createSnapshot(options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-createSnapshot\", options);\n        options.conditions = options.conditions || {};\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blobContext.createSnapshot(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, metadata: options.metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Asynchronously copies a blob to a destination within the storage account.\n     * This method returns a long running operation poller that allows you to wait\n     * indefinitely until the copy is completed.\n     * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.\n     * Note that the onProgress callback will not be invoked if the operation completes in the first\n     * request, and attempting to cancel a completed copy will result in an error being thrown.\n     *\n     * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n     * a committed blob in any Azure storage account.\n     * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n     * an Azure file in any Azure storage account.\n     * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n     * operation to copy from another storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n     *\n     * Example using automatic polling:\n     *\n     * ```js\n     * const copyPoller = await blobClient.beginCopyFromURL('url');\n     * const result = await copyPoller.pollUntilDone();\n     * ```\n     *\n     * Example using manual polling:\n     *\n     * ```js\n     * const copyPoller = await blobClient.beginCopyFromURL('url');\n     * while (!poller.isDone()) {\n     *    await poller.poll();\n     * }\n     * const result = copyPoller.getResult();\n     * ```\n     *\n     * Example using progress updates:\n     *\n     * ```js\n     * const copyPoller = await blobClient.beginCopyFromURL('url', {\n     *   onProgress(state) {\n     *     console.log(`Progress: ${state.copyProgress}`);\n     *   }\n     * });\n     * const result = await copyPoller.pollUntilDone();\n     * ```\n     *\n     * Example using a changing polling interval (default 15 seconds):\n     *\n     * ```js\n     * const copyPoller = await blobClient.beginCopyFromURL('url', {\n     *   intervalInMs: 1000 // poll blob every 1 second for copy progress\n     * });\n     * const result = await copyPoller.pollUntilDone();\n     * ```\n     *\n     * Example using copy cancellation:\n     *\n     * ```js\n     * const copyPoller = await blobClient.beginCopyFromURL('url');\n     * // cancel operation after starting it.\n     * try {\n     *   await copyPoller.cancelOperation();\n     *   // calls to get the result now throw PollerCancelledError\n     *   await copyPoller.getResult();\n     * } catch (err) {\n     *   if (err.name === 'PollerCancelledError') {\n     *     console.log('The copy was cancelled.');\n     *   }\n     * }\n     * ```\n     *\n     * @param copySource - url to the source Azure Blob/File.\n     * @param options - Optional options to the Blob Start Copy From URL operation.\n     */\n    async beginCopyFromURL(copySource, options = {}) {\n        const client = {\n            abortCopyFromURL: (...args) => this.abortCopyFromURL(...args),\n            getProperties: (...args) => this.getProperties(...args),\n            startCopyFromURL: (...args) => this.startCopyFromURL(...args)\n        };\n        const poller = new BlobBeginCopyFromUrlPoller({\n            blobClient: client,\n            copySource,\n            intervalInMs: options.intervalInMs,\n            onProgress: options.onProgress,\n            resumeFrom: options.resumeFrom,\n            startCopyFromURLOptions: options\n        });\n        // Trigger the startCopyFromURL call by calling poll.\n        // Any errors from this method should be surfaced to the user.\n        await poller.poll();\n        return poller;\n    }\n    /**\n     * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n     * length and full metadata. Version 2012-02-12 and newer.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n     *\n     * @param copyId - Id of the Copy From URL operation.\n     * @param options - Optional options to the Blob Abort Copy From URL operation.\n     */\n    async abortCopyFromURL(copyId, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-abortCopyFromURL\", options);\n        try {\n            return await this.blobContext.abortCopyFromURL(copyId, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n     * return a response until the copy is complete.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n     *\n     * @param copySource - The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n     * @param options -\n     */\n    async syncCopyFromURL(copySource, options = {}) {\n        var _a, _b, _c;\n        const { span, updatedOptions } = createSpan(\"BlobClient-syncCopyFromURL\", options);\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        try {\n            return await this.blobContext.copyFromURL(copySource, Object.assign({ abortSignal: options.abortSignal, metadata: options.metadata, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), sourceModifiedAccessConditions: {\n                    sourceIfMatch: options.sourceConditions.ifMatch,\n                    sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n                    sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n                    sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n                }, sourceContentMD5: options.sourceContentMD5, copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization), blobTagsString: toBlobTagsString(options.tags), immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn, immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode, legalHold: options.legalHold }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n     * storage account and on a block blob in a blob storage account (locally redundant\n     * storage only). A premium page blob's tier determines the allowed size, IOPS,\n     * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n     * storage type. This operation does not update the blob's ETag.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n     *\n     * @param tier - The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n     * @param options - Optional options to the Blob Set Tier operation.\n     */\n    async setAccessTier(tier, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlobClient-setAccessTier\", options);\n        try {\n            return await this.blobContext.setTier(toAccessTier(tier), Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), rehydratePriority: options.rehydratePriority }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    async downloadToBuffer(param1, param2, param3, param4 = {}) {\n        let buffer;\n        let offset = 0;\n        let count = 0;\n        let options = param4;\n        if (param1 instanceof Buffer) {\n            buffer = param1;\n            offset = param2 || 0;\n            count = typeof param3 === \"number\" ? param3 : 0;\n        }\n        else {\n            offset = typeof param1 === \"number\" ? param1 : 0;\n            count = typeof param2 === \"number\" ? param2 : 0;\n            options = param3 || {};\n        }\n        const { span, updatedOptions } = createSpan(\"BlobClient-downloadToBuffer\", options);\n        try {\n            if (!options.blockSize) {\n                options.blockSize = 0;\n            }\n            if (options.blockSize < 0) {\n                throw new RangeError(\"blockSize option must be >= 0\");\n            }\n            if (options.blockSize === 0) {\n                options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n            }\n            if (offset < 0) {\n                throw new RangeError(\"offset option must be >= 0\");\n            }\n            if (count && count <= 0) {\n                throw new RangeError(\"count option must be greater than 0\");\n            }\n            if (!options.conditions) {\n                options.conditions = {};\n            }\n            // Customer doesn't specify length, get it\n            if (!count) {\n                const response = await this.getProperties(Object.assign(Object.assign({}, options), { tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), convertTracingToRequestOptionsBase(updatedOptions)) }));\n                count = response.contentLength - offset;\n                if (count < 0) {\n                    throw new RangeError(`offset ${offset} shouldn't be larger than blob size ${response.contentLength}`);\n                }\n            }\n            // Allocate the buffer of size = count if the buffer is not provided\n            if (!buffer) {\n                try {\n                    buffer = Buffer.alloc(count);\n                }\n                catch (error) {\n                    throw new Error(`Unable to allocate the buffer of size: ${count}(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\\t ${error.message}`);\n                }\n            }\n            if (buffer.length < count) {\n                throw new RangeError(`The buffer's size should be equal to or larger than the request count of bytes: ${count}`);\n            }\n            let transferProgress = 0;\n            const batch = new Batch(options.concurrency);\n            for (let off = offset; off < offset + count; off = off + options.blockSize) {\n                batch.addOperation(async () => {\n                    // Exclusive chunk end position\n                    let chunkEnd = offset + count;\n                    if (off + options.blockSize < chunkEnd) {\n                        chunkEnd = off + options.blockSize;\n                    }\n                    const response = await this.download(off, chunkEnd - off, {\n                        abortSignal: options.abortSignal,\n                        conditions: options.conditions,\n                        maxRetryRequests: options.maxRetryRequestsPerBlock,\n                        customerProvidedKey: options.customerProvidedKey,\n                        tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), convertTracingToRequestOptionsBase(updatedOptions))\n                    });\n                    const stream = response.readableStreamBody;\n                    await streamToBuffer(stream, buffer, off - offset, chunkEnd - offset);\n                    // Update progress after block is downloaded, in case of block trying\n                    // Could provide finer grained progress updating inside HTTP requests,\n                    // only if convenience layer download try is enabled\n                    transferProgress += chunkEnd - off;\n                    if (options.onProgress) {\n                        options.onProgress({ loadedBytes: transferProgress });\n                    }\n                });\n            }\n            await batch.do();\n            return buffer;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * ONLY AVAILABLE IN NODE.JS RUNTIME.\n     *\n     * Downloads an Azure Blob to a local file.\n     * Fails if the the given file path already exits.\n     * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n     *\n     * @param filePath -\n     * @param offset - From which position of the block blob to download.\n     * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n     * @param options - Options to Blob download options.\n     * @returns The response data for blob download operation,\n     *                                                 but with readableStreamBody set to undefined since its\n     *                                                 content is already read and written into a local file\n     *                                                 at the specified path.\n     */\n    async downloadToFile(filePath, offset = 0, count, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-downloadToFile\", options);\n        try {\n            const response = await this.download(offset, count, Object.assign(Object.assign({}, options), { tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), convertTracingToRequestOptionsBase(updatedOptions)) }));\n            if (response.readableStreamBody) {\n                await readStreamToLocalFile(response.readableStreamBody, filePath);\n            }\n            // The stream is no longer accessible so setting it to undefined.\n            response.blobDownloadStream = undefined;\n            return response;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    getBlobAndContainerNamesFromUrl() {\n        let containerName;\n        let blobName;\n        try {\n            //  URL may look like the following\n            // \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\";\n            // \"https://myaccount.blob.core.windows.net/mycontainer/blob\";\n            // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString\";\n            // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt\";\n            // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`\n            // http://localhost:10001/devstoreaccount1/containername/blob\n            const parsedUrl = URLBuilder.parse(this.url);\n            if (parsedUrl.getHost().split(\".\")[1] === \"blob\") {\n                // \"https://myaccount.blob.core.windows.net/containername/blob\".\n                // .getPath() -> /containername/blob\n                const pathComponents = parsedUrl.getPath().match(\"/([^/]*)(/(.*))?\");\n                containerName = pathComponents[1];\n                blobName = pathComponents[3];\n            }\n            else if (isIpEndpointStyle(parsedUrl)) {\n                // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob\n                // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob\n                // .getPath() -> /devstoreaccount1/containername/blob\n                const pathComponents = parsedUrl.getPath().match(\"/([^/]*)/([^/]*)(/(.*))?\");\n                containerName = pathComponents[2];\n                blobName = pathComponents[4];\n            }\n            else {\n                // \"https://customdomain.com/containername/blob\".\n                // .getPath() -> /containername/blob\n                const pathComponents = parsedUrl.getPath().match(\"/([^/]*)(/(.*))?\");\n                containerName = pathComponents[1];\n                blobName = pathComponents[3];\n            }\n            // decode the encoded blobName, containerName - to get all the special characters that might be present in them\n            containerName = decodeURIComponent(containerName);\n            blobName = decodeURIComponent(blobName);\n            // Azure Storage Server will replace \"\\\" with \"/\" in the blob names\n            //   doing the same in the SDK side so that the user doesn't have to replace \"\\\" instances in the blobName\n            blobName = blobName.replace(/\\\\/g, \"/\");\n            if (!containerName) {\n                throw new Error(\"Provided containerName is invalid.\");\n            }\n            return { blobName, containerName };\n        }\n        catch (error) {\n            throw new Error(\"Unable to extract blobName and containerName with provided information.\");\n        }\n    }\n    /**\n     * Asynchronously copies a blob to a destination within the storage account.\n     * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n     * a committed blob in any Azure storage account.\n     * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n     * an Azure file in any Azure storage account.\n     * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n     * operation to copy from another storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n     *\n     * @param copySource - url to the source Azure Blob/File.\n     * @param options - Optional options to the Blob Start Copy From URL operation.\n     */\n    async startCopyFromURL(copySource, options = {}) {\n        var _a, _b, _c;\n        const { span, updatedOptions } = createSpan(\"BlobClient-startCopyFromURL\", options);\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        try {\n            return await this.blobContext.startCopyFromURL(copySource, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, metadata: options.metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), sourceModifiedAccessConditions: {\n                    sourceIfMatch: options.sourceConditions.ifMatch,\n                    sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n                    sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n                    sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n                    sourceIfTags: options.sourceConditions.tagConditions\n                }, immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn, immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode, legalHold: options.legalHold, rehydratePriority: options.rehydratePriority, tier: toAccessTier(options.tier), blobTagsString: toBlobTagsString(options.tags), sealBlob: options.sealBlob }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Only available for BlobClient constructed with a shared key credential.\n     *\n     * Generates a Blob Service Shared Access Signature (SAS) URI based on the client properties\n     * and parameters passed in. The SAS is signed by the shared key credential of the client.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n     *\n     * @param options - Optional parameters.\n     * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n     */\n    generateSasUrl(options) {\n        return new Promise((resolve) => {\n            if (!(this.credential instanceof StorageSharedKeyCredential)) {\n                throw new RangeError(\"Can only generate the SAS when the client is initialized with a shared key credential\");\n            }\n            const sas = generateBlobSASQueryParameters(Object.assign({ containerName: this._containerName, blobName: this._name, snapshotTime: this._snapshot, versionId: this._versionId }, options), this.credential).toString();\n            resolve(appendToURLQuery(this.url, sas));\n        });\n    }\n    /**\n     * Delete the immutablility policy on the blob.\n     *\n     * @param options - Optional options to delete immutability policy on the blob.\n     */\n    async deleteImmutabilityPolicy(options) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-deleteImmutabilityPolicy\", options);\n        try {\n            return await this.blobContext.deleteImmutabilityPolicy(Object.assign({ abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Set immutablility policy on the blob.\n     *\n     * @param options - Optional options to set immutability policy on the blob.\n     */\n    async setImmutabilityPolicy(immutabilityPolicy, options) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-setImmutabilityPolicy\", options);\n        try {\n            return await this.blobContext.setImmutabilityPolicy(Object.assign({ abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal, immutabilityPolicyExpiry: immutabilityPolicy.expiriesOn, immutabilityPolicyMode: immutabilityPolicy.policyMode, modifiedAccessConditions: options === null || options === void 0 ? void 0 : options.modifiedAccessCondition }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Set legal hold on the blob.\n     *\n     * @param options - Optional options to set legal hold on the blob.\n     */\n    async setLegalHold(legalHoldEnabled, options) {\n        const { span, updatedOptions } = createSpan(\"BlobClient-setLegalHold\", options);\n        try {\n            return await this.blobContext.setLegalHold(legalHoldEnabled, Object.assign({ abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n */\nexport class AppendBlobClient extends BlobClient {\n    constructor(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n        //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n        let pipeline;\n        let url;\n        options = options || {};\n        if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n            // (url: string, pipeline: Pipeline)\n            url = urlOrConnectionString;\n            pipeline = credentialOrPipelineOrContainerName;\n        }\n        else if ((isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n            credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n            isTokenCredential(credentialOrPipelineOrContainerName)) {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;\n            url = urlOrConnectionString;\n            options = blobNameOrOptions;\n            pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n        }\n        else if (!credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName !== \"string\") {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            url = urlOrConnectionString;\n            // The second parameter is undefined. Use anonymous credential.\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        else if (credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName === \"string\" &&\n            blobNameOrOptions &&\n            typeof blobNameOrOptions === \"string\") {\n            // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n            const containerName = credentialOrPipelineOrContainerName;\n            const blobName = blobNameOrOptions;\n            const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n            if (extractedCreds.kind === \"AccountConnString\") {\n                if (isNode) {\n                    const sharedKeyCredential = new StorageSharedKeyCredential(extractedCreds.accountName, extractedCreds.accountKey);\n                    url = appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));\n                    options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n                    pipeline = newPipeline(sharedKeyCredential, options);\n                }\n                else {\n                    throw new Error(\"Account connection string is only supported in Node.js environment\");\n                }\n            }\n            else if (extractedCreds.kind === \"SASConnString\") {\n                url =\n                    appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) +\n                        \"?\" +\n                        extractedCreds.accountSas;\n                pipeline = newPipeline(new AnonymousCredential(), options);\n            }\n            else {\n                throw new Error(\"Connection string must be either an Account connection string or a SAS connection string\");\n            }\n        }\n        else {\n            throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n        }\n        super(url, pipeline);\n        this.appendBlobContext = new AppendBlob(this.storageClientContext);\n    }\n    /**\n     * Creates a new AppendBlobClient object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a Client to the base blob.\n     *\n     * @param snapshot - The snapshot timestamp.\n     * @returns A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n     */\n    withSnapshot(snapshot) {\n        return new AppendBlobClient(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    }\n    /**\n     * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param options - Options to the Append Block Create operation.\n     *\n     *\n     * Example usage:\n     *\n     * ```js\n     * const appendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n     * await appendBlobClient.create();\n     * ```\n     */\n    async create(options = {}) {\n        var _a, _b, _c;\n        const { span, updatedOptions } = createSpan(\"AppendBlobClient-create\", options);\n        options.conditions = options.conditions || {};\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.appendBlobContext.create(0, Object.assign({ abortSignal: options.abortSignal, blobHttpHeaders: options.blobHTTPHeaders, leaseAccessConditions: options.conditions, metadata: options.metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope, immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn, immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode, legalHold: options.legalHold, blobTagsString: toBlobTagsString(options.tags) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n     * If the blob with the same name already exists, the content of the existing blob will remain unchanged.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param options -\n     */\n    async createIfNotExists(options = {}) {\n        var _a, _b;\n        const { span, updatedOptions } = createSpan(\"AppendBlobClient-createIfNotExists\", options);\n        const conditions = { ifNoneMatch: ETagAny };\n        try {\n            const res = await this.create(Object.assign(Object.assign({}, updatedOptions), { conditions }));\n            return Object.assign(Object.assign({ succeeded: true }, res), { _response: res._response // _response is made non-enumerable\n             });\n        }\n        catch (e) {\n            if (((_a = e.details) === null || _a === void 0 ? void 0 : _a.errorCode) === \"BlobAlreadyExists\") {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when creating a blob only if it does not already exist.\"\n                });\n                return Object.assign(Object.assign({ succeeded: false }, (_b = e.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), { _response: e.response });\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Seals the append blob, making it read only.\n     *\n     * @param options -\n     */\n    async seal(options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"AppendBlobClient-seal\", options);\n        options.conditions = options.conditions || {};\n        try {\n            return await this.appendBlobContext.seal(Object.assign({ abortSignal: options.abortSignal, appendPositionAccessConditions: options.conditions, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Commits a new block of data to the end of the existing append blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n     *\n     * @param body - Data to be appended.\n     * @param contentLength - Length of the body in bytes.\n     * @param options - Options to the Append Block operation.\n     *\n     *\n     * Example usage:\n     *\n     * ```js\n     * const content = \"Hello World!\";\n     *\n     * // Create a new append blob and append data to the blob.\n     * const newAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n     * await newAppendBlobClient.create();\n     * await newAppendBlobClient.appendBlock(content, content.length);\n     *\n     * // Append data to an existing append blob.\n     * const existingAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n     * await existingAppendBlobClient.appendBlock(content, content.length);\n     * ```\n     */\n    async appendBlock(body, contentLength, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"AppendBlobClient-appendBlock\", options);\n        options.conditions = options.conditions || {};\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.appendBlobContext.appendBlock(contentLength, body, Object.assign({ abortSignal: options.abortSignal, appendPositionAccessConditions: options.conditions, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), requestOptions: {\n                    onUploadProgress: options.onProgress\n                }, transactionalContentMD5: options.transactionalContentMD5, transactionalContentCrc64: options.transactionalContentCrc64, cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * The Append Block operation commits a new block of data to the end of an existing append blob\n     * where the contents are read from a source url.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n     *\n     * @param sourceURL -\n     *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n     *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n     *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n     *                 public, no authentication is required to perform the operation.\n     * @param sourceOffset - Offset in source to be appended\n     * @param count - Number of bytes to be appended as a block\n     * @param options -\n     */\n    async appendBlockFromURL(sourceURL, sourceOffset, count, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"AppendBlobClient-appendBlockFromURL\", options);\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, Object.assign({ abortSignal: options.abortSignal, sourceRange: rangeToString({ offset: sourceOffset, count }), sourceContentMD5: options.sourceContentMD5, sourceContentCrc64: options.sourceContentCrc64, leaseAccessConditions: options.conditions, appendPositionAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), sourceModifiedAccessConditions: {\n                    sourceIfMatch: options.sourceConditions.ifMatch,\n                    sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n                    sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n                    sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n                }, copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n */\nexport class BlockBlobClient extends BlobClient {\n    constructor(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n        //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n        let pipeline;\n        let url;\n        options = options || {};\n        if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n            // (url: string, pipeline: Pipeline)\n            url = urlOrConnectionString;\n            pipeline = credentialOrPipelineOrContainerName;\n        }\n        else if ((isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n            credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n            isTokenCredential(credentialOrPipelineOrContainerName)) {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            url = urlOrConnectionString;\n            options = blobNameOrOptions;\n            pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n        }\n        else if (!credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName !== \"string\") {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            // The second parameter is undefined. Use anonymous credential.\n            url = urlOrConnectionString;\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        else if (credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName === \"string\" &&\n            blobNameOrOptions &&\n            typeof blobNameOrOptions === \"string\") {\n            // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n            const containerName = credentialOrPipelineOrContainerName;\n            const blobName = blobNameOrOptions;\n            const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n            if (extractedCreds.kind === \"AccountConnString\") {\n                if (isNode) {\n                    const sharedKeyCredential = new StorageSharedKeyCredential(extractedCreds.accountName, extractedCreds.accountKey);\n                    url = appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));\n                    options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n                    pipeline = newPipeline(sharedKeyCredential, options);\n                }\n                else {\n                    throw new Error(\"Account connection string is only supported in Node.js environment\");\n                }\n            }\n            else if (extractedCreds.kind === \"SASConnString\") {\n                url =\n                    appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) +\n                        \"?\" +\n                        extractedCreds.accountSas;\n                pipeline = newPipeline(new AnonymousCredential(), options);\n            }\n            else {\n                throw new Error(\"Connection string must be either an Account connection string or a SAS connection string\");\n            }\n        }\n        else {\n            throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n        }\n        super(url, pipeline);\n        this.blockBlobContext = new BlockBlob(this.storageClientContext);\n        this._blobContext = new StorageBlob(this.storageClientContext);\n    }\n    /**\n     * Creates a new BlockBlobClient object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param snapshot - The snapshot timestamp.\n     * @returns A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n     */\n    withSnapshot(snapshot) {\n        return new BlockBlobClient(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    }\n    /**\n     * ONLY AVAILABLE IN NODE.JS RUNTIME.\n     *\n     * Quick query for a JSON or CSV formatted blob.\n     *\n     * Example usage (Node.js):\n     *\n     * ```js\n     * // Query and convert a blob to a string\n     * const queryBlockBlobResponse = await blockBlobClient.query(\"select * from BlobStorage\");\n     * const downloaded = (await streamToBuffer(queryBlockBlobResponse.readableStreamBody)).toString();\n     * console.log(\"Query blob content:\", downloaded);\n     *\n     * async function streamToBuffer(readableStream) {\n     *   return new Promise((resolve, reject) => {\n     *     const chunks = [];\n     *     readableStream.on(\"data\", (data) => {\n     *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n     *     });\n     *     readableStream.on(\"end\", () => {\n     *       resolve(Buffer.concat(chunks));\n     *     });\n     *     readableStream.on(\"error\", reject);\n     *   });\n     * }\n     * ```\n     *\n     * @param query -\n     * @param options -\n     */\n    async query(query, options = {}) {\n        var _a;\n        ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-query\", options);\n        try {\n            if (!isNode) {\n                throw new Error(\"This operation currently is only supported in Node.js.\");\n            }\n            const response = await this._blobContext.query(Object.assign({ abortSignal: options.abortSignal, queryRequest: {\n                    queryType: \"SQL\",\n                    expression: query,\n                    inputSerialization: toQuerySerialization(options.inputTextConfiguration),\n                    outputSerialization: toQuerySerialization(options.outputTextConfiguration)\n                }, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n            return new BlobQueryResponse(response, {\n                abortSignal: options.abortSignal,\n                onProgress: options.onProgress,\n                onError: options.onError\n            });\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a new block blob, or updates the content of an existing block blob.\n     * Updating an existing block blob overwrites any existing metadata on the blob.\n     * Partial updates are not supported; the content of the existing blob is\n     * overwritten with the new content. To perform a partial update of a block blob's,\n     * use {@link stageBlock} and {@link commitBlockList}.\n     *\n     * This is a non-parallel uploading method, please use {@link uploadFile},\n     * {@link uploadStream} or {@link uploadBrowserData} for better performance\n     * with concurrency uploading.\n     *\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n     *                               which returns a new Readable stream whose offset is from data source beginning.\n     * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n     *                               string including non non-Base64/Hex-encoded characters.\n     * @param options - Options to the Block Blob Upload operation.\n     * @returns Response data for the Block Blob Upload operation.\n     *\n     * Example usage:\n     *\n     * ```js\n     * const content = \"Hello world!\";\n     * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n     * ```\n     */\n    async upload(body, contentLength, options = {}) {\n        var _a, _b, _c;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-upload\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blockBlobContext.upload(contentLength, body, Object.assign({ abortSignal: options.abortSignal, blobHttpHeaders: options.blobHTTPHeaders, leaseAccessConditions: options.conditions, metadata: options.metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), requestOptions: {\n                    onUploadProgress: options.onProgress\n                }, cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope, immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn, immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode, legalHold: options.legalHold, tier: toAccessTier(options.tier), blobTagsString: toBlobTagsString(options.tags) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a new Block Blob where the contents of the blob are read from a given URL.\n     * This API is supported beginning with the 2020-04-08 version. Partial updates\n     * are not supported with Put Blob from URL; the content of an existing blob is overwritten with\n     * the content of the new blob.  To perform partial updates to a block blob’s contents using a\n     * source URL, use {@link stageBlockFromURL} and {@link commitBlockList}.\n     *\n     * @param sourceURL - Specifies the URL of the blob. The value\n     *                           may be a URL of up to 2 KB in length that specifies a blob.\n     *                           The value should be URL-encoded as it would appear\n     *                           in a request URI. The source blob must either be public\n     *                           or must be authenticated via a shared access signature.\n     *                           If the source blob is public, no authentication is required\n     *                           to perform the operation. Here are some examples of source object URLs:\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param options - Optional parameters.\n     */\n    async syncUploadFromURL(sourceURL, options = {}) {\n        var _a, _b, _c, _d, _e;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-syncUploadFromURL\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blockBlobContext.putBlobFromUrl(0, sourceURL, Object.assign(Object.assign(Object.assign({}, options), { blobHttpHeaders: options.blobHTTPHeaders, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: options.conditions.tagConditions }), sourceModifiedAccessConditions: {\n                    sourceIfMatch: (_a = options.sourceConditions) === null || _a === void 0 ? void 0 : _a.ifMatch,\n                    sourceIfModifiedSince: (_b = options.sourceConditions) === null || _b === void 0 ? void 0 : _b.ifModifiedSince,\n                    sourceIfNoneMatch: (_c = options.sourceConditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch,\n                    sourceIfUnmodifiedSince: (_d = options.sourceConditions) === null || _d === void 0 ? void 0 : _d.ifUnmodifiedSince,\n                    sourceIfTags: (_e = options.sourceConditions) === null || _e === void 0 ? void 0 : _e.tagConditions\n                }, cpkInfo: options.customerProvidedKey, copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization), tier: toAccessTier(options.tier), blobTagsString: toBlobTagsString(options.tags) }), convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Uploads the specified block to the block blob's \"staging area\" to be later\n     * committed by a call to commitBlockList.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n     *\n     * @param blockId - A 64-byte value that is base64-encoded\n     * @param body - Data to upload to the staging area.\n     * @param contentLength - Number of bytes to upload.\n     * @param options - Options to the Block Blob Stage Block operation.\n     * @returns Response data for the Block Blob Stage Block operation.\n     */\n    async stageBlock(blockId, body, contentLength, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-stageBlock\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blockBlobContext.stageBlock(blockId, contentLength, body, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, requestOptions: {\n                    onUploadProgress: options.onProgress\n                }, transactionalContentMD5: options.transactionalContentMD5, transactionalContentCrc64: options.transactionalContentCrc64, cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * The Stage Block From URL operation creates a new block to be committed as part\n     * of a blob where the contents are read from a URL.\n     * This API is available starting in version 2018-03-28.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n     *\n     * @param blockId - A 64-byte value that is base64-encoded\n     * @param sourceURL - Specifies the URL of the blob. The value\n     *                           may be a URL of up to 2 KB in length that specifies a blob.\n     *                           The value should be URL-encoded as it would appear\n     *                           in a request URI. The source blob must either be public\n     *                           or must be authenticated via a shared access signature.\n     *                           If the source blob is public, no authentication is required\n     *                           to perform the operation. Here are some examples of source object URLs:\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param offset - From which position of the blob to download, greater than or equal to 0\n     * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n     * @param options - Options to the Block Blob Stage Block From URL operation.\n     * @returns Response data for the Block Blob Stage Block From URL operation.\n     */\n    async stageBlockFromURL(blockId, sourceURL, offset = 0, count, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-stageBlockFromURL\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, sourceContentMD5: options.sourceContentMD5, sourceContentCrc64: options.sourceContentCrc64, sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count }), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope, copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Writes a blob by specifying the list of block IDs that make up the blob.\n     * In order to be written as part of a blob, a block must have been successfully written\n     * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to\n     * update a blob by uploading only those blocks that have changed, then committing the new and existing\n     * blocks together. Any blocks not specified in the block list and permanently deleted.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n     *\n     * @param blocks -  Array of 64-byte value that is base64-encoded\n     * @param options - Options to the Block Blob Commit Block List operation.\n     * @returns Response data for the Block Blob Commit Block List operation.\n     */\n    async commitBlockList(blocks, options = {}) {\n        var _a, _b, _c;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-commitBlockList\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.blockBlobContext.commitBlockList({ latest: blocks }, Object.assign({ abortSignal: options.abortSignal, blobHttpHeaders: options.blobHTTPHeaders, leaseAccessConditions: options.conditions, metadata: options.metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope, immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn, immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode, legalHold: options.legalHold, tier: toAccessTier(options.tier), blobTagsString: toBlobTagsString(options.tags) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns the list of blocks that have been uploaded as part of a block blob\n     * using the specified block list filter.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n     *\n     * @param listType - Specifies whether to return the list of committed blocks,\n     *                                        the list of uncommitted blocks, or both lists together.\n     * @param options - Options to the Block Blob Get Block List operation.\n     * @returns Response data for the Block Blob Get Block List operation.\n     */\n    async getBlockList(listType, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-getBlockList\", options);\n        try {\n            const res = await this.blockBlobContext.getBlockList(listType, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n            if (!res.committedBlocks) {\n                res.committedBlocks = [];\n            }\n            if (!res.uncommittedBlocks) {\n                res.uncommittedBlocks = [];\n            }\n            return res;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    // High level functions\n    /**\n     * Uploads a Buffer(Node.js)/Blob(browsers)/ArrayBuffer/ArrayBufferView object to a BlockBlob.\n     *\n     * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n     * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n     * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n     * to commit the block list.\n     *\n     * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n     * `blobContentType`, enabling the browser to provide\n     * functionality based on file type.\n     *\n     * @param data - Buffer(Node.js), Blob, ArrayBuffer or ArrayBufferView\n     * @param options -\n     */\n    async uploadData(data, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadData\", options);\n        try {\n            if (isNode) {\n                let buffer;\n                if (data instanceof Buffer) {\n                    buffer = data;\n                }\n                else if (data instanceof ArrayBuffer) {\n                    buffer = Buffer.from(data);\n                }\n                else {\n                    data = data;\n                    buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n                }\n                return this.uploadSeekableInternal((offset, size) => buffer.slice(offset, offset + size), buffer.byteLength, updatedOptions);\n            }\n            else {\n                const browserBlob = new Blob([data]);\n                return this.uploadSeekableInternal((offset, size) => browserBlob.slice(offset, offset + size), browserBlob.size, updatedOptions);\n            }\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * ONLY AVAILABLE IN BROWSERS.\n     *\n     * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n     *\n     * When buffer length lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n     * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call\n     * {@link commitBlockList} to commit the block list.\n     *\n     * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n     * `blobContentType`, enabling the browser to provide\n     * functionality based on file type.\n     *\n     * @deprecated Use {@link uploadData} instead.\n     *\n     * @param browserData - Blob, File, ArrayBuffer or ArrayBufferView\n     * @param options - Options to upload browser data.\n     * @returns Response data for the Blob Upload operation.\n     */\n    async uploadBrowserData(browserData, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadBrowserData\", options);\n        try {\n            const browserBlob = new Blob([browserData]);\n            return await this.uploadSeekableInternal((offset, size) => browserBlob.slice(offset, offset + size), browserBlob.size, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     *\n     * Uploads data to block blob. Requires a bodyFactory as the data source,\n     * which need to return a {@link HttpRequestBody} object with the offset and size provided.\n     *\n     * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n     * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n     * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n     * to commit the block list.\n     *\n     * @param bodyFactory -\n     * @param size - size of the data to upload.\n     * @param options - Options to Upload to Block Blob operation.\n     * @returns Response data for the Blob Upload operation.\n     */\n    async uploadSeekableInternal(bodyFactory, size, options = {}) {\n        if (!options.blockSize) {\n            options.blockSize = 0;\n        }\n        if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n            throw new RangeError(`blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`);\n        }\n        if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n            options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n        }\n        if (options.maxSingleShotSize < 0 ||\n            options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n            throw new RangeError(`maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`);\n        }\n        if (options.blockSize === 0) {\n            if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n                throw new RangeError(`${size} is too larger to upload to a block blob.`);\n            }\n            if (size > options.maxSingleShotSize) {\n                options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n                if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n                    options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n                }\n            }\n        }\n        if (!options.blobHTTPHeaders) {\n            options.blobHTTPHeaders = {};\n        }\n        if (!options.conditions) {\n            options.conditions = {};\n        }\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadSeekableInternal\", options);\n        try {\n            if (size <= options.maxSingleShotSize) {\n                return await this.upload(bodyFactory(0, size), size, updatedOptions);\n            }\n            const numBlocks = Math.floor((size - 1) / options.blockSize) + 1;\n            if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n                throw new RangeError(`The buffer's size is too big or the BlockSize is too small;` +\n                    `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`);\n            }\n            const blockList = [];\n            const blockIDPrefix = generateUuid();\n            let transferProgress = 0;\n            const batch = new Batch(options.concurrency);\n            for (let i = 0; i < numBlocks; i++) {\n                batch.addOperation(async () => {\n                    const blockID = generateBlockID(blockIDPrefix, i);\n                    const start = options.blockSize * i;\n                    const end = i === numBlocks - 1 ? size : start + options.blockSize;\n                    const contentLength = end - start;\n                    blockList.push(blockID);\n                    await this.stageBlock(blockID, bodyFactory(start, contentLength), contentLength, {\n                        abortSignal: options.abortSignal,\n                        conditions: options.conditions,\n                        encryptionScope: options.encryptionScope,\n                        tracingOptions: updatedOptions.tracingOptions\n                    });\n                    // Update progress after block is successfully uploaded to server, in case of block trying\n                    // TODO: Hook with convenience layer progress event in finer level\n                    transferProgress += contentLength;\n                    if (options.onProgress) {\n                        options.onProgress({\n                            loadedBytes: transferProgress\n                        });\n                    }\n                });\n            }\n            await batch.do();\n            return this.commitBlockList(blockList, updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * ONLY AVAILABLE IN NODE.JS RUNTIME.\n     *\n     * Uploads a local file in blocks to a block blob.\n     *\n     * When file size lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n     * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n     * to commit the block list.\n     *\n     * @param filePath - Full path of local file\n     * @param options - Options to Upload to Block Blob operation.\n     * @returns Response data for the Blob Upload operation.\n     */\n    async uploadFile(filePath, options = {}) {\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadFile\", options);\n        try {\n            const size = (await fsStat(filePath)).size;\n            return await this.uploadSeekableInternal((offset, count) => {\n                return () => fsCreateReadStream(filePath, {\n                    autoClose: true,\n                    end: count ? offset + count - 1 : Infinity,\n                    start: offset\n                });\n            }, size, Object.assign(Object.assign({}, options), { tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), convertTracingToRequestOptionsBase(updatedOptions)) }));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * ONLY AVAILABLE IN NODE.JS RUNTIME.\n     *\n     * Uploads a Node.js Readable stream into block blob.\n     *\n     * PERFORMANCE IMPROVEMENT TIPS:\n     * * Input stream highWaterMark is better to set a same value with bufferSize\n     *    parameter, which will avoid Buffer.concat() operations.\n     *\n     * @param stream - Node.js Readable stream\n     * @param bufferSize - Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB\n     * @param maxConcurrency -  Max concurrency indicates the max number of buffers that can be allocated,\n     *                                 positive correlation with max uploading concurrency. Default value is 5\n     * @param options - Options to Upload Stream to Block Blob operation.\n     * @returns Response data for the Blob Upload operation.\n     */\n    async uploadStream(stream, bufferSize = DEFAULT_BLOCK_BUFFER_SIZE_BYTES, maxConcurrency = 5, options = {}) {\n        if (!options.blobHTTPHeaders) {\n            options.blobHTTPHeaders = {};\n        }\n        if (!options.conditions) {\n            options.conditions = {};\n        }\n        const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadStream\", options);\n        try {\n            let blockNum = 0;\n            const blockIDPrefix = generateUuid();\n            let transferProgress = 0;\n            const blockList = [];\n            const scheduler = new BufferScheduler(stream, bufferSize, maxConcurrency, async (body, length) => {\n                const blockID = generateBlockID(blockIDPrefix, blockNum);\n                blockList.push(blockID);\n                blockNum++;\n                await this.stageBlock(blockID, body, length, {\n                    conditions: options.conditions,\n                    encryptionScope: options.encryptionScope,\n                    tracingOptions: updatedOptions.tracingOptions\n                });\n                // Update progress after block is successfully uploaded to server, in case of block trying\n                transferProgress += length;\n                if (options.onProgress) {\n                    options.onProgress({ loadedBytes: transferProgress });\n                }\n            }, \n            // concurrency should set a smaller value than maxConcurrency, which is helpful to\n            // reduce the possibility when a outgoing handler waits for stream data, in\n            // this situation, outgoing handlers are blocked.\n            // Outgoing queue shouldn't be empty.\n            Math.ceil((maxConcurrency / 4) * 3));\n            await scheduler.do();\n            return await this.commitBlockList(blockList, Object.assign(Object.assign({}, options), { tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), convertTracingToRequestOptionsBase(updatedOptions)) }));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n */\nexport class PageBlobClient extends BlobClient {\n    constructor(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n        //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n        let pipeline;\n        let url;\n        options = options || {};\n        if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n            // (url: string, pipeline: Pipeline)\n            url = urlOrConnectionString;\n            pipeline = credentialOrPipelineOrContainerName;\n        }\n        else if ((isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n            credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n            isTokenCredential(credentialOrPipelineOrContainerName)) {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            url = urlOrConnectionString;\n            options = blobNameOrOptions;\n            pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n        }\n        else if (!credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName !== \"string\") {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            // The second parameter is undefined. Use anonymous credential.\n            url = urlOrConnectionString;\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        else if (credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName === \"string\" &&\n            blobNameOrOptions &&\n            typeof blobNameOrOptions === \"string\") {\n            // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n            const containerName = credentialOrPipelineOrContainerName;\n            const blobName = blobNameOrOptions;\n            const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n            if (extractedCreds.kind === \"AccountConnString\") {\n                if (isNode) {\n                    const sharedKeyCredential = new StorageSharedKeyCredential(extractedCreds.accountName, extractedCreds.accountKey);\n                    url = appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));\n                    options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n                    pipeline = newPipeline(sharedKeyCredential, options);\n                }\n                else {\n                    throw new Error(\"Account connection string is only supported in Node.js environment\");\n                }\n            }\n            else if (extractedCreds.kind === \"SASConnString\") {\n                url =\n                    appendToURLPath(appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) +\n                        \"?\" +\n                        extractedCreds.accountSas;\n                pipeline = newPipeline(new AnonymousCredential(), options);\n            }\n            else {\n                throw new Error(\"Connection string must be either an Account connection string or a SAS connection string\");\n            }\n        }\n        else {\n            throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n        }\n        super(url, pipeline);\n        this.pageBlobContext = new PageBlob(this.storageClientContext);\n    }\n    /**\n     * Creates a new PageBlobClient object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a Client to the base blob.\n     *\n     * @param snapshot - The snapshot timestamp.\n     * @returns A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n     */\n    withSnapshot(snapshot) {\n        return new PageBlobClient(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    }\n    /**\n     * Creates a page blob of the specified length. Call uploadPages to upload data\n     * data to a page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param size - size of the page blob.\n     * @param options - Options to the Page Blob Create operation.\n     * @returns Response data for the Page Blob Create operation.\n     */\n    async create(size, options = {}) {\n        var _a, _b, _c;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-create\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.pageBlobContext.create(0, size, Object.assign({ abortSignal: options.abortSignal, blobHttpHeaders: options.blobHTTPHeaders, blobSequenceNumber: options.blobSequenceNumber, leaseAccessConditions: options.conditions, metadata: options.metadata, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope, immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn, immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode, legalHold: options.legalHold, tier: toAccessTier(options.tier), blobTagsString: toBlobTagsString(options.tags) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a page blob of the specified length. Call uploadPages to upload data\n     * data to a page blob. If the blob with the same name already exists, the content\n     * of the existing blob will remain unchanged.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param size - size of the page blob.\n     * @param options -\n     */\n    async createIfNotExists(size, options = {}) {\n        var _a, _b;\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-createIfNotExists\", options);\n        try {\n            const conditions = { ifNoneMatch: ETagAny };\n            const res = await this.create(size, Object.assign(Object.assign({}, options), { conditions, tracingOptions: updatedOptions.tracingOptions }));\n            return Object.assign(Object.assign({ succeeded: true }, res), { _response: res._response // _response is made non-enumerable\n             });\n        }\n        catch (e) {\n            if (((_a = e.details) === null || _a === void 0 ? void 0 : _a.errorCode) === \"BlobAlreadyExists\") {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when creating a blob only if it does not already exist.\"\n                });\n                return Object.assign(Object.assign({ succeeded: false }, (_b = e.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), { _response: e.response });\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n     *\n     * @param body - Data to upload\n     * @param offset - Offset of destination page blob\n     * @param count - Content length of the body, also number of bytes to be uploaded\n     * @param options - Options to the Page Blob Upload Pages operation.\n     * @returns Response data for the Page Blob Upload Pages operation.\n     */\n    async uploadPages(body, offset, count, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-uploadPages\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.pageBlobContext.uploadPages(count, body, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), requestOptions: {\n                    onUploadProgress: options.onProgress\n                }, range: rangeToString({ offset, count }), sequenceNumberAccessConditions: options.conditions, transactionalContentMD5: options.transactionalContentMD5, transactionalContentCrc64: options.transactionalContentCrc64, cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * The Upload Pages operation writes a range of pages to a page blob where the\n     * contents are read from a URL.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n     *\n     * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n     * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n     * @param destOffset - Offset of destination page blob\n     * @param count - Number of bytes to be uploaded from source page blob\n     * @param options -\n     */\n    async uploadPagesFromURL(sourceURL, sourceOffset, destOffset, count, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-uploadPagesFromURL\", options);\n        try {\n            ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n            return await this.pageBlobContext.uploadPagesFromURL(sourceURL, rangeToString({ offset: sourceOffset, count }), 0, rangeToString({ offset: destOffset, count }), Object.assign({ abortSignal: options.abortSignal, sourceContentMD5: options.sourceContentMD5, sourceContentCrc64: options.sourceContentCrc64, leaseAccessConditions: options.conditions, sequenceNumberAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), sourceModifiedAccessConditions: {\n                    sourceIfMatch: options.sourceConditions.ifMatch,\n                    sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n                    sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n                    sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n                }, cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope, copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Frees the specified pages from the page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n     *\n     * @param offset - Starting byte position of the pages to clear.\n     * @param count - Number of bytes to clear.\n     * @param options - Options to the Page Blob Clear Pages operation.\n     * @returns Response data for the Page Blob Clear Pages operation.\n     */\n    async clearPages(offset = 0, count, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-clearPages\", options);\n        try {\n            return await this.pageBlobContext.clearPages(0, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), range: rangeToString({ offset, count }), sequenceNumberAccessConditions: options.conditions, cpkInfo: options.customerProvidedKey, encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param offset - Starting byte position of the page ranges.\n     * @param count - Number of bytes to get.\n     * @param options - Options to the Page Blob Get Ranges operation.\n     * @returns Response data for the Page Blob Get Ranges operation.\n     */\n    async getPageRanges(offset = 0, count, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-getPageRanges\", options);\n        try {\n            return await this.pageBlobContext\n                .getPageRanges(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), range: rangeToString({ offset, count }) }, convertTracingToRequestOptionsBase(updatedOptions)))\n                .then(rangeResponseFromModel);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param offset - Starting byte position of the page blob\n     * @param count - Number of bytes to get ranges diff.\n     * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n     * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n     * @returns Response data for the Page Blob Get Page Range Diff operation.\n     */\n    async getPageRangesDiff(offset, count, prevSnapshot, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-getPageRangesDiff\", options);\n        try {\n            return await this.pageBlobContext\n                .getPageRangesDiff(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), prevsnapshot: prevSnapshot, range: rangeToString({ offset, count }) }, convertTracingToRequestOptionsBase(updatedOptions)))\n                .then(rangeResponseFromModel);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param offset - Starting byte position of the page blob\n     * @param count - Number of bytes to get ranges diff.\n     * @param prevSnapshotUrl - URL of snapshot to retrieve the difference.\n     * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n     * @returns Response data for the Page Blob Get Page Range Diff operation.\n     */\n    async getPageRangesDiffForManagedDisks(offset, count, prevSnapshotUrl, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-GetPageRangesDiffForManagedDisks\", options);\n        try {\n            return await this.pageBlobContext\n                .getPageRangesDiff(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), prevSnapshotUrl, range: rangeToString({ offset, count }) }, convertTracingToRequestOptionsBase(updatedOptions)))\n                .then(rangeResponseFromModel);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Resizes the page blob to the specified size (which must be a multiple of 512).\n     * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n     *\n     * @param size - Target size\n     * @param options - Options to the Page Blob Resize operation.\n     * @returns Response data for the Page Blob Resize operation.\n     */\n    async resize(size, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-resize\", options);\n        try {\n            return await this.pageBlobContext.resize(size, Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }), encryptionScope: options.encryptionScope }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets a page blob's sequence number.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n     *\n     * @param sequenceNumberAction - Indicates how the service should modify the blob's sequence number.\n     * @param sequenceNumber - Required if sequenceNumberAction is max or update\n     * @param options - Options to the Page Blob Update Sequence Number operation.\n     * @returns Response data for the Page Blob Update Sequence Number operation.\n     */\n    async updateSequenceNumber(sequenceNumberAction, sequenceNumber, options = {}) {\n        var _a;\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-updateSequenceNumber\", options);\n        try {\n            return await this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, Object.assign({ abortSignal: options.abortSignal, blobSequenceNumber: sequenceNumber, leaseAccessConditions: options.conditions, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n     * The snapshot is copied such that only the differential changes between the previously\n     * copied snapshot are transferred to the destination.\n     * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n     * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n     * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n     *\n     * @param copySource - Specifies the name of the source page blob snapshot. For example,\n     *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param options - Options to the Page Blob Copy Incremental operation.\n     * @returns Response data for the Page Blob Copy Incremental operation.\n     */\n    async startCopyIncremental(copySource, options = {}) {\n        var _a;\n        const { span, updatedOptions } = createSpan(\"PageBlobClient-startCopyIncremental\", options);\n        try {\n            return await this.pageBlobContext.copyIncremental(copySource, Object.assign({ abortSignal: options.abortSignal, modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), { ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions }) }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n}\n//# sourceMappingURL=Clients.js.map","import { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { getDefaultProxySettings, isNode, isTokenCredential, URLBuilder } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { Container } from \"./generated/src/operations\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport { StorageClient } from \"./StorageClient\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { appendToURLPath, appendToURLQuery, extractConnectionStringParts, isIpEndpointStyle, parseObjectReplicationRecord, toTags, truncatedISO8061Date } from \"./utils/utils.common\";\nimport { generateBlobSASQueryParameters } from \"./sas/BlobSASSignatureValues\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport { AppendBlobClient, BlobClient, BlockBlobClient, PageBlobClient } from \"./Clients\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n */\nexport class ContainerClient extends StorageClient {\n    constructor(urlOrConnectionString, credentialOrPipelineOrContainerName, \n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options) {\n        let pipeline;\n        let url;\n        options = options || {};\n        if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n            // (url: string, pipeline: Pipeline)\n            url = urlOrConnectionString;\n            pipeline = credentialOrPipelineOrContainerName;\n        }\n        else if ((isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n            credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n            isTokenCredential(credentialOrPipelineOrContainerName)) {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            url = urlOrConnectionString;\n            pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n        }\n        else if (!credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName !== \"string\") {\n            // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n            // The second parameter is undefined. Use anonymous credential.\n            url = urlOrConnectionString;\n            pipeline = newPipeline(new AnonymousCredential(), options);\n        }\n        else if (credentialOrPipelineOrContainerName &&\n            typeof credentialOrPipelineOrContainerName === \"string\") {\n            // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n            const containerName = credentialOrPipelineOrContainerName;\n            const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n            if (extractedCreds.kind === \"AccountConnString\") {\n                if (isNode) {\n                    const sharedKeyCredential = new StorageSharedKeyCredential(extractedCreds.accountName, extractedCreds.accountKey);\n                    url = appendToURLPath(extractedCreds.url, encodeURIComponent(containerName));\n                    options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n                    pipeline = newPipeline(sharedKeyCredential, options);\n                }\n                else {\n                    throw new Error(\"Account connection string is only supported in Node.js environment\");\n                }\n            }\n            else if (extractedCreds.kind === \"SASConnString\") {\n                url =\n                    appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)) +\n                        \"?\" +\n                        extractedCreds.accountSas;\n                pipeline = newPipeline(new AnonymousCredential(), options);\n            }\n            else {\n                throw new Error(\"Connection string must be either an Account connection string or a SAS connection string\");\n            }\n        }\n        else {\n            throw new Error(\"Expecting non-empty strings for containerName parameter\");\n        }\n        super(url, pipeline);\n        this._containerName = this.getContainerNameFromUrl();\n        this.containerContext = new Container(this.storageClientContext);\n    }\n    /**\n     * The name of the container.\n     */\n    get containerName() {\n        return this._containerName;\n    }\n    /**\n     * Creates a new container under the specified account. If the container with\n     * the same name already exists, the operation fails.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n     *\n     * @param options - Options to Container Create operation.\n     *\n     *\n     * Example usage:\n     *\n     * ```js\n     * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n     * const createContainerResponse = await containerClient.create();\n     * console.log(\"Container was created successfully\", createContainerResponse.requestId);\n     * ```\n     */\n    async create(options = {}) {\n        const { span, updatedOptions } = createSpan(\"ContainerClient-create\", options);\n        try {\n            // Spread operator in destructuring assignments,\n            // this will filter out unwanted properties from the response object into result object\n            return await this.containerContext.create(Object.assign(Object.assign({}, options), convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a new container under the specified account. If the container with\n     * the same name already exists, it is not changed.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n     *\n     * @param options -\n     */\n    async createIfNotExists(options = {}) {\n        var _a, _b;\n        const { span, updatedOptions } = createSpan(\"ContainerClient-createIfNotExists\", options);\n        try {\n            const res = await this.create(updatedOptions);\n            return Object.assign(Object.assign({ succeeded: true }, res), { _response: res._response // _response is made non-enumerable\n             });\n        }\n        catch (e) {\n            if (((_a = e.details) === null || _a === void 0 ? void 0 : _a.errorCode) === \"ContainerAlreadyExists\") {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when creating a container only if it does not already exist.\"\n                });\n                return Object.assign(Object.assign({ succeeded: false }, (_b = e.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), { _response: e.response });\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns true if the Azure container resource represented by this client exists; false otherwise.\n     *\n     * NOTE: use this function with care since an existing container might be deleted by other clients or\n     * applications. Vice versa new containers with the same name might be added by other clients or\n     * applications after this function completes.\n     *\n     * @param options -\n     */\n    async exists(options = {}) {\n        const { span, updatedOptions } = createSpan(\"ContainerClient-exists\", options);\n        try {\n            await this.getProperties({\n                abortSignal: options.abortSignal,\n                tracingOptions: updatedOptions.tracingOptions\n            });\n            return true;\n        }\n        catch (e) {\n            if (e.statusCode === 404) {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when checking container existence\"\n                });\n                return false;\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Creates a {@link BlobClient}\n     *\n     * @param blobName - A blob name\n     * @returns A new BlobClient object for the given blob name.\n     */\n    getBlobClient(blobName) {\n        return new BlobClient(appendToURLPath(this.url, encodeURIComponent(blobName)), this.pipeline);\n    }\n    /**\n     * Creates an {@link AppendBlobClient}\n     *\n     * @param blobName - An append blob name\n     */\n    getAppendBlobClient(blobName) {\n        return new AppendBlobClient(appendToURLPath(this.url, encodeURIComponent(blobName)), this.pipeline);\n    }\n    /**\n     * Creates a {@link BlockBlobClient}\n     *\n     * @param blobName - A block blob name\n     *\n     *\n     * Example usage:\n     *\n     * ```js\n     * const content = \"Hello world!\";\n     *\n     * const blockBlobClient = containerClient.getBlockBlobClient(\"<blob name>\");\n     * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n     * ```\n     */\n    getBlockBlobClient(blobName) {\n        return new BlockBlobClient(appendToURLPath(this.url, encodeURIComponent(blobName)), this.pipeline);\n    }\n    /**\n     * Creates a {@link PageBlobClient}\n     *\n     * @param blobName - A page blob name\n     */\n    getPageBlobClient(blobName) {\n        return new PageBlobClient(appendToURLPath(this.url, encodeURIComponent(blobName)), this.pipeline);\n    }\n    /**\n     * Returns all user-defined metadata and system properties for the specified\n     * container. The data returned does not include the container's list of blobs.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n     *\n     * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n     * they originally contained uppercase characters. This differs from the metadata keys returned by\n     * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which\n     * will retain their original casing.\n     *\n     * @param options - Options to Container Get Properties operation.\n     */\n    async getProperties(options = {}) {\n        if (!options.conditions) {\n            options.conditions = {};\n        }\n        const { span, updatedOptions } = createSpan(\"ContainerClient-getProperties\", options);\n        try {\n            return await this.containerContext.getProperties(Object.assign(Object.assign({ abortSignal: options.abortSignal }, options.conditions), convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Marks the specified container for deletion. The container and any blobs\n     * contained within it are later deleted during garbage collection.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n     *\n     * @param options - Options to Container Delete operation.\n     */\n    async delete(options = {}) {\n        if (!options.conditions) {\n            options.conditions = {};\n        }\n        const { span, updatedOptions } = createSpan(\"ContainerClient-delete\", options);\n        try {\n            return await this.containerContext.delete(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, modifiedAccessConditions: options.conditions }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Marks the specified container for deletion if it exists. The container and any blobs\n     * contained within it are later deleted during garbage collection.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n     *\n     * @param options - Options to Container Delete operation.\n     */\n    async deleteIfExists(options = {}) {\n        var _a, _b;\n        const { span, updatedOptions } = createSpan(\"ContainerClient-deleteIfExists\", options);\n        try {\n            const res = await this.delete(updatedOptions);\n            return Object.assign(Object.assign({ succeeded: true }, res), { _response: res._response // _response is made non-enumerable\n             });\n        }\n        catch (e) {\n            if (((_a = e.details) === null || _a === void 0 ? void 0 : _a.errorCode) === \"ContainerNotFound\") {\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: \"Expected exception when deleting a container only if it exists.\"\n                });\n                return Object.assign(Object.assign({ succeeded: false }, (_b = e.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), { _response: e.response });\n            }\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets one or more user-defined name-value pairs for the specified container.\n     *\n     * If no option provided, or no metadata defined in the parameter, the container\n     * metadata will be removed.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n     *\n     * @param metadata - Replace existing metadata with this value.\n     *                            If no value provided the existing metadata will be removed.\n     * @param options - Options to Container Set Metadata operation.\n     */\n    async setMetadata(metadata, options = {}) {\n        if (!options.conditions) {\n            options.conditions = {};\n        }\n        if (options.conditions.ifUnmodifiedSince) {\n            throw new RangeError(\"the IfUnmodifiedSince must have their default values because they are ignored by the blob service\");\n        }\n        const { span, updatedOptions } = createSpan(\"ContainerClient-setMetadata\", options);\n        try {\n            return await this.containerContext.setMetadata(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions, metadata, modifiedAccessConditions: options.conditions }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Gets the permissions for the specified container. The permissions indicate\n     * whether container data may be accessed publicly.\n     *\n     * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n     * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n     *\n     * @param options - Options to Container Get Access Policy operation.\n     */\n    async getAccessPolicy(options = {}) {\n        if (!options.conditions) {\n            options.conditions = {};\n        }\n        const { span, updatedOptions } = createSpan(\"ContainerClient-getAccessPolicy\", options);\n        try {\n            const response = await this.containerContext.getAccessPolicy(Object.assign({ abortSignal: options.abortSignal, leaseAccessConditions: options.conditions }, convertTracingToRequestOptionsBase(updatedOptions)));\n            const res = {\n                _response: response._response,\n                blobPublicAccess: response.blobPublicAccess,\n                date: response.date,\n                etag: response.etag,\n                errorCode: response.errorCode,\n                lastModified: response.lastModified,\n                requestId: response.requestId,\n                clientRequestId: response.clientRequestId,\n                signedIdentifiers: [],\n                version: response.version\n            };\n            for (const identifier of response) {\n                let accessPolicy = undefined;\n                if (identifier.accessPolicy) {\n                    accessPolicy = {\n                        permissions: identifier.accessPolicy.permissions\n                    };\n                    if (identifier.accessPolicy.expiresOn) {\n                        accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n                    }\n                    if (identifier.accessPolicy.startsOn) {\n                        accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n                    }\n                }\n                res.signedIdentifiers.push({\n                    accessPolicy,\n                    id: identifier.id\n                });\n            }\n            return res;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Sets the permissions for the specified container. The permissions indicate\n     * whether blobs in a container may be accessed publicly.\n     *\n     * When you set permissions for a container, the existing permissions are replaced.\n     * If no access or containerAcl provided, the existing container ACL will be\n     * removed.\n     *\n     * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.\n     * During this interval, a shared access signature that is associated with the stored access policy will\n     * fail with status code 403 (Forbidden), until the access policy becomes active.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     *\n     * @param access - The level of public access to data in the container.\n     * @param containerAcl - Array of elements each having a unique Id and details of the access policy.\n     * @param options - Options to Container Set Access Policy operation.\n     */\n    async setAccessPolicy(access, containerAcl, options = {}) {\n        options.conditions = options.conditions || {};\n        const { span, updatedOptions } = createSpan(\"ContainerClient-setAccessPolicy\", options);\n        try {\n            const acl = [];\n            for (const identifier of containerAcl || []) {\n                acl.push({\n                    accessPolicy: {\n                        expiresOn: identifier.accessPolicy.expiresOn\n                            ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n                            : \"\",\n                        permissions: identifier.accessPolicy.permissions,\n                        startsOn: identifier.accessPolicy.startsOn\n                            ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n                            : \"\"\n                    },\n                    id: identifier.id\n                });\n            }\n            return await this.containerContext.setAccessPolicy(Object.assign({ abortSignal: options.abortSignal, access, containerAcl: acl, leaseAccessConditions: options.conditions, modifiedAccessConditions: options.conditions }, convertTracingToRequestOptionsBase(updatedOptions)));\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Get a {@link BlobLeaseClient} that manages leases on the container.\n     *\n     * @param proposeLeaseId - Initial proposed lease Id.\n     * @returns A new BlobLeaseClient object for managing leases on the container.\n     */\n    getBlobLeaseClient(proposeLeaseId) {\n        return new BlobLeaseClient(this, proposeLeaseId);\n    }\n    /**\n     * Creates a new block blob, or updates the content of an existing block blob.\n     *\n     * Updating an existing block blob overwrites any existing metadata on the blob.\n     * Partial updates are not supported; the content of the existing blob is\n     * overwritten with the new content. To perform a partial update of a block blob's,\n     * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.\n     *\n     * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},\n     * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better\n     * performance with concurrency uploading.\n     *\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param blobName - Name of the block blob to create or update.\n     * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n     *                               which returns a new Readable stream whose offset is from data source beginning.\n     * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n     *                               string including non non-Base64/Hex-encoded characters.\n     * @param options - Options to configure the Block Blob Upload operation.\n     * @returns Block Blob upload response data and the corresponding BlockBlobClient instance.\n     */\n    async uploadBlockBlob(blobName, body, contentLength, options = {}) {\n        const { span, updatedOptions } = createSpan(\"ContainerClient-uploadBlockBlob\", options);\n        try {\n            const blockBlobClient = this.getBlockBlobClient(blobName);\n            const response = await blockBlobClient.upload(body, contentLength, updatedOptions);\n            return {\n                blockBlobClient,\n                response\n            };\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Marks the specified blob or snapshot for deletion. The blob is later deleted\n     * during garbage collection. Note that in order to delete a blob, you must delete\n     * all of its snapshots. You can delete both at the same time with the Delete\n     * Blob operation.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n     *\n     * @param blobName -\n     * @param options - Options to Blob Delete operation.\n     * @returns Block blob deletion response data.\n     */\n    async deleteBlob(blobName, options = {}) {\n        const { span, updatedOptions } = createSpan(\"ContainerClient-deleteBlob\", options);\n        try {\n            let blobClient = this.getBlobClient(blobName);\n            if (options.versionId) {\n                blobClient = blobClient.withVersion(options.versionId);\n            }\n            return await blobClient.delete(updatedOptions);\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * listBlobFlatSegment returns a single segment of blobs starting from the\n     * specified Marker. Use an empty Marker to start enumeration from the beginning.\n     * After getting a segment, process it, and then call listBlobsFlatSegment again\n     * (passing the the previously-returned Marker) to get the next segment.\n     * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n     *\n     * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n     * @param options - Options to Container List Blob Flat Segment operation.\n     */\n    async listBlobFlatSegment(marker, options = {}) {\n        const { span, updatedOptions } = createSpan(\"ContainerClient-listBlobFlatSegment\", options);\n        try {\n            const response = await this.containerContext.listBlobFlatSegment(Object.assign(Object.assign({ marker }, options), convertTracingToRequestOptionsBase(updatedOptions)));\n            const wrappedResponse = Object.assign(Object.assign({}, response), { _response: response._response, segment: Object.assign(Object.assign({}, response.segment), { blobItems: response.segment.blobItems.map((blobItemInteral) => {\n                        const blobItem = Object.assign(Object.assign({}, blobItemInteral), { tags: toTags(blobItemInteral.blobTags), objectReplicationSourceProperties: parseObjectReplicationRecord(blobItemInteral.objectReplicationMetadata) });\n                        return blobItem;\n                    }) }) });\n            return wrappedResponse;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * listBlobHierarchySegment returns a single segment of blobs starting from\n     * the specified Marker. Use an empty Marker to start enumeration from the\n     * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment\n     * again (passing the the previously-returned Marker) to get the next segment.\n     * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n     *\n     * @param delimiter - The character or string used to define the virtual hierarchy\n     * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n     * @param options - Options to Container List Blob Hierarchy Segment operation.\n     */\n    async listBlobHierarchySegment(delimiter, marker, options = {}) {\n        const { span, updatedOptions } = createSpan(\"ContainerClient-listBlobHierarchySegment\", options);\n        try {\n            const response = await this.containerContext.listBlobHierarchySegment(delimiter, Object.assign(Object.assign({ marker }, options), convertTracingToRequestOptionsBase(updatedOptions)));\n            const wrappedResponse = Object.assign(Object.assign({}, response), { _response: response._response, segment: Object.assign(Object.assign({}, response.segment), { blobItems: response.segment.blobItems.map((blobItemInteral) => {\n                        const blobItem = Object.assign(Object.assign({}, blobItemInteral), { tags: toTags(blobItemInteral.blobTags), objectReplicationSourceProperties: parseObjectReplicationRecord(blobItemInteral.objectReplicationMetadata) });\n                        return blobItem;\n                    }) }) });\n            return wrappedResponse;\n        }\n        catch (e) {\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: e.message\n            });\n            throw e;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n     *\n     * @param marker - A string value that identifies the portion of\n     *                          the list of blobs to be returned with the next listing operation. The\n     *                          operation returns the ContinuationToken value within the response body if the\n     *                          listing operation did not return all blobs remaining to be listed\n     *                          with the current page. The ContinuationToken value can be used as the value for\n     *                          the marker parameter in a subsequent call to request the next page of list\n     *                          items. The marker value is opaque to the client.\n     * @param options - Options to list blobs operation.\n     */\n    listSegments(marker, options = {}) {\n        return __asyncGenerator(this, arguments, function* listSegments_1() {\n            let listBlobsFlatSegmentResponse;\n            if (!!marker || marker === undefined) {\n                do {\n                    listBlobsFlatSegmentResponse = yield __await(this.listBlobFlatSegment(marker, options));\n                    marker = listBlobsFlatSegmentResponse.continuationToken;\n                    yield yield __await(yield __await(listBlobsFlatSegmentResponse));\n                } while (marker);\n            }\n        });\n    }\n    /**\n     * Returns an AsyncIterableIterator of {@link BlobItem} objects\n     *\n     * @param options - Options to list blobs operation.\n     */\n    listItems(options = {}) {\n        return __asyncGenerator(this, arguments, function* listItems_1() {\n            var e_1, _a;\n            let marker;\n            try {\n                for (var _b = __asyncValues(this.listSegments(marker, options)), _c; _c = yield __await(_b.next()), !_c.done;) {\n                    const listBlobsFlatSegmentResponse = _c.value;\n                    yield __await(yield* __asyncDelegator(__asyncValues(listBlobsFlatSegmentResponse.segment.blobItems)));\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield __await(_a.call(_b));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    /**\n     * Returns an async iterable iterator to list all the blobs\n     * under the specified account.\n     *\n     * .byPage() returns an async iterable iterator to list the blobs in pages.\n     *\n     * Example using `for await` syntax:\n     *\n     * ```js\n     * // Get the containerClient before you run these snippets,\n     * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\");`\n     * let i = 1;\n     * for await (const blob of containerClient.listBlobsFlat()) {\n     *   console.log(`Blob ${i++}: ${blob.name}`);\n     * }\n     * ```\n     *\n     * Example using `iter.next()`:\n     *\n     * ```js\n     * let i = 1;\n     * let iter = containerClient.listBlobsFlat();\n     * let blobItem = await iter.next();\n     * while (!blobItem.done) {\n     *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n     *   blobItem = await iter.next();\n     * }\n     * ```\n     *\n     * Example using `byPage()`:\n     *\n     * ```js\n     * // passing optional maxPageSize in the page settings\n     * let i = 1;\n     * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n     *   for (const blob of response.segment.blobItems) {\n     *     console.log(`Blob ${i++}: ${blob.name}`);\n     *   }\n     * }\n     * ```\n     *\n     * Example using paging with a marker:\n     *\n     * ```js\n     * let i = 1;\n     * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n     * let response = (await iterator.next()).value;\n     *\n     * // Prints 2 blob names\n     * for (const blob of response.segment.blobItems) {\n     *   console.log(`Blob ${i++}: ${blob.name}`);\n     * }\n     *\n     * // Gets next marker\n     * let marker = response.continuationToken;\n     *\n     * // Passing next marker as continuationToken\n     *\n     * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n     * response = (await iterator.next()).value;\n     *\n     * // Prints 10 blob names\n     * for (const blob of response.segment.blobItems) {\n     *   console.log(`Blob ${i++}: ${blob.name}`);\n     * }\n     * ```\n     *\n     * @param options - Options to list blobs.\n     * @returns An asyncIterableIterator that supports paging.\n     */\n    listBlobsFlat(options = {}) {\n        const include = [];\n        if (options.includeCopy) {\n            include.push(\"copy\");\n        }\n        if (options.includeDeleted) {\n            include.push(\"deleted\");\n        }\n        if (options.includeMetadata) {\n            include.push(\"metadata\");\n        }\n        if (options.includeSnapshots) {\n            include.push(\"snapshots\");\n        }\n        if (options.includeVersions) {\n            include.push(\"versions\");\n        }\n        if (options.includeUncommitedBlobs) {\n            include.push(\"uncommittedblobs\");\n        }\n        if (options.includeTags) {\n            include.push(\"tags\");\n        }\n        if (options.includeDeletedWithVersions) {\n            include.push(\"deletedwithversions\");\n        }\n        if (options.includeImmutabilityPolicy) {\n            include.push(\"immutabilitypolicy\");\n        }\n        if (options.includeLegalHold) {\n            include.push(\"legalhold\");\n        }\n        if (options.prefix === \"\") {\n            options.prefix = undefined;\n        }\n        const updatedOptions = Object.assign(Object.assign({}, options), (include.length > 0 ? { include: include } : {}));\n        // AsyncIterableIterator to iterate over blobs\n        const iter = this.listItems(updatedOptions);\n        return {\n            /**\n             * The next method, part of the iteration protocol\n             */\n            next() {\n                return iter.next();\n            },\n            /**\n             * The connection to the async iterator, part of the iteration protocol\n             */\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            /**\n             * Return an AsyncIterableIterator that works a page at a time\n             */\n            byPage: (settings = {}) => {\n                return this.listSegments(settings.continuationToken, Object.assign({ maxPageSize: settings.maxPageSize }, updatedOptions));\n            }\n        };\n    }\n    /**\n     * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n     *\n     * @param delimiter - The character or string used to define the virtual hierarchy\n     * @param marker - A string value that identifies the portion of\n     *                          the list of blobs to be returned with the next listing operation. The\n     *                          operation returns the ContinuationToken value within the response body if the\n     *                          listing operation did not return all blobs remaining to be listed\n     *                          with the current page. The ContinuationToken value can be used as the value for\n     *                          the marker parameter in a subsequent call to request the next page of list\n     *                          items. The marker value is opaque to the client.\n     * @param options - Options to list blobs operation.\n     */\n    listHierarchySegments(delimiter, marker, options = {}) {\n        return __asyncGenerator(this, arguments, function* listHierarchySegments_1() {\n            let listBlobsHierarchySegmentResponse;\n            if (!!marker || marker === undefined) {\n                do {\n                    listBlobsHierarchySegmentResponse = yield __await(this.listBlobHierarchySegment(delimiter, marker, options));\n                    marker = listBlobsHierarchySegmentResponse.continuationToken;\n                    yield yield __await(yield __await(listBlobsHierarchySegmentResponse));\n                } while (marker);\n            }\n        });\n    }\n    /**\n     * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.\n     *\n     * @param delimiter - The character or string used to define the virtual hierarchy\n     * @param options - Options to list blobs operation.\n     */\n    listItemsByHierarchy(delimiter, options = {}) {\n        return __asyncGenerator(this, arguments, function* listItemsByHierarchy_1() {\n            var e_2, _a;\n            let marker;\n            try {\n                for (var _b = __asyncValues(this.listHierarchySegments(delimiter, marker, options)), _c; _c = yield __await(_b.next()), !_c.done;) {\n                    const listBlobsHierarchySegmentResponse = _c.value;\n                    const segment = listBlobsHierarchySegmentResponse.segment;\n                    if (segment.blobPrefixes) {\n                        for (const prefix of segment.blobPrefixes) {\n                            yield yield __await(Object.assign({ kind: \"prefix\" }, prefix));\n                        }\n                    }\n                    for (const blob of segment.blobItems) {\n                        yield yield __await(Object.assign({ kind: \"blob\" }, blob));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) yield __await(_a.call(_b));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        });\n    }\n    /**\n     * Returns an async iterable iterator to list all the blobs by hierarchy.\n     * under the specified account.\n     *\n     * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n     *\n     * Example using `for await` syntax:\n     *\n     * ```js\n     * for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n     *   if (item.kind === \"prefix\") {\n     *     console.log(`\\tBlobPrefix: ${item.name}`);\n     *   } else {\n     *     console.log(`\\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);\n     *   }\n     * }\n     * ```\n     *\n     * Example using `iter.next()`:\n     *\n     * ```js\n     * let iter = containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n     * let entity = await iter.next();\n     * while (!entity.done) {\n     *   let item = entity.value;\n     *   if (item.kind === \"prefix\") {\n     *     console.log(`\\tBlobPrefix: ${item.name}`);\n     *   } else {\n     *     console.log(`\\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);\n     *   }\n     *   entity = await iter.next();\n     * }\n     * ```\n     *\n     * Example using `byPage()`:\n     *\n     * ```js\n     * console.log(\"Listing blobs by hierarchy by page\");\n     * for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n     *   const segment = response.segment;\n     *   if (segment.blobPrefixes) {\n     *     for (const prefix of segment.blobPrefixes) {\n     *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n     *     }\n     *   }\n     *   for (const blob of response.segment.blobItems) {\n     *     console.log(`\\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);\n     *   }\n     * }\n     * ```\n     *\n     * Example using paging with a max page size:\n     *\n     * ```js\n     * console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n     *\n     * let i = 1;\n     * for await (const response of containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\"}).byPage({ maxPageSize: 2 })) {\n     *   console.log(`Page ${i++}`);\n     *   const segment = response.segment;\n     *\n     *   if (segment.blobPrefixes) {\n     *     for (const prefix of segment.blobPrefixes) {\n     *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n     *     }\n     *   }\n     *\n     *   for (const blob of response.segment.blobItems) {\n     *     console.log(`\\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);\n     *   }\n     * }\n     * ```\n     *\n     * @param delimiter - The character or string used to define the virtual hierarchy\n     * @param options - Options to list blobs operation.\n     */\n    listBlobsByHierarchy(delimiter, options = {}) {\n        if (delimiter === \"\") {\n            throw new RangeError(\"delimiter should contain one or more characters\");\n        }\n        const include = [];\n        if (options.includeCopy) {\n            include.push(\"copy\");\n        }\n        if (options.includeDeleted) {\n            include.push(\"deleted\");\n        }\n        if (options.includeMetadata) {\n            include.push(\"metadata\");\n        }\n        if (options.includeSnapshots) {\n            include.push(\"snapshots\");\n        }\n        if (options.includeVersions) {\n            include.push(\"versions\");\n        }\n        if (options.includeUncommitedBlobs) {\n            include.push(\"uncommittedblobs\");\n        }\n        if (options.includeTags) {\n            include.push(\"tags\");\n        }\n        if (options.includeDeletedWithVersions) {\n            include.push(\"deletedwithversions\");\n        }\n        if (options.includeImmutabilityPolicy) {\n            include.push(\"immutabilitypolicy\");\n        }\n        if (options.includeLegalHold) {\n            include.push(\"legalhold\");\n        }\n        if (options.prefix === \"\") {\n            options.prefix = undefined;\n        }\n        const updatedOptions = Object.assign(Object.assign({}, options), (include.length > 0 ? { include: include } : {}));\n        // AsyncIterableIterator to iterate over blob prefixes and blobs\n        const iter = this.listItemsByHierarchy(delimiter, updatedOptions);\n        return {\n            /**\n             * The next method, part of the iteration protocol\n             */\n            async next() {\n                return iter.next();\n            },\n            /**\n             * The connection to the async iterator, part of the iteration protocol\n             */\n            [Symbol.asyncIterator]() {\n                return this;\n            },\n            /**\n             * Return an AsyncIterableIterator that works a page at a time\n             */\n            byPage: (settings = {}) => {\n                return this.listHierarchySegments(delimiter, settings.continuationToken, Object.assign({ maxPageSize: settings.maxPageSize }, updatedOptions));\n            }\n        };\n    }\n    getContainerNameFromUrl() {\n        let containerName;\n        try {\n            //  URL may look like the following\n            // \"https://myaccount.blob.core.windows.net/mycontainer?sasString\";\n            // \"https://myaccount.blob.core.windows.net/mycontainer\";\n            // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`\n            // http://localhost:10001/devstoreaccount1/containername\n            const parsedUrl = URLBuilder.parse(this.url);\n            if (parsedUrl.getHost().split(\".\")[1] === \"blob\") {\n                // \"https://myaccount.blob.core.windows.net/containername\".\n                // \"https://customdomain.com/containername\".\n                // .getPath() -> /containername\n                containerName = parsedUrl.getPath().split(\"/\")[1];\n            }\n            else if (isIpEndpointStyle(parsedUrl)) {\n                // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername\n                // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername\n                // .getPath() -> /devstoreaccount1/containername\n                containerName = parsedUrl.getPath().split(\"/\")[2];\n            }\n            else {\n                // \"https://customdomain.com/containername\".\n                // .getPath() -> /containername\n                containerName = parsedUrl.getPath().split(\"/\")[1];\n            }\n            // decode the encoded containerName - to get all the special characters that might be present in it\n            containerName = decodeURIComponent(containerName);\n            if (!containerName) {\n                throw new Error(\"Provided containerName is invalid.\");\n            }\n            return containerName;\n        }\n        catch (error) {\n            throw new Error(\"Unable to extract containerName with provided information.\");\n        }\n    }\n    /**\n     * Only available for ContainerClient constructed with a shared key credential.\n     *\n     * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n     * and parameters passed in. The SAS is signed by the shared key credential of the client.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n     *\n     * @param options - Optional parameters.\n     * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n     */\n    generateSasUrl(options) {\n        return new Promise((resolve) => {\n            if (!(this.credential instanceof StorageSharedKeyCredential)) {\n                throw new RangeError(\"Can only generate the SAS when the client is initialized with a shared key credential\");\n            }\n            const sas = generateBlobSASQueryParameters(Object.assign({ containerName: this._containerName }, options), this.credential).toString();\n            resolve(appendToURLQuery(this.url, sas));\n        });\n    }\n    /**\n     * Creates a BlobBatchClient object to conduct batch operations.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n     *\n     * @returns A new BlobBatchClient object for this container.\n     */\n    getBlobBatchClient() {\n        return new BlobBatchClient(this.url, this.pipeline);\n    }\n}\n//# sourceMappingURL=ContainerClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(response) {\n    const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n        offset: x.start,\n        count: x.end - x.start\n    }));\n    const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n        offset: x.start,\n        count: x.end - x.start\n    }));\n    return Object.assign(Object.assign({}, response), { pageRange,\n        clearRange, _response: Object.assign(Object.assign({}, response._response), { parsedBody: {\n                pageRange,\n                clearRange\n            } }) });\n}\n//# sourceMappingURL=PageBlobRangeResponse.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, deserializationPolicy, disableResponseDecompressionPolicy, HttpHeaders, RequestPolicyOptions, WebResource, proxyPolicy, isNode, isTokenCredential, bearerTokenAuthenticationPolicy, tracingPolicy, logPolicy, keepAlivePolicy, generateClientRequestIdPolicy } from \"@azure/core-http\";\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageOAuthScopes, StorageBlobLoggingAllowedHeaderNames, StorageBlobLoggingAllowedQueryParameters } from \"./utils/constants\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { attachCredential } from \"./utils/utils.common\";\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport { BaseRequestPolicy, StorageOAuthScopes, deserializationPolicy, HttpHeaders, WebResource, RequestPolicyOptions };\n/**\n * A helper to decide if a given argument satisfies the Pipeline contract\n * @param pipeline - An argument that may be a Pipeline\n * @returns true when the argument satisfies the Pipeline contract\n */\nexport function isPipelineLike(pipeline) {\n    if (!pipeline || typeof pipeline !== \"object\") {\n        return false;\n    }\n    const castPipeline = pipeline;\n    return (Array.isArray(castPipeline.factories) &&\n        typeof castPipeline.options === \"object\" &&\n        typeof castPipeline.toServiceClientOptions === \"function\");\n}\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport class Pipeline {\n    /**\n     * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n     *\n     * @param factories -\n     * @param options -\n     */\n    constructor(factories, options = {}) {\n        this.factories = factories;\n        // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n        // avoid each client creating its own http client.\n        this.options = Object.assign(Object.assign({}, options), { httpClient: options.httpClient || getCachedDefaultHttpClient() });\n    }\n    /**\n     * Transfer Pipeline object to ServiceClientOptions object which is required by\n     * ServiceClient constructor.\n     *\n     * @returns The ServiceClientOptions object from this Pipeline.\n     */\n    toServiceClientOptions() {\n        return {\n            httpClient: this.options.httpClient,\n            requestPolicyFactories: this.factories\n        };\n    }\n}\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(credential, pipelineOptions = {}) {\n    if (credential === undefined) {\n        credential = new AnonymousCredential();\n    }\n    // Order is important. Closer to the API at the top & closer to the network at the bottom.\n    // The credential's policy factory must appear close to the wire so it can sign any\n    // changes made by other factories (like UniqueRequestIDPolicyFactory)\n    const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n    const factories = [\n        tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n        keepAlivePolicy(pipelineOptions.keepAliveOptions),\n        telemetryPolicy,\n        generateClientRequestIdPolicy(),\n        new StorageBrowserPolicyFactory(),\n        new StorageRetryPolicyFactory(pipelineOptions.retryOptions),\n        // Default deserializationPolicy is provided by protocol layer\n        // Use customized XML char key of \"#\" so we could deserialize metadata\n        // with \"_\" key\n        deserializationPolicy(undefined, { xmlCharKey: \"#\" }),\n        logPolicy({\n            logger: logger.info,\n            allowedHeaderNames: StorageBlobLoggingAllowedHeaderNames,\n            allowedQueryParameters: StorageBlobLoggingAllowedQueryParameters\n        })\n    ];\n    if (isNode) {\n        // policies only available in Node.js runtime, not in browsers\n        factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n        factories.push(disableResponseDecompressionPolicy());\n    }\n    factories.push(isTokenCredential(credential)\n        ? attachCredential(bearerTokenAuthenticationPolicy(credential, StorageOAuthScopes), credential)\n        : credential);\n    return new Pipeline(factories, pipelineOptions);\n}\n//# sourceMappingURL=Pipeline.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange) {\n    if (iRange.offset < 0) {\n        throw new RangeError(`Range.offset cannot be smaller than 0.`);\n    }\n    if (iRange.count && iRange.count <= 0) {\n        throw new RangeError(`Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`);\n    }\n    return iRange.count\n        ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n        : `bytes=${iRange.offset}-`;\n}\n//# sourceMappingURL=Range.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory {\n    /**\n     * Creates a StorageBrowserPolicyFactory object.\n     *\n     * @param nextPolicy -\n     * @param options -\n     */\n    create(nextPolicy, options) {\n        return new StorageBrowserPolicy(nextPolicy, options);\n    }\n}\n//# sourceMappingURL=StorageBrowserPolicyFactory.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { escapeURLPath, getURLScheme, iEqual, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { isTokenCredential, isNode } from \"@azure/core-http\";\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n */\nexport class StorageClient {\n    /**\n     * Creates an instance of StorageClient.\n     * @param url - url to resource\n     * @param pipeline - request policy pipeline.\n     */\n    constructor(url, pipeline) {\n        // URL should be encoded and only once, protocol layer shouldn't encode URL again\n        this.url = escapeURLPath(url);\n        this.accountName = getAccountNameFromUrl(url);\n        this.pipeline = pipeline;\n        this.storageClientContext = new StorageClientContext(this.url, pipeline.toServiceClientOptions());\n        this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n        this.credential = new AnonymousCredential();\n        for (const factory of this.pipeline.factories) {\n            if ((isNode && factory instanceof StorageSharedKeyCredential) ||\n                factory instanceof AnonymousCredential) {\n                this.credential = factory;\n            }\n            else if (isTokenCredential(factory.credential)) {\n                // Only works if the factory has been attached a \"credential\" property.\n                // We do that in newPipeline() when using TokenCredential.\n                this.credential = factory.credential;\n            }\n        }\n        // Override protocol layer's default content-type\n        const storageClientContext = this.storageClientContext;\n        storageClientContext.requestContentType = undefined;\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n */\nexport class StorageRetryPolicyFactory {\n    /**\n     * Creates an instance of StorageRetryPolicyFactory.\n     * @param retryOptions -\n     */\n    constructor(retryOptions) {\n        this.retryOptions = retryOptions;\n    }\n    /**\n     * Creates a StorageRetryPolicy object.\n     *\n     * @param nextPolicy -\n     * @param options -\n     */\n    create(nextPolicy, options) {\n        return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n    }\n}\n//# sourceMappingURL=StorageRetryPolicyFactory.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isNode } from \"@azure/core-http\";\nimport * as os from \"os\";\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n */\nexport class TelemetryPolicyFactory {\n    /**\n     * Creates an instance of TelemetryPolicyFactory.\n     * @param telemetry -\n     */\n    constructor(telemetry) {\n        const userAgentInfo = [];\n        if (isNode) {\n            if (telemetry) {\n                const telemetryString = telemetry.userAgentPrefix || \"\";\n                if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n                    userAgentInfo.push(telemetryString);\n                }\n            }\n            // e.g. azsdk-js-storageblob/10.0.0\n            const libInfo = `azsdk-js-storageblob/${SDK_VERSION}`;\n            if (userAgentInfo.indexOf(libInfo) === -1) {\n                userAgentInfo.push(libInfo);\n            }\n            // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n            const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n            if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n                userAgentInfo.push(runtimeInfo);\n            }\n        }\n        this.telemetryString = userAgentInfo.join(\" \");\n    }\n    /**\n     * Creates a TelemetryPolicy object.\n     *\n     * @param nextPolicy -\n     * @param options -\n     */\n    create(nextPolicy, options) {\n        return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n    }\n}\n//# sourceMappingURL=TelemetryPolicyFactory.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n    /**\n     * Creates an {@link AnonymousCredentialPolicy} object.\n     *\n     * @param nextPolicy -\n     * @param options -\n     */\n    create(nextPolicy, options) {\n        return new AnonymousCredentialPolicy(nextPolicy, options);\n    }\n}\n//# sourceMappingURL=AnonymousCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport class Credential {\n    /**\n     * Creates a RequestPolicy object.\n     *\n     * @param _nextPolicy -\n     * @param _options -\n     */\n    create(_nextPolicy, _options) {\n        throw new Error(\"Method should be implemented in children classes.\");\n    }\n}\n//# sourceMappingURL=Credential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport class StorageSharedKeyCredential {\n}\n//# sourceMappingURL=StorageSharedKeyCredential.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport class UserDelegationKeyCredential {\n}\n//# sourceMappingURL=UserDelegationKeyCredential.browser.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport * from \"./models\";\nexport { StorageClient } from \"./storageClient\";\nexport { StorageClientContext } from \"./storageClientContext\";\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport {};\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport const BlobServiceProperties = {\n    serializedName: \"BlobServiceProperties\",\n    xmlName: \"StorageServiceProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobServiceProperties\",\n        modelProperties: {\n            blobAnalyticsLogging: {\n                serializedName: \"Logging\",\n                xmlName: \"Logging\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Logging\"\n                }\n            },\n            hourMetrics: {\n                serializedName: \"HourMetrics\",\n                xmlName: \"HourMetrics\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Metrics\"\n                }\n            },\n            minuteMetrics: {\n                serializedName: \"MinuteMetrics\",\n                xmlName: \"MinuteMetrics\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Metrics\"\n                }\n            },\n            cors: {\n                serializedName: \"Cors\",\n                xmlName: \"Cors\",\n                xmlIsWrapped: true,\n                xmlElementName: \"CorsRule\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"CorsRule\"\n                        }\n                    }\n                }\n            },\n            defaultServiceVersion: {\n                serializedName: \"DefaultServiceVersion\",\n                xmlName: \"DefaultServiceVersion\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleteRetentionPolicy: {\n                serializedName: \"DeleteRetentionPolicy\",\n                xmlName: \"DeleteRetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            },\n            staticWebsite: {\n                serializedName: \"StaticWebsite\",\n                xmlName: \"StaticWebsite\",\n                type: {\n                    name: \"Composite\",\n                    className: \"StaticWebsite\"\n                }\n            }\n        }\n    }\n};\nexport const Logging = {\n    serializedName: \"Logging\",\n    type: {\n        name: \"Composite\",\n        className: \"Logging\",\n        modelProperties: {\n            version: {\n                serializedName: \"Version\",\n                required: true,\n                xmlName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleteProperty: {\n                serializedName: \"Delete\",\n                required: true,\n                xmlName: \"Delete\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            read: {\n                serializedName: \"Read\",\n                required: true,\n                xmlName: \"Read\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            write: {\n                serializedName: \"Write\",\n                required: true,\n                xmlName: \"Write\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            retentionPolicy: {\n                serializedName: \"RetentionPolicy\",\n                xmlName: \"RetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            }\n        }\n    }\n};\nexport const RetentionPolicy = {\n    serializedName: \"RetentionPolicy\",\n    type: {\n        name: \"Composite\",\n        className: \"RetentionPolicy\",\n        modelProperties: {\n            enabled: {\n                serializedName: \"Enabled\",\n                required: true,\n                xmlName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            days: {\n                constraints: {\n                    InclusiveMinimum: 1\n                },\n                serializedName: \"Days\",\n                xmlName: \"Days\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport const Metrics = {\n    serializedName: \"Metrics\",\n    type: {\n        name: \"Composite\",\n        className: \"Metrics\",\n        modelProperties: {\n            version: {\n                serializedName: \"Version\",\n                xmlName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            enabled: {\n                serializedName: \"Enabled\",\n                required: true,\n                xmlName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            includeAPIs: {\n                serializedName: \"IncludeAPIs\",\n                xmlName: \"IncludeAPIs\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            retentionPolicy: {\n                serializedName: \"RetentionPolicy\",\n                xmlName: \"RetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            }\n        }\n    }\n};\nexport const CorsRule = {\n    serializedName: \"CorsRule\",\n    type: {\n        name: \"Composite\",\n        className: \"CorsRule\",\n        modelProperties: {\n            allowedOrigins: {\n                serializedName: \"AllowedOrigins\",\n                required: true,\n                xmlName: \"AllowedOrigins\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            allowedMethods: {\n                serializedName: \"AllowedMethods\",\n                required: true,\n                xmlName: \"AllowedMethods\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            allowedHeaders: {\n                serializedName: \"AllowedHeaders\",\n                required: true,\n                xmlName: \"AllowedHeaders\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            exposedHeaders: {\n                serializedName: \"ExposedHeaders\",\n                required: true,\n                xmlName: \"ExposedHeaders\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxAgeInSeconds: {\n                constraints: {\n                    InclusiveMinimum: 0\n                },\n                serializedName: \"MaxAgeInSeconds\",\n                required: true,\n                xmlName: \"MaxAgeInSeconds\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport const StaticWebsite = {\n    serializedName: \"StaticWebsite\",\n    type: {\n        name: \"Composite\",\n        className: \"StaticWebsite\",\n        modelProperties: {\n            enabled: {\n                serializedName: \"Enabled\",\n                required: true,\n                xmlName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            indexDocument: {\n                serializedName: \"IndexDocument\",\n                xmlName: \"IndexDocument\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorDocument404Path: {\n                serializedName: \"ErrorDocument404Path\",\n                xmlName: \"ErrorDocument404Path\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            defaultIndexDocumentPath: {\n                serializedName: \"DefaultIndexDocumentPath\",\n                xmlName: \"DefaultIndexDocumentPath\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const StorageError = {\n    serializedName: \"StorageError\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageError\",\n        modelProperties: {\n            message: {\n                serializedName: \"Message\",\n                xmlName: \"Message\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            code: {\n                serializedName: \"Code\",\n                xmlName: \"Code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobServiceStatistics = {\n    serializedName: \"BlobServiceStatistics\",\n    xmlName: \"StorageServiceStats\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobServiceStatistics\",\n        modelProperties: {\n            geoReplication: {\n                serializedName: \"GeoReplication\",\n                xmlName: \"GeoReplication\",\n                type: {\n                    name: \"Composite\",\n                    className: \"GeoReplication\"\n                }\n            }\n        }\n    }\n};\nexport const GeoReplication = {\n    serializedName: \"GeoReplication\",\n    type: {\n        name: \"Composite\",\n        className: \"GeoReplication\",\n        modelProperties: {\n            status: {\n                serializedName: \"Status\",\n                required: true,\n                xmlName: \"Status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"live\", \"bootstrap\", \"unavailable\"]\n                }\n            },\n            lastSyncOn: {\n                serializedName: \"LastSyncTime\",\n                required: true,\n                xmlName: \"LastSyncTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const ListContainersSegmentResponse = {\n    serializedName: \"ListContainersSegmentResponse\",\n    xmlName: \"EnumerationResults\",\n    type: {\n        name: \"Composite\",\n        className: \"ListContainersSegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                serializedName: \"ServiceEndpoint\",\n                required: true,\n                xmlName: \"ServiceEndpoint\",\n                xmlIsAttribute: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                serializedName: \"Prefix\",\n                xmlName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                serializedName: \"Marker\",\n                xmlName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxPageSize: {\n                serializedName: \"MaxResults\",\n                xmlName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            containerItems: {\n                serializedName: \"ContainerItems\",\n                required: true,\n                xmlName: \"Containers\",\n                xmlIsWrapped: true,\n                xmlElementName: \"Container\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ContainerItem\"\n                        }\n                    }\n                }\n            },\n            continuationToken: {\n                serializedName: \"NextMarker\",\n                xmlName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerItem = {\n    serializedName: \"ContainerItem\",\n    xmlName: \"Container\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerItem\",\n        modelProperties: {\n            name: {\n                serializedName: \"Name\",\n                required: true,\n                xmlName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleted: {\n                serializedName: \"Deleted\",\n                xmlName: \"Deleted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            version: {\n                serializedName: \"Version\",\n                xmlName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            properties: {\n                serializedName: \"Properties\",\n                xmlName: \"Properties\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ContainerProperties\"\n                }\n            },\n            metadata: {\n                serializedName: \"Metadata\",\n                xmlName: \"Metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            }\n        }\n    }\n};\nexport const ContainerProperties = {\n    serializedName: \"ContainerProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerProperties\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"Last-Modified\",\n                required: true,\n                xmlName: \"Last-Modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                serializedName: \"Etag\",\n                required: true,\n                xmlName: \"Etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseStatus: {\n                serializedName: \"LeaseStatus\",\n                xmlName: \"LeaseStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"locked\", \"unlocked\"]\n                }\n            },\n            leaseState: {\n                serializedName: \"LeaseState\",\n                xmlName: \"LeaseState\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                serializedName: \"LeaseDuration\",\n                xmlName: \"LeaseDuration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"infinite\", \"fixed\"]\n                }\n            },\n            publicAccess: {\n                serializedName: \"PublicAccess\",\n                xmlName: \"PublicAccess\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"container\", \"blob\"]\n                }\n            },\n            hasImmutabilityPolicy: {\n                serializedName: \"HasImmutabilityPolicy\",\n                xmlName: \"HasImmutabilityPolicy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            hasLegalHold: {\n                serializedName: \"HasLegalHold\",\n                xmlName: \"HasLegalHold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            defaultEncryptionScope: {\n                serializedName: \"DefaultEncryptionScope\",\n                xmlName: \"DefaultEncryptionScope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            preventEncryptionScopeOverride: {\n                serializedName: \"DenyEncryptionScopeOverride\",\n                xmlName: \"DenyEncryptionScopeOverride\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            deletedOn: {\n                serializedName: \"DeletedTime\",\n                xmlName: \"DeletedTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            remainingRetentionDays: {\n                serializedName: \"RemainingRetentionDays\",\n                xmlName: \"RemainingRetentionDays\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isImmutableStorageWithVersioningEnabled: {\n                serializedName: \"ImmutableStorageWithVersioningEnabled\",\n                xmlName: \"ImmutableStorageWithVersioningEnabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport const KeyInfo = {\n    serializedName: \"KeyInfo\",\n    type: {\n        name: \"Composite\",\n        className: \"KeyInfo\",\n        modelProperties: {\n            startsOn: {\n                serializedName: \"Start\",\n                required: true,\n                xmlName: \"Start\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            expiresOn: {\n                serializedName: \"Expiry\",\n                required: true,\n                xmlName: \"Expiry\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const UserDelegationKey = {\n    serializedName: \"UserDelegationKey\",\n    type: {\n        name: \"Composite\",\n        className: \"UserDelegationKey\",\n        modelProperties: {\n            signedObjectId: {\n                serializedName: \"SignedOid\",\n                required: true,\n                xmlName: \"SignedOid\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            signedTenantId: {\n                serializedName: \"SignedTid\",\n                required: true,\n                xmlName: \"SignedTid\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            signedStartsOn: {\n                serializedName: \"SignedStart\",\n                required: true,\n                xmlName: \"SignedStart\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            signedExpiresOn: {\n                serializedName: \"SignedExpiry\",\n                required: true,\n                xmlName: \"SignedExpiry\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            signedService: {\n                serializedName: \"SignedService\",\n                required: true,\n                xmlName: \"SignedService\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            signedVersion: {\n                serializedName: \"SignedVersion\",\n                required: true,\n                xmlName: \"SignedVersion\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            value: {\n                serializedName: \"Value\",\n                required: true,\n                xmlName: \"Value\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const FilterBlobSegment = {\n    serializedName: \"FilterBlobSegment\",\n    xmlName: \"EnumerationResults\",\n    type: {\n        name: \"Composite\",\n        className: \"FilterBlobSegment\",\n        modelProperties: {\n            serviceEndpoint: {\n                serializedName: \"ServiceEndpoint\",\n                required: true,\n                xmlName: \"ServiceEndpoint\",\n                xmlIsAttribute: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            where: {\n                serializedName: \"Where\",\n                required: true,\n                xmlName: \"Where\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobs: {\n                serializedName: \"Blobs\",\n                required: true,\n                xmlName: \"Blobs\",\n                xmlIsWrapped: true,\n                xmlElementName: \"Blob\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"FilterBlobItem\"\n                        }\n                    }\n                }\n            },\n            continuationToken: {\n                serializedName: \"NextMarker\",\n                xmlName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const FilterBlobItem = {\n    serializedName: \"FilterBlobItem\",\n    xmlName: \"Blob\",\n    type: {\n        name: \"Composite\",\n        className: \"FilterBlobItem\",\n        modelProperties: {\n            name: {\n                serializedName: \"Name\",\n                required: true,\n                xmlName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                serializedName: \"ContainerName\",\n                required: true,\n                xmlName: \"ContainerName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            tags: {\n                serializedName: \"Tags\",\n                xmlName: \"Tags\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobTags\"\n                }\n            }\n        }\n    }\n};\nexport const BlobTags = {\n    serializedName: \"BlobTags\",\n    xmlName: \"Tags\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobTags\",\n        modelProperties: {\n            blobTagSet: {\n                serializedName: \"BlobTagSet\",\n                required: true,\n                xmlName: \"TagSet\",\n                xmlIsWrapped: true,\n                xmlElementName: \"Tag\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobTag\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const BlobTag = {\n    serializedName: \"BlobTag\",\n    xmlName: \"Tag\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobTag\",\n        modelProperties: {\n            key: {\n                serializedName: \"Key\",\n                required: true,\n                xmlName: \"Key\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            value: {\n                serializedName: \"Value\",\n                required: true,\n                xmlName: \"Value\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const SignedIdentifier = {\n    serializedName: \"SignedIdentifier\",\n    xmlName: \"SignedIdentifier\",\n    type: {\n        name: \"Composite\",\n        className: \"SignedIdentifier\",\n        modelProperties: {\n            id: {\n                serializedName: \"Id\",\n                required: true,\n                xmlName: \"Id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessPolicy: {\n                serializedName: \"AccessPolicy\",\n                xmlName: \"AccessPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"AccessPolicy\"\n                }\n            }\n        }\n    }\n};\nexport const AccessPolicy = {\n    serializedName: \"AccessPolicy\",\n    type: {\n        name: \"Composite\",\n        className: \"AccessPolicy\",\n        modelProperties: {\n            startsOn: {\n                serializedName: \"Start\",\n                xmlName: \"Start\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            expiresOn: {\n                serializedName: \"Expiry\",\n                xmlName: \"Expiry\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            permissions: {\n                serializedName: \"Permission\",\n                xmlName: \"Permission\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ListBlobsFlatSegmentResponse = {\n    serializedName: \"ListBlobsFlatSegmentResponse\",\n    xmlName: \"EnumerationResults\",\n    type: {\n        name: \"Composite\",\n        className: \"ListBlobsFlatSegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                serializedName: \"ServiceEndpoint\",\n                required: true,\n                xmlName: \"ServiceEndpoint\",\n                xmlIsAttribute: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                serializedName: \"ContainerName\",\n                required: true,\n                xmlName: \"ContainerName\",\n                xmlIsAttribute: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                serializedName: \"Prefix\",\n                xmlName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                serializedName: \"Marker\",\n                xmlName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxPageSize: {\n                serializedName: \"MaxResults\",\n                xmlName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            segment: {\n                serializedName: \"Segment\",\n                xmlName: \"Blobs\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobFlatListSegment\"\n                }\n            },\n            continuationToken: {\n                serializedName: \"NextMarker\",\n                xmlName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobFlatListSegment = {\n    serializedName: \"BlobFlatListSegment\",\n    xmlName: \"Blobs\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobFlatListSegment\",\n        modelProperties: {\n            blobItems: {\n                serializedName: \"BlobItems\",\n                required: true,\n                xmlName: \"BlobItems\",\n                xmlElementName: \"Blob\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobItemInternal\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const BlobItemInternal = {\n    serializedName: \"BlobItemInternal\",\n    xmlName: \"Blob\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobItemInternal\",\n        modelProperties: {\n            name: {\n                serializedName: \"Name\",\n                required: true,\n                xmlName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleted: {\n                serializedName: \"Deleted\",\n                required: true,\n                xmlName: \"Deleted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            snapshot: {\n                serializedName: \"Snapshot\",\n                required: true,\n                xmlName: \"Snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"VersionId\",\n                xmlName: \"VersionId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            isCurrentVersion: {\n                serializedName: \"IsCurrentVersion\",\n                xmlName: \"IsCurrentVersion\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            properties: {\n                serializedName: \"Properties\",\n                xmlName: \"Properties\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobPropertiesInternal\"\n                }\n            },\n            metadata: {\n                serializedName: \"Metadata\",\n                xmlName: \"Metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            },\n            blobTags: {\n                serializedName: \"BlobTags\",\n                xmlName: \"Tags\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobTags\"\n                }\n            },\n            objectReplicationMetadata: {\n                serializedName: \"ObjectReplicationMetadata\",\n                xmlName: \"OrMetadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            },\n            hasVersionsOnly: {\n                serializedName: \"HasVersionsOnly\",\n                xmlName: \"HasVersionsOnly\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport const BlobPropertiesInternal = {\n    serializedName: \"BlobPropertiesInternal\",\n    xmlName: \"Properties\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobPropertiesInternal\",\n        modelProperties: {\n            createdOn: {\n                serializedName: \"Creation-Time\",\n                xmlName: \"Creation-Time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            lastModified: {\n                serializedName: \"Last-Modified\",\n                required: true,\n                xmlName: \"Last-Modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                serializedName: \"Etag\",\n                required: true,\n                xmlName: \"Etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLength: {\n                serializedName: \"Content-Length\",\n                xmlName: \"Content-Length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"Content-Type\",\n                xmlName: \"Content-Type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"Content-Encoding\",\n                xmlName: \"Content-Encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"Content-Language\",\n                xmlName: \"Content-Language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"Content-MD5\",\n                xmlName: \"Content-MD5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"Content-Disposition\",\n                xmlName: \"Content-Disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"Cache-Control\",\n                xmlName: \"Cache-Control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                serializedName: \"BlobType\",\n                xmlName: \"BlobType\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"LeaseStatus\",\n                xmlName: \"LeaseStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"locked\", \"unlocked\"]\n                }\n            },\n            leaseState: {\n                serializedName: \"LeaseState\",\n                xmlName: \"LeaseState\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                serializedName: \"LeaseDuration\",\n                xmlName: \"LeaseDuration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"infinite\", \"fixed\"]\n                }\n            },\n            copyId: {\n                serializedName: \"CopyId\",\n                xmlName: \"CopyId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"CopyStatus\",\n                xmlName: \"CopyStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n                }\n            },\n            copySource: {\n                serializedName: \"CopySource\",\n                xmlName: \"CopySource\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"CopyProgress\",\n                xmlName: \"CopyProgress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyCompletedOn: {\n                serializedName: \"CopyCompletionTime\",\n                xmlName: \"CopyCompletionTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"CopyStatusDescription\",\n                xmlName: \"CopyStatusDescription\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            serverEncrypted: {\n                serializedName: \"ServerEncrypted\",\n                xmlName: \"ServerEncrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            incrementalCopy: {\n                serializedName: \"IncrementalCopy\",\n                xmlName: \"IncrementalCopy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            destinationSnapshot: {\n                serializedName: \"DestinationSnapshot\",\n                xmlName: \"DestinationSnapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deletedOn: {\n                serializedName: \"DeletedTime\",\n                xmlName: \"DeletedTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            remainingRetentionDays: {\n                serializedName: \"RemainingRetentionDays\",\n                xmlName: \"RemainingRetentionDays\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            accessTier: {\n                serializedName: \"AccessTier\",\n                xmlName: \"AccessTier\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"P4\",\n                        \"P6\",\n                        \"P10\",\n                        \"P15\",\n                        \"P20\",\n                        \"P30\",\n                        \"P40\",\n                        \"P50\",\n                        \"P60\",\n                        \"P70\",\n                        \"P80\",\n                        \"Hot\",\n                        \"Cool\",\n                        \"Archive\"\n                    ]\n                }\n            },\n            accessTierInferred: {\n                serializedName: \"AccessTierInferred\",\n                xmlName: \"AccessTierInferred\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            archiveStatus: {\n                serializedName: \"ArchiveStatus\",\n                xmlName: \"ArchiveStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"rehydrate-pending-to-hot\",\n                        \"rehydrate-pending-to-cool\"\n                    ]\n                }\n            },\n            customerProvidedKeySha256: {\n                serializedName: \"CustomerProvidedKeySha256\",\n                xmlName: \"CustomerProvidedKeySha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"EncryptionScope\",\n                xmlName: \"EncryptionScope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierChangedOn: {\n                serializedName: \"AccessTierChangeTime\",\n                xmlName: \"AccessTierChangeTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            tagCount: {\n                serializedName: \"TagCount\",\n                xmlName: \"TagCount\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            expiresOn: {\n                serializedName: \"Expiry-Time\",\n                xmlName: \"Expiry-Time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isSealed: {\n                serializedName: \"Sealed\",\n                xmlName: \"Sealed\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            rehydratePriority: {\n                serializedName: \"RehydratePriority\",\n                xmlName: \"RehydratePriority\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"High\", \"Standard\"]\n                }\n            },\n            lastAccessedOn: {\n                serializedName: \"LastAccessTime\",\n                xmlName: \"LastAccessTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyExpiresOn: {\n                serializedName: \"ImmutabilityPolicyUntilDate\",\n                xmlName: \"ImmutabilityPolicyUntilDate\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyMode: {\n                serializedName: \"ImmutabilityPolicyMode\",\n                xmlName: \"ImmutabilityPolicyMode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n                }\n            },\n            legalHold: {\n                serializedName: \"LegalHold\",\n                xmlName: \"LegalHold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport const ListBlobsHierarchySegmentResponse = {\n    serializedName: \"ListBlobsHierarchySegmentResponse\",\n    xmlName: \"EnumerationResults\",\n    type: {\n        name: \"Composite\",\n        className: \"ListBlobsHierarchySegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                serializedName: \"ServiceEndpoint\",\n                required: true,\n                xmlName: \"ServiceEndpoint\",\n                xmlIsAttribute: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                serializedName: \"ContainerName\",\n                required: true,\n                xmlName: \"ContainerName\",\n                xmlIsAttribute: true,\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                serializedName: \"Prefix\",\n                xmlName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                serializedName: \"Marker\",\n                xmlName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxPageSize: {\n                serializedName: \"MaxResults\",\n                xmlName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            delimiter: {\n                serializedName: \"Delimiter\",\n                xmlName: \"Delimiter\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            segment: {\n                serializedName: \"Segment\",\n                xmlName: \"Blobs\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobHierarchyListSegment\"\n                }\n            },\n            continuationToken: {\n                serializedName: \"NextMarker\",\n                xmlName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobHierarchyListSegment = {\n    serializedName: \"BlobHierarchyListSegment\",\n    xmlName: \"Blobs\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobHierarchyListSegment\",\n        modelProperties: {\n            blobPrefixes: {\n                serializedName: \"BlobPrefixes\",\n                xmlName: \"BlobPrefixes\",\n                xmlElementName: \"BlobPrefix\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobPrefix\"\n                        }\n                    }\n                }\n            },\n            blobItems: {\n                serializedName: \"BlobItems\",\n                required: true,\n                xmlName: \"BlobItems\",\n                xmlElementName: \"Blob\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobItemInternal\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const BlobPrefix = {\n    serializedName: \"BlobPrefix\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobPrefix\",\n        modelProperties: {\n            name: {\n                serializedName: \"Name\",\n                required: true,\n                xmlName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockLookupList = {\n    serializedName: \"BlockLookupList\",\n    xmlName: \"BlockList\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockLookupList\",\n        modelProperties: {\n            committed: {\n                serializedName: \"Committed\",\n                xmlName: \"Committed\",\n                xmlElementName: \"Committed\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            uncommitted: {\n                serializedName: \"Uncommitted\",\n                xmlName: \"Uncommitted\",\n                xmlElementName: \"Uncommitted\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            latest: {\n                serializedName: \"Latest\",\n                xmlName: \"Latest\",\n                xmlElementName: \"Latest\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const BlockList = {\n    serializedName: \"BlockList\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockList\",\n        modelProperties: {\n            committedBlocks: {\n                serializedName: \"CommittedBlocks\",\n                xmlName: \"CommittedBlocks\",\n                xmlIsWrapped: true,\n                xmlElementName: \"Block\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Block\"\n                        }\n                    }\n                }\n            },\n            uncommittedBlocks: {\n                serializedName: \"UncommittedBlocks\",\n                xmlName: \"UncommittedBlocks\",\n                xmlIsWrapped: true,\n                xmlElementName: \"Block\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Block\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const Block = {\n    serializedName: \"Block\",\n    type: {\n        name: \"Composite\",\n        className: \"Block\",\n        modelProperties: {\n            name: {\n                serializedName: \"Name\",\n                required: true,\n                xmlName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            size: {\n                serializedName: \"Size\",\n                required: true,\n                xmlName: \"Size\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport const PageList = {\n    serializedName: \"PageList\",\n    type: {\n        name: \"Composite\",\n        className: \"PageList\",\n        modelProperties: {\n            pageRange: {\n                serializedName: \"PageRange\",\n                xmlName: \"PageRange\",\n                xmlElementName: \"PageRange\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"PageRange\"\n                        }\n                    }\n                }\n            },\n            clearRange: {\n                serializedName: \"ClearRange\",\n                xmlName: \"ClearRange\",\n                xmlElementName: \"ClearRange\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ClearRange\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const PageRange = {\n    serializedName: \"PageRange\",\n    xmlName: \"PageRange\",\n    type: {\n        name: \"Composite\",\n        className: \"PageRange\",\n        modelProperties: {\n            start: {\n                serializedName: \"Start\",\n                required: true,\n                xmlName: \"Start\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            end: {\n                serializedName: \"End\",\n                required: true,\n                xmlName: \"End\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport const ClearRange = {\n    serializedName: \"ClearRange\",\n    xmlName: \"ClearRange\",\n    type: {\n        name: \"Composite\",\n        className: \"ClearRange\",\n        modelProperties: {\n            start: {\n                serializedName: \"Start\",\n                required: true,\n                xmlName: \"Start\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            end: {\n                serializedName: \"End\",\n                required: true,\n                xmlName: \"End\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport const QueryRequest = {\n    serializedName: \"QueryRequest\",\n    xmlName: \"QueryRequest\",\n    type: {\n        name: \"Composite\",\n        className: \"QueryRequest\",\n        modelProperties: {\n            queryType: {\n                serializedName: \"QueryType\",\n                required: true,\n                xmlName: \"QueryType\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            expression: {\n                serializedName: \"Expression\",\n                required: true,\n                xmlName: \"Expression\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            inputSerialization: {\n                serializedName: \"InputSerialization\",\n                xmlName: \"InputSerialization\",\n                type: {\n                    name: \"Composite\",\n                    className: \"QuerySerialization\"\n                }\n            },\n            outputSerialization: {\n                serializedName: \"OutputSerialization\",\n                xmlName: \"OutputSerialization\",\n                type: {\n                    name: \"Composite\",\n                    className: \"QuerySerialization\"\n                }\n            }\n        }\n    }\n};\nexport const QuerySerialization = {\n    serializedName: \"QuerySerialization\",\n    type: {\n        name: \"Composite\",\n        className: \"QuerySerialization\",\n        modelProperties: {\n            format: {\n                serializedName: \"Format\",\n                xmlName: \"Format\",\n                type: {\n                    name: \"Composite\",\n                    className: \"QueryFormat\"\n                }\n            }\n        }\n    }\n};\nexport const QueryFormat = {\n    serializedName: \"QueryFormat\",\n    type: {\n        name: \"Composite\",\n        className: \"QueryFormat\",\n        modelProperties: {\n            type: {\n                serializedName: \"Type\",\n                required: true,\n                xmlName: \"Type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"delimited\", \"json\", \"arrow\", \"parquet\"]\n                }\n            },\n            delimitedTextConfiguration: {\n                serializedName: \"DelimitedTextConfiguration\",\n                xmlName: \"DelimitedTextConfiguration\",\n                type: {\n                    name: \"Composite\",\n                    className: \"DelimitedTextConfiguration\"\n                }\n            },\n            jsonTextConfiguration: {\n                serializedName: \"JsonTextConfiguration\",\n                xmlName: \"JsonTextConfiguration\",\n                type: {\n                    name: \"Composite\",\n                    className: \"JsonTextConfiguration\"\n                }\n            },\n            arrowConfiguration: {\n                serializedName: \"ArrowConfiguration\",\n                xmlName: \"ArrowConfiguration\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ArrowConfiguration\"\n                }\n            },\n            parquetTextConfiguration: {\n                serializedName: \"ParquetTextConfiguration\",\n                xmlName: \"ParquetTextConfiguration\",\n                type: {\n                    name: \"any\"\n                }\n            }\n        }\n    }\n};\nexport const DelimitedTextConfiguration = {\n    serializedName: \"DelimitedTextConfiguration\",\n    xmlName: \"DelimitedTextConfiguration\",\n    type: {\n        name: \"Composite\",\n        className: \"DelimitedTextConfiguration\",\n        modelProperties: {\n            columnSeparator: {\n                serializedName: \"ColumnSeparator\",\n                xmlName: \"ColumnSeparator\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            fieldQuote: {\n                serializedName: \"FieldQuote\",\n                xmlName: \"FieldQuote\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            recordSeparator: {\n                serializedName: \"RecordSeparator\",\n                xmlName: \"RecordSeparator\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            escapeChar: {\n                serializedName: \"EscapeChar\",\n                xmlName: \"EscapeChar\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            headersPresent: {\n                serializedName: \"HeadersPresent\",\n                xmlName: \"HasHeaders\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport const JsonTextConfiguration = {\n    serializedName: \"JsonTextConfiguration\",\n    xmlName: \"JsonTextConfiguration\",\n    type: {\n        name: \"Composite\",\n        className: \"JsonTextConfiguration\",\n        modelProperties: {\n            recordSeparator: {\n                serializedName: \"RecordSeparator\",\n                xmlName: \"RecordSeparator\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ArrowConfiguration = {\n    serializedName: \"ArrowConfiguration\",\n    xmlName: \"ArrowConfiguration\",\n    type: {\n        name: \"Composite\",\n        className: \"ArrowConfiguration\",\n        modelProperties: {\n            schema: {\n                serializedName: \"Schema\",\n                required: true,\n                xmlName: \"Schema\",\n                xmlIsWrapped: true,\n                xmlElementName: \"Field\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ArrowField\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport const ArrowField = {\n    serializedName: \"ArrowField\",\n    xmlName: \"Field\",\n    type: {\n        name: \"Composite\",\n        className: \"ArrowField\",\n        modelProperties: {\n            type: {\n                serializedName: \"Type\",\n                required: true,\n                xmlName: \"Type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            name: {\n                serializedName: \"Name\",\n                xmlName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            precision: {\n                serializedName: \"Precision\",\n                xmlName: \"Precision\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            scale: {\n                serializedName: \"Scale\",\n                xmlName: \"Scale\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceSetPropertiesHeaders = {\n    serializedName: \"Service_setPropertiesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceSetPropertiesHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceSetPropertiesExceptionHeaders = {\n    serializedName: \"Service_setPropertiesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceSetPropertiesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetPropertiesHeaders = {\n    serializedName: \"Service_getPropertiesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetPropertiesHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetPropertiesExceptionHeaders = {\n    serializedName: \"Service_getPropertiesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetPropertiesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetStatisticsHeaders = {\n    serializedName: \"Service_getStatisticsHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetStatisticsHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetStatisticsExceptionHeaders = {\n    serializedName: \"Service_getStatisticsExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetStatisticsExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceListContainersSegmentHeaders = {\n    serializedName: \"Service_listContainersSegmentHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceListContainersSegmentHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceListContainersSegmentExceptionHeaders = {\n    serializedName: \"Service_listContainersSegmentExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceListContainersSegmentExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetUserDelegationKeyHeaders = {\n    serializedName: \"Service_getUserDelegationKeyHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetUserDelegationKeyHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetUserDelegationKeyExceptionHeaders = {\n    serializedName: \"Service_getUserDelegationKeyExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetUserDelegationKeyExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetAccountInfoHeaders = {\n    serializedName: \"Service_getAccountInfoHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetAccountInfoHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                xmlName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                xmlName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\",\n                        \"FileStorage\",\n                        \"BlockBlobStorage\"\n                    ]\n                }\n            },\n            isHierarchicalNamespaceEnabled: {\n                serializedName: \"x-ms-is-hns-enabled\",\n                xmlName: \"x-ms-is-hns-enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceGetAccountInfoExceptionHeaders = {\n    serializedName: \"Service_getAccountInfoExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetAccountInfoExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceSubmitBatchHeaders = {\n    serializedName: \"Service_submitBatchHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceSubmitBatchHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceSubmitBatchExceptionHeaders = {\n    serializedName: \"Service_submitBatchExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceSubmitBatchExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceFilterBlobsHeaders = {\n    serializedName: \"Service_filterBlobsHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceFilterBlobsHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ServiceFilterBlobsExceptionHeaders = {\n    serializedName: \"Service_filterBlobsExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceFilterBlobsExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerCreateHeaders = {\n    serializedName: \"Container_createHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerCreateHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerCreateExceptionHeaders = {\n    serializedName: \"Container_createExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerCreateExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerGetPropertiesHeaders = {\n    serializedName: \"Container_getPropertiesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetPropertiesHeaders\",\n        modelProperties: {\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                xmlName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                xmlName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"infinite\", \"fixed\"]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                xmlName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                xmlName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"locked\", \"unlocked\"]\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobPublicAccess: {\n                serializedName: \"x-ms-blob-public-access\",\n                xmlName: \"x-ms-blob-public-access\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"container\", \"blob\"]\n                }\n            },\n            hasImmutabilityPolicy: {\n                serializedName: \"x-ms-has-immutability-policy\",\n                xmlName: \"x-ms-has-immutability-policy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            hasLegalHold: {\n                serializedName: \"x-ms-has-legal-hold\",\n                xmlName: \"x-ms-has-legal-hold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            defaultEncryptionScope: {\n                serializedName: \"x-ms-default-encryption-scope\",\n                xmlName: \"x-ms-default-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            denyEncryptionScopeOverride: {\n                serializedName: \"x-ms-deny-encryption-scope-override\",\n                xmlName: \"x-ms-deny-encryption-scope-override\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            isImmutableStorageWithVersioningEnabled: {\n                serializedName: \"x-ms-immutable-storage-with-versioning-enabled\",\n                xmlName: \"x-ms-immutable-storage-with-versioning-enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerGetPropertiesExceptionHeaders = {\n    serializedName: \"Container_getPropertiesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetPropertiesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerDeleteHeaders = {\n    serializedName: \"Container_deleteHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerDeleteHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerDeleteExceptionHeaders = {\n    serializedName: \"Container_deleteExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerDeleteExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerSetMetadataHeaders = {\n    serializedName: \"Container_setMetadataHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetMetadataHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerSetMetadataExceptionHeaders = {\n    serializedName: \"Container_setMetadataExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetMetadataExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerGetAccessPolicyHeaders = {\n    serializedName: \"Container_getAccessPolicyHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccessPolicyHeaders\",\n        modelProperties: {\n            blobPublicAccess: {\n                serializedName: \"x-ms-blob-public-access\",\n                xmlName: \"x-ms-blob-public-access\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"container\", \"blob\"]\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerGetAccessPolicyExceptionHeaders = {\n    serializedName: \"Container_getAccessPolicyExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccessPolicyExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerSetAccessPolicyHeaders = {\n    serializedName: \"Container_setAccessPolicyHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetAccessPolicyHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerSetAccessPolicyExceptionHeaders = {\n    serializedName: \"Container_setAccessPolicyExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetAccessPolicyExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerRestoreHeaders = {\n    serializedName: \"Container_restoreHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRestoreHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerRestoreExceptionHeaders = {\n    serializedName: \"Container_restoreExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRestoreExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerRenameHeaders = {\n    serializedName: \"Container_renameHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRenameHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerRenameExceptionHeaders = {\n    serializedName: \"Container_renameExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRenameExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerSubmitBatchHeaders = {\n    serializedName: \"Container_submitBatchHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSubmitBatchHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerSubmitBatchExceptionHeaders = {\n    serializedName: \"Container_submitBatchExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSubmitBatchExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerAcquireLeaseHeaders = {\n    serializedName: \"Container_acquireLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerAcquireLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                xmlName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerAcquireLeaseExceptionHeaders = {\n    serializedName: \"Container_acquireLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerAcquireLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerReleaseLeaseHeaders = {\n    serializedName: \"Container_releaseLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerReleaseLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerReleaseLeaseExceptionHeaders = {\n    serializedName: \"Container_releaseLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerReleaseLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerRenewLeaseHeaders = {\n    serializedName: \"Container_renewLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRenewLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                xmlName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerRenewLeaseExceptionHeaders = {\n    serializedName: \"Container_renewLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRenewLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerBreakLeaseHeaders = {\n    serializedName: \"Container_breakLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerBreakLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseTime: {\n                serializedName: \"x-ms-lease-time\",\n                xmlName: \"x-ms-lease-time\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerBreakLeaseExceptionHeaders = {\n    serializedName: \"Container_breakLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerBreakLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerChangeLeaseHeaders = {\n    serializedName: \"Container_changeLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerChangeLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                xmlName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerChangeLeaseExceptionHeaders = {\n    serializedName: \"Container_changeLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerChangeLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerListBlobFlatSegmentHeaders = {\n    serializedName: \"Container_listBlobFlatSegmentHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobFlatSegmentHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerListBlobFlatSegmentExceptionHeaders = {\n    serializedName: \"Container_listBlobFlatSegmentExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobFlatSegmentExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerListBlobHierarchySegmentHeaders = {\n    serializedName: \"Container_listBlobHierarchySegmentHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobHierarchySegmentHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerListBlobHierarchySegmentExceptionHeaders = {\n    serializedName: \"Container_listBlobHierarchySegmentExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobHierarchySegmentExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const ContainerGetAccountInfoHeaders = {\n    serializedName: \"Container_getAccountInfoHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccountInfoHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                xmlName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                xmlName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\",\n                        \"FileStorage\",\n                        \"BlockBlobStorage\"\n                    ]\n                }\n            }\n        }\n    }\n};\nexport const ContainerGetAccountInfoExceptionHeaders = {\n    serializedName: \"Container_getAccountInfoExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccountInfoExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobDownloadHeaders = {\n    serializedName: \"Blob_downloadHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDownloadHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                xmlName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            objectReplicationPolicyId: {\n                serializedName: \"x-ms-or-policy-id\",\n                xmlName: \"x-ms-or-policy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            objectReplicationRules: {\n                serializedName: \"x-ms-or\",\n                xmlName: \"x-ms-or\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                },\n                headerCollectionPrefix: \"x-ms-or-\"\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                xmlName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentRange: {\n                serializedName: \"content-range\",\n                xmlName: \"content-range\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                xmlName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                xmlName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                xmlName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                xmlName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                xmlName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n                }\n            },\n            copyCompletedOn: {\n                serializedName: \"x-ms-copy-completion-time\",\n                xmlName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                xmlName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                xmlName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                xmlName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                xmlName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                xmlName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                xmlName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"infinite\", \"fixed\"]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                xmlName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                xmlName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"locked\", \"unlocked\"]\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            isCurrentVersion: {\n                serializedName: \"x-ms-is-current-version\",\n                xmlName: \"x-ms-is-current-version\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                xmlName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                xmlName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                xmlName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentMD5: {\n                serializedName: \"x-ms-blob-content-md5\",\n                xmlName: \"x-ms-blob-content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            tagCount: {\n                serializedName: \"x-ms-tag-count\",\n                xmlName: \"x-ms-tag-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isSealed: {\n                serializedName: \"x-ms-blob-sealed\",\n                xmlName: \"x-ms-blob-sealed\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            lastAccessed: {\n                serializedName: \"x-ms-last-access-time\",\n                xmlName: \"x-ms-last-access-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyExpiresOn: {\n                serializedName: \"x-ms-immutability-policy-until-date\",\n                xmlName: \"x-ms-immutability-policy-until-date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyMode: {\n                serializedName: \"x-ms-immutability-policy-mode\",\n                xmlName: \"x-ms-immutability-policy-mode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n                }\n            },\n            legalHold: {\n                serializedName: \"x-ms-legal-hold\",\n                xmlName: \"x-ms-legal-hold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            }\n        }\n    }\n};\nexport const BlobDownloadExceptionHeaders = {\n    serializedName: \"Blob_downloadExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDownloadExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobGetPropertiesHeaders = {\n    serializedName: \"Blob_getPropertiesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetPropertiesHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            createdOn: {\n                serializedName: \"x-ms-creation-time\",\n                xmlName: \"x-ms-creation-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                xmlName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            objectReplicationPolicyId: {\n                serializedName: \"x-ms-or-policy-id\",\n                xmlName: \"x-ms-or-policy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            objectReplicationRules: {\n                serializedName: \"x-ms-or\",\n                xmlName: \"x-ms-or\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                },\n                headerCollectionPrefix: \"x-ms-or-\"\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                xmlName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n                }\n            },\n            copyCompletedOn: {\n                serializedName: \"x-ms-copy-completion-time\",\n                xmlName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                xmlName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                xmlName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                xmlName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                xmlName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                xmlName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n                }\n            },\n            isIncrementalCopy: {\n                serializedName: \"x-ms-incremental-copy\",\n                xmlName: \"x-ms-incremental-copy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            destinationSnapshot: {\n                serializedName: \"x-ms-copy-destination-snapshot\",\n                xmlName: \"x-ms-copy-destination-snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                xmlName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"infinite\", \"fixed\"]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                xmlName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                xmlName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"locked\", \"unlocked\"]\n                }\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                xmlName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                xmlName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                xmlName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                xmlName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                xmlName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                xmlName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                xmlName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                xmlName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTier: {\n                serializedName: \"x-ms-access-tier\",\n                xmlName: \"x-ms-access-tier\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierInferred: {\n                serializedName: \"x-ms-access-tier-inferred\",\n                xmlName: \"x-ms-access-tier-inferred\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            archiveStatus: {\n                serializedName: \"x-ms-archive-status\",\n                xmlName: \"x-ms-archive-status\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierChangedOn: {\n                serializedName: \"x-ms-access-tier-change-time\",\n                xmlName: \"x-ms-access-tier-change-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            isCurrentVersion: {\n                serializedName: \"x-ms-is-current-version\",\n                xmlName: \"x-ms-is-current-version\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            tagCount: {\n                serializedName: \"x-ms-tag-count\",\n                xmlName: \"x-ms-tag-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            expiresOn: {\n                serializedName: \"x-ms-expiry-time\",\n                xmlName: \"x-ms-expiry-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isSealed: {\n                serializedName: \"x-ms-blob-sealed\",\n                xmlName: \"x-ms-blob-sealed\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            rehydratePriority: {\n                serializedName: \"x-ms-rehydrate-priority\",\n                xmlName: \"x-ms-rehydrate-priority\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"High\", \"Standard\"]\n                }\n            },\n            lastAccessed: {\n                serializedName: \"x-ms-last-access-time\",\n                xmlName: \"x-ms-last-access-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyExpiresOn: {\n                serializedName: \"x-ms-immutability-policy-until-date\",\n                xmlName: \"x-ms-immutability-policy-until-date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyMode: {\n                serializedName: \"x-ms-immutability-policy-mode\",\n                xmlName: \"x-ms-immutability-policy-mode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n                }\n            },\n            legalHold: {\n                serializedName: \"x-ms-legal-hold\",\n                xmlName: \"x-ms-legal-hold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobGetPropertiesExceptionHeaders = {\n    serializedName: \"Blob_getPropertiesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetPropertiesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobDeleteHeaders = {\n    serializedName: \"Blob_deleteHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDeleteHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobDeleteExceptionHeaders = {\n    serializedName: \"Blob_deleteExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDeleteExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobUndeleteHeaders = {\n    serializedName: \"Blob_undeleteHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobUndeleteHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobUndeleteExceptionHeaders = {\n    serializedName: \"Blob_undeleteExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobUndeleteExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetExpiryHeaders = {\n    serializedName: \"Blob_setExpiryHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetExpiryHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetExpiryExceptionHeaders = {\n    serializedName: \"Blob_setExpiryExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetExpiryExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetHttpHeadersHeaders = {\n    serializedName: \"Blob_setHttpHeadersHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetHttpHeadersHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetHttpHeadersExceptionHeaders = {\n    serializedName: \"Blob_setHttpHeadersExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetHttpHeadersExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetImmutabilityPolicyHeaders = {\n    serializedName: \"Blob_setImmutabilityPolicyHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetImmutabilityPolicyHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyExpiry: {\n                serializedName: \"x-ms-immutability-policy-until-date\",\n                xmlName: \"x-ms-immutability-policy-until-date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            immutabilityPolicyMode: {\n                serializedName: \"x-ms-immutability-policy-mode\",\n                xmlName: \"x-ms-immutability-policy-mode\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n                }\n            }\n        }\n    }\n};\nexport const BlobSetImmutabilityPolicyExceptionHeaders = {\n    serializedName: \"Blob_setImmutabilityPolicyExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetImmutabilityPolicyExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobDeleteImmutabilityPolicyHeaders = {\n    serializedName: \"Blob_deleteImmutabilityPolicyHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDeleteImmutabilityPolicyHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobDeleteImmutabilityPolicyExceptionHeaders = {\n    serializedName: \"Blob_deleteImmutabilityPolicyExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDeleteImmutabilityPolicyExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetLegalHoldHeaders = {\n    serializedName: \"Blob_setLegalHoldHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetLegalHoldHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            legalHold: {\n                serializedName: \"x-ms-legal-hold\",\n                xmlName: \"x-ms-legal-hold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetLegalHoldExceptionHeaders = {\n    serializedName: \"Blob_setLegalHoldExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetLegalHoldExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetMetadataHeaders = {\n    serializedName: \"Blob_setMetadataHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetMetadataHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetMetadataExceptionHeaders = {\n    serializedName: \"Blob_setMetadataExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetMetadataExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobAcquireLeaseHeaders = {\n    serializedName: \"Blob_acquireLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAcquireLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                xmlName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobAcquireLeaseExceptionHeaders = {\n    serializedName: \"Blob_acquireLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAcquireLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobReleaseLeaseHeaders = {\n    serializedName: \"Blob_releaseLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobReleaseLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobReleaseLeaseExceptionHeaders = {\n    serializedName: \"Blob_releaseLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobReleaseLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobRenewLeaseHeaders = {\n    serializedName: \"Blob_renewLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobRenewLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                xmlName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobRenewLeaseExceptionHeaders = {\n    serializedName: \"Blob_renewLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobRenewLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobChangeLeaseHeaders = {\n    serializedName: \"Blob_changeLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobChangeLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                xmlName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobChangeLeaseExceptionHeaders = {\n    serializedName: \"Blob_changeLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobChangeLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobBreakLeaseHeaders = {\n    serializedName: \"Blob_breakLeaseHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobBreakLeaseHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseTime: {\n                serializedName: \"x-ms-lease-time\",\n                xmlName: \"x-ms-lease-time\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport const BlobBreakLeaseExceptionHeaders = {\n    serializedName: \"Blob_breakLeaseExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobBreakLeaseExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobCreateSnapshotHeaders = {\n    serializedName: \"Blob_createSnapshotHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobCreateSnapshotHeaders\",\n        modelProperties: {\n            snapshot: {\n                serializedName: \"x-ms-snapshot\",\n                xmlName: \"x-ms-snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobCreateSnapshotExceptionHeaders = {\n    serializedName: \"Blob_createSnapshotExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobCreateSnapshotExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobStartCopyFromURLHeaders = {\n    serializedName: \"Blob_startCopyFromURLHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobStartCopyFromURLHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                xmlName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                xmlName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobStartCopyFromURLExceptionHeaders = {\n    serializedName: \"Blob_startCopyFromURLExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobStartCopyFromURLExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobCopyFromURLHeaders = {\n    serializedName: \"Blob_copyFromURLHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobCopyFromURLHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                xmlName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                defaultValue: \"success\",\n                isConstant: true,\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobCopyFromURLExceptionHeaders = {\n    serializedName: \"Blob_copyFromURLExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobCopyFromURLExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobAbortCopyFromURLHeaders = {\n    serializedName: \"Blob_abortCopyFromURLHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAbortCopyFromURLHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobAbortCopyFromURLExceptionHeaders = {\n    serializedName: \"Blob_abortCopyFromURLExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAbortCopyFromURLExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetTierHeaders = {\n    serializedName: \"Blob_setTierHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetTierHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetTierExceptionHeaders = {\n    serializedName: \"Blob_setTierExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetTierExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobGetAccountInfoHeaders = {\n    serializedName: \"Blob_getAccountInfoHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetAccountInfoHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                xmlName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                xmlName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\",\n                        \"FileStorage\",\n                        \"BlockBlobStorage\"\n                    ]\n                }\n            }\n        }\n    }\n};\nexport const BlobGetAccountInfoExceptionHeaders = {\n    serializedName: \"Blob_getAccountInfoExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetAccountInfoExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobQueryHeaders = {\n    serializedName: \"Blob_queryHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobQueryHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                xmlName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: { type: { name: \"String\" } }\n                }\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                xmlName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentRange: {\n                serializedName: \"content-range\",\n                xmlName: \"content-range\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                xmlName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                xmlName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                xmlName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                xmlName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                xmlName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n                }\n            },\n            copyCompletionTime: {\n                serializedName: \"x-ms-copy-completion-time\",\n                xmlName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                xmlName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                xmlName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                xmlName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                xmlName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                xmlName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                xmlName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"infinite\", \"fixed\"]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                xmlName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                xmlName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"locked\", \"unlocked\"]\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                xmlName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                xmlName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                xmlName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentMD5: {\n                serializedName: \"x-ms-blob-content-md5\",\n                xmlName: \"x-ms-blob-content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            }\n        }\n    }\n};\nexport const BlobQueryExceptionHeaders = {\n    serializedName: \"Blob_queryExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobQueryExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobGetTagsHeaders = {\n    serializedName: \"Blob_getTagsHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetTagsHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobGetTagsExceptionHeaders = {\n    serializedName: \"Blob_getTagsExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetTagsExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetTagsHeaders = {\n    serializedName: \"Blob_setTagsHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetTagsHeaders\",\n        modelProperties: {\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlobSetTagsExceptionHeaders = {\n    serializedName: \"Blob_setTagsExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetTagsExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobCreateHeaders = {\n    serializedName: \"PageBlob_createHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCreateHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobCreateExceptionHeaders = {\n    serializedName: \"PageBlob_createExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCreateExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobUploadPagesHeaders = {\n    serializedName: \"PageBlob_uploadPagesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUploadPagesHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobUploadPagesExceptionHeaders = {\n    serializedName: \"PageBlob_uploadPagesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUploadPagesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobClearPagesHeaders = {\n    serializedName: \"PageBlob_clearPagesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobClearPagesHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobClearPagesExceptionHeaders = {\n    serializedName: \"PageBlob_clearPagesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobClearPagesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobUploadPagesFromURLHeaders = {\n    serializedName: \"PageBlob_uploadPagesFromURLHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUploadPagesFromURLHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobUploadPagesFromURLExceptionHeaders = {\n    serializedName: \"PageBlob_uploadPagesFromURLExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUploadPagesFromURLExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobGetPageRangesHeaders = {\n    serializedName: \"PageBlob_getPageRangesHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                xmlName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobGetPageRangesExceptionHeaders = {\n    serializedName: \"PageBlob_getPageRangesExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobGetPageRangesDiffHeaders = {\n    serializedName: \"PageBlob_getPageRangesDiffHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesDiffHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                xmlName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobGetPageRangesDiffExceptionHeaders = {\n    serializedName: \"PageBlob_getPageRangesDiffExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesDiffExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobResizeHeaders = {\n    serializedName: \"PageBlob_resizeHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobResizeHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobResizeExceptionHeaders = {\n    serializedName: \"PageBlob_resizeExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobResizeExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobUpdateSequenceNumberHeaders = {\n    serializedName: \"PageBlob_updateSequenceNumberHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUpdateSequenceNumberHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                xmlName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobUpdateSequenceNumberExceptionHeaders = {\n    serializedName: \"PageBlob_updateSequenceNumberExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUpdateSequenceNumberExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobCopyIncrementalHeaders = {\n    serializedName: \"PageBlob_copyIncrementalHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCopyIncrementalHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                xmlName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                xmlName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const PageBlobCopyIncrementalExceptionHeaders = {\n    serializedName: \"PageBlob_copyIncrementalExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCopyIncrementalExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobCreateHeaders = {\n    serializedName: \"AppendBlob_createHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobCreateHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobCreateExceptionHeaders = {\n    serializedName: \"AppendBlob_createExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobCreateExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobAppendBlockHeaders = {\n    serializedName: \"AppendBlob_appendBlockHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobAppendBlockHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobAppendOffset: {\n                serializedName: \"x-ms-blob-append-offset\",\n                xmlName: \"x-ms-blob-append-offset\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                xmlName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobAppendBlockExceptionHeaders = {\n    serializedName: \"AppendBlob_appendBlockExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobAppendBlockExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobAppendBlockFromUrlHeaders = {\n    serializedName: \"AppendBlob_appendBlockFromUrlHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobAppendBlockFromUrlHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobAppendOffset: {\n                serializedName: \"x-ms-blob-append-offset\",\n                xmlName: \"x-ms-blob-append-offset\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                xmlName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobAppendBlockFromUrlExceptionHeaders = {\n    serializedName: \"AppendBlob_appendBlockFromUrlExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobAppendBlockFromUrlExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobSealHeaders = {\n    serializedName: \"AppendBlob_sealHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobSealHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isSealed: {\n                serializedName: \"x-ms-blob-sealed\",\n                xmlName: \"x-ms-blob-sealed\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport const AppendBlobSealExceptionHeaders = {\n    serializedName: \"AppendBlob_sealExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobSealExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobUploadHeaders = {\n    serializedName: \"BlockBlob_uploadHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobUploadHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobUploadExceptionHeaders = {\n    serializedName: \"BlockBlob_uploadExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobUploadExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobPutBlobFromUrlHeaders = {\n    serializedName: \"BlockBlob_putBlobFromUrlHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobPutBlobFromUrlHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobPutBlobFromUrlExceptionHeaders = {\n    serializedName: \"BlockBlob_putBlobFromUrlExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobPutBlobFromUrlExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobStageBlockHeaders = {\n    serializedName: \"BlockBlob_stageBlockHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockHeaders\",\n        modelProperties: {\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobStageBlockExceptionHeaders = {\n    serializedName: \"BlockBlob_stageBlockExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobStageBlockFromURLHeaders = {\n    serializedName: \"BlockBlob_stageBlockFromURLHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockFromURLHeaders\",\n        modelProperties: {\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobStageBlockFromURLExceptionHeaders = {\n    serializedName: \"BlockBlob_stageBlockFromURLExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockFromURLExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobCommitBlockListHeaders = {\n    serializedName: \"BlockBlob_commitBlockListHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobCommitBlockListHeaders\",\n        modelProperties: {\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                xmlName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            xMsContentCrc64: {\n                serializedName: \"x-ms-content-crc64\",\n                xmlName: \"x-ms-content-crc64\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            versionId: {\n                serializedName: \"x-ms-version-id\",\n                xmlName: \"x-ms-version-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                xmlName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            encryptionKeySha256: {\n                serializedName: \"x-ms-encryption-key-sha256\",\n                xmlName: \"x-ms-encryption-key-sha256\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            encryptionScope: {\n                serializedName: \"x-ms-encryption-scope\",\n                xmlName: \"x-ms-encryption-scope\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobCommitBlockListExceptionHeaders = {\n    serializedName: \"BlockBlob_commitBlockListExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobCommitBlockListExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobGetBlockListHeaders = {\n    serializedName: \"BlockBlob_getBlockListHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobGetBlockListHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                xmlName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                serializedName: \"etag\",\n                xmlName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                xmlName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                xmlName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            clientRequestId: {\n                serializedName: \"x-ms-client-request-id\",\n                xmlName: \"x-ms-client-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                xmlName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                xmlName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                xmlName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport const BlockBlobGetBlockListExceptionHeaders = {\n    serializedName: \"BlockBlob_getBlockListExceptionHeaders\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobGetBlockListExceptionHeaders\",\n        modelProperties: {\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                xmlName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=mappers.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { QueryCollectionFormat } from \"@azure/core-http\";\nimport { BlobServiceProperties as BlobServicePropertiesMapper, KeyInfo as KeyInfoMapper, QueryRequest as QueryRequestMapper, BlobTags as BlobTagsMapper, BlockLookupList as BlockLookupListMapper } from \"../models/mappers\";\nexport const contentType = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/xml\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobServiceProperties = {\n    parameterPath: \"blobServiceProperties\",\n    mapper: BlobServicePropertiesMapper\n};\nexport const accept = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/xml\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const url = {\n    parameterPath: \"url\",\n    mapper: {\n        serializedName: \"url\",\n        required: true,\n        xmlName: \"url\",\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nexport const restype = {\n    parameterPath: \"restype\",\n    mapper: {\n        defaultValue: \"service\",\n        isConstant: true,\n        serializedName: \"restype\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"properties\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const timeoutInSeconds = {\n    parameterPath: [\"options\", \"timeoutInSeconds\"],\n    mapper: {\n        constraints: {\n            InclusiveMinimum: 0\n        },\n        serializedName: \"timeout\",\n        xmlName: \"timeout\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const version = {\n    parameterPath: \"version\",\n    mapper: {\n        defaultValue: \"2020-10-02\",\n        isConstant: true,\n        serializedName: \"x-ms-version\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const requestId = {\n    parameterPath: [\"options\", \"requestId\"],\n    mapper: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const accept1 = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/xml\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp1 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"stats\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp2 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"list\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const prefix = {\n    parameterPath: [\"options\", \"prefix\"],\n    mapper: {\n        serializedName: \"prefix\",\n        xmlName: \"prefix\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const marker = {\n    parameterPath: [\"options\", \"marker\"],\n    mapper: {\n        serializedName: \"marker\",\n        xmlName: \"marker\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const maxPageSize = {\n    parameterPath: [\"options\", \"maxPageSize\"],\n    mapper: {\n        constraints: {\n            InclusiveMinimum: 1\n        },\n        serializedName: \"maxresults\",\n        xmlName: \"maxresults\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const include = {\n    parameterPath: [\"options\", \"include\"],\n    mapper: {\n        serializedName: \"include\",\n        xmlName: \"include\",\n        xmlElementName: \"ListContainersIncludeType\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\"metadata\", \"deleted\"]\n                }\n            }\n        }\n    },\n    collectionFormat: QueryCollectionFormat.Csv\n};\nexport const keyInfo = {\n    parameterPath: \"keyInfo\",\n    mapper: KeyInfoMapper\n};\nexport const comp3 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"userdelegationkey\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const restype1 = {\n    parameterPath: \"restype\",\n    mapper: {\n        defaultValue: \"account\",\n        isConstant: true,\n        serializedName: \"restype\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const body = {\n    parameterPath: \"body\",\n    mapper: {\n        serializedName: \"body\",\n        required: true,\n        xmlName: \"body\",\n        type: {\n            name: \"Stream\"\n        }\n    }\n};\nexport const comp4 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"batch\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const contentLength = {\n    parameterPath: \"contentLength\",\n    mapper: {\n        serializedName: \"Content-Length\",\n        required: true,\n        xmlName: \"Content-Length\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const multipartContentType = {\n    parameterPath: \"multipartContentType\",\n    mapper: {\n        serializedName: \"Content-Type\",\n        required: true,\n        xmlName: \"Content-Type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp5 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"blobs\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const where = {\n    parameterPath: [\"options\", \"where\"],\n    mapper: {\n        serializedName: \"where\",\n        xmlName: \"where\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const restype2 = {\n    parameterPath: \"restype\",\n    mapper: {\n        defaultValue: \"container\",\n        isConstant: true,\n        serializedName: \"restype\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const metadata = {\n    parameterPath: [\"options\", \"metadata\"],\n    mapper: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n            name: \"Dictionary\",\n            value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n    }\n};\nexport const access = {\n    parameterPath: [\"options\", \"access\"],\n    mapper: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"container\", \"blob\"]\n        }\n    }\n};\nexport const defaultEncryptionScope = {\n    parameterPath: [\n        \"options\",\n        \"containerEncryptionScope\",\n        \"defaultEncryptionScope\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-default-encryption-scope\",\n        xmlName: \"x-ms-default-encryption-scope\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const preventEncryptionScopeOverride = {\n    parameterPath: [\n        \"options\",\n        \"containerEncryptionScope\",\n        \"preventEncryptionScopeOverride\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-deny-encryption-scope-override\",\n        xmlName: \"x-ms-deny-encryption-scope-override\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const leaseId = {\n    parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n    mapper: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifModifiedSince = {\n    parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifModifiedSince\"],\n    mapper: {\n        serializedName: \"If-Modified-Since\",\n        xmlName: \"If-Modified-Since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport const ifUnmodifiedSince = {\n    parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifUnmodifiedSince\"],\n    mapper: {\n        serializedName: \"If-Unmodified-Since\",\n        xmlName: \"If-Unmodified-Since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport const comp6 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"metadata\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp7 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"acl\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const containerAcl = {\n    parameterPath: [\"options\", \"containerAcl\"],\n    mapper: {\n        serializedName: \"containerAcl\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Composite\",\n                    className: \"SignedIdentifier\"\n                }\n            }\n        }\n    }\n};\nexport const comp8 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"undelete\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const deletedContainerName = {\n    parameterPath: [\"options\", \"deletedContainerName\"],\n    mapper: {\n        serializedName: \"x-ms-deleted-container-name\",\n        xmlName: \"x-ms-deleted-container-name\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const deletedContainerVersion = {\n    parameterPath: [\"options\", \"deletedContainerVersion\"],\n    mapper: {\n        serializedName: \"x-ms-deleted-container-version\",\n        xmlName: \"x-ms-deleted-container-version\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp9 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"rename\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceContainerName = {\n    parameterPath: \"sourceContainerName\",\n    mapper: {\n        serializedName: \"x-ms-source-container-name\",\n        required: true,\n        xmlName: \"x-ms-source-container-name\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceLeaseId = {\n    parameterPath: [\"options\", \"sourceLeaseId\"],\n    mapper: {\n        serializedName: \"x-ms-source-lease-id\",\n        xmlName: \"x-ms-source-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp10 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"lease\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const action = {\n    parameterPath: \"action\",\n    mapper: {\n        defaultValue: \"acquire\",\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const duration = {\n    parameterPath: [\"options\", \"duration\"],\n    mapper: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const proposedLeaseId = {\n    parameterPath: [\"options\", \"proposedLeaseId\"],\n    mapper: {\n        serializedName: \"x-ms-proposed-lease-id\",\n        xmlName: \"x-ms-proposed-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const action1 = {\n    parameterPath: \"action\",\n    mapper: {\n        defaultValue: \"release\",\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const leaseId1 = {\n    parameterPath: \"leaseId\",\n    mapper: {\n        serializedName: \"x-ms-lease-id\",\n        required: true,\n        xmlName: \"x-ms-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const action2 = {\n    parameterPath: \"action\",\n    mapper: {\n        defaultValue: \"renew\",\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const action3 = {\n    parameterPath: \"action\",\n    mapper: {\n        defaultValue: \"break\",\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const breakPeriod = {\n    parameterPath: [\"options\", \"breakPeriod\"],\n    mapper: {\n        serializedName: \"x-ms-lease-break-period\",\n        xmlName: \"x-ms-lease-break-period\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const action4 = {\n    parameterPath: \"action\",\n    mapper: {\n        defaultValue: \"change\",\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const proposedLeaseId1 = {\n    parameterPath: \"proposedLeaseId\",\n    mapper: {\n        serializedName: \"x-ms-proposed-lease-id\",\n        required: true,\n        xmlName: \"x-ms-proposed-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const include1 = {\n    parameterPath: [\"options\", \"include\"],\n    mapper: {\n        serializedName: \"include\",\n        xmlName: \"include\",\n        xmlElementName: \"ListBlobsIncludeItem\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"copy\",\n                        \"deleted\",\n                        \"metadata\",\n                        \"snapshots\",\n                        \"uncommittedblobs\",\n                        \"versions\",\n                        \"tags\",\n                        \"immutabilitypolicy\",\n                        \"legalhold\",\n                        \"deletedwithversions\"\n                    ]\n                }\n            }\n        }\n    },\n    collectionFormat: QueryCollectionFormat.Csv\n};\nexport const delimiter = {\n    parameterPath: \"delimiter\",\n    mapper: {\n        serializedName: \"delimiter\",\n        required: true,\n        xmlName: \"delimiter\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const snapshot = {\n    parameterPath: [\"options\", \"snapshot\"],\n    mapper: {\n        serializedName: \"snapshot\",\n        xmlName: \"snapshot\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const versionId = {\n    parameterPath: [\"options\", \"versionId\"],\n    mapper: {\n        serializedName: \"versionid\",\n        xmlName: \"versionid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const range = {\n    parameterPath: [\"options\", \"range\"],\n    mapper: {\n        serializedName: \"x-ms-range\",\n        xmlName: \"x-ms-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const rangeGetContentMD5 = {\n    parameterPath: [\"options\", \"rangeGetContentMD5\"],\n    mapper: {\n        serializedName: \"x-ms-range-get-content-md5\",\n        xmlName: \"x-ms-range-get-content-md5\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const rangeGetContentCRC64 = {\n    parameterPath: [\"options\", \"rangeGetContentCRC64\"],\n    mapper: {\n        serializedName: \"x-ms-range-get-content-crc64\",\n        xmlName: \"x-ms-range-get-content-crc64\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const encryptionKey = {\n    parameterPath: [\"options\", \"cpkInfo\", \"encryptionKey\"],\n    mapper: {\n        serializedName: \"x-ms-encryption-key\",\n        xmlName: \"x-ms-encryption-key\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const encryptionKeySha256 = {\n    parameterPath: [\"options\", \"cpkInfo\", \"encryptionKeySha256\"],\n    mapper: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const encryptionAlgorithm = {\n    parameterPath: [\"options\", \"encryptionAlgorithm\"],\n    mapper: {\n        defaultValue: \"AES256\",\n        isConstant: true,\n        serializedName: \"x-ms-encryption-algorithm\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifMatch = {\n    parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifMatch\"],\n    mapper: {\n        serializedName: \"If-Match\",\n        xmlName: \"If-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifNoneMatch = {\n    parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifNoneMatch\"],\n    mapper: {\n        serializedName: \"If-None-Match\",\n        xmlName: \"If-None-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifTags = {\n    parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifTags\"],\n    mapper: {\n        serializedName: \"x-ms-if-tags\",\n        xmlName: \"x-ms-if-tags\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const deleteSnapshots = {\n    parameterPath: [\"options\", \"deleteSnapshots\"],\n    mapper: {\n        serializedName: \"x-ms-delete-snapshots\",\n        xmlName: \"x-ms-delete-snapshots\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"include\", \"only\"]\n        }\n    }\n};\nexport const blobDeleteType = {\n    parameterPath: [\"options\", \"blobDeleteType\"],\n    mapper: {\n        serializedName: \"deletetype\",\n        xmlName: \"deletetype\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp11 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"expiry\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const expiryOptions = {\n    parameterPath: \"expiryOptions\",\n    mapper: {\n        serializedName: \"x-ms-expiry-option\",\n        required: true,\n        xmlName: \"x-ms-expiry-option\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const expiresOn = {\n    parameterPath: [\"options\", \"expiresOn\"],\n    mapper: {\n        serializedName: \"x-ms-expiry-time\",\n        xmlName: \"x-ms-expiry-time\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobCacheControl = {\n    parameterPath: [\"options\", \"blobHttpHeaders\", \"blobCacheControl\"],\n    mapper: {\n        serializedName: \"x-ms-blob-cache-control\",\n        xmlName: \"x-ms-blob-cache-control\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobContentType = {\n    parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentType\"],\n    mapper: {\n        serializedName: \"x-ms-blob-content-type\",\n        xmlName: \"x-ms-blob-content-type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobContentMD5 = {\n    parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentMD5\"],\n    mapper: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport const blobContentEncoding = {\n    parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentEncoding\"],\n    mapper: {\n        serializedName: \"x-ms-blob-content-encoding\",\n        xmlName: \"x-ms-blob-content-encoding\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobContentLanguage = {\n    parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentLanguage\"],\n    mapper: {\n        serializedName: \"x-ms-blob-content-language\",\n        xmlName: \"x-ms-blob-content-language\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobContentDisposition = {\n    parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentDisposition\"],\n    mapper: {\n        serializedName: \"x-ms-blob-content-disposition\",\n        xmlName: \"x-ms-blob-content-disposition\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp12 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"immutabilityPolicies\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const immutabilityPolicyExpiry = {\n    parameterPath: [\"options\", \"immutabilityPolicyExpiry\"],\n    mapper: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport const immutabilityPolicyMode = {\n    parameterPath: [\"options\", \"immutabilityPolicyMode\"],\n    mapper: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n        }\n    }\n};\nexport const comp13 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"legalhold\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const legalHold = {\n    parameterPath: \"legalHold\",\n    mapper: {\n        serializedName: \"x-ms-legal-hold\",\n        required: true,\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const encryptionScope = {\n    parameterPath: [\"options\", \"encryptionScope\"],\n    mapper: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp14 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"snapshot\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const tier = {\n    parameterPath: [\"options\", \"tier\"],\n    mapper: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"P4\",\n                \"P6\",\n                \"P10\",\n                \"P15\",\n                \"P20\",\n                \"P30\",\n                \"P40\",\n                \"P50\",\n                \"P60\",\n                \"P70\",\n                \"P80\",\n                \"Hot\",\n                \"Cool\",\n                \"Archive\"\n            ]\n        }\n    }\n};\nexport const rehydratePriority = {\n    parameterPath: [\"options\", \"rehydratePriority\"],\n    mapper: {\n        serializedName: \"x-ms-rehydrate-priority\",\n        xmlName: \"x-ms-rehydrate-priority\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"High\", \"Standard\"]\n        }\n    }\n};\nexport const sourceIfModifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfModifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-modified-since\",\n        xmlName: \"x-ms-source-if-modified-since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport const sourceIfUnmodifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfUnmodifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-unmodified-since\",\n        xmlName: \"x-ms-source-if-unmodified-since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport const sourceIfMatch = {\n    parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfMatch\"],\n    mapper: {\n        serializedName: \"x-ms-source-if-match\",\n        xmlName: \"x-ms-source-if-match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceIfNoneMatch = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfNoneMatch\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-none-match\",\n        xmlName: \"x-ms-source-if-none-match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceIfTags = {\n    parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfTags\"],\n    mapper: {\n        serializedName: \"x-ms-source-if-tags\",\n        xmlName: \"x-ms-source-if-tags\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const copySource = {\n    parameterPath: \"copySource\",\n    mapper: {\n        serializedName: \"x-ms-copy-source\",\n        required: true,\n        xmlName: \"x-ms-copy-source\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobTagsString = {\n    parameterPath: [\"options\", \"blobTagsString\"],\n    mapper: {\n        serializedName: \"x-ms-tags\",\n        xmlName: \"x-ms-tags\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sealBlob = {\n    parameterPath: [\"options\", \"sealBlob\"],\n    mapper: {\n        serializedName: \"x-ms-seal-blob\",\n        xmlName: \"x-ms-seal-blob\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const legalHold1 = {\n    parameterPath: [\"options\", \"legalHold\"],\n    mapper: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const xMsRequiresSync = {\n    parameterPath: \"xMsRequiresSync\",\n    mapper: {\n        defaultValue: \"true\",\n        isConstant: true,\n        serializedName: \"x-ms-requires-sync\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceContentMD5 = {\n    parameterPath: [\"options\", \"sourceContentMD5\"],\n    mapper: {\n        serializedName: \"x-ms-source-content-md5\",\n        xmlName: \"x-ms-source-content-md5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport const copySourceAuthorization = {\n    parameterPath: [\"options\", \"copySourceAuthorization\"],\n    mapper: {\n        serializedName: \"x-ms-copy-source-authorization\",\n        xmlName: \"x-ms-copy-source-authorization\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp15 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"copy\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const copyActionAbortConstant = {\n    parameterPath: \"copyActionAbortConstant\",\n    mapper: {\n        defaultValue: \"abort\",\n        isConstant: true,\n        serializedName: \"x-ms-copy-action\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const copyId = {\n    parameterPath: \"copyId\",\n    mapper: {\n        serializedName: \"copyid\",\n        required: true,\n        xmlName: \"copyid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp16 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"tier\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const tier1 = {\n    parameterPath: \"tier\",\n    mapper: {\n        serializedName: \"x-ms-access-tier\",\n        required: true,\n        xmlName: \"x-ms-access-tier\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"P4\",\n                \"P6\",\n                \"P10\",\n                \"P15\",\n                \"P20\",\n                \"P30\",\n                \"P40\",\n                \"P50\",\n                \"P60\",\n                \"P70\",\n                \"P80\",\n                \"Hot\",\n                \"Cool\",\n                \"Archive\"\n            ]\n        }\n    }\n};\nexport const queryRequest = {\n    parameterPath: [\"options\", \"queryRequest\"],\n    mapper: QueryRequestMapper\n};\nexport const comp17 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"query\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp18 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"tags\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const tags = {\n    parameterPath: [\"options\", \"tags\"],\n    mapper: BlobTagsMapper\n};\nexport const transactionalContentMD5 = {\n    parameterPath: [\"options\", \"transactionalContentMD5\"],\n    mapper: {\n        serializedName: \"Content-MD5\",\n        xmlName: \"Content-MD5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport const transactionalContentCrc64 = {\n    parameterPath: [\"options\", \"transactionalContentCrc64\"],\n    mapper: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport const blobType = {\n    parameterPath: \"blobType\",\n    mapper: {\n        defaultValue: \"PageBlob\",\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobContentLength = {\n    parameterPath: \"blobContentLength\",\n    mapper: {\n        serializedName: \"x-ms-blob-content-length\",\n        required: true,\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const blobSequenceNumber = {\n    parameterPath: [\"options\", \"blobSequenceNumber\"],\n    mapper: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const contentType1 = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/octet-stream\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const body1 = {\n    parameterPath: \"body\",\n    mapper: {\n        serializedName: \"body\",\n        required: true,\n        xmlName: \"body\",\n        type: {\n            name: \"Stream\"\n        }\n    }\n};\nexport const accept2 = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/xml\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp19 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"page\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const pageWrite = {\n    parameterPath: \"pageWrite\",\n    mapper: {\n        defaultValue: \"update\",\n        isConstant: true,\n        serializedName: \"x-ms-page-write\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifSequenceNumberLessThanOrEqualTo = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberLessThanOrEqualTo\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-le\",\n        xmlName: \"x-ms-if-sequence-number-le\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const ifSequenceNumberLessThan = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberLessThan\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-lt\",\n        xmlName: \"x-ms-if-sequence-number-lt\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const ifSequenceNumberEqualTo = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberEqualTo\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-eq\",\n        xmlName: \"x-ms-if-sequence-number-eq\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const pageWrite1 = {\n    parameterPath: \"pageWrite\",\n    mapper: {\n        defaultValue: \"clear\",\n        isConstant: true,\n        serializedName: \"x-ms-page-write\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceUrl = {\n    parameterPath: \"sourceUrl\",\n    mapper: {\n        serializedName: \"x-ms-copy-source\",\n        required: true,\n        xmlName: \"x-ms-copy-source\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceRange = {\n    parameterPath: \"sourceRange\",\n    mapper: {\n        serializedName: \"x-ms-source-range\",\n        required: true,\n        xmlName: \"x-ms-source-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sourceContentCrc64 = {\n    parameterPath: [\"options\", \"sourceContentCrc64\"],\n    mapper: {\n        serializedName: \"x-ms-source-content-crc64\",\n        xmlName: \"x-ms-source-content-crc64\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport const range1 = {\n    parameterPath: \"range\",\n    mapper: {\n        serializedName: \"x-ms-range\",\n        required: true,\n        xmlName: \"x-ms-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp20 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"pagelist\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const prevsnapshot = {\n    parameterPath: [\"options\", \"prevsnapshot\"],\n    mapper: {\n        serializedName: \"prevsnapshot\",\n        xmlName: \"prevsnapshot\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const prevSnapshotUrl = {\n    parameterPath: [\"options\", \"prevSnapshotUrl\"],\n    mapper: {\n        serializedName: \"x-ms-previous-snapshot-url\",\n        xmlName: \"x-ms-previous-snapshot-url\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const sequenceNumberAction = {\n    parameterPath: \"sequenceNumberAction\",\n    mapper: {\n        serializedName: \"x-ms-sequence-number-action\",\n        required: true,\n        xmlName: \"x-ms-sequence-number-action\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"max\", \"update\", \"increment\"]\n        }\n    }\n};\nexport const comp21 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"incrementalcopy\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobType1 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        defaultValue: \"AppendBlob\",\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp22 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"appendblock\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const maxSize = {\n    parameterPath: [\"options\", \"appendPositionAccessConditions\", \"maxSize\"],\n    mapper: {\n        serializedName: \"x-ms-blob-condition-maxsize\",\n        xmlName: \"x-ms-blob-condition-maxsize\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const appendPosition = {\n    parameterPath: [\n        \"options\",\n        \"appendPositionAccessConditions\",\n        \"appendPosition\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-condition-appendpos\",\n        xmlName: \"x-ms-blob-condition-appendpos\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport const sourceRange1 = {\n    parameterPath: [\"options\", \"sourceRange\"],\n    mapper: {\n        serializedName: \"x-ms-source-range\",\n        xmlName: \"x-ms-source-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const comp23 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"seal\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blobType2 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        defaultValue: \"BlockBlob\",\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const copySourceBlobProperties = {\n    parameterPath: [\"options\", \"copySourceBlobProperties\"],\n    mapper: {\n        serializedName: \"x-ms-copy-source-blob-properties\",\n        xmlName: \"x-ms-copy-source-blob-properties\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport const comp24 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"block\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blockId = {\n    parameterPath: \"blockId\",\n    mapper: {\n        serializedName: \"blockid\",\n        required: true,\n        xmlName: \"blockid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const blocks = {\n    parameterPath: \"blocks\",\n    mapper: BlockLookupListMapper\n};\nexport const comp25 = {\n    parameterPath: \"comp\",\n    mapper: {\n        defaultValue: \"blocklist\",\n        isConstant: true,\n        serializedName: \"comp\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const listType = {\n    parameterPath: \"listType\",\n    mapper: {\n        defaultValue: \"committed\",\n        serializedName: \"blocklisttype\",\n        required: true,\n        xmlName: \"blocklisttype\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\"committed\", \"uncommitted\", \"all\"]\n        }\n    }\n};\n//# sourceMappingURL=parameters.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a AppendBlob. */\nexport class AppendBlob {\n    /**\n     * Initialize a new instance of the class AppendBlob class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * The Create Append Blob operation creates a new append blob.\n     * @param contentLength The length of the request.\n     * @param options The options parameters.\n     */\n    create(contentLength, options) {\n        const operationArguments = {\n            contentLength,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, createOperationSpec);\n    }\n    /**\n     * The Append Block operation commits a new block of data to the end of an existing append blob. The\n     * Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n     * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n     * @param contentLength The length of the request.\n     * @param body Initial data\n     * @param options The options parameters.\n     */\n    appendBlock(contentLength, body, options) {\n        const operationArguments = {\n            contentLength,\n            body,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, appendBlockOperationSpec);\n    }\n    /**\n     * The Append Block operation commits a new block of data to the end of an existing append blob where\n     * the contents are read from a source url. The Append Block operation is permitted only if the blob\n     * was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version\n     * 2015-02-21 version or later.\n     * @param sourceUrl Specify a URL to the copy source.\n     * @param contentLength The length of the request.\n     * @param options The options parameters.\n     */\n    appendBlockFromUrl(sourceUrl, contentLength, options) {\n        const operationArguments = {\n            sourceUrl,\n            contentLength,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, appendBlockFromUrlOperationSpec);\n    }\n    /**\n     * The Seal operation seals the Append Blob to make it read-only. Seal is supported only on version\n     * 2019-12-12 version or later.\n     * @param options The options parameters.\n     */\n    seal(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, sealOperationSpec);\n    }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\nconst createOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.AppendBlobCreateExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode,\n        Parameters.encryptionScope,\n        Parameters.blobTagsString,\n        Parameters.legalHold1,\n        Parameters.blobType1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst appendBlockOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobAppendBlockHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.AppendBlobAppendBlockExceptionHeaders\n        }\n    },\n    requestBody: Parameters.body1,\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope,\n        Parameters.transactionalContentMD5,\n        Parameters.transactionalContentCrc64,\n        Parameters.contentType1,\n        Parameters.accept2,\n        Parameters.maxSize,\n        Parameters.appendPosition\n    ],\n    mediaType: \"binary\",\n    serializer\n};\nconst appendBlockFromUrlOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.AppendBlobAppendBlockFromUrlExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.sourceContentMD5,\n        Parameters.copySourceAuthorization,\n        Parameters.transactionalContentMD5,\n        Parameters.sourceUrl,\n        Parameters.sourceContentCrc64,\n        Parameters.maxSize,\n        Parameters.appendPosition,\n        Parameters.sourceRange1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst sealOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.AppendBlobSealHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.AppendBlobSealExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp23],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.appendPosition\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\n//# sourceMappingURL=appendBlob.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Blob. */\nexport class Blob {\n    /**\n     * Initialize a new instance of the class Blob class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * The Download operation reads or downloads a blob from the system, including its metadata and\n     * properties. You can also call Download to read a snapshot.\n     * @param options The options parameters.\n     */\n    download(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, downloadOperationSpec);\n    }\n    /**\n     * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system\n     * properties for the blob. It does not return the content of the blob.\n     * @param options The options parameters.\n     */\n    getProperties(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getPropertiesOperationSpec);\n    }\n    /**\n     * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n     * permanently removed from the storage account. If the storage account's soft delete feature is\n     * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n     * immediately. However, the blob service retains the blob or snapshot for the number of days specified\n     * by the DeleteRetentionPolicy section of [Storage service properties]\n     * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is\n     * permanently removed from the storage account. Note that you continue to be charged for the\n     * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the\n     * \"include=deleted\" query parameter to discover which blobs and snapshots have been soft deleted. You\n     * can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a\n     * soft-deleted blob or snapshot causes the service to return an HTTP status code of 404\n     * (ResourceNotFound).\n     * @param options The options parameters.\n     */\n    delete(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, deleteOperationSpec);\n    }\n    /**\n     * Undelete a blob that was previously soft deleted\n     * @param options The options parameters.\n     */\n    undelete(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, undeleteOperationSpec);\n    }\n    /**\n     * Sets the time a blob will expire and be deleted.\n     * @param expiryOptions Required. Indicates mode of the expiry time\n     * @param options The options parameters.\n     */\n    setExpiry(expiryOptions, options) {\n        const operationArguments = {\n            expiryOptions,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setExpiryOperationSpec);\n    }\n    /**\n     * The Set HTTP Headers operation sets system properties on the blob\n     * @param options The options parameters.\n     */\n    setHttpHeaders(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setHttpHeadersOperationSpec);\n    }\n    /**\n     * The Set Immutability Policy operation sets the immutability policy on the blob\n     * @param options The options parameters.\n     */\n    setImmutabilityPolicy(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setImmutabilityPolicyOperationSpec);\n    }\n    /**\n     * The Delete Immutability Policy operation deletes the immutability policy on the blob\n     * @param options The options parameters.\n     */\n    deleteImmutabilityPolicy(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, deleteImmutabilityPolicyOperationSpec);\n    }\n    /**\n     * The Set Legal Hold operation sets a legal hold on the blob.\n     * @param legalHold Specified if a legal hold should be set on the blob.\n     * @param options The options parameters.\n     */\n    setLegalHold(legalHold, options) {\n        const operationArguments = {\n            legalHold,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setLegalHoldOperationSpec);\n    }\n    /**\n     * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n     * name-value pairs\n     * @param options The options parameters.\n     */\n    setMetadata(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setMetadataOperationSpec);\n    }\n    /**\n     * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n     * operations\n     * @param options The options parameters.\n     */\n    acquireLease(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, acquireLeaseOperationSpec);\n    }\n    /**\n     * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n     * operations\n     * @param leaseId Specifies the current lease ID on the resource.\n     * @param options The options parameters.\n     */\n    releaseLease(leaseId, options) {\n        const operationArguments = {\n            leaseId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, releaseLeaseOperationSpec);\n    }\n    /**\n     * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n     * operations\n     * @param leaseId Specifies the current lease ID on the resource.\n     * @param options The options parameters.\n     */\n    renewLease(leaseId, options) {\n        const operationArguments = {\n            leaseId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, renewLeaseOperationSpec);\n    }\n    /**\n     * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n     * operations\n     * @param leaseId Specifies the current lease ID on the resource.\n     * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n     *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n     *                        (String) for a list of valid GUID string formats.\n     * @param options The options parameters.\n     */\n    changeLease(leaseId, proposedLeaseId, options) {\n        const operationArguments = {\n            leaseId,\n            proposedLeaseId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, changeLeaseOperationSpec);\n    }\n    /**\n     * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n     * operations\n     * @param options The options parameters.\n     */\n    breakLease(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, breakLeaseOperationSpec);\n    }\n    /**\n     * The Create Snapshot operation creates a read-only snapshot of a blob\n     * @param options The options parameters.\n     */\n    createSnapshot(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, createSnapshotOperationSpec);\n    }\n    /**\n     * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n     *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n     *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n     *                   access signature.\n     * @param options The options parameters.\n     */\n    startCopyFromURL(copySource, options) {\n        const operationArguments = {\n            copySource,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, startCopyFromURLOperationSpec);\n    }\n    /**\n     * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return\n     * a response until the copy is complete.\n     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n     *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n     *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n     *                   access signature.\n     * @param options The options parameters.\n     */\n    copyFromURL(copySource, options) {\n        const operationArguments = {\n            copySource,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, copyFromURLOperationSpec);\n    }\n    /**\n     * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination\n     * blob with zero length and full metadata.\n     * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n     *               operation.\n     * @param options The options parameters.\n     */\n    abortCopyFromURL(copyId, options) {\n        const operationArguments = {\n            copyId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, abortCopyFromURLOperationSpec);\n    }\n    /**\n     * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium\n     * storage account and on a block blob in a blob storage account (locally redundant storage only). A\n     * premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block\n     * blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's\n     * ETag.\n     * @param tier Indicates the tier to be set on the blob.\n     * @param options The options parameters.\n     */\n    setTier(tier, options) {\n        const operationArguments = {\n            tier,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setTierOperationSpec);\n    }\n    /**\n     * Returns the sku name and account kind\n     * @param options The options parameters.\n     */\n    getAccountInfo(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getAccountInfoOperationSpec);\n    }\n    /**\n     * The Query operation enables users to select/project on blob data by providing simple query\n     * expressions.\n     * @param options The options parameters.\n     */\n    query(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, queryOperationSpec);\n    }\n    /**\n     * The Get Tags operation enables users to get the tags associated with a blob.\n     * @param options The options parameters.\n     */\n    getTags(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getTagsOperationSpec);\n    }\n    /**\n     * The Set Tags operation enables users to set tags on a blob.\n     * @param options The options parameters.\n     */\n    setTags(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setTagsOperationSpec);\n    }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst downloadOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: {\n                type: { name: \"Stream\" },\n                serializedName: \"parsedResponse\"\n            },\n            headersMapper: Mappers.BlobDownloadHeaders\n        },\n        206: {\n            bodyMapper: {\n                type: { name: \"Stream\" },\n                serializedName: \"parsedResponse\"\n            },\n            headersMapper: Mappers.BlobDownloadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobDownloadExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.versionId\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.range,\n        Parameters.rangeGetContentMD5,\n        Parameters.rangeGetContentCRC64,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"HEAD\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobGetPropertiesExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.versionId\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst deleteOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"DELETE\",\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobDeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobDeleteExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.versionId,\n        Parameters.blobDeleteType\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.deleteSnapshots\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst undeleteOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobUndeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobUndeleteExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp8],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setExpiryOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetExpiryHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetExpiryExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.expiryOptions,\n        Parameters.expiresOn\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setHttpHeadersOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetHttpHeadersHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetHttpHeadersExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setImmutabilityPolicyOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetImmutabilityPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetImmutabilityPolicyExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifUnmodifiedSince,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst deleteImmutabilityPolicyOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"DELETE\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobDeleteImmutabilityPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobDeleteImmutabilityPolicyExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setLegalHoldOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetLegalHoldHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetLegalHoldExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp13],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.legalHold\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setMetadataOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetMetadataHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetMetadataExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp6],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlobAcquireLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobAcquireLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.action,\n        Parameters.duration,\n        Parameters.proposedLeaseId,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobReleaseLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobReleaseLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.action1,\n        Parameters.leaseId1,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst renewLeaseOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobRenewLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobRenewLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.leaseId1,\n        Parameters.action2,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobChangeLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobChangeLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.leaseId1,\n        Parameters.action4,\n        Parameters.proposedLeaseId1,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobBreakLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobBreakLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.action3,\n        Parameters.breakPeriod,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst createSnapshotOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlobCreateSnapshotHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobCreateSnapshotExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp14],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst startCopyFromURLOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobStartCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobStartCopyFromURLExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode,\n        Parameters.tier,\n        Parameters.rehydratePriority,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.sourceIfTags,\n        Parameters.copySource,\n        Parameters.blobTagsString,\n        Parameters.sealBlob,\n        Parameters.legalHold1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst copyFromURLOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobCopyFromURLExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode,\n        Parameters.tier,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.copySource,\n        Parameters.blobTagsString,\n        Parameters.legalHold1,\n        Parameters.xMsRequiresSync,\n        Parameters.sourceContentMD5,\n        Parameters.copySourceAuthorization\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst abortCopyFromURLOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        204: {\n            headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobAbortCopyFromURLExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp15,\n        Parameters.copyId\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.copyActionAbortConstant\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setTierOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetTierHeaders\n        },\n        202: {\n            headersMapper: Mappers.BlobSetTierHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetTierExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.versionId,\n        Parameters.comp16\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifTags,\n        Parameters.rehydratePriority,\n        Parameters.tier1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getAccountInfoOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobGetAccountInfoExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.comp, Parameters.restype1],\n    urlParameters: [Parameters.url],\n    headerParameters: [Parameters.version, Parameters.accept1],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst queryOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: {\n                type: { name: \"Stream\" },\n                serializedName: \"parsedResponse\"\n            },\n            headersMapper: Mappers.BlobQueryHeaders\n        },\n        206: {\n            bodyMapper: {\n                type: { name: \"Stream\" },\n                serializedName: \"parsedResponse\"\n            },\n            headersMapper: Mappers.BlobQueryHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobQueryExceptionHeaders\n        }\n    },\n    requestBody: Parameters.queryRequest,\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.comp17\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst getTagsOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.BlobTags,\n            headersMapper: Mappers.BlobGetTagsHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobGetTagsExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.versionId,\n        Parameters.comp18\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setTagsOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        204: {\n            headersMapper: Mappers.BlobSetTagsHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlobSetTagsExceptionHeaders\n        }\n    },\n    requestBody: Parameters.tags,\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.versionId,\n        Parameters.comp18\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId,\n        Parameters.ifTags,\n        Parameters.transactionalContentMD5,\n        Parameters.transactionalContentCrc64\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\n//# sourceMappingURL=blob.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a BlockBlob. */\nexport class BlockBlob {\n    /**\n     * Initialize a new instance of the class BlockBlob class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * The Upload Block Blob operation updates the content of an existing block blob. Updating an existing\n     * block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put\n     * Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a\n     * partial update of the content of a block blob, use the Put Block List operation.\n     * @param contentLength The length of the request.\n     * @param body Initial data\n     * @param options The options parameters.\n     */\n    upload(contentLength, body, options) {\n        const operationArguments = {\n            contentLength,\n            body,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, uploadOperationSpec);\n    }\n    /**\n     * The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read\n     * from a given URL.  This API is supported beginning with the 2020-04-08 version. Partial updates are\n     * not supported with Put Blob from URL; the content of an existing blob is overwritten with the\n     * content of the new blob.  To perform partial updates to a block blob’s contents using a source URL,\n     * use the Put Block from URL API in conjunction with Put Block List.\n     * @param contentLength The length of the request.\n     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n     *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n     *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n     *                   access signature.\n     * @param options The options parameters.\n     */\n    putBlobFromUrl(contentLength, copySource, options) {\n        const operationArguments = {\n            contentLength,\n            copySource,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, putBlobFromUrlOperationSpec);\n    }\n    /**\n     * The Stage Block operation creates a new block to be committed as part of a blob\n     * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n     *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n     *                for the blockid parameter must be the same size for each block.\n     * @param contentLength The length of the request.\n     * @param body Initial data\n     * @param options The options parameters.\n     */\n    stageBlock(blockId, contentLength, body, options) {\n        const operationArguments = {\n            blockId,\n            contentLength,\n            body,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, stageBlockOperationSpec);\n    }\n    /**\n     * The Stage Block operation creates a new block to be committed as part of a blob where the contents\n     * are read from a URL.\n     * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n     *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n     *                for the blockid parameter must be the same size for each block.\n     * @param contentLength The length of the request.\n     * @param sourceUrl Specify a URL to the copy source.\n     * @param options The options parameters.\n     */\n    stageBlockFromURL(blockId, contentLength, sourceUrl, options) {\n        const operationArguments = {\n            blockId,\n            contentLength,\n            sourceUrl,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, stageBlockFromURLOperationSpec);\n    }\n    /**\n     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the\n     * blob. In order to be written as part of a blob, a block must have been successfully written to the\n     * server in a prior Put Block operation. You can call Put Block List to update a blob by uploading\n     * only those blocks that have changed, then committing the new and existing blocks together. You can\n     * do this by specifying whether to commit a block from the committed block list or from the\n     * uncommitted block list, or to commit the most recently uploaded version of the block, whichever list\n     * it may belong to.\n     * @param blocks Blob Blocks.\n     * @param options The options parameters.\n     */\n    commitBlockList(blocks, options) {\n        const operationArguments = {\n            blocks,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, commitBlockListOperationSpec);\n    }\n    /**\n     * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block\n     * blob\n     * @param listType Specifies whether to return the list of committed blocks, the list of uncommitted\n     *                 blocks, or both lists together.\n     * @param options The options parameters.\n     */\n    getBlockList(listType, options) {\n        const operationArguments = {\n            listType,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getBlockListOperationSpec);\n    }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\nconst uploadOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobUploadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlockBlobUploadExceptionHeaders\n        }\n    },\n    requestBody: Parameters.body1,\n    queryParameters: [Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode,\n        Parameters.encryptionScope,\n        Parameters.tier,\n        Parameters.blobTagsString,\n        Parameters.legalHold1,\n        Parameters.transactionalContentMD5,\n        Parameters.contentType1,\n        Parameters.accept2,\n        Parameters.blobType2\n    ],\n    mediaType: \"binary\",\n    serializer\n};\nconst putBlobFromUrlOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobPutBlobFromUrlHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlockBlobPutBlobFromUrlExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.encryptionScope,\n        Parameters.tier,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.sourceIfTags,\n        Parameters.copySource,\n        Parameters.blobTagsString,\n        Parameters.sourceContentMD5,\n        Parameters.copySourceAuthorization,\n        Parameters.transactionalContentMD5,\n        Parameters.blobType2,\n        Parameters.copySourceBlobProperties\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst stageBlockOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobStageBlockHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlockBlobStageBlockExceptionHeaders\n        }\n    },\n    requestBody: Parameters.body1,\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp24,\n        Parameters.blockId\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.encryptionScope,\n        Parameters.transactionalContentMD5,\n        Parameters.transactionalContentCrc64,\n        Parameters.contentType1,\n        Parameters.accept2\n    ],\n    mediaType: \"binary\",\n    serializer\n};\nconst stageBlockFromURLOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlockBlobStageBlockFromURLExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp24,\n        Parameters.blockId\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.encryptionScope,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.sourceContentMD5,\n        Parameters.copySourceAuthorization,\n        Parameters.sourceUrl,\n        Parameters.sourceContentCrc64,\n        Parameters.sourceRange1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst commitBlockListOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlockBlobCommitBlockListExceptionHeaders\n        }\n    },\n    requestBody: Parameters.blocks,\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp25],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode,\n        Parameters.encryptionScope,\n        Parameters.tier,\n        Parameters.blobTagsString,\n        Parameters.legalHold1,\n        Parameters.transactionalContentMD5,\n        Parameters.transactionalContentCrc64\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst getBlockListOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.BlockList,\n            headersMapper: Mappers.BlockBlobGetBlockListHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.BlockBlobGetBlockListExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.comp25,\n        Parameters.listType\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\n//# sourceMappingURL=blockBlob.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Container. */\nexport class Container {\n    /**\n     * Initialize a new instance of the class Container class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * creates a new container under the specified account. If the container with the same name already\n     * exists, the operation fails\n     * @param options The options parameters.\n     */\n    create(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, createOperationSpec);\n    }\n    /**\n     * returns all user-defined metadata and system properties for the specified container. The data\n     * returned does not include the container's list of blobs\n     * @param options The options parameters.\n     */\n    getProperties(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getPropertiesOperationSpec);\n    }\n    /**\n     * operation marks the specified container for deletion. The container and any blobs contained within\n     * it are later deleted during garbage collection\n     * @param options The options parameters.\n     */\n    delete(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, deleteOperationSpec);\n    }\n    /**\n     * operation sets one or more user-defined name-value pairs for the specified container.\n     * @param options The options parameters.\n     */\n    setMetadata(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setMetadataOperationSpec);\n    }\n    /**\n     * gets the permissions for the specified container. The permissions indicate whether container data\n     * may be accessed publicly.\n     * @param options The options parameters.\n     */\n    getAccessPolicy(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getAccessPolicyOperationSpec);\n    }\n    /**\n     * sets the permissions for the specified container. The permissions indicate whether blobs in a\n     * container may be accessed publicly.\n     * @param options The options parameters.\n     */\n    setAccessPolicy(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setAccessPolicyOperationSpec);\n    }\n    /**\n     * Restores a previously-deleted container.\n     * @param options The options parameters.\n     */\n    restore(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, restoreOperationSpec);\n    }\n    /**\n     * Renames an existing container.\n     * @param sourceContainerName Required.  Specifies the name of the container to rename.\n     * @param options The options parameters.\n     */\n    rename(sourceContainerName, options) {\n        const operationArguments = {\n            sourceContainerName,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, renameOperationSpec);\n    }\n    /**\n     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n     * @param contentLength The length of the request.\n     * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n     *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n     * @param body Initial data\n     * @param options The options parameters.\n     */\n    submitBatch(contentLength, multipartContentType, body, options) {\n        const operationArguments = {\n            contentLength,\n            multipartContentType,\n            body,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, submitBatchOperationSpec);\n    }\n    /**\n     * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n     * be 15 to 60 seconds, or can be infinite\n     * @param options The options parameters.\n     */\n    acquireLease(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, acquireLeaseOperationSpec);\n    }\n    /**\n     * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n     * be 15 to 60 seconds, or can be infinite\n     * @param leaseId Specifies the current lease ID on the resource.\n     * @param options The options parameters.\n     */\n    releaseLease(leaseId, options) {\n        const operationArguments = {\n            leaseId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, releaseLeaseOperationSpec);\n    }\n    /**\n     * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n     * be 15 to 60 seconds, or can be infinite\n     * @param leaseId Specifies the current lease ID on the resource.\n     * @param options The options parameters.\n     */\n    renewLease(leaseId, options) {\n        const operationArguments = {\n            leaseId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, renewLeaseOperationSpec);\n    }\n    /**\n     * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n     * be 15 to 60 seconds, or can be infinite\n     * @param options The options parameters.\n     */\n    breakLease(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, breakLeaseOperationSpec);\n    }\n    /**\n     * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n     * be 15 to 60 seconds, or can be infinite\n     * @param leaseId Specifies the current lease ID on the resource.\n     * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n     *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n     *                        (String) for a list of valid GUID string formats.\n     * @param options The options parameters.\n     */\n    changeLease(leaseId, proposedLeaseId, options) {\n        const operationArguments = {\n            leaseId,\n            proposedLeaseId,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, changeLeaseOperationSpec);\n    }\n    /**\n     * [Update] The List Blobs operation returns a list of the blobs under the specified container\n     * @param options The options parameters.\n     */\n    listBlobFlatSegment(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, listBlobFlatSegmentOperationSpec);\n    }\n    /**\n     * [Update] The List Blobs operation returns a list of the blobs under the specified container\n     * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n     *                  element in the response body that acts as a placeholder for all blobs whose names begin with the\n     *                  same substring up to the appearance of the delimiter character. The delimiter may be a single\n     *                  character or a string.\n     * @param options The options parameters.\n     */\n    listBlobHierarchySegment(delimiter, options) {\n        const operationArguments = {\n            delimiter,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, listBlobHierarchySegmentOperationSpec);\n    }\n    /**\n     * Returns the sku name and account kind\n     * @param options The options parameters.\n     */\n    getAccountInfo(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getAccountInfoOperationSpec);\n    }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst createOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerCreateExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.metadata,\n        Parameters.access,\n        Parameters.defaultEncryptionScope,\n        Parameters.preventEncryptionScopeOverride\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerGetPropertiesExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst deleteOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"DELETE\",\n    responses: {\n        202: {\n            headersMapper: Mappers.ContainerDeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerDeleteExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setMetadataOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerSetMetadataHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerSetMetadataExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp6\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getAccessPolicyOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: {\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: { name: \"Composite\", className: \"SignedIdentifier\" }\n                    }\n                },\n                serializedName: \"SignedIdentifiers\",\n                xmlName: \"SignedIdentifiers\",\n                xmlIsWrapped: true,\n                xmlElementName: \"SignedIdentifier\"\n            },\n            headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerGetAccessPolicyExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp7\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst setAccessPolicyOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerSetAccessPolicyExceptionHeaders\n        }\n    },\n    requestBody: Parameters.containerAcl,\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp7\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.access,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst restoreOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerRestoreHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerRestoreExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp8\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.deletedContainerName,\n        Parameters.deletedContainerVersion\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst renameOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerRenameHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerRenameExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp9\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.sourceContainerName,\n        Parameters.sourceLeaseId\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst submitBatchOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"POST\",\n    responses: {\n        202: {\n            bodyMapper: {\n                type: { name: \"Stream\" },\n                serializedName: \"parsedResponse\"\n            },\n            headersMapper: Mappers.ContainerSubmitBatchHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerSubmitBatchExceptionHeaders\n        }\n    },\n    requestBody: Parameters.body,\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp4,\n        Parameters.restype2\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.contentLength,\n        Parameters.multipartContentType\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerAcquireLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerAcquireLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp10\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.action,\n        Parameters.duration,\n        Parameters.proposedLeaseId\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerReleaseLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerReleaseLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp10\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.action1,\n        Parameters.leaseId1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst renewLeaseOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerRenewLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerRenewLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp10\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.leaseId1,\n        Parameters.action2\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        202: {\n            headersMapper: Mappers.ContainerBreakLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerBreakLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp10\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.action3,\n        Parameters.breakPeriod\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerChangeLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerChangeLeaseExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.restype2,\n        Parameters.comp10\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.leaseId1,\n        Parameters.action4,\n        Parameters.proposedLeaseId1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst listBlobFlatSegmentOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n            headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerListBlobFlatSegmentExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp2,\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxPageSize,\n        Parameters.restype2,\n        Parameters.include1\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst listBlobHierarchySegmentOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n            headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerListBlobHierarchySegmentExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp2,\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxPageSize,\n        Parameters.restype2,\n        Parameters.include1,\n        Parameters.delimiter\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getAccountInfoOperationSpec = {\n    path: \"/{containerName}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ContainerGetAccountInfoExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.comp, Parameters.restype1],\n    urlParameters: [Parameters.url],\n    headerParameters: [Parameters.version, Parameters.accept1],\n    isXML: true,\n    serializer: xmlSerializer\n};\n//# sourceMappingURL=container.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport * from \"./service\";\nexport * from \"./container\";\nexport * from \"./blob\";\nexport * from \"./pageBlob\";\nexport * from \"./appendBlob\";\nexport * from \"./blockBlob\";\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a PageBlob. */\nexport class PageBlob {\n    /**\n     * Initialize a new instance of the class PageBlob class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * The Create operation creates a new page blob.\n     * @param contentLength The length of the request.\n     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n     *                          page blob size must be aligned to a 512-byte boundary.\n     * @param options The options parameters.\n     */\n    create(contentLength, blobContentLength, options) {\n        const operationArguments = {\n            contentLength,\n            blobContentLength,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, createOperationSpec);\n    }\n    /**\n     * The Upload Pages operation writes a range of pages to a page blob\n     * @param contentLength The length of the request.\n     * @param body Initial data\n     * @param options The options parameters.\n     */\n    uploadPages(contentLength, body, options) {\n        const operationArguments = {\n            contentLength,\n            body,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, uploadPagesOperationSpec);\n    }\n    /**\n     * The Clear Pages operation clears a set of pages from a page blob\n     * @param contentLength The length of the request.\n     * @param options The options parameters.\n     */\n    clearPages(contentLength, options) {\n        const operationArguments = {\n            contentLength,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, clearPagesOperationSpec);\n    }\n    /**\n     * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a\n     * URL\n     * @param sourceUrl Specify a URL to the copy source.\n     * @param sourceRange Bytes of source data in the specified range. The length of this range should\n     *                    match the ContentLength header and x-ms-range/Range destination range header.\n     * @param contentLength The length of the request.\n     * @param range The range of bytes to which the source range would be written. The range should be 512\n     *              aligned and range-end is required.\n     * @param options The options parameters.\n     */\n    uploadPagesFromURL(sourceUrl, sourceRange, contentLength, range, options) {\n        const operationArguments = {\n            sourceUrl,\n            sourceRange,\n            contentLength,\n            range,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, uploadPagesFromURLOperationSpec);\n    }\n    /**\n     * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a\n     * page blob\n     * @param options The options parameters.\n     */\n    getPageRanges(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getPageRangesOperationSpec);\n    }\n    /**\n     * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were\n     * changed between target blob and previous snapshot.\n     * @param options The options parameters.\n     */\n    getPageRangesDiff(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getPageRangesDiffOperationSpec);\n    }\n    /**\n     * Resize the Blob\n     * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n     *                          page blob size must be aligned to a 512-byte boundary.\n     * @param options The options parameters.\n     */\n    resize(blobContentLength, options) {\n        const operationArguments = {\n            blobContentLength,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, resizeOperationSpec);\n    }\n    /**\n     * Update the sequence number of the blob\n     * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request.\n     *                             This property applies to page blobs only. This property indicates how the service should modify the\n     *                             blob's sequence number\n     * @param options The options parameters.\n     */\n    updateSequenceNumber(sequenceNumberAction, options) {\n        const operationArguments = {\n            sequenceNumberAction,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, updateSequenceNumberOperationSpec);\n    }\n    /**\n     * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob.\n     * The snapshot is copied such that only the differential changes between the previously copied\n     * snapshot are transferred to the destination. The copied snapshots are complete copies of the\n     * original snapshot and can be read or copied from as usual. This API is supported since REST version\n     * 2016-05-31.\n     * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n     *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n     *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n     *                   access signature.\n     * @param options The options parameters.\n     */\n    copyIncremental(copySource, options) {\n        const operationArguments = {\n            copySource,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, copyIncrementalOperationSpec);\n    }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\nconst createOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobCreateExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.immutabilityPolicyExpiry,\n        Parameters.immutabilityPolicyMode,\n        Parameters.encryptionScope,\n        Parameters.tier,\n        Parameters.blobTagsString,\n        Parameters.legalHold1,\n        Parameters.blobType,\n        Parameters.blobContentLength,\n        Parameters.blobSequenceNumber\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst uploadPagesOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobUploadPagesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobUploadPagesExceptionHeaders\n        }\n    },\n    requestBody: Parameters.body1,\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.range,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope,\n        Parameters.transactionalContentMD5,\n        Parameters.transactionalContentCrc64,\n        Parameters.contentType1,\n        Parameters.accept2,\n        Parameters.pageWrite,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo\n    ],\n    mediaType: \"binary\",\n    serializer\n};\nconst clearPagesOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobClearPagesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobClearPagesExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.range,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo,\n        Parameters.pageWrite1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst uploadPagesFromURLOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobUploadPagesFromURLExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.contentLength,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.sourceContentMD5,\n        Parameters.copySourceAuthorization,\n        Parameters.pageWrite,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo,\n        Parameters.sourceUrl,\n        Parameters.sourceRange,\n        Parameters.sourceContentCrc64,\n        Parameters.range1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getPageRangesOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.PageList,\n            headersMapper: Mappers.PageBlobGetPageRangesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobGetPageRangesExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.comp20\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.range,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getPageRangesDiffOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.PageList,\n            headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobGetPageRangesDiffExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.snapshot,\n        Parameters.comp20,\n        Parameters.prevsnapshot\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.range,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.prevSnapshotUrl\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst resizeOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.PageBlobResizeHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobResizeExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.encryptionKey,\n        Parameters.encryptionKeySha256,\n        Parameters.encryptionAlgorithm,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.encryptionScope,\n        Parameters.blobContentLength\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst updateSequenceNumberOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        200: {\n            headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobUpdateSequenceNumberExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.leaseId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.blobSequenceNumber,\n        Parameters.sequenceNumberAction\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst copyIncrementalOperationSpec = {\n    path: \"/{containerName}/{blob}\",\n    httpMethod: \"PUT\",\n    responses: {\n        202: {\n            headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.PageBlobCopyIncrementalExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp21],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.ifTags,\n        Parameters.copySource\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\n//# sourceMappingURL=pageBlob.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Service. */\nexport class Service {\n    /**\n     * Initialize a new instance of the class Service class.\n     * @param client Reference to the service client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n     * Analytics and CORS (Cross-Origin Resource Sharing) rules\n     * @param blobServiceProperties The StorageService properties.\n     * @param options The options parameters.\n     */\n    setProperties(blobServiceProperties, options) {\n        const operationArguments = {\n            blobServiceProperties,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, setPropertiesOperationSpec);\n    }\n    /**\n     * gets the properties of a storage account's Blob service, including properties for Storage Analytics\n     * and CORS (Cross-Origin Resource Sharing) rules.\n     * @param options The options parameters.\n     */\n    getProperties(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getPropertiesOperationSpec);\n    }\n    /**\n     * Retrieves statistics related to replication for the Blob service. It is only available on the\n     * secondary location endpoint when read-access geo-redundant replication is enabled for the storage\n     * account.\n     * @param options The options parameters.\n     */\n    getStatistics(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getStatisticsOperationSpec);\n    }\n    /**\n     * The List Containers Segment operation returns a list of the containers under the specified account\n     * @param options The options parameters.\n     */\n    listContainersSegment(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, listContainersSegmentOperationSpec);\n    }\n    /**\n     * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n     * bearer token authentication.\n     * @param keyInfo Key information\n     * @param options The options parameters.\n     */\n    getUserDelegationKey(keyInfo, options) {\n        const operationArguments = {\n            keyInfo,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getUserDelegationKeyOperationSpec);\n    }\n    /**\n     * Returns the sku name and account kind\n     * @param options The options parameters.\n     */\n    getAccountInfo(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, getAccountInfoOperationSpec);\n    }\n    /**\n     * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n     * @param contentLength The length of the request.\n     * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n     *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n     * @param body Initial data\n     * @param options The options parameters.\n     */\n    submitBatch(contentLength, multipartContentType, body, options) {\n        const operationArguments = {\n            contentLength,\n            multipartContentType,\n            body,\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, submitBatchOperationSpec);\n    }\n    /**\n     * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a\n     * given search expression.  Filter blobs searches across all containers within a storage account but\n     * can be scoped within the expression to a single container.\n     * @param options The options parameters.\n     */\n    filterBlobs(options) {\n        const operationArguments = {\n            options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n        };\n        return this.client.sendOperationRequest(operationArguments, filterBlobsOperationSpec);\n    }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst setPropertiesOperationSpec = {\n    path: \"/\",\n    httpMethod: \"PUT\",\n    responses: {\n        202: {\n            headersMapper: Mappers.ServiceSetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders\n        }\n    },\n    requestBody: Parameters.blobServiceProperties,\n    queryParameters: [\n        Parameters.restype,\n        Parameters.comp,\n        Parameters.timeoutInSeconds\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec = {\n    path: \"/\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.BlobServiceProperties,\n            headersMapper: Mappers.ServiceGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.restype,\n        Parameters.comp,\n        Parameters.timeoutInSeconds\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getStatisticsOperationSpec = {\n    path: \"/\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.BlobServiceStatistics,\n            headersMapper: Mappers.ServiceGetStatisticsHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceGetStatisticsExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.restype,\n        Parameters.timeoutInSeconds,\n        Parameters.comp1\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst listContainersSegmentOperationSpec = {\n    path: \"/\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListContainersSegmentResponse,\n            headersMapper: Mappers.ServiceListContainersSegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceListContainersSegmentExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.comp2,\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxPageSize,\n        Parameters.include\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst getUserDelegationKeyOperationSpec = {\n    path: \"/\",\n    httpMethod: \"POST\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.UserDelegationKey,\n            headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceGetUserDelegationKeyExceptionHeaders\n        }\n    },\n    requestBody: Parameters.keyInfo,\n    queryParameters: [\n        Parameters.restype,\n        Parameters.timeoutInSeconds,\n        Parameters.comp3\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst getAccountInfoOperationSpec = {\n    path: \"/\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ServiceGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceGetAccountInfoExceptionHeaders\n        }\n    },\n    queryParameters: [Parameters.comp, Parameters.restype1],\n    urlParameters: [Parameters.url],\n    headerParameters: [Parameters.version, Parameters.accept1],\n    isXML: true,\n    serializer: xmlSerializer\n};\nconst submitBatchOperationSpec = {\n    path: \"/\",\n    httpMethod: \"POST\",\n    responses: {\n        202: {\n            bodyMapper: {\n                type: { name: \"Stream\" },\n                serializedName: \"parsedResponse\"\n            },\n            headersMapper: Mappers.ServiceSubmitBatchHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceSubmitBatchExceptionHeaders\n        }\n    },\n    requestBody: Parameters.body,\n    queryParameters: [Parameters.timeoutInSeconds, Parameters.comp4],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.contentType,\n        Parameters.accept,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.contentLength,\n        Parameters.multipartContentType\n    ],\n    isXML: true,\n    contentType: \"application/xml; charset=utf-8\",\n    mediaType: \"xml\",\n    serializer: xmlSerializer\n};\nconst filterBlobsOperationSpec = {\n    path: \"/\",\n    httpMethod: \"GET\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.FilterBlobSegment,\n            headersMapper: Mappers.ServiceFilterBlobsHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError,\n            headersMapper: Mappers.ServiceFilterBlobsExceptionHeaders\n        }\n    },\n    queryParameters: [\n        Parameters.timeoutInSeconds,\n        Parameters.marker,\n        Parameters.maxPageSize,\n        Parameters.comp5,\n        Parameters.where\n    ],\n    urlParameters: [Parameters.url],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.accept1\n    ],\n    isXML: true,\n    serializer: xmlSerializer\n};\n//# sourceMappingURL=service.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { Service, Container, Blob, PageBlob, AppendBlob, BlockBlob } from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nexport class StorageClient extends StorageClientContext {\n    /**\n     * Initializes a new instance of the StorageClient class.\n     * @param url The URL of the service account, container, or blob that is the target of the desired\n     *            operation.\n     * @param options The parameter options\n     */\n    constructor(url, options) {\n        super(url, options);\n        this.service = new Service(this);\n        this.container = new Container(this);\n        this.blob = new Blob(this);\n        this.pageBlob = new PageBlob(this);\n        this.appendBlob = new AppendBlob(this);\n        this.blockBlob = new BlockBlob(this);\n    }\n}\n//# sourceMappingURL=storageClient.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.8.0\";\nexport class StorageClientContext extends coreHttp.ServiceClient {\n    /**\n     * Initializes a new instance of the StorageClientContext class.\n     * @param url The URL of the service account, container, or blob that is the target of the desired\n     *            operation.\n     * @param options The parameter options\n     */\n    constructor(url, options) {\n        if (url === undefined) {\n            throw new Error(\"'url' cannot be null\");\n        }\n        // Initializing default values for options\n        if (!options) {\n            options = {};\n        }\n        if (!options.userAgent) {\n            const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n            options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n        }\n        super(undefined, options);\n        this.requestContentType = \"application/json; charset=utf-8\";\n        this.baseUri = options.endpoint || \"{url}\";\n        // Parameter assignments\n        this.url = url;\n        // Assigning values to Constant parameters\n        this.version = options.version || \"2020-10-02\";\n    }\n}\n//# sourceMappingURL=storageClientContext.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport {};\n//# sourceMappingURL=generatedModels.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { RestError } from \"@azure/core-http\";\nexport * from \"./BlobServiceClient\";\nexport * from \"./Clients\";\nexport * from \"./ContainerClient\";\nexport * from \"./BlobLeaseClient\";\nexport * from \"./BlobBatch\";\nexport * from \"./BlobBatchClient\";\nexport * from \"./BatchResponse\";\nexport * from \"./StorageBrowserPolicyFactory\";\nexport * from \"./credentials/AnonymousCredential\";\nexport * from \"./credentials/Credential\";\nexport { BlockBlobTier, PremiumPageBlobTier } from \"./models\";\nexport * from \"./Pipeline\";\nexport * from \"./policies/AnonymousCredentialPolicy\";\nexport * from \"./policies/CredentialPolicy\";\nexport * from \"./StorageRetryPolicyFactory\";\nexport * from \"./generatedModels\";\nexport { RestError };\nexport { logger } from \"./log\";\n//# sourceMappingURL=index.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-blob\");\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\nexport var BlockBlobTier;\n(function (BlockBlobTier) {\n    /**\n     * Optimized for storing data that is accessed frequently.\n     */\n    BlockBlobTier[\"Hot\"] = \"Hot\";\n    /**\n     * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n     */\n    BlockBlobTier[\"Cool\"] = \"Cool\";\n    /**\n     * Optimized for storing data that is rarely accessed and stored for at least 180 days\n     * with flexible latency requirements (on the order of hours).\n     */\n    BlockBlobTier[\"Archive\"] = \"Archive\";\n})(BlockBlobTier || (BlockBlobTier = {}));\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughput per PageBlobTier.\n */\nexport var PremiumPageBlobTier;\n(function (PremiumPageBlobTier) {\n    /**\n     * P4 Tier.\n     */\n    PremiumPageBlobTier[\"P4\"] = \"P4\";\n    /**\n     * P6 Tier.\n     */\n    PremiumPageBlobTier[\"P6\"] = \"P6\";\n    /**\n     * P10 Tier.\n     */\n    PremiumPageBlobTier[\"P10\"] = \"P10\";\n    /**\n     * P15 Tier.\n     */\n    PremiumPageBlobTier[\"P15\"] = \"P15\";\n    /**\n     * P20 Tier.\n     */\n    PremiumPageBlobTier[\"P20\"] = \"P20\";\n    /**\n     * P30 Tier.\n     */\n    PremiumPageBlobTier[\"P30\"] = \"P30\";\n    /**\n     * P40 Tier.\n     */\n    PremiumPageBlobTier[\"P40\"] = \"P40\";\n    /**\n     * P50 Tier.\n     */\n    PremiumPageBlobTier[\"P50\"] = \"P50\";\n    /**\n     * P60 Tier.\n     */\n    PremiumPageBlobTier[\"P60\"] = \"P60\";\n    /**\n     * P70 Tier.\n     */\n    PremiumPageBlobTier[\"P70\"] = \"P70\";\n    /**\n     * P80 Tier.\n     */\n    PremiumPageBlobTier[\"P80\"] = \"P80\";\n})(PremiumPageBlobTier || (PremiumPageBlobTier = {}));\nexport function toAccessTier(tier) {\n    if (tier === undefined) {\n        return undefined;\n    }\n    return tier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\nexport function ensureCpkIfSpecified(cpk, isHttps) {\n    if (cpk && !isHttps) {\n        throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n    }\n    if (cpk && !cpk.encryptionAlgorithm) {\n        cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n    }\n}\n//# sourceMappingURL=models.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n    /**\n     * Creates an instance of AnonymousCredentialPolicy.\n     * @param nextPolicy -\n     * @param options -\n     */\n    // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n    /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n}\n//# sourceMappingURL=AnonymousCredentialPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"@azure/core-http\";\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport class CredentialPolicy extends BaseRequestPolicy {\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     */\n    sendRequest(request) {\n        return this._nextPolicy.sendRequest(this.signRequest(request));\n    }\n    /**\n     * Child classes must implement this method with request signing. This method\n     * will be executed in {@link sendRequest}.\n     *\n     * @param request -\n     */\n    signRequest(request) {\n        // Child classes must override this method with request signing. This method\n        // will be executed in sendRequest().\n        return request;\n    }\n}\n//# sourceMappingURL=CredentialPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, isNode } from \"@azure/core-http\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of StorageBrowserPolicy.\n     * @param nextPolicy -\n     * @param options -\n     */\n    // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n    /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n    constructor(nextPolicy, options) {\n        super(nextPolicy, options);\n    }\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     */\n    async sendRequest(request) {\n        if (isNode) {\n            return this._nextPolicy.sendRequest(request);\n        }\n        if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n            request.url = setURLParameter(request.url, URLConstants.Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());\n        }\n        request.headers.remove(HeaderConstants.COOKIE);\n        // According to XHR standards, content-length should be fully controlled by browsers\n        request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=StorageBrowserPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortError } from \"@azure/abort-controller\";\nimport { BaseRequestPolicy } from \"@azure/core-http\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewRetryPolicyFactory(retryOptions) {\n    return {\n        create: (nextPolicy, options) => {\n            return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n        }\n    };\n}\n/**\n * RetryPolicy types.\n */\nexport var StorageRetryPolicyType;\n(function (StorageRetryPolicyType) {\n    /**\n     * Exponential retry. Retry time delay grows exponentially.\n     */\n    StorageRetryPolicyType[StorageRetryPolicyType[\"EXPONENTIAL\"] = 0] = \"EXPONENTIAL\";\n    /**\n     * Linear retry. Retry time delay grows linearly.\n     */\n    StorageRetryPolicyType[StorageRetryPolicyType[\"FIXED\"] = 1] = \"FIXED\";\n})(StorageRetryPolicyType || (StorageRetryPolicyType = {}));\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS = {\n    maxRetryDelayInMs: 120 * 1000,\n    maxTries: 4,\n    retryDelayInMs: 4 * 1000,\n    retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n    secondaryHost: \"\",\n    tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of RetryPolicy.\n     *\n     * @param nextPolicy -\n     * @param options -\n     * @param retryOptions -\n     */\n    constructor(nextPolicy, options, retryOptions = DEFAULT_RETRY_OPTIONS) {\n        super(nextPolicy, options);\n        // Initialize retry options\n        this.retryOptions = {\n            retryPolicyType: retryOptions.retryPolicyType\n                ? retryOptions.retryPolicyType\n                : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n            maxTries: retryOptions.maxTries && retryOptions.maxTries >= 1\n                ? Math.floor(retryOptions.maxTries)\n                : DEFAULT_RETRY_OPTIONS.maxTries,\n            tryTimeoutInMs: retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n                ? retryOptions.tryTimeoutInMs\n                : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n            retryDelayInMs: retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n                ? Math.min(retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs\n                    ? retryOptions.maxRetryDelayInMs\n                    : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs)\n                : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n            maxRetryDelayInMs: retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n            secondaryHost: retryOptions.secondaryHost\n                ? retryOptions.secondaryHost\n                : DEFAULT_RETRY_OPTIONS.secondaryHost\n        };\n    }\n    /**\n     * Sends request.\n     *\n     * @param request -\n     */\n    async sendRequest(request) {\n        return this.attemptSendRequest(request, false, 1);\n    }\n    /**\n     * Decide and perform next retry. Won't mutate request parameter.\n     *\n     * @param request -\n     * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n     *                                   the resource was not found. This may be due to replication delay. So, in this\n     *                                   case, we'll never try the secondary again for this operation.\n     * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n     *                                   the attempt will be performed by this method call.\n     */\n    async attemptSendRequest(request, secondaryHas404, attempt) {\n        const newRequest = request.clone();\n        const isPrimaryRetry = secondaryHas404 ||\n            !this.retryOptions.secondaryHost ||\n            !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n            attempt % 2 === 1;\n        if (!isPrimaryRetry) {\n            newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost);\n        }\n        // Set the server-side timeout query parameter \"timeout=[seconds]\"\n        if (this.retryOptions.tryTimeoutInMs) {\n            newRequest.url = setURLParameter(newRequest.url, URLConstants.Parameters.TIMEOUT, Math.floor(this.retryOptions.tryTimeoutInMs / 1000).toString());\n        }\n        let response;\n        try {\n            logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n            response = await this._nextPolicy.sendRequest(newRequest);\n            if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n                return response;\n            }\n            secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n        }\n        catch (err) {\n            logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n            if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n                throw err;\n            }\n        }\n        await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n        return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n    }\n    /**\n     * Decide whether to retry according to last HTTP response and retry counters.\n     *\n     * @param isPrimaryRetry -\n     * @param attempt -\n     * @param response -\n     * @param err -\n     */\n    shouldRetry(isPrimaryRetry, attempt, response, err) {\n        if (attempt >= this.retryOptions.maxTries) {\n            logger.info(`RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n                .maxTries}, no further try.`);\n            return false;\n        }\n        // Handle network failures, you may need to customize the list when you implement\n        // your own http client\n        const retriableErrors = [\n            \"ETIMEDOUT\",\n            \"ESOCKETTIMEDOUT\",\n            \"ECONNREFUSED\",\n            \"ECONNRESET\",\n            \"ENOENT\",\n            \"ENOTFOUND\",\n            \"TIMEOUT\",\n            \"EPIPE\",\n            \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n        ];\n        if (err) {\n            for (const retriableError of retriableErrors) {\n                if (err.name.toUpperCase().includes(retriableError) ||\n                    err.message.toUpperCase().includes(retriableError) ||\n                    (err.code && err.code.toString().toUpperCase() === retriableError)) {\n                    logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n                    return true;\n                }\n            }\n        }\n        // If attempt was against the secondary & it returned a StatusNotFound (404), then\n        // the resource was not found. This may be due to replication delay. So, in this\n        // case, we'll never try the secondary again for this operation.\n        if (response || err) {\n            const statusCode = response ? response.status : err ? err.statusCode : 0;\n            if (!isPrimaryRetry && statusCode === 404) {\n                logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n                return true;\n            }\n            // Server internal error or server timeout\n            if (statusCode === 503 || statusCode === 500) {\n                logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n                return true;\n            }\n        }\n        if ((err === null || err === void 0 ? void 0 : err.code) === \"PARSE_ERROR\" && (err === null || err === void 0 ? void 0 : err.message.startsWith(`Error \"Error: Unclosed root tag`))) {\n            logger.info(\"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\");\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Delay a calculated time between retries.\n     *\n     * @param isPrimaryRetry -\n     * @param attempt -\n     * @param abortSignal -\n     */\n    async delay(isPrimaryRetry, attempt, abortSignal) {\n        let delayTimeInMs = 0;\n        if (isPrimaryRetry) {\n            switch (this.retryOptions.retryPolicyType) {\n                case StorageRetryPolicyType.EXPONENTIAL:\n                    delayTimeInMs = Math.min((Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs, this.retryOptions.maxRetryDelayInMs);\n                    break;\n                case StorageRetryPolicyType.FIXED:\n                    delayTimeInMs = this.retryOptions.retryDelayInMs;\n                    break;\n            }\n        }\n        else {\n            delayTimeInMs = Math.random() * 1000;\n        }\n        logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n        return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n    }\n}\n//# sourceMappingURL=StorageRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy, HttpHeaders, isNode } from \"@azure/core-http\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n    /**\n     * Creates an instance of TelemetryPolicy.\n     * @param nextPolicy -\n     * @param options -\n     * @param telemetry -\n     */\n    constructor(nextPolicy, options, telemetry) {\n        super(nextPolicy, options);\n        this.telemetry = telemetry;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param request -\n     */\n    async sendRequest(request) {\n        if (isNode) {\n            if (!request.headers) {\n                request.headers = new HttpHeaders();\n            }\n            if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n                request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n            }\n        }\n        return this._nextPolicy.sendRequest(request);\n    }\n}\n//# sourceMappingURL=TelemetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { delay } from \"@azure/core-http\";\nimport { Poller } from \"@azure/core-lro\";\n/**\n * This is the poller returned by {@link BlobClient.beginCopyFromURL}.\n * This can not be instantiated directly outside of this package.\n *\n * @hidden\n */\nexport class BlobBeginCopyFromUrlPoller extends Poller {\n    constructor(options) {\n        const { blobClient, copySource, intervalInMs = 15000, onProgress, resumeFrom, startCopyFromURLOptions } = options;\n        let state;\n        if (resumeFrom) {\n            state = JSON.parse(resumeFrom).state;\n        }\n        const operation = makeBlobBeginCopyFromURLPollOperation(Object.assign(Object.assign({}, state), { blobClient,\n            copySource,\n            startCopyFromURLOptions }));\n        super(operation);\n        if (typeof onProgress === \"function\") {\n            this.onProgress(onProgress);\n        }\n        this.intervalInMs = intervalInMs;\n    }\n    delay() {\n        return delay(this.intervalInMs);\n    }\n}\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst cancel = async function cancel(options = {}) {\n    const state = this.state;\n    const { copyId } = state;\n    if (state.isCompleted) {\n        return makeBlobBeginCopyFromURLPollOperation(state);\n    }\n    if (!copyId) {\n        state.isCancelled = true;\n        return makeBlobBeginCopyFromURLPollOperation(state);\n    }\n    // if abortCopyFromURL throws, it will bubble up to user's poller.cancelOperation call\n    await state.blobClient.abortCopyFromURL(copyId, {\n        abortSignal: options.abortSignal\n    });\n    state.isCancelled = true;\n    return makeBlobBeginCopyFromURLPollOperation(state);\n};\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst update = async function update(options = {}) {\n    const state = this.state;\n    const { blobClient, copySource, startCopyFromURLOptions } = state;\n    if (!state.isStarted) {\n        state.isStarted = true;\n        const result = await blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);\n        // copyId is needed to abort\n        state.copyId = result.copyId;\n        if (result.copyStatus === \"success\") {\n            state.result = result;\n            state.isCompleted = true;\n        }\n    }\n    else if (!state.isCompleted) {\n        try {\n            const result = await state.blobClient.getProperties({ abortSignal: options.abortSignal });\n            const { copyStatus, copyProgress } = result;\n            const prevCopyProgress = state.copyProgress;\n            if (copyProgress) {\n                state.copyProgress = copyProgress;\n            }\n            if (copyStatus === \"pending\" &&\n                copyProgress !== prevCopyProgress &&\n                typeof options.fireProgress === \"function\") {\n                // trigger in setTimeout, or swallow error?\n                options.fireProgress(state);\n            }\n            else if (copyStatus === \"success\") {\n                state.result = result;\n                state.isCompleted = true;\n            }\n            else if (copyStatus === \"failed\") {\n                state.error = new Error(`Blob copy failed with reason: \"${result.copyStatusDescription || \"unknown\"}\"`);\n                state.isCompleted = true;\n            }\n        }\n        catch (err) {\n            state.error = err;\n            state.isCompleted = true;\n        }\n    }\n    return makeBlobBeginCopyFromURLPollOperation(state);\n};\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst toString = function toString() {\n    return JSON.stringify({ state: this.state }, (key, value) => {\n        // remove blobClient from serialized state since a client can't be hydrated from this info.\n        if (key === \"blobClient\") {\n            return undefined;\n        }\n        return value;\n    });\n};\n/**\n * Creates a poll operation given the provided state.\n * @hidden\n */\nfunction makeBlobBeginCopyFromURLPollOperation(state) {\n    return {\n        state: Object.assign({}, state),\n        cancel,\n        toString,\n        update\n    };\n}\n//# sourceMappingURL=BlobStartCopyFromUrlPoller.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n    constructor() {\n        /**\n         * Permission to read resources and list queues and tables granted.\n         */\n        this.read = false;\n        /**\n         * Permission to write resources granted.\n         */\n        this.write = false;\n        /**\n         * Permission to create blobs and files granted.\n         */\n        this.delete = false;\n        /**\n         * Permission to delete versions granted.\n         */\n        this.deleteVersion = false;\n        /**\n         * Permission to list blob containers, blobs, shares, directories, and files granted.\n         */\n        this.list = false;\n        /**\n         * Permission to add messages, table entities, and append to blobs granted.\n         */\n        this.add = false;\n        /**\n         * Permission to create blobs and files granted.\n         */\n        this.create = false;\n        /**\n         * Permissions to update messages and table entities granted.\n         */\n        this.update = false;\n        /**\n         * Permission to get and delete messages granted.\n         */\n        this.process = false;\n        /**\n         * Specfies Tag access granted.\n         */\n        this.tag = false;\n        /**\n         * Permission to filter blobs.\n         */\n        this.filter = false;\n        /**\n         * Permission to set immutability policy.\n         */\n        this.setImmutabilityPolicy = false;\n    }\n    /**\n     * Parse initializes the AccountSASPermissions fields from a string.\n     *\n     * @param permissions -\n     */\n    static parse(permissions) {\n        const accountSASPermissions = new AccountSASPermissions();\n        for (const c of permissions) {\n            switch (c) {\n                case \"r\":\n                    accountSASPermissions.read = true;\n                    break;\n                case \"w\":\n                    accountSASPermissions.write = true;\n                    break;\n                case \"d\":\n                    accountSASPermissions.delete = true;\n                    break;\n                case \"x\":\n                    accountSASPermissions.deleteVersion = true;\n                    break;\n                case \"l\":\n                    accountSASPermissions.list = true;\n                    break;\n                case \"a\":\n                    accountSASPermissions.add = true;\n                    break;\n                case \"c\":\n                    accountSASPermissions.create = true;\n                    break;\n                case \"u\":\n                    accountSASPermissions.update = true;\n                    break;\n                case \"p\":\n                    accountSASPermissions.process = true;\n                    break;\n                case \"t\":\n                    accountSASPermissions.tag = true;\n                    break;\n                case \"f\":\n                    accountSASPermissions.filter = true;\n                    break;\n                case \"i\":\n                    accountSASPermissions.setImmutabilityPolicy = true;\n                    break;\n                default:\n                    throw new RangeError(`Invalid permission character: ${c}`);\n            }\n        }\n        return accountSASPermissions;\n    }\n    /**\n     * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n     * and boolean values for them.\n     *\n     * @param permissionLike -\n     */\n    static from(permissionLike) {\n        const accountSASPermissions = new AccountSASPermissions();\n        if (permissionLike.read) {\n            accountSASPermissions.read = true;\n        }\n        if (permissionLike.write) {\n            accountSASPermissions.write = true;\n        }\n        if (permissionLike.delete) {\n            accountSASPermissions.delete = true;\n        }\n        if (permissionLike.deleteVersion) {\n            accountSASPermissions.deleteVersion = true;\n        }\n        if (permissionLike.filter) {\n            accountSASPermissions.filter = true;\n        }\n        if (permissionLike.tag) {\n            accountSASPermissions.tag = true;\n        }\n        if (permissionLike.list) {\n            accountSASPermissions.list = true;\n        }\n        if (permissionLike.add) {\n            accountSASPermissions.add = true;\n        }\n        if (permissionLike.create) {\n            accountSASPermissions.create = true;\n        }\n        if (permissionLike.update) {\n            accountSASPermissions.update = true;\n        }\n        if (permissionLike.process) {\n            accountSASPermissions.process = true;\n        }\n        if (permissionLike.setImmutabilityPolicy) {\n            accountSASPermissions.setImmutabilityPolicy = true;\n        }\n        return accountSASPermissions;\n    }\n    /**\n     * Produces the SAS permissions string for an Azure Storage account.\n     * Call this method to set AccountSASSignatureValues Permissions field.\n     *\n     * Using this method will guarantee the resource types are in\n     * an order accepted by the service.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n     *\n     */\n    toString() {\n        // The order of the characters should be as specified here to ensure correctness:\n        // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n        // Use a string array instead of string concatenating += operator for performance\n        const permissions = [];\n        if (this.read) {\n            permissions.push(\"r\");\n        }\n        if (this.write) {\n            permissions.push(\"w\");\n        }\n        if (this.delete) {\n            permissions.push(\"d\");\n        }\n        if (this.deleteVersion) {\n            permissions.push(\"x\");\n        }\n        if (this.filter) {\n            permissions.push(\"f\");\n        }\n        if (this.tag) {\n            permissions.push(\"t\");\n        }\n        if (this.list) {\n            permissions.push(\"l\");\n        }\n        if (this.add) {\n            permissions.push(\"a\");\n        }\n        if (this.create) {\n            permissions.push(\"c\");\n        }\n        if (this.update) {\n            permissions.push(\"u\");\n        }\n        if (this.process) {\n            permissions.push(\"p\");\n        }\n        if (this.setImmutabilityPolicy) {\n            permissions.push(\"i\");\n        }\n        return permissions.join(\"\");\n    }\n}\n//# sourceMappingURL=AccountSASPermissions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n    constructor() {\n        /**\n         * Permission to access service level APIs granted.\n         */\n        this.service = false;\n        /**\n         * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n         */\n        this.container = false;\n        /**\n         * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n         */\n        this.object = false;\n    }\n    /**\n     * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid resource type.\n     *\n     * @param resourceTypes -\n     */\n    static parse(resourceTypes) {\n        const accountSASResourceTypes = new AccountSASResourceTypes();\n        for (const c of resourceTypes) {\n            switch (c) {\n                case \"s\":\n                    accountSASResourceTypes.service = true;\n                    break;\n                case \"c\":\n                    accountSASResourceTypes.container = true;\n                    break;\n                case \"o\":\n                    accountSASResourceTypes.object = true;\n                    break;\n                default:\n                    throw new RangeError(`Invalid resource type: ${c}`);\n            }\n        }\n        return accountSASResourceTypes;\n    }\n    /**\n     * Converts the given resource types to a string.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n     *\n     */\n    toString() {\n        const resourceTypes = [];\n        if (this.service) {\n            resourceTypes.push(\"s\");\n        }\n        if (this.container) {\n            resourceTypes.push(\"c\");\n        }\n        if (this.object) {\n            resourceTypes.push(\"o\");\n        }\n        return resourceTypes.join(\"\");\n    }\n}\n//# sourceMappingURL=AccountSASResourceTypes.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n    constructor() {\n        /**\n         * Permission to access blob resources granted.\n         */\n        this.blob = false;\n        /**\n         * Permission to access file resources granted.\n         */\n        this.file = false;\n        /**\n         * Permission to access queue resources granted.\n         */\n        this.queue = false;\n        /**\n         * Permission to access table resources granted.\n         */\n        this.table = false;\n    }\n    /**\n     * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid service.\n     *\n     * @param services -\n     */\n    static parse(services) {\n        const accountSASServices = new AccountSASServices();\n        for (const c of services) {\n            switch (c) {\n                case \"b\":\n                    accountSASServices.blob = true;\n                    break;\n                case \"f\":\n                    accountSASServices.file = true;\n                    break;\n                case \"q\":\n                    accountSASServices.queue = true;\n                    break;\n                case \"t\":\n                    accountSASServices.table = true;\n                    break;\n                default:\n                    throw new RangeError(`Invalid service character: ${c}`);\n            }\n        }\n        return accountSASServices;\n    }\n    /**\n     * Converts the given services to a string.\n     *\n     */\n    toString() {\n        const services = [];\n        if (this.blob) {\n            services.push(\"b\");\n        }\n        if (this.table) {\n            services.push(\"t\");\n        }\n        if (this.queue) {\n            services.push(\"q\");\n        }\n        if (this.file) {\n            services.push(\"f\");\n        }\n        return services.join(\"\");\n    }\n}\n//# sourceMappingURL=AccountSASServices.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param accountSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(accountSASSignatureValues, sharedKeyCredential) {\n    const version = accountSASSignatureValues.version\n        ? accountSASSignatureValues.version\n        : SERVICE_VERSION;\n    if (accountSASSignatureValues.permissions &&\n        accountSASSignatureValues.permissions.setImmutabilityPolicy &&\n        version < \"2020-08-04\") {\n        throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n    }\n    if (accountSASSignatureValues.permissions &&\n        accountSASSignatureValues.permissions.deleteVersion &&\n        version < \"2019-10-10\") {\n        throw RangeError(\"'version' must be >= '2019-10-10' when provided 'x' permission.\");\n    }\n    if (accountSASSignatureValues.permissions &&\n        accountSASSignatureValues.permissions.tag &&\n        version < \"2019-12-12\") {\n        throw RangeError(\"'version' must be >= '2019-12-12' when provided 't' permission.\");\n    }\n    if (accountSASSignatureValues.permissions &&\n        accountSASSignatureValues.permissions.filter &&\n        version < \"2019-12-12\") {\n        throw RangeError(\"'version' must be >= '2019-12-12' when provided 'f' permission.\");\n    }\n    const parsedPermissions = AccountSASPermissions.parse(accountSASSignatureValues.permissions.toString());\n    const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n    const parsedResourceTypes = AccountSASResourceTypes.parse(accountSASSignatureValues.resourceTypes).toString();\n    const stringToSign = [\n        sharedKeyCredential.accountName,\n        parsedPermissions,\n        parsedServices,\n        parsedResourceTypes,\n        accountSASSignatureValues.startsOn\n            ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n            : \"\",\n        truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n        accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n        accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n        version,\n        \"\" // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n    const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(version, signature, parsedPermissions.toString(), parsedServices, parsedResourceTypes, accountSASSignatureValues.protocol, accountSASSignatureValues.startsOn, accountSASSignatureValues.expiresOn, accountSASSignatureValues.ipRange);\n}\n//# sourceMappingURL=AccountSASSignatureValues.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class BlobSASPermissions {\n    constructor() {\n        /**\n         * Specifies Read access granted.\n         */\n        this.read = false;\n        /**\n         * Specifies Add access granted.\n         */\n        this.add = false;\n        /**\n         * Specifies Create access granted.\n         */\n        this.create = false;\n        /**\n         * Specifies Write access granted.\n         */\n        this.write = false;\n        /**\n         * Specifies Delete access granted.\n         */\n        this.delete = false;\n        /**\n         * Specifies Delete version access granted.\n         */\n        this.deleteVersion = false;\n        /**\n         * Specfies Tag access granted.\n         */\n        this.tag = false;\n        /**\n         * Specifies Move access granted.\n         */\n        this.move = false;\n        /**\n         * Specifies Execute access granted.\n         */\n        this.execute = false;\n        /**\n         * Specifies SetImmutabilityPolicy access granted.\n         */\n        this.setImmutabilityPolicy = false;\n    }\n    /**\n     * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid permission.\n     *\n     * @param permissions -\n     */\n    static parse(permissions) {\n        const blobSASPermissions = new BlobSASPermissions();\n        for (const char of permissions) {\n            switch (char) {\n                case \"r\":\n                    blobSASPermissions.read = true;\n                    break;\n                case \"a\":\n                    blobSASPermissions.add = true;\n                    break;\n                case \"c\":\n                    blobSASPermissions.create = true;\n                    break;\n                case \"w\":\n                    blobSASPermissions.write = true;\n                    break;\n                case \"d\":\n                    blobSASPermissions.delete = true;\n                    break;\n                case \"x\":\n                    blobSASPermissions.deleteVersion = true;\n                    break;\n                case \"t\":\n                    blobSASPermissions.tag = true;\n                    break;\n                case \"m\":\n                    blobSASPermissions.move = true;\n                    break;\n                case \"e\":\n                    blobSASPermissions.execute = true;\n                    break;\n                case \"i\":\n                    blobSASPermissions.setImmutabilityPolicy = true;\n                    break;\n                default:\n                    throw new RangeError(`Invalid permission: ${char}`);\n            }\n        }\n        return blobSASPermissions;\n    }\n    /**\n     * Creates a {@link BlobSASPermissions} from a raw object which contains same keys as it\n     * and boolean values for them.\n     *\n     * @param permissionLike -\n     */\n    static from(permissionLike) {\n        const blobSASPermissions = new BlobSASPermissions();\n        if (permissionLike.read) {\n            blobSASPermissions.read = true;\n        }\n        if (permissionLike.add) {\n            blobSASPermissions.add = true;\n        }\n        if (permissionLike.create) {\n            blobSASPermissions.create = true;\n        }\n        if (permissionLike.write) {\n            blobSASPermissions.write = true;\n        }\n        if (permissionLike.delete) {\n            blobSASPermissions.delete = true;\n        }\n        if (permissionLike.deleteVersion) {\n            blobSASPermissions.deleteVersion = true;\n        }\n        if (permissionLike.tag) {\n            blobSASPermissions.tag = true;\n        }\n        if (permissionLike.move) {\n            blobSASPermissions.move = true;\n        }\n        if (permissionLike.execute) {\n            blobSASPermissions.execute = true;\n        }\n        if (permissionLike.setImmutabilityPolicy) {\n            blobSASPermissions.setImmutabilityPolicy = true;\n        }\n        return blobSASPermissions;\n    }\n    /**\n     * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n     * order accepted by the service.\n     *\n     * @returns A string which represents the BlobSASPermissions\n     */\n    toString() {\n        const permissions = [];\n        if (this.read) {\n            permissions.push(\"r\");\n        }\n        if (this.add) {\n            permissions.push(\"a\");\n        }\n        if (this.create) {\n            permissions.push(\"c\");\n        }\n        if (this.write) {\n            permissions.push(\"w\");\n        }\n        if (this.delete) {\n            permissions.push(\"d\");\n        }\n        if (this.deleteVersion) {\n            permissions.push(\"x\");\n        }\n        if (this.tag) {\n            permissions.push(\"t\");\n        }\n        if (this.move) {\n            permissions.push(\"m\");\n        }\n        if (this.execute) {\n            permissions.push(\"e\");\n        }\n        if (this.setImmutabilityPolicy) {\n            permissions.push(\"i\");\n        }\n        return permissions.join(\"\");\n    }\n}\n//# sourceMappingURL=BlobSASPermissions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { UserDelegationKeyCredential } from \"../credentials/UserDelegationKeyCredential\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\nexport function generateBlobSASQueryParameters(blobSASSignatureValues, sharedKeyCredentialOrUserDelegationKey, accountName) {\n    const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n    const sharedKeyCredential = sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n        ? sharedKeyCredentialOrUserDelegationKey\n        : undefined;\n    let userDelegationKeyCredential;\n    if (sharedKeyCredential === undefined && accountName !== undefined) {\n        userDelegationKeyCredential = new UserDelegationKeyCredential(accountName, sharedKeyCredentialOrUserDelegationKey);\n    }\n    if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n        throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n    }\n    // Version 2019-12-12 adds support for the blob tags permission.\n    // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n    if (version >= \"2018-11-09\") {\n        if (sharedKeyCredential !== undefined) {\n            return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n        }\n        else {\n            // Version 2020-02-10 delegation SAS signature construction includes preauthorizedAgentObjectId, agentObjectId, correlationId.\n            if (version >= \"2020-02-10\") {\n                return generateBlobSASQueryParametersUDK20200210(blobSASSignatureValues, userDelegationKeyCredential);\n            }\n            else {\n                return generateBlobSASQueryParametersUDK20181109(blobSASSignatureValues, userDelegationKeyCredential);\n            }\n        }\n    }\n    if (version >= \"2015-04-05\") {\n        if (sharedKeyCredential !== undefined) {\n            return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n        }\n        else {\n            throw new RangeError(\"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\");\n        }\n    }\n    throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential) {\n    blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n    if (!blobSASSignatureValues.identifier &&\n        !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)) {\n        throw new RangeError(\"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\");\n    }\n    let resource = \"c\";\n    if (blobSASSignatureValues.blobName) {\n        resource = \"b\";\n    }\n    // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n    let verifiedPermissions;\n    if (blobSASSignatureValues.permissions) {\n        if (blobSASSignatureValues.blobName) {\n            verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n        else {\n            verifiedPermissions = ContainerSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n    }\n    // Signature is generated on the un-url-encoded values.\n    const stringToSign = [\n        verifiedPermissions ? verifiedPermissions : \"\",\n        blobSASSignatureValues.startsOn\n            ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n            : \"\",\n        blobSASSignatureValues.expiresOn\n            ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n            : \"\",\n        getCanonicalName(sharedKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName),\n        blobSASSignatureValues.identifier,\n        blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n        blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n        blobSASSignatureValues.version,\n        blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n        blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n        blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n        blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n        blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n    ].join(\"\\n\");\n    const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType);\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential) {\n    blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n    if (!blobSASSignatureValues.identifier &&\n        !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)) {\n        throw new RangeError(\"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\");\n    }\n    let resource = \"c\";\n    let timestamp = blobSASSignatureValues.snapshotTime;\n    if (blobSASSignatureValues.blobName) {\n        resource = \"b\";\n        if (blobSASSignatureValues.snapshotTime) {\n            resource = \"bs\";\n        }\n        else if (blobSASSignatureValues.versionId) {\n            resource = \"bv\";\n            timestamp = blobSASSignatureValues.versionId;\n        }\n    }\n    // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n    let verifiedPermissions;\n    if (blobSASSignatureValues.permissions) {\n        if (blobSASSignatureValues.blobName) {\n            verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n        else {\n            verifiedPermissions = ContainerSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n    }\n    // Signature is generated on the un-url-encoded values.\n    const stringToSign = [\n        verifiedPermissions ? verifiedPermissions : \"\",\n        blobSASSignatureValues.startsOn\n            ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n            : \"\",\n        blobSASSignatureValues.expiresOn\n            ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n            : \"\",\n        getCanonicalName(sharedKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName),\n        blobSASSignatureValues.identifier,\n        blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n        blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n        blobSASSignatureValues.version,\n        resource,\n        timestamp,\n        blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n        blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n        blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n        blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n        blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n    ].join(\"\\n\");\n    const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType);\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20181109(blobSASSignatureValues, userDelegationKeyCredential) {\n    blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n    // Stored access policies are not supported for a user delegation SAS.\n    if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n        throw new RangeError(\"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\");\n    }\n    let resource = \"c\";\n    let timestamp = blobSASSignatureValues.snapshotTime;\n    if (blobSASSignatureValues.blobName) {\n        resource = \"b\";\n        if (blobSASSignatureValues.snapshotTime) {\n            resource = \"bs\";\n        }\n        else if (blobSASSignatureValues.versionId) {\n            resource = \"bv\";\n            timestamp = blobSASSignatureValues.versionId;\n        }\n    }\n    // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n    let verifiedPermissions;\n    if (blobSASSignatureValues.permissions) {\n        if (blobSASSignatureValues.blobName) {\n            verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n        else {\n            verifiedPermissions = ContainerSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n    }\n    // Signature is generated on the un-url-encoded values.\n    const stringToSign = [\n        verifiedPermissions ? verifiedPermissions : \"\",\n        blobSASSignatureValues.startsOn\n            ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n            : \"\",\n        blobSASSignatureValues.expiresOn\n            ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n            : \"\",\n        getCanonicalName(userDelegationKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName),\n        userDelegationKeyCredential.userDelegationKey.signedObjectId,\n        userDelegationKeyCredential.userDelegationKey.signedTenantId,\n        userDelegationKeyCredential.userDelegationKey.signedStartsOn\n            ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n            : \"\",\n        userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n            ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n            : \"\",\n        userDelegationKeyCredential.userDelegationKey.signedService,\n        userDelegationKeyCredential.userDelegationKey.signedVersion,\n        blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n        blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n        blobSASSignatureValues.version,\n        resource,\n        timestamp,\n        blobSASSignatureValues.cacheControl,\n        blobSASSignatureValues.contentDisposition,\n        blobSASSignatureValues.contentEncoding,\n        blobSASSignatureValues.contentLanguage,\n        blobSASSignatureValues.contentType\n    ].join(\"\\n\");\n    const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType, userDelegationKeyCredential.userDelegationKey);\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-02-10.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20200210(blobSASSignatureValues, userDelegationKeyCredential) {\n    blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n    // Stored access policies are not supported for a user delegation SAS.\n    if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n        throw new RangeError(\"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\");\n    }\n    let resource = \"c\";\n    let timestamp = blobSASSignatureValues.snapshotTime;\n    if (blobSASSignatureValues.blobName) {\n        resource = \"b\";\n        if (blobSASSignatureValues.snapshotTime) {\n            resource = \"bs\";\n        }\n        else if (blobSASSignatureValues.versionId) {\n            resource = \"bv\";\n            timestamp = blobSASSignatureValues.versionId;\n        }\n    }\n    // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n    let verifiedPermissions;\n    if (blobSASSignatureValues.permissions) {\n        if (blobSASSignatureValues.blobName) {\n            verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n        else {\n            verifiedPermissions = ContainerSASPermissions.parse(blobSASSignatureValues.permissions.toString()).toString();\n        }\n    }\n    // Signature is generated on the un-url-encoded values.\n    const stringToSign = [\n        verifiedPermissions ? verifiedPermissions : \"\",\n        blobSASSignatureValues.startsOn\n            ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n            : \"\",\n        blobSASSignatureValues.expiresOn\n            ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n            : \"\",\n        getCanonicalName(userDelegationKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName),\n        userDelegationKeyCredential.userDelegationKey.signedObjectId,\n        userDelegationKeyCredential.userDelegationKey.signedTenantId,\n        userDelegationKeyCredential.userDelegationKey.signedStartsOn\n            ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n            : \"\",\n        userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n            ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n            : \"\",\n        userDelegationKeyCredential.userDelegationKey.signedService,\n        userDelegationKeyCredential.userDelegationKey.signedVersion,\n        blobSASSignatureValues.preauthorizedAgentObjectId,\n        undefined,\n        blobSASSignatureValues.correlationId,\n        blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n        blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n        blobSASSignatureValues.version,\n        resource,\n        timestamp,\n        blobSASSignatureValues.cacheControl,\n        blobSASSignatureValues.contentDisposition,\n        blobSASSignatureValues.contentEncoding,\n        blobSASSignatureValues.contentLanguage,\n        blobSASSignatureValues.contentType\n    ].join(\"\\n\");\n    const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType, userDelegationKeyCredential.userDelegationKey, blobSASSignatureValues.preauthorizedAgentObjectId, blobSASSignatureValues.correlationId);\n}\nfunction getCanonicalName(accountName, containerName, blobName) {\n    // Container: \"/blob/account/containerName\"\n    // Blob:      \"/blob/account/containerName/blobName\"\n    const elements = [`/blob/${accountName}/${containerName}`];\n    if (blobName) {\n        elements.push(`/${blobName}`);\n    }\n    return elements.join(\"\");\n}\nfunction SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues) {\n    const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n    if (blobSASSignatureValues.snapshotTime && version < \"2018-11-09\") {\n        throw RangeError(\"'version' must be >= '2018-11-09' when providing 'snapshotTime'.\");\n    }\n    if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n        throw RangeError(\"Must provide 'blobName' when providing 'snapshotTime'.\");\n    }\n    if (blobSASSignatureValues.versionId && version < \"2019-10-10\") {\n        throw RangeError(\"'version' must be >= '2019-10-10' when providing 'versionId'.\");\n    }\n    if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.versionId) {\n        throw RangeError(\"Must provide 'blobName' when providing 'versionId'.\");\n    }\n    if (blobSASSignatureValues.permissions &&\n        blobSASSignatureValues.permissions.setImmutabilityPolicy &&\n        version < \"2020-08-04\") {\n        throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n    }\n    if (blobSASSignatureValues.permissions &&\n        blobSASSignatureValues.permissions.deleteVersion &&\n        version < \"2019-10-10\") {\n        throw RangeError(\"'version' must be >= '2019-10-10' when providing 'x' permission.\");\n    }\n    if (blobSASSignatureValues.permissions &&\n        blobSASSignatureValues.permissions.tag &&\n        version < \"2019-12-12\") {\n        throw RangeError(\"'version' must be >= '2019-12-12' when providing 't' permission.\");\n    }\n    if (version < \"2020-02-10\" &&\n        blobSASSignatureValues.permissions &&\n        (blobSASSignatureValues.permissions.move || blobSASSignatureValues.permissions.execute)) {\n        throw RangeError(\"'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.\");\n    }\n    if (version < \"2020-02-10\" &&\n        (blobSASSignatureValues.preauthorizedAgentObjectId || blobSASSignatureValues.correlationId)) {\n        throw RangeError(\"'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.\");\n    }\n    blobSASSignatureValues.version = version;\n    return blobSASSignatureValues;\n}\n//# sourceMappingURL=BlobSASSignatureValues.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ContainerSASPermissions {\n    constructor() {\n        /**\n         * Specifies Read access granted.\n         */\n        this.read = false;\n        /**\n         * Specifies Add access granted.\n         */\n        this.add = false;\n        /**\n         * Specifies Create access granted.\n         */\n        this.create = false;\n        /**\n         * Specifies Write access granted.\n         */\n        this.write = false;\n        /**\n         * Specifies Delete access granted.\n         */\n        this.delete = false;\n        /**\n         * Specifies Delete version access granted.\n         */\n        this.deleteVersion = false;\n        /**\n         * Specifies List access granted.\n         */\n        this.list = false;\n        /**\n         * Specfies Tag access granted.\n         */\n        this.tag = false;\n        /**\n         * Specifies Move access granted.\n         */\n        this.move = false;\n        /**\n         * Specifies Execute access granted.\n         */\n        this.execute = false;\n        /**\n         * Specifies SetImmutabilityPolicy access granted.\n         */\n        this.setImmutabilityPolicy = false;\n    }\n    /**\n     * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid permission.\n     *\n     * @param permissions -\n     */\n    static parse(permissions) {\n        const containerSASPermissions = new ContainerSASPermissions();\n        for (const char of permissions) {\n            switch (char) {\n                case \"r\":\n                    containerSASPermissions.read = true;\n                    break;\n                case \"a\":\n                    containerSASPermissions.add = true;\n                    break;\n                case \"c\":\n                    containerSASPermissions.create = true;\n                    break;\n                case \"w\":\n                    containerSASPermissions.write = true;\n                    break;\n                case \"d\":\n                    containerSASPermissions.delete = true;\n                    break;\n                case \"l\":\n                    containerSASPermissions.list = true;\n                    break;\n                case \"t\":\n                    containerSASPermissions.tag = true;\n                    break;\n                case \"x\":\n                    containerSASPermissions.deleteVersion = true;\n                    break;\n                case \"m\":\n                    containerSASPermissions.move = true;\n                    break;\n                case \"e\":\n                    containerSASPermissions.execute = true;\n                    break;\n                case \"i\":\n                    containerSASPermissions.setImmutabilityPolicy = true;\n                    break;\n                default:\n                    throw new RangeError(`Invalid permission ${char}`);\n            }\n        }\n        return containerSASPermissions;\n    }\n    /**\n     * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n     * and boolean values for them.\n     *\n     * @param permissionLike -\n     */\n    static from(permissionLike) {\n        const containerSASPermissions = new ContainerSASPermissions();\n        if (permissionLike.read) {\n            containerSASPermissions.read = true;\n        }\n        if (permissionLike.add) {\n            containerSASPermissions.add = true;\n        }\n        if (permissionLike.create) {\n            containerSASPermissions.create = true;\n        }\n        if (permissionLike.write) {\n            containerSASPermissions.write = true;\n        }\n        if (permissionLike.delete) {\n            containerSASPermissions.delete = true;\n        }\n        if (permissionLike.list) {\n            containerSASPermissions.list = true;\n        }\n        if (permissionLike.deleteVersion) {\n            containerSASPermissions.deleteVersion = true;\n        }\n        if (permissionLike.tag) {\n            containerSASPermissions.tag = true;\n        }\n        if (permissionLike.move) {\n            containerSASPermissions.move = true;\n        }\n        if (permissionLike.execute) {\n            containerSASPermissions.execute = true;\n        }\n        if (permissionLike.setImmutabilityPolicy) {\n            containerSASPermissions.setImmutabilityPolicy = true;\n        }\n        return containerSASPermissions;\n    }\n    /**\n     * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n     * order accepted by the service.\n     *\n     * The order of the characters should be as specified here to ensure correctness.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n     *\n     */\n    toString() {\n        const permissions = [];\n        if (this.read) {\n            permissions.push(\"r\");\n        }\n        if (this.add) {\n            permissions.push(\"a\");\n        }\n        if (this.create) {\n            permissions.push(\"c\");\n        }\n        if (this.write) {\n            permissions.push(\"w\");\n        }\n        if (this.delete) {\n            permissions.push(\"d\");\n        }\n        if (this.deleteVersion) {\n            permissions.push(\"x\");\n        }\n        if (this.list) {\n            permissions.push(\"l\");\n        }\n        if (this.tag) {\n            permissions.push(\"t\");\n        }\n        if (this.move) {\n            permissions.push(\"m\");\n        }\n        if (this.execute) {\n            permissions.push(\"e\");\n        }\n        if (this.setImmutabilityPolicy) {\n            permissions.push(\"i\");\n        }\n        return permissions.join(\"\");\n    }\n}\n//# sourceMappingURL=ContainerSASPermissions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n/**\n * Protocols for generated SAS.\n */\nexport var SASProtocol;\n(function (SASProtocol) {\n    /**\n     * Protocol that allows HTTPS only\n     */\n    SASProtocol[\"Https\"] = \"https\";\n    /**\n     * Protocol that allows both HTTPS and HTTP\n     */\n    SASProtocol[\"HttpsAndHttp\"] = \"https,http\";\n})(SASProtocol || (SASProtocol = {}));\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n    constructor(version, signature, permissionsOrOptions, services, resourceTypes, protocol, startsOn, expiresOn, ipRange, identifier, resource, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, userDelegationKey, preauthorizedAgentObjectId, correlationId) {\n        this.version = version;\n        this.signature = signature;\n        if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n            // SASQueryParametersOptions\n            this.permissions = permissionsOrOptions.permissions;\n            this.services = permissionsOrOptions.services;\n            this.resourceTypes = permissionsOrOptions.resourceTypes;\n            this.protocol = permissionsOrOptions.protocol;\n            this.startsOn = permissionsOrOptions.startsOn;\n            this.expiresOn = permissionsOrOptions.expiresOn;\n            this.ipRangeInner = permissionsOrOptions.ipRange;\n            this.identifier = permissionsOrOptions.identifier;\n            this.resource = permissionsOrOptions.resource;\n            this.cacheControl = permissionsOrOptions.cacheControl;\n            this.contentDisposition = permissionsOrOptions.contentDisposition;\n            this.contentEncoding = permissionsOrOptions.contentEncoding;\n            this.contentLanguage = permissionsOrOptions.contentLanguage;\n            this.contentType = permissionsOrOptions.contentType;\n            if (permissionsOrOptions.userDelegationKey) {\n                this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n                this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n                this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n                this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n                this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n                this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n                this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n                this.correlationId = permissionsOrOptions.correlationId;\n            }\n        }\n        else {\n            this.services = services;\n            this.resourceTypes = resourceTypes;\n            this.expiresOn = expiresOn;\n            this.permissions = permissionsOrOptions;\n            this.protocol = protocol;\n            this.startsOn = startsOn;\n            this.ipRangeInner = ipRange;\n            this.identifier = identifier;\n            this.resource = resource;\n            this.cacheControl = cacheControl;\n            this.contentDisposition = contentDisposition;\n            this.contentEncoding = contentEncoding;\n            this.contentLanguage = contentLanguage;\n            this.contentType = contentType;\n            if (userDelegationKey) {\n                this.signedOid = userDelegationKey.signedObjectId;\n                this.signedTenantId = userDelegationKey.signedTenantId;\n                this.signedStartsOn = userDelegationKey.signedStartsOn;\n                this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n                this.signedService = userDelegationKey.signedService;\n                this.signedVersion = userDelegationKey.signedVersion;\n                this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n                this.correlationId = correlationId;\n            }\n        }\n    }\n    /**\n     * Optional. IP range allowed for this SAS.\n     *\n     * @readonly\n     */\n    get ipRange() {\n        if (this.ipRangeInner) {\n            return {\n                end: this.ipRangeInner.end,\n                start: this.ipRangeInner.start\n            };\n        }\n        return undefined;\n    }\n    /**\n     * Encodes all SAS query parameters into a string that can be appended to a URL.\n     *\n     */\n    toString() {\n        const params = [\n            \"sv\",\n            \"ss\",\n            \"srt\",\n            \"spr\",\n            \"st\",\n            \"se\",\n            \"sip\",\n            \"si\",\n            \"skoid\",\n            \"sktid\",\n            \"skt\",\n            \"ske\",\n            \"sks\",\n            \"skv\",\n            \"sr\",\n            \"sp\",\n            \"sig\",\n            \"rscc\",\n            \"rscd\",\n            \"rsce\",\n            \"rscl\",\n            \"rsct\",\n            \"saoid\",\n            \"scid\"\n        ];\n        const queries = [];\n        for (const param of params) {\n            switch (param) {\n                case \"sv\":\n                    this.tryAppendQueryParameter(queries, param, this.version);\n                    break;\n                case \"ss\":\n                    this.tryAppendQueryParameter(queries, param, this.services);\n                    break;\n                case \"srt\":\n                    this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n                    break;\n                case \"spr\":\n                    this.tryAppendQueryParameter(queries, param, this.protocol);\n                    break;\n                case \"st\":\n                    this.tryAppendQueryParameter(queries, param, this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined);\n                    break;\n                case \"se\":\n                    this.tryAppendQueryParameter(queries, param, this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined);\n                    break;\n                case \"sip\":\n                    this.tryAppendQueryParameter(queries, param, this.ipRange ? ipRangeToString(this.ipRange) : undefined);\n                    break;\n                case \"si\":\n                    this.tryAppendQueryParameter(queries, param, this.identifier);\n                    break;\n                case \"skoid\": // Signed object ID\n                    this.tryAppendQueryParameter(queries, param, this.signedOid);\n                    break;\n                case \"sktid\": // Signed tenant ID\n                    this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n                    break;\n                case \"skt\": // Signed key start time\n                    this.tryAppendQueryParameter(queries, param, this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined);\n                    break;\n                case \"ske\": // Signed key expiry time\n                    this.tryAppendQueryParameter(queries, param, this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined);\n                    break;\n                case \"sks\": // Signed key service\n                    this.tryAppendQueryParameter(queries, param, this.signedService);\n                    break;\n                case \"skv\": // Signed key version\n                    this.tryAppendQueryParameter(queries, param, this.signedVersion);\n                    break;\n                case \"sr\":\n                    this.tryAppendQueryParameter(queries, param, this.resource);\n                    break;\n                case \"sp\":\n                    this.tryAppendQueryParameter(queries, param, this.permissions);\n                    break;\n                case \"sig\":\n                    this.tryAppendQueryParameter(queries, param, this.signature);\n                    break;\n                case \"rscc\":\n                    this.tryAppendQueryParameter(queries, param, this.cacheControl);\n                    break;\n                case \"rscd\":\n                    this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n                    break;\n                case \"rsce\":\n                    this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n                    break;\n                case \"rscl\":\n                    this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n                    break;\n                case \"rsct\":\n                    this.tryAppendQueryParameter(queries, param, this.contentType);\n                    break;\n                case \"saoid\":\n                    this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n                    break;\n                case \"scid\":\n                    this.tryAppendQueryParameter(queries, param, this.correlationId);\n                    break;\n            }\n        }\n        return queries.join(\"&\");\n    }\n    /**\n     * A private helper method used to filter and append query key/value pairs into an array.\n     *\n     * @param queries -\n     * @param key -\n     * @param value -\n     */\n    tryAppendQueryParameter(queries, key, value) {\n        if (!value) {\n            return;\n        }\n        key = encodeURIComponent(key);\n        value = encodeURIComponent(value);\n        if (key.length > 0 && value.length > 0) {\n            queries.push(`${key}=${value}`);\n        }\n    }\n}\n//# sourceMappingURL=SASQueryParameters.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange -\n */\nexport function ipRangeToString(ipRange) {\n    return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n//# sourceMappingURL=SasIPRange.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n/**\n * States for Batch.\n */\nvar BatchStates;\n(function (BatchStates) {\n    BatchStates[BatchStates[\"Good\"] = 0] = \"Good\";\n    BatchStates[BatchStates[\"Error\"] = 1] = \"Error\";\n})(BatchStates || (BatchStates = {}));\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n    /**\n     * Creates an instance of Batch.\n     * @param concurrency -\n     */\n    constructor(concurrency = 5) {\n        /**\n         * Number of active operations under execution.\n         */\n        this.actives = 0;\n        /**\n         * Number of completed operations under execution.\n         */\n        this.completed = 0;\n        /**\n         * Offset of next operation to be executed.\n         */\n        this.offset = 0;\n        /**\n         * Operation array to be executed.\n         */\n        this.operations = [];\n        /**\n         * States of Batch. When an error happens, state will turn into error.\n         * Batch will stop execute left operations.\n         */\n        this.state = BatchStates.Good;\n        if (concurrency < 1) {\n            throw new RangeError(\"concurrency must be larger than 0\");\n        }\n        this.concurrency = concurrency;\n        this.emitter = new EventEmitter();\n    }\n    /**\n     * Add a operation into queue.\n     *\n     * @param operation -\n     */\n    addOperation(operation) {\n        this.operations.push(async () => {\n            try {\n                this.actives++;\n                await operation();\n                this.actives--;\n                this.completed++;\n                this.parallelExecute();\n            }\n            catch (error) {\n                this.emitter.emit(\"error\", error);\n            }\n        });\n    }\n    /**\n     * Start execute operations in the queue.\n     *\n     */\n    async do() {\n        if (this.operations.length === 0) {\n            return Promise.resolve();\n        }\n        this.parallelExecute();\n        return new Promise((resolve, reject) => {\n            this.emitter.on(\"finish\", resolve);\n            this.emitter.on(\"error\", (error) => {\n                this.state = BatchStates.Error;\n                reject(error);\n            });\n        });\n    }\n    /**\n     * Get next operation to be executed. Return null when reaching ends.\n     *\n     */\n    nextOperation() {\n        if (this.offset < this.operations.length) {\n            return this.operations[this.offset++];\n        }\n        return null;\n    }\n    /**\n     * Start execute operations. One one the most important difference between\n     * this method with do() is that do() wraps as an sync method.\n     *\n     */\n    parallelExecute() {\n        if (this.state === BatchStates.Error) {\n            return;\n        }\n        if (this.completed >= this.operations.length) {\n            this.emitter.emit(\"finish\");\n            return;\n        }\n        while (this.actives < this.concurrency) {\n            const operation = this.nextOperation();\n            if (operation) {\n                operation();\n            }\n            else {\n                return;\n            }\n        }\n    }\n}\n//# sourceMappingURL=Batch.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar MutexLockStatus;\n(function (MutexLockStatus) {\n    MutexLockStatus[MutexLockStatus[\"LOCKED\"] = 0] = \"LOCKED\";\n    MutexLockStatus[MutexLockStatus[\"UNLOCKED\"] = 1] = \"UNLOCKED\";\n})(MutexLockStatus || (MutexLockStatus = {}));\n/**\n * An async mutex lock.\n */\nexport class Mutex {\n    /**\n     * Lock for a specific key. If the lock has been acquired by another customer, then\n     * will wait until getting the lock.\n     *\n     * @param key - lock key\n     */\n    static async lock(key) {\n        return new Promise((resolve) => {\n            if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n                this.keys[key] = MutexLockStatus.LOCKED;\n                resolve();\n            }\n            else {\n                this.onUnlockEvent(key, () => {\n                    this.keys[key] = MutexLockStatus.LOCKED;\n                    resolve();\n                });\n            }\n        });\n    }\n    /**\n     * Unlock a key.\n     *\n     * @param key -\n     */\n    static async unlock(key) {\n        return new Promise((resolve) => {\n            if (this.keys[key] === MutexLockStatus.LOCKED) {\n                this.emitUnlockEvent(key);\n            }\n            delete this.keys[key];\n            resolve();\n        });\n    }\n    static onUnlockEvent(key, handler) {\n        if (this.listeners[key] === undefined) {\n            this.listeners[key] = [handler];\n        }\n        else {\n            this.listeners[key].push(handler);\n        }\n    }\n    static emitUnlockEvent(key) {\n        if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n            const handler = this.listeners[key].shift();\n            setImmediate(() => {\n                handler.call(this);\n            });\n        }\n    }\n}\nMutex.keys = {};\nMutex.listeners = {};\n//# sourceMappingURL=Mutex.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { DefaultHttpClient } from \"@azure/core-http\";\nconst _defaultHttpClient = new DefaultHttpClient();\nexport function getCachedDefaultHttpClient() {\n    return _defaultHttpClient;\n}\n//# sourceMappingURL=cache.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const SDK_VERSION = \"12.8.0\";\nexport const SERVICE_VERSION = \"2020-10-02\";\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES = 4000 * 1024 * 1024; // 4000MB\nexport const BLOCK_BLOB_MAX_BLOCKS = 50000;\nexport const DEFAULT_BLOCK_BUFFER_SIZE_BYTES = 8 * 1024 * 1024; // 8MB\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS = 5;\n/**\n * The OAuth scope to use with Azure Storage.\n */\nexport const StorageOAuthScopes = \"https://storage.azure.com/.default\";\nexport const URLConstants = {\n    Parameters: {\n        FORCE_BROWSER_NO_CACHE: \"_\",\n        SIGNATURE: \"sig\",\n        SNAPSHOT: \"snapshot\",\n        VERSIONID: \"versionid\",\n        TIMEOUT: \"timeout\"\n    }\n};\nexport const HTTPURLConnection = {\n    HTTP_ACCEPTED: 202,\n    HTTP_CONFLICT: 409,\n    HTTP_NOT_FOUND: 404,\n    HTTP_PRECON_FAILED: 412,\n    HTTP_RANGE_NOT_SATISFIABLE: 416\n};\nexport const HeaderConstants = {\n    AUTHORIZATION: \"Authorization\",\n    AUTHORIZATION_SCHEME: \"Bearer\",\n    CONTENT_ENCODING: \"Content-Encoding\",\n    CONTENT_ID: \"Content-ID\",\n    CONTENT_LANGUAGE: \"Content-Language\",\n    CONTENT_LENGTH: \"Content-Length\",\n    CONTENT_MD5: \"Content-Md5\",\n    CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n    CONTENT_TYPE: \"Content-Type\",\n    COOKIE: \"Cookie\",\n    DATE: \"date\",\n    IF_MATCH: \"if-match\",\n    IF_MODIFIED_SINCE: \"if-modified-since\",\n    IF_NONE_MATCH: \"if-none-match\",\n    IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n    PREFIX_FOR_STORAGE: \"x-ms-\",\n    RANGE: \"Range\",\n    USER_AGENT: \"User-Agent\",\n    X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n    X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n    X_MS_DATE: \"x-ms-date\",\n    X_MS_ERROR_CODE: \"x-ms-error-code\",\n    X_MS_VERSION: \"x-ms-version\"\n};\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\nexport const SIZE_1_MB = 1 * 1024 * 1024;\nexport const BATCH_MAX_REQUEST = 256;\nexport const BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;\nexport const HTTP_LINE_ENDING = \"\\r\\n\";\nexport const HTTP_VERSION_1_1 = \"HTTP/1.1\";\nexport const EncryptionAlgorithmAES25 = \"AES256\";\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\nexport const StorageBlobLoggingAllowedHeaderNames = [\n    \"Access-Control-Allow-Origin\",\n    \"Cache-Control\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"Request-Id\",\n    \"traceparent\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"x-ms-client-request-id\",\n    \"x-ms-date\",\n    \"x-ms-error-code\",\n    \"x-ms-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-version\",\n    \"Accept-Ranges\",\n    \"Content-Disposition\",\n    \"Content-Encoding\",\n    \"Content-Language\",\n    \"Content-MD5\",\n    \"Content-Range\",\n    \"ETag\",\n    \"Last-Modified\",\n    \"Server\",\n    \"Vary\",\n    \"x-ms-content-crc64\",\n    \"x-ms-copy-action\",\n    \"x-ms-copy-completion-time\",\n    \"x-ms-copy-id\",\n    \"x-ms-copy-progress\",\n    \"x-ms-copy-status\",\n    \"x-ms-has-immutability-policy\",\n    \"x-ms-has-legal-hold\",\n    \"x-ms-lease-state\",\n    \"x-ms-lease-status\",\n    \"x-ms-range\",\n    \"x-ms-request-server-encrypted\",\n    \"x-ms-server-encrypted\",\n    \"x-ms-snapshot\",\n    \"x-ms-source-range\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"x-ms-access-tier\",\n    \"x-ms-access-tier-change-time\",\n    \"x-ms-access-tier-inferred\",\n    \"x-ms-account-kind\",\n    \"x-ms-archive-status\",\n    \"x-ms-blob-append-offset\",\n    \"x-ms-blob-cache-control\",\n    \"x-ms-blob-committed-block-count\",\n    \"x-ms-blob-condition-appendpos\",\n    \"x-ms-blob-condition-maxsize\",\n    \"x-ms-blob-content-disposition\",\n    \"x-ms-blob-content-encoding\",\n    \"x-ms-blob-content-language\",\n    \"x-ms-blob-content-length\",\n    \"x-ms-blob-content-md5\",\n    \"x-ms-blob-content-type\",\n    \"x-ms-blob-public-access\",\n    \"x-ms-blob-sequence-number\",\n    \"x-ms-blob-type\",\n    \"x-ms-copy-destination-snapshot\",\n    \"x-ms-creation-time\",\n    \"x-ms-default-encryption-scope\",\n    \"x-ms-delete-snapshots\",\n    \"x-ms-delete-type-permanent\",\n    \"x-ms-deny-encryption-scope-override\",\n    \"x-ms-encryption-algorithm\",\n    \"x-ms-if-sequence-number-eq\",\n    \"x-ms-if-sequence-number-le\",\n    \"x-ms-if-sequence-number-lt\",\n    \"x-ms-incremental-copy\",\n    \"x-ms-lease-action\",\n    \"x-ms-lease-break-period\",\n    \"x-ms-lease-duration\",\n    \"x-ms-lease-id\",\n    \"x-ms-lease-time\",\n    \"x-ms-page-write\",\n    \"x-ms-proposed-lease-id\",\n    \"x-ms-range-get-content-md5\",\n    \"x-ms-rehydrate-priority\",\n    \"x-ms-sequence-number-action\",\n    \"x-ms-sku-name\",\n    \"x-ms-source-content-md5\",\n    \"x-ms-source-if-match\",\n    \"x-ms-source-if-modified-since\",\n    \"x-ms-source-if-none-match\",\n    \"x-ms-source-if-unmodified-since\",\n    \"x-ms-tag-count\",\n    \"x-ms-encryption-key-sha256\",\n    \"x-ms-if-tags\",\n    \"x-ms-source-if-tags\"\n];\nexport const StorageBlobLoggingAllowedQueryParameters = [\n    \"comp\",\n    \"maxresults\",\n    \"rscc\",\n    \"rscd\",\n    \"rsce\",\n    \"rscl\",\n    \"rsct\",\n    \"se\",\n    \"si\",\n    \"sip\",\n    \"sp\",\n    \"spr\",\n    \"sr\",\n    \"srt\",\n    \"ss\",\n    \"st\",\n    \"sv\",\n    \"include\",\n    \"marker\",\n    \"prefix\",\n    \"copyid\",\n    \"restype\",\n    \"blockid\",\n    \"blocklisttype\",\n    \"delimiter\",\n    \"prevsnapshot\",\n    \"ske\",\n    \"skoid\",\n    \"sks\",\n    \"skt\",\n    \"sktid\",\n    \"skv\",\n    \"snapshot\"\n];\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createSpanFunction } from \"@azure/core-tracing\";\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n    packagePrefix: \"Azure.Storage.Blob\",\n    namespace: \"Microsoft.Storage\"\n});\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(options) {\n    var _a, _b;\n    return {\n        // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n        spanOptions: (_a = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions,\n        tracingContext: (_b = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _b === void 0 ? void 0 : _b.tracingContext\n    };\n}\n//# sourceMappingURL=tracing.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n        fileReader.onloadend = (ev) => {\n            resolve(ev.target.result);\n        };\n        fileReader.onerror = reject;\n        fileReader.readAsArrayBuffer(blob);\n    });\n}\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\nexport async function blobToString(blob) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n        fileReader.onloadend = (ev) => {\n            resolve(ev.target.result);\n        };\n        fileReader.onerror = reject;\n        fileReader.readAsText(blob);\n    });\n}\nexport function streamToBuffer() {\n    /* empty */\n}\nexport function streamToBuffer2() {\n    /* empty */\n}\nexport function readStreamToLocalFile() {\n    /* empty */\n}\nexport const fsStat = function stat() {\n    /* empty */\n};\nexport const fsCreateReadStream = function createReadStream() {\n    /* empty */\n};\n//# sourceMappingURL=utils.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\nimport { DevelopmentConnectionString, HeaderConstants, URLConstants } from \"./constants\";\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" instead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url) {\n    const urlParsed = URLBuilder.parse(url);\n    let path = urlParsed.getPath();\n    path = path || \"/\";\n    path = escape(path);\n    urlParsed.setPath(path);\n    return urlParsed.toString();\n}\nfunction getProxyUriFromDevConnString(connectionString) {\n    // Development Connection String\n    // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n    let proxyUri = \"\";\n    if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n        // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n        const matchCredentials = connectionString.split(\";\");\n        for (const element of matchCredentials) {\n            if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n                proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")[1];\n            }\n        }\n    }\n    return proxyUri;\n}\nexport function getValueInConnString(connectionString, argument) {\n    const elements = connectionString.split(\";\");\n    for (const element of elements) {\n        if (element.trim().startsWith(argument)) {\n            return element.trim().match(argument + \"=(.*)\")[1];\n        }\n    }\n    return \"\";\n}\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString) {\n    let proxyUri = \"\";\n    if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n        // Development connection string\n        proxyUri = getProxyUriFromDevConnString(connectionString);\n        connectionString = DevelopmentConnectionString;\n    }\n    // Matching BlobEndpoint in the Account connection string\n    let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n    // Slicing off '/' at the end if exists\n    // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n    blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n    if (connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n        connectionString.search(\"AccountKey=\") !== -1) {\n        // Account connection string\n        let defaultEndpointsProtocol = \"\";\n        let accountName = \"\";\n        let accountKey = Buffer.from(\"accountKey\", \"base64\");\n        let endpointSuffix = \"\";\n        // Get account name and key\n        accountName = getValueInConnString(connectionString, \"AccountName\");\n        accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n        if (!blobEndpoint) {\n            // BlobEndpoint is not present in the Account connection string\n            // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n            defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n            const protocol = defaultEndpointsProtocol.toLowerCase();\n            if (protocol !== \"https\" && protocol !== \"http\") {\n                throw new Error(\"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\");\n            }\n            endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n            if (!endpointSuffix) {\n                throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n            }\n            blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n        }\n        if (!accountName) {\n            throw new Error(\"Invalid AccountName in the provided Connection String\");\n        }\n        else if (accountKey.length === 0) {\n            throw new Error(\"Invalid AccountKey in the provided Connection String\");\n        }\n        return {\n            kind: \"AccountConnString\",\n            url: blobEndpoint,\n            accountName,\n            accountKey,\n            proxyUri\n        };\n    }\n    else {\n        // SAS connection string\n        const accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n        const accountName = getAccountNameFromUrl(blobEndpoint);\n        if (!blobEndpoint) {\n            throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n        }\n        else if (!accountSas) {\n            throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n        }\n        return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n    }\n}\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text) {\n    return encodeURIComponent(text)\n        .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n        .replace(/'/g, \"%27\") // Escape for \"'\"\n        .replace(/\\+/g, \"%20\")\n        .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url, name) {\n    const urlParsed = URLBuilder.parse(url);\n    let path = urlParsed.getPath();\n    path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n    urlParsed.setPath(path);\n    return urlParsed.toString();\n}\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url, name, value) {\n    const urlParsed = URLBuilder.parse(url);\n    urlParsed.setQueryParameter(name, value);\n    return urlParsed.toString();\n}\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url, name) {\n    const urlParsed = URLBuilder.parse(url);\n    return urlParsed.getQueryParameterValue(name);\n}\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url, host) {\n    const urlParsed = URLBuilder.parse(url);\n    urlParsed.setHost(host);\n    return urlParsed.toString();\n}\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url) {\n    const urlParsed = URLBuilder.parse(url);\n    return urlParsed.getPath();\n}\n/**\n * Get URL scheme from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLScheme(url) {\n    const urlParsed = URLBuilder.parse(url);\n    return urlParsed.getScheme();\n}\n/**\n * Get URL path and query from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPathAndQuery(url) {\n    const urlParsed = URLBuilder.parse(url);\n    const pathString = urlParsed.getPath();\n    if (!pathString) {\n        throw new RangeError(\"Invalid url without valid path.\");\n    }\n    let queryString = urlParsed.getQuery() || \"\";\n    queryString = queryString.trim();\n    if (queryString !== \"\") {\n        queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n    }\n    return `${pathString}${queryString}`;\n}\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url) {\n    let queryString = URLBuilder.parse(url).getQuery();\n    if (!queryString) {\n        return {};\n    }\n    queryString = queryString.trim();\n    queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n    let querySubStrings = queryString.split(\"&\");\n    querySubStrings = querySubStrings.filter((value) => {\n        const indexOfEqual = value.indexOf(\"=\");\n        const lastIndexOfEqual = value.lastIndexOf(\"=\");\n        return (indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1);\n    });\n    const queries = {};\n    for (const querySubString of querySubStrings) {\n        const splitResults = querySubString.split(\"=\");\n        const key = splitResults[0];\n        const value = splitResults[1];\n        queries[key] = value;\n    }\n    return queries;\n}\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url, queryParts) {\n    const urlParsed = URLBuilder.parse(url);\n    let query = urlParsed.getQuery();\n    if (query) {\n        query += \"&\" + queryParts;\n    }\n    else {\n        query = queryParts;\n    }\n    urlParsed.setQuery(query);\n    return urlParsed.toString();\n}\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date, withMilliseconds = true) {\n    // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n    const dateString = date.toISOString();\n    return withMilliseconds\n        ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n        : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content) {\n    return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString) {\n    return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @param blockIndex -\n */\nexport function generateBlockID(blockIDPrefix, blockIndex) {\n    // To generate a 64 bytes base64 string, source string should be 48\n    const maxSourceStringLength = 48;\n    // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n    const maxBlockIndexLength = 6;\n    const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n    if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n        blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n    }\n    const res = blockIDPrefix +\n        padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n    return base64encode(res);\n}\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(timeInMs, aborter, abortError) {\n    return new Promise((resolve, reject) => {\n        /* eslint-disable-next-line prefer-const */\n        let timeout;\n        const abortHandler = () => {\n            if (timeout !== undefined) {\n                clearTimeout(timeout);\n            }\n            reject(abortError);\n        };\n        const resolveHandler = () => {\n            if (aborter !== undefined) {\n                aborter.removeEventListener(\"abort\", abortHandler);\n            }\n            resolve();\n        };\n        timeout = setTimeout(resolveHandler, timeInMs);\n        if (aborter !== undefined) {\n            aborter.addEventListener(\"abort\", abortHandler);\n        }\n    });\n}\n/**\n * String.prototype.padStart()\n *\n * @param currentString -\n * @param targetLength -\n * @param padString -\n */\nexport function padStart(currentString, targetLength, padString = \" \") {\n    // @ts-expect-error: TS doesn't know this code needs to run downlevel sometimes\n    if (String.prototype.padStart) {\n        return currentString.padStart(targetLength, padString);\n    }\n    padString = padString || \" \";\n    if (currentString.length > targetLength) {\n        return currentString;\n    }\n    else {\n        targetLength = targetLength - currentString.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + currentString;\n    }\n}\nexport function sanitizeURL(url) {\n    let safeURL = url;\n    if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n        safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n    }\n    return safeURL;\n}\nexport function sanitizeHeaders(originalHeader) {\n    const headers = new HttpHeaders();\n    for (const header of originalHeader.headersArray()) {\n        if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n            headers.set(header.name, \"*****\");\n        }\n        else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n            headers.set(header.name, sanitizeURL(header.value));\n        }\n        else {\n            headers.set(header.name, header.value);\n        }\n    }\n    return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @param str1 -\n * @param str2 -\n */\nexport function iEqual(str1, str2) {\n    return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url) {\n    const parsedUrl = URLBuilder.parse(url);\n    let accountName;\n    try {\n        if (parsedUrl.getHost().split(\".\")[1] === \"blob\") {\n            // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n            accountName = parsedUrl.getHost().split(\".\")[0];\n        }\n        else if (isIpEndpointStyle(parsedUrl)) {\n            // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n            // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n            // .getPath() -> /devstoreaccount1/\n            accountName = parsedUrl.getPath().split(\"/\")[1];\n        }\n        else {\n            // Custom domain case: \"https://customdomain.com/containername/blob\".\n            accountName = \"\";\n        }\n        return accountName;\n    }\n    catch (error) {\n        throw new Error(\"Unable to extract accountName with provided information.\");\n    }\n}\nexport function isIpEndpointStyle(parsedUrl) {\n    if (parsedUrl.getHost() === undefined) {\n        return false;\n    }\n    const host = parsedUrl.getHost() + (parsedUrl.getPort() === undefined ? \"\" : \":\" + parsedUrl.getPort());\n    // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n    // Case 2: localhost(:port), use broad regex to match port part.\n    // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n    // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n    return /^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(host);\n}\n/**\n * Convert Tags to encoded string.\n *\n * @param tags -\n */\nexport function toBlobTagsString(tags) {\n    if (tags === undefined) {\n        return undefined;\n    }\n    const tagPairs = [];\n    for (const key in tags) {\n        if (Object.prototype.hasOwnProperty.call(tags, key)) {\n            const value = tags[key];\n            tagPairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n        }\n    }\n    return tagPairs.join(\"&\");\n}\n/**\n * Convert Tags type to BlobTags.\n *\n * @param tags -\n */\nexport function toBlobTags(tags) {\n    if (tags === undefined) {\n        return undefined;\n    }\n    const res = {\n        blobTagSet: []\n    };\n    for (const key in tags) {\n        if (Object.prototype.hasOwnProperty.call(tags, key)) {\n            const value = tags[key];\n            res.blobTagSet.push({\n                key,\n                value\n            });\n        }\n    }\n    return res;\n}\n/**\n * Covert BlobTags to Tags type.\n *\n * @param tags -\n */\nexport function toTags(tags) {\n    if (tags === undefined) {\n        return undefined;\n    }\n    const res = {};\n    for (const blobTag of tags.blobTagSet) {\n        res[blobTag.key] = blobTag.value;\n    }\n    return res;\n}\n/**\n * Convert BlobQueryTextConfiguration to QuerySerialization type.\n *\n * @param textConfiguration -\n */\nexport function toQuerySerialization(textConfiguration) {\n    if (textConfiguration === undefined) {\n        return undefined;\n    }\n    switch (textConfiguration.kind) {\n        case \"csv\":\n            return {\n                format: {\n                    type: \"delimited\",\n                    delimitedTextConfiguration: {\n                        columnSeparator: textConfiguration.columnSeparator || \",\",\n                        fieldQuote: textConfiguration.fieldQuote || \"\",\n                        recordSeparator: textConfiguration.recordSeparator,\n                        escapeChar: textConfiguration.escapeCharacter || \"\",\n                        headersPresent: textConfiguration.hasHeaders || false\n                    }\n                }\n            };\n        case \"json\":\n            return {\n                format: {\n                    type: \"json\",\n                    jsonTextConfiguration: {\n                        recordSeparator: textConfiguration.recordSeparator\n                    }\n                }\n            };\n        case \"arrow\":\n            return {\n                format: {\n                    type: \"arrow\",\n                    arrowConfiguration: {\n                        schema: textConfiguration.schema\n                    }\n                }\n            };\n        case \"parquet\":\n            return {\n                format: {\n                    type: \"parquet\"\n                }\n            };\n        default:\n            throw Error(\"Invalid BlobQueryTextConfiguration.\");\n    }\n}\nexport function parseObjectReplicationRecord(objectReplicationRecord) {\n    if (!objectReplicationRecord) {\n        return undefined;\n    }\n    if (\"policy-id\" in objectReplicationRecord) {\n        // If the dictionary contains a key with policy id, we are not required to do any parsing since\n        // the policy id should already be stored in the ObjectReplicationDestinationPolicyId.\n        return undefined;\n    }\n    const orProperties = [];\n    for (const key in objectReplicationRecord) {\n        const ids = key.split(\"_\");\n        const policyPrefix = \"or-\";\n        if (ids[0].startsWith(policyPrefix)) {\n            ids[0] = ids[0].substring(policyPrefix.length);\n        }\n        const rule = {\n            ruleId: ids[1],\n            replicationStatus: objectReplicationRecord[key]\n        };\n        const policyIndex = orProperties.findIndex((policy) => policy.policyId === ids[0]);\n        if (policyIndex > -1) {\n            orProperties[policyIndex].rules.push(rule);\n        }\n        else {\n            orProperties.push({\n                policyId: ids[0],\n                rules: [rule]\n            });\n        }\n    }\n    return orProperties;\n}\n/**\n * Attach a TokenCredential to an object.\n *\n * @param thing -\n * @param credential -\n */\nexport function attachCredential(thing, credential) {\n    thing.credential = credential;\n    return thing;\n}\nexport function httpAuthorizationToString(httpAuthorization) {\n    return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n//# sourceMappingURL=utils.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// This file is used as a shim of \"BufferScheduler\" for some browser bundlers\n// when trying to bundle \"BufferScheduler\"\n// \"BufferScheduler\" class is only available in Node.js runtime\nexport class BufferScheduler {\n}\n//# sourceMappingURL=BufferScheduler.browser.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport * from \"./BufferScheduler.browser\";\n//# sourceMappingURL=index.browser.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], args));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\nexport { ContextAPI };\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel, } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var logger = getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, \n                // work around Function.prototype.apply types\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                arguments);\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        self.setLogger = function (logger, logLevel) {\n            var _a, _b;\n            if (logLevel === void 0) { logLevel = DiagLogLevel.INFO; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            var oldLogger = getGlobal('diag');\n            var newLogger = createLogLevelDiagLogger(logLevel, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger) {\n                var stack = (_b = new Error().stack) !== null && _b !== void 0 ? _b : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return registerGlobal('diag', newLogger, self, true);\n        };\n        self.disable = function () {\n            unregisterGlobal(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexport { DiagAPI };\n//# sourceMappingURL=diag.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter, } from '../propagation/TextMapPropagator';\nimport { getBaggage, setBaggage, deleteBaggage, } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = createBaggage;\n        this.getBaggage = getBaggage;\n        this.setBaggage = setBaggage;\n        this.deleteBaggage = deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexport { PropagationAPI };\n//# sourceMappingURL=propagation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext, } from '../trace/spancontext-utils';\nimport { deleteSpan, getSpan, getSpanContext, setSpan, setSpanContext, } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider();\n        this.wrapSpanContext = wrapSpanContext;\n        this.isSpanContextValid = isSpanContextValid;\n        this.deleteSpan = deleteSpan;\n        this.getSpan = getSpan;\n        this.getSpanContext = getSpanContext;\n        this.setSpan = setSpan;\n        this.setSpanContext = setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n        this._proxyTracerProvider = new ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexport { TraceAPI };\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=Exception.js.map","export {};\n//# sourceMappingURL=Time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], args));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexport { NoopContextManager };\n//# sourceMappingURL=NoopContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n    var logger = getGlobal('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, args);\n}\n//# sourceMappingURL=ComponentLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar consoleMap = [\n    { n: 'error', c: 'error' },\n    { n: 'warn', c: 'warn' },\n    { n: 'info', c: 'info' },\n    { n: 'debug', c: 'debug' },\n    { n: 'verbose', c: 'trace' },\n];\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nvar DiagConsoleLogger = /** @class */ (function () {\n    function DiagConsoleLogger() {\n        function _consoleFunc(funcName) {\n            return function () {\n                var orgArguments = arguments;\n                if (console) {\n                    // Some environments only expose the console when the F12 developer console is open\n                    var theFunc = console[funcName];\n                    if (typeof theFunc !== 'function') {\n                        // Not all environments support all functions\n                        theFunc = console.log;\n                    }\n                    // One last final check\n                    if (typeof theFunc === 'function') {\n                        return theFunc.apply(console, orgArguments);\n                    }\n                }\n            };\n        }\n        for (var i = 0; i < consoleMap.length; i++) {\n            this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n        }\n    }\n    return DiagConsoleLogger;\n}());\nexport { DiagConsoleLogger };\n//# sourceMappingURL=consoleLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './consoleLogger';\nexport * from './types';\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < DiagLogLevel.NONE) {\n        maxLevel = DiagLogLevel.NONE;\n    }\n    else if (maxLevel > DiagLogLevel.ALL) {\n        maxLevel = DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', DiagLogLevel.WARN),\n        info: _filterFunc('info', DiagLogLevel.INFO),\n        debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport * from './common/Exception';\nexport * from './common/Time';\nexport * from './diag';\nexport * from './propagation/TextMapPropagator';\nexport * from './trace/attributes';\nexport * from './trace/link';\nexport * from './trace/ProxyTracer';\nexport * from './trace/ProxyTracerProvider';\nexport * from './trace/Sampler';\nexport * from './trace/SamplingResult';\nexport * from './trace/span_context';\nexport * from './trace/span_kind';\nexport * from './trace/span';\nexport * from './trace/SpanOptions';\nexport * from './trace/status';\nexport * from './trace/trace_flags';\nexport * from './trace/trace_state';\nexport * from './trace/tracer_provider';\nexport * from './trace/tracer';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId, } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, } from './trace/invalid-span-constants';\nexport * from './context/context';\nexport * from './context/types';\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\nexport default {\n    trace: trace,\n    context: context,\n    propagation: propagation,\n    diag: diag,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error('@opentelemetry/api: All API registration versions must match');\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n    return true;\n}\nexport function getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n//# sourceMappingURL=semver.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object' ? globalThis : window;\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './globalThis';\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexport { NoopTextMapPropagator };\n//# sourceMappingURL=NoopTextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexport var defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\nexport { NonRecordingSpan };\n//# sourceMappingURL=NonRecordingSpan.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar context = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NonRecordingSpan();\n        }\n        var parentFromContext = context && getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            isSpanContextValid(parentFromContext)) {\n            return new NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : context.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = setSpan(parentContext, span);\n        return context.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version) {\n        return new NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\nexport { NoopTracerProvider };\n//# sourceMappingURL=NoopTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexport { ProxyTracer };\n//# sourceMappingURL=ProxyTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);\n    };\n    return ProxyTracerProvider;\n}());\nexport { ProxyTracerProvider };\n//# sourceMappingURL=ProxyTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=Sampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=SpanOptions.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=link.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=span_context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n    return new NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map","/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=trace_state.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {};\n//# sourceMappingURL=tracer_provider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.0.3';\n//# sourceMappingURL=version.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar canReportError_1 = require(\"./util/canReportError\");\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\nvar observable_1 = require(\"./symbol/observable\");\nvar pipe_1 = require(\"./util/pipe\");\nvar config_1 = require(\"./config\");\nvar Observable = (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError_1.canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config_1.config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError_1.hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"./Observable\");\nvar Subscriber_1 = require(\"./Subscriber\");\nvar Subscription_1 = require(\"./Subscription\");\nvar ObjectUnsubscribedError_1 = require(\"./util/ObjectUnsubscribedError\");\nvar SubjectSubscription_1 = require(\"./SubjectSubscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscription_1 = require(\"./Subscription\");\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError_1.hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexports.SafeSubscriber = SafeSubscriber;\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./util/isArray\");\nvar isObject_1 = require(\"./util/isObject\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nvar Subscription = (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexports.config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.observable = (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rxSubscriber = (function () {\n    return typeof Symbol === 'function'\n        ? Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + Math.random();\n})();\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ObjectUnsubscribedErrorImpl = (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexports.ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnsubscriptionErrorImpl = (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexports.UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber_1.Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\nexports.canReportError = canReportError;\n//# sourceMappingURL=canReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\nexports.hostReportError = hostReportError;\n//# sourceMappingURL=hostReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction identity(x) {\n    return x;\n}\nexports.identity = identity;\n//# sourceMappingURL=identity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar identity_1 = require(\"./identity\");\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\nfunction pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity_1.identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar rxSubscriber_1 = require(\"../symbol/rxSubscriber\");\nvar Observer_1 = require(\"../Observer\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","import { Directive, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[onCreate]'\n})\nexport class OnCreateDirective {\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor() { }\r\n    ngOnInit() {\r\n        this.onCreate.emit('dummy');\r\n    } \n\n}\n","import { Component, OnInit, Input, EventEmitter, Output, forwardRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ImageserviceService } from '../invoice/services/imageservice.service';\r\nimport { InvoiceService } from '../invoice/services/invoice.service';\r\nimport { IsValidFileSize } from 'src/app/app.constants';\r\nimport { Declarations } from '../declarations.module';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-imageupload',\r\n\ttemplateUrl: './imageupload.component.html',\r\n\tstyleUrls: ['./imageupload.component.css'],\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\tuseExisting: forwardRef(() => ImageuploadComponent),\r\n\t\t\tmulti: true\r\n\t\t}\r\n\t]\r\n})\r\n\r\nexport class ImageuploadComponent implements OnInit, OnChanges {\r\n\r\n\tpublic files = new Array<FileInfo>();\r\n\tpublic sas: string;\r\n\tpublic funcs = [];\r\n\tpublic imageForm: FormGroup;\r\n\t@Input() invoice: boolean;\r\n\t@Input() additional: boolean;\r\n\t@Input() signature: boolean;\r\n\t@Input() isBol: boolean;\r\n\t@Input() isLift: boolean;\r\n\t@Input() fileType: string;\r\n\t@Input() orderId: string;\r\n\t@Input() completeInvoiceViewModel: any;\r\n\t@Input() inputFile = new Array<FileInfo>();\r\n\t@Input() TaxAffidavit: boolean;\r\n\t@Input() BDNImage : boolean;\r\n\t@Input() CoastGuardInspection: boolean;\r\n\t@Input() InspectionRequestVoucher: boolean;\r\n\tpublic ContainerName = \"invoicepdffiles\";\r\n\t@Output() onImageUpload: EventEmitter<any> = new EventEmitter<any>();\r\n\tpublic currentInstance: any;\r\n\tpublic uploadFunc: any;\r\n\tpublic FileUrls: string;\r\n\r\n\tconstructor(private imageservice: ImageserviceService, private fb: FormBuilder, private invoiceservice: InvoiceService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.imageForm = this.fb.group({\r\n\t\t\tImage: this.fb.control(''), // actural image content \r\n\t\t\tFileUrl: this.fb.control('') // hidden form control to set the value for file url received\r\n\t\t});\r\n\t\tthis.currentInstance = this;\r\n\t\tthis.uploadFunc = this.UploadFile;\r\n\t\tthis.FileUrls = \"\";\r\n\t}\r\n\r\n\tngOnChanges(change: SimpleChanges) {\r\n\t\tif (change.inputFile && change.inputFile.currentValue != null) {\r\n\t\t\tthis.files = (change.inputFile.currentValue as FileInfo[]);\r\n\t\t}\r\n\t}\r\n\r\n\tonImageSelect(event) {\r\n\t\tthis.files = new Array<FileInfo>();\r\n\t\tif (event.target.files && event.target.files[0]) {\r\n\t\t\tvar fileNumber = event.target.files.length;\t\t\r\n\t\t\t//validate file size for each file(jpg/pdf both). Continue only if all files are of valid size.\r\n\t\t\tfor (let i = 0; i < fileNumber; i++) {\r\n\t\t\t\tvar fileSize = event.target.files[i].size;\r\n\t\t\t\tvar currentFileName = event.target.files[i].name;\r\n\t\t\t\tif (!IsValidFileSize(fileSize)) {\r\n\t\t\t\t\tDeclarations.msgerror(\"File Size excceds 5 MB for file \" + currentFileName, undefined, undefined);\r\n\t\t\t\t\tthis.imageForm.reset();\r\n\r\n\t\t\t\t\treturn false;\r\n                }\r\n            }\r\n\t\t\tfor (let i = 0; i < fileNumber; i++) {\r\n\t\t\t\tvar currentFileName = event.target.files[i].name;\r\n\t\t\t\tvar fileSize = event.target.files[i].size;\r\n\t\t\t\t\tvar extension = currentFileName.split('.').pop();\r\n\t\t\t\t\tvar image = event.target.files[i];\r\n\t\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\t\treader[\"currentFileName\"] = currentFileName;\r\n\t\t\t\t\treader[\"image\"] = image;\r\n\t\t\t\t\tthis.funcs[i] = this.createOnloadFunction(currentFileName, image);\r\n\t\t\t\t\treader.onload = (event2: any) => this.funcs[i](event2);\r\n\t\t\t\t\treader.readAsDataURL(event.target.files[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//ngOnChanges(change: SimpleChanges) {\r\n\t//    if (change.orderId && change.orderId.currentValue != null) {\r\n\r\n\t//    }\r\n\t//}\r\n\r\n\tpublic createOnloadFunction(currentFileName, image) {\r\n\t\tvar self = this;\r\n\t\treturn function (event2) {\r\n\t\t\tvar file = new FileInfo();\r\n\t\t\tfile.Name = currentFileName;\r\n\t\t\tfile.Image = image;\r\n\t\t\tfile.Extension = file.Name.split('.').pop();\r\n\t\t\tfile.IsNewFile = true;\r\n\t\t\tif (file.Extension.toLowerCase() == 'pdf') {\r\n\t\t\t\tfile.IsPdf = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfile.IsPdf = false;\r\n\t\t\t}\r\n\t\t\tfile.AzurePath = event2.target.result;\r\n\t\t\tself.files.push(file);\r\n\t\t};\r\n\t}\r\n\r\n\tpublic GetSasForBlob() {\r\n\t\treturn this.invoiceservice.getSASforblobStorage().toPromise().then(x => {\r\n\t\t\tthis.sas = x\r\n\t\t\treturn x;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic UploadFile(entireInvoiceModel, sas) {\r\n\t\tif (this.fileType == \"BDN\" || this.fileType == \"TaxAffidavit\" || this.fileType == \"CoastGuardInspection\" || this.fileType == \"InspectionRequestVoucher\") {\r\n\t\t\t//this.ContainerName = \"bdn\";\r\n\t\t\tvar mnth=new Date().getMonth() + 1;\r\n\t\t\tthis.ContainerName = \"bdn\" + \"-\" + mnth + \"-\" + new Date().getFullYear();\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.ContainerName = \"invoicepdffiles\"\r\n\t\t//else\r\n\t\t//this.ContainerName=this.ContainerName+\"_\"+new Date().getMonth()+\"_\"+new Date().getFullYear();\r\n\t\tvar self = this;\r\n\t\treturn self.imageservice.uploadImageToBlob(sas, this.files, this.files, this.fileType, this.orderId, entireInvoiceModel, this.ContainerName);\r\n\t}\r\n\r\n\r\n\t// control value accessors \r\n\tpublic onTouched: () => void = () => { };\r\n\r\n\twriteValue(val: any): void {\r\n\t\tval && this.imageForm.setValue(val, { emitEvent: true });\r\n\t}\r\n\tregisterOnChange(fn: any): void {\r\n\t\tthis.imageForm.valueChanges.subscribe(fn);\r\n\t}\r\n\tregisterOnTouched(fn: any): void {\r\n\t\tthis.onTouched = fn;\r\n\t}\r\n\tsetDisabledState?(isDisabled: boolean): void {\r\n\t\tisDisabled ? this.imageForm.disable() : this.imageForm.enable();\r\n\t}\r\n}\r\n\r\nexport class FileInfo {\r\n\tpublic Name: string;\r\n\tpublic Extension: string;\r\n\tpublic Image: any;\r\n\tpublic IsPdf: boolean;\r\n\tpublic AzurePath: string;\r\n\tpublic FileUrl: string = \"\";\r\n\tpublic IsNewFile: boolean;\r\n\tpublic url: string;\r\n\tpublic FilePath: string;\r\n}\r\n\r\n\r\n","<!--Invoice image starts-->\r\n<div [formGroup]=\"imageForm\">\r\n    <div class=\"overflow-h\">\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left fs18\" *ngIf=\"isBol\">BOL Image </h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left fs18\" *ngIf=\"isLift\">Lift Ticket Image </h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"invoice\">Drop Image</h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"additional\">Additional Images </h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"signature\">Signature Image</h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"TaxAffidavit\">Tax Affidavit</h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"BDNImage\">BDN Image</h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"CoastGuardInspection\">Coast Guard Inspection</h4>\r\n        <h4 class=\"mt0 pt0 dib mb5 pull-left\" *ngIf=\"InspectionRequestVoucher\">Inspection Request Voucher</h4>\r\n        <div class=\"dib ml10 mt0 pull-left\">\r\n            <div class=\"upload-btn-wrapper\">\r\n                <!--<button class=\"btn btn-default btn-xs\"></button>-->\r\n                <i class=\"fas fa-plus-circle fs21 color-blue\"></i>\r\n                <input type=\"file\" (change)=\"onImageSelect($event)\" formControlName=\"Image\" multiple />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"color-orange\" *ngIf=\"files.length==0\">No image selected</div>\r\n        <div>\r\n            <div *ngFor=\"let item of files\" class=\"dib mb5 thumb-wrapper\">\r\n                <img *ngIf=\"item.IsPdf==false\" [src]=\"item.AzurePath\" class=\"img-thumbnail mr5 img-thumb\" />  <!--rendered if file is image -->\r\n                <img *ngIf=\"item.IsPdf\" src=\"../../../Content/images/ico-thumbnailpdf.png\" [title]=\"item.Name\" class=\"pdf-thumb img-thumbnail mr5\" />   <!--rendered if file is image -->\r\n                <input type=\"hidden\" [value]=\"item.FileUrl\" formControlName=\"FileUrl\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!--<div class=\"btn-upload btn btn-default btn-xs\" (click)=\"UploadFile()\">Submit</div>-->\r\n</div>\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, ValidationErrors } from '@angular/forms';\r\nimport { AssetDropModel, DropDetailModel, DropQuantityByPrePostDipRequestModel, DropQuantityByPrePostDipResponseModel} from '../models/DropDetail';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { InvoiceService } from '../services/invoice.service';\r\nimport { ValidationService } from 'src/app/services/validation.service';\r\n\r\n@Component({\r\n    selector: 'app-asset-list',\r\n    templateUrl: './asset-list.component.html',\r\n    styleUrls: ['./asset-list.component.css']\r\n})\r\nexport class AssetListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() public Parent: FormGroup;\r\n    @Input() public Drops: DropDetailModel[];\r\n    @Input() SelectedAssets: AssetDropModel[];\r\n    @Input() UoM: string;\r\n    @Input() IsSelectedMT:boolean;\r\n\r\n    //@Output() onDropQuantityUpdate: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public IsDipDataRequired: boolean;\r\n\r\n    public UOMsForDipTest: DropdownItem[] = [];\r\n    public IsCalculating: boolean = false;\r\n\r\n    constructor(private fb: FormBuilder, private invoiceService: InvoiceService, private validationService: ValidationService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.Parent.addControl('Assets', this.fb.array([]));\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.SelectedAssets && change.SelectedAssets.currentValue != null) {\r\n\r\n            if (this.SelectedAssets != undefined) \r\n                this.showAssets(this.SelectedAssets);           \r\n        }\r\n        if (change.UoM && change.UoM.currentValue != null) {             \r\n            var uom = change.UoM.currentValue;\r\n            this.setUoM(uom);  \r\n            this.CreateUOMsListForDipTestCalculation();\r\n        }\r\n        if (change.IsSelectedMT && change.IsSelectedMT.currentValue != null) {             \r\n            this.IsSelectedMT = change.IsSelectedMT.currentValue;\r\n        }\r\n        if (change.Parent && change.Parent.currentValue != null) {\r\n            var drop = change.Parent.currentValue as FormGroup;\r\n            this.IsDipDataRequired = drop.get('IsDipDataRequired').value;\r\n            if (this.IsDipDataRequired && this.SelectedAssets && this.SelectedAssets.length > 0) {\r\n                this.setDipDataValidatorForInvoiceConversion();\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    getNewAsset(asset: AssetDropModel): FormGroup {\r\n        var form = this.fb.group({\r\n            Id: this.fb.control(asset.Id),\r\n            AssetName: this.fb.control(asset.AssetName, [Validators.required]),\r\n            JobXAssetId: this.fb.control(asset.JobXAssetId),\r\n            DropGallons: this.fb.control(asset.DropGallons, [(Validators.required), Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]),\r\n            StartTime: this.fb.control(asset.StartTime, [Validators.required]),\r\n            EndTime: this.fb.control(asset.EndTime, [Validators.required]),\r\n            IsNewAsset: this.fb.control(asset.IsNewAsset),\r\n            PreDip: this.fb.control(asset.PreDip),\r\n            PostDip: this.fb.control(asset.PostDip),\r\n            TankMakeModel: this.fb.control(asset.TankMakeModel),\r\n            TankScaleMeasurement: this.fb.control(asset.TankScaleMeasurement)\r\n        });       \r\n        var _assetForm = this.setDipDataValidators(form, this.IsDipDataRequired);\r\n        return _assetForm;\r\n\r\n    }\r\n\r\n    setDipDataValidators(assetForm: FormGroup, IsDipDataRequired: boolean): FormGroup {\r\n        if (IsDipDataRequired) {\r\n            assetForm.get('PreDip').setValidators([Validators.required,Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]);\r\n            assetForm.get('PostDip').setValidators([Validators.required, Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]);           \r\n        }\r\n        return assetForm;\r\n    }\r\n    setDipDataValidatorForInvoiceConversion() {\r\n        var assetArray = this.Parent.get('Assets') as FormArray;\r\n        var _dropQuantityFormControls = assetArray.controls;\r\n        if (_dropQuantityFormControls != undefined && _dropQuantityFormControls != null) {\r\n            _dropQuantityFormControls.forEach(function (formControl) {\r\n                formControl.get('PreDip').setValidators([Validators.required, Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]);\r\n                formControl.get('PostDip').setValidators([Validators.required, Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]);\r\n            });\r\n        }\r\n    }\r\n    setUoM(UOM: string) {\r\n        this.UoM = UOM;\r\n    }\r\n    //setActualDropQuantity() {\r\n        // var totalQuantity = 0;\r\n        // var assets = <FormArray>this.Parent.get('Assets');\r\n        // assets.controls.forEach((x: FormGroup) => {\r\n        //     var dropGallons = x.get('DropGallons');\r\n        //     if (dropGallons.value != null && dropGallons.value != undefined && dropGallons.value != '') {\r\n        //         totalQuantity = totalQuantity + parseFloat(dropGallons.value);\r\n        //     }\r\n        // });\r\n        // totalQuantity = parseFloat(totalQuantity.toFixed(8));\r\n        // this.Parent.get('ActualDropQuantity').setValue(totalQuantity);\r\n        // this.onDropQuantityUpdate.emit(totalQuantity);\r\n    //}\r\n\r\n    validateSumOfAssetQuantity() {\r\n\r\n        let assets = <FormArray>this.Parent.get('Assets');\r\n\r\n        if (assets.controls.length > 0) {\r\n\r\n            let sumOfAssetQuantity = assets.value.reduce((a, b) => +a + +b.DropGallons, 0);\r\n            let isQuantityMismatch = sumOfAssetQuantity != this.Parent.get('ActualDropQuantity').value && this.Parent.get('ActualDropQuantity').value > 0;\r\n\r\n            assets.controls.forEach((asset: FormGroup) => {\r\n                if (isQuantityMismatch)\r\n                    this.validationService.addError(asset.get('DropGallons'), 'isQuantityMismatch');\r\n                else\r\n                    this.validationService.removeError(asset.get('DropGallons'), 'isQuantityMismatch');\r\n            });\r\n        }\r\n    }\r\n\r\n    addNewAsset(): void {\r\n        var asset = new AssetDropModel();\r\n        asset.IsNewAsset = true;\r\n        (<FormArray>this.Parent.get('Assets')).push(this.getNewAsset(asset));\r\n        this.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    removeAsset(idx: number) {\r\n        (<FormArray>this.Parent.get('Assets')).removeAt(idx);\r\n        //this.setActualDropQuantity();\r\n        this.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    showAssets(assets: AssetDropModel[]): void {        \r\n        var assetArray = this.Parent.get('Assets') as FormArray;\r\n        var current = this; var existingAssets = [];\r\n        assetArray.controls.forEach(function (control, idx) {\r\n            var asset = assets.find(function (elem, idx2) {\r\n                return elem.JobXAssetId == control.get('JobXAssetId').value\r\n                    && elem.AssetName == control.get('AssetName').value;\r\n            });\r\n            if (asset != undefined) {\r\n                existingAssets.push(asset)\r\n            }\r\n        });\r\n        var newAssets = assets.filter(function (el) {\r\n            return existingAssets.indexOf(el) < 0;\r\n        });\r\n        newAssets.forEach(function (model, idx) {\r\n            assetArray.push(current.getNewAsset(model));\r\n        });\r\n    }\r\n\r\n    removeAssets(assets: AssetDropModel[]): void {\r\n        var assetArray = this.Parent.get('Assets') as FormArray;\r\n        var removedIndex;\r\n        assetArray.controls.forEach(function (control, idx) {\r\n            var asset = assets.find(function (elem, idx2) {\r\n                return elem.JobXAssetId == control.get('JobXAssetId').value\r\n                    && elem.AssetName == control.get('AssetName').value;\r\n            });\r\n            if (asset != undefined) {\r\n                removedIndex = idx;\r\n            }\r\n        });\r\n        if (removedIndex >= 0) {\r\n            assetArray.removeAt(removedIndex);\r\n        }\r\n        //this.setActualDropQuantity();\r\n    }\r\n\r\n    //------------------------------------------\r\n\r\n    public showSelectedAsset(item: any) {\r\n        let assets: AssetDropModel[] = [];\r\n        let thisDrop = this.Drops.find(x => x.OrderId == this.Parent.controls['OrderId'].value);\r\n        if (thisDrop) {\r\n            //this.Drops.forEach(function (e) {\r\n            thisDrop.Assets.forEach(function (e1) {\r\n                if (e1.JobXAssetId == item.JobXAssetId && e1.AssetName == item.AssetName && assets.indexOf(e1) == -1) {\r\n                    assets.push(e1);\r\n                }\r\n            });\r\n            //});\r\n        }\r\n        assets = Array.from(new Set(assets))\r\n        this.showAssets(assets);\r\n        this.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    public showSelectedAssets(item: AssetDropModel[]) {\r\n        let orderId = (item != null && item != undefined) ? item[0].OrderId : 0;\r\n        let assets: AssetDropModel[] = [];\r\n        this.Drops.forEach(function (e) {\r\n            if (e.OrderId == orderId) {\r\n                e.Assets.forEach(function (ast) {\r\n                    assets.push(ast);\r\n                })\r\n            }\r\n        });\r\n        assets = Array.from(new Set(assets))\r\n        this.showAssets(assets);\r\n        this.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    public removeUnselected(item: any) {\r\n        let assets: AssetDropModel[] = [];\r\n        this.Drops.forEach(function (e) {\r\n            e.Assets.forEach(function (e1) {\r\n                if (e1.JobXAssetId == item.JobXAssetId && e1.AssetName == item.AssetName) {\r\n                    assets.push(e1);\r\n                }\r\n            });\r\n        });\r\n        this.removeAssets(assets);\r\n        //this.setActualDropQuantity();\r\n        this.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    public removeAllUnselected(item: any) {\r\n        var assetArray = this.Parent.get('Assets') as FormArray;\r\n        assetArray.clear();\r\n        //this.setActualDropQuantity();\r\n        this.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    public CreateUOMsListForDipTestCalculation() {\r\n        let _centrimeteruom = new DropdownItem;\r\n        _centrimeteruom.Id = 1; //CM\r\n        _centrimeteruom.Name = 'cm';\r\n        this.UOMsForDipTest.push(_centrimeteruom);\r\n\r\n        let _inchuom = new DropdownItem;\r\n        _inchuom.Id = 2; //in\r\n        _inchuom.Name = 'in';\r\n        this.UOMsForDipTest.push(_inchuom);\r\n\r\n        if (this.UoM == 'Gallons') {\r\n            let _gallonsuom = new DropdownItem;\r\n            _gallonsuom.Id = 3; //Gallons\r\n            _gallonsuom.Name = 'Gallons';\r\n            this.UOMsForDipTest.push(_gallonsuom);\r\n        }\r\n        else if (this.UoM == 'Litres')\r\n        {\r\n            let litreUom = new DropdownItem;\r\n            litreUom.Id = 3; //Gallons\r\n            litreUom.Name = 'Litres';\r\n            this.UOMsForDipTest.push(litreUom);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public CalculateDropQuantitiesFromPrePostDip() {\r\n        let assetsInfo: Array<AssetDropModel> = [];\r\n\r\n        var addedAssets = this.Parent.get('Assets').value as AssetDropModel[];\r\n        //Check for no assets added\r\n        if (addedAssets == null || addedAssets == undefined || addedAssets.length == 0) {\r\n            Declarations.msgerror(\"Assets/Tanks not added\", undefined, undefined);\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            var incompleteInfoAssets = addedAssets.filter(t => (t.PreDip == null ||t.PostDip == null) && !t.IsNewAsset);\r\n            var missingUoMAssets = addedAssets.filter(t => (t.PreDip != null && t.PostDip != null && (t.TankScaleMeasurement == null || t.TankScaleMeasurement == 0)) && !t.IsNewAsset)\r\n            //console.log(\"incompleteInfoAssets ==>\");\r\n            //console.log(incompleteInfoAssets);\r\n            if (incompleteInfoAssets != null && incompleteInfoAssets != undefined && incompleteInfoAssets.length > 0) {\r\n                Declarations.msgerror(\"Please Provide Required PreDip/PostDip\", undefined, undefined);\r\n                // To trigger validations\r\n                let assetsFormArray = this.Parent.get('Assets') as FormArray;\r\n                assetsFormArray.controls.forEach(function (control) {\r\n                    let isNewAsset = control.get('IsNewAsset').value;\r\n                    if (!isNewAsset) {\r\n                        control.get('PreDip').markAsTouched();\r\n                        control.get('PostDip').markAsTouched()\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            else if (missingUoMAssets != null && missingUoMAssets != undefined && missingUoMAssets.length > 0) {\r\n                Declarations.msgerror(\"Please Provide Required UoM(s)\", undefined, undefined);\r\n               // this.Parent.get('Assets').markAllAsTouched();// To trigger validations\r\n                 \r\n                return;\r\n            }\r\n            else \r\n            {\r\n                assetsInfo = addedAssets.filter(t => t.PreDip != null && t.PostDip != null && t.TankScaleMeasurement != null && t.JobXAssetId > 0 && !t.IsNewAsset)\r\n                if (assetsInfo != null && assetsInfo != undefined && assetsInfo.length > 0) {\r\n                    this.IsCalculating = true;\r\n                    this.invoiceService.postPrePostAssetsInfo(assetsInfo).subscribe((data) => {\r\n                        this.IsCalculating = false;\r\n                        let response = data as DropQuantityByPrePostDipResponseModel[];\r\n                        if (response != undefined && response != null && response.length > 0) {\r\n                            let assetsFormArray = this.Parent.get('Assets') as FormArray;\r\n                            response.forEach(function (obj) {\r\n                                var _group = assetsFormArray.controls.find(function (control) {\r\n                                    return control.get('JobXAssetId').value == obj.JobxAssetId; \r\n                                });\r\n                                if (obj.StatusCode == 0)//Success\r\n                                {\r\n                                    if (_group != undefined && _group != null && obj.DropQuantity != null) {\r\n                                        _group.get('DropGallons').setValue(obj.DropQuantity);\r\n                                    }\r\n                                }\r\n                                else if (obj.StatusCode == 1)//Failed \r\n                                {\r\n                                    let assetName = _group.get('AssetName').value;\r\n                                    let errMessage = \"Error Ocurred when calculating quantity for asset/Tank  \" + assetName + \" . \" + obj.StatusMessage\r\n                                    Declarations.msgerror(errMessage, undefined, undefined);\r\n                                }\r\n                                else if (obj.StatusCode == 2) {\r\n                                    let assetName = _group.get('AssetName').value;\r\n                                    let errMessage = obj.StatusMessage + assetName + \" . \"\r\n                                    Declarations.msgerror(errMessage, undefined, undefined);\r\n                                }\r\n                            });\r\n                            //this.setActualDropQuantity();\r\n                        }\r\n                        else {\r\n                            Declarations.msgerror(\"An error occurred when calculating quantities\", undefined, undefined);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    public isDisable(asset: FormGroup, isdipdataRequired: any) {\r\n        if (asset) {\r\n            if (!asset.get('IsNewAsset').value && isdipdataRequired)\r\n                return true;\r\n            else \r\n                return false;\r\n        }\r\n        return false;\r\n    }\r\n    public ValidateAssetTime(asset: FormGroup, ValidationTriggedFrom: string, dropForm: FormGroup) {\r\n        if (ValidationTriggedFrom === 'assetList') {\r\n            let drop = this.Parent.value as DropDetailModel;\r\n            let stringDropStartTime = drop.StartTime;\r\n            let stringDropEndTime = drop.EndTime;\r\n            let stringAssetStartTime = asset.get('StartTime').value;\r\n            let stringAssetEndTime = asset.get('EndTime').value;\r\n            if ((stringDropStartTime != null && stringDropStartTime != undefined && stringDropStartTime != '')\r\n                && (stringDropEndTime != null && stringDropEndTime != undefined && stringDropEndTime != '')\r\n                && (stringAssetStartTime != null && stringAssetStartTime != undefined && stringAssetStartTime != '')\r\n                && (stringAssetEndTime != null && stringAssetEndTime != undefined && stringAssetEndTime != '')) {\r\n                //let dropStartTime = new Date().setHours(this.GetHours(stringDropStartTime), this.GetMinutes(stringDropStartTime), this.GetSeconds(stringDropStartTime));\r\n                let dropStartTime = parseInt(this.getSeconds(this.convertTo24Hour(stringDropStartTime)));\r\n                let dropEndTime = parseInt(this.getSeconds(this.convertTo24Hour(stringDropEndTime)));\r\n                //let dropEndTime = new Date().setHours(this.GetHours(stringDropEndTime), this.GetMinutes(stringDropEndTime), this.GetSeconds(stringDropEndTime));\r\n                let assetStartTime = parseInt(this.getSeconds(this.convertTo24Hour(stringAssetStartTime)));\r\n                let assetEndTime = parseInt(this.getSeconds(this.convertTo24Hour(stringAssetEndTime)));\r\n                //let assetStartTime = new Date().setHours(this.GetHours(stringAssetStartTime), this.GetMinutes(stringAssetStartTime), this.GetSeconds(stringAssetStartTime));\r\n               // let assetEndTime = new Date().setHours(this.GetHours(stringAssetEndTime), this.GetMinutes(stringAssetEndTime), this.GetSeconds(stringAssetEndTime));\r\n\r\n                if ((assetStartTime < dropStartTime) || (assetEndTime > dropEndTime)) {\r\n                    if (assetStartTime < dropStartTime) {\r\n                        asset.get('StartTime').setErrors({ invalidDropTime: true });\r\n                    }\r\n                    if (assetEndTime > dropEndTime) {\r\n                        asset.get('EndTime').setErrors({ invalidDropTime: true });\r\n                    }\r\n                }\r\n                else {\r\n                    if (asset.get('StartTime').hasError('invalidDropTime')) {\r\n                        asset.get('StartTime').setErrors(null);\r\n                    }\r\n                    if (asset.get('EndTime').hasError('invalidDropTime')) {\r\n                        asset.get('EndTime').setErrors(null);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if (ValidationTriggedFrom === 'productDetail') {\r\n            if (dropForm != null && dropForm != undefined) {\r\n                let stringDropStartTime = dropForm.get('StartTime').value;\r\n                let stringDropEndTime = dropForm.get('EndTime').value;\r\n                if ((stringDropStartTime != null && stringDropStartTime != undefined && stringDropStartTime != '')\r\n                    && (stringDropEndTime != null && stringDropEndTime != undefined && stringDropEndTime != '')) {\r\n                    //let dropStartTime = new Date().setHours(this.GetHours(stringDropStartTime), this.GetMinutes(stringDropStartTime), this.GetSeconds(stringDropStartTime) );\r\n                    //let dropEndTime = new Date().setHours(this.GetHours(stringDropEndTime), this.GetMinutes(stringDropEndTime), this.GetSeconds(stringDropEndTime));\r\n                    let dropStartTime = parseInt(this.getSeconds(this.convertTo24Hour(stringDropStartTime)));\r\n                    let dropEndTime = parseInt(this.getSeconds(this.convertTo24Hour(stringDropEndTime)));\r\n\r\n                    let assetArray = dropForm.controls['Assets']['controls'] as FormArray;\r\n                    if (assetArray != null && assetArray != undefined && assetArray.length > 0) {\r\n                        for (let idx = 0; idx < assetArray.length; idx++) {\r\n                            let stringAssetStartTime = assetArray[idx].get('StartTime').value;\r\n                            let stringAssetEndTime = assetArray[idx].get('EndTime').value;\r\n                            if ((stringAssetStartTime != undefined && stringAssetStartTime != null && stringAssetStartTime != '')\r\n                                && (stringAssetEndTime != undefined && stringAssetEndTime != null && stringAssetEndTime != '')) {\r\n\r\n                                let assetStartTime = parseInt(this.getSeconds(this.convertTo24Hour(stringAssetStartTime)));\r\n                                let assetEndTime = parseInt(this.getSeconds(this.convertTo24Hour(stringAssetEndTime)));\r\n\r\n                                //let assetStartTime = new Date().setHours(this.GetHours(stringAssetStartTime), this.GetMinutes(stringAssetStartTime), this.GetSeconds(stringAssetStartTime) );\r\n                              //  let assetEndTime = new Date().setHours(this.GetHours(stringAssetEndTime), this.GetMinutes(stringAssetEndTime), this.GetSeconds(stringAssetEndTime));\r\n                                if ((assetStartTime < dropStartTime) || (assetEndTime > dropEndTime)) {\r\n                                    if (assetStartTime < dropStartTime) {\r\n                                        assetArray[idx].get('StartTime').setErrors({ invalidDropTime: true });\r\n                                    }\r\n                                    if (assetEndTime > dropEndTime) {\r\n                                        assetArray[idx].get('EndTime').setErrors({ invalidDropTime: true });\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (assetArray[idx].get('StartTime').hasError('invalidDropTime')) {\r\n                                        assetArray[idx].get('StartTime').setErrors(null);\r\n                                    }\r\n                                    if (assetArray[idx].get('EndTime').hasError('invalidDropTime')) {\r\n                                        assetArray[idx].get('EndTime').setErrors(null);\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                            \r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n                \r\n                            \r\n            }\r\n        }                           \r\n    }\r\n\r\n    //public GetHours(d) {\r\n    //    var h = parseInt(d.split(':')[0]);\r\n    //    if (d.split(':')[1].split(' ')[1] == \"PM\") {\r\n    //        h = h + 12;\r\n    //    }\r\n    //    return h;\r\n    //}\r\n    //public GetMinutes(d) {\r\n    //    return parseInt(d.split(':')[1].split(' ')[0]);\r\n    //}\r\n    //public GetSeconds(d) {\r\n    //    return parseInt(d.split(':')[2].split(' ')[0]);\r\n    //}\r\n\r\n    public convertTo24Hour(time) {\r\n    if (/(1[2]):[0][0] ?[Aa][mM]$/.test(time)) {\r\n        return '00:00';\r\n    }\r\n    if (/(1[2]):[0][0]:[0][0] ?[Aa][mM]$/.test(time)) {\r\n        return '00:00:00';\r\n    }\r\n    var timewithFormat = time.split(' ');\r\n    var response = timewithFormat[0].split(':');\r\n    var hours = response[0], minutes = response[1];\r\n    if (time.toLowerCase().indexOf('am') !== -1 && hours == 12) {\r\n        hours = 0;\r\n    }\r\n    if (time.toLowerCase().indexOf('pm') !== -1 && hours < 12) {\r\n        hours = parseInt(hours) + 12;\r\n    }\r\n    response = hours + ':' + minutes + (response.length == 3 ? ':' + response[2] : '');\r\n    return response;\r\n    }\r\n\r\n    public getMinutes(time) {\r\n    var splitTime = time.split(':');\r\n    var minutes = (splitTime[0] * 60) + splitTime[1];\r\n    return minutes;\r\n}\r\n\r\npublic getSeconds(time) {\r\n    var splitTime = time.split(':');\r\n    var seconds = (this.getMinutes(time) * 60) + (splitTime.length === 3 ? splitTime[2] : 0);\r\n    return seconds;\r\n    }\r\n\r\n\r\n}\r\n","\r\n<div [formGroup]=\"Parent\">\r\n    <div class=\"pa bg-white z-index5 loading-wrapper left0 top0\" *ngIf=\"IsCalculating\">\r\n        <span class='spinner-dashboard pa'></span>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row mt15 pl15 text-color-b\" *ngIf=\"Parent.get('Assets')['controls'].length > 0\" formArrayName=\"Assets\">\r\n                <div class=\"w-100 border-b\"></div>\r\n                <div class=\"row col-sm-12\">\r\n                    <table width=\"100%\" cellspacing=\"2\">\r\n                        <tr class=\"f-bold\">\r\n                            <td width=\"17%\" valign=\"top\" class=\"pt5 pb5 pr5\">Asset/Tank Name</td>\r\n                            <td width=\"17%\" valign=\"top\" class=\"pt5 pb5 pr5\">Quantity</td>\r\n                            <td width=\"15%\" valign=\"top\" class=\"pt5 pb5 pr5\">Start Time</td>\r\n                            <td width=\"15%\" valign=\"top\" class=\"pt5 pb5 pr5\">End Time</td>\r\n                            <td width=\"10%\" valign=\"top\" *ngIf=\"IsDipDataRequired\" class=\"pt5 pb5 pr5\">Pre Dip</td>\r\n                            <td width=\"10%\" valign=\"top\" *ngIf=\"IsDipDataRequired\" class=\"pt5 pb5 pr5\">Post Dip</td>\r\n                            <td width=\"12%\" valign=\"top\" *ngIf=\"IsDipDataRequired\" class=\"pt5 pb5 pr5\">UOM</td>\r\n                            <td width=\"4%\" valign=\"top\" class=\"pt5 pb5\">&nbsp;</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div class=\"w-100 border-b\"></div>\r\n                <ng-container *ngFor=\"let asset of Parent.get('Assets')['controls']; let i = index;let last = last\">\r\n                    <div [formGroupName]=\"i\" class=\"row col-sm-12\">\r\n                        <table width=\"100%\" cellspacing=\"2\">\r\n                            <tr>\r\n                                <td width=\"17%\" valign=\"top\" class=\"pt5 pb5 pr5\">\r\n                                    <input type=\"text\" name=\"AssetName\" formControlName=\"AssetName\" class=\"form-control\" *ngIf=\"asset.get('IsNewAsset').value\" placeholder=\"Asset Name\" />\r\n                                    <span class=\"color-maroon\" *ngIf=\"asset.get('AssetName').errors && (asset.get('AssetName').touched ||\r\n                                  asset.get('AssetName').dirty)\">\r\n                                        <span *ngIf=\"asset.get('AssetName').errors.required\">\r\n                                            Required.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('AssetName').errors.pattern\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                    </span>\r\n                                    <label class=\"ml5\" *ngIf=\"!asset.get('IsNewAsset').value\">{{asset.get('AssetName').value}}</label>\r\n                                    <input type=\"hidden\" name=\"AssetName\" formControlName=\"AssetName\" *ngIf=\"!asset.get('IsNewAsset').value\" />\r\n\r\n                                </td>\r\n                                <td width=\"17%\" valign=\"top\" class=\"pt5 pb5 pr5\">\r\n                                    <div class=\"input-group\" [ngClass]=\"{'pntr-none': isDisable(asset,IsDipDataRequired)}\">\r\n                                         <input type=\"text\" name=\"DropGallons\" formControlName=\"DropGallons\" [disabled]=\"isDisable(asset,IsDipDataRequired) ? true : null\" class=\"form-control\" placeholder=\"Quantity\" (input)=\"validateSumOfAssetQuantity()\" />\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\" id=\"basic-addon2\">{{IsSelectedMT ? 'MT':UoM}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <span class=\"color-maroon\" *ngIf=\"asset.get('DropGallons').errors && (asset.get('DropGallons').touched ||\r\n                                  asset.get('DropGallons').dirty)\">\r\n                                        <span *ngIf=\"asset.get('DropGallons').errors.required\">\r\n                                            Required.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('DropGallons').errors.pattern\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('DropGallons').errors?.isQuantityMismatch && last\">\r\n                                            Sum of quantity should match with delivered quantity.\r\n                                        </span>\r\n                                    </span>\r\n                                </td>\r\n                                <td width=\"15%\" valign=\"top\" class=\"pt5 pb5 pr5\">\r\n                                    <input [timeSmallerThanOrEqualTo]=\"asset.get('EndTime')\" type=\"text\" name=\"StartTime\" formControlName=\"StartTime\" class=\"form-control pr\" placeholder=\"Start Time\" myTimePicker [format]=\"'hh:mm:ss A'\" (onTimeChange)=\"asset.get('StartTime').setValue($event)\" (blur)=\"ValidateAssetTime(asset,'assetList',null)\"/>\r\n                                    <span class=\"color-maroon\" *ngIf=\"asset.get('StartTime').errors && (asset.get('StartTime').touched ||\r\n                                  asset.get('StartTime').dirty)\">\r\n                                        <span *ngIf=\"asset.get('StartTime').errors.required\">\r\n                                            Required.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('StartTime').errors.pattern\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('StartTime').errors.timeSmallerThanOrEqualTo\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('StartTime').errors.invalidDropTime\">\r\n                                            Invalid \r\n                                        </span>\r\n                                    </span>\r\n                                </td>\r\n                                <td width=\"15%\" valign=\"top\" class=\"pt5 pb5 pr5\">\r\n                                    <input [timeGreaterThanOrEqualTo]=\"asset.get('StartTime')\" type=\"text\" name=\"EndTime\" formControlName=\"EndTime\" class=\"form-control pr\" placeholder=\"End Time\" myTimePicker [format]=\"'hh:mm:ss A'\" (onTimeChange)=\"asset.get('EndTime').setValue($event)\" (blur)=\"ValidateAssetTime(asset,'assetList',null)\" />\r\n                                    <span class=\"color-maroon\" *ngIf=\"asset.get('EndTime').errors && (asset.get('EndTime').touched ||\r\n                                  asset.get('EndTime').dirty)\">\r\n                                        <span *ngIf=\"asset.get('EndTime').errors.required\">\r\n                                            Required.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('EndTime').errors.pattern\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('EndTime').errors.timeGreaterThanOrEqualTo\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('EndTime').errors.invalidDropTime\">\r\n                                            Invalid \r\n                                        </span>\r\n                                    </span>\r\n                                </td>\r\n                                <td width=\"10%\" valign=\"top\" *ngIf=\"IsDipDataRequired\" class=\"pt5 pb5 pr5\">\r\n                                    <input type=\"text\" [ngClass]=\"IsDipDataRequired ? 'null' : 'hide-dip-data-controls'\" formControlName=\"PreDip\" class=\"form-control\" placeholder=\"Pre Dip\" />\r\n                                    <span class=\"color-maroon\" *ngIf=\"asset.get('PreDip').errors && (asset.get('PreDip').touched ||\r\n                                  asset.get('PreDip').dirty)\">\r\n                                        <span *ngIf=\"asset.get('PreDip').errors.required\">\r\n                                            Required.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('PreDip').errors.pattern\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                    </span>\r\n                                </td>\r\n                                <td width=\"10%\" valign=\"top\" *ngIf=\"IsDipDataRequired\" class=\"pt5 pb5 pr5\">\r\n                                    <input type=\"text\" [ngClass]=\"IsDipDataRequired ? 'null' : 'hide-dip-data-controls'\" formControlName=\"PostDip\" class=\"form-control\" placeholder=\"Post Dip\" />\r\n                                    <span class=\"color-maroon\" *ngIf=\"asset.get('PostDip').errors && (asset.get('PostDip').touched ||\r\n                                  asset.get('PostDip').dirty)\">\r\n                                        <span *ngIf=\"asset.get('PostDip').errors.required\">\r\n                                            Required.\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('PostDip').errors.pattern\">\r\n                                            Invalid.\r\n                                        </span>\r\n                                    </span>\r\n                                </td>\r\n                                <td width=\"12%\" valign=\"top\" class=\"pt5 pb5 pr5\">\r\n                                    <span *ngIf=\"IsDipDataRequired && asset.get('IsNewAsset').value == false\">\r\n                                        <span *ngIf=\"asset.get('TankMakeModel').value !=null && asset.get('TankMakeModel').value !='' \">\r\n                                            <select formControlName=\"TankScaleMeasurement\" class=\"form-control\">\r\n                                                <option [value]=\"0\" selected>Select</option>\r\n                                                <option *ngFor=\"let uom of UOMsForDipTest\" [value]=\"uom.Id\">{{uom.Name}}</option>\r\n                                            </select>\r\n                                        </span>\r\n                                        <span *ngIf=\"asset.get('TankMakeModel').value == null\">\r\n                                            <select formControlName=\"TankScaleMeasurement\" class=\"form-control\">\r\n                                                <option *ngIf=\"asset.get('IsNewAsset').value == true\" [value]=\"null\" selected>Select</option>\r\n                                                <option *ngIf=\"asset.get('IsNewAsset').value == false\" [value]=\"0\" selected>Select</option>\r\n                                                <option [value]=\"3\">{{UoM}}</option>\r\n                                            </select>\r\n                                        </span>\r\n                                    </span>\r\n                                </td>\r\n                                <td width=\"4%\" valign=\"top\" class=\"pt5 pb5\">\r\n                                    <a class=\"fa fa-trash-alt ml10 color-maroon mt10\" *ngIf=\"asset.get('IsNewAsset').value\" (click)=\"removeAsset(i)\" ></a>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"w-100 border-b\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Output, EventEmitter, Input, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators, FormGroup, Form, AbstractControl } from '@angular/forms';\r\nimport { map, tap, debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\nimport { Observable, of, from, iif } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n  selector: 'app-bdr-detail',\r\n  templateUrl: './bdr-detail.component.html',\r\n  styleUrls: ['./bdr-detail.component.css']\r\n})\r\nexport class BdrDetailComponent implements OnInit {\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _loading: boolean = false;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n    public EditIndex: number = -1;\r\n\r\n    public BdrDetailForm: FormGroup;\r\n\r\n    @Output() onBdrDetailsAdded: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onBdrDetailsUpdated: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public IsEngineerInvitedToWitnessSample: boolean;\r\n    public IsNoticeToProtestIssued: boolean;\r\n\r\n    constructor(private fb: FormBuilder, private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        this.BdrDetailForm = this.buildForm();\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        \r\n    }\r\n\r\n    toggleOpen(shouldOpen: boolean, event: any) {\r\n        this._opened = shouldOpen;\r\n        if (shouldOpen) {\r\n            if (event != null) {\r\n                this.EditIndex = event.index;\r\n                this.BdrDetailForm.patchValue(event.bdrDetails);\r\n            }\r\n        } else {\r\n            this.BdrDetailForm.reset();\r\n            this.EditIndex = -1;\r\n        }\r\n    }\r\n\r\n    onBdrDetailAdd() {\r\n        this.BdrDetailForm.markAllAsTouched();\r\n        if (this.BdrDetailForm.valid) {\r\n            this.onBdrDetailsAdded.emit(this.BdrDetailForm.value);\r\n            this.toggleOpen(false, null);\r\n        }\r\n        else {\r\n            this.BdrDetailForm.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    onBdrDetailUpdate() {\r\n        this.BdrDetailForm.markAllAsTouched();\r\n        if (this.BdrDetailForm.valid) {\r\n            var eventData = {\r\n                bdrDetail: this.BdrDetailForm.value,\r\n                index: this.EditIndex\r\n            };\r\n            this.onBdrDetailsUpdated.emit(eventData);\r\n            this.toggleOpen(false, null);\r\n            this.EditIndex = -1;\r\n        }\r\n        else {\r\n            this.BdrDetailForm.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    onBdrCancel() {\r\n        this.BdrDetailForm.reset();\r\n        this.toggleOpen(false, null);\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.BdrDetailForm.get(name).invalid\r\n            &&\r\n            (\r\n            this.BdrDetailForm.get(name).dirty\r\n                ||\r\n            this.BdrDetailForm.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.BdrDetailForm.get(name).errors.required;\r\n    }\r\n\r\n    buildForm() {\r\n        return this.fb.group({\r\n            Id: this.fb.control(''),\r\n            PumpingStartTime: this.fb.control('', [Validators.pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\\d):(?:[0-5]\\d) ?([AaPp][Mm])/)]),\r\n            PumpingStopTime: this.fb.control('', [Validators.pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\\d):(?:[0-5]\\d) ?([AaPp][Mm])/)]),\r\n            OpenMeterReading: this.fb.control(''),\r\n            CloseMeterReading: this.fb.control(''),\r\n            MarpolSampleNumbers: this.fb.control(''),\r\n            MVMarpolSampleNumbers: this.fb.control(''),\r\n            Viscosity: this.fb.control('',[Validators.min(0.00001)]),\r\n            SulphurContent: this.fb.control('',[Validators.min(0.00001)]),\r\n            FlashPoint: this.fb.control('',[Validators.min(0.00001)]),\r\n            DensityInVaccum: this.fb.control('', [Validators.min(0.00001)]),\r\n            ObservedTemperature: this.fb.control('',[Validators.min(0.00001)]),\r\n            MeasuredVolume: this.fb.control(''),\r\n            StandardVolume: this.fb.control(''),\r\n            IsEngineerInvitedToWitnessSample: this.fb.control(''),\r\n            IsNoticeToProtestIssued: this.fb.control(''),\r\n        });\r\n    }\r\n\r\n    setStandardVolume() {\r\n        let measuredVolume = this.BdrDetailForm.get('MeasuredVolume').value;\r\n        this.BdrDetailForm.get('StandardVolume').setValue(measuredVolume);\r\n    }\r\n}\r\n","<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                class=\"bdr-panel\" \r\n                style=\"height: 100vh\">\r\n\r\n        <a (click)=\"toggleOpen(false, null)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n        <content class=\"pr30\">\r\n            <h3 class=\"dib ml10 mt10 mb10\">BDN Details</h3>\r\n            <div [formGroup]=\"BdrDetailForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <input type=\"hidden\" placeholder=\"Id\" formControlName=\"Id\" />\r\n                        <label for=\"PumpingStartTime\">Delivery Pumping Start Time</label>\r\n                        <input name=\"PumpingStartTime\" formControlName=\"PumpingStartTime\" myTimePicker [format]=\"'hh:mm:ss A'\" class=\"form-control timepicker\"\r\n                               (onTimeChange)=\"BdrDetailForm.get('PumpingStartTime').setValue($event)\" />\r\n                        <div *ngIf=\"isInvalid('PumpingStartTime')\" class=\"color-maroon\">\r\n                            <span *ngIf=\"BdrDetailForm.get('PumpingStartTime').errors.pattern\">\r\n                                Invalid Time Format\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-8 form-group\">\r\n                        <label for=\"PumpingStopTime\">Delivery Pumping Completion Time</label>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-8\">\r\n                                <input name=\"PumpingStopTime\" formControlName=\"PumpingStopTime\" myTimePicker [format]=\"'hh:mm:ss A'\" class=\"form-control timepicker\"\r\n                                       (onTimeChange)=\"BdrDetailForm.get('PumpingStopTime').setValue($event)\" />\r\n                                <div *ngIf=\"isInvalid('PumpingStopTime')\" class=\"color-maroon\">\r\n                                    <span *ngIf=\"BdrDetailForm.get('PumpingStopTime').errors.pattern\">\r\n                                        Invalid Time Format\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"OpenMeterReading\">Open Meter Reading</label>\r\n                        <input name=\"OpenMeterReading\" formControlName=\"OpenMeterReading\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"CloseMeterReading\">Close Meter Reading</label>\r\n                        <input name=\"CloseMeterReading\" formControlName=\"CloseMeterReading\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"MarpolSampleNumbers\">MARPOL Sample Numbers</label>\r\n                        <input name=\"MarpolSampleNumbers\" formControlName=\"MarpolSampleNumbers\" class=\"form-control\" />\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"MVMarpolSampleNumbers\">MV MARPOL Sample Numbers</label>\r\n                        <input name=\"MVMarpolSampleNumbers\" formControlName=\"MVMarpolSampleNumbers\" class=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"Viscosity\">Viscosity @ 50&deg;C (cST)</label>\r\n                        <input type=\"number\" name=\"Viscosity\" formControlName=\"Viscosity\" class=\"form-control\" />\r\n                        <div *ngIf=\"isInvalid('Viscosity')\" class=\"color-maroon\">\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('Viscosity') && BdrDetailForm.get('Viscosity').invalid\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"SulphurContent\">Sulfur Content (% m/m)</label>\r\n                        <input type=\"number\" name=\"SulphurContent\" formControlName=\"SulphurContent\" class=\"form-control\" />\r\n                        <div *ngIf=\"isInvalid('SulphurContent')\" class=\"color-maroon\">\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('SulphurContent') && BdrDetailForm.get('SulphurContent').invalid\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"FlashPoint\">Flash Point (&deg;F/&deg;C)</label>\r\n                        <input type=\"number\" name=\"FlashPoint\" formControlName=\"FlashPoint\" class=\"form-control\" />\r\n                        <div *ngIf=\"isInvalid('FlashPoint')\" class=\"color-maroon\">\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('FlashPoint') && BdrDetailForm.get('FlashPoint').invalid\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"DensityInVaccum\">Density In Vacuum</label>\r\n                        <input name=\"DensityInVaccum\" formControlName=\"DensityInVaccum\" class=\"form-control\" />\r\n                        <div *ngIf=\"isInvalid('DensityInVaccum')\" class=\"color-maroon\">\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('DensityInVaccum') && BdrDetailForm.get('DensityInVaccum').invalid\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"ObservedTemperature\">Observed Temperature (&deg;F/&deg;C)</label>\r\n                        <input type=\"number\" name=\"ObservedTemperature\" formControlName=\"ObservedTemperature\" class=\"form-control\" />\r\n                        <div *ngIf=\"isInvalid('ObservedTemperature')\" class=\"color-maroon\">\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('ObservedTemperature') && BdrDetailForm.get('ObservedTemperature').invalid\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"MeasuredVolume\">Measured Volume</label>\r\n                        <input name=\"MeasuredVolume\" formControlName=\"MeasuredVolume\" class=\"form-control\" (input)=\"setStandardVolume()\"/>\r\n                        <div *ngIf=\"isInvalid('MeasuredVolume')\" class=\"color-maroon\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"StandardVolume\">Standard Volume</label>\r\n                        <input name=\"StandardVolume\" formControlName=\"StandardVolume\" class=\"form-control\" [readonly]=\"true\" />\r\n                        <div *ngIf=\"isInvalid('StandardVolume')\" class=\"color-maroon\">\r\n                            <label class=\"fs12\" style=\"color:red\">\r\n                                Invalid value\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group form-check\">\r\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"engineerinvite\" formControlName=\"IsEngineerInvitedToWitnessSample\" [value]=\"IsEngineerInvitedToWitnessSample\" />\r\n                            <label class=\"form-check-label\" for=\"engineerinvite\">Chief Engineer invited to witness sample(s)?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group form-check\">\r\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"noticetoprotest\" formControlName=\"IsNoticeToProtestIssued\" [value]=\"IsNoticeToProtestIssued\" />\r\n                            <label class=\"form-check-label\" for=\"noticetoprotest\">Notice to protest issued?</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 text-right\">\r\n                        <input type=\"button\" class=\"btn\" value=\"Cancel\" (click)=\"onBdrCancel()\" />\r\n                        <!--<input type=\"button\" class=\"btn btn-secondary\" (click)=\"onBdrCancel()\">Cancel</input>-->\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" *ngIf=\"EditIndex == -1\" [disabled]=\"BdrDetailForm.invalid\" (click)=\"onBdrDetailAdd()\">Add</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" *ngIf=\"EditIndex > -1\" (click)=\"onBdrDetailUpdate()\"><i class=\"fa fa-edit\"></i> Update</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>","import { Component, OnInit, Output, EventEmitter, Input, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { BDRModel } from '../models/DropDetail';\r\n\r\n@Component({\r\n    selector: 'app-show-bdr-detail',\r\n    templateUrl: './show-bdr-detail.component.html',\r\n    styleUrls: ['./show-bdr-detail.component.css']\r\n})\r\nexport class ShowBdrDetailComponent implements OnInit, OnChanges{\r\n\r\n    @Input() public Parent: FormGroup; // drop formgroup and not top level invoice form as we want BDR per drop\r\n    @Input() public BdrDetails: FormGroup;\r\n    @Input() public BdrModel: BDRModel;\r\n\r\n    public IsBDRAdded: boolean = false;\r\n\r\n    @Output() public OnBDREdit: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public OnBDRDelete: EventEmitter<any> = new EventEmitter<any>();\r\n   \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    }\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.BdrModel && change.BdrModel.currentValue) {            \r\n            var bdrDetails = change.BdrModel.currentValue;\r\n            if (bdrDetails) {\r\n                this.buildForm(bdrDetails, this.BdrDetails);\r\n            }\r\n        }\r\n    }\r\n\r\n    editBdrDetail(event: FormGroup) {\r\n        this.OnBDREdit.emit({ bdrDetails: event.value, index: 1 });\r\n    }\r\n\r\n    deleteBdr(bdrDetails: FormGroup) {\r\n        Object.keys(bdrDetails.controls).forEach(field => {\r\n            bdrDetails.removeControl(field);\r\n        });\r\n        this.IsBDRAdded = false;\r\n        this.OnBDRDelete.emit();\r\n    }\r\n    buildForm(model: BDRModel, bdrDetailsFormGroup: FormGroup) {\r\n        if (model != null && model != undefined) {\r\n            for (const property in model) {\r\n                bdrDetailsFormGroup.addControl(property, new FormControl(model[property]));\r\n\r\n            }\r\n            this.IsBDRAdded = true;\r\n        } else { this.IsBDRAdded = false; }\r\n    }\r\n\r\n    bdrDetailAdded(eventData: BDRModel) {\r\n        this.buildForm(eventData, this.BdrDetails);\r\n    }\r\n\r\n    bdrDetailUpdated(event: any) {      \r\n        this.BdrDetails.patchValue(event.bdrDetail);\r\n    }\r\n\r\n}\r\n","<div [formGroup]=\"Parent\" class=\"well border box-shadow mt-2\" *ngIf=\"IsBDRAdded\">\r\n    <div class=\"row f-bold\">\r\n        <!--Marpol sample Number, Viscosity, Sulphur content, Flashpoint, Observed temperature-->\r\n        <!--<div class=\"col-sm-1\">Open Meter Reading</div>\r\n        <div class=\"col-sm-1\">Close Meter Reading</div>-->\r\n        <div class=\"col-sm-3\">MARPOL Sample Numbers</div>\r\n        <div class=\"col-sm-1\">Viscosity</div>\r\n        <div class=\"col-sm-2\">Sulfur Content</div>\r\n        <div class=\"col-sm-2\">Flash Point</div>\r\n        <!--<div class=\"col-sm-1\">Density In Vaccum</div>-->\r\n        <div class=\"col-sm-3\">Observed Temperature</div>\r\n        <!--<div class=\"col-sm-1\">Measured Volume</div>\r\n        <div class=\"col-sm-1\">Standard Volume</div>-->\r\n    </div>\r\n    <div formGroupName=\"BdrDetails\">\r\n        <div class=\"row\">\r\n            <!--<div class=\"col-sm-1\">\r\n                <span> {{BdrDetails.get('OpenMeterReading').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <span> {{BdrDetails.get('CloseMeterReading').value}}</span>\r\n                &nbsp;\r\n            </div>-->\r\n            <div class=\"col-sm-3\">\r\n                <span> {{BdrDetails.get('MarpolSampleNumbers').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <span> {{BdrDetails.get('Viscosity').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <span> {{BdrDetails.get('SulphurContent').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <div class=\"col-sm-2\">\r\n                <span> {{BdrDetails.get('FlashPoint').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <!--<div class=\"col-sm-1\">\r\n                <span> {{BdrDetails.get('DensityInVaccum').value}}</span>\r\n                &nbsp;\r\n            </div>-->\r\n            <div class=\"col-sm-3\">\r\n                <span> {{BdrDetails.get('ObservedTemperature').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <!--<div class=\"col-sm-1\">\r\n                <span> {{BDRDetail.get('MeasuredVolume').value}}</span>\r\n                &nbsp;\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <span> {{BdrDetails.get('StandardVolume').value}}</span>\r\n                &nbsp;\r\n            </div>-->\r\n            <div class=\"col-sm-1\">\r\n                <a (click)=\"editBdrDetail(BdrDetails)\"><i class=\"fa fa-edit fs14\"></i></a>\r\n                <a (click)=\"deleteBdr(BdrDetails)\"><i class=\"fa fa-trash-alt ml10 color-maroon\"></i></a>\r\n            </div>\r\n            <div class=\"col-sm-1\">\r\n                <!--<input type=\"hidden\" formControlName=\"Id\">-->\r\n                <input type=\"hidden\" formControlName=\"PumpingStartTime\">\r\n                <input type=\"hidden\" formControlName=\"PumpingStopTime\">\r\n                <input type=\"hidden\" formControlName=\"OpenMeterReading\">\r\n                <input type=\"hidden\" formControlName=\"CloseMeterReading\">\r\n                <input type=\"hidden\" formControlName=\"MarpolSampleNumbers\">\r\n                <input type=\"hidden\" formControlName=\"Viscosity\">\r\n                <input type=\"hidden\" formControlName=\"SulphurContent\">\r\n                <input type=\"hidden\" formControlName=\"FlashPoint\">\r\n                <input type=\"hidden\" formControlName=\"DensityInVaccum\">\r\n                <input type=\"hidden\" formControlName=\"ObservedTemperature\">\r\n                <input type=\"hidden\" formControlName=\"MeasuredVolume\">\r\n                <input type=\"hidden\" formControlName=\"StandardVolume\">\r\n                <input type=\"hidden\" formControlName=\"IsEngineerInvitedToWitnessSample\">\r\n                <input type=\"hidden\" formControlName=\"IsNoticeToProtestIssued\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Output, EventEmitter, Input, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators, FormGroup, Form, AbstractControl, FormControl } from '@angular/forms';\r\nimport { map, tap, debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\nimport { Observable, of, from, iif } from 'rxjs';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { DropDetailModel} from '../models/DropDetail';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { InvoiceService } from '../services/invoice.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { UoM } from 'src/app/app.enum';\r\nimport { RegExConstants } from 'src/app/app.constants';\r\nimport { DataService } from '../../carrier/service/data.service';\r\nimport { ValidationService } from 'src/app/services/validation.service';\r\n\r\n@Component({\r\n    selector: 'app-bol-detail',\r\n    templateUrl: './bol-detail.component.html',\r\n    styleUrls: ['./bol-detail.component.css']\r\n})\r\nexport class BolDetailComponent implements OnInit {\r\n\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _loading: boolean = false;\r\n    public _loadingTerminals: boolean = false;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n    public TerminalList: {};\r\n    public Terminals = [];\r\n    public minCharRequired = false;\r\n    public searchError = false;\r\n    public noTerminalFound = false;\r\n    public _dropsForm: any[] = [];\r\n    public BolDetailForm: FormGroup;\r\n    public Drops: DropDetailModel[];\r\n    public EditIndex: number = -1;\r\n    public OrderId: number;\r\n\r\n    public hasDuplicateBol: boolean;\r\n    public bolnumberslist = [];\r\n    public curBolNumber: number;\r\n    public UoM: String;\r\n    public Currency: string;\r\n    @Input() public IsBadgeMandatory: boolean;\r\n    public isBadgeMandatory: boolean = false;\r\n\r\n    @Output() onBolDetailAdded: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onBolDetailUpdated: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(\r\n        private fb: FormBuilder, \r\n        private route: ActivatedRoute, \r\n        private invoiceService: InvoiceService, \r\n        private dataService: DataService,\r\n        private validationService: ValidationService) {\r\n        this.TerminalList = {};\r\n    }\r\n\r\n    ngOnInit() {\r\n         \r\n        this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);\r\n        this.BolDetailForm = this.buildForm();\r\n        if (this.BolDetailForm) {\r\n            if (this.isBadgeMandatory) {\r\n                this.BolDetailForm.controls['BadgeNumber'].setValidators([Validators.required]);\r\n            } else {\r\n                this.BolDetailForm.controls['BadgeNumber'].clearValidators();\r\n            }\r\n        } \r\n    }\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsBadgeMandatory && change.IsBadgeMandatory.currentValue != null) {\r\n            this.isBadgeMandatory = change.IsBadgeMandatory.currentValue;\r\n            if (this.BolDetailForm) {\r\n                if (this.isBadgeMandatory) {\r\n                    this.BolDetailForm.controls['BadgeNumber'].setValidators([Validators.required]);\r\n                } else{\r\n                    this.BolDetailForm.controls['BadgeNumber'].clearValidators();\r\n                }\r\n            }          \r\n        }\r\n    }\r\n    initDrops(_dropsForm: any[], _drops: DropDetailModel[]) {\r\n        this._dropsForm = _dropsForm;\r\n        //this.setUoM(_drops);\r\n        this.setCurrency(_drops);\r\n        // this.setProductValidation(_drops);\r\n        if (_drops != null && _drops != undefined) {\r\n            _drops.forEach(x => {\r\n                if (this.TerminalList[x.FuelTypeId] == undefined || this.TerminalList[x.FuelTypeId] == null) {\r\n                    this.TerminalList[x.FuelTypeId] = [];\r\n                }\r\n                this.loadTerminals(x.OrderId, x.FuelTypeId);\r\n            });\r\n            this.Drops = _drops;\r\n            this.setProductsToFormArray();\r\n        }\r\n    }\r\n    setUoM(uom: any, jobCountryId: any, productForm: FormGroup): void{\r\n        if (uom == UoM.MetricTons || uom == UoM.Barrels) {\r\n            if (jobCountryId == 1 || jobCountryId == 4 ) {\r\n                productForm.get('UOM').setValue(\"Gallons\");\r\n            }\r\n            else if (jobCountryId == 2) {\r\n                productForm.get('UOM').setValue(\"Litres\");\r\n            }\r\n        }\r\n        else {\r\n            if (uom == UoM.Gallons) {\r\n                productForm.get('UOM').setValue(\"Gallons\");\r\n            }\r\n            else if (uom == UoM.Litres) {\r\n                productForm.get('UOM').setValue(\"Litres\");\r\n            }\r\n        }\r\n    }\r\n    //setUoM(drops: DropDetailModel[]): void {\r\n    //    debugger;\r\n    //    //None =0;\r\n    //    //Gallons = 1,\r\n    //    //Litres = 2\r\n    //    if (drops != null && drops != undefined) {\r\n    //        var uom = drops.map(item => parseInt(item.UoM));\r\n    //        if (uom[0] == UoM.Barrels || uom[0] == UoM.MetricTons) {\r\n    //            if (drops[0].JobCountryId == 1) {\r\n    //                this.UoM = \"Gallons\";\r\n    //            }\r\n    //            else if (drops[0].JobCountryId == 2) {\r\n    //                this.UoM = \"Litres\";\r\n    //            }\r\n\r\n    //        }\r\n    //        else {\r\n    //            if (uom[0] == 1) {\r\n    //                this.UoM = \"Gallons\";\r\n    //            }\r\n    //            else if (uom[0] == 2) {\r\n    //                this.UoM = \"Litres\";\r\n    //            }\r\n    //        }\r\n                \r\n    //        //else if (UoM[0] == 3) {\r\n    //        //    this.UoM = \"Barrels\";\r\n    //        //}\r\n    //        //else if (UoM[0] == 4) {\r\n    //        //    this.UoM = \"MT\";\r\n    //        //}\r\n    //    }\r\n    //}\r\n    setCurrency(drops: DropDetailModel[]) {\r\n        if (drops != null && drops != undefined) {\r\n            var currency = drops.map(item => parseInt(item.Currency));\r\n        }\r\n        if (currency[0] == 1) {\r\n            this.Currency = \"USD\"\r\n        }\r\n        else if (currency[0] == 2) {\r\n            this.Currency =\"CAD\"\r\n        }\r\n    }\r\n\r\n    setProductsToFormArray(): void {\r\n        var prodArray = this.BolDetailForm.get('Products') as FormArray;\r\n        if (prodArray != undefined && prodArray != null) {\r\n            prodArray.clear();\r\n            var currentObj = this;\r\n            this.Drops.forEach(function (elem, idx) {\r\n                prodArray.push(currentObj.buildProduct(elem));\r\n                if (idx == currentObj.Drops.length - 1) {\r\n                    currentObj.setPrice();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setPrice() {\r\n        var prodArray = this.BolDetailForm.get('Products') as FormArray;\r\n        var currentObj = this;\r\n        var date = new Date();\r\n        prodArray.controls.forEach(function (_control: FormGroup, index) {\r\n            if (_control instanceof FormGroup) {\r\n                if (_control.controls['TerminalId'].value > 0 && _control.controls['TerminalId'].value && _control.controls['OrderId'].value) {\r\n                    let control = _control;\r\n                    currentObj.invoiceService.getTerminalPriceById(\r\n                        control.controls['TerminalId'].value,\r\n                        control.controls['OrderId'].value,\r\n                        currentObj._dropsForm[index].DropDate || (+date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear())\r\n                        .subscribe(data => {\r\n                            control.controls['TerminalPrice'].setValue(data);\r\n                        });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    toggleOpen(shouldOpen: boolean, event: any) {\r\n        this._opened = shouldOpen;\r\n        if (shouldOpen) {\r\n            if (event != null) {\r\n                let bolFormData = this.getBolFormData(event.bolDetail);\r\n                this.setProductsToFormArray();\r\n                this.BolDetailForm.patchValue(bolFormData);\r\n                this.EditIndex = event.index;\r\n            }\r\n        } else {\r\n            this.BolDetailForm.reset();\r\n            (this.BolDetailForm.get('Products') as FormArray).clear();\r\n            this.EditIndex = -1;\r\n        }\r\n    }\r\n\r\n    getBolFormData(bolDetail: any): any {\r\n        let _products = [];\r\n        bolDetail.Products.forEach(x => {\r\n            _products.push({\r\n                ProductId: x.ProductId,\r\n                ProductName:x.ProductName,\r\n                GrossQuantity: x.GrossQuantity,\r\n                NetQuantity: x.NetQuantity,\r\n                TerminalId: x.TerminalId,\r\n                TerminalName: x.TerminalName,\r\n                DeliveredQuantity : x.DeliveredQuantity,\r\n            });\r\n        });\r\n        let data = {\r\n            BolNumber: bolDetail.BolNumber,\r\n            BadgeNumber: bolDetail.BadgeNumber,\r\n            LiftDate: bolDetail.LiftDate,\r\n            Products: _products\r\n        };\r\n        return data;\r\n    }\r\n\r\n    buildForm() {\r\n        return this.fb.group({\r\n            Id: this.fb.control(''),\r\n            BolNumber: this.fb.control('', Validators.required),\r\n            LiftDate: this.fb.control('', Validators.required),\r\n            BadgeNumber: this.fb.control(''),\r\n            Products: this.fb.array([]),\r\n        });\r\n    }\r\n    buildProduct(model: DropDetailModel): FormGroup {\r\n        var formG = this.fb.group({\r\n            ProductId: this.fb.control(model.FuelTypeId),\r\n            ProductName: this.fb.control(model.FuelTypeName),\r\n            NetQuantity: this.fb.control('', [Validators.pattern(RegExConstants.Quantity)]),\r\n            GrossQuantity: this.fb.control('', [Validators.pattern(RegExConstants.Quantity)]),\r\n            TerminalId: this.fb.control(model.TerminalId),\r\n            TerminalName: this.fb.control(model.TerminalName, [this.terminalConditionallyRequiredValidator.bind(this)]),\r\n            TerminalPrice: this.fb.control(null),\r\n            DropDate: this.fb.control(model.DropDate),\r\n            OrderId: this.fb.control(model.OrderId),\r\n            Image: this.fb.control(''),\r\n            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId),\r\n            UOM: this.fb.control(''),\r\n            DeliveredQuantity : this.fb.control('', [Validators.pattern(RegExConstants.Quantity)])\r\n        });\r\n        this.setUoM(model.UoM, model.JobCountryId,formG);\r\n        return formG;\r\n    }\r\n\r\n    private terminalConditionallyRequiredValidator(formControl: AbstractControl) {\r\n    if (!formControl.parent) {\r\n        return null;\r\n    }\r\n\r\n        if (formControl.parent.get('TerminalId').value) {\r\n        return Validators.required(formControl);\r\n    }\r\n    return null;\r\n}\r\n\r\n    cancelBolDetail() {\r\n        this.BolDetailForm.reset();\r\n        this.toggleOpen(false, null);\r\n    }\r\n\r\n    addBolDetail() {\r\n        this.BolDetailForm.markAllAsTouched();\r\n        var bolnumber = this.BolDetailForm.get('BolNumber').value.trim().toLowerCase();\r\n        var products = this.BolDetailForm.get('Products').value;\r\n        var prodNumber = products.length;\r\n        var count = 0;\r\n        products.forEach(function (product) {\r\n            if (!(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {\r\n                count++;\r\n            }\r\n        });\r\n        if (this.isBadgeMandatory && !this.BolDetailForm.get('BadgeNumber').value.trim()) {\r\n            Declarations.msgerror(\"Please enter badge number\", undefined, undefined);\r\n            return;\r\n        }\r\n        //means no bol details entered\r\n        if (prodNumber == count) {\r\n            Declarations.msgerror(\"Delivered, gross and net quantity is required for atleast one product\", undefined, undefined);\r\n            return;\r\n        }\r\n        var isFormValidInfo = this.validateForm();\r\n        if (isFormValidInfo.length > 0) {\r\n            isFormValidInfo.forEach(function (isFormValidInfo) {\r\n                if (isFormValidInfo.isFormValid == false) {\r\n                    Declarations.msgerror(\"Delivered/gross/net quantity quantity is missing for product \" + isFormValidInfo.ProductName, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n\t\telse if (this.BolDetailForm.valid && isFormValidInfo.length == 0 && prodNumber != count) \r\n        {\r\n\t\t\tif (this.bolnumberslist.indexOf(bolnumber) != -1) {\r\n                Declarations.msgerror(\"You are trying to enter duplicate BOL Numbers\", undefined, undefined);\r\n            }\r\n            else {\r\n                this.onBolDetailAdded.emit(this.BolDetailForm.value);\r\n                this.toggleOpen(false, null);\r\n            }\r\n        }\r\n        else {\r\n            this.BolDetailForm.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    updatedBolDetail() {\r\n        this.BolDetailForm.markAllAsTouched();\r\n        var updatedBolnumber = this.BolDetailForm.get('BolNumber').value.trim().toLowerCase();\r\n        var isFormValidInfo = this.validateForm();\r\n        if (isFormValidInfo.length > 0) {\r\n            isFormValidInfo.forEach(function (isFormValidInfo) {\r\n                if (isFormValidInfo.isFormValid == false) {\r\n                    Declarations.msgerror(\"Gross or Net quantity is missing for Product \" + isFormValidInfo.ProductName, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n\t\tif (this.BolDetailForm.valid && isFormValidInfo.length == 0) {\r\n\t\t\tif ((this.curBolNumber != updatedBolnumber) && (this.bolnumberslist.indexOf(updatedBolnumber) != -1)) {\r\n                Declarations.msgerror(\"You are trying to add duplicate Bol numbers\", undefined, undefined);\r\n            }\r\n            else {\r\n                var eventData = {\r\n                    bolDetail: this.BolDetailForm.value,\r\n                    index: this.EditIndex\r\n                };\r\n                this.onBolDetailUpdated.emit(eventData);\r\n                this.toggleOpen(false, null);\r\n                this.EditIndex = -1;\r\n                this.bolnumberslist.splice(this.bolnumberslist.indexOf(this.curBolNumber), 1);\r\n                this.bolnumberslist.push(updatedBolnumber);\r\n            }\r\n        }\r\n\r\n    }\r\n    isInvalid(name: string): boolean {\r\n        var result = this.BolDetailForm.get(name).invalid\r\n            &&\r\n            (\r\n                this.BolDetailForm.get(name).dirty\r\n                ||\r\n                this.BolDetailForm.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.BolDetailForm.get(name).errors.required;\r\n    }\r\n\r\n    loadTerminals(_orderId: number, _fuelTypeId: number): void {\r\n        if (this.TerminalList[_fuelTypeId] == undefined\r\n            || this.TerminalList[_fuelTypeId] == null\r\n            || this.TerminalList[_fuelTypeId].length == 0) {\r\n            this._loadingTerminals = true;\r\n            this.invoiceService.getTerminals(_orderId)\r\n                .subscribe((data: DropdownItem[]) => {\r\n                    this._loadingTerminals = false;\r\n                    this.TerminalList[_fuelTypeId] = data;\r\n                });\r\n        }\r\n    }\r\n    onTerminalSearched(event: any,orderId): void {\r\n        var keyword = event.target.value.toLowerCase();\r\n        let searchKeyword$ = of(keyword);\r\n        searchKeyword$.pipe(\r\n            debounceTime(2000),\r\n            distinctUntilChanged(),\r\n            tap((data) => {\r\n                this._loadingTerminals = true\r\n                if (data.length < 3) {\r\n                    this.minCharRequired = true;\r\n                } else {\r\n                    this.minCharRequired = false;\r\n                }\r\n            }),\r\n            switchMap((term) => iif(\r\n                () => (term.length < 3),\r\n                of([])\r\n                , this.invoiceService.getTerminals(orderId, term).pipe(\r\n                    tap(() => {\r\n                        this._loadingTerminals = false;\r\n                    }),\r\n                    catchError(() => {\r\n                        this._loadingTerminals = false;\r\n                        this.searchError = true;\r\n                        return of([]);\r\n                    })\r\n                ))),\r\n            tap(() => this._loadingTerminals = false)\r\n        ).subscribe((data) => {\r\n            if (data.length === 0) {\r\n                this.noTerminalFound = true;\r\n            } else {\r\n                this.noTerminalFound = false;\r\n            }\r\n            this.Terminals = data;\r\n            this._loadingTerminals = false;\r\n        }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    getAddedProductDetails(drops: any[]) {\r\n        if (drops != null || drops != undefined) {\r\n\t\t\tvar dropdates = drops.map(item => item.DropDate);\r\n\t\t\tif (dropdates.length > 0 && dropdates.indexOf(null) == -1 && dropdates != undefined && dropdates.indexOf(\"\") == -1 && dropdates.indexOf(undefined) == -1) {\r\n                this.findMinDate(dropdates);\r\n            }\r\n        }\r\n    }\r\n    findMinDate(dropdates: any[]) {\r\n        var dates = [];\r\n        dropdates.forEach((dropdate) => {\r\n            var date = new Date(dropdate);\r\n            dates.push(date);\r\n        });\r\n        //var maximumDate = new Date(Math.max.apply(null, dates)); \r\n        var minimumDate = new Date(Math.min.apply(null, dates));\r\n        var minDate = minimumDate.toDateString();\r\n        var date = this.getFormattedDate(minDate);\r\n        if (date != null || date != undefined) {\r\n            this.BolDetailForm.get('LiftDate').patchValue(date);\r\n        }\r\n    }\r\n    getFormattedDate(date: any) {\r\n        var dt = new Date(date);\r\n        var year = dt.getFullYear();\r\n        var month = (1 + dt.getMonth()).toString();\r\n        month = month.length > 1 ? month : '0' + month;\r\n        var day = dt.getDate().toString();\r\n        day = day.length > 1 ? day : '0' + day;\r\n        return month + '/' + day + '/' + year;\r\n    }\r\n    setTerminalName(product: FormGroup, terminal: any): void {\r\n        if (terminal.Name) {\r\n            product.controls['TerminalName'].patchValue(terminal.Name);\r\n            product.controls['TerminalId'].patchValue(terminal.Id);\r\n            this.setPrice();\r\n            this.dataService.setDropTerminalSelectedSubject(product.get('OrderId').value);\r\n        }\r\n    }\r\n    public validateTerminal(product, event, orderId): void {\r\n        if ((this.Terminals.length && !(this.Terminals.filter(e => e.Name === product.controls['TerminalName'].value).length > 0)) || this.noTerminalFound) {\r\n            product.controls['TerminalName'].patchValue('');\r\n        }\r\n        \r\n    }\r\n    //getAddedLiftDetails(liftdetails: any) {\r\n    //    var newProds = [];\r\n    //    liftdetails.map(item => item.Products.map(prod => newProds.push(prod)));\r\n\r\n    //    this.clearValidators(newProds);\r\n    //}\r\n    //clearValidators(products: any[]) {\r\n    //    var _bols = this.BolDetailForm.get('Products') as FormArray;\r\n    //    products.forEach(function (x) {\r\n    //        var _group = _bols.controls.find(function (y) {\r\n    //            return y.get('ProductId').value == x.ProductId;\r\n    //        });\r\n    //        if (_group != undefined && _group != null) {\r\n    //            _group.get('NetQuantity').clearValidators();\r\n    //            _group.get('NetQuantity').updateValueAndValidity();\r\n    //            _group.get('GrossQuantity').clearValidators();\r\n    //            _group.get('GrossQuantity').updateValueAndValidity();\r\n    //        }\r\n    //    });\r\n    //}\r\n\r\n    validateForm(): any[] {\r\n        var isFormValid = true;\r\n        var invalidFormInfo = [];\r\n        var products = this.BolDetailForm.get('Products').value;\r\n        products.forEach(function (product) {\r\n\r\n            if ((product.NetQuantity > 0 || product.GrossQuantity > 0 || product.DeliveredQuantity > 0) && !(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {\r\n                isFormValid = false;\r\n                invalidFormInfo.push({\r\n                    isFormValid: isFormValid,\r\n                    ProductName: product.ProductName\r\n                });\r\n            }\r\n        });\r\n        return invalidFormInfo;\r\n    }\r\n\r\n    // bol number duplicate validation \r\n    getDeletedBol(items: any) {\r\n        this.bolnumberslist.length = 0;\r\n        this.bolnumberslist = items.map(item => item.BolNumber.trim().toLowerCase());\r\n    }\r\n    getEditedBol(items: any) {\r\n        this.curBolNumber = items.BolNumber.trim().toLowerCase();\r\n        //this.bolnumberslist.push(this.curBolNumber);\r\n    }\r\n    getAddedBols(items: any) {\r\n        var bolnumbers = items.map(item => item.BolNumber);\r\n        if (bolnumbers.length > 0 && bolnumbers[0] != null) {\r\n            this.bolnumberslist = items.map(item => item.BolNumber.trim().toLowerCase());\r\n        }\r\n        //this.bolnumberslist = items.map(item => item.BolNumber.trim().toLowerCase());\r\n    }\r\n    setDeliveredQuantValidation(arr: number[], control: FormControl) {\r\n        let max = Math.max(...arr);\r\n        if (control.value > max)\r\n            this.validationService.addError(control, 'maxQuantity');\r\n        else\r\n            this.validationService.removeError(control, 'maxQuantity');\r\n    }\r\n}\r\n\r\n","<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                style=\"height: 100vh\">\r\n\r\n        <a (click)=\"toggleOpen(false, null)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n\r\n        <content class=\"pr30\">\r\n            <h3 class=\"dib ml10 mt10 mb10\">Add BOL Details</h3>\r\n            <div class=\"row\" [formGroup]=\"BolDetailForm\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <input type=\"hidden\" placeholder=\"Id\" formControlName=\"Id\" />\r\n                    <label for=\"BolNumber\">BOL #:<span class=\"color-maroon\">*</span></label>\r\n                    <input name=\"BolNumber\" formControlName=\"BolNumber\" class=\"form-control\" />\r\n                    <div *ngIf=\"isInvalid('BolNumber')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('BolNumber')\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"LiftDate\">Lift Date:<span class=\"color-maroon\">*</span></label>\r\n                    <input name=\"LiftDate\" formControlName=\"LiftDate\" id=\"bolDate\" class=\"form-control\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"BolDetailForm.get('LiftDate').setValue($event)\" />\r\n                    <!--<p-calendar formControlName=\"LiftDate\" dateFormat=\"mm/dd/yy\"></p-calendar>-->\r\n                    <div *ngIf=\"isInvalid('LiftDate') && isRequired('LiftDate')\" class=\"color-maroon\">\r\n                            Required.\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"BadgeNumber\">Badge #:<span *ngIf=\"isBadgeMandatory\" class=\"color-maroon\">*</span></label>\r\n                    <input name=\"BadgeNumber\" formControlName=\"BadgeNumber\" [required]=\"isBadgeMandatory\" class=\"form-control\"/>\r\n                    <div *ngIf=\"isInvalid('BadgeNumber')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('BadgeNumber')\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-12\"><div class=\"border-b mb15\"></div></div>\r\n                <div formArrayName=\"Products\" class=\"col-sm-12\">\r\n                    <ng-container *ngFor=\"let product of BolDetailForm.get('Products')['controls']; let i = index;\">\r\n                        <div class=\"row\" [formGroupName]=\"i\" id=\"bolProduct_{{i}}\">\r\n                            <div class=\"col-sm-12 form-group\">\r\n                                <input type=\"hidden\" formControlName=\"ProductId\" />\r\n                                <input type=\"hidden\" formControlName=\"ProductName\" />\r\n                                <input type=\"hidden\" #productOrderId formControlName=\"OrderId\" />\r\n                                <input type=\"hidden\" formControlName=\"QuantityIndicatorTypeId\" />\r\n                                <b><span class=\"fa fa-tint\"></span> {{product.get('ProductName').value}}</b>\r\n                            </div>\r\n                            <div class=\"col-sm-4 form-group mb10\">\r\n                                <label for=\"GrossQuantity\">Gross Quantity:</label>\r\n                                <div class=\"input-group\">\r\n                                    <input name=\"GrossQuantity\" formControlName=\"GrossQuantity\" class=\"form-control\" numberWithDecimal [requiredIfTrue]=\"product.get('NetQuantity').value>0 || product.get('DeliveredQuantity').value>0\"\r\n                                           (input)=\"setDeliveredQuantValidation([$event.target.value, product.get('NetQuantity').value], product.get('DeliveredQuantity'))\"/>\r\n                                    <div class=\"input-group-addon fs12\"> {{product.get('UOM').value}}</div>\r\n                                </div>\r\n                                <span class=\"help-block color-maroon mb0\" *ngIf=\"product.get('GrossQuantity').errors && (product.get('GrossQuantity').touched ||\r\n                                  product.get('GrossQuantity').dirty)\">\r\n                                    <span *ngIf=\"product.get('GrossQuantity').errors.required\">\r\n                                        Required.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('GrossQuantity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-sm-4 form-group mb10\">\r\n                                <label for=\"NetQuantity\">Net Quantity:</label>\r\n                                <div class=\"input-group\">\r\n                                    <input name=\"NetQuantity\"  formControlName=\"NetQuantity\" class=\"form-control\" numberWithDecimal [requiredIfTrue]=\"product.get('GrossQuantity').value>0 || product.get('DeliveredQuantity').value>0\"\r\n                                           (input)=\"setDeliveredQuantValidation([product.get('GrossQuantity').value, $event.target.value], product.get('DeliveredQuantity'))\"/>\r\n                                    <div class=\"input-group-addon fs12\"> {{product.get('UOM').value}}</div>\r\n                                </div>\r\n                                <span class=\"help-block color-maroon\" *ngIf=\"product.get('NetQuantity').errors && (product.get('NetQuantity').touched ||\r\n                                  product.get('NetQuantity').dirty)\">\r\n                                    <span *ngIf=\"product.get('NetQuantity').errors.required\">\r\n                                        Required.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('NetQuantity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-sm-4 \">\r\n                                <label for=\"\">Delivered Quantity:</label>\r\n                                <div class=\"input-group\">\r\n                                    <!-- delivered Qty data here-->\r\n                                    <input name=\"DeliveredQuantity\" formControlName=\"DeliveredQuantity\" class=\"form-control\" numberWithDecimal [requiredIfTrue]=\"product.get('NetQuantity').value>0 || product.get('GrossQuantity').value>0\" (input)=\"setDeliveredQuantValidation([product.get('GrossQuantity').value, product.get('NetQuantity').value], product.get('DeliveredQuantity'))\"/>\r\n                                    <div class=\"input-group-addon fs12\"> {{product.get('UOM').value}}</div>\r\n                                </div>\r\n                                <span class=\"help-block color-maroon\" *ngIf=\"product.get('DeliveredQuantity').errors && (product.get('DeliveredQuantity').touched ||\r\n                                  product.get('DeliveredQuantity').dirty)\">\r\n                                    <span *ngIf=\"product.get('DeliveredQuantity').errors.required\">\r\n                                        Required.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('DeliveredQuantity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('DeliveredQuantity').errors.maxQuantity\">\r\n                                        Quantity should not be greater than net/gross quantity.\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"clearboth col-sm-4 \">\r\n                                <div class=\"form-group\" *ngIf=\"product.get('TerminalId').value>0\">\r\n                                    <label>Terminal Price:</label>\r\n                                    <label class=\"db\">{{product.get('TerminalPrice').value}} {{Currency}}</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4 form-group mb10\" *ngIf=\"product.get('TerminalId').value>0\">\r\n                                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingTerminals\">\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </div>\r\n                                <label for=\"Terminal\">Terminal:</label>\r\n                                <input type=\"hidden\" formControlName=\"TerminalId\" />\r\n                                <input type=\"text\" formControlName=\"TerminalName\" class=\"form-control\" (input)=\"onTerminalSearched($event,productOrderId.value);\" (blur)=\"validateTerminal(product,$event,productOrderId.value)\" />\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li class=\"form-text\" *ngIf=\"minCharRequired\"><small>Enter minimum 3 characters to search.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"searchError\"><small>Something went wrong.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"_loadingTerminals\"><small>Loading...</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"noTerminalFound && !minCharRequired && !searchError && !_loadingTerminals \"><small>No terminal found.</small></li>\r\n                                    <li *ngFor=\"let terminal of Terminals;\" (click)=\"setTerminalName(product, terminal)\"\r\n                                        [attr.selected]=\"terminal.Name==product.get('TerminalName').value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n</ng-container>\r\n                </div>\r\n                <div class=\"col-sm-12 text-right\" id=\"bol_inner_button\">\r\n                    <button class=\"btn btn-lg\" (click)=\"cancelBolDetail()\">Cancel</button>\r\n                    <button class=\"btn btn-primary btn-lg\" *ngIf=\"EditIndex == -1\" [disabled]=\"BolDetailForm.invalid\" (click)=\"addBolDetail()\"><i class=\"fa fa-plus-circle\"></i> Add</button>\r\n                    <button class=\"btn btn-primary btn-lg\" *ngIf=\"EditIndex > -1\" [disabled]=\"BolDetailForm.invalid\" (click)=\"updatedBolDetail()\"><i class=\"fa fa-edit\"></i> Update</button>\r\n                </div>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChildren, QueryList, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators, FormGroup, AbstractControl } from '@angular/forms';\r\nimport { BolDetail, BolProductModel, QuantityInfo } from '../models/DropDetail';\r\nimport { ImageuploadComponent, FileInfo } from 'src/app/imageupload/imageupload.component';\r\n\r\n\r\n@Component({\r\n    selector: 'app-bol-list',\r\n    templateUrl: './bol-list.component.html',\r\n    styleUrls: ['./bol-list.component.css']\r\n})\r\nexport class BolListComponent implements OnInit, OnChanges {\r\n    public files = new Array<FileInfo>();\r\n    public quantities = new Array<QuantityInfo>();\r\n\r\n    @Input() public Parent: FormGroup;\r\n    @Input() public BolDetails: FormArray;\r\n    @Input() public Model: BolDetail[];\r\n\r\n    @Output() public onBolEditRequest: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input() public IsImageRequired: boolean;\r\n    public IsBolImageRequired: boolean = false;\r\n\r\n    @Output() public onBolAdded: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public OnBolDeleted: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public onBolEdit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() public OnBolQuantitiesAdded: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChildren(ImageuploadComponent) children: QueryList<ImageuploadComponent>;\r\n\r\n    constructor(private fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsImageRequired && change.IsImageRequired.currentValue != null) {\r\n            this.IsBolImageRequired = change.IsImageRequired.currentValue;\r\n        }\r\n        if (change.Model && change.Model.currentValue != null) {\r\n            var bols = change.Model.currentValue as BolDetail[];\r\n            bols.forEach(x => this.bolDetailAdded(x));\r\n        }\r\n    }\r\n    buildForm(model: BolDetail): FormGroup {\r\n\r\n        var products = this.fb.array([]);\r\n\r\n        var currentObj = this;\r\n        model.Products.forEach(function (elem, idx) {\r\n            products.push(currentObj.buildProduct(elem));\r\n        });\r\n        //this.IsFormBuilt = true;\r\n\r\n\r\n        return this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            BolNumber: this.fb.control(model.BolNumber),\r\n            LiftDate: this.fb.control(model.LiftDate),\r\n            BadgeNumber: this.fb.control(model.BadgeNumber),\r\n            Products: products,\r\n            BolImages: this.fb.control(''),\r\n        });\r\n    }\r\n\r\n\r\n    buildProduct(model: BolProductModel): FormGroup {\r\n        return this.fb.group({\r\n            ProductId: this.fb.control(model.ProductId),\r\n            ProductName: this.fb.control(model.ProductName),\r\n            NetQuantity: this.fb.control(model.NetQuantity),\r\n            GrossQuantity: this.fb.control(model.GrossQuantity),\r\n            TerminalId: this.fb.control(model.TerminalId),\r\n            TerminalName: this.fb.control(model.TerminalName),\r\n            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId),\r\n            DeliveredQuantity: this.fb.control(model.DeliveredQuantity),\r\n        });\r\n    }\r\n\r\n    bolDetailAdded(item: BolDetail): void {\r\n        if (item.LiftDate && item.LiftDate.indexOf('/Date(') >= 0) {\r\n            item.LiftDate = item.DisplayLiftDate || '';\r\n        }\r\n        this.BolDetails.push(this.buildForm(item));\r\n        this.onBolAdded.emit(this.BolDetails.value);\r\n        this.OnBolQuantitiesAdded.emit();\r\n    }\r\n\r\n    bolDetailUpdated(item: any): void {\r\n        var formG = this.BolDetails.controls[item.index] as FormGroup;\r\n        formG.patchValue(item.bolDetail);       \r\n        this.OnBolQuantitiesAdded.emit();\r\n    }\r\n\r\n    editBolDetail(bolDetail: FormGroup, i: number): any {\r\n        this.onBolEditRequest.emit({ bolDetail: bolDetail.value, index: i });\r\n        this.onBolEdit.emit(bolDetail.value);\r\n    }\r\n\r\n    deleteBolDetail(i: number): void {\r\n        this.BolDetails.removeAt(i);\r\n        this.OnBolDeleted.emit(this.BolDetails.value);\r\n        this.OnBolQuantitiesAdded.emit();\r\n    }\r\n}\r\n\r\n","<div [formGroup]=\"Parent\" class=\"well box-shadow\" *ngIf=\"BolDetails?.controls?.length > 0\">\r\n    <div formArrayName=\"BolDetails\">\r\n        <ng-container *ngFor=\"let boldetail of BolDetails?.controls; let i = index; let isFirstBol = first;\">\r\n            <div [formGroupName]=\"i\">\r\n                <div *ngIf=\"isFirstBol\">\r\n                    <div class=\"row f-bold\">\r\n                        <div class=\"col-sm-2\">BOL #</div>\r\n                        <div class=\"col-sm-1\">Badge #</div>\r\n                        <div class=\"col-sm-2\">Product</div>\r\n                        <div class=\"col-sm-2\">Terminal</div>\r\n                        <div class=\"col-sm-1\">Gross</div>\r\n                        <div class=\"col-sm-1\">Net</div>\r\n                        <div class=\"col-sm-2\">Delivered</div>\r\n                        <div class=\"col-sm-1\">&nbsp;</div>\r\n                    </div>\r\n                </div>\r\n                <div formArrayName=\"Products\">\r\n                    <ng-container *ngFor=\"let product of boldetail.get('Products').controls; let j = index; let isFirstPrd = first;\">\r\n                        <div class=\"row\" [formGroupName]=\"j\">\r\n                            <div class=\"col-sm-2\">\r\n                                <span *ngIf=\"isFirstPrd\"> {{boldetail.get('BolNumber').value}}</span>\r\n                                &nbsp;\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <span *ngIf=\"isFirstPrd\"> {{boldetail.get('BadgeNumber').value}}</span> \r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <span *ngIf=\"product.get('NetQuantity').value && product.get('GrossQuantity').value\">\r\n                                    <span class=\"fa fa-tint\"></span> {{product.get('ProductName').value}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <span *ngIf=\"product.get('NetQuantity').value && product.get('GrossQuantity').value\">\r\n                                    <span class=\"fa fa-tint\"></span> {{product.get('TerminalName').value}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                {{product.get('GrossQuantity').value}}\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                {{product.get('NetQuantity').value}}\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                {{product.get('DeliveredQuantity').value}}\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <a *ngIf=\"product.get('NetQuantity').value && product.get('GrossQuantity').value\" (click)=\"editBolDetail(boldetail, i)\"><i class=\"fa fa-edit fs14\"></i></a>\r\n                                <a *ngIf=\"product.get('NetQuantity').value && product.get('GrossQuantity').value && isFirstPrd \" (click)=\"deleteBolDetail(i)\"><i class=\"fa fa-trash-alt ml10 color-maroon\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"row mt20\">\r\n                    <div class=\"col-sm-4\">\r\n                        <app-imageupload [fileType]=\"'bolFile'\" [orderId]=\"boldetail.get('BolNumber').value\" formControlName=\"BolImages\" [inputFile]=\"Model[i]==undefined?[]:Model[i].ImageList\" [isBol]=\"true\" [requiredIfTrue]=\"IsBolImageRequired\"></app-imageupload>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mb20 border-b-dash\"></div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChild, ViewChildren, QueryList, Output, EventEmitter, OnChanges, SimpleChanges, AfterContentChecked, ChangeDetectorRef, ChangeDetectionStrategy, AfterContentInit, AfterViewChecked, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { InvoiceService } from './services/invoice.service';\r\nimport { InvoiceDetailModel, AssetDropModel, DropDetailModel, FeeModel, OtherProductTaxModel, DeDuplicateFees, ImageModel, BlendedSchedules, BlendedScheduleDetail, AccessorialFeeTableDetailViewModel } from './models/DropDetail';\r\nimport { ProducDetailComponent } from './produc-detail/produc-detail.component';\r\nimport { ImageuploadComponent } from '../imageupload/imageupload.component';\r\nimport { BolListComponent } from './bol-detail/bol-list.component';\r\nimport { LiftTicketsComponent } from './lift-tickets/lift-tickets.component';\r\nimport { OtherProductTaxesComponent } from './taxes/other-product-taxes.component';\r\nimport { Declarations } from '../declarations.module';\r\nimport { Country } from '../carrier/models/location';\r\nimport { WaitingAction, FreightPricingMethod} from 'src/app/app.enum';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\n\r\n@Component({\r\n    selector: 'app-createinvoice',\r\n    templateUrl: './createinvoice.component.html',\r\n    styleUrls: ['./createinvoice.component.css']\r\n})\r\nexport class CreateinvoiceComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n    public DtTrigger: Subject<any> = new Subject();\r\n    public orderId: number;\r\n    public trackableScheduleId: number = 0;\r\n    public invoiceId: number = 0;\r\n    public invoiceForm: FormGroup;\r\n    public PoList = [];\r\n    public DriverList = [];\r\n    public PoDdlSettings = {};\r\n    public DriverDdlSettings = {}\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById = {};\r\n    public SelectedDriver = [];\r\n    //public completeInvoiceViewModel: any;\r\n    public InvoiceModel: InvoiceDetailModel;\r\n    //public AssetDrops: AssetDropModel[];\r\n    public InvoiceFees: FeeModel[];\r\n    public AccessorialTableDetails: AccessorialFeeTableDetailViewModel[];\r\n    public OtherProductTaxes: OtherProductTaxModel[];\r\n    public OtherProductAdded: boolean = false; \r\n\r\n    public IsFrieghtPricingMethodAuto: boolean = false;\r\n    public IsSignatureRequired: boolean = false;\r\n    public IsBOLImageRequired: boolean = false;\r\n    public IsDropImageRequired: boolean = false;\r\n    public IsBolDetailsRequired: boolean = false;\r\n    //public IsFTL: boolean = false;\r\n    public IsSupressOrderPricing: boolean = false;\r\n    //public InvoiceTypeId: number;\r\n    public BlendedScheduleDetail: BlendedScheduleDetail[] = [];    \r\n\r\n    public InvalidFtlDetails: boolean = false;\r\n    public InvalidBOLDetails: boolean = false;\r\n    public Currency: string; // sending Currency as Input property to feelist component\r\n    public IsDateInvalid: boolean = false;\r\n    public InValidBolImage: boolean = false;\r\n    public dropInfos = new Array<DropInfo>();\r\n    public IsInvalidFtlDetailsnew: boolean = false; // new flag added here ccroding to change validation \r\n    public IsInvalidFtlDetailsnewlift: boolean = false; // new flag added here ccroding to changes validation \r\n    public InvalidDropInfos = new Array<InvalidDropDetailInfo>();\r\n    public MissingImgInfos = new Array<MissingImageInfo>();\r\n    public IsLoading: boolean = false;\r\n    public IsLoadingImages: boolean = false;\r\n    public hasDuplicateProduct: boolean;\r\n    public disabled: boolean = false;\r\n    public InvoiceImage: ImageModel;\r\n    public InvoiceImages: ImageModel[] = [];\r\n    public SignatureImage: ImageModel;\r\n    public SignatureImages: ImageModel[] = [];\r\n    public TaxAffidavitImage: ImageModel;\r\n    public TaxAffidavitImages: ImageModel[] = [];\r\n    public BDNImage: ImageModel;\r\n    public BDNImages: ImageModel[] = [];\r\n    public CoastGuardInspectionImage: ImageModel;\r\n    public CoastGuardInspectionImages: ImageModel[] = [];\r\n    public InspectionRequestVoucherImage: ImageModel;\r\n    public InspectionRequestVoucherImages: ImageModel[] = [];\r\n    public AdditionalImage: ImageModel;\r\n    public AdditionalImages: ImageModel[] = [];\r\n    public InvoiceNotes: string;\r\n    public disableInputControls: boolean = false;\r\n    public waitingAction: number = 0;\r\n    public baseDetailUrl: string;\r\n    public IsBadgeMandatory: boolean = false;\r\n    public exceptionId: number = 0;\r\n    public NoOrders: boolean;\r\n    @ViewChildren(ImageuploadComponent) imageuploadComponents: QueryList<ImageuploadComponent>;\r\n    @ViewChildren(BolListComponent) BolListComponents: QueryList<BolListComponent>;\r\n    @ViewChildren(LiftTicketsComponent) LiftTicketsComponents: QueryList<BolListComponent>;\r\n    @ViewChild(OtherProductTaxesComponent) otherProductTax: OtherProductTaxesComponent;\r\n    \r\n    constructor(\r\n        private fb: FormBuilder, \r\n        private route: ActivatedRoute,\r\n        private invoiceService: InvoiceService,\r\n        private cdr: ChangeDetectorRef) {\r\n        this.invoiceForm = this.fb.group({\r\n            PaymentTerm: this.fb.control(''),\r\n            Customer: this.fb.control(''),\r\n            BolDetails: this.fb.array([]),\r\n            TicketDetails: this.fb.array([]),\r\n            InvoiceTypeId: this.fb.control(''),\r\n            IsVariousOrigin: this.fb.control(''),\r\n            InvoiceNotes: this.fb.control(''),\r\n            InvoiceImages: this.fb.control(''),\r\n            AdditionalImages: this.fb.control(''),\r\n            SignatureImages: this.fb.control(''),\r\n            TaxAffidavitImages:this.fb.control(''), \r\n            BDNImages:this.fb.control(''),\r\n            CoastGuardInspectionImages:this.fb.control(''),\r\n            InspectionRequestVoucherImages:this.fb.control(''),\r\n            FuelDropLocation: this.fb.control(''),\r\n            OriginalInvoiceHeaderId: this.fb.control(''),\r\n            IsRebillInvoice: this.fb.control(''),\r\n            SupplierInvoiceNumber: this.fb.control(''),\r\n            Driver: this.fb.control({}),\r\n            SelectedDriver: this.fb.control({}),\r\n            Carrier: this.fb.control(''),\r\n            BrokerChainId: this.fb.control(''),\r\n            ExistingHeaderId: this.fb.control(0),\r\n            SelectedOrders: this.fb.control([]),           \r\n        });\r\n\r\n        this.OtherProductTaxes = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.orderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);\r\n        if (this.route.snapshot.queryParamMap.get('existingHeaderId'))\r\n            this.invoiceForm.controls.ExistingHeaderId.setValue(this.route.snapshot.queryParamMap.get('existingHeaderId'));\r\n        this.trackableScheduleId = parseInt(this.route.snapshot.queryParamMap.get('trackableScheduleId'), 10);\r\n        this.waitingAction = parseInt(this.route.snapshot.queryParamMap.get('waitingAction'), 10);\r\n        this.exceptionId = parseInt(this.route.snapshot.queryParamMap.get('del-exceptionId'), 10);\r\n        var invId = parseInt(this.route.snapshot.params.number, 10);\r\n        this.baseDetailUrl = '/Supplier/Order/Details/' + this.orderId;\r\n        if (this.trackableScheduleId > 0) {\r\n            this.baseDetailUrl = '/Carrier/ScheduleBuilder';\r\n        }\r\n        if (invId > 0) {\r\n            this.invoiceId = invId;\r\n            if (this.waitingAction == WaitingAction.BolDetails) {\r\n                this.disableInputControls = true;\r\n            }\r\n        }\r\n                \r\n        this.PoDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'OrderId',\r\n            textField: 'DisplayPoNumber',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.DriverDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };       \r\n        this.invoiceService.getDriverList().subscribe(data => this.DriverList = data);       \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.invoiceForm.addControl('Drops', this.productList.DropGroup);\r\n        //this.productList.DropGroup.setParent(this.invoiceForm);\r\n\r\n        this.getPoDetailsList(this.orderId);\r\n        if (this.invoiceId > 0) {\r\n            this.getInvoiceDetails(this.invoiceId);\r\n        } else {\r\n            this.getDefaultDetail(this.orderId);\r\n        }\r\n        //this.getChildProperty();  \r\n    }\r\n\r\n    ngAfterViewChecked(){\r\n        this.cdr.detectChanges();\r\n    }\r\n   \r\n    public OnDriverSelect(driver: any) {\r\n        this.invoiceForm.get('Driver').patchValue(driver);\r\n    }\r\n\r\n    public OnDriverDeSelect(driver: any) {\r\n        this.invoiceForm.get('Driver').patchValue(null);\r\n    }\r\n   \r\n    initFormData(model: InvoiceDetailModel): void {      \r\n        var fuelDropLocation = null;\r\n        if (model.FuelDropLocation != undefined && model.FuelDropLocation != null) {\r\n            fuelDropLocation = {\r\n                IsAddressAvailable: false,\r\n                Address: model.FuelDropLocation.Address,\r\n                City: model.FuelDropLocation.City,\r\n                State: {\r\n                    Id: model.FuelDropLocation.State.Id,\r\n                    Code: model.FuelDropLocation.State.Code\r\n                },\r\n                Country: {\r\n                    Id: model.FuelDropLocation.Country.Id,\r\n                    Code: model.FuelDropLocation.Country.Code\r\n                },\r\n                Latitude: model.FuelDropLocation.Latitude,\r\n                Longitude: model.FuelDropLocation.Longitude,\r\n                CountyName: model.FuelDropLocation.CountyName,\r\n                ZipCode: model.FuelDropLocation.ZipCode\r\n            };\r\n        }\r\n        if (model.InvoiceImages != null && model.InvoiceImages != undefined) {\r\n            this.InvoiceImages = model.InvoiceImages;\r\n        }\r\n        if (model.AdditionalImages != null && model.AdditionalImages != undefined) {\r\n            this.AdditionalImages = model.AdditionalImages;\r\n        }\r\n        if (model.SignatureImages != null && model.SignatureImages != undefined) {\r\n            this.SignatureImages = model.SignatureImages;\r\n        }\r\n        if (model.TaxAffidavitImages != null && model.TaxAffidavitImages != undefined) {\r\n            this.TaxAffidavitImages = model.TaxAffidavitImages;\r\n        }\r\n        if (model.BDNImages != null && model.BDNImages != undefined) {\r\n            this.BDNImages = model.BDNImages;\r\n        }        \r\n        if (model.CoastGuardInspectionImages != null && model.CoastGuardInspectionImages != undefined) {\r\n            this.CoastGuardInspectionImages = model.CoastGuardInspectionImages;\r\n        }\r\n        if (model.InspectionRequestVoucherImages != null && model.InspectionRequestVoucherImages != undefined) {\r\n            this.InspectionRequestVoucherImages = model.InspectionRequestVoucherImages;\r\n        }\r\n        if (model.InvoiceNotes != null && model.InvoiceNotes != undefined) {\r\n            this.InvoiceNotes = model.InvoiceNotes;\r\n        }\r\n        this.SignatureImage = model.SignatureImage;\r\n        this.TaxAffidavitImage=model.TaxAffidavitImage;\r\n        this.BDNImage =model.BDNImage;\r\n        this.CoastGuardInspectionImage=model.CoastGuardInspectionImage;\r\n        this.InspectionRequestVoucherImage=model.InspectionRequestVoucherImage;\r\n        this.products.IsMarineLocation = model.Customer.Location.IsMarineLocation;\r\n        //if (model.BolDetails != null && model.BolDetails != undefined)\r\n        //    model.BolDetails.forEach(x => {\r\n        //        if (x.Images != null && x.Images != undefined) {\r\n        //            x.Images.ImageData = x.Images.AzurePath;\r\n        //            x.ImageList = [x.Images];\r\n        //        }\r\n        //    });\r\n\r\n        //if (model.TicketDetails != null && model.TicketDetails != undefined)\r\n        //    model.TicketDetails.forEach(x => {\r\n        //        if (x.ImageList != null && x.ImageList != undefined) {\r\n        //            x.Images.ImageData = x.Images.AzurePath;\r\n        //            x.ImageList = [x.Images];\r\n        //        }\r\n        //    });\r\n\r\n        this.invoiceForm.patchValue({\r\n            PaymentTerm: {\r\n                TermId: model.PaymentTerm.TermId,\r\n                NetDays: model.PaymentTerm.NetDays\r\n            },\r\n            Customer: {\r\n                CompanyId: model.Customer.CompanyId,\r\n                CompanyName: model.Customer.CompanyName,\r\n                Location: {\r\n                    JobId: model.Customer.Location.JobId,\r\n                    SiteName: model.Customer.Location.SiteName,\r\n                    Address: model.Customer.Location.Address,\r\n                    City: model.Customer.Location.City,\r\n                    StateCode: model.Customer.Location.StateCode,\r\n                    ZipCode: model.Customer.Location.ZipCode,\r\n                    CountryId: model.Customer.Location.CountryId,\r\n                },\r\n                ContactName: model.Customer.ContactName,\r\n                ContactPhone: model.Customer.ContactPhone,\r\n                ContactEmail: model.Customer.ContactEmail\r\n            },\r\n            FuelDropLocation: fuelDropLocation,\r\n            InvoiceTypeId: model.InvoiceTypeId,\r\n            IsVariousOrigin: model.IsVariousOrigin,\r\n            InvoiceNotes: model.InvoiceNotes,\r\n            OriginalInvoiceHeaderId: model.OriginalInvoiceHeaderId,\r\n            IsRebillInvoice: model.IsRebillInvoice,\r\n            SupplierInvoiceNumber: model.SupplierInvoiceNumber,\r\n            Driver: model.Driver,\r\n            SelectedDriver: [model.Driver],\r\n            Carrier: model.Carrier,\r\n            BrokerChainId: model.BrokerChainId,\r\n            SelectedOrders: [],\r\n        });\r\n    }\r\n\r\n    @ViewChild(ProducDetailComponent) products: ProducDetailComponent;\r\n\r\n    public recieveChildImages(entireInvoiceModel, sas) {\r\n        var allPromises = [];\r\n\r\n        this.imageuploadComponents.forEach(imageComponent => { allPromises.push(imageComponent.UploadFile(entireInvoiceModel, sas)) });\r\n\r\n        this.BolListComponents.forEach(a => a.children.forEach(y => allPromises.push(y.UploadFile(entireInvoiceModel, sas))));\r\n\r\n        this.LiftTicketsComponents.forEach(a => a.children.forEach(y => allPromises.push(y.UploadFile(entireInvoiceModel, sas))));\r\n\r\n        return Promise.all(allPromises);\r\n    }\r\n\r\n    public onOrderSelect(item: any, trackableScheduleId: number = 0, blendedScheduleId: string = '', deliveryLevelPO:string=''): void {\r\n        this.getAnotherProduct(item.OrderId, trackableScheduleId, blendedScheduleId, deliveryLevelPO);\r\n        this.NoOrders = false;\r\n    }\r\n\r\n    public onOrderDeSelect(item: any, isAvoidBlend: boolean = false): void {\r\n        if (!isAvoidBlend) {\r\n            let existBlendDetail = this.BlendedScheduleDetail.find(t => t && t.Schedules && t.Schedules.some(x => x.OrderId == item.OrderId));\r\n            if (existBlendDetail && existBlendDetail.BlendId && existBlendDetail.BlendId != '') {\r\n                this.RemoveBlendSchedules(existBlendDetail.BlendId, true);\r\n            }\r\n        }\r\n        this.products.removeProduct(item);\r\n        this.clearDropInfo(item);\r\n        var dropIndex = this.InvoiceModel.Drops.findIndex(function (elem, idx) {\r\n            return elem.OrderId == item.OrderId;\r\n        });\r\n        if (dropIndex >= 0) {\r\n            this.InvoiceModel.Drops.splice(dropIndex, 1);\r\n            this.OtherProductTaxes = this.OtherProductTaxes.filter(function (elem) {\r\n                return elem.OrderId != item.OrderId\r\n            });\r\n            if (this.otherProductTax != null) {\r\n                this.otherProductTax.removeOrderTaxes(item.OrderId);\r\n            }\r\n            if (!this.InvoiceModel.Drops.some(t1 => t1.TypeOfFuel == 10 || t1.TypeOfFuel == 26) && this.OtherProductTaxes.length == 0) {\r\n                this.OtherProductAdded = false;\r\n            }\r\n        }\r\n\r\n        if (this.IsFrieghtPricingMethodAuto) {\r\n            let combinedIds = null;\r\n            this.NoOrders = true;\r\n            let items = this.invoiceForm.get('SelectedOrders').value;\r\n            let ids = items.map(s => s.OrderId);\r\n            if (ids.length == 0) {\r\n                 combinedIds = this.orderId\r\n            } else {\r\n                 combinedIds = this.orderId + \",\" + ids.join(',');\r\n            }\r\n            this.invoiceService.GetAccessorialFeeTablesForSelectedOrder(combinedIds).subscribe(response => {\r\n                this.AccessorialTableDetails = response;\r\n            });\r\n        }\r\n    }\r\n\r\n    private getAnotherProduct(_orderId: number, _trackableScheduleId: number, _blendedScheduleId: string, deliveryLevelPO:string) {\r\n        this.invoiceService.getAnotherProductDetail(_orderId)\r\n            .subscribe((data: DropDetailModel) => {\r\n                this.setImageFlags(data);// SET ANOTHER PRODUCT DETAILS IMAGE FLAGS \r\n                this.setDropInfo(data);  \r\n                if (data != null && data != undefined) {\r\n                    if (_trackableScheduleId && _trackableScheduleId > 0) {\r\n                        data.TrackableScheduleId = _trackableScheduleId;\r\n                        data.BlendedScheduleId = _blendedScheduleId;\r\n                    }\r\n                    if (data.FreightPricingMethod == FreightPricingMethod.Manual) {\r\n                        this.IsFrieghtPricingMethodAuto = false;\r\n                    } else {\r\n                        this.IsFrieghtPricingMethodAuto = true;\r\n                        let items = this.invoiceForm.get('SelectedOrders').value;\r\n                        if (items != null && items != undefined && items.length > 0) {\r\n                            let ids = items.map(s => s.OrderId);\r\n                            let combinedIds = this.orderId + \",\" + ids.join(',');\r\n                            this.invoiceService.GetAccessorialFeeTablesForSelectedOrder(combinedIds).subscribe(response => {\r\n                                this.AccessorialTableDetails = response;\r\n                            });\r\n                        }\r\n                    }\r\n                    data.DeliveryLevelPO = deliveryLevelPO;\r\n                    this.getAnotherDropFees(_orderId);\r\n                    this.InvoiceModel.Drops.push(data);\r\n                    this.products.addProduct(data);\r\n                    if ((data.TypeOfFuel == 10 || data.TypeOfFuel == 26) && !this.OtherProductAdded) {\r\n                        this.OtherProductAdded = true;\r\n                    }\r\n                    if (this.OtherProductAdded && data.OtherTaxDetails != null && data.OtherTaxDetails != undefined) {\r\n                        this.OtherProductTaxes = this.OtherProductTaxes.concat(data.OtherTaxDetails);\r\n                    }              \r\n                }             \r\n            });\r\n    }\r\n    setCurrency(data: DropDetailModel) { //SET THE CURRENCY ACCOR. TO ENUM \r\n        //None = 0,\r\n        //USD = 1,\r\n        //CAD = 2\r\n        var Currency = data.Currency;\r\n        if (Currency == \"1\") {\r\n            this.Currency = \"USD\";\r\n        }\r\n        else if (Currency == \"2\") {\r\n            this.Currency = \"CAD\";\r\n        }\r\n    }\r\n    setDropInfo(drop: DropDetailModel) {\r\n        this.dropInfos.push({\r\n            OrderId: drop.OrderId,\r\n            ProductId: drop.FuelTypeId,\r\n            PoNumber: drop.PoNumber,\r\n            IsBOLImageRequired: drop.IsBOLImageRequired,\r\n            IsDropImageRequired: drop.IsDropImageRequired,\r\n            IsBolDetailsRequired: drop.IsBolDetailsRequired,\r\n            IsSignatureRequired: drop.IsSignatureRequired,\r\n            //IsFTL: drop.IsFTL\r\n        });\r\n    }\r\n    clearDropInfo(item: any) {\r\n        var index = this.dropInfos.findIndex(function (element, idx) {\r\n            return element.OrderId == item.OrderId;\r\n        });\r\n        if (index >= 0) {\r\n            this.dropInfos.splice(index, 1);\r\n        }\r\n    }\r\n    private getDefaultDetail(_orderId: number) {\r\n        this.invoiceService.getDefaultDetail(_orderId, this.trackableScheduleId)\r\n            .subscribe(data => {\r\n                //this.InvoiceTypeId = data.InvoiceTypeId;                \r\n                this.InvoiceModel = data;\r\n                this.IsBadgeMandatory = this.InvoiceModel.IsBadgeMandatory;\r\n                this.initFormData(data);\r\n                this.InvoiceFees = data.Fees;\r\n                this.setImageFlags(data.Drops[0]);\r\n                this.setCurrency(data.Drops[0]);\r\n                this.setDropInfo(data.Drops[0]);\r\n                if (data.Drops != undefined && data.Drops != null && data.Drops.length > 0) {\r\n                    this.OtherProductAdded = (data.Drops[0].TypeOfFuel == 10 || data.Drops[0].TypeOfFuel == 26);\r\n                }\r\n                if (this.OtherProductAdded) {\r\n                    this.OtherProductTaxes = data.Drops[0].OtherTaxDetails;\r\n                }\r\n                this.IsSupressOrderPricing = data.IsSupressOrderPricing;\r\n                if (data.Drops[0].IsFreightOnlyOrder) {\r\n                    this.baseDetailUrl = '/Carrier/Order/Details/' + this.orderId;\r\n                }\r\n                if (data.Drops[0].FreightPricingMethod == FreightPricingMethod.Manual) {\r\n                    this.IsFrieghtPricingMethodAuto = false;\r\n                } else {\r\n                    this.IsFrieghtPricingMethodAuto = true;\r\n                    this.AccessorialTableDetails = data.AccessorialFeeDetails;\r\n                }\r\n            });    \r\n    }\r\n    setFTLValidators() {\r\n        this.invoiceForm.controls['BolDetails'].setValidators([Validators.required]);\r\n        this.invoiceForm.controls['TicketDetails'].setValidators([Validators.required]);\r\n    }\r\n    setImageFlags(drop: DropDetailModel): void {\r\n        this.IsBOLImageRequired = this.IsBOLImageRequired || drop.IsBOLImageRequired;\r\n        this.IsBolDetailsRequired = this.IsBolDetailsRequired || drop.IsBolDetailsRequired;\r\n        this.IsDropImageRequired = this.IsDropImageRequired || drop.IsDropImageRequired;\r\n        this.IsSignatureRequired = this.IsSignatureRequired || drop.IsSignatureRequired;\r\n\r\n        //this.IsFTL = this.IsFTL || drop.IsFTL;\r\n        //this.IsFTL || \r\n\r\n        if (this.IsBOLImageRequired || this.IsBolDetailsRequired) {\r\n            this.setFTLValidators();\r\n        }\r\n        //this.IsSignatureRequired = drop.IsSignatureRequired;\r\n    }\r\n\r\n\r\n    private getInvoiceDetails(_invoiceId: number) {\r\n        this.invoiceService.getInvoiceDetails(_invoiceId)\r\n            .subscribe(response => {\r\n                if (response && response.BolDetails && response.BolDetails.length == 1 && response.BolDetails[0].BolNumber == null && response.BolDetails[0].LiftDate == null) {\r\n                    response.BolDetails = [];\r\n                }\r\n                this.InvoiceModel = response;\r\n                this.IsBadgeMandatory = this.InvoiceModel.IsBadgeMandatory;\r\n                this.initFormData(response);\r\n                this.InvoiceFees = response.Fees;\r\n                this.setCurrency(response.Drops[0]);\r\n                var currentObj = this;\r\n                response.Drops.forEach(function (elem) {\r\n                    if (elem != undefined && elem != null) {\r\n                        currentObj.OtherProductAdded = (elem.TypeOfFuel == 10 || elem.TypeOfFuel == 26) ;\r\n                    }\r\n                    if (currentObj.OtherProductAdded) {\r\n                        currentObj.OtherProductTaxes = elem.OtherTaxDetails;\r\n                    }\r\n                });\r\n                if (response.Drops[0].IsFreightOnlyOrder) {\r\n                    this.baseDetailUrl = '/Carrier/Order/Details/' + this.orderId;\r\n                }\r\n            });\r\n    }\r\n\r\n    private getPoDetailsList(_orderId: number): void {\r\n        this.invoiceService.getPoList(_orderId)\r\n            .subscribe(response => { this.PoList = response; });\r\n    }\r\n\r\n    public onCancel() {\r\n        window.location.href = this.baseDetailUrl;\r\n    }\r\n\r\n    findDuplicates() {\r\n        const drops = this.invoiceForm.get('Drops').value;\r\n        const fuelTypeIds = drops.map(item => item.FuelTypeId);\r\n        this.hasDuplicateProduct = fuelTypeIds.some(function (item, idx) {\r\n            return fuelTypeIds.indexOf(item) != idx\r\n        });\r\n    }\r\n\r\n    validateLiftDates() {\r\n        const bolDetails = this.invoiceForm.get('BolDetails').value;\r\n        const liftDates = bolDetails.map(item => item.LiftDate); //all lift dates added in bols\r\n\r\n        const dropDetails = this.invoiceForm.get('Drops').value;\r\n        const dropDates = dropDetails.map(item => item.DropDate); // all drop dates added\r\n\r\n        const ticketdetails = this.invoiceForm.get('TicketDetails').value;\r\n        const liftTicketDates = ticketdetails.map(item => item.LiftDate);// all liftdates added in lifttickets \r\n\r\n        if (dropDates.length != 0 || dropDates != undefined || dropDates != null) {\r\n            var minDropdt = this.findMinDate(dropDates);\r\n        }\r\n        this.IsDateInvalid = false;\r\n        if (liftDates.length != 0 || liftDates != undefined || liftDates != null) {\r\n            liftDates.forEach((ltdate) => {\r\n                var liftdt = new Date(ltdate);\r\n                if (minDropdt != \"NaN/NaN/NaN\") {\r\n                    if (liftdt > new Date(minDropdt)) {\r\n                        this.IsDateInvalid = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (liftTicketDates.length != 0 || liftTicketDates != undefined || liftTicketDates != null) {\r\n            liftTicketDates.forEach((liftktdate) => {\r\n                var liftdt = new Date(liftktdate);\r\n                if (minDropdt != \"NaN/NaN/NaN\") {\r\n                    if (liftdt > new Date(minDropdt)) {\r\n                        this.IsDateInvalid = true;\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n    validateDropStartEndTime() {\r\n        if (this.invoiceForm.invalid) {\r\n            if (this.invoiceForm.get(\"Drops\").value.length > 0) {\r\n                if (this.invoiceForm.get(\"Drops\").value[0].StartTime != null && this.invoiceForm.get(\"Drops\").value[0].EndTime != null) {\r\n                    let strStartTime = this.invoiceForm.get(\"Drops\").value[0].StartTime;\r\n                    let strEndTime = this.invoiceForm.get(\"Drops\").value[0].EndTime;\r\n                    let startTime = new Date().setHours(this.GetHours(strStartTime), this.GetMinutes(strStartTime), 0);\r\n                    let endTime = new Date(startTime);\r\n                    let endTimeD = endTime.setHours(this.GetHours(strEndTime), this.GetMinutes(strEndTime), 0);\r\n                    if (startTime < endTimeD) {\r\n                        if (this.invoiceForm.get(['Drops', 0, 'StartTime']).valid == false) {\r\n                            this.invoiceForm.get(['Drops', 0, 'StartTime']).setErrors(null);\r\n                        }\r\n                        if (this.invoiceForm.get(['Drops', 0, 'EndTime']).valid == false ) {\r\n                            this.invoiceForm.get(['Drops', 0, 'EndTime']).setErrors(null);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public GetHours(d) {\r\n        var h = parseInt(d.split(':')[0]);\r\n        if (d.split(':')[1].split(' ')[1] == \"PM\") {\r\n            h = h + 12;\r\n        }\r\n        return h;\r\n    }\r\n    public GetMinutes(d) {\r\n        return parseInt(d.split(':')[1].split(' ')[0]);\r\n    }\r\n    validateBolAndLiftDetails() {\r\n        var currObject = this;\r\n        this.IsInvalidFtlDetailsnew = false;\r\n        this.IsInvalidFtlDetailsnewlift = false;\r\n        this.InvalidDropInfos.length = 0;\r\n        this.MissingImgInfos.length = 0;\r\n        var bolProducts = [];// all the products inside bol details\r\n        var liftProducts = []; // all the products inside liftticket details \r\n        var missingbols = [];\r\n        var missingLifts = [];\r\n        bolProducts.length = 0;\r\n        liftProducts.length = 0;\r\n        var boldetails = this.invoiceForm.get('BolDetails').value;\r\n\r\n        boldetails.map(item => item.Products.map(prod => bolProducts.push(prod)));\r\n\r\n        // Group by all the added products according to product ids\r\n        var groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n        const bolgroupedProducts = groupBy(bolProducts, 'ProductId');\r\n        for (const productId in bolgroupedProducts) {\r\n            var key = productId;\r\n            var productsperproductId = [];\r\n            productsperproductId = bolgroupedProducts[key];\r\n            var count = 0;\r\n            var prodCount = productsperproductId.length;\r\n            productsperproductId.forEach(function (product) {\r\n                if (product.NetQuantity == \"\" && product.GrossQuantity == \"\") {\r\n                    count++;\r\n                }\r\n            });\r\n            //Means no bol details added against that product\r\n            if (prodCount == count) {\r\n                missingbols.push(productsperproductId[0]);\r\n            }\r\n        }\r\n        var ticketDetails = this.invoiceForm.get('TicketDetails').value;\r\n        ticketDetails.map(item => item.Products.map(prod => liftProducts.push(prod)));\r\n        const liftgroupedProducts = groupBy(liftProducts, 'ProductId');\r\n        for (let productId in liftgroupedProducts) {\r\n            var key = productId;\r\n            var productsperproductId = [];\r\n            productsperproductId = liftgroupedProducts[key];\r\n\r\n            var count = 0;\r\n            var prodCount = productsperproductId.length;\r\n            productsperproductId.forEach(function (product) {\r\n                if (product.NetQuantity == \"\" && product.GrossQuantity == \"\" && product.BulkPlantName == \"\") {\r\n                    count++;\r\n                }\r\n            });\r\n            //Means no lift details added against that product\r\n            if (prodCount == count) {\r\n                missingLifts.push(productsperproductId[0]);\r\n            }\r\n        }\r\n        this.dropInfos.forEach(function (dropinfo) {\r\n            if (bolProducts.length > 0) {\r\n                missingbols.forEach(function (missingbol) {\r\n                    if (dropinfo.ProductId == missingbol.ProductId) {\r\n                        //dropinfo.IsFTL || \r\n                        if (dropinfo.IsBolDetailsRequired || dropinfo.IsBOLImageRequired) {\r\n                            if (missingbol.NetQuantity == \"\" && missingbol.GrossQuantity == \"\") {\r\n                                var IsBolDetailsAvailable = false;\r\n                                var IsLiftDetailsAvailble = currObject.validateLiftTicketDetails(missingbol, dropinfo.OrderId);\r\n\r\n                                var PoNumber = dropinfo.PoNumber;\r\n                                if (!IsBolDetailsAvailable && !IsLiftDetailsAvailble) {\r\n                                    currObject.InvalidDropInfos.push({\r\n                                        ProductId: dropinfo.ProductId,\r\n                                        PoNumber: dropinfo.PoNumber,\r\n                                        Message: \"No bol or lift details provided for order with PO number \" + dropinfo.PoNumber\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (liftProducts.length > 0) {\r\n                missingLifts.forEach(function (missingLift) {\r\n                    if (dropinfo.ProductId == missingLift.ProductId) {\r\n                        //dropinfo.IsFTL || \r\n                        if (dropinfo.IsBolDetailsRequired || dropinfo.IsBOLImageRequired) {\r\n                            if (missingLift.NetQuantity == \"\" && missingLift.GrossQuantity && missingLift.BulkPlantName == \"\") {\r\n                                var IsLiftDetailsAvailable = false;\r\n                                var IsBolDetailsAvailable = currObject.validateBolDetails(missingLift, dropinfo.OrderId);\r\n                                var PoNumber = dropinfo.PoNumber;\r\n                                if (!IsBolDetailsAvailable && !IsLiftDetailsAvailable) {\r\n                                    currObject.InvalidDropInfos.push({\r\n                                        ProductId: dropinfo.ProductId,\r\n                                        PoNumber: dropinfo.PoNumber,\r\n                                        Message: \"No bol or lift provided for order with PO number :\" + dropinfo.PoNumber\r\n                                    });\r\n\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    //To check if bols are not provided then lift details exist against that order \r\n    validateLiftTicketDetails(item: any, orderId: number): boolean {\r\n        var IsLiftDetailsAvailble = true;\r\n        var liftProducts = [];\r\n\r\n        var ticketDetails = this.invoiceForm.get('TicketDetails').value;\r\n        ticketDetails.map(item => item.Products.map(prod => liftProducts.push(prod)));\r\n        var groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n        const liftgroupedProducts = groupBy(liftProducts, 'ProductId');\r\n        for (const productId in liftgroupedProducts) {\r\n            var key = productId;\r\n            var productsperproductId = [];\r\n            productsperproductId = liftgroupedProducts[key];\r\n            var count = 0;\r\n            var prodCount = productsperproductId.length;\r\n            productsperproductId.forEach(function (product) {\r\n                if (product.NetQuantity == \"\" && product.GrossQuantity == \"\") {\r\n                    count++;\r\n                }\r\n            });\r\n        }\r\n        var prodCount = 0;\r\n        var missingInfoCount = 0;\r\n        if (liftProducts.length > 0) {\r\n            liftProducts.forEach(function (liftproduct) {\r\n                if (liftproduct.ProductId == item.ProductId) {\r\n                    prodCount++;\r\n                    if (liftproduct.NetQuantity == \"\" && liftproduct.GrossQuantity == \"\" && liftproduct.BulkPlantName == \"\") {\r\n                        //IsLiftDetailsAvailble = false;\r\n                        missingInfoCount++;\r\n                    }\r\n                }\r\n            });\r\n            if ((prodCount == missingInfoCount) && (prodCount > 0 && missingInfoCount > 0)) {\r\n                IsLiftDetailsAvailble = false;\r\n                return IsLiftDetailsAvailble;\r\n            }\r\n        }\r\n        else {\r\n            IsLiftDetailsAvailble = false;\r\n        }\r\n        return IsLiftDetailsAvailble;\r\n\r\n    }\r\n\r\n    //To check if liftdetails are not provided then bol details exist against that order \r\n    validateBolDetails(item: any, orderId: number) {\r\n        var IsBolDetailsAvailble = true;\r\n        var bolProducts = [];\r\n        var boldetails = this.invoiceForm.get('BolDetails').value;\r\n        boldetails.map(item => item.Products.map(prod => bolProducts.push(prod)));\r\n\r\n        var groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n        const bolgroupedProducts = groupBy(bolProducts, 'ProductId');\r\n        for (const productId in bolgroupedProducts) {\r\n            var key = productId;\r\n            var productsperproductId = [];\r\n            productsperproductId = bolgroupedProducts[key];\r\n            var count = 0;\r\n            var prodCount = productsperproductId.length;\r\n            productsperproductId.forEach(function (product) {\r\n                if (product.NetQuantity == \"\" && product.GrossQuantity == \"\") {\r\n                    count++;\r\n                }\r\n            });\r\n        }\r\n        var prodCount = 0;\r\n        var missingInfoCount = 0;\r\n        if (bolProducts.length > 0) {\r\n            bolProducts.forEach(function (bolproduct) {\r\n                if (bolproduct.ProductId == item.ProductId) {\r\n                    prodCount++;\r\n                    if (bolproduct.NetQuantity == \"\" && bolproduct.GrossQuantity == \"\") {\r\n                        //IsBolDetailsAvailble = false;\r\n                        missingInfoCount++;\r\n                    }\r\n                }\r\n            });\r\n            if ((prodCount == missingInfoCount) && (prodCount > 0 && missingInfoCount > 0)) {\r\n                IsBolDetailsAvailble = false;\r\n                return IsBolDetailsAvailble;\r\n            }\r\n        }\r\n        else {\r\n            IsBolDetailsAvailble = false;\r\n        }\r\n        return IsBolDetailsAvailble;\r\n    }\r\n\r\n\r\n\r\n    findMinDate(dropdates: any[]) {\r\n        var dates = [];\r\n        dropdates.forEach((dropdate) => {\r\n            if (dropdate != null) {\r\n                var date = new Date(dropdate);\r\n                dates.push(date);\r\n            }\r\n        });\r\n        //var maximumDate = new Date(Math.max.apply(null, dates)); \r\n        var minimumDate = new Date(Math.min.apply(null, dates));\r\n        var minDate = minimumDate.toDateString();\r\n        var date = this.getFormattedDate(minDate);\r\n        if (date != null || date != undefined) {\r\n            return date;\r\n        }\r\n    }\r\n    getFormattedDate(date: any) {\r\n        var dt = new Date(date);\r\n        var year = dt.getFullYear();\r\n        var month = (1 + dt.getMonth()).toString();\r\n        month = month.length > 1 ? month : '0' + month;\r\n        var day = dt.getDate().toString();\r\n        day = day.length > 1 ? day : '0' + day;\r\n        return month + '/' + day + '/' + year;\r\n    }\r\n\r\n    private getAnotherDropFees(_orderId: number) {\r\n            this.invoiceService.getInvoiceDropFees(_orderId)\r\n                .subscribe(response => {\r\n                    //var existing = this.InvoiceFees.slice();\r\n                    //response.forEach((model, idx) => {\r\n                    //    var isExists = existing.find(function (elem) { return IsDuplicate(elem, model); });\r\n                    //    if (isExists == undefined) {\r\n                    //        existing.push(model);\r\n                    //    }\r\n                    //});\r\n                    //this.InvoiceFees = existing;\r\n\r\n                    var fees = DeDuplicateFees(this.InvoiceFees, response);\r\n                    this.InvoiceFees = fees;\r\n                });\r\n        }\r\n    checkValidityforFtl(): boolean {\r\n        var isBolLiftNotProvided = false;\r\n        var boldetails = this.invoiceForm.get('BolDetails').value;\r\n        var ticketDetails = this.invoiceForm.get('TicketDetails').value;\r\n        //this.IsFTL ||\r\n        if (this.IsBolDetailsRequired || this.IsBOLImageRequired) {\r\n            if (boldetails.length == 0 && ticketDetails.length == 0) {\r\n                isBolLiftNotProvided = true;\r\n                return isBolLiftNotProvided;\r\n            }\r\n            else {\r\n                isBolLiftNotProvided = false;\r\n                this.invoiceForm.controls['TicketDetails'].clearValidators();\r\n                this.invoiceForm.get('TicketDetails').updateValueAndValidity();\r\n                this.invoiceForm.controls['BolDetails'].clearValidators();\r\n                this.invoiceForm.get('BolDetails').updateValueAndValidity();\r\n                return isBolLiftNotProvided;\r\n            }\r\n        } else {\r\n            this.invoiceForm.controls['TicketDetails'].clearValidators();\r\n            this.invoiceForm.get('TicketDetails').updateValueAndValidity();\r\n            this.invoiceForm.controls['BolDetails'].clearValidators();\r\n            this.invoiceForm.get('BolDetails').updateValueAndValidity();\r\n            return isBolLiftNotProvided = false;\r\n        }\r\n    }    \r\n    checkValidityForImages() {\r\n        var isBolImagenotprovided = false;\r\n        var isLiftImagenotProvided = false;\r\n        this.MissingImgInfos.length = 0;\r\n        var boldetails = this.invoiceForm.get('BolDetails').value;\r\n        var ticketDetails = this.invoiceForm.get('TicketDetails').value;\r\n        var signatureImages = this.invoiceForm.get('SignatureImages').value;\r\n\r\n        var liftTicketImage = ticketDetails.map(item => item.LiftImages);\r\n        var bolImages = boldetails.map(item => item.BolImages);\r\n\r\n        var bolimgCount = 0;\r\n        var bollength = boldetails.length;\r\n        if (this.IsBOLImageRequired) {\r\n            //Means boldetails are added\r\n            if (boldetails.length > 0) {\r\n                bolImages.forEach(function (bolimg) {\r\n                    if (bolimg == \"\") {\r\n                        bolimgCount++;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        //Means no bolimg provided but required\r\n        if ((bolimgCount == bollength) && boldetails.length > 0) {\r\n            isBolImagenotprovided = true;\r\n            var ImgMisingMsg = \"Please Provide Bol Image\";\r\n            this.MissingImgInfos.push({\r\n                isImageNotProvided: isBolImagenotprovided,\r\n                imgMissingMsg: ImgMisingMsg\r\n            });\r\n        }\r\n        var liftImgCount = 0;\r\n        var liftLength = ticketDetails.length;\r\n        if (this.IsBOLImageRequired && liftLength > 0) {\r\n            liftTicketImage.forEach(function (liftimg) {\r\n                if (liftimg == \"\") {\r\n                    liftImgCount++;\r\n                }\r\n            });\r\n        }\r\n        //means no liftimage provided but required\r\n        if ((liftImgCount == liftLength) && liftLength > 0) {\r\n            isLiftImagenotProvided = true;\r\n            var liftImgMissingMsg = \"Please Provide Lift ticket Image\";\r\n            this.MissingImgInfos.push({\r\n                isImageNotProvided: isLiftImagenotProvided,\r\n                imgMissingMsg: liftImgMissingMsg\r\n            });\r\n        }\r\n\r\n        // check for signature image\r\n        if (this.IsSignatureRequired) {           \r\n            if (signatureImages == \"\" || signatureImages == null || signatureImages == undefined) {\r\n                //Means no signature provided but image is required\r\n                var imgMisingMsg = \"Please Provide Signature Image\";\r\n                this.MissingImgInfos.push({\r\n                    isImageNotProvided: true,\r\n                    imgMissingMsg: imgMisingMsg\r\n                });\r\n            }\r\n        }\r\n    }\r\n    OnScheduleReceived(schedules: any) {\r\n        let prevBlendDetail = this.BlendedScheduleDetail.find(t => t && t.Schedules && t.Schedules.some(x => x.OrderId == schedules.OrderId));\r\n        if (prevBlendDetail && prevBlendDetail.BlendId && prevBlendDetail.BlendId != '') {\r\n            this.RemoveBlendSchedules(prevBlendDetail.BlendId);\r\n        }\r\n        if (parseInt(schedules.ScheduleId) > 0) {\r\n            this.invoiceService.getAssignedDriverForSchedule(parseInt(schedules.ScheduleId), schedules.OrderId)\r\n                .subscribe(data => {\r\n                    if (data.Id > 0) {\r\n                        this.SelectedDriver = [data];// Set NgModel for UI display\r\n                        this.invoiceForm.get('Driver').patchValue(data);\r\n                    }\r\n                });\r\n\r\n            if (schedules.BlendedScheduleId && schedules.BlendedScheduleId != '') {\r\n                this.AddBlendSchedules(schedules.BlendedScheduleId, parseInt(schedules.ScheduleId));\r\n            }\r\n\r\n        }\r\n        else if (schedules.ScheduleId == \"null\" || schedules.ScheduleId == \"undefined\") {\r\n            this.invoiceForm.get('Driver').patchValue(null);\r\n            this.SelectedDriver = [];\r\n        }\r\n    }\r\n    private AddBlendSchedules(blendedScheduleId: string, trackableScheduleId: number) {\r\n        this.products.IsLoading = true;\r\n        this.invoiceService.getBlendedProducts(blendedScheduleId).subscribe((data : BlendedSchedules[]) => {\r\n            if (data && data.length > 0) {\r\n                this.BlendedScheduleDetail.push({ BlendId: blendedScheduleId, Schedules: data });\r\n                let formOrders = this.invoiceForm.get('SelectedOrders').value as any[];\r\n                let _drops = this.invoiceForm.get('Drops') as FormArray;\r\n                data.forEach(t => {\r\n                    var poItem = this.PoList.find(x => x.OrderId == t.OrderId);\r\n                    let scheduleId = t.Id;\r\n                    let deliveryLevelPO = t.DeliveryLevelPO;\r\n                    let selOrderId = t.OrderId;\r\n                    if (poItem && !formOrders.some(t => t.OrderId == selOrderId)) {\r\n                        formOrders.push(poItem);\r\n                        this.onOrderSelect(poItem, scheduleId, blendedScheduleId, deliveryLevelPO);\r\n                    } else {\r\n                        let dropIndex = _drops.controls.findIndex(z => z.get('OrderId').value == selOrderId);\r\n                        let scheduledrop = ((this.invoiceForm.get('Drops') as FormArray).at(dropIndex) as FormGroup);\r\n                        scheduledrop.get('DeliveryLevelPO').patchValue(deliveryLevelPO);\r\n                        scheduledrop.get('TrackableScheduleId').patchValue(scheduleId, { emitEvent: false });\r\n                        if (poItem)\r\n                            scheduledrop.get('BlendedScheduleId').patchValue(blendedScheduleId, { emitEvent: false });\r\n                    }\r\n                });\r\n                this.invoiceForm.get('SelectedOrders').setValue(formOrders);\r\n            }\r\n            this.products.IsLoading = false;\r\n        });\r\n    }\r\n    private RemoveBlendSchedules(_prevScheduleBlendId: string, _isOrderDeselect: boolean = false) {\r\n        var rmvOrders = this.BlendedScheduleDetail.find(t => t.BlendId == _prevScheduleBlendId)?.Schedules.map(t => t.OrderId);\r\n        //Remove blended products\r\n        this.BlendedScheduleDetail.splice(this.BlendedScheduleDetail.findIndex(t => t && t.BlendId == _prevScheduleBlendId), 1);\r\n        let formOrders = this.invoiceForm.get('SelectedOrders').value as any[];\r\n        //var rmvOrders = this.InvoiceModel.Drops.filter(t => t.BlendedScheduleId == _prevScheduleBlendId).map(t => t.OrderId);\r\n        if (rmvOrders) {\r\n            rmvOrders.forEach(t => {\r\n                let _curOrderId = t;\r\n                let rmvPO = this.PoList.find(x => x.OrderId == _curOrderId);\r\n                if (rmvPO) {\r\n                    if (formOrders.some(t => t.OrderId == rmvPO.OrderId)) {\r\n                        this.onOrderDeSelect(rmvPO, true);\r\n                    }\r\n                } else if (_isOrderDeselect) {\r\n                    // set trackable schedule Id as null        \r\n                    let _drops = this.invoiceForm.get('Drops') as FormArray;\r\n                    let dropIndex = _drops.controls.findIndex(z => z.get('OrderId').value == _curOrderId);\r\n                    ((this.invoiceForm.get('Drops') as FormArray).at(dropIndex) as FormGroup).get('TrackableScheduleId').patchValue(null);\r\n                }\r\n            });\r\n            formOrders = formOrders.filter(t => !rmvOrders.includes(t.OrderId));\r\n        }\r\n        this.invoiceForm.get('SelectedOrders').setValue(formOrders);\r\n    }\r\n    public IsLiftTicketDetailsMissing(): boolean {\r\n        var IsLiftTicketDetailsMissing = false;\r\n        var ticketDetails = [];\r\n        ticketDetails = this.invoiceForm.get('TicketDetails').value;      \r\n        if (ticketDetails.length > 0) {\r\n            var tktNumbers = ticketDetails.map(function (item) { return item.LiftTicketNumber });            \r\n            for (var i = 0; i < tktNumbers.length; i++) {      \r\n                if (tktNumbers[i] =='' || tktNumbers[i] == null || tktNumbers[i] == undefined)\r\n                {\r\n                    IsLiftTicketDetailsMissing = true;\r\n                    break;\r\n                }\r\n            }\r\n            return IsLiftTicketDetailsMissing;\r\n        }\r\n        else {\r\n            IsLiftTicketDetailsMissing = false;\r\n            return IsLiftTicketDetailsMissing;\r\n        }       \r\n    }\r\n    public validateBDRDetails() {\r\n        var isBdrDetailsAdded = true;\r\n        this.invoiceForm.get(\"Drops\").value.forEach(function (drop) {\r\n\r\n            if (drop.IsMarineLocation && (drop.BdrDetails == null || drop.BdrDetails == undefined || Object.keys(drop.BdrDetails).length === 0)) {              \r\n                isBdrDetailsAdded = false;\r\n                return isBdrDetailsAdded;\r\n            }\r\n        });\r\n        return isBdrDetailsAdded;\r\n    }\r\n\r\n    public onSubmit(): void {\r\n        this.invoiceForm.markAllAsTouched();\r\n        this.findDuplicates();\r\n        var isBolLiftNotProvided = this.checkValidityforFtl();\r\n        this.validateLiftDates();\r\n        this.validateBolAndLiftDetails();\r\n        this.checkValidityForImages();\r\n        var isLiftTicketDetails = this.IsLiftTicketDetailsMissing();\r\n        //var isValidBDR = this.validateBDRDetails();\r\n        //if (!isValidBDR) {\r\n        //    Declarations.msgerror(\"BDR details are required\", undefined, undefined);\r\n        //    return;\r\n        //}\r\n        // validate terminal assign on order\r\n        var invoiceViewModel = this.invoiceForm.getRawValue();\r\n        var customer = invoiceViewModel.Customer;\r\n        if (!this.IsSupressOrderPricing && customer.Location.CountryId != Country.CAR) {\r\n            this.isTerminalAssignedOnOrder();\r\n        }           \r\n        if (this.IsDateInvalid) {\r\n            Declarations.msgerror(\"Lift date should be less than or equal to drop date\", undefined, undefined);\r\n        }\r\n        else if (this.hasDuplicateProduct) {\r\n            Declarations.msgerror('You are trying to add multiple drops for same product ', undefined, undefined);\r\n        }\r\n        else if (isBolLiftNotProvided) {\r\n            Declarations.msgerror('Please Enter Bol or Lift ticket details', undefined, undefined);\r\n        }\r\n        else if (isLiftTicketDetails) {\r\n            Declarations.msgerror('Lift Ticket Details are missing ', undefined, undefined);\r\n        }\r\n        else if (this.InvalidDropInfos.length > 0) {\r\n            this.InvalidDropInfos.forEach(function (invaliddropinfo) {\r\n                if (invaliddropinfo.Message != \"\") {\r\n                    Declarations.msgerror(invaliddropinfo.Message, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else if (this.MissingImgInfos.length > 0) {\r\n            this.MissingImgInfos.forEach(function (missingimginfo) {\r\n                if (missingimginfo.isImageNotProvided == true) {\r\n                    Declarations.msgerror(missingimginfo.imgMissingMsg, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else if (this.InValidBolImage) {\r\n            Declarations.msgerror(\"Bol Image or Lift Image is required\", undefined, undefined);\r\n        }\r\n        else {\r\n            this.validateDropStartEndTime();\r\n            if (this.invoiceForm.valid) {\r\n                this.IsLoadingImages = true;\r\n                if (invoiceViewModel.BolDetails && invoiceViewModel.BolDetails.length > 0 || invoiceViewModel.TicketDetails && invoiceViewModel.TicketDetails.length > 0) {\r\n                    invoiceViewModel.Drops.forEach(drop => {\r\n                        drop.TerminalId = 0;\r\n                        drop.TerminalName = \"\"                        \r\n                    });\r\n                }\r\n                \r\n                if (invoiceViewModel.Drops && invoiceViewModel.Drops.length>0) {\r\n                    invoiceViewModel.Drops.forEach(drop => {\r\n                        drop.FuelSurchargeFreightFee.FreightPricingMethod = drop.FuelSurchargeFreightFee.FreightPricingMethod;\r\n                        drop.FreightPricingMethod = drop.FuelSurchargeFreightFee.FreightPricingMethod;\r\n                        if (drop.FuelSurchargeFreightFee.FreightType && drop.FuelSurchargeFreightFee.FreightType != null\r\n                            && drop.FuelSurchargeFreightFee.FreightType.length > 0) {\r\n                            drop.FuelSurchargeFreightFee.FreightRateRuleType = drop.FuelSurchargeFreightFee.FreightType[0].Id;\r\n                        }\r\n                        if (drop.FuelSurchargeFreightFee.FreightTableType && drop.FuelSurchargeFreightFee.FreightTableType.length > 0) {\r\n                            drop.FuelSurchargeFreightFee.FreightRateTableType = drop.FuelSurchargeFreightFee.FreightTableType[0].Id;\r\n                        }\r\n                        if (drop.FuelSurchargeFreightFee.FreightTableName && drop.FuelSurchargeFreightFee.FreightTableName.length > 0) {\r\n                            drop.FuelSurchargeFreightFee.FreightRateRuleId = drop.FuelSurchargeFreightFee.FreightTableName[0].Id;\r\n                        }\r\n                        if (drop.FuelSurchargeFreightFee.FuelSurchargeTableType && drop.FuelSurchargeFreightFee.FuelSurchargeTableType != null\r\n                            && drop.FuelSurchargeFreightFee.FuelSurchargeTableType.length > 0) {\r\n                            drop.FuelSurchargeFreightFee.FuelSurchargeTableType = drop.FuelSurchargeFreightFee.FuelSurchargeTableType[0].Id;\r\n                        }\r\n                        if (drop.FuelSurchargeFreightFee.FuelSurchargeTableName && drop.FuelSurchargeFreightFee.FuelSurchargeTableName.length > 0) {\r\n                            drop.FuelSurchargeFreightFee.FuelSurchargeTableId = drop.FuelSurchargeFreightFee.FuelSurchargeTableName[0].Id;\r\n                        } \r\n                    });\r\n                }\r\n                let _AccessorialFeeDetails = [];                  \r\n                if (invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType && invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType.length > 0) {\r\n                    invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType = invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType[0].Id;\r\n                    if (invoiceViewModel.AccessorialFeeDetails.AccessorialFeeId && invoiceViewModel.AccessorialFeeDetails.AccessorialFeeId.length > 0) {\r\n                        invoiceViewModel.AccessorialFeeDetails.AccessorialFeeId.forEach(_element => {\r\n                            _AccessorialFeeDetails.push({\r\n                                AccessorialFeeId: _element.Id,\r\n                                AccessorialFeeTableType: invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType\r\n                            })\r\n                        })\r\n                    }\r\n                    invoiceViewModel.AccessorialFeeDetails = _AccessorialFeeDetails;\r\n                }                   \r\n                                        \r\n                if (!isNaN(this.exceptionId) && this.exceptionId > 0 && invoiceViewModel.Drops.length > 0 && invoiceViewModel.Drops[0].OrderId == this.orderId) {\r\n                    invoiceViewModel.Drops[0].ExceptionId = this.exceptionId;\r\n                }        \r\n                         \r\n                this.imageuploadComponents.first.GetSasForBlob().then(sas => this.recieveChildImages(invoiceViewModel, sas).then(() => {\r\n                    this.IsLoadingImages = false;\r\n                    this.IsLoading = true;\r\n                    //console.log('start1', entireInvoiceModel);\r\n                    this.invoiceService.postCreateInvoice(invoiceViewModel, this.invoiceId).subscribe((data: any) => {\r\n                            if (data != null && data.StatusCode == 0) {\r\n                                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                                this.IsLoading = false;\r\n                                this.invoiceForm.reset();\r\n                                window.location.href = this.baseDetailUrl;\r\n\r\n                            } else {\r\n                                this.IsLoading = false;\r\n                                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                            }\r\n                        });\r\n                }));\r\n            }\r\n            else {\r\n                this.IsLoading = false;\r\n                this.invoiceForm.markAllAsTouched();\r\n                let invalidControls: string[] = this.findInvalidControlsRecursive(this.invoiceForm);\r\n                if ((invalidControls.indexOf(\"BolDetails\") != -1 && invalidControls.indexOf(\"BolImages\") != -1) || ((invalidControls.indexOf(\"TicketDetails\") != -1 && invalidControls.indexOf(\"LiftImages\") != -1))) {\r\n                    Declarations.msgerror(\"Bol or Lift Image is required\", undefined, undefined);\r\n                }\r\n                if (invalidControls.indexOf(\"InvoiceImages\") != -1) {\r\n                    Declarations.msgerror(\"Drop/Invoice Images are required\", undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public findInvalidControlsRecursive(formToInvestigate: FormGroup | FormArray): string[] {\r\n        var invalidControls: string[] = [];\r\n        let recursiveFunc = (form: FormGroup | FormArray) => {\r\n            Object.keys(form.controls).forEach(field => {\r\n                const control = form.get(field);\r\n                if (control.invalid) invalidControls.push(field);\r\n                if (control instanceof FormGroup) {\r\n                    recursiveFunc(control);\r\n                } else if (control instanceof FormArray) {\r\n                    recursiveFunc(control);\r\n                }\r\n            });\r\n        }\r\n        recursiveFunc(formToInvestigate);\r\n        return invalidControls;\r\n    }\r\n\r\n    public isTerminalAssignedOnOrder(): boolean {\r\n        var isTerminalAssigned = true;\r\n        var currObj = this;\r\n        this.invoiceForm.get(\"Drops\").value.forEach(function (drop) {\r\n            if ((drop.TypeOfFuel != 10 && drop.TypeOfFuel != 26)  && (drop.TerminalId == 0 || drop.TerminalId == '' || drop.TerminalId == null)) {\r\n                currObj.InvalidDropInfos.push({\r\n                    ProductId: drop.FuelTypeId,\r\n                    PoNumber: drop.PoNumber,\r\n                    Message: \"Terminal not assigned for PO# \" + drop.PoNumber,\r\n                });\r\n                isTerminalAssigned = false;\r\n                return isTerminalAssigned;\r\n            }\r\n        });\r\n        return isTerminalAssigned;\r\n    }\r\n}\r\n\r\nexport class DropInfo {\r\n    public ProductId: number;\r\n    public PoNumber: string;\r\n    public IsBOLImageRequired: boolean;\r\n    public IsDropImageRequired: boolean;\r\n    public IsBolDetailsRequired: boolean;\r\n    public IsSignatureRequired: boolean;\r\n    //public IsFTL: boolean;\r\n    public OrderId: number;\r\n}\r\nexport class InvalidDropDetailInfo {\r\n    public ProductId: number;\r\n    public PoNumber: string;\r\n    public Message: string;\r\n}\r\nexport class MissingImageInfo {\r\n    public isImageNotProvided: boolean;\r\n    public imgMissingMsg: string;\r\n}","\r\n\r\n<app-bol-detail #bolDetail\r\n                [IsBadgeMandatory]=\"IsBadgeMandatory\"\r\n                (onBolDetailAdded)=\"bolList.bolDetailAdded($event)\"\r\n                (onBolDetailUpdated)=\"bolList.bolDetailUpdated($event)\"></app-bol-detail>\r\n\r\n<app-lift-detail #liftDetail\r\n                 [IsBadgeMandatory]=\"IsBadgeMandatory\"\r\n                 [IsFrieghtPricingMethodAuto]=\"IsFrieghtPricingMethodAuto\"\r\n                 (onTicketDetailAdded)=\"ticketList.ticketDetailAdded($event)\"\r\n                 (onTicketDetailUpdated)=\"ticketList.ticketDetailUpdated($event)\"></app-lift-detail>\r\n\r\n<form [formGroup]=\"invoiceForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3\">\r\n            <div class=\"form-group\">\r\n                <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedOrders\" [placeholder]=\"'Search Another PO'\" [settings]=\"PoDdlSettings\" [data]=\"PoList\"\r\n                                             (onSelect)=\"onOrderSelect($event)\" (onDeSelect)=\"onOrderDeSelect($event)\">\r\n                    </ng-multiselect-dropdown>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 text-right\">\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary mr5\" id=\"bol_button\" value=\"+ BOL\"\r\n                        (click)=\"bolDetail.initDrops(invoiceForm.get('Drops').value,InvoiceModel?.Drops);bolDetail.toggleOpen(true, null);bolDetail.getAddedProductDetails(invoiceForm.get('Drops').value)\">\r\n                    <i class=\"fa fa-plus-circle\"></i> BOL\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-warning\" id=\"lift_button\" value=\"+ BOL\"\r\n                        (click)=\"liftDetail.initDrops(InvoiceModel?.Drops);liftDetail.toggleOpen(true, null);liftDetail.getAddedProductDetails(invoiceForm.get('Drops').value)\">\r\n                    <i class=\"fa fa-plus-circle\"></i> Lift\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-9\">\r\n            <app-bol-list #bolList [Parent]=\"invoiceForm\" [BolDetails]=\"invoiceForm.get('BolDetails')\" [Model]=\"InvoiceModel?.BolDetails\"\r\n                          [IsImageRequired]=\"IsBOLImageRequired\" (onBolEditRequest)=\"bolDetail.initDrops(invoiceForm.get('Drops').value,InvoiceModel?.Drops);bolDetail.toggleOpen(true, $event)\" (onBolAdded)=\"bolDetail.getAddedBols($event)\"\r\n                          (OnBolDeleted)=\"bolDetail.getDeletedBol($event)\" (onBolEdit)=\"bolDetail.getEditedBol($event)\" (OnBolQuantitiesAdded)=\"productDetail.getBolLiftQuantities()\"></app-bol-list>\r\n\r\n            <app-lift-tickets #ticketList [Parent]=\"invoiceForm\" [TicketDetails]=\"invoiceForm.get('TicketDetails')\" [Model]=\"InvoiceModel?.TicketDetails\"\r\n                              (onTicketEditRequest)=\"liftDetail.initDrops(InvoiceModel?.Drops);liftDetail.initDrops(InvoiceModel?.Drops);liftDetail.toggleOpen(true, $event)\" [IsImageRequired]=\"IsBOLImageRequired\"\r\n                              (onLiftTicketAdded)=\"liftDetail.getAddedLiftTickets($event)\" (OnLiftTicketDeleted)=\"liftDetail.getDeletedLift($event)\" (onLiftTicketEdit)=\"liftDetail.getEditedLiftTickets($event)\" (OnLiftQuantitiesAdded)=\"productDetail.getBolLiftQuantities()\"></app-lift-tickets>\r\n\r\n            <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n                <app-produc-detail #productDetail [Parent]=\"invoiceForm\" [Drops]=\"InvoiceModel?.Drops\"\r\n                                   (onBulkplantUpdated)=\"ticketList.updateBulkPlantDetail($event)\" (onBulkplantPickupReceived)=\"ticketList.updateBulkPlantDetail($event)\"\r\n                                   (OnScheduleReceived)=\"OnScheduleReceived($event)\"></app-produc-detail>\r\n\r\n                <app-various-drop-location formControlName=\"FuelDropLocation\" [IsVariousOrigin]=\"InvoiceModel?.IsVariousOrigin\"></app-various-drop-location>\r\n\r\n                <app-fee-list [Parent]=\"invoiceForm\" [IsFrieghtPricingMethodAuto]=\"IsFrieghtPricingMethodAuto\"  [Fees]=\"InvoiceFees\" [InputAccessorialFeeDetails]=\"AccessorialTableDetails\" [NoOrders]=\"NoOrders\"\r\n                              [Currency]=\"Currency\" *ngIf=\"!IsSupressOrderPricing\"></app-fee-list>\r\n\r\n                <app-other-product-taxes #otherProductTax [Parent]=\"invoiceForm\" [Currency]=\"Currency\"\r\n                                         [Taxes]=\"OtherProductTaxes\" *ngIf=\"OtherProductAdded && !IsSupressOrderPricing\"></app-other-product-taxes>\r\n            </fieldset>\r\n\r\n            <div class=\"text-right\">\r\n                <input type=\"button\" class=\"btn\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n                <input class=\"btn btn-success btn-lg no-disable\" type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n            <input type=\"hidden\" formControlName=\"InvoiceTypeId\" />\r\n            <input type=\"hidden\" formControlName=\"IsVariousOrigin\" />\r\n            <input type=\"hidden\" formControlName=\"IsRebillInvoice\" />\r\n            <input type=\"hidden\" formControlName=\"OriginalInvoiceHeaderId\" />\r\n            <input type=\"hidden\" formControlName=\"BrokerChainId\" />\r\n        </div>\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"well box-shadow\">\r\n                        <app-customer-detail formControlName=\"Customer\" [IsVariousOrigin]=\"InvoiceModel?.IsVariousOrigin\"></app-customer-detail>\r\n                    </div>\r\n                    <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n                        <div class=\"well box-shadow\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Invoice #\" formControlName=\"SupplierInvoiceNumber\" class=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <ng-multiselect-dropdown formControlName=\"SelectedDriver\" [(ngModel)]=\"SelectedDriver\" [placeholder]=\"'Select Driver'\"\r\n                                                                 [settings]=\"DriverDdlSettings\" [data]=\"DriverList\" (onSelect)=\"OnDriverSelect($event)\" (onDeSelect)=\"OnDriverDeSelect($event)\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <input type=\"hidden\" formControlName=\"Driver\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Carrier Name \" formControlName=\"Carrier\" class=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12\">\r\n                                    <textarea formControlName=\"InvoiceNotes\" class=\"form-control\" placeholder=\"Invoice Notes\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"well box-shadow\" *ngIf=\"!IsSupressOrderPricing\">\r\n                            <app-payment-terms formControlName=\"PaymentTerm\"></app-payment-terms>\r\n                        </div>\r\n                        <div class=\"well box-shadow\">\r\n                            <app-imageupload [fileType]=\"'InvFile'\" [orderId]=\"orderId\" formControlName=\"InvoiceImages\" [inputFile]=\"InvoiceImages\" [invoice]=\"true\" [requiredIfTrue]=\"IsDropImageRequired\"></app-imageupload>\r\n                            <app-imageupload [fileType]=\"'additionalFile'\" [orderId]=\"orderId\" formControlName=\"AdditionalImages\" [inputFile]=\"AdditionalImages\" [additional]=\"true\"></app-imageupload>\r\n                            <app-imageupload [fileType]=\"'signatureFile'\" [orderId]=\"orderId\" formControlName=\"SignatureImages\" [inputFile]=\"SignatureImages\" [signature]=\"true\" [requiredIfTrue]=\"IsSignatureRequired\"></app-imageupload>\r\n                            <div *ngIf=\"products?.IsMarineLocation\">\r\n                                <app-imageupload [fileType]=\"'BDNImage'\" [orderId]=\"orderId\" formControlName=\"BDNImages\" [inputFile]=\"BDNImages\" [BDNImage]=\"true\"></app-imageupload>\r\n                                <app-imageupload [fileType]=\"'TaxAffidavit'\" [orderId]=\"orderId\" formControlName=\"TaxAffidavitImages\" [inputFile]=\"TaxAffidavitImages\" [TaxAffidavit]=\"true\"></app-imageupload>\r\n                                <app-imageupload [fileType]=\"'CoastGuardInspection'\" [orderId]=\"orderId\" formControlName=\"CoastGuardInspectionImages\" [inputFile]=\"CoastGuardInspectionImages\" [CoastGuardInspection]=\"true\"></app-imageupload>\r\n                                <app-imageupload [fileType]=\"'InspectionRequestVoucher'\" [orderId]=\"orderId\" formControlName=\"InspectionRequestVoucherImages\" [inputFile]=\"InspectionRequestVoucherImages\" [InspectionRequestVoucher]=\"true\"></app-imageupload>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n</form>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Submitting Invoice...</div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoadingImages\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Uploading images...</div>\r\n    </div>\r\n</div>\r\n\r\n<!--[IsImageRequired]=\"IsBOLImageRequired\"-->\r\n<!---->","import { Component, OnInit, SimpleChanges, forwardRef, Input, OnChanges, SimpleChange } from '@angular/core';\r\nimport { FormGroup, NG_VALUE_ACCESSOR, FormBuilder, ControlValueAccessor } from '@angular/forms';\r\nimport { CustomerModel } from '../models/DropDetail';\r\n\r\n@Component({\r\n    selector: 'app-customer-detail',\r\n    templateUrl: './customer-detail.component.html',\r\n    styleUrls: ['./customer-detail.component.css'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => CustomerDetailComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class CustomerDetailComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n\r\n    public Customer: FormGroup;\r\n\r\n    public CustomerData: CustomerModel;\r\n\r\n    @Input() public IsVariousOrigin: boolean;\r\n\r\n    constructor(private fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        this.Customer = this.fb.group({\r\n            CompanyId: this.fb.control(''),\r\n            CompanyName: this.fb.control(''),\r\n            Location: this.fb.group({\r\n                JobId: this.fb.control(''),\r\n                SiteName: this.fb.control(''),\r\n                Address: this.fb.control(''),\r\n                City: this.fb.control(''),\r\n                StateCode: this.fb.control(''),\r\n                ZipCode: this.fb.control(''),\r\n                CountryId: this.fb.control('')\r\n            }),\r\n            ContactName: this.fb.control(''),\r\n            ContactPhone: this.fb.control(''),\r\n            ContactEmail: this.fb.control('')\r\n        });\r\n        this.registerOnChange((data: CustomerModel) => {\r\n            this.CustomerData = data;\r\n            if (this.IsVariousOrigin) {\r\n                this.CustomerData.Location.Address = null;\r\n                this.CustomerData.Location.City = null;\r\n                this.CustomerData.Location.ZipCode = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsVariousOrigin) {\r\n            this.IsVariousOrigin = change.IsVariousOrigin.currentValue || false;\r\n        }\r\n    }\r\n\r\n    //----------------- DO NOT MODIFY: Control Value accessor ----------------------\r\n\r\n    public onTouched: () => void = () => { };\r\n\r\n    writeValue(val: any): void {\r\n        val && this.Customer.patchValue(val, { emitEvent: true });\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.Customer.valueChanges.subscribe(fn);\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        isDisabled ? this.Customer.disable() : this.Customer.enable();\r\n    }\r\n\r\n    //----------------- DO NOT MODIFY: Control Value accessor ----------------------\r\n}\r\n","<div [formGroup]=\"Customer\">\r\n    <h5 class=\"fs13 mt0 mb5 f-bold\">Customer</h5>\r\n    <span>\r\n        {{CustomerData?.CompanyName}}\r\n    </span>\r\n    <h5 class=\"fs13 mb5 mt15 f-bold\">Location</h5>\r\n    <span formGroupName=\"Location\">\r\n        <span *ngIf=\"IsVariousOrigin; else notVarious\">\r\n            {{CustomerData?.Location?.SiteName}}, {{CustomerData?.Location?.StateCode}}\r\n        </span>\r\n        <ng-template #notVarious>\r\n            <span>\r\n                {{CustomerData?.Location?.SiteName}}, {{CustomerData?.Location?.Address}}, <br />\r\n                {{CustomerData?.Location?.City}}, {{CustomerData?.Location?.StateCode}} {{CustomerData?.Location?.ZipCode}}\r\n            </span>\r\n        </ng-template>\r\n    </span>\r\n    <h5 class=\"fs13 mb0 mt15 f-bold\">Contact</h5>\r\n    <span>\r\n        {{CustomerData?.ContactName}} - {{CustomerData?.ContactPhone}}<br />\r\n        {{CustomerData?.ContactEmail}}\r\n    </span>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateinvoiceComponent } from '../createinvoice.component';\r\n\r\n\r\nconst routeInvoice: Routes = [\r\n    {\r\n        path: 'CreateNew', component: CreateinvoiceComponent,\r\n        data: { title: 'Create invoice' }\r\n    },\r\n    {\r\n        path: 'CreditAndRebill/:number', component: CreateinvoiceComponent,\r\n        data: { title: 'Rebill invoice' }\r\n    },\r\n    {\r\n        path: 'ConvertToInvoice/:number', component: CreateinvoiceComponent,\r\n        data: { title: 'Convert to invoice' }\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeInvoice)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class InvoiceRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CreateinvoiceComponent } from '../createinvoice.component';\r\nimport { InvoiceRoutingModule } from './invoice-routing.module';\r\nimport { BolDetailComponent } from '../bol-detail/bol-detail.component';\r\nimport { LiftTicketsComponent } from '../lift-tickets/lift-tickets.component';\r\nimport { LiftDetailComponent } from '../lift-tickets/lift-detail.component';\r\nimport { PaymentTermsComponent } from '../payment-terms/payment-terms.component';\r\nimport { ProducDetailComponent } from '../produc-detail/produc-detail.component';\r\nimport { BolListComponent } from '../bol-detail/bol-list.component';\r\nimport { VariousDropLocationComponent } from '../various-drop-location/various-drop-location.component';\r\n//import { FeeListComponent } from '../fee-list/fee-list.component';\r\nimport { OtherProductTaxesComponent } from '../taxes/other-product-taxes.component';\r\nimport { CustomerDetailComponent } from '../customer-detail/customer-detail.component';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { FuelSurchargeComponent } from '../produc-detail/fuel-surcharge.component';\r\nimport { AssetListComponent } from '../asset-list/asset-list.component';\r\n//import { FeeTypeComponent } from '../fee-list/fee-type.component';\r\n//import { FilterPipe } from '../fee-list/filter.pipe';\r\nimport { OnCreateDirective } from 'src/app/directives/on-create.directive';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { GlobalModule } from 'src/app/modules/global.module';\r\nimport { FeesModule } from 'src/app/fees/fees.module';\r\nimport { BdrDetailComponent } from '../bdr-detail/bdr-detail.component';\r\nimport { ShowBdrDetailComponent } from '../bdr-detail/show-bdr-detail.component';\r\n\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        CreateinvoiceComponent,\r\n        BolDetailComponent,\r\n        LiftTicketsComponent,\r\n        LiftDetailComponent,\r\n        PaymentTermsComponent,\r\n        ProducDetailComponent,\r\n        BolListComponent,\r\n        VariousDropLocationComponent,\r\n        OtherProductTaxesComponent,\r\n        CustomerDetailComponent,\r\n        ImageuploadComponent,\r\n        FuelSurchargeComponent,\r\n        AssetListComponent,\r\n        OnCreateDirective,\r\n        BdrDetailComponent,\r\n        ShowBdrDetailComponent,      \r\n    ],\r\n    imports: [\r\n        InvoiceRoutingModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        FeesModule\r\n    ]\r\n})\r\nexport class InvoiceModule { }\r\n","import { Component, OnInit, Output, EventEmitter, Input, SimpleChanges } from '@angular/core';\r\nimport { DropdownItem, StateDropdownExtendedItem, StatelistService } from 'src/app/statelist.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { DropDetailModel, AddressModel } from '../models/DropDetail';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { InvoiceService } from '../../invoice/services/invoice.service';\r\nimport { UoM } from 'src/app/app.enum';\r\nimport { RegExConstants } from 'src/app/app.constants';\r\nimport { ValidationService } from 'src/app/services/validation.service';\r\n\r\n@Component({\r\n    selector: 'app-lift-detail',\r\n    templateUrl: './lift-detail.component.html',\r\n    styleUrls: ['./lift-detail.component.css']\r\n})\r\nexport class LiftDetailComponent implements OnInit {\r\n\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _loading: boolean = false;\r\n    public _loadingAddress: boolean = false;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n    public _searchKeyword = 'name';\r\n\r\n    public StateList: StateDropdownExtendedItem[] = [];\r\n    public CountryList: DropdownItem[];\r\n    public CountryGroupList: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    public BulkPlants: DropdownItem[];\r\n\r\n    public TicketDetailForm: FormGroup;\r\n    public Drops: DropDetailModel[];\r\n    public EditIndex: number = -1;\r\n    public OrderId: number;\r\n\r\n    public UoM: string;\r\n\r\n    public hasDuplicateLiftTicket: boolean;\r\n    public liftticketnumberslist = [];\r\n    public curLiftTicketNumber: number;\r\n    @Input() public IsFrieghtPricingMethodAuto: boolean;\r\n   \r\n    @Input() public IsBadgeMandatory: boolean;\r\n    public isBadgeMandatory: boolean = false;\r\n\r\n    @Output() onTicketDetailAdded: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() onTicketDetailUpdated: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private route: ActivatedRoute, private stateService: StatelistService,\r\n        private addresService: AddressService, private invoiceService: InvoiceService,private validationService: ValidationService) {\r\n        this.StateList = [];\r\n        this.CountryList = [];\r\n        this.CountryGroupList = [];\r\n        this.BulkPlants = [];\r\n        this.BulkplantList = [];\r\n\r\n        this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);\r\n        this.TicketDetailForm = this.buildForm();\r\n        if (this.TicketDetailForm) {\r\n            if (this.isBadgeMandatory) {\r\n                this.TicketDetailForm.controls['BadgeNumber'].setValidators([Validators.required]);\r\n            } else {\r\n                this.TicketDetailForm.controls['BadgeNumber'].clearValidators();\r\n            }\r\n        }\r\n        this.stateService.getStates().subscribe(data => {\r\n            this.StateList = data\r\n        });\r\n\r\n        this.stateService.getCountries().subscribe(data => {\r\n            this.CountryList = data;\r\n        });\r\n\r\n        this.stateService.getCountryGroup(4).subscribe(data => {\r\n            this.CountryGroupList = data;\r\n        });     \r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsBadgeMandatory && change.IsBadgeMandatory.currentValue != null) {\r\n            this.isBadgeMandatory = change.IsBadgeMandatory.currentValue;\r\n            if (this.TicketDetailForm) {\r\n                if (this.isBadgeMandatory) {\r\n                    this.TicketDetailForm.controls['BadgeNumber'].setValidators([Validators.required]);\r\n                } else {\r\n                    this.TicketDetailForm.controls['BadgeNumber'].clearValidators();\r\n                }\r\n            }\r\n        }\r\n        this.showBulkPlantOnLift();\r\n    }\r\n    initDrops(_drops: DropDetailModel[]) {\r\n       // this.setUoM(_drops);\r\n        if (_drops != null && _drops != undefined) {\r\n            this.Drops = _drops;\r\n            this.setProductsToFormArray();\r\n        }\r\n    }\r\n\r\n    getAddedProductDetails(drops: any[]) {\r\n        if (drops != null || drops != undefined) {\r\n\t\t\tvar dropdates = drops.map(item => item.DropDate);\r\n\t\t\tif (dropdates.length > 0 && dropdates.indexOf(null) == -1 && dropdates != undefined && dropdates.indexOf(\"\") == -1 && dropdates.indexOf(undefined) == -1) {\r\n                this.findMinDate(dropdates);\r\n            }\r\n\r\n        }\r\n    }\r\n    findMinDate(dropdates: any[]) {\r\n        var dates = [];\r\n        dropdates.forEach((dropdate) => {\r\n            var date = new Date(dropdate);\r\n            dates.push(date);\r\n        });\r\n        //var maximumDate = new Date(Math.max.apply(null, dates)); \r\n        var minimumDate = new Date(Math.min.apply(null, dates));\r\n        var minDate = minimumDate.toDateString();\r\n        var date = this.getFormattedDate(minDate);\r\n        if (date != null || date != undefined) {\r\n            this.TicketDetailForm.get('LiftDate').patchValue(date);\r\n        }\r\n    }\r\n    getFormattedDate(date: any) {\r\n        var dt = new Date(date);\r\n        var year = dt.getFullYear();\r\n        var month = (1 + dt.getMonth()).toString();\r\n        month = month.length > 1 ? month : '0' + month;\r\n        var day = dt.getDate().toString();\r\n        day = day.length > 1 ? day : '0' + day;\r\n        return month + '/' + day + '/' + year;\r\n    }\r\n\r\n    //setUoM(drops: DropDetailModel[]): void {\r\n    //    //None =0;\r\n    //    //Gallons = 1,\r\n    //    //Litres = 2\r\n    //    if (drops != null && drops != undefined) {\r\n    //        var UoM = drops.map(item => parseInt(item.UoM));\r\n    //        if (UoM[0] == 1) {\r\n    //            this.UoM = \"Gallons\";\r\n    //        }\r\n    //        else if (UoM[0] == 2) {\r\n    //            this.UoM = \"Litres\";\r\n    //        }\r\n    //        else if (UoM[0] == 3) {\r\n    //            this.UoM = \"Barrels\";\r\n    //        }\r\n    //        else if (UoM[0] == 4) {\r\n    //            this.UoM = \"MT\";\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n    showBulkPlantOnLift() {\r\n        if (this.IsFrieghtPricingMethodAuto) {\r\n            this.addresService.getBulkPlantsForAutoFreightMethod(this.OrderId, '').subscribe((data: DropdownItem[]) => {\r\n                this.BulkPlants = data.slice();\r\n                this.BulkplantList = data;\r\n            });\r\n        } else {\r\n            this.addresService.getBulkPlants('').subscribe(data => {\r\n                this.BulkPlants = data.slice();\r\n                this.BulkplantList = data;\r\n            });\r\n        }\r\n    }\r\n\r\n    setProductsToFormArray(): void {\r\n        var prodArray = this.TicketDetailForm.get('Products') as FormArray;\r\n        if (prodArray != undefined && prodArray != null) {\r\n            prodArray.clear();\r\n            var currentObj = this;\r\n            this.Drops.forEach(function (elem, idx) {\r\n                prodArray.push(currentObj.buildProduct(elem));\r\n            });\r\n        }\r\n    }\r\n  \r\n    toggleOpen(shouldOpen: boolean, event: any) {\r\n        this._opened = shouldOpen;\r\n        if (shouldOpen) {\r\n            if (event != null) {\r\n                let ticketFormData = this.getTicketFormData(event.ticketDetail);\r\n                this.setProductsToFormArray();\r\n                this.TicketDetailForm.patchValue(ticketFormData);\r\n                this.EditIndex = event.index;\r\n            }\r\n        } else {\r\n            this.TicketDetailForm.reset();\r\n            (this.TicketDetailForm.get('Products') as FormArray).clear();\r\n        }\r\n    }\r\n    getTicketFormData(ticketDetail: any): any {\r\n        let _products = [];\r\n        ticketDetail.Products.forEach(x => {\r\n            _products.push({\r\n                ProductId: x.ProductId,\r\n                ProductName: x.ProductName,\r\n                GrossQuantity: x.GrossQuantity,\r\n                NetQuantity: x.NetQuantity,\r\n                DeliveredQuantity: x.DeliveredQuantity,\r\n                BulkPlantId: x.BulkPlantId,\r\n                BulkPlantName: x.BulkPlantName,\r\n                Address: x.Address\r\n            });\r\n        });\r\n        let data = {\r\n            LiftTicketNumber: ticketDetail.LiftTicketNumber,\r\n            BadgeNumber: ticketDetail.BadgeNumber,\r\n            LiftDate: ticketDetail.LiftDate,\r\n            Products: _products\r\n        };\r\n        return data;\r\n    }\r\n    buildForm() {\r\n        return this.fb.group({\r\n            Id: this.fb.control(''),\r\n            LiftTicketNumber: this.fb.control('', Validators.required),\r\n            LiftDate: this.fb.control('', Validators.required),\r\n            BadgeNumber: this.fb.control(''),\r\n            Products: this.fb.array([]),\r\n        });\r\n    }\r\n\r\n    buildProduct(model: DropDetailModel): FormGroup {\r\n        var formG =  this.fb.group({\r\n            ProductId: this.fb.control(model.FuelTypeId),\r\n            ProductName: this.fb.control(model.FuelTypeName),\r\n            NetQuantity: this.fb.control('', [Validators.pattern(RegExConstants.Quantity)]),\r\n            DeliveredQuantity: this.fb.control('', [Validators.pattern(RegExConstants.Quantity)]),\r\n            GrossQuantity: this.fb.control('', [Validators.pattern(RegExConstants.Quantity)]),\r\n            BulkPlantId: this.fb.control(''),\r\n            BulkPlantName: this.fb.control(''),\r\n            Address: this.buildAddress(new AddressModel()),\r\n            Image: this.fb.control(''),\r\n            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId),\r\n            UOM: this.fb.control('')\r\n        });\r\n        this.setUoM(model.UoM, model.JobCountryId, formG);\r\n        return formG;\r\n    }\r\n\r\n    buildAddress(model: AddressModel): FormGroup {\r\n        return this.fb.group({\r\n            Address: this.fb.control(model.Address, [Validators.required]),\r\n            Latitude: this.fb.control(model.Latitude, [Validators.required]),\r\n            Longitude: this.fb.control(model.Longitude, [Validators.required]),\r\n            City: this.fb.control(model.City, [Validators.required]),\r\n            CountyName: this.fb.control(model.CountyName, [Validators.required]),\r\n            State: this.fb.group({\r\n                Id: this.fb.control(model.State.Id, [Validators.required]),\r\n                Code: this.fb.control(model.State.Code, [Validators.required])\r\n            }),\r\n            Country: this.fb.group({\r\n                Id: this.fb.control(model.Country.Id, [Validators.required]),\r\n                Code: this.fb.control(model.Country.Code, [Validators.required])\r\n            }),\r\n            CountryGroup: this.fb.group({\r\n                Id: this.fb.control(model.Country.Id),\r\n                Code: this.fb.control(model.Country.Code)\r\n            }),\r\n            ZipCode: this.fb.control(model.ZipCode, [Validators.required]),\r\n        });\r\n    }\r\n\r\n    setUoM(uom: any, jobCountryId: any, productForm: FormGroup): void {\r\n        if (uom == UoM.MetricTons || uom == UoM.Barrels) {\r\n            if (jobCountryId == 1 || jobCountryId == 4) {\r\n                productForm.get('UOM').setValue(\"Gallons\");\r\n            }\r\n            else if (jobCountryId == 2) {\r\n                productForm.get('UOM').setValue(\"Litres\");\r\n            }\r\n        }\r\n        else {\r\n            if (uom == UoM.Gallons) {\r\n                productForm.get('UOM').setValue(\"Gallons\");\r\n            }\r\n            else if (uom == UoM.Litres) {\r\n                productForm.get('UOM').setValue(\"Litres\");\r\n            }\r\n        }\r\n    }\r\n\r\n    getAddressByZip(product: FormGroup, event: any): void {\r\n        var zipCode = event.target.value;\r\n        var _address = product.get('Address') as FormGroup;\r\n        if (RegExConstants.UsaZip.test(zipCode) || RegExConstants.CanZip.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        data.Address = _address.get('Address').value;\r\n                        if (data.CountryCode != 'CAR') {\r\n                            data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        }\r\n                        var addressModel = this.addressMapper(data);\r\n                        _address.patchValue(addressModel);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    addressMapper(data: any): AddressModel {\r\n        var state = this.StateList.find(x => x.Code == data.StateCode);\r\n        var country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        var countryGroup = this.CountryGroupList.find(x => x.Id == data.Id) || new DropdownItem();\r\n        var _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        _address.CountryGroup = countryGroup;\r\n        return _address;\r\n    }\r\n\r\n    cancelTicketDetail() {\r\n        this.TicketDetailForm.reset();\r\n        this.toggleOpen(false, null);\r\n    }\r\n    addTicketDetail() {\r\n        this.TicketDetailForm.markAllAsTouched();\r\n        let products = this.TicketDetailForm.get('Products').value as any[];\r\n        let invalidQuantityCount = 0;\r\n\r\n        products.forEach(function (product) {\r\n            if (!(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {\r\n                invalidQuantityCount++;\r\n            }\r\n        });\r\n        if (this.isBadgeMandatory && !this.TicketDetailForm.get('BadgeNumber').value.trim()) {\r\n            Declarations.msgerror(\"Please enter badge number\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        if (products.length == invalidQuantityCount) {\r\n            Declarations.msgerror(\"Delivered, gross and net quantity is required for atleast one product\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        if (products.some(p => p.DeliveredQuantity > Math.max(p.GrossQuantity, p.NetQuantity))) {\r\n            Declarations.msgerror(\"Delivered quantity should not be greater than net/gross quantity.\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        var isValid = this.validateTicketDetails(); // validates Products formarray \r\n\r\n        var isValidQuantities = true;\r\n        var invalidQuantities = this.validateQuantities();\r\n        if (invalidQuantities.length > 0) {\r\n            invalidQuantities.forEach(function (isFormValidInfo) {\r\n                if (isFormValidInfo.isFormValid == false) {\r\n                    Declarations.msgerror(\"Gross/net/delivered quantity is missing for product \" + isFormValidInfo.ProductName, undefined, undefined);\r\n                    isValidQuantities = false;\r\n                }\r\n            });\r\n        }\r\n        if (!isValidQuantities) {\r\n            return;\r\n        }\r\n        if (isValid) {\r\n            var liftTicketNumber = this.TicketDetailForm.get('LiftTicketNumber').value.trim().toLowerCase();\r\n            if (this.liftticketnumberslist.indexOf(liftTicketNumber) != -1) {\r\n                Declarations.msgerror(\"You are trying to enter duplicate Lift Ticket Numbers\", undefined, undefined);\r\n            }\r\n            else {\r\n                this.onTicketDetailAdded.emit(this.TicketDetailForm.value);\r\n                this.toggleOpen(false, null);\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror('Please provide required details', undefined, undefined);\r\n        }       \r\n    }\r\n\r\n    validateQuantities(): any[] {\r\n        var isFormValid = true;\r\n        var invalidFormInfo = [];\r\n        var products = this.TicketDetailForm.get('Products').value;\r\n        products.forEach(function (product) {\r\n\r\n            if ((product.NetQuantity > 0 || product.GrossQuantity > 0 || product.DeliveredQuantity > 0) && !(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {\r\n                isFormValid = false;\r\n                invalidFormInfo.push({\r\n                    isFormValid: isFormValid,\r\n                    ProductName: product.ProductName\r\n                });\r\n            }\r\n        });\r\n        return invalidFormInfo;\r\n    }\r\n    updatedTicketDetail() {\r\n        this.TicketDetailForm.markAllAsTouched();\r\n        let products = this.TicketDetailForm.get('Products').value as any[];\r\n        let invalidQuantityCount = 0;\r\n\r\n        products.forEach(function (product) {\r\n            if (!(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {\r\n                invalidQuantityCount++;\r\n            }\r\n        });\r\n\r\n        if (products.length == invalidQuantityCount) {\r\n            Declarations.msgerror(\"Delivered, gross and net quantity is required for atleast one product\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        if (products.some(p => p.DeliveredQuantity > Math.max(p.GrossQuantity, p.NetQuantity))) {\r\n            Declarations.msgerror(\"Delivered quantity should not be greater than net/gross quantity.\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        var isValidQuantities = true;\r\n        var invalidQuantities = this.validateQuantities();\r\n        if (invalidQuantities.length > 0) {\r\n            invalidQuantities.forEach(function (isFormValidInfo) {\r\n                if (isFormValidInfo.isFormValid == false) {\r\n                    Declarations.msgerror(\"Delivered/gross/net quantity is missing for product \" + isFormValidInfo.ProductName, undefined, undefined);\r\n                    isValidQuantities = false;\r\n                }\r\n            });\r\n        }\r\n        if (!isValidQuantities) {\r\n            return;\r\n        }\r\n        if (this.isBadgeMandatory && !this.TicketDetailForm.get('BadgeNumber').value.trim()) {\r\n            Declarations.msgerror(\"Please enter badge number\", undefined, undefined);\r\n            return;\r\n        }\r\n\r\n        var isValid = this.validateTicketDetails();\r\n        if (isValid) {\r\n            var updatedLiftnumber = this.TicketDetailForm.get('LiftTicketNumber').value.trim().toLowerCase();\r\n            if ((this.curLiftTicketNumber != updatedLiftnumber) && (this.liftticketnumberslist.indexOf(updatedLiftnumber) != -1)) {\r\n                Declarations.msgerror(\"You are trying to add duplicate Lift Ticket Numbers\", undefined, undefined);\r\n            }\r\n            else {\r\n                var eventData = {\r\n                    ticketDetail: this.TicketDetailForm.value,\r\n                    index: this.EditIndex\r\n                };\r\n                this.onTicketDetailUpdated.emit(eventData);\r\n                this.toggleOpen(false, null);\r\n                this.EditIndex = -1;\r\n                this.liftticketnumberslist.splice(this.liftticketnumberslist.indexOf(this.curLiftTicketNumber), 1);\r\n                this.liftticketnumberslist.push(updatedLiftnumber);\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror('Please provide required details ', undefined, undefined);\r\n        }\r\n    }\r\n\r\n    validateTicketDetails(): boolean {\r\n        var isValid = false;\r\n            var _products = this.TicketDetailForm.get('Products') as FormArray;\r\n            var _liftTicketNumber = this.TicketDetailForm.get('LiftTicketNumber').value;\r\n            var _liftDate = this.TicketDetailForm.get('LiftDate').value;\r\n            _products.controls.forEach(function (elem) {\r\n                if (elem.get('BulkPlantName').value && elem.get('BulkPlantName').value.trim() != '' && _liftTicketNumber != \"\" &&\r\n                    (_liftDate != \"\" && _liftDate != null && _liftDate != undefined) \r\n                    && (elem.get('Address') as FormGroup).valid)\r\n                    isValid = true;\r\n            });\r\n        return isValid;\r\n    }\r\n    \r\n    isInvalid(name: string): boolean {\r\n        let result = this.TicketDetailForm.get(name).invalid &&\r\n            (this.TicketDetailForm.get(name).dirty||this.TicketDetailForm.get(name).touched)\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.TicketDetailForm.get(name).errors.required;\r\n    }\r\n\r\n    isInvalidPg(name: string, product: FormGroup): boolean {\r\n        var result = product.get(name).invalid\r\n            &&\r\n            (\r\n                product.get(name).dirty\r\n                ||\r\n                product.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequiredPg(name: string, product: FormGroup): boolean {\r\n        return product.get(name).errors.required;\r\n    }\r\n\r\n    onBulkPlantSelected(product: FormGroup, event: any): void {\r\n\r\n        product.controls['BulkPlantName'].setValue(event.Name);\r\n        product.controls['BulkPlantId'].setValue(event.Id);\r\n        var _address = product.get('Address') as FormGroup;\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulKPlantAddress(event.Name, _address);\r\n    }\r\n\r\n    onBulkPlantSearched(event: any): void {\r\n        let keyword = (event.target && event.target.value) ? event.target.value.toLowerCase() : '';\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n    }\r\n\r\n    setStateName(product: FormGroup, event: any) {\r\n        product.get('Address.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    setCountryName(product: FormGroup, event: any) {\r\n        product.get('Address.Country.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n\r\n    get StatesListByCountry(): any {\r\n        return (product: FormGroup) => this.filterStates(product.get('Address.Country.Id').value, product.get('Address.CountryGroup.Id').value);\r\n    }\r\n\r\n    private filterStates(countryId: number, countryGroupId: number): any[] {\r\n        if (countryGroupId) {\r\n            return this.StateList.filter(t => t.CountryId == countryId && t.CountryGroupId == countryGroupId);\r\n        } else {\r\n            return this.StateList.filter(t => t.CountryId == countryId);\r\n        }\r\n    }\r\n\r\n    getBulKPlantAddress(bulkPlantName: string, address: FormGroup) {\r\n        this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe((response: AddressModel) => {\r\n            \r\n            if(response.CountryGroup.Id == 0)\r\n                response.CountryGroup.Id = null;\r\n            \r\n            address.patchValue(response);\r\n        });\r\n    }\r\n\r\n    //getAddedBolDetails(boldetails: any) {\r\n    //    console.log(\"lift details:getAddedBolDetails\");\r\n    //    console.log(boldetails);\r\n    //    var newProds = [];\r\n    //    boldetails.map(item => item.Products.map(prod => newProds.push(prod)));       \r\n    //    console.log(newProds);\r\n    //    this.clearValidators(newProds);\r\n    //}\r\n\r\n    //clearValidators(products: any[]) {\r\n    //    var _lift = this.TicketDetailForm.get('Products') as FormArray;\r\n    //    products.forEach(function (x) {\r\n    //        var _group = _lift.controls.find(function (y) {\r\n    //            return y.get('ProductId').value == x.ProductId;\r\n    //        });\r\n    //        console.log(\"liftDetails: groups=>\");\r\n    //        console.log(_group.value);\r\n    //        if (_group != undefined && _group != null) {\r\n    //            _group.get('LiftQuantity').clearValidators();\r\n    //            _group.get('LiftQuantity').updateValueAndValidity();\r\n    //            _group.get('BulkPlantName').clearValidators();\r\n    //            _group.get('BulkPlantName').updateValueAndValidity();\r\n    //        }\r\n    //    });\r\n    //}\r\n\r\n\r\n\r\n\r\n    // Duplicate lift ticket number validation methods \r\n    getAddedLiftTickets(items: any) {\r\n        var tktnumbers = items.map(item => item.LiftTicketNumber);\r\n        if (tktnumbers.length > 0 && tktnumbers[0] != null) {\r\n            this.liftticketnumberslist = items.map(item => item.LiftTicketNumber.trim().toLowerCase());\r\n        }\r\n    }\r\n    getDeletedLift(items: any) {\r\n        this.liftticketnumberslist.length = 0;\r\n        this.liftticketnumberslist = items.map(item => item.LiftTicketNumber.trim().toLowerCase());\r\n    }\r\n    getEditedLiftTickets(items: any) {\r\n        //this.curLiftTicketNumber = items.LiftTicketNumber.trim().toLowerCase();\r\n        var tktnumber = items.LiftTicketNumber;\r\n        if (tktnumber != null) {\r\n            this.curLiftTicketNumber = tktnumber.trim().toLowerCase();\r\n        }\r\n    }\r\n\r\n    setDeliveredQuantValidation(arr: number[], control: FormControl) {\r\n        let max = Math.max(...arr);\r\n        if (control.value > max)\r\n            this.validationService.addError(control, 'maxQuantity');\r\n        else\r\n            this.validationService.removeError(control, 'maxQuantity');\r\n    }\r\n}\r\n","<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                style=\"height: 100vh\">\r\n\r\n        <a (click)=\"toggleOpen(false, null)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n\r\n        <content class=\"pr30\">\r\n            <h3 class=\"dib ml10 mt10 mb10\">Add Lift Details</h3>\r\n            <div class=\"row\" [formGroup]=\"TicketDetailForm\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <input type=\"hidden\" placeholder=\"Id\" formControlName=\"Id\" />\r\n                    <label for=\"LiftTicketNumber\">Lift Ticket #:<span class=\"color-maroon\">*</span></label>\r\n                    <input name=\"LiftTicketNumber\" placeholder=\"Lift Ticket #\" formControlName=\"LiftTicketNumber\" class=\"form-control\" />\r\n                    <div *ngIf=\"isInvalid('LiftTicketNumber')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('LiftTicketNumber')\">\r\n                            Required\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"LiftDate\">Lift Date:<span class=\"color-maroon\">*</span></label>\r\n                    <input name=\"LiftDate\" placeholder=\"Lift Date\" formControlName=\"LiftDate\" id=\"liftDate\" class=\"form-control\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"TicketDetailForm.get('LiftDate').setValue($event)\" />\r\n                    <!--<p-calendar formControlName=\"LiftDate\" dateFormat=\"mm/dd/yy\"></p-calendar>-->\r\n                    <div *ngIf=\"isInvalid('LiftDate')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('LiftDate')\">\r\n                            Required\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"BadgeNumber\">Badge #:<span *ngIf=\"isBadgeMandatory\" class=\"color-maroon\">*</span></label>\r\n                    <input name=\"BadgeNumber\" placeholder=\"Badge #\" formControlName=\"BadgeNumber\" class=\"form-control\" />\r\n                    <div *ngIf=\"isInvalid('BadgeNumber')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('BadgeNumber')\">\r\n                            Required\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-12\"><div class=\"border-b mb15\"></div></div>\r\n                <div formArrayName=\"Products\">\r\n                    <ng-container *ngFor=\"let product of TicketDetailForm.get('Products')['controls']; let j = index;\">\r\n                        <div class=\"row col-sm-12\" [formGroupName]=\"j\" id=\"liftProduct_{{j}}\">\r\n                            <div class=\"col-sm-12 form-group\">\r\n                                <b><span class=\"fa fa-tint\"></span> {{product.get('ProductName').value}}</b>\r\n                            </div>\r\n                            <div class=\"col-sm-6 form-group\">\r\n                                <label for=\"Terminal\">Bulk Plant:</label>\r\n                                <input type=\"text\" formControlName=\"BulkPlantName\" class=\"form-control\" (input)=\"onBulkPlantSearched($event)\" placeholder=\"Bulk Plant Name\" [requiredIfNotEmpty]=\"product.get('GrossQuantity') && product.get('NetQuantity')\" />\r\n                                <span class=\"help-block color-maroon\" *ngIf=\"product.get('BulkPlantName').errors && (product.get('BulkPlantName').touched ||\r\n                                  product.get('BulkPlantName').dirty)\">\r\n                                    <span *ngIf=\"product.get('BulkPlantName').errors.required\">\r\n                                        Required\r\n                                    </span>\r\n                                </span>\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected(product, plant)\"\r\n                                        [attr.selected]=\"plant.Name==product.get('BulkPlantName').value\">{{plant.Name}}</li>\r\n                                </ul>\r\n                                <input type=\"hidden\" formControlName=\"BulkPlantId\" />\r\n                            </div>\r\n                            <div class=\"col-sm-6 form-group mb10\">\r\n                                <label for=\"GrossQuantity\">Gross Quantity:</label>\r\n                                <div class=\"input-group\">\r\n                                    <input name=\"GrossQuantity\" placeholder=\"Gross Quantity\" formControlName=\"GrossQuantity\" class=\"form-control\" numberWithDecimal [requiredIfTrue]=\"product.get('NetQuantity').value>0 || product.get('DeliveredQuantity').value>0\" \r\n                                        (input)=\"setDeliveredQuantValidation([$event.target.value, product.get('NetQuantity').value], product.get('DeliveredQuantity'))\" />\r\n                                    <div class=\"input-group-addon fs12\"> {{ product.get('UOM').value }}</div>\r\n                                </div>\r\n                                <span class=\"help-block color-maroon mb0\" *ngIf=\"product.get('GrossQuantity').errors && (product.get('GrossQuantity').touched ||\r\n                                  product.get('GrossQuantity').dirty)\">\r\n                                    <span *ngIf=\"product.get('GrossQuantity').errors.required\">\r\n                                        Required.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('GrossQuantity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-sm-6 form-group mb10\">\r\n                                <label for=\"NetQuantity\">Net Quantity:</label>\r\n                                <div class=\"input-group\">\r\n                                    <input name=\"NetQuantity\" placeholder=\"Net Quantity\" formControlName=\"NetQuantity\" class=\"form-control\" numberWithDecimal [requiredIfTrue]=\"product.get('DeliveredQuantity').value>0 || product.get('GrossQuantity').value>0\"\r\n                                        (input)=\"setDeliveredQuantValidation([product.get('GrossQuantity').value, $event.target.value], product.get('DeliveredQuantity'))\"/>\r\n                                    <div class=\"input-group-addon fs12\"> {{ product.get('UOM').value }}</div>\r\n                                </div>\r\n                                <span class=\"help-block color-maroon\" *ngIf=\"product.get('NetQuantity').errors && (product.get('NetQuantity').touched ||\r\n                                  product.get('NetQuantity').dirty)\">\r\n                                    <span *ngIf=\"product.get('NetQuantity').errors.required\">\r\n                                        Required.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('NetQuantity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-6 form-group mb10\">\r\n                                <label for=\"\">Delivered Quantity:</label>\r\n                                <div class=\"input-group\">\r\n                                    <!-- delivered Qty data here-->\r\n                                    <input name=\"DeliveredQuantity\" placeholder=\"Delivered Quantity\" formControlName=\"DeliveredQuantity\" class=\"form-control\" numberWithDecimal [requiredIfTrue]=\"product.get('NetQuantity').value>0 || product.get('GrossQuantity').value>0\" \r\n                                        (input)=\"setDeliveredQuantValidation([product.get('GrossQuantity').value, product.get('NetQuantity').value], product.get('DeliveredQuantity'))\"/>\r\n                                    <div class=\"input-group-addon fs12\"> {{product.get('UOM').value}}</div>\r\n                                </div>\r\n                                <span class=\"help-block color-maroon\" *ngIf=\"product.get('DeliveredQuantity').errors && (product.get('DeliveredQuantity').touched ||\r\n                                  product.get('DeliveredQuantity').dirty)\">\r\n                                    <span *ngIf=\"product.get('DeliveredQuantity').errors.required\">\r\n                                        Required.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('DeliveredQuantity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                    <span *ngIf=\"product.get('DeliveredQuantity').errors.maxQuantity\">\r\n                                        Quantity should not be greater than net/gross quantity.\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </div>\r\n                                <div class=\"row\" formGroupName=\"Address\">\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <input name=\"Address\" placeholder=\"Address\" formControlName=\"Address\" class=\"form-control\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <input name=\"ZipCode\" placeholder=\"Zip Code\" formControlName=\"ZipCode\" class=\"form-control\" (input)=\"getAddressByZip(product, $event)\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <input name=\"City\" placeholder=\"City\" formControlName=\"City\" class=\"form-control\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <input name=\"CountyName\" placeholder=\"County Name\" formControlName=\"CountyName\" class=\"form-control\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\" formGroupName=\"State\">\r\n                                        <input type=\"hidden\" formControlName=\"Code\" />\r\n                                        <select formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateName(product, $event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry(product)\" [value]=\"st.Id\">\r\n                                                {{st.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\" formGroupName=\"Country\">\r\n                                        <input type=\"hidden\" formControlName=\"Code\" />\r\n                                        <select formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country\" (change)=\"setCountryName(product, $event)\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Id\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <input name=\"Latitude\" placeholder=\"Latitude\" formControlName=\"Latitude\" class=\"form-control\" />\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <input name=\"Longitude\" placeholder=\"Longitude\" formControlName=\"Longitude\" class=\"form-control\" />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-4 form-group\" formGroupName=\"CountryGroup\" *ngIf=\"product.get('Address.Country.Id').value==4\">                                        \r\n                                        <select formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--<div class=\"col-sm-12 form-group\">\r\n        <input type=\"file\" formControlName=\"Image\" />\r\n    </div>-->\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"col-sm-12 text-right\" id=\"lift_inner_button\">\r\n                    <button class=\"btn btn-lg\" (click)=\"cancelTicketDetail()\">Cancel</button>\r\n                    <button class=\"btn btn-primary btn-lg\" *ngIf=\"EditIndex == -1\" (click)=\"addTicketDetail()\"><i class=\"fa fa-plus-circle\"></i> Add</button>\r\n                    <button class=\"btn btn-primary btn-lg\" *ngIf=\"EditIndex > -1\" (click)=\"updatedTicketDetail()\"><i class=\"fa fa-edit\"></i> Update</button>\r\n                </div>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n\r\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChildren, QueryList, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\r\nimport { LiftTicketDetail, LiftProductModel, AddressModel } from '../models/DropDetail';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\n\r\n@Component({\r\n\tselector: 'app-lift-tickets',\r\n\ttemplateUrl: './lift-tickets.component.html',\r\n\tstyleUrls: ['./lift-tickets.component.css']\r\n})\r\nexport class LiftTicketsComponent implements OnInit, OnChanges {\r\n\r\n\t@Input() public Parent: FormGroup;\r\n\t@Input() public TicketDetails: FormArray;\r\n\t@Input() public Model: LiftTicketDetail[];\r\n\t@Output() public onTicketEditRequest: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChildren(ImageuploadComponent) children: QueryList<ImageuploadComponent>;\r\n\r\n    //Liftticket number Duplicate validation methods \r\n    @Output() public onLiftTicketAdded: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public OnLiftTicketDeleted: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public onLiftTicketEdit: EventEmitter<any> = new EventEmitter<any>()\r\n    @Output() public OnLiftQuantitiesAdded: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input() public IsImageRequired: boolean;\r\n    public IsBolImageRequired: boolean = false;\r\n\r\n\tconstructor(private fb: FormBuilder, private addressService: AddressService) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t}\r\n\r\n\tngOnChanges(change: SimpleChanges) {\r\n\t\tif (change.Model && change.Model.currentValue != null) {\r\n\t\t\tvar lifts = change.Model.currentValue as LiftTicketDetail[];\r\n\t\t\tlifts.forEach(x => this.ticketDetailAdded(x));\r\n        }\r\n        if (change.IsImageRequired && change.IsImageRequired.currentValue != null) {\r\n            this.IsBolImageRequired = change.IsImageRequired.currentValue;\r\n        }\r\n    }\r\n\r\n\r\n\tbuildForm(model: LiftTicketDetail): FormGroup {\r\n\t\tvar products = this.fb.array([]);\r\n\t\tvar currentObj = this;\r\n\t\tmodel.Products.forEach(function (elem, idx) {\r\n\t\t\tproducts.push(currentObj.buildProduct(elem));\r\n\t\t});\r\n\r\n\t\treturn this.fb.group({\r\n\t\t\tId: this.fb.control(model.Id),\r\n\t\t\tLiftTicketNumber: this.fb.control(model.LiftTicketNumber),\r\n\t\t\tLiftDate: this.fb.control(model.LiftDate),\r\n\t\t\tProducts: products,\r\n            LiftImages: this.fb.control(''),\r\n            BadgeNumber: this.fb.control(model.BadgeNumber)\r\n\t\t});\r\n\t}\r\n\r\n    buildProduct(model: LiftProductModel): FormGroup {\r\n        return this.fb.group({\r\n            ProductId: this.fb.control(model.ProductId),\r\n            ProductName: this.fb.control(model.ProductName),\r\n            NetQuantity: this.fb.control(model.NetQuantity),\r\n            DeliveredQuantity: this.fb.control(model.DeliveredQuantity),\r\n            GrossQuantity: this.fb.control(model.GrossQuantity),\r\n            BulkPlantId: this.fb.control(model.BulkPlantId),\r\n            BulkPlantName: this.fb.control(model.BulkPlantName),\r\n            Address: this.buildAddress(model.Address),\r\n            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId)\r\n        });\r\n    }\r\n\r\n    buildAddress(model: AddressModel): FormGroup {\r\n        var product = this.fb.group({\r\n            Address: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            State: this.fb.group({\r\n                Id: this.fb.control(''),\r\n                Code: this.fb.control('')\r\n            }),\r\n            Country: this.fb.group({\r\n                Id: this.fb.control(''),\r\n                Code: this.fb.control('')\r\n            }),\r\n            ZipCode: this.fb.control(''),\r\n        });\r\n        product.patchValue(model);\r\n        return product;\r\n    }\r\n\r\n    ticketDetailAdded(item: LiftTicketDetail): void {\r\n        if (item.LiftDate && item.LiftDate.indexOf('/Date(') >= 0) {\r\n            item.LiftDate = item.DisplayLiftDate || '';\r\n        }\r\n        this.TicketDetails.push(this.buildForm(item));\r\n        this.onLiftTicketAdded.emit(this.TicketDetails.value);\r\n        this.OnLiftQuantitiesAdded.emit();\r\n    }\r\n\r\n    ticketDetailUpdated(item: any): void {\r\n        var formG = this.TicketDetails.controls[item.index] as FormGroup;\r\n        formG.patchValue(item.ticketDetail);\r\n        this.OnLiftQuantitiesAdded.emit();\r\n    }\r\n\r\n    updateBulkPlantDetail(event: any) {\r\n        var currentObj = this; var updated = false;\r\n        currentObj.TicketDetails.controls.forEach(function (elem: FormGroup, idx) {\r\n            var _products = elem.get('Products') as FormArray;\r\n            var _matched = _products.controls.find(function (elem: FormGroup) {\r\n                return elem.get('ProductId').value == event.ProductId;\r\n            });\r\n            if (_matched != undefined) {\r\n                (_matched as FormGroup).patchValue(event);\r\n                updated = true;\r\n            }\r\n        });\r\n        if (!updated) {\r\n            var _lift = new LiftTicketDetail();\r\n            _lift.Products = [event];\r\n            currentObj.ticketDetailAdded(_lift);\r\n        }\r\n    }\r\n\r\n    editTicketDetail(ticketDetail: FormGroup, i: number): any {\r\n        this.onTicketEditRequest.emit({ ticketDetail: ticketDetail.value, index: i });\r\n        this.onLiftTicketEdit.emit(ticketDetail.value);\r\n    }\r\n\r\n    deleteTicketDetail(i: number): void {\r\n        this.TicketDetails.removeAt(i);\r\n        this.OnLiftTicketDeleted.emit(this.TicketDetails.value);\r\n        this.OnLiftQuantitiesAdded.emit();\r\n    }\r\n}\r\n","<div [formGroup]=\"Parent\" class=\"well box-shadow\" *ngIf=\"TicketDetails?.controls?.length > 0\">\r\n    <div formArrayName=\"TicketDetails\">\r\n        <ng-container *ngFor=\"let liftTkt of TicketDetails?.controls; let i = index; let isFirstTkt = first;\">\r\n            <div [formGroupName]=\"i\">\r\n                <div *ngIf=\"isFirstTkt\">\r\n                    <div class=\"row f-bold\">\r\n                        <div class=\"col-sm-2\">Ticket #</div>\r\n                        <div class=\"col-sm-1\">Badge #</div>\r\n                        <div class=\"col-sm-2\">Product</div>\r\n                        <div class=\"col-sm-2\">Bulk Plant</div>\r\n                        <div class=\"col-sm-1\">Gross</div>\r\n                        <div class=\"col-sm-1\">Net</div>\r\n                        <div class=\"col-sm-1\">Delivered</div>\r\n                        <div class=\"col-sm-1\">&nbsp;</div>\r\n                    </div>\r\n                </div>\r\n                <div formArrayName=\"Products\">\r\n                    <ng-container *ngFor=\"let product of liftTkt.get('Products').controls; let j = index; let isFirstPrd = first;\">\r\n                        <div class=\"row\" [formGroupName]=\"j\">\r\n                            <div class=\"col-sm-2\">\r\n                                <span *ngIf=\"isFirstPrd\"> {{liftTkt.get('LiftTicketNumber').value}}</span>\r\n                                &nbsp;\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <span *ngIf=\"isFirstPrd\"> {{liftTkt.get('BadgeNumber').value}}</span>\r\n                                &nbsp;\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <span *ngIf=\"(product.get('GrossQuantity').value && product.get('NetQuantity').value) || product.get('BulkPlantName').value\">\r\n                                    <span class=\"fa fa-tint\"></span> {{product.get('ProductName').value}}\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <span *ngIf=\"(product.get('GrossQuantity').value && product.get('NetQuantity').value) || product.get('BulkPlantName').value\">\r\n                                    {{product.get('BulkPlantName').value}}\r\n                                </span>\r\n                                <div formGroupName=\"Address\">\r\n                                    <span *ngIf=\"product.get('BulkPlantName').value\">\r\n                                        {{product.get('Address.Address').value}},\r\n                                        {{product.get('Address.City').value}},\r\n                                        {{product.get('Address.State.Code').value}}\r\n                                        {{product.get('Address.ZipCode').value}}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                {{product.get('GrossQuantity').value}}\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                {{product.get('NetQuantity').value}}\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                {{product.get('DeliveredQuantity').value}}\r\n                            </div>\r\n                            <div class=\"col-sm-1\"></div>\r\n                            <div class=\"col-sm-1\">\r\n                                <a *ngIf=\"(product.get('GrossQuantity').value && product.get('NetQuantity').value) || product.get('BulkPlantName').value\" (click)=\"editTicketDetail(liftTkt, i)\"><i class=\"fa fa-edit fs14\"></i></a>\r\n                                <a *ngIf=\"((product.get('GrossQuantity').value && product.get('NetQuantity').value) || product.get('BulkPlantName').value) && isFirstPrd\" (click)=\"deleteTicketDetail(i)\"><i class=\"fa fa-trash-alt ml10 color-maroon\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <app-imageupload [fileType]=\"'liftFile'\" [orderId]=\"liftTkt.get('LiftTicketNumber').value\" formControlName=\"LiftImages\" [inputFile]=\"Model[i]==undefined?[]:Model[i].ImageList\" [requiredIfTrue]=\"IsBolImageRequired\" [isLift]=\"true\"></app-imageupload>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mb20 border-b-dash\"></div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { Component, OnInit, forwardRef } from '@angular/core';\r\nimport { FormGroup, NG_VALUE_ACCESSOR, FormBuilder, Validators, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-payment-terms',\r\n    templateUrl: './payment-terms.component.html',\r\n    styleUrls: ['./payment-terms.component.css'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => PaymentTermsComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class PaymentTermsComponent implements OnInit, ControlValueAccessor {\r\n\r\n    public PaymentTerm: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        this.PaymentTerm = this.fb.group({\r\n            TermId: this.fb.control(''),\r\n            NetDays: this.fb.control('0', Validators.required)\r\n        });\r\n    }\r\n\r\n    readonlyNetDays(termId: number) {\r\n        var netdays = this.PaymentTerm.get('NetDays');\r\n        if (netdays.value == '') {\r\n            netdays.setValue('0');\r\n        }\r\n        if (termId == 1) {\r\n            netdays.enable();\r\n        } else {\r\n            netdays.disable();\r\n        }\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        return this.PaymentTerm.get(name).invalid &&\r\n            (this.PaymentTerm.get(name).dirty || this.PaymentTerm.get(name).touched);\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.PaymentTerm.get(name).errors.required;\r\n    }\r\n\r\n    //----------------- DO NOT MODIFY: Control Value accessor ----------------------\r\n\r\n    public onTouched: () => void = () => { };\r\n\r\n    writeValue(val: any): void {\r\n        val && this.PaymentTerm.setValue(val, { emitEvent: true });\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.PaymentTerm.valueChanges.subscribe(fn);\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        isDisabled ? this.PaymentTerm.disable() : this.PaymentTerm.enable();\r\n    }\r\n\r\n    //----------------- DO NOT MODIFY: Control Value accessor ----------------------\r\n}\r\n","<h4 class=\"pt0\">Payment Terms</h4>\r\n<div class=\"row\" [formGroup]=\"PaymentTerm\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"form-check mb5\">\r\n            <input class=\"form-check-input\" type=\"radio\" id=\"prepaid\" [name]=\"'TermId'\" formControlName=\"TermId\" [value]=\"3\" (change)=\"readonlyNetDays(3)\" />\r\n            <label class=\"form-check-label\" for=\"prepaid\">\r\n                Prepaid in full\r\n            </label>\r\n        </div>\r\n        <div class=\"form-check mb5\">\r\n            <input class=\"form-check-input mb5\" type=\"radio\" id=\"dueonreceipt\" [name]=\"'TermId'\" formControlName=\"TermId\" [value]=\"2\" (change)=\"readonlyNetDays(2)\" />\r\n            <label class=\"form-check-label\" for=\"dueonreceipt\">\r\n                Due on receipt\r\n            </label>\r\n        </div>\r\n        <div class=\"form-check mb5\">\r\n            <input class=\"form-check-input mb5\" type=\"radio\" id=\"netdays\" [name]=\"'TermId'\" formControlName=\"TermId\" [value]=\"1\" (change)=\"readonlyNetDays(1)\" />\r\n            <label class=\"form-check-label\" for=\"netdays\">\r\n                Net\r\n            </label>\r\n        </div>\r\n        <div class=\"form-check mb5\">\r\n            <input class=\"form-check-input mb5\" type=\"radio\" id=\"net30days\" [name]=\"'TermId'\" formControlName=\"TermId\" [value]=\"4\" (change)=\"readonlyNetDays(4)\" />\r\n            <label class=\"form-check-label\" for=\"net30days\">\r\n                1% 15 Days, Net 30\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <input type=\"text\" id=\"netdaysnumber\" class=\"form-control\" formControlName=\"NetDays\" placeholder=\"# Days\" \r\n               style=\"max-width:70px\" [readonly]=\"PaymentTerm.get('TermId').value != 1\" />\r\n    </div>\r\n    <div class=\"col-8\">Days of receipt - Upon credit approval</div>\r\n    <div class=\"col-12\">\r\n        <span *ngIf=\"isInvalid('NetDays')\" class=\"color-maroon\">\r\n            <span *ngIf=\"PaymentTerm.get('NetDays').errors.required\">\r\n                Net days is required.\r\n            </span>\r\n        </span>\r\n    </div>\r\n</div>\r\n","<div [formGroup]=\"SurchargeForm\">\r\n\r\n    <div *ngIf=\"SurchargeForm.get('FreightPricingMethod').value != 1  && CheckBoxFreightCost\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"checkbox\">\r\n                        <label>\r\n                            <input type=\"checkbox\" formControlName=\"IsFreightCostApplicable\" (change)=\"OncheckBoxChange($event)\" />\r\n                            Apply Freight Cost\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"SurchargeForm.get('IsFreightCostApplicable').value\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\" *ngIf=\"IsFrieghtPricingMethodAuto\">\r\n                    <h3>Freight Cost</h3>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-2\">\r\n                            <h5>Freight Type</h5>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown formControlName=\"FreightType\"\r\n                                                         [placeholder]=\"'Type'\"\r\n                                                         class=\"single-select\"\r\n                                                         (onSelect)=\"OnFreightTypeSelect($event)\"\r\n                                                         (onDeSelect)=\"onTypeDeSelect($event)\"\r\n                                                         [settings]=\"SingleSelectSettingsById\"\r\n                                                         [data]=\"FreightTypeList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div *ngIf=\"SurchargeForm.get('FreightType').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SurchargeForm.get('FreightType').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"IsFreightTableTypeVisible\" class=\"col-sm-3\">\r\n                            <h5>Table Type</h5>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown formControlName=\"FreightTableType\"\r\n                                                         [placeholder]=\"'Table Type'\"\r\n                                                         class=\"single-select\"\r\n                                                         (onSelect)=\"OnFreightTableTypeSelect($event)\"\r\n                                                         (onDeSelect)=\"onTypeDeSelect($event)\"\r\n                                                         [settings]=\"SingleSelectSettingsById\"\r\n                                                         [data]=\"FreightTableTypeList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div *ngIf=\"SurchargeForm.get('FreightTableType').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SurchargeForm.get('FreightTableType').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <h5>Freight Table Name</h5>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown formControlName=\"FreightTableName\"\r\n                                                         [placeholder]=\"'Type'\"\r\n                                                         class=\"single-select\"\r\n                                                         (onSelect)=\"OnFreightTableNameSelect()\"\r\n                                                         (onDeSelect)=\"onTypeDeSelect($event)\"\r\n                                                         [settings]=\"SingleSelectSettingsById\"\r\n                                                         [data]=\"FreightTableNameList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div *ngIf=\"SurchargeForm.get('FreightTableName').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SurchargeForm.get('FreightTableName').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"IsDistanceVisible\" class=\"col-sm-2\">\r\n                            <h5>Distance (Miles)</h5>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"number\" formControlName=\"AutoFreightDistance\" min=\"0\" oninput=\"this.value = Math.abs(this.value)\" class=\"form-control\" placeholder=\"Distance\" />\r\n                            </div>\r\n                            <div *ngIf=\"SurchargeForm.get('AutoFreightDistance').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SurchargeForm.get('AutoFreightDistance').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                            <h5>Freight Cost(Per Gallon)</h5>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"number\" (input)=\"setAutoSurchargeFreightCost($event)\" formControlName=\"AutoSurchargeFreightCost\" class=\"form-control\" placeholder=\"Fee\" />\r\n                                <div class=\"input-group-addon fs12\">USD</div>\r\n                            </div>\r\n                            <div *ngIf=\"SurchargeForm.get('AutoSurchargeFreightCost').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"SurchargeForm.get('AutoSurchargeFreightCost').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"(SurchargeForm.get('FreightPricingMethod').value == 1 && CheckBoxFuelSurcharge) ||\r\n         (SurchargeForm.get('FreightPricingMethod').value == 2 && SurchargeForm.get('IsFreightCostApplicable').value == true  && CheckBoxFuelSurcharge)\">\r\n        <div class=\"row ml-1\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    <input type=\"hidden\" formControlName=\"SurchargePricingType\" />\r\n                    <input type=\"hidden\" formControlName=\"SurchargeProductType\" />\r\n                    <input type=\"hidden\" formControlName=\"FeeSubTypeId\" />\r\n                    <div class=\"checkbox\">\r\n                        <label>\r\n                            <input type=\"checkbox\" formControlName=\"IsSurchargeApplicable\"  (change)=\"OnChangeSurchargeApplicable($event)\"/>\r\n                            Apply Fuel Surchage\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div *ngIf=\"SurchargeForm.get('IsSurchargeApplicable').value\">\r\n                <div class=\"row ml-1\">\r\n                    <div class=\"col-sm-12\" *ngIf=\"IsFrieghtPricingMethodAuto\">\r\n                        <h3>Fuel Surcharge</h3>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3 \">\r\n                                <h5>Table Type</h5>\r\n                                <div class=\"form-group\">\r\n                                    <ng-multiselect-dropdown formControlName=\"FuelSurchargeTableType\"\r\n                                                             [placeholder]=\"'Table Type'\"\r\n                                                             class=\"single-select\"\r\n                                                             (onSelect)=\"OnFuelSurchargeTableTypeSelect($event)\"\r\n                                                             (onDeSelect)=\"onTypeDeSelect($event)\"\r\n                                                             [settings]=\"SingleSelectSettingsById\"\r\n                                                             [data]=\"FuelSurchargeTableTypeList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div *ngIf=\"SurchargeForm.get('FuelSurchargeTableType').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"SurchargeForm.get('FuelSurchargeTableType').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                                <h5>Surcharge Table Name</h5>\r\n                                <div class=\"form-group\">\r\n                                    <ng-multiselect-dropdown formControlName=\"FuelSurchargeTableName\"\r\n                                                             [placeholder]=\"'Type'\"\r\n                                                             class=\"single-select\"\r\n                                                             (onSelect)=\"OnFuelSurchargeTableNameSelect()\"\r\n                                                             (onDeSelect)=\"onFuelSurchargeNameDeSelect()\"\r\n                                                             [settings]=\"SingleSelectSettingsById\"\r\n                                                             [data]=\"FuelSurchargeTableNameList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div *ngIf=\"SurchargeForm.get('FuelSurchargeTableName').invalid && SurchargeForm.get('AutoFreightDistance').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"SurchargeForm.get('FuelSurchargeTableName').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row ml-1\">\r\n                    <div class=\"col-sm-2\" *ngIf=\"!IsFrieghtPricingMethodAuto\">\r\n                        <div class=\"form-group\">\r\n                            <label>Freight Cost</label>\r\n                            <input type=\"text\" formControlName=\"SurchargeFreightCost\" class=\"form-control\" readonly=\"readonly\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\" [style.display]=\"SurchargeForm.get('IsFeeByDistance').value ? 'block' : 'none'\">\r\n                        <div class=\"form-group\">\r\n                            <label>Distance</label>\r\n                            <input type=\"text\" formControlName=\"Distance\" class=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <div *ngIf=\"LoadingPrice\" class=\"pa bg-white subSectionOpacity top0 left0 z-index5 loading-wrapper\">\r\n                                <span class='spinner-dashboard pa'></span>\r\n                            </div>\r\n                            <label>EIA Price</label>\r\n                            <input type=\"text\" formControlName=\"SurchargeEiaPrice\" class=\"form-control\" readonly=\"readonly\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Interval Start</label>\r\n                            <input type=\"text\" formControlName=\"SurchargeTableRangeStart\" class=\"form-control\" readonly=\"readonly\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Interval End</label>\r\n                            <input type=\"text\" formControlName=\"SurchargeTableRangeEnd\" class=\"form-control\" readonly=\"readonly\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Surcharge %</label>\r\n                            <input type=\"text\" formControlName=\"SurchargePercentage\" class=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Total</label>\r\n                            <input type=\"text\" formControlName=\"TotalFuelSurchargeFee\" class=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { FreightCostInputViewModel, FreightTableNameModel, SurchargeModel } from '../models/DropDetail';\r\nimport * as moment from 'moment';\r\nimport { InvoiceService } from '../services/invoice.service';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { FreightPricingMethod, FreightRateRuleType} from '../../app.enum';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n//import { FeeService } from '../services/fee.service';\r\n\r\n@Component({\r\n    selector: 'app-fuel-surcharge',\r\n    templateUrl: './fuel-surcharge.component.html',\r\n    styleUrls: ['./fuel-surcharge.component.css']\r\n})\r\nexport class FuelSurchargeComponent implements OnInit {\r\n    @Input() public Parent: FormGroup;\r\n    @Input() public Model: SurchargeModel;\r\n    @Input() public SurchargeEnabled: boolean = false;\r\n    public SurchargeForm: FormGroup;\r\n    public LoadingPrice: boolean = false;\r\n    private dropQuantity: number = 0;\r\n    public FuelSurchargeTableTypeList: DropdownItem[];\r\n    public FuelSurchargeTableNameList: DropdownItem[];\r\n    public FreightTypeList: DropdownItem[];\r\n    public FreightTableTypeList: DropdownItem[];\r\n    public FreightTableNameList: DropdownItem[];\r\n    public Startdate: any;\r\n    public IsSurchargeApplicable: boolean;\r\n    public IsFreightCostApplicable: boolean;\r\n    public ActualDropQuantity: number;\r\n    public SingleSelectSettingsById = {};\r\n    public IsDistanceVisible: boolean = true;\r\n    public IsFreightTableTypeVisible: boolean = true;\r\n    public IsFrieghtPricingMethodAuto: boolean = false;\r\n    public CheckBoxFreightCost: boolean;\r\n    public CheckBoxFuelSurcharge: boolean;\r\n    private dateRegex = new RegExp(/^(0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])[\\/\\-]\\d{4}$/);\r\n\r\n    constructor(private fb: FormBuilder, private invoiceService: InvoiceService) { }\r\n\r\n    ngOnInit() {\r\n        this.SurchargeForm = this.buildForm();\r\n        this.Parent.addControl('FuelSurchargeFreightFee', this.SurchargeForm);\r\n        if (this.Model != undefined && this.Model != null) {\r\n            this.SurchargeForm.patchValue(this.Model); \r\n            this.setDefaultDetail();\r\n            this.getInvoiceType();          \r\n        }     \r\n        this.Parent.controls['ActualDropQuantity'].valueChanges.pipe(debounceTime(2000), distinctUntilChanged()).subscribe(qty => {           \r\n            if (qty > 0) {\r\n                this.dropQuantity = qty;\r\n                this.calculateSurcharge(qty);\r\n                this.ActualDropQuantity = qty;            \r\n            }       \r\n            let selectedFreightType = this.SurchargeForm.get('FreightTableName').value;\r\n            if (selectedFreightType.length != 0 && selectedFreightType != null && selectedFreightType != undefined ) {\r\n                this.getFreightCostForAutoInvoice();\r\n            }\r\n        });\r\n        this.SurchargeForm.controls['AutoFreightDistance'].valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe(distance => {\r\n            let selectedFreightType = this.SurchargeForm.get('FreightTableName').value\r\n            if (distance > 0 && selectedFreightType.length != 0 && selectedFreightType != null && selectedFreightType != undefined) {\r\n                this.getFreightCostForAutoInvoice();\r\n                this.calculateSurcharge(this.dropQuantity);\r\n            }\r\n            if (distance == null || distance == 0) {\r\n                this.SurchargeForm.get('SurchargeFreightCost').setValue(0);\r\n                this.SurchargeForm.get('AutoSurchargeFreightCost').setValue(0);\r\n            }\r\n        });\r\n        this.SurchargeForm.controls['AutoSurchargeFreightCost'].valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe(cost => {\r\n            if (cost > 0) {\r\n                this.SurchargeForm.get('SurchargeFreightCost').setValue(cost);\r\n                this.calculateSurcharge(this.dropQuantity);\r\n            }\r\n        });\r\n        this.Parent.controls['DropDate'].valueChanges.subscribe(date => {\r\n            this.Startdate = date;\r\n            if (this.dateRegex.test(date) && this.SurchargeEnabled) {\r\n                if (this.IsFrieghtPricingMethodAuto == false) {\r\n                    this.getEiaPriceForDate(date);\r\n                } else {\r\n                    this.getEiaPriceAutoInvoice(date);\r\n                }\r\n            }\r\n        });\r\n        var surchargeForm = this.Parent.get('FuelSurchargeFreightFee') as FormGroup;\r\n        if (surchargeForm != undefined && surchargeForm != null) {\r\n            surchargeForm.get('Distance').valueChanges.subscribe(distance => {\r\n                if (distance > 0 && this.SurchargeEnabled) {\r\n                    this.getEiaPriceForDate(distance);\r\n                }\r\n            });\r\n        }  \r\n        this.SurchargeForm.get('IsSurchargeApplicable').setValue(this.Model.IsSurchargeApplicable);\r\n        this.IsSurchargeApplicable = this.Model.IsSurchargeApplicable ;     \r\n        this.CheckBoxFuelSurcharge = this.IsSurchargeApplicable;\r\n\r\n        this.SurchargeForm.get('IsFreightCostApplicable').setValue(this.Model.IsFreightCostApplicable);\r\n        this.IsFreightCostApplicable = this.Model.IsFreightCostApplicable;\r\n        this.CheckBoxFreightCost = this.Model.IsFreightCostApplicable;\r\n\r\n        if (this.SurchargeForm.get('FreightPricingMethod').value == 2 && this.SurchargeForm.get('IsFreightCostApplicable').value == false) {\r\n            this.SurchargeForm.get('IsSurchargeApplicable').setValue(false);\r\n        }\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n        };\r\n        this.GetFreightType();\r\n        this.getTableTypes();        \r\n    }\r\n\r\n    buildForm(): FormGroup {\r\n        return this.fb.group({\r\n            IsFreightCostApplicable: this.fb.control(''),\r\n            IsSurchargeApplicable: this.fb.control(''),\r\n            SurchargePricingType: this.fb.control(''),\r\n            SurchargeProductType: this.fb.control(''),\r\n            FeeSubTypeId: this.fb.control(''),\r\n            SurchargeFreightCost: this.fb.control(''),\r\n            SurchargePercentage: this.fb.control(''),\r\n            SurchargeEiaPrice: this.fb.control(''),\r\n            SurchargeTableRangeStart: this.fb.control(''),\r\n            SurchargeTableRangeEnd: this.fb.control(''),\r\n            IsFeeByDistance: this.fb.control(''),\r\n            TotalFuelSurchargeFee: this.fb.control(''),\r\n            Distance: this.fb.control(''),\r\n            FuelSurchargeTableType: this.fb.control(''),\r\n            FuelSurchargeTableName: this.fb.control(''),\r\n            FreightType: this.fb.control(''),\r\n            FreightTableType: this.fb.control(''),\r\n            FreightTableName: this.fb.control(''),\r\n            AutoFreightDistance: this.fb.control(''),\r\n            AutoSurchargeFreightCost: this.fb.control(''),  \r\n            FreightPricingMethod: this.fb.control('')  \r\n        });     \r\n    }\r\n\r\n    public OncheckBoxChange(event) {\r\n        if (event.target.checked == false) {\r\n            this.SurchargeForm.get('IsSurchargeApplicable').setValue(false);\r\n        }\r\n        this.validateFreight();\r\n    }\r\n \r\n    public OnChangeSurchargeApplicable(event) {\r\n        this.validateFuelSurcharge();\r\n    }\r\n\r\n    calculateSurcharge(quantity: number): void {\r\n        var percent = this.SurchargeForm.get('SurchargePercentage').value;\r\n        var freightCost = this.SurchargeForm.get('SurchargeFreightCost').value;\r\n\r\n        var surchargePartial = (parseFloat(percent) / 100) * parseFloat(freightCost);\r\n        var surchargeFee = parseFloat(surchargePartial.toFixed(4)) * quantity;\r\n        if (surchargeFee > 0) {\r\n            this.SurchargeForm.get('TotalFuelSurchargeFee').setValue(surchargeFee.toFixed(4));\r\n        }\r\n    }\r\n\r\n    getEiaPriceForDate(date: Date): void {\r\n        this.LoadingPrice = true;\r\n        var _date = moment(date).format('MM/DD/YYYY');\r\n        var EIAdata = {\r\n            buyerCompanyId: this.Model.BuyerCompanyId,\r\n            pricingType: this.SurchargeForm.get('SurchargePricingType').value,\r\n            productType: this.SurchargeForm.get('SurchargeProductType').value,\r\n            deliveryDate: _date\r\n        }\r\n        this.invoiceService.getEiaPrice(EIAdata).subscribe(x => {\r\n            this.LoadingPrice = false;\r\n            if (!isNaN(parseFloat(x.eiaResponse))) {\r\n                this.SurchargeForm.get('SurchargeEiaPrice').setValue(x.eiaResponse);\r\n                this.SurchargeForm.get('SurchargePercentage').setValue(x.percent)\r\n                this.SurchargeForm.get('SurchargeTableRangeStart').setValue(x.start);\r\n                this.SurchargeForm.get('SurchargeTableRangeEnd').setValue(x.end);\r\n                this.calculateSurcharge(this.dropQuantity);\r\n            }\r\n        });\r\n    }    \r\n    public OnFuelSurchargeTableNameSelect() {\r\n        this.getEiaPriceAutoInvoice(this.Startdate);\r\n        this.getFreightCostForAutoInvoice();\r\n    }\r\n    public onFuelSurchargeNameDeSelect() {\r\n        this.SurchargeForm.get('SurchargeEiaPrice').patchValue([]);\r\n        this.SurchargeForm.get('SurchargePercentage').patchValue([]);\r\n        this.SurchargeForm.get('SurchargeTableRangeStart').patchValue([]);\r\n        this.SurchargeForm.get('SurchargeTableRangeEnd').patchValue([]);\r\n    }\r\n    public OnFreightTableNameSelect() {\r\n        let selectedFreightType = this.SurchargeForm.get('FreightType').value as DropdownItem[];\r\n        let freightRateRuleTypeIds = selectedFreightType.map(s => s.Id);\r\n        let FreightRateRuleIds = freightRateRuleTypeIds[0];\r\n        if (FreightRateRuleIds == FreightRateRuleType.Range) {\r\n            let distance = this.SurchargeForm.get('AutoFreightDistance').value\r\n            if (distance) {\r\n                this.getFreightCostForAutoInvoice();\r\n                this.calculateSurcharge(this.dropQuantity);\r\n            }\r\n        }\r\n        if (FreightRateRuleIds == FreightRateRuleType.Route) {\r\n            let qty = this.Parent.controls['ActualDropQuantity'].value;\r\n            if (qty) {\r\n                this.getFreightCostForAutoInvoice();\r\n                this.calculateSurcharge(this.dropQuantity);\r\n            }\r\n        }\r\n    }\r\n    public onFreightTableNameDeSelect() {\r\n        this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);\r\n    }\r\n    private getEiaPriceAutoInvoice(date: Date): void {\r\n        this.LoadingPrice = true;\r\n        var _date;\r\n        if (date) {\r\n            _date = moment(date).format('MM/DD/YYYY');\r\n        } else {\r\n            _date = moment(new Date()).format('MM/DD/YYYY');\r\n        }\r\n        var selectedFuelSurchargeTableName = this.SurchargeForm.get('FuelSurchargeTableName').value as DropdownItem[];\r\n        if (selectedFuelSurchargeTableName) {\r\n            let surchargeTableNameId = selectedFuelSurchargeTableName.map(s => s.Id);\r\n            let EIAdata = {\r\n                deliveryDate: _date,\r\n                fuelSurchargeIndexId: surchargeTableNameId[0]\r\n            };\r\n            this.invoiceService.getEiaPriceAutoFreightMethod(EIAdata).subscribe(x => {\r\n                this.LoadingPrice = false;\r\n                if (x.length != 0 && x) {\r\n                    this.SurchargeForm.get('SurchargeEiaPrice').setValue(x.eiaResponse);\r\n                    this.SurchargeForm.get('SurchargePercentage').setValue(x.percent)\r\n                    this.SurchargeForm.get('SurchargeTableRangeStart').setValue(x.start);\r\n                    this.SurchargeForm.get('SurchargeTableRangeEnd').setValue(x.end);\r\n                    this.calculateSurcharge(this.dropQuantity);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getFreightCostForAutoInvoice() {\r\n        var input = new FreightCostInputViewModel();\r\n        input.OrderId = this.Parent.get('OrderId').value;\r\n        input.TerminalId = this.Parent.get('TerminalId').value;       \r\n        let selectedFreightTableName = this.SurchargeForm.get('FreightTableName').value as DropdownItem[];\r\n        if (selectedFreightTableName) {\r\n            let freightRateRuleId = selectedFreightTableName.map(s => s.Id);\r\n            input.FreightRateRuleId = freightRateRuleId[0];\r\n            input.DeliveredQuantity = this.ActualDropQuantity;\r\n            input.Distance = this.SurchargeForm.get('AutoFreightDistance').value;\r\n            this.invoiceService.GetFreightCostForAutoInvoice(input).subscribe(async (data) => {\r\n                if (data) {\r\n                    var surchargeFreightCost = await (data);\r\n                    this.SurchargeForm.get('SurchargeFreightCost').setValue(surchargeFreightCost);\r\n                    this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(surchargeFreightCost);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public setAutoSurchargeFreightCost(event: any): void {\r\n        this.SurchargeForm.controls['SurchargeFreightCost'].setValue(event.target.value);\r\n    }\r\n        \r\n    public setDistanceBasedFreightCost(distance: number): void {\r\n        if (this.SurchargeForm.get('IsFeeByDistance').value) {\r\n            var feeByQty = this.Model.DeliveryFeeByQuantity.find(function (x) {\r\n                return x.MinQuantity <= distance && x.MaxQuantity >= distance;\r\n            });\r\n            if (feeByQty == undefined && this.Model.DeliveryFeeByQuantity.length > 0) {\r\n                feeByQty = this.Model.DeliveryFeeByQuantity[this.Model.DeliveryFeeByQuantity.length - 1];\r\n            }\r\n            if (feeByQty != undefined) {\r\n                this.SurchargeForm.get('SurchargeFreightCost').setValue(feeByQty.Fee);\r\n            } else {\r\n                this.SurchargeForm.get('SurchargeFreightCost').setValue(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    private GetFreightType(): void {\r\n        this.invoiceService.getFreightTable().subscribe(async (data) => {\r\n            if (data) {\r\n                this.FreightTypeList = await (data);\r\n            }\r\n        });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.invoiceService.getTableTypes().subscribe(async (data) => {\r\n            if (data) {\r\n                this.FuelSurchargeTableTypeList = await (data);\r\n                this.FuelSurchargeTableTypeList = this.FuelSurchargeTableTypeList.splice(0, 2);\r\n                this.FreightTableTypeList = this.FuelSurchargeTableTypeList;\r\n            }\r\n        });\r\n    }\r\n\r\n    //FuelSurcharge\r\n    public OnFuelSurchargeTableTypeSelect(item: any): void {\r\n        this.SurchargeForm.get('FuelSurchargeTableName').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //Master\r\n                this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{ Id: 1, Name: \"Master\" }]);\r\n                break;\r\n            case 2: // Customer Specific\r\n                this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{ Id: 2, Name: \"CustomerSpecific\" }]);\r\n                break;\r\n        }\r\n        this.GetFuelSurchargeTableName(null);\r\n    }\r\n\r\n    private GetFuelSurchargeTableName(selectedFuelSurchargeId: any): void {\r\n        var input = new FreightTableNameModel();\r\n        var selectedFuelSurchargeTableType = this.SurchargeForm.get('FuelSurchargeTableType').value as DropdownItem[];\r\n        if (parent) {\r\n            input.TerminalId = this.Parent.get('TerminalId').value;\r\n            input.OrderId = this.Parent.get('OrderId').value;\r\n        }\r\n        if (selectedFuelSurchargeTableType != null && selectedFuelSurchargeTableType != undefined && selectedFuelSurchargeTableType.length > 0) {\r\n            var surchargeTableTypeIds = selectedFuelSurchargeTableType.map(s => s.Id);\r\n            input.TableType = surchargeTableTypeIds.join(',');\r\n            this.invoiceService.getFuelSurchargeTableName(input).subscribe(async (data) => {\r\n                this.FuelSurchargeTableNameList = await (data);\r\n                if (selectedFuelSurchargeId && selectedFuelSurchargeId.length != 0 && data) {\r\n                    let FuelSurchargeTableNames = this.FuelSurchargeTableNameList.filter(t => t.Id == selectedFuelSurchargeId);\r\n                    this.SurchargeForm.controls['FuelSurchargeTableName'].patchValue(FuelSurchargeTableNames);\r\n                    this.getEiaPriceAutoInvoice(this.Startdate);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setDefaultDetail() {\r\n        \r\n        if (this.Model != null) {\r\n            //FuelSurcharge \r\n            if (this.Model.FuelSurchargeTableType == 0 || this.Model.FuelSurchargeTableType == undefined) {\r\n                this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([]);\r\n            } else {\r\n                if (this.Model.FuelSurchargeTableType == 1) {\r\n                    this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{ Id: 1, Name: \"Master\" }]);\r\n                }\r\n                else {\r\n                    this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{ Id: 2, Name: \"CustomerSpecific\" }]);\r\n                }\r\n                this.GetFuelSurchargeTableName(this.Model.FuelSurchargeTableId);\r\n            }\r\n            //FreightCost\r\n            if (this.Model.FreightRateRuleType == 0 || this.Model.FreightRateRuleType == undefined || this.Model.FreightRateRuleType == null) {\r\n                this.SurchargeForm.controls['FreightType'].patchValue([]);\r\n                this.SurchargeForm.controls['FreightTableType'].patchValue([]);\r\n            } else {\r\n                if (this.Model.FreightRateRuleType == 1) {\r\n                    this.SurchargeForm.controls['FreightType'].patchValue([{ Id: 1, Name: \"P2P\" }]);\r\n                    this.SurchargeForm.controls['FreightTableType'].patchValue([{ Id: 2, Name: \"CustomerSpecific\" }]);\r\n                    this.GetFreightTableName(null);\r\n                    this.IsFreightTableTypeVisible = false;\r\n                    this.IsDistanceVisible = false;\r\n                }\r\n                else if (this.Model.FreightRateRuleType == 2) {\r\n                    this.SurchargeForm.controls['FreightType'].patchValue([{ Id: 2, Name: \"Range\" }]);\r\n                    this.IsFreightTableTypeVisible = true;\r\n                    this.IsDistanceVisible = true;\r\n                }\r\n                else {\r\n                    this.SurchargeForm.controls['FreightType'].patchValue([{ Id: 3, Name: \"Route\" }]);\r\n                    this.IsFreightTableTypeVisible = true;\r\n                    this.IsDistanceVisible = false;\r\n                }\r\n\r\n                if (this.Model.FreightRateTableType == 1) {\r\n                    this.SurchargeForm.controls['FreightTableType'].patchValue([{ Id: 1, Name: \"Master\" }]);\r\n                }\r\n                else {\r\n                    this.SurchargeForm.controls['FreightTableType'].patchValue([{ Id: 2, Name: \"CustomerSpecific\" }]);\r\n                }\r\n                this.GetFreightTableName(this.Model.FreightRateRuleId);\r\n            }           \r\n        }\r\n        this.validateFreight();\r\n        this.validateFuelSurcharge();\r\n    }\r\n\r\n    validateFreight() {\r\n        if (this.SurchargeForm.get('IsFreightCostApplicable').value && this.SurchargeForm.get('FreightPricingMethod').value == FreightPricingMethod.Auto) {\r\n\r\n            this.SurchargeForm.get('FreightType').setValidators([Validators.required]);\r\n            this.SurchargeForm.get('FreightType').updateValueAndValidity();\r\n\r\n            let selectedFreightType = this.SurchargeForm.get('FreightType').value;\r\n            if (selectedFreightType != null && selectedFreightType != undefined && selectedFreightType.length > 0) {\r\n                var freightRateType = selectedFreightType.map(s => s.Id);\r\n\r\n                let value = (freightRateType != FreightRateRuleType.P2P) ? [Validators.required] : [];\r\n                this.SurchargeForm.get('FreightTableType').setValidators(value);\r\n                this.SurchargeForm.get('FreightTableType').updateValueAndValidity();\r\n\r\n                let distance = (freightRateType == FreightRateRuleType.Range) ? [Validators.required] : [];\r\n                this.SurchargeForm.get('AutoFreightDistance').setValidators(distance);\r\n                this.SurchargeForm.get('AutoFreightDistance').updateValueAndValidity();\r\n\r\n                this.SurchargeForm.get('FreightTableName').setValidators([Validators.required]);\r\n                this.SurchargeForm.get('FreightTableName').updateValueAndValidity();\r\n\r\n                this.SurchargeForm.get('AutoSurchargeFreightCost').setValidators([Validators.required]);\r\n                this.SurchargeForm.get('AutoSurchargeFreightCost').updateValueAndValidity();\r\n            }\r\n        } else {\r\n            this.SurchargeForm.get('FreightType').setValidators([]);\r\n            this.SurchargeForm.get('FreightType').updateValueAndValidity();\r\n            this.SurchargeForm.get('FreightTableType').setValidators([]);\r\n            this.SurchargeForm.get('FreightTableType').updateValueAndValidity();\r\n            this.SurchargeForm.get('AutoFreightDistance').setValidators([]);\r\n            this.SurchargeForm.get('AutoFreightDistance').updateValueAndValidity();\r\n            this.SurchargeForm.get('FreightTableName').setValidators([]);\r\n            this.SurchargeForm.get('FreightTableName').updateValueAndValidity();\r\n            this.SurchargeForm.get('AutoSurchargeFreightCost').setValidators([]);\r\n            this.SurchargeForm.get('AutoSurchargeFreightCost').updateValueAndValidity();\r\n            this.SurchargeForm.get('AutoFreightDistance').setValidators([]);\r\n            this.SurchargeForm.get('AutoFreightDistance').updateValueAndValidity();\r\n        }\r\n    } FreightPricingMethod\r\n\r\n    validateFuelSurcharge() {\r\n        if (this.SurchargeForm.get('IsSurchargeApplicable').value && this.SurchargeForm.get('FreightPricingMethod').value == FreightPricingMethod.Auto) {\r\n\r\n            this.SurchargeForm.get('FuelSurchargeTableType').setValidators([Validators.required]);\r\n            this.SurchargeForm.get('FuelSurchargeTableType').updateValueAndValidity();\r\n            this.SurchargeForm.get('FuelSurchargeTableName').setValidators([Validators.required]);\r\n            this.SurchargeForm.get('FuelSurchargeTableName').updateValueAndValidity();\r\n        } else {\r\n            this.SurchargeForm.get('FuelSurchargeTableType').setValidators([]);\r\n            this.SurchargeForm.get('FuelSurchargeTableType').updateValueAndValidity();\r\n            this.SurchargeForm.get('FuelSurchargeTableName').setValidators([]);\r\n            this.SurchargeForm.get('FuelSurchargeTableName').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    //FrightCost\r\n    public OnFreightTypeSelect(item: any): void {\r\n        this.SurchargeForm.get('FreightTableType').patchValue([]);\r\n        this.SurchargeForm.get('FreightTableName').patchValue([]);\r\n        this.FreightTableNameList = [];\r\n\r\n        switch (item.Id) {\r\n            case 1: //P2P\r\n                this.SurchargeForm.controls['FreightType'].patchValue([{ Id: 1, Name: \"P2P\" }]);\r\n                this.SurchargeForm.controls['FreightTableType'].patchValue([{ Id: 2, Name: \"CustomerSpecific\" }]);\r\n                this.GetFreightTableName(null);\r\n                this.IsFreightTableTypeVisible = false;\r\n                this.IsDistanceVisible = false;\r\n                break;\r\n            case 2: // Range\r\n                this.SurchargeForm.controls['FreightType'].patchValue([{ Id: 2, Name: \"Range\" }]);\r\n                this.IsFreightTableTypeVisible = true;\r\n                this.IsDistanceVisible = true;\r\n                break;\r\n\r\n            case 3: //Route\r\n                this.SurchargeForm.controls['FreightType'].patchValue([{ Id: 3, Name: \"Route\" }]);\r\n                this.IsFreightTableTypeVisible = true;\r\n                this.IsDistanceVisible = false;\r\n                break;\r\n        }\r\n        this.validateFreight();\r\n    }\r\n\r\n    public OnFreightTableTypeSelect(item: any): void {\r\n        this.SurchargeForm.get('FreightTableName').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //Master\r\n                this.SurchargeForm.controls['FreightTableType'].patchValue([{ Id: 1, Name: \"Master\" }]);\r\n                break;\r\n            case 2: // Customer Specific\r\n                this.SurchargeForm.controls['FreightTableType'].patchValue([{ Id: 2, Name: \"CustomerSpecific\" }]);\r\n                break;\r\n        }\r\n        this.GetFreightTableName(null);\r\n    }\r\n    \r\n    private GetFreightTableName(selectedFreightRateId: any): void {\r\n        var input = new FreightTableNameModel();\r\n        var selectedFreightType = this.SurchargeForm.get('FreightType').value as DropdownItem[];\r\n        var selectedFreightTableType = this.SurchargeForm.get('FreightTableType').value as DropdownItem[];\r\n        this.SurchargeForm.get('SurchargeFreightCost').setValue(0);\r\n        this.SurchargeForm.get('AutoSurchargeFreightCost').setValue(0);\r\n        if (this.Parent) {\r\n            input.TerminalId = this.Parent.get('TerminalId').value;\r\n            input.OrderId = this.Parent.get('OrderId').value;\r\n        }\r\n        if (selectedFreightType != null && selectedFreightType != undefined && selectedFreightType.length > 0) {\r\n            var freightRateType = selectedFreightType.map(s => s.Id);\r\n            input.FreightRateRuleType = freightRateType.join(',');             \r\n        }\r\n        if (selectedFreightTableType != null && selectedFreightTableType != undefined && selectedFreightTableType.length > 0) {\r\n            var freightTableType = selectedFreightTableType.map(s => s.Id);\r\n            input.TableType = freightTableType.join(',');        \r\n        }\r\n        if (selectedFreightTableType != null && selectedFreightTableType != undefined && selectedFreightTableType.length > 0) {\r\n            var freightRateRuleTypeIds = selectedFreightTableType.map(s => s.Id);\r\n            input.TableType = freightRateRuleTypeIds.join(',');\r\n            this.invoiceService.getFreightTableName(input).subscribe(async (data) => {\r\n                this.FreightTableNameList = await (data);\r\n                if (selectedFreightRateId && selectedFreightRateId.length != 0 && data) {\r\n                    let FreightTableNames = this.FreightTableNameList.filter(t => t.Id == selectedFreightRateId);\r\n                    this.SurchargeForm.controls['FreightTableName'].patchValue(FreightTableNames);\r\n                }              \r\n            })\r\n        }\r\n    }\r\n \r\n    public onTypeDeSelect(item: any): void {\r\n        let selectedType = this.SurchargeForm.get('FreightType').value as DropdownItem[];\r\n        let selectedFreightTableType = this.SurchargeForm.get('FreightTableType').value as DropdownItem[];\r\n        let selectedFreightTableName = this.SurchargeForm.get('FreightTableName').value as DropdownItem[];\r\n        let selectedFuelTableType = this.SurchargeForm.get('FuelSurchargeTableType').value as DropdownItem[];\r\n        if (selectedType.length == 0) {\r\n            this.IsFreightTableTypeVisible = true;\r\n            this.SurchargeForm.get('FreightType').patchValue([]);\r\n            this.SurchargeForm.get('FreightTableType').patchValue([]);\r\n            this.SurchargeForm.get('FreightTableName').patchValue([]);\r\n            this.FreightTableNameList = [];\r\n            this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);\r\n        }\r\n        if (selectedFreightTableType.length == 0) {\r\n            this.SurchargeForm.get('FreightTableName').patchValue([]);\r\n            this.FreightTableNameList = [];\r\n            this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);\r\n        }\r\n        if (selectedFreightTableName.length  == 0) {\r\n            this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);\r\n        }\r\n        if (selectedFuelTableType.length == 0) {\r\n            this.SurchargeForm.get('FuelSurchargeTableName').patchValue([]);\r\n            this.FuelSurchargeTableNameList = [];\r\n        }\r\n    }\r\n    private getInvoiceType() {\r\n        if (this.Model != null) {\r\n            if (this.Model.FreightPricingMethod == FreightPricingMethod.Manual) {\r\n                this.IsFrieghtPricingMethodAuto = false;\r\n                this.SurchargeForm.get('FreightPricingMethod').setValue(1);\r\n            } else {\r\n                this.IsFrieghtPricingMethodAuto = true;\r\n                this.SurchargeForm.get('FreightPricingMethod').setValue(2);\r\n            }\r\n        }\r\n  }  \r\n}\r\n","import { Component, OnInit, OnChanges, SimpleChanges, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl, AbstractControl } from '@angular/forms';\r\nimport { map, tap, debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\r\nimport { Observable, of, from, iif } from 'rxjs';\r\nimport { DropDetailModel, AssetDropModel, AddressModel, BulkPlantAddress, QuantityInfo, MFNConversionRequestViewModel, MFNConversionResponseViewModel, BolDetail, LiftTicketDetail } from '../models/DropDetail';\r\nimport { InvoiceService } from '../services/invoice.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport * as moment from 'moment';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { AssetListComponent } from '../asset-list/asset-list.component';\r\nimport { FreightPricingMethod, UoM } from 'src/app/app.enum';\r\nimport { RegExConstants } from 'src/app/app.constants';\r\nimport { DataService } from '../../carrier/service/data.service';\r\n\r\n@Component({\r\n    selector: 'app-produc-detail',\r\n    templateUrl: './produc-detail.component.html',\r\n    styleUrls: ['./produc-detail.component.css']\r\n})\r\nexport class ProducDetailComponent implements OnInit, OnChanges {\r\n\r\n    @Input() public Parent: FormGroup;\r\n    @Input() public Drops: DropDetailModel[];\r\n    //@Input() public AssetDrops: AssetDropModel[];\r\n    @Output() public onBulkplantUpdated: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public onBulkplantPickupReceived: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public OnScheduleReceived: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() public OnBdrDeleted: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() public onBdrEdit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(AssetListComponent) assetListComp: AssetListComponent;\r\n    @ViewChild('actualDropQty') actualDropQty: ElementRef;\r\n\r\n    public settings = {};\r\n    public Schedules: {};\r\n    public MinDropDate: Date = new Date();\r\n    public DefaultDate: Date = new Date();\r\n    public IsLoading: boolean = true;\r\n    //\r\n    public TerminalList: {};\r\n    public Terminals = [];\r\n    public minCharRequired = false;\r\n    public searchError = false;\r\n    public noTerminalFound = false;\r\n    public _loadingTerminals: boolean = false;\r\n\r\n    public SelectedAssets = {};\r\n\r\n    public UoM: string;\r\n    public Currency: string;\r\n    public quantities = new Array<QuantityInfo>();\r\n\r\n    public IsConvertingGravity: boolean = false;\r\n    public CalculatedQty: any = '';\r\n    public IsMarineLocation: boolean = false;\r\n    public IsBdrAdded: boolean = false;\r\n\r\n    constructor(private fb: FormBuilder, private invoiceService: InvoiceService, private addressService: AddressService, private dataService: DataService) {\r\n        this.TerminalList = {};\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.Parent.addControl('Drops', this.fb.array([]));\r\n        this.settings = {\r\n            singleSelection: false,\r\n            idField: 'JobXAssetId',\r\n            textField: 'AssetName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.Schedules = {};\r\n        this.dataService.DropTerminalSelectedSubject.subscribe(orderId => {\r\n            this.bolTerminalChange(orderId);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.Drops && change.Drops.currentValue) {\r\n            var currValues = change.Drops.currentValue as DropDetailModel[];\r\n            var UoM = currValues.map(item => item.UoM);\r\n            this.setUoM(UoM[0]);\r\n            var currency = currValues.map(item => item.Currency);\r\n            this.setCurrency(currency[0]);\r\n            var _drops = this.Parent.get('Drops') as FormArray;\r\n            var _selectedAssets = {};\r\n            currValues.forEach((x: DropDetailModel, idx: number) => {\r\n                _selectedAssets[x.OrderId] = x.Assets.filter(y => y.InvoiceId > 0 && y.OrderId > 0 && y.OrderId == x.OrderId);\r\n                _drops.push(this.getForm(x, _selectedAssets[x.OrderId], UoM[0]));\r\n                this.getSchedules(x.OrderId, x.TrackableScheduleId);\r\n                this.sendBulkplantUpdate(x, x.PickUpAddress);\r\n            });\r\n            this.SelectedAssets = _selectedAssets;\r\n        }\r\n    }\r\n\r\n    sendBulkplantUpdate(x: DropDetailModel, address: BulkPlantAddress) {\r\n        if (x.PickupLocationType == 2) {\r\n            var bulkplantInfo = this.bulkPlantMapper(address, x.FuelTypeId, x.FuelTypeName);\r\n            this.onBulkplantPickupReceived.emit(bulkplantInfo);\r\n        }\r\n    }\r\n\r\n    getForm(model: DropDetailModel, selectedAssets: AssetDropModel[], uom?: any): FormGroup {\r\n        this.loadTerminals(model.OrderId, model.FuelTypeId);\r\n        this.MinDropDate = moment(model.MinDropDate).toDate();\r\n        var dropDate = model.DisplayDropDate == '01/01/0001' ? '' : model.DisplayDropDate;\r\n        var quantity = model.ActualDropQuantity > 0 ? model.ActualDropQuantity : null;\r\n\r\n        var group = this.fb.group({\r\n            OrderId: this.fb.control(model.OrderId),\r\n            PoNumber: this.fb.control(model.PoNumber),\r\n            FuelTypeId: this.fb.control(model.FuelTypeId),\r\n            FuelTypeName: this.fb.control(model.FuelTypeName),\r\n            ActualDropQuantity: this.fb.control(quantity, [Validators.required, Validators.min(0.1), Validators.pattern(RegExConstants.Quantity)]),\r\n            DropDate: this.fb.control(dropDate, [Validators.required]),\r\n            StartTime: this.fb.control(model.StartTime, [Validators.required, Validators.pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\\d):(?:[0-5]\\d) ?([AaPp][Mm])/)]),\r\n            EndTime: this.fb.control(model.EndTime, [Validators.required, Validators.pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\\d):(?:[0-5]\\d) ?([AaPp][Mm])/)]),\r\n            Allowance: this.fb.control(model.Allowance),\r\n            MinDropDate: this.fb.control(model.MinDropDate),\r\n            //DisplayMinDropDate: elem.,\r\n            TrackableScheduleId: this.fb.control(model.TrackableScheduleId),\r\n            JobCountryId: this.fb.control(model.JobCountryId),\r\n            TerminalId: this.fb.control(model.TerminalId),\r\n            TerminalName: this.fb.control(model.TerminalName, [this.terminalConditionallyRequiredValidator.bind(this)]),\r\n            PickupLocationType: this.fb.control(model.PickupLocationType),\r\n            IsAssetTracked: this.fb.control(model.IsAssetTracked),\r\n            TerminalPrice: this.fb.control({ value: null, disabled: true }),\r\n            SelectedAssets: selectedAssets,\r\n            Assets: this.fb.array([]),\r\n            Index: this.fb.control((model.Index + 1)),\r\n            BrokerChainId: this.fb.control(model.BrokerChainId),\r\n            IsDipDataRequired: this.fb.control(model.IsDipDataRequired),\r\n            DropEndDate: this.fb.control(dropDate, [Validators.required]),\r\n            Gravity: this.fb.control(model.Gravity),\r\n            ConversionFactor: this.fb.control(model.ConversionFactor),\r\n            ConvertedQuantity: this.fb.control(model.ConvertedQuantity),\r\n            TypeOfFuel: this.fb.control(model.TypeOfFuel),\r\n            BdrDetails: this.fb.group({}),\r\n            IsMarineLocation: this.fb.control(model.IsMarineLocation),\r\n            BlendedScheduleId: this.fb.control(model.BlendedScheduleId),\r\n            DeliveryLevelPO: this.fb.control(model.DeliveryLevelPO),\r\n            ActualQuantityUOM: this.fb.control(null),\r\n        });\r\n        this.IsLoading = false;\r\n        this.setPrice(group, null);\r\n        if (uom != null && uom == UoM.MetricTons || uom == UoM.Barrels) {\r\n            this.setGravityValidatorForMFN(uom, group);\r\n\r\n            this.setUoM(this.getUoMFromCountry(model.JobCountryId));\r\n\r\n            group.get('ActualQuantityUOM').setValue(this.UoM);\r\n        }\r\n\r\n        return group;\r\n    }\r\n    private terminalConditionallyRequiredValidator(formControl: AbstractControl) {\r\n        if (!formControl.parent) {\r\n            return null;\r\n        }\r\n\r\n        if (formControl.parent.get('TerminalId').value) {\r\n            return Validators.required(formControl);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    loadTerminals(_orderId: number, _fuelTypeId: number): void {\r\n        if (this.TerminalList[_fuelTypeId] == undefined\r\n            || this.TerminalList[_fuelTypeId] == null\r\n            || this.TerminalList[_fuelTypeId].length == 0) {\r\n            this._loadingTerminals = true;\r\n            this.invoiceService.getTerminals(_orderId)\r\n                .subscribe((data: DropdownItem[]) => {\r\n                    this._loadingTerminals = false;\r\n                    this.TerminalList[_fuelTypeId] = data;\r\n                });\r\n        }\r\n    }\r\n    setTerminalName(drop: FormGroup, terminal: any): void {\r\n        drop.controls['TerminalName'].patchValue(terminal.Name);\r\n        drop.controls['TerminalId'].patchValue(terminal.Id);\r\n        this.setPrice(drop, null);\r\n        if (drop.get('FuelSurchargeFreightFee.FreightPricingMethod').value == FreightPricingMethod.Auto) {          \r\n            this.removeFreightFuelSurchargeForm(drop);      \r\n        }\r\n    }\r\n\r\n    bolTerminalChange(orderId: number) {\r\n        let _drops = this.Parent.get('Drops') as FormArray;\r\n        _drops.controls.forEach((drop: FormGroup) => {\r\n            if (drop.get('OrderId').value == orderId) {\r\n                if (drop.get('FuelSurchargeFreightFee.FreightPricingMethod').value == FreightPricingMethod.Auto) {\r\n                    this.removeFreightFuelSurchargeForm(drop);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    removeFreightFuelSurchargeForm(x:any) {\r\n        x.get('FuelSurchargeFreightFee.FreightType').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.FreightTableType').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.FreightTableName').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.Distance').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.AutoSurchargeFreightCost').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.SurchargeFreightCost').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.FuelSurchargeTableType').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.FuelSurchargeTableName').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.SurchargeEiaPrice').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.SurchargePercentage').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.SurchargeTableRangeStart').patchValue([]);\r\n        x.get('FuelSurchargeFreightFee.SurchargeTableRangeEnd').patchValue([]);   \r\n    }\r\n\r\n    onTerminalSearched(event: any, orderId): void {\r\n        var keyword = event.target.value.toLowerCase();\r\n        let searchKeyword$ = of(keyword);\r\n        searchKeyword$.pipe(\r\n            debounceTime(2000),\r\n            distinctUntilChanged(),\r\n            tap((data) => {\r\n                this._loadingTerminals = true\r\n                if (data.length < 3) {\r\n                    this.minCharRequired = true;\r\n                } else {\r\n                    this.minCharRequired = false;\r\n                }\r\n            }),\r\n            switchMap((term) => iif(\r\n                () => (term.length < 3),\r\n                of([])\r\n                , this.invoiceService.getTerminals(orderId, term).pipe(\r\n                    tap(() => {\r\n                        this._loadingTerminals = false;\r\n                    }),\r\n                    catchError(() => {\r\n                        this._loadingTerminals = false;\r\n                        this.searchError = true;\r\n                        return of([]);\r\n                    })\r\n                ))),\r\n            tap(() => this._loadingTerminals = false)\r\n        ).subscribe((data) => {\r\n            if (data.length === 0) {\r\n                this.noTerminalFound = true;\r\n            } else {\r\n                this.noTerminalFound = false;\r\n            }\r\n            this.Terminals = data;\r\n            this._loadingTerminals = false;\r\n        }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    setPrice(drop: FormGroup, event: any): void {\r\n        var date = new Date();\r\n        if (drop.controls['TerminalId'].value > 0) {\r\n            this.invoiceService.getTerminalPriceById(\r\n                drop.controls['TerminalId'].value,\r\n                drop.controls['OrderId'].value,\r\n                drop.controls['DropDate'].value || (+date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear())\r\n                .subscribe(data => {\r\n                    drop.controls['TerminalPrice'].setValue(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    setEndDate(drop: FormGroup, event: any): void {\r\n        var dropDate = drop.controls['DropDate'].value;\r\n        if (dropDate != '' && dropDate != null) {\r\n            drop.controls['DropEndDate'].setValue(dropDate);\r\n            drop.controls['EndTime'].setValue(null);\r\n        }\r\n    }\r\n    setDropEndDate(drop: FormGroup, $event): void {\r\n        drop.controls['DropEndDate'].setValue($event);\r\n        drop.controls['EndTime'].setValue(null);\r\n        //  drop.controls['StartTime'].setValue(null);\r\n    }\r\n    public validateTerminal(drop, event, orderId): void {\r\n        if ((this.Terminals.length && !(this.Terminals.filter(e => e.Name === drop.controls['TerminalName'].value).length > 0)) || this.noTerminalFound) {\r\n            drop.controls['TerminalName'].patchValue('');\r\n        }\r\n    }\r\n\r\n    addProduct(model: DropDetailModel): void {\r\n        var _drops = this.Parent.get('Drops') as FormArray;\r\n        this.setUoM(UoM);\r\n        this.setCurrency(model.Currency);\r\n        _drops.push(this.getForm(model, [], model.UoM));\r\n        this.getSchedules(model.OrderId, 0);\r\n    }\r\n\r\n    public ValidateTime(time: any, index: any, controlName: any): void {\r\n        let timeRegex = new RegExp(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\\d):(?:[0-5]\\d) ?([AaPp][Mm])/);\r\n        if (timeRegex.test(time)) {\r\n        }\r\n        else {\r\n            this.DisplayInvalidTime(time, index, controlName);\r\n        }\r\n    }\r\n\r\n    private DisplayInvalidTime(time: any, index: any, controlName: any) {\r\n        var _drops = this.Parent.get('Drops') as FormArray;\r\n        let formControlName: string = controlName;\r\n        _drops.controls[index].get(formControlName).setValue(time);\r\n    }\r\n    removeProduct(model: any): void {\r\n        var removedProductIndex;\r\n        var _drops = this.Parent.get('Drops') as FormArray;\r\n        var _currentObj = this;\r\n        _drops.controls.forEach(function (control, idx) {\r\n            if (control.get('OrderId').value == model.OrderId) {\r\n                removedProductIndex = idx;\r\n                delete _currentObj.Schedules[model.OrderId];\r\n            }\r\n        });\r\n        if (removedProductIndex >= 0) {\r\n            _drops.removeAt(removedProductIndex);\r\n        }\r\n    }\r\n\r\n    onScheduleChange(event: any, orderId: number, productId: number, productName: string, drop: FormGroup): void {\r\n        var scheduleId = event.target.selectedOptions[0].value;\r\n        this.scheduleChangeEvent(orderId, scheduleId, drop);\r\n\r\n        if (scheduleId == undefined || scheduleId == null || scheduleId == \"null\")\r\n            return;\r\n\r\n        this.addressService.getBulkplantAddress(scheduleId, orderId)\r\n            .subscribe(data => {\r\n                if (data && data.IsAddressAvailable) {\r\n                    var bulkplantInfo = this.bulkPlantMapper(data, productId, productName);\r\n                    this.onBulkplantUpdated.emit(bulkplantInfo);\r\n                }\r\n            });\r\n    }\r\n\r\n    private scheduleChangeEvent(orderId: number, scheduleId: any, drop: FormGroup) {\r\n        var selectedSchedule = this.Schedules[orderId].find(t => t.Id == scheduleId);\r\n        let blendedScheduleId = selectedSchedule && selectedSchedule.Code ? selectedSchedule.Code : '';\r\n        let deliveryLevelPO = selectedSchedule && selectedSchedule.DeliveryLevelPO ? selectedSchedule.DeliveryLevelPO : '';\r\n        if (drop) {\r\n            \r\n            if (selectedSchedule) {\r\n                drop.controls['DeliveryLevelPO'].setValue(deliveryLevelPO);\r\n                \r\n            }\r\n            else {\r\n                drop.controls['DeliveryLevelPO'].setValue('');\r\n            }\r\n        }\r\n        this.OnScheduleReceived.emit({\r\n            ScheduleId: scheduleId,\r\n            OrderId: orderId,\r\n            BlendedScheduleId: blendedScheduleId\r\n        });\r\n    }\r\n\r\n    bulkPlantMapper(data: any, productId: number, productName: string): any {\r\n        data.Country.Code == 'US' || data.Country.Code == 'USA' ? data.Country.Code = 'USA' : data.Country.Code = 'CAN';\r\n        return {\r\n            ProductId: productId,\r\n            ProductName: productName,\r\n            BulkPlantId: data.SiteId,\r\n            BulkPlantName: data.SiteName,\r\n            Address: {\r\n                Address: data.Address,\r\n                City: data.City,\r\n                CountyName: data.CountyName,\r\n                State: {\r\n                    Id: data.State.Id,\r\n                    Code: data.State.Code\r\n                },\r\n                Country: {\r\n                    Id: data.Country.Id,\r\n                    Code: data.Country.Code\r\n                },\r\n                ZipCode: data.ZipCode,\r\n                Latitude: data.Latitude,\r\n                Longitude: data.Longitude\r\n            }\r\n        };\r\n    }\r\n\r\n    getSchedules(_orderId: number, _trackableScheduleId: number) {\r\n        if (this.Schedules['' + _orderId] == undefined) {\r\n            this.invoiceService.getSchedules(_orderId)\r\n                .subscribe(data => {\r\n                    this.Schedules['' + _orderId] = data;\r\n                    if (_trackableScheduleId && _trackableScheduleId > 0) {\r\n                        this.scheduleChangeEvent(_orderId, _trackableScheduleId, null);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    getUoMFromCountry(countryId: number) {\r\n        if (countryId == 2) {\r\n            return countryId;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n\r\n    }\r\n\r\n    setUoM(UoM: any): void {\r\n        //None =0;\r\n        //Gallons = 1,\r\n        //Litres = 2\r\n        if (UoM == 1) {\r\n            this.UoM = \"Gallons\";\r\n        }\r\n        else if (UoM == 2) {\r\n            this.UoM = \"Litres\";\r\n        }\r\n        //else if (UoM == 3) {\r\n        //    this.UoM = \"Barrels\";\r\n        //}\r\n        //else if (UoM == 4) {\r\n        //    this.UoM = \"MT\";\r\n        //}\r\n    }\r\n\r\n    setCurrency(Currency: any): void {\r\n        //None = 0,\r\n        //USD = 1,\r\n        //CAD = 2\r\n        if (Currency == 1) {\r\n            this.Currency = \"USD\";\r\n        }\r\n        else if (Currency == 2) {\r\n            this.Currency = \"CAD\";\r\n        }\r\n    }\r\n    setGravityValidatorForMFN(uom: any, dropFg: FormGroup) {\r\n        if (uom == UoM.MetricTons && dropFg != null && dropFg != undefined) {\r\n            if (dropFg.controls.ConversionFactor.value) {\r\n                this.OnUomChange('MT', dropFg);\r\n            } else {\r\n                this.OnUomChange(this.UoM, dropFg);\r\n            }\r\n            // dropFg.controls['Gravity'].setValidators([Validators.required, Validators.pattern(RegexPatterns.QuantityPattern)]);\r\n            //     dropFg.controls['Gravity'].updateValueAndValidity();\r\n        }\r\n    }\r\n    IsDisplayGravity(drop: any) {\r\n        if (drop != null && drop.UoM == UoM.MetricTons) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ValidateGravityAndConvertForMFN(drop: FormGroup, dropModel: any) {\r\n        if (dropModel != null && (dropModel.UoM == UoM.MetricTons || dropModel.UoM == UoM.Barrels)) {\r\n            if (dropModel.UoM == UoM.MetricTons) {\r\n                if (drop.get('Gravity').valid) {\r\n                    let inputGravity = drop.get('Gravity').value;\r\n                    let actualDropQty = drop.get('ActualDropQuantity').value;\r\n                    // serverside api to validate gravity \r\n                    if ((inputGravity != \"\" && inputGravity != null && inputGravity != undefined)\r\n                        && (actualDropQty != '' && actualDropQty != null && actualDropQty != undefined)) {\r\n                        let gravity = Number(inputGravity);\r\n                        let dropQty = Number(actualDropQty);\r\n                        if (!isNaN(gravity) && !isNaN(dropQty)) {\r\n                            if (dropQty > 0) {\r\n                                let conversionRequest = new MFNConversionRequestViewModel();\r\n                                conversionRequest.ConversionFactor = gravity;\r\n                                conversionRequest.DroppedGallons = dropQty;\r\n                                conversionRequest.JobCountryId = dropModel.JobCountryId;\r\n                                conversionRequest.UoM = UoM.MetricTons;\r\n                                this.invoiceService.ValidateGravityAndConvertForMFN(conversionRequest).subscribe((response: MFNConversionResponseViewModel) => {\r\n                                    if (response.IsValidGravity && response.ConvertedQty > 0 && response.UoM == UoM.MetricTons) {\r\n                                        drop.controls['Gravity'].setErrors(null);\r\n                                        drop.get('ConvertedQuantity').setValue(response.ConvertedQty.toFixed(2));\r\n                                    }\r\n                                    else if (!response.IsValidGravity) {\r\n                                        drop.controls['Gravity'].setErrors({ invalidGravity: true });\r\n                                        drop.get('Gravity').markAsTouched();\r\n                                        drop.get('ConvertedQuantity').setValue('');\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                            else { drop.get('ConvertedQuantity').setValue(''); }\r\n                        } else { drop.get('ConvertedQuantity').setValue(''); }\r\n                    } else { drop.get('ConvertedQuantity').setValue(''); }\r\n                } else {\r\n                    drop.get('ConvertedQuantity').setValue('');\r\n                    drop.get('Gravity').markAsTouched();\r\n                }\r\n            }\r\n            else if (dropModel.UoM == UoM.Barrels) {\r\n                let actualDropQty = Number(drop.get('ActualDropQuantity').value);\r\n                if (!isNaN(actualDropQty)) {\r\n                    if (actualDropQty > 0) {\r\n                        let conversionRequest = new MFNConversionRequestViewModel();\r\n                        conversionRequest.ConversionFactor = 42;\r\n                        conversionRequest.DroppedGallons = actualDropQty;\r\n                        conversionRequest.JobCountryId = dropModel.JobCountryId;\r\n                        conversionRequest.UoM = UoM.Barrels;\r\n                        this.invoiceService.ValidateGravityAndConvertForMFN(conversionRequest).subscribe((response: MFNConversionResponseViewModel) => {\r\n                            if (response.ConvertedQty > 0 && response.UoM == UoM.Barrels) {\r\n                                drop.get('ConvertedQuantity').setValue(response.ConvertedQty.toFixed(2));\r\n                            }\r\n                            else { drop.get('ConvertedQuantity').setValue(''); }\r\n\r\n                        });\r\n                    }\r\n                    else { drop.get('ConvertedQuantity').setValue(''); }\r\n\r\n                } else { drop.get('ConvertedQuantity').setValue(''); }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //gets called after bol or lift ticket are added\r\n    getBolLiftQuantities() {\r\n        this.calculateQuantities();\r\n        this.assetListComp.validateSumOfAssetQuantity();\r\n    }\r\n\r\n\r\n    calculateQuantities() {\r\n        var newProds = [];\r\n        var boldetails = this.Parent.get('BolDetails').value;\r\n        var ticketdetails = this.Parent.get('TicketDetails').value;\r\n        if (boldetails) {\r\n            boldetails.map(item => item.Products.map(prod => newProds.push(prod)));\r\n        }\r\n        if (ticketdetails) {\r\n            ticketdetails.map(item => item.Products.map(prod => newProds.push(prod)));\r\n        }\r\n        var _drops = this.Parent.get('Drops') as FormArray;\r\n        this.quantities.length = 0; //Empty the array \r\n        var products = [];\r\n        for (var i = 0; i < newProds.length; i++) {\r\n            var newprod = newProds[i];\r\n            products.push({\r\n                ProductId: newprod.ProductId,\r\n                Quantity: newprod.DeliveredQuantity\r\n            });\r\n        }\r\n        var groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n        const groupedProducts = groupBy(products, 'ProductId');\r\n        // collection returned by groupby() is [key :value] as array of [{key: prodId value:quantity}]\r\n        for (const productId in groupedProducts) {\r\n            var totaldroppedquantity = [];\r\n            var key = productId;\r\n            var values = [];\r\n            values = groupedProducts[key];\r\n            values.forEach(function (value) {\r\n                totaldroppedquantity.push(parseFloat(value.Quantity));\r\n            });\r\n\r\n            const Totalsumperproduct = totaldroppedquantity.reduce((a, b) => a + b, 0);\r\n\r\n            this.quantities.push({\r\n                ProductId: parseInt(key, 10),\r\n                TotalDroppedQuantity: parseFloat(Number(Totalsumperproduct).toFixed(6))\r\n            });\r\n        }\r\n        var currObj = this;\r\n        this.quantities.forEach(function (x) {\r\n            var _group = _drops.controls.find(function (y) { return y.get(\"FuelTypeId\").value == x.ProductId; });\r\n            if (_group != undefined && _group != null) {\r\n                if (!isNaN(x.TotalDroppedQuantity)) {\r\n                    _group.get('ActualDropQuantity').setValue(x.TotalDroppedQuantity);\r\n                    currObj.actualDropQty.nativeElement.dispatchEvent(new Event('input'));\r\n                }\r\n            }\r\n        });\r\n        //Implies no bol details are added so reset the actualdropquantity form control\r\n\r\n        if (this.quantities.length == 0) {\r\n            var _drops = this.Parent.get('Drops') as FormArray;\r\n            var _dropQuantityFormControls = _drops.controls;\r\n\r\n            if (_dropQuantityFormControls != undefined && _dropQuantityFormControls != null) {\r\n                _dropQuantityFormControls.forEach(function (formControl) {\r\n                    formControl.get('ActualDropQuantity').reset();\r\n                    currObj.actualDropQty.nativeElement.dispatchEvent(new Event('input'));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    IsBolOrTicketExistForProduct(ProductId: number) {\r\n        if (this.Parent.get('BolDetails').value.some(b => b.Products.some(p => p.ProductId == ProductId && p.DeliveredQuantity > 0)))\r\n            return true;\r\n        else if (this.Parent.get('TicketDetails').value.some(b => b.Products.some(p => p.ProductId == ProductId && p.DeliveredQuantity > 0)))\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    // called from child compo - asset-list\r\n    // updateConvertedQty(updatedQty: any) {\r\n    //     if (updatedQty != null && updatedQty != undefined && updatedQty != '') {\r\n    //         this.actualDropQty.nativeElement.dispatchEvent(new Event('input'));\r\n    //     }\r\n    // }\r\n\r\n    public actualDropQuantityChanged() {\r\n        this.assetListComp.validateSumOfAssetQuantity();\r\n    }\r\n\r\n    public ValidateAssetTime(dropForm: FormGroup) {\r\n        this.assetListComp.ValidateAssetTime(null, 'productDetail', dropForm);\r\n    }\r\n\r\n    public toggleAddBdrButton(dropIndex: number, isAdded: boolean) {\r\n        if (dropIndex != null && dropIndex != undefined && dropIndex >= 0) {\r\n            this.Drops[dropIndex].IsBdrDetailsAdded = isAdded;\r\n        }\r\n\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n\r\n    isInvalid(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).invalid &&\r\n            (drop.get(name).dirty || drop.get(name).touched);\r\n    }\r\n\r\n    isRequired(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).errors.required;\r\n    }\r\n\r\n    isMin(drop: FormGroup, name: string): boolean {\r\n        return drop.get(name).errors.min;\r\n    }\r\n    //isPattern(drop: FormGroup, name: string): boolean {\r\n    //    return drop.get(name).errors.pattern;\r\n    //}\r\n\r\n    public OnUomChange(uom: string, drop: FormGroup) {\r\n        if (uom == 'MT') {\r\n            drop.controls['ConversionFactor'].setValidators([Validators.required, Validators.pattern(RegExConstants.Quantity)]);\r\n            drop.controls['ConversionFactor'].updateValueAndValidity();\r\n            drop.controls['Gravity'].clearValidators();\r\n            drop.controls['Gravity'].updateValueAndValidity();\r\n            drop.get('ConvertedQuantity').setValue('');\r\n            if (!drop.controls['ConversionFactor'].value)\r\n                drop.get('ConversionFactor').setValue(318);\r\n            drop.get('Gravity').setValue('');\r\n            drop.controls.Gravity.disable();\r\n            drop.controls.ConversionFactor.enable();\r\n        }\r\n        else {\r\n            drop.controls['Gravity'].setValidators([Validators.required, Validators.pattern(RegExConstants.Quantity)]);\r\n            drop.controls['Gravity'].updateValueAndValidity();\r\n            drop.controls['ConversionFactor'].clearValidators();\r\n            drop.controls['ConversionFactor'].updateValueAndValidity();\r\n            drop.get('ConversionFactor').setValue('');\r\n            drop.controls.ConversionFactor.disable();\r\n            drop.controls.Gravity.enable();\r\n\r\n            this.calculateQuantities()\r\n        }\r\n    }\r\n}\r\n","<div class=\"well shadow-b pr\" [formGroup]=\"Parent\">\r\n    <div class=\"pa bg-white z-index5 loading-wrapper left0 top0\" *ngIf=\"IsLoading\">\r\n        <span class='spinner-dashboard pa'></span>\r\n    </div>\r\n\r\n    <div formArrayName=\"Drops\">\r\n        <ng-container *ngFor=\"let drop of Parent.get('Drops')['controls']; let i = index; let isLast = last\">\r\n            <div [formGroupName]=\"i\">\r\n                <div class=\"row mb10\">\r\n                    <div class=\"col-sm-8\">\r\n                        <div class=\"dib pull-left ordernumber text-center pt5 f-bold mt3\">{{i + 1}}</div>\r\n                        <div class=\"pull-left ml10\">\r\n                            <i class=\"fas fa-tint mr5\"></i>\r\n                            <strong>{{drop.get('FuelTypeName').value}}</strong>\r\n                            <div class=\"mt3\">\r\n                                <i class=\"far fa-file-alt mr5\"></i>\r\n                                <span class=\"fs10\">{{drop.get('PoNumber').value}}</span>\r\n                                <input type=\"hidden\" #OrderId formControlName=\"OrderId\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt15\">\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label>Delivered</label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" class=\"form-control\" #actualDropQty formControlName=\"ActualDropQuantity\" (input)=\"ValidateGravityAndConvertForMFN(drop,Drops[i]);actualDropQuantityChanged()\"\r\n                                       [readonly]=\"drop && drop.get('ActualQuantityUOM').value != 'MT' && IsBolOrTicketExistForProduct(drop.get('FuelTypeId').value)\" />\r\n                                <div class=\"input-group-addon fs12\" *ngIf=\"!IsDisplayGravity(Drops[i])\"> {{UoM}}</div>\r\n                                <div *ngIf=\"IsDisplayGravity(Drops[i])\">\r\n                                    <select name=\"UoM\" formControlName=\"ActualQuantityUOM\" class=\"input-group-addon fs12\" (change)=\"OnUomChange($event.target.value,drop)\">\r\n                                        <option [value]=\"UoM\">{{UoM}}</option>\r\n                                        <option [value]=\"'MT'\">MT</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <span *ngIf=\"isInvalid(drop, 'ActualDropQuantity')\" class=\"color-maroon\">\r\n                                <span *ngIf=\"isRequired(drop, 'ActualDropQuantity') || isMin(drop, 'ActualDropQuantity')\">\r\n                                    Required.\r\n                                </span>\r\n                                <span *ngIf=\"!isRequired(drop, 'ActualDropQuantity') && isInvalid(drop, 'ActualDropQuantity')\">\r\n                                    Invalid.\r\n                                </span>\r\n                            </span>\r\n                            <span *ngIf=\"drop.get('ConvertedQuantity').value != '' && drop.get('ConvertedQuantity').value != null\">\r\n                                <b> {{drop.get('ConvertedQuantity').value}} <span *ngIf=\"Drops !=null && Drops[i].UoM == '4'\">MT</span> <span *ngIf=\"Drops !=null && Drops[i].UoM == '3'\">B</span></b>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Drop Date</label>\r\n                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"DropDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDropDate\" (onDateChange)=\"drop.get('DropDate').setValue($event);setPrice(drop, $event);setEndDate(drop, $event);\" />\r\n                            <!--<p-calendar formControlName=\"DropDate\" dateFormat=\"mm/dd/yy\" [defaultDate]=\"DefaultDate\" [minDate]=\"MinDropDate\"></p-calendar>-->\r\n                            <span *ngIf=\"isInvalid(drop, 'DropDate')\" class=\"color-maroon\">\r\n                                <span *ngIf=\"isRequired(drop, 'DropDate')\">\r\n                                    Required.\r\n                                </span>\r\n                                <!--<span *ngIf=\"isPattern(drop, 'DropDate')\">\r\n                                    Invalid.\r\n                                </span>-->\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Start Time</label>\r\n                            <input [timeSmallerThanOrEqualTo]=\"drop.get('EndTime')\" [startDate]=\"drop.get('DropDate')\" [endDate]=\"drop.get('DropEndDate')\" type=\"text\" class=\"form-control timepicker\" formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm:ss A'\" (onTimeChange)=\"drop.get('StartTime').setValue($event)\" (blur)=\"ValidateTime(drop.get('StartTime').value,i,'StartTime');ValidateAssetTime(drop)\" />\r\n                            <!--<p-calendar formControlName=\"StartTime\" [timeOnly]=\"true\" hourFormat=\"12\"></p-calendar>-->\r\n                            <span *ngIf=\"isInvalid(drop, 'StartTime')\" class=\"color-maroon\">\r\n                                <span *ngIf=\"isRequired(drop, 'StartTime')\">\r\n                                    Required.\r\n                                </span>\r\n                                <span *ngIf=\"drop.get('StartTime').errors.timeSmallerThanOrEqualTo\">\r\n                                    Invalid.\r\n                                </span>\r\n                                <span *ngIf=\"drop.get('StartTime').errors.pattern\">\r\n                                    Invalid Time Format\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <label>Drop End Date</label>\r\n                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"DropEndDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setDropEndDate(drop,$event)\" />\r\n                            <span *ngIf=\"isInvalid(drop, 'DropEndDate')\" class=\"color-maroon\">\r\n                                Invalid.\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-sm-2\">\r\n                        <label>End Time</label>\r\n                        <input [timeGreaterThanOrEqualTo]=\"drop.get('StartTime')\" [startDate]=\"drop.get('DropDate')\" [endDate]=\"drop.get('DropEndDate')\" type=\"text\" class=\"form-control timepicker\" formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm:ss A'\" (onTimeChange)=\"drop.get('EndTime').setValue($event)\" (blur)=\"ValidateTime(drop.get('EndTime').value,i,'EndTime'); ValidateAssetTime(drop)\" />\r\n                        <!--<p-calendar formControlName=\"EndTime\" [timeOnly]=\"true\" hourFormat=\"12\"></p-calendar>-->\r\n                        <span *ngIf=\"isInvalid(drop, 'EndTime')\" class=\"color-maroon\">\r\n                            <span *ngIf=\"isRequired(drop, 'EndTime')\">\r\n                                Required.\r\n                            </span>\r\n                            <span *ngIf=\"drop.get('EndTime').errors.timeGreaterThanOrEqualTo\">\r\n                                Invalid.\r\n                            </span>\r\n                            <span *ngIf=\"drop.get('EndTime').errors.pattern\">\r\n                                Invalid Time Format\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Delivery Schedule</label>\r\n                        <select formControlName=\"TrackableScheduleId\" class=\"form-control\" [attr.readonly]=\"drop.get('BlendedScheduleId').value && drop.get('BlendedScheduleId').value != ''\"\r\n                                (change)=\"onScheduleChange($event, drop.get('OrderId').value, drop.get('FuelTypeId').value, drop.get('FuelTypeName').value,drop)\">\r\n                            <option [value]=\"null\">Select Schedule</option>\r\n                            <option *ngFor=\"let ft of Schedules[drop.get('OrderId').value] || []\" [value]=\"ft.Id\">{{ft.Name}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-sm-2 form-group\" *ngIf=\" drop.get('TrackableScheduleId').value>0\">\r\n                        <label>Delivery-Level PO#</label>\r\n                        <div class=\"input-group\">\r\n                            <input type=\"text\"  class=\"form-control\" formControlName=\"DeliveryLevelPO\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 form-group\" *ngIf=\"!Drops[i]?.IsFreightOnlyOrder && !Drops[i]?.IsSupressOrderPricing\">\r\n                        <label>Supplier Allowance</label>\r\n                        <div class=\"input-group\">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"Allowance\" />\r\n                            <div class=\"input-group-addon fs12\">{{Currency}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 form-group\" *ngIf=\"IsDisplayGravity(Drops[i])\" [ngClass]=\"{'hidden': drop.controls.Gravity.disabled}\">\r\n                        <label>API Gravity</label>\r\n                        <div *ngIf=\"IsConvertingGravity\" class=\"pa bg-white z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"Gravity\" (input)=\"ValidateGravityAndConvertForMFN(drop,Drops[i])\" />\r\n                        <span class=\"color-maroon\" *ngIf=\"drop.get('Gravity').errors && (drop.get('Gravity').touched ||\r\n                                  drop.get('Gravity').dirty)\">\r\n                            <span *ngIf=\"drop.get('Gravity').errors.invalidGravity\">\r\n                                Invalid API Gravity\r\n                            </span>\r\n                        </span>\r\n                        <span class=\"color-maroon\" *ngIf=\"drop.get('Gravity').errors && (drop.get('Gravity').touched ||\r\n                                  drop.get('Gravity').dirty)\">\r\n                            <span *ngIf=\"drop.get('Gravity').errors.required\">\r\n                                Required.\r\n                            </span>\r\n                            <span *ngIf=\"drop.get('Gravity').errors.pattern\">\r\n                                Invalid.\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-3 form-group\" *ngIf=\"IsDisplayGravity(Drops[i])\" [ngClass]=\"{'hidden': drop.controls.ConversionFactor.disabled}\">\r\n                        <label>Conversion Factor <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"#gals which 1M/T\" data-original-title=\"#gals which 1M/T\"></i></label>\r\n                        <div *ngIf=\"IsConvertingGravity\" class=\"pa bg-white z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"ConversionFactor\" />\r\n                        <span class=\"color-maroon\" *ngIf=\"drop.get('ConversionFactor').errors && (drop.get('ConversionFactor').touched ||\r\n                                  drop.get('ConversionFactor').dirty)\">\r\n                            <!-- <span *ngIf=\"drop.get('Gravity').errors.invalidGravity\">\r\n                                Invalid API Gravity\r\n                            </span> -->\r\n                        </span>\r\n                        <span class=\"color-maroon\" *ngIf=\"drop.get('ConversionFactor').errors && (drop.get('ConversionFactor').touched ||\r\n                                  drop.get('ConversionFactor').dirty)\">\r\n                            <span *ngIf=\"drop.get('ConversionFactor').errors.required\">\r\n                                Required.\r\n                            </span>\r\n                            <span *ngIf=\"drop.get('ConversionFactor').errors.pattern\">\r\n                                Invalid.\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"col-sm-3\" *ngIf=\"IsMarineLocation\">\r\n                        <label>&nbsp;</label>\r\n                        <div>\r\n                            <button type=\"button\" id=\"btnBdrDetailPopup\" class=\"btn btn-default\" (click)=\"bdrDetail.toggleOpen(true, null);\" [disabled]=\"Drops[i]?.IsBdrDetailsAdded\"><i class=\"fas fa-plus mr5\"></i>Add BDN Details</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <app-fuel-surcharge [Parent]=\"drop\" [Model]=\"Drops[i]?.FuelSurchargeFreightFee\"\r\n                                    [SurchargeEnabled]=\"Drops[i].FuelSurchargeFreightFee?.IsSurchargeApplicable\"></app-fuel-surcharge>\r\n\r\n                <!--(OnBdrDeleted)=\"\" (onBdrEdit)=\"\"-->\r\n                <app-show-bdr-detail #showBdrDetail [Parent]=\"drop\" [BdrDetails]=\"drop.get('BdrDetails')\" [BdrModel]=\"Drops[i]?.BdrDetails\" (OnBDREdit)=\"bdrDetail.toggleOpen(true,$event)\" (OnBDRDelete)=\"toggleAddBdrButton(i,false)\"></app-show-bdr-detail>\r\n                <app-bdr-detail #bdrDetail\r\n                                (onBdrDetailsAdded)=\"showBdrDetail.bdrDetailAdded($event);toggleAddBdrButton(i,true)\"\r\n                                (onBdrDetailsUpdated)=\"showBdrDetail.bdrDetailUpdated($event);toggleAddBdrButton(i,true)\"></app-bdr-detail>\r\n\r\n                <input type=\"hidden\" #IsAssetTracked formControlName=\"IsAssetTracked\" />\r\n                <div *ngIf=\"IsAssetTracked.value\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <label for=\"Asset\">Asset/Tank</label>\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedAssets\" [(ngModel)]=\"SelectedAssets[OrderId.value]\" [placeholder]=\"'Select Assets/Tanks'\" [settings]=\"settings\" [data]=\"Drops[i].Assets\"\r\n                                                     (onSelect)=\"assetList.showSelectedAsset($event)\" (onDeSelect)=\"assetList.removeUnselected($event)\"\r\n                                                     (onSelectAll)=\"assetList.showSelectedAssets(Drops[i].Assets)\" (onDeSelectAll)=\"assetList.removeAllUnselected($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-4\" *ngIf=\"Parent.get('BolDetails')?.length==0 && drop.get('TerminalId').value>0 && drop.get('JobCountryId').value != 4\">\r\n                            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingTerminals\">\r\n                                <span class='spinner-dashboard pa'></span>\r\n                            </div>\r\n                            <label for=\"Terminal\">Terminal</label>\r\n                            <input type=\"hidden\" formControlName=\"TerminalId\" />\r\n                            <input type=\"text\" formControlName=\"TerminalName\" class=\"form-control\" (input)=\"onTerminalSearched($event,OrderId.value)\" (blur)=\"validateTerminal(drop,$event,OrderId.value)\" placeholder=\"Terminal Name\" />\r\n                            <ul class=\"auto-select border-dash\">\r\n                                <li class=\"form-text\" *ngIf=\"minCharRequired\"><small>Enter minimum 3 characters to search.</small></li>\r\n                                <li class=\"form-text\" *ngIf=\"searchError\"><small>Something went wrong.</small></li>\r\n                                <li class=\"form-text\" *ngIf=\"_loadingTerminals\"><small>Loading...</small></li>\r\n                                <li class=\"form-text\" *ngIf=\"noTerminalFound && !minCharRequired && !searchError && !_loadingTerminals \"><small>No terminal found.</small></li>\r\n                                <li *ngFor=\"let terminal of Terminals;\" (click)=\"setTerminalName(drop, terminal)\"\r\n                                    [attr.selected]=\"terminal.Name==drop.get('TerminalName').value\">{{terminal.Name}}</li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-sm-4\" *ngIf=\"Parent.get('BolDetails')?.length==0 && drop.get('TerminalId').value>0 && drop.get('JobCountryId').value != 4\">\r\n                            <label for=\"TerminalPrice\">Terminal Price</label>\r\n                            <label class=\"db mt5\">{{drop.get('TerminalPrice').value}} {{Currency}}</label>\r\n                        </div>\r\n                    </div>\r\n                    <app-asset-list #assetList [Parent]=\"drop\" [Drops]=\"Drops\" [UoM]=\"UoM\" [IsSelectedMT]=\"drop.controls.ConversionFactor.enabled && drop.controls.Gravity.disabled\" [SelectedAssets]=\"SelectedAssets[OrderId.value]\" ></app-asset-list>\r\n\r\n                    <div class=\"row form-group\">\r\n                        <div class=\"col-sm-12 text-right\">\r\n                            <span *ngIf=\"drop.get('IsDipDataRequired').value==true && drop.get('Assets')['controls'].length >0\">\r\n                                <button type=\"button\" class=\"btn btn-default mt10\" (click)=\"assetList.CalculateDropQuantitiesFromPrePostDip();\"> Calculate </button>\r\n                            </span>\r\n                            <button type=\"button\" class=\"btn btn-default mt10\" (click)=\"assetList.addNewAsset();\"><i class=\"fas fa-truck mr5\"></i> New Asset</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border-b mt15 mb15\" *ngIf=\"!isLast\"></div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BlobServiceClient, AnonymousCredential, BlockBlobClient } from '@azure/storage-blob';\r\nimport * as moment from 'moment';\r\nimport { InvoiceDetailModel, ImageModel, BolDetail } from '../models/DropDetail';\r\nimport { FileInfo } from 'src/app/imageupload/imageupload.component';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ImageserviceService {\r\n\r\n    constructor() { }\r\n    public content: any;\r\n    public imageurl: string;\r\n\r\n\r\n\r\n    public uploadImageToBlob(sasToken: string, files: FileInfo[], image: any, fileType: string, prefixId: string, entireInvoiceModel: InvoiceDetailModel, containerName: string) :Promise<any> {\r\n        var fileUrls = \"\";\r\n        const anonymouscredentials = new AnonymousCredential();\r\n        var fileNames = [];\r\n        var promises = [];\r\n        for (var i = 0; i < files.length; i++) {\r\n            \r\n            var file = files[i];\r\n            if (file.IsNewFile) {\r\n                var ftype=fileType;\r\n                var fileName = fileType + \"_\" + prefixId + \"_\" + this.GenerateRandomNumber(10000) + moment(moment.now()).format(\"MMDDYYhhmmss.\") + file.Extension;\r\n                file.Name = fileName;\r\n                fileNames.push(fileName)\r\n                // Container name is also going as folder inside container\r\n               // file.url =  fileName;\r\n                file.url = containerName + \"/\" + fileName;\r\n                if (fileUrls == \"\") {\r\n                    fileUrls = file.url;\r\n                }\r\n                else\r\n                    fileUrls = fileUrls + \"||\" + file.url;\r\n            }\r\n            else {\r\n                if (fileUrls == \"\") {\r\n                    fileUrls = file.FilePath;\r\n                }\r\n                else {\r\n                    fileUrls = fileUrls + file.FilePath;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (fileUrls != \"\") {\r\n            if (fileType == \"InvFile\") {\r\n                entireInvoiceModel.InvoiceImage = new ImageModel();\r\n                entireInvoiceModel.InvoiceImage.FilePath = fileUrls;\r\n            }\r\n            if (fileType == \"additionalFile\") {\r\n                entireInvoiceModel.AdditionalImage = new ImageModel();\r\n                entireInvoiceModel.AdditionalImage.FilePath = fileUrls;\r\n            }\r\n            if (fileType == \"bolFile\") {\r\n                var bolDetail = entireInvoiceModel.BolDetails.find(x => x.BolNumber == prefixId);\r\n                if (bolDetail != undefined) {\r\n                    bolDetail.Images = new ImageModel();\r\n                    bolDetail.Images.FilePath = fileUrls;\r\n                }\r\n            }\r\n\r\n            if (fileType == \"liftFile\") {\r\n                var liftDetail = entireInvoiceModel.TicketDetails.find(x => x.LiftTicketNumber == prefixId);\r\n                if (liftDetail != undefined) {\r\n                    liftDetail.Images = new ImageModel();\r\n                    liftDetail.Images.FilePath = fileUrls;\r\n                }\r\n            }\r\n\r\n            if (fileType == \"signatureFile\") {\r\n                entireInvoiceModel.SignatureImage = new ImageModel();\r\n                entireInvoiceModel.SignatureImage.FilePath = fileUrls;\r\n            }\r\n            if (fileType == \"TaxAffidavit\") {\r\n                entireInvoiceModel.TaxAffidavitImage = new ImageModel();\r\n                entireInvoiceModel.TaxAffidavitImage.FilePath = fileUrls;\r\n            }\r\n         \r\n            if (fileType == \"BDNImage\") {\r\n                entireInvoiceModel.BDNImage = new ImageModel();\r\n                entireInvoiceModel.BDNImage.FilePath = fileUrls;\r\n            }\r\n\r\n            if (fileType == \"CoastGuardInspection\") {\r\n                entireInvoiceModel.CoastGuardInspectionImage = new ImageModel();\r\n                entireInvoiceModel.CoastGuardInspectionImage.FilePath = fileUrls;\r\n            }\r\n            if (fileType == \"InspectionRequestVoucher\") {\r\n                entireInvoiceModel.InspectionRequestVoucherImage = new ImageModel();\r\n                entireInvoiceModel.InspectionRequestVoucherImage.FilePath = fileUrls;\r\n            }\r\n        }\r\n\r\n        files.forEach(f => {\r\n\r\n            if (f.Image != undefined) {\r\n                const blobserviceclient = new BlobServiceClient(\r\n                    sasToken, anonymouscredentials\r\n                );\r\n\r\n                const containerClient = blobserviceclient.getContainerClient(containerName);\r\n                const blockBlobClient = containerClient.getBlockBlobClient(f.Name);\r\n\r\n                // Split the url string to get img src \r\n                const uploadBlobResponse = blockBlobClient.upload(f.Image, f.Image.size);\r\n                promises.push(uploadBlobResponse);\r\n            }\r\n        });\r\n\r\n         return Promise.all(promises);\r\n        // return this.imageurl;\r\n    }\r\n\r\n\r\n    GenerateRandomNumber(maxNumber: number) {\r\n        return Math.floor((Math.random() * maxNumber) + 1);\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { OtherProductTaxModel } from '../models/DropDetail';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { InvoiceService } from '../services/invoice.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-other-product-taxes',\r\n    templateUrl: './other-product-taxes.component.html',\r\n    styleUrls: ['./other-product-taxes.component.css']\r\n})\r\nexport class OtherProductTaxesComponent implements OnInit, OnChanges {\r\n\r\n    @Input() Parent: FormGroup;\r\n    @Input() Taxes: OtherProductTaxModel[];\r\n    public TaxPricingTypes: DropdownItem[];\r\n    public OrderId: number;\r\n    @Input() Currency: any;\r\n\r\n    public DisplayCurrency: any;\r\n\r\n    constructor(private fb: FormBuilder, private invoiceService: InvoiceService, private route: ActivatedRoute) {\r\n        this.Taxes = [];\r\n        this.TaxPricingTypes = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);\r\n        this.Parent.addControl('OtherProductTaxes', this.fb.array([]));\r\n\r\n        this.invoiceService.getTaxePricingTypes(this.OrderId).subscribe(data => {\r\n            this.TaxPricingTypes = data as DropdownItem[];\r\n        });\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.Taxes && change.Taxes.currentValue != null) {\r\n            var currValues = change.Taxes.currentValue as OtherProductTaxModel[];\r\n            var prevValues = change.Taxes.previousValue as OtherProductTaxModel[];\r\n            var newTaxes = prevValues == undefined || prevValues == null ? currValues :\r\n                currValues.filter(item => prevValues.indexOf(item) < 0);\r\n            newTaxes.forEach((x: OtherProductTaxModel) => {\r\n                this.addTax(x);\r\n            });\r\n        }\r\n        if (change.Currency && change.Currency.currentValue) {\r\n            var currency = change.Currency.currentValue;\r\n            this.DisplayCurrency = currency;\r\n        }\r\n    }\r\n\r\n    getForm(model: OtherProductTaxModel): FormGroup {\r\n        var group = this.fb.group({\r\n            OrderId: this.fb.control(model.OrderId),\r\n            TaxId: this.fb.control(model.TaxId),\r\n            TaxPricingTypeId: this.fb.control(model.TaxPricingTypeId, [Validators.required]),\r\n            TaxAmountSymbol: this.fb.control(\"\"),\r\n            TaxDescription: this.fb.control(model.TaxDescription, [Validators.required]),\r\n            TaxAmount: this.fb.control(model.TaxAmount, [Validators.required, Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)])\r\n        });\r\n        return group;\r\n    }\r\n\r\n    addTax(taxObj: OtherProductTaxModel): void {\r\n        if (taxObj == null) {\r\n            taxObj = new OtherProductTaxModel();\r\n        }\r\n        var taxGroup = this.getForm(taxObj);\r\n        var taxArray = this.Parent.get('OtherProductTaxes') as FormArray;\r\n        if (taxArray == null || taxArray == undefined) {\r\n            this.Parent.addControl('OtherProductTaxes', this.fb.array([]));\r\n            taxArray = this.Parent.get('OtherProductTaxes') as FormArray;\r\n        }\r\n        taxArray.push(taxGroup);\r\n    }\r\n\r\n    removeTax(i: number) {\r\n        var taxArray = this.Parent.get('OtherProductTaxes') as FormArray;\r\n        taxArray.removeAt(i);\r\n    }\r\n\r\n    removeOrderTaxes(_orderId: number): void {\r\n        var taxArray = this.Parent.get('OtherProductTaxes') as FormArray;\r\n        var removedTaxIndexes = [];\r\n        taxArray.controls.forEach(function (elem: FormGroup, idx: number) {\r\n            if (elem.get('OrderId').value == _orderId) {\r\n                removedTaxIndexes.push(idx);\r\n            }\r\n        });\r\n        removedTaxIndexes.forEach(function (index: number) {\r\n            taxArray.removeAt(index);\r\n        });\r\n    }\r\n\r\n    isInvalid(tax: FormGroup, name: string): boolean {\r\n        var result = tax.get(name).invalid\r\n            &&\r\n            (\r\n                tax.get(name).dirty\r\n                ||\r\n                tax.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(tax: FormGroup, name: string): boolean {\r\n        return tax.get(name).errors.required;\r\n    }\r\n\r\n    isPattern(tax: FormGroup, name: string): boolean {\r\n        return tax.get(name).errors.pattern;\r\n    }\r\n\r\n    onTaxTypeSelect(event, tax: FormGroup): void {\r\n        let currentObj = this;\r\n        if (event.target.value > 0) {\r\n            let selectedTaxType = currentObj.TaxPricingTypes[event.target.value - 1].Name;\r\n            let displaySymbol = selectedTaxType[0];\r\n            if (displaySymbol === '$') {\r\n                tax.controls['TaxAmountSymbol'].setValue(this.DisplayCurrency);\r\n            }\r\n            else\r\n            {\r\n                tax.controls['TaxAmountSymbol'].setValue(displaySymbol);\r\n            }\r\n        }\r\n        else {\r\n            tax.controls['TaxAmountSymbol'].setValue(\"\");\r\n        }\r\n    }\r\n}\r\n","<div [formGroup]=\"Parent\" class=\"well box-shadow\">\r\n    <div formArrayName=\"OtherProductTaxes\">\r\n        <h4>Taxes</h4>\r\n        <div class=\"form-group\" *ngFor=\"let tax of Parent.get('OtherProductTaxes')['controls']; let i = index; let isFirst = first;\">\r\n            <div [formGroupName]=\"i\">\r\n                <div class=\"row\" *ngIf=\"isFirst\">\r\n                    <div class=\"col-sm-3\">\r\n                        <label>Type<span class=\"color-maroon\">*</span></label>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <label>Tax Amount<span class=\"color-maroon\">*</span></label>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <label>Description<span class=\"color-maroon\">*</span></label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3\">\r\n                        <input type=\"hidden\" formControlName=\"OrderId\" />\r\n                        <input type=\"hidden\" formControlName=\"TaxId\" />\r\n                        <select class=\"form-control\" formControlName=\"TaxPricingTypeId\" (change)=\"onTaxTypeSelect($event,tax)\">\r\n                            <option [value]=\"null\">Select Tax Type</option>\r\n                            <option *ngFor=\"let taxtype of TaxPricingTypes;\" [value]=\"taxtype.Id\">{{taxtype.Name}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"isInvalid(tax, 'TaxPricingTypeId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired(tax, 'TaxPricingTypeId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"input-group\">\r\n                            <input type=\"text\" formControlName=\"TaxAmount\" class=\"form-control\" placeholder=\"Tax Amount\" />\r\n                            <!--<div class=\"input-group-addon fs12\">{{DisplayCurrency}}</div>-->\r\n                            <div *ngIf=\"tax.get('TaxAmountSymbol').value\" class=\"input-group-addon fs12\">{{tax.get('TaxAmountSymbol').value}}</div>\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid(tax, 'TaxAmount')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired(tax, 'TaxAmount')\">\r\n                                Required.\r\n                            </div>\r\n                            <div *ngIf=\"isPattern(tax, 'TaxAmount')\">\r\n                                Invalid.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <input type=\"text\" formControlName=\"TaxDescription\" class=\"form-control\" placeholder=\"Description\" />\r\n                        <div *ngIf=\"isInvalid(tax, 'TaxDescription')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired(tax, 'TaxDescription')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <a class=\"fa fa-trash-alt color-maroon mt10\" (click)=\"removeTax(i)\"></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <a (click)=\"addTax(null)\"><i class=\"fa fa-plus-circle\"></i> Add Tax</a>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, forwardRef, Input, SimpleChanges } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AddressModel } from '../models/DropDetail';\r\nimport { DropdownItem, StatelistService } from 'src/app/statelist.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { RegExConstants } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-various-drop-location',\r\n    templateUrl: './various-drop-location.component.html',\r\n    styleUrls: ['./various-drop-location.component.css'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => VariousDropLocationComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class VariousDropLocationComponent implements OnInit {\r\n\r\n    public FuelDropLocation: FormGroup;\r\n\r\n    //public DropLocationData: AddressModel;\r\n\r\n    @Input() public IsVariousOrigin: boolean;\r\n    public IsAddressAvailable: boolean = false;\r\n    public StateList: DropdownItem[];\r\n    public CountryList: DropdownItem[];\r\n    public _loadingAddress: boolean;\r\n\r\n    constructor(private fb: FormBuilder, private stateService: StatelistService, private addresService: AddressService) {\r\n        this.StateList = [];\r\n        this.CountryList = [];\r\n        this.stateService.getStates().subscribe(data => this.StateList = data);\r\n        this.stateService.getCountries().subscribe(data => this.CountryList = data);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.FuelDropLocation = this.buildAddress(new AddressModel());\r\n        //this.registerOnChange((data: AddressModel) => {\r\n        //    this.DropLocationData = data;\r\n        //    if (this.IsVariousOrigin) {\r\n        //        this.DropLocationData.Address = null;\r\n        //        this.DropLocationData.City = null;\r\n        //        this.DropLocationData.ZipCode = null;\r\n        //    }\r\n        //});\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsVariousOrigin) {\r\n            this.IsVariousOrigin = change.IsVariousOrigin.currentValue || false;\r\n        }\r\n    }\r\n\r\n    buildAddress(model: AddressModel): FormGroup {\r\n        return this.fb.group({\r\n            IsAddressAvailable: this.fb.control(false),\r\n            Address: this.fb.control(model.Address),\r\n            Latitude: this.fb.control(model.Latitude),\r\n            Longitude: this.fb.control(model.Longitude),\r\n            City: this.fb.control(model.City),\r\n            CountyName: this.fb.control(model.CountyName),\r\n            State: this.fb.group({\r\n                Id: this.fb.control(model.State.Id),\r\n                Code: this.fb.control(model.State.Code)\r\n            }),\r\n            Country: this.fb.group({\r\n                Id: this.fb.control(model.Country.Id),\r\n                Code: this.fb.control(model.Country.Code)\r\n            }),\r\n            ZipCode: this.fb.control(model.ZipCode),\r\n        });\r\n    }\r\n\r\n    updateAddressFlag(address: FormGroup): void {\r\n        this.IsAddressAvailable = !this.IsAddressAvailable;\r\n        if (!this.IsAddressAvailable) {\r\n            var empty = {\r\n                Address: '',\r\n                City: '',\r\n                CountyName: '',\r\n                ZipCode: '',\r\n                Latitude: '',\r\n                Longitude: ''\r\n            }\r\n            this.FuelDropLocation.patchValue(empty);\r\n        }\r\n        address.get('IsAddressAvailable').setValue(this.IsAddressAvailable);\r\n    }\r\n\r\n    getAddressByZip(address: FormGroup, event: any): void {\r\n        var zipCode = event.target.value;\r\n        if (RegExConstants.UsaZip.test(zipCode) || RegExConstants.CanZip.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        data.Address = address.controls['Address'].value;\r\n                        data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        var addressModel = this.addressMapper(data);\r\n                        address.patchValue(addressModel);\r\n                        this.setStateAndCountry(address, data.StateCode, data.CountryCode);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    addressMapper(data: any): AddressModel {\r\n        var _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State.Code = data.StateCode;\r\n        _address.Country.Code = data.CountryCode;\r\n        return _address;\r\n    }\r\n\r\n    setStateName(address: FormGroup, event: any) {\r\n        address.get('State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    setCountryName(address: FormGroup, event: any) {\r\n        address.get('Country.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    setStateAndCountry(address: FormGroup, stateCode: string, countryCode: string) {\r\n        var state = this.StateList.find(t => t.Code == stateCode);\r\n        var country = this.CountryList.find(t => t.Code == countryCode);\r\n\r\n        if (state != null) {\r\n            address.get('State.Id').setValue(state.Id);\r\n        }\r\n        if (country != null) {\r\n            address.get('Country.Id').setValue(country.Id);\r\n        }\r\n    }\r\n\r\n    //----------------- DO NOT MODIFY: Control Value accessor ----------------------\r\n\r\n    public onTouched: () => void = () => { };\r\n\r\n    writeValue(val: any): void {\r\n        val && this.FuelDropLocation.setValue(val, { emitEvent: true });\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.FuelDropLocation.valueChanges.subscribe(fn);\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        isDisabled ? this.FuelDropLocation.disable() : this.FuelDropLocation.enable();\r\n    }\r\n\r\n    //----------------- DO NOT MODIFY: Control Value accessor ----------------------\r\n\r\n}\r\n","<div class=\"well box-shadow\" *ngIf=\"IsVariousOrigin\">\r\n    <div class=\"row\" [formGroup]=\"FuelDropLocation\">\r\n        <div class=\"col-sm-12\">\r\n            <h4>Drop Location</h4>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"checkbox mt0\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"IsAddressAvailable\" (click)=\"updateAddressFlag(FuelDropLocation)\" />\r\n                    We have drop address\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2 form-group\" *ngIf=\"IsAddressAvailable\">\r\n            <label>Address<span class=\"color-maroon\">*</span></label>\r\n            <input name=\"Address\" placeholder=\"Address\" formControlName=\"Address\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"col-sm-2 form-group\" *ngIf=\"IsAddressAvailable\">\r\n            <label>Zip Code<span class=\"color-maroon\">*</span></label>\r\n            <input name=\"ZipCode\" placeholder=\"Zip Code\" formControlName=\"ZipCode\" class=\"form-control\" (input)=\"getAddressByZip(FuelDropLocation, $event)\" />\r\n        </div>\r\n        <div class=\"col-sm-2 form-group\" *ngIf=\"IsAddressAvailable\">\r\n            <label>City<span class=\"color-maroon\">*</span></label>\r\n            <input name=\"City\" placeholder=\"City\" formControlName=\"City\" class=\"form-control\" />\r\n        </div>\r\n        <div class=\"col-sm-2 form-group\" formGroupName=\"State\">\r\n            <input type=\"hidden\" formControlName=\"Code\" />\r\n            <label>State<span class=\"color-maroon\">*</span></label>\r\n            <select formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateName(FuelDropLocation, $event)\">\r\n                <option [value]=\"null\">Select State</option>\r\n                <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                    {{st.Code}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-sm-2 form-group\" formGroupName=\"Country\" *ngIf=\"IsAddressAvailable\">\r\n            <input type=\"hidden\" formControlName=\"Code\" />\r\n            <label>Country<span class=\"color-maroon\">*</span></label>\r\n            <select formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country\" (change)=\"setCountryName(FuelDropLocation, $event)\">\r\n                <option [value]=\"null\">Select Country</option>\r\n                <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Id\">\r\n                    {{ct.Code}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormArray, AbstractControl } from '@angular/forms';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ValidationService {\r\n\r\n    constructor(private readonly fb: FormBuilder) { }\r\n\r\n    removeError(control: AbstractControl, error: string) {\r\n        const existingErrors = control.errors;\r\n        if (existingErrors) {\r\n            delete existingErrors[error];\r\n            if (!Object.keys(existingErrors).length) {\r\n                control.setErrors(null);\r\n            } else {\r\n                control.setErrors(existingErrors);\r\n            }\r\n        }\r\n    }\r\n\r\n    addError(control: AbstractControl, error: string) {\r\n        let errorToSet = {};\r\n        errorToSet[error] = true;\r\n        control.setErrors({ ...control.errors, ...errorToSet });\r\n    }\r\n}","/* (ignored) */"]}