{"version":3,"sources":["./node_modules/angular7-csv/dist/Angular-csv.js","./src/app/lfv-dashboard/carrier-bol-report/carrier-bol-report.component.ts","./src/app/lfv-dashboard/carrier-bol-report/carrier-bol-report.component.html","./src/app/lfv-dashboard/carrier/carrier.component.ts","./src/app/lfv-dashboard/carrier/carrier.component.html","./src/app/lfv-dashboard/left-side-filter/left-side-filter.component.ts","./src/app/lfv-dashboard/left-side-filter/left-side-filter.component.html","./src/app/lfv-dashboard/lfv-accrual-report/lfv-accrual-report.component.ts","./src/app/lfv-dashboard/lfv-accrual-report/lfv-accrual-report.component.html","./src/app/lfv-dashboard/lfv-dashboard.module.ts","./src/app/lfv-dashboard/lfv-scratch-report/lfv-scratch-report.component.ts","./src/app/lfv-dashboard/lfv-scratch-report/lfv-scratch-report.component.html","./src/app/lfv-dashboard/master/master.component.ts","./src/app/lfv-dashboard/master/master.component.html","./src/app/lfv-dashboard/service/liftfiledashboardservice.service.ts","./src/app/lfv-dashboard/supplier-bol-report/supplier-bol-report.component.ts","./src/app/lfv-dashboard/supplier-bol-report/supplier-bol-report.component.html","./src/app/lfv-dashboard/validation/validation.component.ts","./src/app/lfv-dashboard/validation/validation.component.html"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,aAAa,GAAG;AAC5E;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,MAAM;AACjB;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;ACrLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGnB;AAC4B;;;;;;;;ICuC3B,q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","file":"lfv-dashboard-lfv-dashboard-module-es2015.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CsvConfigConsts = /** @class */ (function () {\n    function CsvConfigConsts() {\n    }\n    CsvConfigConsts.EOL = \"\\r\\n\";\n    CsvConfigConsts.BOM = \"\\ufeff\";\n    CsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';\n    CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';\n    CsvConfigConsts.DEFAULT_QUOTE = '\"';\n    CsvConfigConsts.DEFAULT_SHOW_TITLE = false;\n    CsvConfigConsts.DEFAULT_TITLE = 'My Report';\n    CsvConfigConsts.DEFAULT_FILENAME = 'mycsv.csv';\n    CsvConfigConsts.DEFAULT_SHOW_LABELS = false;\n    CsvConfigConsts.DEFAULT_USE_BOM = true;\n    CsvConfigConsts.DEFAULT_HEADER = [];\n    CsvConfigConsts.DEFAULT_NO_DOWNLOAD = false;\n    return CsvConfigConsts;\n}());\nexports.CsvConfigConsts = CsvConfigConsts;\nexports.ConfigDefaults = {\n    filename: CsvConfigConsts.DEFAULT_FILENAME,\n    fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n    quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n    decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n    showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n    showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n    title: CsvConfigConsts.DEFAULT_TITLE,\n    useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n    headers: CsvConfigConsts.DEFAULT_HEADER,\n    noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD\n};\nvar AngularCsv = /** @class */ (function () {\n    function AngularCsv(DataJSON, filename, options) {\n        this.csv = \"\";\n        var config = options || {};\n        this.data = typeof DataJSON != 'object' ? JSON.parse(DataJSON) : DataJSON;\n        this._options = objectAssign({}, exports.ConfigDefaults, config);\n        if (this._options.filename) {\n            this._options.filename = filename;\n        }\n        this.generateCsv();\n    }\n    /**\n     * Generate and Download Csv\n     */\n    AngularCsv.prototype.generateCsv = function () {\n        if (this._options.useBom) {\n            this.csv += CsvConfigConsts.BOM;\n        }\n        if (this._options.showTitle) {\n            this.csv += this._options.title + '\\r\\n\\n';\n        }\n        this.getHeaders();\n        this.getBody();\n        if (this.csv == '') {\n            console.log(\"Invalid data\");\n            return;\n        }\n        if (this._options.noDownload) {\n            return this.csv;\n        }\n        var blob = new Blob([this.csv], { \"type\": \"text/csv;charset=utf8;\" });\n        if (navigator.msSaveBlob) {\n            var filename = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n            navigator.msSaveBlob(blob, filename);\n        }\n        else {\n            var uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n            var link = document.createElement(\"a\");\n            link.href = URL.createObjectURL(blob);\n            link.setAttribute('visibility', 'hidden');\n            link.download = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    };\n    /**\n     * Create Headers\n     */\n    AngularCsv.prototype.getHeaders = function () {\n        var _this = this;\n        if (this._options.headers.length > 0) {\n            var headers = this._options.headers;\n            var row = headers.reduce(function (headerRow, header) {\n                return headerRow + header + _this._options.fieldSeparator;\n            }, '');\n            row = row.slice(0, -1);\n            this.csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Create Body\n     */\n    AngularCsv.prototype.getBody = function () {\n        for (var i = 0; i < this.data.length; i++) {\n            var row = \"\";\n            for (var index in this.data[i]) {\n                row += this.formartData(this.data[i][index]) + this._options.fieldSeparator;\n            }\n            row = row.slice(0, -1);\n            this.csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Format Data\n     * @param {any} data\n     */\n    AngularCsv.prototype.formartData = function (data) {\n        if (this._options.decimalseparator === 'locale' && AngularCsv.isFloat(data)) {\n            return data.toLocaleString();\n        }\n        if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n            return data.toString().replace('.', this._options.decimalseparator);\n        }\n        if (typeof data === 'string') {\n            data = data.replace(/\"/g, '\"\"');\n            if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) {\n                data = this._options.quoteStrings + data + this._options.quoteStrings;\n            }\n            return data;\n        }\n        if (typeof data === 'boolean') {\n            return data ? 'TRUE' : 'FALSE';\n        }\n        return data;\n    };\n    /**\n     * Check if is Float\n     * @param {any} input\n     */\n    AngularCsv.isFloat = function (input) {\n        return +input === input && (!isFinite(input) || Boolean(input % 1));\n    };\n    return AngularCsv;\n}());\nexports.AngularCsv = AngularCsv;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n/**\n * Convet to Object\n * @param {any} val\n */\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\n/**\n * Assign data  to new Object\n * @param {any}   target\n * @param {any[]} ...source\n */\nfunction objectAssign(target) {\n    var source = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        source[_i - 1] = arguments[_i];\n    }\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n}\n//# sourceMappingURL=Angular-csv.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { CarrierBOLReport } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { Subject } from 'rxjs';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n@Component({\r\n  selector: 'app-carrier-bol-report',\r\n  templateUrl: './carrier-bol-report.component.html',\r\n  styleUrls: ['./carrier-bol-report.component.css']\r\n})\r\nexport class CarrierBolReportComponent implements OnInit {\r\n    public ReportRecords: CarrierBOLReport [] = [];\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public ShowGridLoader: boolean = false;\r\n    public fromDate: any;\r\n    public toDate: any;\r\n    constructor(private dashboardservice: LiftfiledashboardserviceService) {\r\n        this.fromDate = null;\r\n        this.toDate = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.intializeGrid();\r\n    }\r\n    intializeGrid() {\r\n        this.ShowGridLoader = true;\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Lift File Records', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Lift File Records', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n        };\r\n        this.getCarrierBOLReport();\r\n    }\r\n\r\n    public setFromDate(event: any): void {\r\n        this.fromDate = event;\r\n    }\r\n\r\n    public setToDate(event: any): void {\r\n        this.toDate = event;\r\n    }\r\n    ApplyFilter() {\r\n        if ((this.fromDate == null || this.fromDate == undefined || this.fromDate == \"\")\r\n            || (this.toDate == null || this.toDate == undefined || this.toDate == \"\")) {\r\n            Declarations.msgerror(\"From/To date not selected\", undefined, undefined);\r\n        } else {\r\n            this.reloadGrid();\r\n        }\r\n    }\r\n    reloadGrid() {\r\n        $(\"#carrierbolreport-datatable\").DataTable().clear().destroy();\r\n        this.getCarrierBOLReport();\r\n    }\r\n\r\n    ClearFilter() {\r\n        this.fromDate = null;\r\n        this.toDate = null;\r\n        this.reloadGrid();\r\n    }\r\n    getCarrierBOLReport() {\r\n        let fromDate = this.fromDate\r\n        let toDate = this.toDate;\r\n        this.ShowGridLoader = true;\r\n        this.dashboardservice.getCarrierBOLReport(fromDate, toDate).subscribe((data: CarrierBOLReport[]) => {\r\n            this.ShowGridLoader = false;\r\n            this.ReportRecords = data;\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","\r\n<div class=\"row mb10\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"well pb10 mb0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-2 col-md-1 pt5 pr0\"><i class=\"fa fa-filter mr5 fs16\"></i><label class=\"f-normal fs16\">Filter</label></div>\r\n                <div class=\"col-md-3 \">\r\n                    <input type=\"text\" [(ngModel)]=\"fromDate\" class=\"form-control datepicker\" placeholder=\"From\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" />\r\n                </div>\r\n                <div class=\"col-md-3 \">\r\n                    <input type=\"text\" [(ngModel)]=\"toDate\" class=\"form-control datepicker\" placeholder=\"To\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" [minDate]=\"fromDate\" (onDateChange)=\"setToDate($event);\" />\r\n                </div>\r\n                <div class=\"col-12 col-sm-4 col-md-3 mt5-xs\">\r\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Apply\" (click)=\" ApplyFilter();\" />\r\n                    <input type=\"button\" class=\"btn ml5\" value=\"Clear Filter\" (click)=\"ClearFilter();\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div class=\"table-responsive\">\r\n                        <table id=\"carrierbolreport-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"Bol\">BOL#</th>\r\n                                    <th data-key=\"TerminalName\">Terminal Name</th>\r\n                                    <th data-key=\"LoadDate\">Lift Date</th>\r\n                                    <th data-key=\"NetQuantity\">Net Quantity</th>\r\n                                    <th data-key=\"GrossQuantity\">Gross Quantity</th>\r\n                                    <th data-key=\"BadgeNumber\">Badge#</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"FuelTypeName\">Fuel Type</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"ReportRecords?.length > 0\">\r\n                                <tr *ngFor=\"let record of ReportRecords; let i = index\">\r\n                                    <td>{{record.BOL}}</td>\r\n                                    <td>\r\n                                        {{record.TerminalName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.LoadDate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.NetQuantity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.GrossQuantity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.BadgeNumber}}\r\n                                    </td>\r\n                                    <td> {{record.CarrierName}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.FuelTypeName}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"ShowGridLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LFValidationGridViewModel } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\ndeclare var ApexCharts;\r\n@Component({\r\n  selector: 'app-carrier-performace',\r\n  templateUrl: './carrier.component.html',\r\n  styleUrls: ['./carrier.component.css']\r\n})\r\nexport class CarrierComponent implements OnInit, OnChanges {\r\n  chart: any;\r\n  @Input() LFValidationList: LFValidationGridViewModel[];\r\n  constructor(private _lfvService: LiftfiledashboardserviceService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.LFValidationList.currentValue && !changes.LFValidationList.isFirstChange()) {\r\n      this.createChartData();\r\n    }\r\n\r\n  }\r\n\r\n  //public openLFVScratchReportGrid(): void {\r\n  //  window.open(\"Supplier/LiftFile/LFVScratchReport\", \"_blank\");\r\n  //}\r\n\r\n  async RendorChart(data, carrierList, chartHeight) {\r\n    try {\r\n      if (this.chart)\r\n        this.chart.destroy();\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n    var options = {\r\n        colors: [\"#00FF00\", \"#ff0000\", \"#FF69B4\", \"#FFFF00\", \"#000080\", \"#00A7C6\", \"#800080\",'#0077ff','#A9D794'],\r\n      series: data,\r\n      chart: {\r\n        type: 'bar',\r\n        height: chartHeight,\r\n        stacked: true,\r\n        toolbar: {\r\n          show: true\r\n        },\r\n        animations: {\r\n          enabled: false\r\n        }\r\n\r\n      },\r\n      markers: {\r\n        size: 0\r\n      },\r\n      responsive: [{\r\n        breakpoint: undefined,\r\n        options: {\r\n        }\r\n      }],\r\n      plotOptions: {\r\n        bar: {\r\n          // borderRadius: 8,\r\n          horizontal: true,\r\n          dataLabels: {\r\n            //  position: 'bottom'\r\n          }\r\n        },\r\n      },\r\n     \r\n      xaxis: {\r\n        type: 'category',\r\n        categories: carrierList,\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'left',\r\n        offsetX: 40\r\n        //  offsetY: 40\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      //  colors: [\"red\", \"#F27036\", \"#663F59\", \"#6A6E94\", \"#4E88B4\", \"#00A7C6\", \"#18D8D8\", '#A9D794']\r\n      }\r\n    };\r\n    this.chart = new ApexCharts(document.querySelector(\"#chart-timeline1\"), options);\r\n    try {\r\n      if (this.chart)\r\n        this.chart.render();\r\n    } catch (e) {\r\n      this.chart.destroy();\r\n      this.chart.render();\r\n    }\r\n  }\r\n\r\n  async createChartData() {\r\n    var mapList = [];\r\n    var carrierList = [];\r\n    var chartHeight = 300;\r\n\r\n    //Match Records\r\n    var mtchRec = this.LFValidationList.map(res => { return [res.MatchedRecordCount] }).toString();\r\n    var match = mtchRec && mtchRec.split(\",\").map(Number);\r\n    //NoMatch Records\r\n    var nomtchRec = this.LFValidationList.map(res => { return [res.NoMatchRecordCount] }).toString();\r\n    var nomatch = nomtchRec && nomtchRec.split(\",\").map(Number);\r\n    //Partial Match\r\n    var partialRec = this.LFValidationList.map(res => { return [res.PartialMatchRecordCount] }).toString();\r\n    var partial = partialRec && partialRec.split(\",\").map(Number);\r\n    //Duplicate\r\n    var dupRec = this.LFValidationList.map(res => { return [res.DuplicateRecordCount] }).toString();\r\n    var duplicate = dupRec && dupRec.split(\",\").map(Number);\r\n    //PendingMatchCount\r\n    var pendingRec = this.LFValidationList.map(res => { return [res.PendingMatchCount] }).toString();\r\n    var pending = pendingRec && pendingRec.split(\",\").map(Number);\r\n    //activeException\r\n    var activeExcRec = this.LFValidationList.map(res => { return [res.ActiveExceptionRecordCount] }).toString();\r\n    var activeExc = activeExcRec && activeExcRec.split(\",\").map(Number);\r\n    //IgnoredMatchRecordCount\r\n    var ignoreRec = this.LFValidationList.map(res => { return [res.IgnoredMatchRecordCount] }).toString();\r\n    var Ignore = ignoreRec && ignoreRec.split(\",\").map(Number);\r\n    //UnmatchedRecordCount\r\n    var unmstchRec = this.LFValidationList.map(res => { return [res.UnmatchedRecordCount] }).toString();\r\n    var unMatch = unmstchRec && unmstchRec.split(\",\").map(Number);\r\n      //ForcedIgnoreRecordCount\r\n      var forcedIgnoredRec = this.LFValidationList.map(res => { return [res.ForcedIgnoredMatchRecordCount] }).toString();\r\n      var forcedIgnored = forcedIgnoredRec && forcedIgnoredRec.split(\",\").map(Number);\r\n    if (this.LFValidationList.length > 0) {\r\n      await mapList.push({ name: 'Matched ', data: match })\r\n      await mapList.push({ name: 'No Match ', data: nomatch })\r\n      await mapList.push({ name: 'Partial Match ', data: partial })\r\n      await mapList.push({ name: 'Pending Match ', data: pending })\r\n      await mapList.push({ name: 'Duplicate  ', data: duplicate })\r\n      await mapList.push({ name: 'Active Exception ', data: activeExc })\r\n      await mapList.push({ name: 'Ignored Match ', data: Ignore })\r\n      await mapList.push({ name: 'Forced Ignore', data: forcedIgnored })\r\n      await mapList.push({ name: 'Unmatched  ', data: unMatch })      \r\n      await this.LFValidationList && this.LFValidationList.map(lfv => {\r\n        carrierList.push(lfv.CarrierID ? lfv.CarrierID : '-')\r\n      })\r\n      chartHeight = chartHeight + (carrierList.length * 40);\r\n    } else {\r\n      await mapList.push({ name: 'Matched ', data: [] })\r\n      await mapList.push({ name: 'No Match ', data: [] })\r\n      await mapList.push({ name: 'Partial Match ', data: [] })\r\n      await mapList.push({ name: 'Pending Match ', data: [] })\r\n      await mapList.push({ name: 'Duplicate  ', data: [] })\r\n      await mapList.push({ name: 'Active Exception ', data: [] })\r\n      await mapList.push({ name: 'Ignored Match ', data: [] })\r\n      await mapList.push({ name: 'Forced Ignore  ', data: [] })\r\n      await mapList.push({ name: 'Unmatched  ', data: [] })\r\n    }\r\n\r\n\r\n    await this.RendorChart(mapList, carrierList, chartHeight);\r\n  }\r\n  openSupplierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/SupplierBolReport\", \"_blank\");\r\n  }\r\n  openCarrierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/CarrierBolReport\", \"_blank\");\r\n  }\r\n}\r\n\r\n","<div class=\"well bg-white shadow-b pr\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-10\">\r\n\r\n            <div id=\"chart-timeline1\"></div>\r\n        </div>\r\n        <!--<div class=\"col-md-2\">\r\n        <a class=\"btn border border-secondary mt5 pull-right\" (click)=\"openLFVScratchReportGrid()\"\r\n            placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fas fa-file-alt fs16\"></i></a>\r\n\r\n    </div>-->\r\n        \r\n    </div>\r\n</div>\r\n\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport * as moment from 'moment';\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\nimport { DropDownItem } from '../LiftFileModels';\nimport { Declarations } from 'src/app/declarations.module';\nimport { LFVRecordStatus } from 'src/app/app.enum';\ndeclare var matchingWindowDays;\n\n@Component({\n  selector: 'app-left-side-filter',\n  templateUrl: './left-side-filter.component.html',\n  styleUrls: ['./left-side-filter.component.css']\n})\n\nexport class LeftSideFilterComponent implements OnInit {\n  DateType = 3;\n  CarrierDrpDwnList: DropDownItem[] = [];\n  //min max date\n  @Output() search = new EventEmitter<any>();\n  @Output() export = new EventEmitter<any>();\n  MinStartDate = new Date();\n  MaxStartDate = new Date();\n  minfromdate: any;\n  matchingWindowDays = matchingWindowDays;\n  public fromDate: any;\n  public toDate: any;\n  public selectedCarrierList: DropDownItem[] = [];\n  public multiselectSettingsById: IDropdownSettings;\n  public isMatchingWindow = false;\n  selectedStatus=LFVRecordStatus.Clean;\n  public LFVRecordStatus=LFVRecordStatus;\n\n  constructor(private _lfvSevice: LiftfiledashboardserviceService) {\n    this.toDate = moment().format('MM/DD/YYYY');\n    this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n    this.minfromdate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n  }\n\n  ngOnInit() {\n    this.getLFCarrier();\n    this.multiselectSettingsById = {\n      singleSelection: false,\n      idField: 'DisplayName',\n      textField: 'DisplayName',\n      itemsShowLimit: 2,\n      allowSearchFilter: true,\n      enableCheckAll: true\n    }\n\n  }\n\n    private getLFCarrier() {\n        let fromDate = this.fromDate\n        let toDate = this.toDate;\n        this._lfvSevice.getLFCarrier(fromDate, toDate).subscribe(res => {\n            if (res) {\n                this.CarrierDrpDwnList = res;\n                this.CarrierDrpDwnList && this.CarrierDrpDwnList.map(m => { m.DisplayName = `${m.Name}-${m.Code}` })\n                //code=>carrierId\n                //name=CarrierName\n            }\n            else\n                this.CarrierDrpDwnList = [];\n        })\n    }\n\n  public changeDateType(value): void {\n    this.DateType = value;\n    if (this.DateType == 1) {\n      this.toDate = moment().format('MM/DD/YYYY');\n      this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-1, 'days').format('MM/DD/YYYY');\n      this.isMatchingWindow = false;\n    } else if (this.DateType == 3) {\n      this.toDate = moment().format('MM/DD/YYYY');\n      this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n      this.isMatchingWindow = false;\n    } else {\n      this.isMatchingWindow = true;\n      var day = this.matchingWindowDays ? this.matchingWindowDays : 3;//3 is default \n      this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-day, 'days').format('MM/DD/YYYY');\n\n    }\n\n    this.onSearch();\n  }\n\n  public setFromDate(event: any): void {\n    this.fromDate = event;\n\n  }\n\n  public setToDate(event: any): void {\n    this.toDate = event;\n    this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n  }\n  async onCarrierSelect($event) {\n\n    await this.selectedCarrierList.map(m => { m.Name = this.CarrierDrpDwnList.find(f => f.DisplayName == m.DisplayName).Code })\n  }\n  async onCarrierDeSelect($event) {\n\n    await this.selectedCarrierList.map(m => { m.Name = this.CarrierDrpDwnList.find(f => f.DisplayName == m.DisplayName).Code })\n  }\n  public onSearch(): void {\n    var startDate = moment(this.fromDate, \"MM/DD/YYYY\");\n    var endDate = moment(this.toDate, \"MM/DD/YYYY\");\n    var result = endDate.diff(startDate, 'days');\n    if (result > 8) {\n      Declarations.msgwarning(\"Date Difference should be less than 7 days\", undefined, undefined);\n    } else\n      this.search.emit(true);\n  }\n\n  public onExport() {\n    this.export.emit(this.selectedStatus);\n  }\n}\n","<div class=\"well bg-white shadow-b pr\">\n    <div class=\"row mb10\">\n        <div class=\"col-sm-12 text-center sticky-header-dash\">\n            <div class=\"dib border pa5 radius-capsule shadow-b  mb10\">\n                <div class=\"btn-group btn-filter\">\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"DateType==1\">\n                    <label class=\"btn ml0\" (click)=\"changeDateType(1)\">Today</label>\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"DateType==2\">\n                    <label class=\"btn\" (click)=\"changeDateType(2)\">Matching Window</label>\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"3\" [checked]=\"DateType==3\">\n                    <label class=\"btn\" (click)=\"changeDateType(3)\">Day Range</label>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <!-- <div class=\"row mb10\">\n       \n            <div class=\"col-md-6 \">\n                <input type=\"text\" [(ngModel)]=\"fromDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n                    [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\"/>\n            </div>\n            <div class=\"col-md-6 \">\n                <input type=\"text\" [(ngModel)]=\"toDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n                    [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" [minDate]=\"MinStartDate\"\n                    [maxDate]=\"MaxStartDate\" />\n            </div>\n\n        \n    </div>\n    <div class=\"row mb10\">\n        <div class=\"col-sm-12\">\n            <ng-multiselect-dropdown [placeholder]=\"'Select Carrier(s)'\" [data]=\"CarrierDrpDwnList\"\n                [settings]=\"multiselectSettingsById\" (onSelect)=\"onCarrierSelect($event)\"\n                (onDeSelect)=\"onCarrierDeSelect($event)\">\n            </ng-multiselect-dropdown>\n\n        </div>\n    </div>\n    <div class=\"row \">\n        <div class=\"col-sm-12 text-right form-buttons\">\n            <button id=\"Submit\" type=\"button\" value=\"Search\" (click)=\"onSearch()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\n        </div>\n    </div>\n</div> -->\n\n<div class=\"row mb10\">\n       \n    <div class=\"col-md-3 \">\n        <input type=\"text\" [(ngModel)]=\"fromDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n            [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\"    [disabled]=\"DateType!=3\"/>\n    </div>\n    <div class=\"col-md-3 \">\n        <input type=\"text\" [(ngModel)]=\"toDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n            [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\"  [disabled]=\"DateType!=3\"\n             />\n    </div>\n    <div class=\"col-sm-3\">\n        <ng-multiselect-dropdown [placeholder]=\"'Select Carrier(s)'\" \n            [settings]=\"multiselectSettingsById\" [data]=\"CarrierDrpDwnList\" [(ngModel)]=\"selectedCarrierList\" (onSelect)=\"onCarrierSelect($event)\"\n            (onDeSelect)=\"onCarrierDeSelect($event)\">\n        </ng-multiselect-dropdown>\n\n    </div>\n    <div class=\"col-sm-3 text-right form-buttons\">\n        <button id=\"Submit\" type=\"button\" value=\"Search\" (click)=\"onSearch()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\n        <button id=\"statusSelectbtn\" type=\"button\" value=\"Export\" data-toggle=\"modal\" data-target=\"#statusSelect\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Export</button>\n    </div>\n</div>\n</div>\n\n<!-- <button type=\"button\"  class=\"btn btn-primary hide-element\" data-toggle=\"modal\" data-target=\"#statusSelect\">\n    Launch demo modal\n  </button> -->\n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"statusSelect\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"statusSelectLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-sm modal-dialog-scrollable modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"statusSelectLabel\">Select Status</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <select class=\"form-control\" [(ngModel)]=\"selectedStatus\">\n                <option [value]=\"LFVRecordStatus.Clean\">Match</option>\n                <option [value]=\"LFVRecordStatus.NoMatch\">No Match</option>\n                <option [value]=\"LFVRecordStatus.PartialMatch\">Partial Match</option>\n                <option [value]=\"LFVRecordStatus.PendingMatch\">Pending</option>\n                <option [value]=\"LFVRecordStatus.Duplicate\">Duplicate</option>\n                <option [value]=\"LFVRecordStatus.ActiveExceptions\">Active Exception</option>\n                <option [value]=\"LFVRecordStatus.IgnoreMatch\">Ignored</option>\n                <option [value]=\"LFVRecordStatus.UnMatched\">Unmatched</option>\n                <option [value]=\"LFVRecordStatus.ForcedIgnore\">Forced Ignore</option>\n            </select>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onExport()\">Generate CSV</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, ViewChild, ViewChildren, QueryList } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { LFRecordGridModel, DropDownItem } from '../LiftFileModels';\r\nimport { DataTablesResponse } from '../../shared/models/DataTable-models';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n    selector: 'app-lfv-accrual-report',\r\n    templateUrl: './lfv-accrual-report.component.html',\r\n    styleUrls: ['./lfv-accrual-report.component.css']\r\n})\r\nexport class LfvAccrualReportComponent implements OnInit {\r\n    public dtOptions: any = {};\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    public IsLoading: boolean = false;\r\n    public records: LFRecordGridModel[] = [];\r\n    public FromDate: any;\r\n    public ToDate: any;\r\n    public ProductTypesList: DropDownItem[] = [];\r\n    public selectedProductTypesList: DropDownItem[] = [];\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public ProductTypeIds: string = \"\";\r\n\r\n    constructor(private _lfvservice: LiftfiledashboardserviceService) {\r\n        this.FromDate = null;\r\n        this.ToDate = null;\r\n        this.ProductTypeIds = \"\";\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 2,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        let exportColumns = { columns: ':visible' };\r\n        let gridcolumnsDetails = [];\r\n        gridcolumnsDetails = [\r\n            { title: 'CallID', name: 'CallId', data: 'CallId', \"autoWidth\": true },\r\n            { title: 'Record Date', name: 'RecordDate', data: 'RecordDate', \"autoWidth\": true },\r\n            { title: 'BOL#', name: 'BOL', data: 'bol', \"autoWidth\": true },            \r\n            { title: 'Terminal Code', name: 'TerminalName', data: 'TerminalName', \"autoWidth\": true },\r\n            { title: 'Terminals', name: 'Terminal', data: 'Terminals', \"autoWidth\": true },\r\n            { title: 'Terminal Item Code', name: 'TerminalItemCode', data: 'TerminalItemCode', \"autoWidth\": true },\r\n            { title: 'Product Type', name: 'ProductType', data: 'ProductType', \"autoWidth\": true },\r\n            { title: 'Corrected Quantity', name: 'correctedQuantity', data: 'correctedQuantity', \"autoWidth\": true },\r\n            { title: 'Load Date', name: 'LoadDate', data: 'LoadDate', \"autoWidth\": true },\r\n            { title: 'CarrierID', name: 'CarrierID', data: 'CarrierID', \"autoWidth\": true },\r\n            { title: 'Carrier Name', name: 'CarrierName', data: 'CarrierName', \"autoWidth\": true },\r\n            { title: 'FileName', name: 'FileName', data: 'FileName', \"autoWidth\": true },           \r\n            //{ title: 'Reason', name: 'Reason', data: 'Reason', \"autowidth\": true },\r\n            { title: 'Status', name: 'RecordStatus', data: 'recordStatus', \"autowidth\": true },\r\n            { title: 'User Name', name: 'Username', data: 'Username', \"autowidth\": true },\r\n            { title: 'Modified Date (MST)', name: 'ModifiedDate', data: 'ModifiedDate', \"autowidth\": true },\r\n            { title: 'Resolution Time', name: 'LFVResolutionTime', data: 'LFVResolutionTime', \"autowidth\": true },\r\n            { title: 'Time to BOL', name: 'TimeToBol', data: 'TimeToBol', \"autowidth\": true }\r\n            //{ title: 'Reason Code', name: 'ReasonCode', data: 'ReasonCode', \"autowidth\": true },\r\n            //{ title: 'Reason Category', name: 'ReasonCategory', data: 'ReasonCategory', \"autowidth\": true }\r\n        ]\r\n\r\n        this.dtOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                let inputs = {\r\n                    FromDate: this.FromDate,\r\n                    ToDate: this.ToDate,\r\n                    ProductTypeIds: this.ProductTypeIds\r\n                };\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsLoading = true;\r\n                this._lfvservice.getLFVAccrualReportGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.records = resp.data;\r\n                    this.IsLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                   // this.getLFVValidationStatsAndProductTypesDDL();\r\n                });\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[0, 'desc']],\r\n            buttons: [\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'LiftFile Accrual Report', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'LiftFile Accrual Report', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: gridcolumnsDetails\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getLFAccrualGrid();\r\n        this.dtTrigger.next();\r\n        this.getLFVValidationStatsAndProductTypesDDL();\r\n    }\r\n    getLFAccrualGrid(): void {\r\n        this.IsLoading = true;\r\n        this.refreshDatatable();\r\n        this.IsLoading = false;\r\n    }\r\n    getLFVValidationStatsAndProductTypesDDL() {\r\n        this.IsLoading = true;\r\n            let input = {\r\n                FromDate: this.FromDate,\r\n                ToDate: this.ToDate\r\n            };\r\n            this._lfvservice.GetLFVValidationStatsAndProductTypesDDL(input).subscribe((resp: any) => {              \r\n                this.ProductTypesList = resp;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.draw();\r\n                });\r\n            }\r\n        });\r\n    }\r\n    ApplyFilter() {\r\n        if ((this.FromDate != null && this.FromDate != undefined && this.FromDate != \"\")\r\n            && (this.ToDate == null || this.ToDate == undefined || this.ToDate == \"\")) {\r\n            Declarations.msgerror(\"To Date is required\", undefined, undefined);\r\n            return;\r\n        }\r\n        this.getSelectedProductTypes();\r\n        this.refreshDatatable();\r\n    }\r\n    ClearFilter() {\r\n        this.FromDate = null;\r\n        this.ToDate = null;\r\n        this.selectedProductTypesList = [];\r\n        this.getSelectedProductTypes();\r\n        this.refreshDatatable();\r\n    }\r\n    getSelectedProductTypes(): void {\r\n        if (this.selectedProductTypesList == null || this.selectedProductTypesList.length == 0 || this.selectedProductTypesList == undefined) {\r\n            this.ProductTypeIds = \"\";\r\n        }\r\n        else if (this.selectedProductTypesList != null || this.selectedProductTypesList.length > 0) {\r\n            this.ProductTypeIds = this.selectedProductTypesList.map(m => m.Id).join(',');\r\n        }\r\n    }\r\n\r\n\r\n    public setFromDate(event: any): void {\r\n        this.FromDate = event;\r\n    }\r\n    public setToDate(event: any): void {\r\n        this.ToDate = event;\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n}\r\n","<div class=\"row mb10\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"well pb10 mb0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-1 pr0 mt-1\">\r\n                <i class=\"fa fa-filter mr5 fs16\"></i><label class=\"f-normal fs16\">Filter</label></div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" [(ngModel)]=\"FromDate\" class=\"form-control datepicker\" placeholder=\"From\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" [(ngModel)]=\"ToDate\" class=\"form-control datepicker\" placeholder=\"To\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" [minDate]=\"FromDate\" (onDateChange)=\"setToDate($event);\" />\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Products'\" \r\n                                                 [settings]=\"multiselectSettingsById\" [data]=\"ProductTypesList\" [(ngModel)]=\"selectedProductTypesList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-sm-2 mt5-xs\">\r\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Apply\" (click)=\" ApplyFilter();\" />\r\n                    <input type=\"button\" class=\"btn ml5\" value=\"Clear Filter\" (click)=\"ClearFilter();\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div class=\"table-responsive\">\r\n                        <table id=\"accrualreport-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"CallId\">CallID</th>\r\n                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                    <th data-key=\"Bol\">BOL#</th>\r\n                                    <th data-key=\"TerminalCode\">Terminal Code</th>\r\n                                    <th data-key=\"Terminals\">Terminal</th>\r\n                                    <th data-key=\"TerminalItemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"ProductType\">Product Type</th>\r\n                                    <th data-key=\"CorrectedQuanity\">Corrected Quanity</th>\r\n                                    <th data-key=\"LoadDate\">Load Date</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"FileName\">File Name</th>\r\n                                    <!--<th data-key=\"Reason\">Reason</th>-->-->\r\n                                    <th data-key=\"RecordStatus\">Status</th>\r\n                                    <th data-key=\"UserName\">User Name</th>\r\n                                    <th data-key=\"ModifiedDate\">Modified Date</th>\r\n                                    <th data-key=\"LFVResolutionTime\">Resolution Time</th>\r\n                                    <th data-key=\"TimeToBol\">Time to BOL</th>\r\n                                    <!--<th data-key=\"ReasonCode\">Reason Code</th>\r\n    <th data-key=\"ReasonCategory\">Reason Category</th>-->\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"records?.length > 0\">\r\n                                <tr *ngFor=\"let record of records; let i = index\">\r\n                                    <td>{{record.CallId}}</td>\r\n                                    <td>\r\n                                        {{record.RecordDate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.bol}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Terminals}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalItemCode}}\r\n                                    </td>\r\n                                    <td> {{record.ProductType}}</td>\r\n                                    <td>\r\n                                        {{record.correctedQuantity}}\r\n                                    </td>\r\n                                    <td> {{record.LoadDate}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td> {{record.CarrierName}}</td>\r\n                                    <td>\r\n                                        {{record.FileName}}\r\n                                    </td>\r\n                                    <!-- <td> {{record.Reason}}</td>-->\r\n                                    <td> {{record.recordStatus}}</td>\r\n                                    <td>{{record.Username}} </td>\r\n                                    <td>{{record.ModifiedDate}} </td>\r\n                                    <td>{{record.LFVResolutionTime}} </td>\r\n                                    <!--<td>{{record.ReasonCode}} </td>\r\n\r\n    <td>{{record.ReasonCategory}} </td>-->\r\n                                    <td>{{record.TimeToBol}} </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            <tbody *ngIf=\"records?.length == 0\">\r\n                                <tr>\r\n                                    <td colspan=\"14\" class=\"text-center\">No Data Available</td>\r\n                                </tr>                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasterComponent } from './master/master.component';\nimport { ValidationComponent } from './validation/validation.component';\nimport { CarrierComponent } from './carrier/carrier.component';\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LeftSideFilterComponent } from './left-side-filter/left-side-filter.component';\nimport { LfvScratchReportComponent } from './lfv-scratch-report/lfv-scratch-report.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { CarrierBolReportComponent } from './carrier-bol-report/carrier-bol-report.component';\nimport { SupplierBolReportComponent } from './supplier-bol-report/supplier-bol-report.component';\nimport { LfvAccrualReportComponent } from './lfv-accrual-report/lfv-accrual-report.component';\nconst route: Routes = [\n  { path: '', component: MasterComponent },\n    { path: 'Dashboard', component: MasterComponent },\n    { path: 'LFVScratchReport', component: LfvScratchReportComponent },\n    { path: 'CarrierBolReport', component: CarrierBolReportComponent },\n    { path: 'SupplierBolReport', component: SupplierBolReportComponent },\n    { path: 'LFVAccrualReport', component: LfvAccrualReportComponent }\n]\n\n@NgModule({\n    declarations: [MasterComponent, ValidationComponent, CarrierComponent,\n        LeftSideFilterComponent, LfvScratchReportComponent, CarrierBolReportComponent,\n        SupplierBolReportComponent,\n        LfvAccrualReportComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DirectiveModule,\n    FormsModule,\n    DataTablesModule,\n    RouterModule.forChild(route),\n    DirectiveModule\n  ]\n})\nexport class LfvDashboardModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LFRecordGridModel, LFBolEditModel, DropDownItem } from '../LiftFileModels';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n    selector: 'app-lfv-scratch-report',\r\n    templateUrl: './lfv-scratch-report.component.html',\r\n    styleUrls: ['./lfv-scratch-report.component.css']\r\n})\r\nexport class LfvScratchReportComponent implements OnInit, OnDestroy {\r\n\r\n    //side bar related variables\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n    //grid variables\r\n    public LFRecords: LFRecordGridModel[] = [];\r\n    public cancelButtonText: string = 'No';\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public ShowGridLoader: boolean = false;\r\n    public isChecked = false;\r\n    public LFRecordIdsForIgnoreMatch: number[] = [];\r\n\r\n    //partial match resolve related variables\r\n    public bolResolveForm: FormGroup;\r\n    public selectedLiftFileRecord: LFRecordGridModel; //used for display purpose only\r\n    public ShowSideBarLoader: boolean = false;\r\n    public TerminalList: DropDownItem[];\r\n    public FuelTypeList: DropDownItem[];\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public InvoiceFtlDetailIdList: DropDownItem[];\r\n    public SelectedBolProduct: any;\r\n    public SelectedTerminalList: DropDownItem[] = [];\r\n    public SelectedFuelTypeList: DropDownItem[] = [];\r\n\r\n    constructor(private fb: FormBuilder, private dashboardservice: LiftfiledashboardserviceService) { }\r\n    ngOnInit() {\r\n\r\n        this.multiselectSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.intializeGrid();\r\n        this.bolResolveForm = this.buildForm();\r\n        this.getPreferencesSetting();\r\n    }\r\n    intializeGrid() {\r\n        this.ShowGridLoader = true;\r\n        let exportColumns = { columns:[ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16]};\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Scratch Report', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Scratch Report', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n        };\r\n        this.getLFRecords();\r\n    }\r\n    buildForm(): FormGroup {\r\n        let fg = this.fb.group({\r\n            BolNumber: this.fb.control('', [Validators.required]),\r\n            LiftDate: this.fb.control('', [Validators.required]),\r\n            GrossQuantity: this.fb.control('', [Validators.required]),\r\n            NetQuantity: this.fb.control('', [Validators.required]),\r\n            BadgeNumber: this.fb.control(''),\r\n            SelectedTerminal: this.fb.control('', [Validators.required]),\r\n            SelectedFuelType: this.fb.control('', [Validators.required]),\r\n            Notes: this.fb.control(''),\r\n            LIftFileRecordId: this.fb.control(''),\r\n            InvoiceFtlDetailId: this.fb.control(''),\r\n            IsBulkPlantLift: this.fb.control('')\r\n        });\r\n        this.SelectedFuelTypeList = [];\r\n        this.SelectedTerminalList = [];\r\n        return fg;\r\n    }\r\n    getLFRecords() {\r\n        this.ShowGridLoader = true;\r\n        this.dashboardservice.getLFRecords().subscribe((data: LFRecordGridModel[]) => {\r\n            this.ShowGridLoader = false;\r\n            this.LFRecords = data;\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n    reloadGrid() {\r\n        $(\"#liftfilerecords-datatable\").DataTable().clear().destroy();\r\n        this.getLFRecords();\r\n    }\r\n\r\n    getBolDetailsForResolve(lfRecord: LFRecordGridModel) {\r\n        this.ShowSideBarLoader = true;\r\n        lfRecord.IsFromScratchReport = true;\r\n        this.dashboardservice.getBolDetailsForResolve(lfRecord).subscribe((data: LFBolEditModel) => {\r\n            if (data) {\r\n                this._toggleOpened(true);\r\n                this.selectedLiftFileRecord = data.LiftRecord;\r\n                this.TerminalList = data.TerminalList;\r\n                this.FuelTypeList = data.FuelTypeList;\r\n                this.InvoiceFtlDetailIdList = data.InvoiceFtlDetailsList;\r\n                this.initFormData(data)\r\n                this.ShowSideBarLoader = false;\r\n            }\r\n        });\r\n    }\r\n    selectAllRecords(eventData: any) {\r\n        if (eventData != null && eventData != undefined) {\r\n            if (eventData.target.checked) {\r\n                this.isChecked = true;\r\n            }\r\n            else {\r\n                this.isChecked = false;\r\n            }\r\n        }\r\n    }\r\n    ValidateForIgnoreMatchProcessing() {\r\n        let LFRecordIds = this.getLFRecordIds();\r\n        \r\n        this.selectedReason = [];\r\n\r\n        if (LFRecordIds != null && LFRecordIds != undefined && LFRecordIds.length > 0) {\r\n\r\n            if (this.preferenceSetting && this.preferenceSetting.IsLiftFileValidationEnabled && this.preferenceSetting.IsReasonCodesEnabled) {\r\n                this.GetReasonDescriptionList();\r\n                document.getElementById('openIgnoreModal2').click();\r\n              } else {\r\n                this.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds);\r\n              }\r\n        }\r\n        else{ Declarations.msgerror(\"No Records selected\", undefined, undefined);}\r\n\r\n    }\r\n    addRecordsForForcedIgnoreMatchProcessing(LFRecordIds: any[]) {\r\n\r\n        let descriptionId: number = 0;\r\n        let descriptionText: string = '';\r\n    \r\n        if (this.selectedReason && this.selectedReason.length > 0) {\r\n          descriptionId = this.selectedReason[0].Id;\r\n          descriptionText = this.selectedReason[0].Name;\r\n        }\r\n\r\n        this.ShowSideBarLoader = true;\r\n        this.dashboardservice.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds, descriptionId, descriptionText).subscribe((response: any) => {\r\n            if (response.StatusCode == 0) {\r\n                Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                this.reloadGrid();\r\n            } else {\r\n                Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n        this.ShowSideBarLoader = false;\r\n\r\n    }\r\n    GetBolRecord(InvoiceFtlDetailId: any) {\r\n        if (InvoiceFtlDetailId != null && InvoiceFtlDetailId != undefined && InvoiceFtlDetailId != '') {\r\n            let selectedLiftFileRecordId = this.selectedLiftFileRecord.LiftFileRecordId;\r\n            let invoiceFtlDetailId = parseInt(InvoiceFtlDetailId);\r\n            let LFRecord = new LFRecordGridModel();\r\n\r\n            LFRecord.LiftFileRecordId = selectedLiftFileRecordId;\r\n            LFRecord.InvFtlDetailId = invoiceFtlDetailId;\r\n            LFRecord.bol = this.selectedLiftFileRecord.bol;\r\n            LFRecord.TerminalName = this.selectedLiftFileRecord.TerminalName;\r\n            LFRecord.TerminalItemCode = this.selectedLiftFileRecord.TerminalItemCode;\r\n            LFRecord.LoadDate = this.selectedLiftFileRecord.LoadDate;\r\n            LFRecord.ProductType = this.selectedLiftFileRecord.ProductType;\r\n            LFRecord.correctedQuantity = this.selectedLiftFileRecord.correctedQuantity;\r\n            LFRecord.IsFromScratchReport = true;\r\n            this.getBolDetailsForResolve(LFRecord);\r\n        }\r\n    }\r\n\r\n    initFormData(data: LFBolEditModel) {\r\n        var currObj = this;\r\n        this.bolResolveForm.reset();//clear previous values\r\n        if ((this.bolResolveForm != null && this.bolResolveForm != undefined) && (data != null && data != undefined)) {\r\n            this.bolResolveForm.get('BolNumber').setValue(data.BolNumber);\r\n            this.bolResolveForm.get('LiftDate').setValue(data.DisplayLiftDate);\r\n            this.bolResolveForm.get('GrossQuantity').setValue(data.GrossQuantity);\r\n            this.bolResolveForm.get('NetQuantity').setValue(data.NetQuantity);\r\n            this.bolResolveForm.get('Notes').setValue(data.Notes);\r\n            this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n            this.bolResolveForm.get('InvoiceFtlDetailId').setValue(data.InvoiceFtlDetailId);\r\n            this.bolResolveForm.get('IsBulkPlantLift').setValue(data.IsBulkPlantLift);\r\n            this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n            this.bolResolveForm.get('BadgeNumber').setValue(data.BadgeNumber);\r\n            if (data.IsBulkPlantLift == true) { // no terminal dropdown for pickup from bulk plants\r\n                this.bolResolveForm.get('SelectedTerminal').clearValidators();\r\n                this.bolResolveForm.get('SelectedTerminal').updateValueAndValidity();\r\n            }\r\n            if (data != null && data.SelectedTerminal != null) {\r\n                this.bolResolveForm.get('SelectedTerminal').setValue(data.SelectedTerminal);\r\n                this.SelectedTerminalList = [];\r\n                this.SelectedTerminalList.push(data.SelectedTerminal);                               \r\n            }\r\n            if (data != null && data.SelectedFuelType != null) {\r\n                this.bolResolveForm.get('SelectedFuelType').setValue(data.SelectedFuelType);                \r\n                this.SelectedFuelTypeList = [];\r\n                this.SelectedFuelTypeList.push(data.SelectedFuelType);\r\n            }\r\n        }\r\n    }\r\n    createPostObject(): LFBolEditModel{\r\n        let inputPostObject = new LFBolEditModel();\r\n        inputPostObject.BadgeNumber = this.bolResolveForm.get('BadgeNumber').value;\r\n        inputPostObject.BolNumber = this.bolResolveForm.get('BolNumber').value;\r\n        inputPostObject.GrossQuantity = this.bolResolveForm.get('GrossQuantity').value;\r\n        inputPostObject.InvoiceFtlDetailId = this.bolResolveForm.get('InvoiceFtlDetailId').value;\r\n        inputPostObject.IsBulkPlantLift = this.bolResolveForm.get('IsBulkPlantLift').value;\r\n        inputPostObject.LiftRecord.LiftFileRecordId = this.bolResolveForm.get('LIftFileRecordId').value;\r\n        inputPostObject.LiftDate = this.bolResolveForm.get('LiftDate').value;\r\n        inputPostObject.NetQuantity = this.bolResolveForm.get('NetQuantity').value;\r\n        inputPostObject.Notes = this.bolResolveForm.get('Notes').value;\r\n        let SelectedFuelType = this.bolResolveForm.get('SelectedFuelType').value;\r\n        let fuelTypeId = SelectedFuelType[0].Id;\r\n        inputPostObject.FuelTypeId = fuelTypeId;\r\n        let selectedTerminal = this.bolResolveForm.get('SelectedTerminal').value;\r\n        let terminalId = inputPostObject.IsBulkPlantLift ? selectedTerminal.Id : selectedTerminal[0].Id;\r\n        inputPostObject.TerminalId = terminalId;\r\n        return inputPostObject;\r\n    }\r\n\r\n    //resetSelections(isReset: boolean) {\r\n    //    if (isReset) {\r\n    //        this.isChecked = false;\r\n    //    }\r\n    //    else {\r\n    //        this.isChecked = true;\r\n    //    }\r\n\r\n    //}\r\n    redirectToMyApprovalTab() {\r\n        window.open(\"Supplier/Exception/Manage\", \"_blank\");\r\n    }\r\n\r\n    onSubmit() {\r\n        this.ShowSideBarLoader = true;\r\n        this.bolResolveForm.markAsTouched();\r\n        if (this.bolResolveForm.valid) {\r\n            let requestObj = this.createPostObject();\r\n            if (requestObj != null) {\r\n                this.dashboardservice.saveBolDetailsForResolve(requestObj).subscribe((response:any) => {\r\n                    if (response.StatusCode == 0) {\r\n                        this.ShowSideBarLoader = false;\r\n                        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                        this._toggleOpened(false);\r\n                        this.reloadGrid();\r\n                    } else {\r\n                        this.ShowSideBarLoader = false;\r\n                        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.ShowSideBarLoader = false;\r\n    }\r\n\r\n    _toggleOpened(shouldOpen: boolean) {\r\n        if(shouldOpen) {\r\n            this._opened = true;\r\n        }\r\n        else {\r\n            this._opened = !this._opened;\r\n            this.bolResolveForm.reset();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    //ignore by reason\r\n    public preferenceSetting: any = null;\r\n    public selectedReason = [];\r\n    public reasonList = [];\r\n    public dropdownSettings: IDropdownSettings = { singleSelection: true, idField: 'Id', textField: 'Name', allowSearchFilter: true };\r\n    \r\n    public getLFRecordIds() {\r\n        let LFRecordIds = [];\r\n        let table = $('#liftfilerecords-datatable').DataTable();\r\n        var rowcollection = table.$(\".dt-checkbox\", { \"page\": \"all\" });\r\n        rowcollection.each(function (index, elem) {\r\n            if ($(this).is(\":checked\")) {\r\n                LFRecordIds.push(parseInt($(this).attr('id')));\r\n            }\r\n        });\r\n        return LFRecordIds;\r\n        }\r\n    \r\n        public getPreferencesSetting() {\r\n            if (!this.preferenceSetting) {\r\n                this.dashboardservice.getPreferencesSetting().subscribe(response => {\r\n                    this.preferenceSetting = response;\r\n                });\r\n            }\r\n        }\r\n    \r\n      public GetReasonDescriptionList() {\r\n        if (this.reasonList && this.reasonList.length == 0) {\r\n          this.ShowGridLoader = true;\r\n          this.dashboardservice.GetReasonDescriptionList().subscribe((response: any) => {\r\n            if (response && response.length > 0) {\r\n              this.reasonList = response;\r\n            }\r\n            this.ShowGridLoader = false;\r\n          });\r\n        }\r\n      }\r\n      public submitIgnoreDescription() {\r\n        this.addRecordsForForcedIgnoreMatchProcessing(this.getLFRecordIds());\r\n      }\r\n\r\n}\r\n","\r\n<div>\r\n    <ng-sidebar-container>\r\n        <ng-sidebar [(opened)]=\"_opened\"\r\n                    [animate]=\"_animate\"\r\n                    [position]=\"_POSITIONS[_positionNum]\"\r\n                    style=\"height: 100vh;\" class=\"Lfv-resolve-sidebar\">\r\n            <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib ml10 mt10 mb10\">Edit BOL Details</h3> <!-- Need to give this sidebar a z-index = 3 for UI issue fix-->\r\n            <div class=\"well bg-white shadow-b lfrecord-section\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border no-padding\">\r\n                        <div id=\"LFrecord\" class=\"table-responsive\">\r\n                            <table id=\"table-Lfrecord\" class=\"table table-striped table-bordered table-hover lfvrecord\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th>BOL#</th>\r\n                                        <th>Terminal</th>\r\n                                        <th>Corrected Quantity</th>\r\n                                        <th>Terminal Item Code</th>\r\n                                        <th>Load Date</th>\r\n                                        <th>ProductType</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tr>\r\n                                    <td>{{selectedLiftFileRecord?.bol}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalName}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.correctedQuantity}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalItemCode}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.LoadDate}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.ProductType}}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null\" class=\"row\">\r\n                <div class=\"col-sm-6\" *ngIf=\"InvoiceFtlDetailIdList !=null && InvoiceFtlDetailIdList.length > 0\">\r\n                    <div class=\"form-group\">\r\n                        <select class=\"form-control\" id=\"select-bol\" (change)=\"GetBolRecord($event.target.value)\">\r\n                            <option [value]=\"null\">Select BOL-Product to edit </option>\r\n                            <ng-container *ngFor=\"let bol Of InvoiceFtlDetailIdList\">\r\n                                <option [value]=\"bol.Id\" [selected]=\"bol.Id == bolResolveForm.get('InvoiceFtlDetailId').value\">\r\n                                    {{bol.Name}}\r\n                                </option>\r\n                            </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n            <content class=\"pr30\" *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null && bolResolveForm.get('InvoiceFtlDetailId').value >0\">\r\n                <form [formGroup]=\"bolResolveForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 section-bol-details-edit\">\r\n                            <div class=\"mt10 row\">\r\n                                <div class=\"col-sm-3 bol\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BolNumber\">BOL/LiftTicket#<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"InvoiceFtlDetailId\" type=\"hidden\" class=\"hide-element\">\r\n                                        <input formControlName=\"LIftFileRecordId\" type=\"hidden\" class=\"hide-element\" />\r\n                                        <input formControlName=\"BolNumber\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('BolNumber').invalid && (bolResolveForm.get('BolNumber').dirty || bolResolveForm.get('BolNumber').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('BolNumber').errors.required\">\r\n                                                BOL/LiftTicket# is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 lifdt\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"LiftDate\">Lift Date<span class=\"color-maroon\">*</span></label>\r\n                                        <input name=\"LiftDate\" class=\"form-control\" formControlName=\"LiftDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"bolResolveForm.get('LiftDate').setValue($event)\">\r\n                                        <div *ngIf=\"bolResolveForm.get('LiftDate').invalid && (bolResolveForm.get('LiftDate').dirty || bolResolveForm.get('LiftDate').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('LiftDate').errors.required\">\r\n                                                Lift Date is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 grossQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"GrossQuantity\">Gross Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"GrossQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('GrossQuantity').invalid && (bolResolveForm.get('GrossQuantity').dirty || bolResolveForm.get('GrossQuantity').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('GrossQuantity').errors.required\">\r\n                                                Gross quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 netQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"NetQuantity\">Net Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"NetQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('NetQuantity').invalid && (bolResolveForm.get('NetQuantity').dirty || bolResolveForm.get('NetQuantity').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('NetQuantity').errors.required\">\r\n                                                Net quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BadgeNumber\">Badge#</label>\r\n                                        <input formControlName=\"BadgeNumber\" class=\"form-control\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6 terminal-section\" *ngIf=\"!bolResolveForm.get('IsBulkPlantLift').value\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"Jobs\">Terminal Name</label>\r\n                                                <ng-multiselect-dropdown formControlName=\"SelectedTerminal\"\r\n                                                                         [placeholder]=\"'Select Terminal'\"\r\n                                                                         [settings]=\"multiselectSettingsById\" [data]=\"TerminalList\"\r\n                                                                         [(ngModel)]=\"SelectedTerminalList\">\r\n                                                </ng-multiselect-dropdown>\r\n                                                <div *ngIf=\"bolResolveForm.get('SelectedTerminal').invalid && (bolResolveForm.get('SelectedTerminal').dirty || bolResolveForm.get('SelectedTerminal').touched)\" class=\"color-maroon\">\r\n                                                    <div *ngIf=\"bolResolveForm.get('SelectedTerminal').errors.required\">\r\n                                                        Terminal is required.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6 fuelType\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"Jobs\">Fuel</label>\r\n                                                <ng-multiselect-dropdown formControlName=\"SelectedFuelType\"\r\n                                                                         [placeholder]=\"'Select Fuel'\"\r\n                                                                         [settings]=\"multiselectSettingsById\" [data]=\"FuelTypeList\"\r\n                                                                         [(ngModel)]=\"SelectedFuelTypeList\">\r\n                                                </ng-multiselect-dropdown>\r\n                                            </div>\r\n                                            <div *ngIf=\"bolResolveForm.get('SelectedFuelType').invalid && (bolResolveForm.get('SelectedFuelType').dirty || bolResolveForm.get('SelectedFuelType').touched)\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"bolResolveForm.get('SelectedFuelType').errors.required\">\r\n                                                    Fuel Type is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Notes\">Notes</label>\r\n                                <textarea formControlName=\"Notes\" class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 text-right\">\r\n                            <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                            <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save & Re-Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </content>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n    <div class=\"loader\" *ngIf=\"ShowSideBarLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div  class=\"table-responsive\">\r\n                        <table id=\"liftfilerecords-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"CallId\">CallID</th>\r\n                                    <th data-key=\"BolNumber\">Bol#</th>\r\n                                    <th data-key=\"Terminal\">Terminal Code</th>\r\n                                    <th data-key=\"Terminals\">Terminal</th>\r\n                                    <th data-key=\"CorrectedQuantity\">Corrected Quantity</th>\r\n                                    <th data-key=\"TerminalITemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"ProductType\">Product Type</th>\r\n                                    <th data-key=\"LoadDate\">Load Date</th>\r\n                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"Reason\">Reason</th>\r\n                                    <th data-key=\"ReasonCode\">Reason Code</th>\r\n                                    <th data-key=\"ReasonCategory\">Reason Category</th>\r\n                                    <th data-key=\"RecordStatus\">Status</th>\r\n                                    <th data-key=\"ModifiedBy\">Modified By</th>\r\n                                    <th data-key=\"ModifiedDate\">Modified Date (MST)</th>\r\n                                    <th data-key=\"LFVResolutionTime\">Resolution Time</th>\r\n                                    <th data-key=\"SelectAll\">SelectAll <input type=checkbox id='select-all-records' value='select-all-records' (click)=\"selectAllRecords($event)\"></th>\r\n                                    <th data-key=\"Action\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"LFRecords?.length > 0\">\r\n                                <tr *ngFor=\"let record of LFRecords; let i = index\">\r\n                                    <td> {{record.CallId}}</td>\r\n                                    <td>{{record.bol}}</td>\r\n                                    <td>\r\n                                        {{record.TerminalName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Terminals}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.correctedQuantity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalItemCode}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ProductType}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.LoadDate}}\r\n                                    </td>\r\n                                    <td> {{record.RecordDate}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.CarrierName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Reason}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ReasonCode}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ReasonCategory}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.recordStatus}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Username}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ModifiedDate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.LFVResolutionTime}}\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <input type=\"checkbox\" class=\"dt-checkbox\" id=\"{{record.LiftFileRecordId}}\" [checked]=\"isChecked\" value=\"{{record.LiftFileRecordId}}\" />\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <span *ngIf=\"record.Status == 9\">\r\n                                            <!--partial match -->\r\n                                            <button type=\"button\" (click)=\"getBolDetailsForResolve(record)\" class=\"btn btn-link\"><i class=\"fas fa-edit fs16\" title=\"Resolve Partial Match\"></i></button>\r\n                                        </span>\r\n                                        <span *ngIf=\"record.Status == 6\">\r\n                                            <button type=\"button\" (click)=\"redirectToMyApprovalTab()\" class=\"btn btn-link\"><i class=\"fas fa-edit fs16\" title=\"Resolve Exception\"></i></button>\r\n                                        </span>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 text-right mb25 btn-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-sm-12\">\r\n                <input type=\"button\" id=\"btnCancel\" class=\"btn btn-default\" value=Cancel  />\r\n                <input type=\"button\" class=\"btn btn-primary\" value=\"Ignore\" id=\"btnForceIgnoreRecords\" (click)=\"ValidateForIgnoreMatchProcessing()\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"ShowGridLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- trigger ignoreModal -->\r\n<div type=\"hidden\" id=\"openIgnoreModal2\" data-toggle=\"modal\" data-target=\"#ignoreModal2\"></div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"ignoreModal2\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Select Reason</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Reason'\" [settings]=\"dropdownSettings\"\r\n                    [data]=\"reasonList\" [(ngModel)]=\"selectedReason\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitIgnoreDescription()\"\r\n                    [disabled]=\"selectedReason && selectedReason.length==0\" data-dismiss=\"modal\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, ViewChild, ViewEncapsulation, ElementRef } from '@angular/core';\r\nimport { LeftSideFilterComponent } from '../left-side-filter/left-side-filter.component';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { DropDownItem, LFBolEditModel, LFRecordGridModel, LFRecordsGridExport, LFRecordsGridViewModel, LFValidationGridViewModel, LFVValidationParameters } from '../LiftFileModels';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv'\r\nimport { LFVRecordStatus } from 'src/app/app.enum';\r\n\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styleUrls: ['./master.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class MasterComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(LeftSideFilterComponent) filterComponent: LeftSideFilterComponent;\r\n  viewType = 1;\r\n  gridType = 0;\r\n  LFValidationList: LFValidationGridViewModel[] = [];\r\n  LFVRecordGrid: LFRecordsGridViewModel[] = [];\r\n  IsLoading = false;\r\n  isValidationCarrier = false;\r\n  dtTrigger: Subject<any> = new Subject();\r\n  dtOptions: any = {};\r\n  public isChecked = false;\r\n  public LFVRecordStatus = LFVRecordStatus;\r\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n  //side bar related variables\r\n  public _opened: boolean = false;\r\n  public _animate: boolean = true;\r\n  public _positionNum: number = 1;\r\n  public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n\r\n  public bolResolveForm: FormGroup;\r\n  public selectedLiftFileRecord: LFRecordGridModel; //used for display purpose only\r\n  public TerminalList: DropDownItem[];\r\n  public FuelTypeList: DropDownItem[];\r\n  public multiselectSettingsById: IDropdownSettings;\r\n  public InvoiceFtlDetailIdList: DropDownItem[];\r\n  public SelectedBolProduct: any;\r\n  public SelectedTerminalList: DropDownItem[] = [];\r\n  public SelectedFuelTypeList: DropDownItem[] = [];\r\n\r\n  //search Liftfile records variables\r\n  public bolSearchQuery: string = \"\";\r\n  public fileNameSearchQuery: string = \"\";\r\n  public showSearchControls: boolean = false;\r\n  public showSearchBtn: boolean = false;\r\n  public LiftFilesearchResults: LFRecordGridModel[] = [];\r\n  searchGridDtOptions: any = {};\r\n  searchGridDtTrigger: Subject<any> = new Subject();\r\n  @ViewChild('btnOpenModal') btnOpenModal: ElementRef<HTMLElement>;\r\n\r\n  csvOptions = {\r\n    fieldSeparator: ',',\r\n    quoteStrings: '\"',\r\n    decimalseparator: '.',\r\n    showLabels: true,\r\n    showTitle: false,\r\n    title: 'LFV' + new Date(),\r\n    useBom: true,\r\n    noDownload: false,\r\n      headers: [\"BOL\", \"Terminal Code\", \"Terminal\", \"Corrected Quantity\", \"Terminal Item Code\", \"Product Type\", \"Load Date\", \"Record Date\", \"Carrier ID\", \"Carrier Name\", \"Reasons\", \"Reason Code\", \"Reason Category\", \"Modified By\", \"Modified Date\", \"Resolution Time\",\"Time to BOL\"]\r\n    };\r\n\r\n    //LFV Record Edit variables \r\n    public isAdminUser: boolean;\r\n    public LfvValidationParameters: LFVValidationParameters;\r\n    public LFVRecordEditForm: FormGroup;\r\n    public  QuantityPattern: string = \"^(\\0*[1-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]*\\.[0-9]*[1-9][0-9]*)$\";\r\n    \r\n    public _EditOpened: boolean = false;\r\n    public _EditAnimate: boolean = true;\r\n    public _EditPositionNum: number = 1;\r\n    public _EditPOSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n    //ignore by reason\r\n    public preferenceSetting: any = null;\r\n    public selectedReason = [];\r\n    public reasonList = [];\r\n    public dropdownSettings: IDropdownSettings = { singleSelection: true, idField: 'Id', textField: 'Name', allowSearchFilter: true };\r\n\r\n    constructor(private _lfvService: LiftfiledashboardserviceService, private fb: FormBuilder) {\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getPreferencesSetting();\r\n    this.multiselectSettingsById = {\r\n      singleSelection: true,\r\n      idField: 'Id',\r\n      textField: 'Name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 1,\r\n      allowSearchFilter: true\r\n    };\r\n    this.initializeGrid();\r\n      this.bolResolveForm = this.buildForm();\r\n      this.LFVRecordEditForm = this.buildLFVRecordEditForm();\r\n  }\r\n  buildForm(): FormGroup {\r\n    let fg = this.fb.group({\r\n      BolNumber: this.fb.control('', [Validators.required]),\r\n      LiftDate: this.fb.control('', [Validators.required]),\r\n      GrossQuantity: this.fb.control('', [Validators.required]),\r\n      NetQuantity: this.fb.control('', [Validators.required]),\r\n      BadgeNumber: this.fb.control(''),\r\n      SelectedTerminal: this.fb.control('', [Validators.required]),\r\n      SelectedFuelType: this.fb.control('', [Validators.required]),\r\n      Notes: this.fb.control(''),\r\n      LIftFileRecordId: this.fb.control(''),\r\n      InvoiceFtlDetailId: this.fb.control(''),\r\n      IsBulkPlantLift: this.fb.control('')\r\n    });\r\n    this.SelectedFuelTypeList = [];\r\n    this.SelectedTerminalList = [];\r\n    return fg;\r\n  }\r\n  initFormData(data: LFBolEditModel) {\r\n    this.bolResolveForm.reset();//clear previous values\r\n    if ((this.bolResolveForm != null && this.bolResolveForm != undefined) && (data != null && data != undefined)) {\r\n      this.bolResolveForm.get('BolNumber').setValue(data.BolNumber);\r\n      this.bolResolveForm.get('LiftDate').setValue(data.DisplayLiftDate);\r\n      this.bolResolveForm.get('GrossQuantity').setValue(data.GrossQuantity);\r\n      this.bolResolveForm.get('NetQuantity').setValue(data.NetQuantity);\r\n      this.bolResolveForm.get('Notes').setValue(data.Notes);\r\n      this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n      this.bolResolveForm.get('InvoiceFtlDetailId').setValue(data.InvoiceFtlDetailId);\r\n      this.bolResolveForm.get('IsBulkPlantLift').setValue(data.IsBulkPlantLift);\r\n      this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n      this.bolResolveForm.get('BadgeNumber').setValue(data.BadgeNumber);\r\n      if (data.IsBulkPlantLift == true) { // no terminal dropdown for pickup from bulk plants\r\n        this.bolResolveForm.get('SelectedTerminal').clearValidators();\r\n        this.bolResolveForm.get('SelectedTerminal').updateValueAndValidity();\r\n      }\r\n      if (data != null && data.SelectedTerminal != null) {\r\n        this.bolResolveForm.get('SelectedTerminal').setValue(data.SelectedTerminal);\r\n        this.SelectedTerminalList = [];\r\n        this.SelectedTerminalList.push(data.SelectedTerminal);\r\n      }\r\n      if (data != null && data.SelectedFuelType != null) {\r\n        this.bolResolveForm.get('SelectedFuelType').setValue(data.SelectedFuelType);\r\n        this.SelectedFuelTypeList = [];\r\n        this.SelectedFuelTypeList.push(data.SelectedFuelType);\r\n      }\r\n    }\r\n  }\r\n\r\n  createPostObject(): LFBolEditModel {\r\n    let inputPostObject = new LFBolEditModel();\r\n    inputPostObject.BadgeNumber = this.bolResolveForm.get('BadgeNumber').value;\r\n    inputPostObject.BolNumber = this.bolResolveForm.get('BolNumber').value;\r\n    inputPostObject.GrossQuantity = this.bolResolveForm.get('GrossQuantity').value;\r\n    inputPostObject.InvoiceFtlDetailId = this.bolResolveForm.get('InvoiceFtlDetailId').value;\r\n    inputPostObject.IsBulkPlantLift = this.bolResolveForm.get('IsBulkPlantLift').value;\r\n    inputPostObject.LiftRecord.LiftFileRecordId = this.bolResolveForm.get('LIftFileRecordId').value;\r\n    inputPostObject.LiftDate = this.bolResolveForm.get('LiftDate').value;\r\n    inputPostObject.NetQuantity = this.bolResolveForm.get('NetQuantity').value;\r\n    inputPostObject.Notes = this.bolResolveForm.get('Notes').value;\r\n    let SelectedFuelType = this.bolResolveForm.get('SelectedFuelType').value;\r\n    let fuelTypeId = SelectedFuelType[0].Id;\r\n    inputPostObject.FuelTypeId = fuelTypeId;\r\n    let selectedTerminal = this.bolResolveForm.get('SelectedTerminal').value;\r\n    let terminalId = inputPostObject.IsBulkPlantLift ? selectedTerminal.Id : selectedTerminal[0].Id;\r\n    inputPostObject.TerminalId = terminalId;\r\n    return inputPostObject;\r\n  }\r\n  initializeGrid() {\r\n    let exportInvitedColumns = { columns: ':visible' };\r\n    this.dtOptions = {\r\n      dom: '<\"html5buttons\"B>lTfgitp',\r\n      buttons: [\r\n        { extend: 'colvis' },\r\n        { extend: 'copy', exportOptions: exportInvitedColumns },\r\n        { extend: 'csv', title: 'LiftFileRecords', exportOptions: exportInvitedColumns },\r\n        { extend: 'pdf', title: 'LiftFileRecords', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n        { extend: 'print', exportOptions: exportInvitedColumns }\r\n      ],\r\n        pagingType: 'first_last_numbers',\r\n        fixedHeader: false,\r\n      pageLength: 10,\r\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n    };\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.getLfvData();\r\n\r\n  }\r\n  public changeViewType(value) {\r\n    this.viewType = value;\r\n    if (value == 1)\r\n      this.isValidationCarrier = false;\r\n    else\r\n      this.isValidationCarrier = true;\r\n    this.getLfvData();\r\n  }\r\n\r\n  private getLfvData() {\r\n    this.LFValidationList = [];\r\n    let ids = [];\r\n    let carrierOrderIds = \"\";\r\n    if (this.filterComponent.selectedCarrierList.length == this.filterComponent.CarrierDrpDwnList.length) {\r\n      carrierOrderIds = \"\";\r\n    } else {\r\n      this.filterComponent.selectedCarrierList && this.filterComponent.selectedCarrierList.forEach(res => { ids.push(res.Name) });\r\n      carrierOrderIds = ids.join();\r\n    }\r\n    this.IsLoading = true;\r\n    this._lfvService.getLFValidationGrid({ fromDate: this.filterComponent.fromDate, toDate: this.filterComponent.toDate, isCarrierPerFormanceDashboard: this.isValidationCarrier, carrierIds: carrierOrderIds, isMatchingWindow: this.filterComponent.isMatchingWindow }).subscribe(async (res) => {\r\n      if (res)\r\n        this.LFValidationList = res;\r\n      else\r\n        this.LFValidationList = [];\r\n\r\n      this.IsLoading = false;\r\n    })\r\n  }\r\n\r\n  public OnSearch($event): void {\r\n    if ($event) {\r\n      try {\r\n        $(\"#liftfilerecords-datatable\").DataTable().clear().destroy();\r\n        this.gridType = LFVRecordStatus.None;\r\n        this.LFVRecordGrid = [];\r\n        // this.dtTrigger.next();\r\n        this.getLfvData();\r\n\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n\r\n  changeGridType(status) {\r\n    this.gridType = status;\r\n    this.getLfvFilterGrid(status);\r\n  }\r\n\r\n  private getLfvFilterGrid(status) {\r\n    // if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n    //   this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n    // }\r\n    try {\r\n      $(\"#liftfilerecords-datatable\").DataTable().clear().destroy();\r\n    } catch (e) {\r\n    }\r\n    this.IsLoading = true;\r\n    this.LFVRecordGrid = [];\r\n    let ids = [];\r\n    let carrierOrderIds = \"\";\r\n    if (this.filterComponent.selectedCarrierList.length == this.filterComponent.CarrierDrpDwnList.length) {\r\n      carrierOrderIds = \"\";\r\n    } else {\r\n      this.filterComponent.selectedCarrierList && this.filterComponent.selectedCarrierList.forEach(res => { ids.push(res.Name) });\r\n      carrierOrderIds = ids.join();\r\n    }\r\n    this._lfvService.getLFVRecordGrid({ fromDate: this.filterComponent.fromDate, toDate: this.filterComponent.toDate, recordStatus: status, isMatchingWindow: this.filterComponent.isMatchingWindow, carrierIds: carrierOrderIds }).subscribe(async (res) => {\r\n        if (res) {\r\n            this.LFVRecordGrid = await res;\r\n            if (this.LFVRecordGrid != null && this.LFVRecordGrid.length > 0) {\r\n                this.isAdminUser = this.LFVRecordGrid[0].IsAdminUser;\r\n                this.LfvValidationParameters = this.LFVRecordGrid[0].LfvValidationParameters;\r\n            }\r\n        }      \r\n      else\r\n        this.LFVRecordGrid = [];\r\n      this.dtTrigger.next();\r\n\r\n      this.IsLoading = false;\r\n    })\r\n  }\r\n  public openLFVScratchReportGrid(): void {\r\n    window.open(\"Supplier/LiftFile/LFVScratchReport\", \"_blank\");\r\n  }\r\n  public openAccrualReportGrid(): void {\r\n     window.open(\"Supplier/LiftFile/LFVAccrualReport\", \"_blank\");\r\n  }\r\n  public selectAllRecords(eventData: any) {\r\n    if (eventData != null && eventData != undefined) {\r\n      if (eventData.target.checked) {\r\n        this.isChecked = true;\r\n      }\r\n      else {\r\n        this.isChecked = false;\r\n      }\r\n    }\r\n  }\r\n  public getLFRecordIds() {\r\n    let LFRecordIds = [];\r\n    let table = $('#liftfilerecords-datatable').DataTable();\r\n    var rowcollection = table.$(\".dt-checkbox\", { \"page\": \"all\" });\r\n    rowcollection.each(function (index, elem) {\r\n      if ($(this).is(\":checked\")) {\r\n        LFRecordIds.push(parseInt($(this).attr('id')));\r\n      }\r\n    });\r\n    return LFRecordIds;\r\n    }\r\n\r\n    public getPreferencesSetting() {\r\n        if (!this.preferenceSetting) {\r\n            this._lfvService.getPreferencesSetting().subscribe(response => {\r\n                this.preferenceSetting = response;\r\n            });\r\n        }\r\n    }\r\n\r\n  public GetReasonDescriptionList() {\r\n    if (this.reasonList && this.reasonList.length == 0) {\r\n      this.IsLoading = true;\r\n      this._lfvService.GetReasonDescriptionList().subscribe((response: any) => {\r\n        if (response && response.length > 0) {\r\n          this.reasonList = response;\r\n        }\r\n        this.IsLoading = false;\r\n      });\r\n    }\r\n  }\r\n  public submitIgnoreDescription() {\r\n    this.addRecordsForForcedIgnoreMatchProcessing(this.getLFRecordIds());\r\n  }\r\n  public ValidateForIgnoreMatchProcessing(status: string) { //ignore or reprocess\r\n\r\n    let LFRecordIds = this.getLFRecordIds();\r\n    this.selectedReason = [];\r\n\r\n    if (LFRecordIds != null && LFRecordIds != undefined && LFRecordIds.length > 0) {\r\n      if (status == 'ignore') {\r\n         if (this.preferenceSetting && this.preferenceSetting.IsLiftFileValidationEnabled && this.preferenceSetting.IsReasonCodesEnabled) {\r\n           this.GetReasonDescriptionList();\r\n           document.getElementById('openIgnoreModal').click();\r\n         } else {\r\n           this.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds);\r\n         }\r\n      }\r\n      else if (status == 'reprocess')\r\n        this.addUnmatchedRecordForReProcessing(LFRecordIds);\r\n    }\r\n    else { Declarations.msgerror(\"No Records selected\", undefined, undefined); }\r\n\r\n  }\r\n  addRecordsForForcedIgnoreMatchProcessing(LFRecordIds: any[]) {\r\n    let descriptionId: number = 0;\r\n    let descriptionText: string = '';\r\n\r\n    if (this.selectedReason && this.selectedReason.length > 0) {\r\n      descriptionId = this.selectedReason[0].Id;\r\n      descriptionText = this.selectedReason[0].Name;\r\n    }\r\n\r\n    this.IsLoading = true;\r\n    this._lfvService.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds, descriptionId, descriptionText).subscribe((response: any) => {\r\n      if (response.StatusCode == 0) {\r\n        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n        this.getLfvFilterGrid(this.gridType);\r\n      } else {\r\n        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n      }\r\n    });\r\n    this.IsLoading = true;\r\n\r\n  }\r\n  addUnmatchedRecordForReProcessing(LFRecordIds: any[]) {\r\n    this.IsLoading = true;\r\n    this._lfvService.addUnmatchedRecordForReProcessing(LFRecordIds).subscribe((response: any) => {\r\n      if (response.StatusCode == 0) {\r\n        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n        this.getLfvFilterGrid(this.gridType);\r\n      } else {\r\n        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n      }\r\n    });\r\n    this.IsLoading = true;\r\n\r\n  }\r\n  getBolDetailsForResolve(lfRecord: LFRecordGridModel) {\r\n    this.IsLoading = true;\r\n    lfRecord.IsFromScratchReport = true;\r\n    this._lfvService.getBolDetailsForResolve(lfRecord).subscribe((data: LFBolEditModel) => {\r\n      if (data) {\r\n        this._toggleOpened(true);\r\n        this.selectedLiftFileRecord = data.LiftRecord;\r\n        this.TerminalList = data.TerminalList;\r\n        this.FuelTypeList = data.FuelTypeList;\r\n        this.InvoiceFtlDetailIdList = data.InvoiceFtlDetailsList;\r\n        this.initFormData(data)\r\n        this.IsLoading = false;\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.IsLoading = true;\r\n    this.bolResolveForm.markAsTouched();\r\n    if (this.bolResolveForm.valid) {\r\n      let requestObj = this.createPostObject();\r\n      if (requestObj != null) {\r\n        this._lfvService.saveBolDetailsForResolve(requestObj).subscribe((response: any) => {\r\n          if (response.StatusCode == 0) {\r\n            this.IsLoading = false;\r\n            Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n            this._toggleOpened(false);\r\n            this.getLfvFilterGrid(this.gridType);\r\n          } else {\r\n            this.IsLoading = false;\r\n            Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.IsLoading = false;\r\n  }\r\n  _toggleOpened(shouldOpen: boolean) {\r\n    if (shouldOpen) {\r\n      this._opened = true;\r\n    }\r\n    else {\r\n      this._opened = !this._opened;\r\n      this.bolResolveForm.reset();\r\n    }\r\n    }\r\n\r\n  GetBolRecord(InvoiceFtlDetailId: any) {\r\n    if (InvoiceFtlDetailId != null && InvoiceFtlDetailId != undefined && InvoiceFtlDetailId != '') {\r\n      let selectedLiftFileRecordId = this.selectedLiftFileRecord.LiftFileRecordId;\r\n      let invoiceFtlDetailId = parseInt(InvoiceFtlDetailId);\r\n      let LFRecord = new LFRecordGridModel();\r\n\r\n      LFRecord.LiftFileRecordId = selectedLiftFileRecordId;\r\n      LFRecord.InvFtlDetailId = invoiceFtlDetailId;\r\n      LFRecord.bol = this.selectedLiftFileRecord.bol;\r\n      LFRecord.TerminalName = this.selectedLiftFileRecord.TerminalName;\r\n      LFRecord.TerminalItemCode = this.selectedLiftFileRecord.TerminalItemCode;\r\n      LFRecord.LoadDate = this.selectedLiftFileRecord.LoadDate;\r\n      LFRecord.ProductType = this.selectedLiftFileRecord.ProductType;\r\n      LFRecord.correctedQuantity = this.selectedLiftFileRecord.correctedQuantity;\r\n      LFRecord.IsFromScratchReport = true;\r\n      this.getBolDetailsForResolve(LFRecord);\r\n    }\r\n  }\r\n  openSupplierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/SupplierBolReport\", \"_blank\");\r\n  }\r\n  openCarrierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/CarrierBolReport\", \"_blank\");\r\n  }\r\n\r\n \r\n  searchLiftFileRecords() {\r\n    let bolQuery = this.bolSearchQuery;\r\n    let fileNameQuery = this.fileNameSearchQuery;\r\n    if ((bolQuery == \"\" || bolQuery == null || bolQuery == undefined) &&\r\n      (fileNameQuery == \"\" || fileNameQuery == undefined || fileNameQuery == null)) {\r\n      Declarations.msgerror(\"Please provide either Bol# or Filename\", undefined, undefined);\r\n    }\r\n    else {\r\n      let exportColumns = { columns: ':visible' };\r\n      this.searchGridDtOptions = {\r\n        dom: '<\"html5buttons\"B>lTfgitp',\r\n        buttons: [\r\n          { extend: 'colvis' },\r\n          { extend: 'copy', exportOptions: exportColumns },\r\n          { extend: 'csv', title: 'Lift File Records', exportOptions: exportColumns },\r\n          { extend: 'pdf', title: 'Lift File Records', orientation: 'landscape', exportOptions: exportColumns },\r\n          { extend: 'print', exportOptions: exportColumns }\r\n        ],\r\n          pagingType: 'first_last_numbers',\r\n          fixedHeader:false,\r\n        pageLength: 10,\r\n        lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n      };\r\n      let bolNumber = (bolQuery == null || bolQuery == undefined) ? \"\" : bolQuery.trim();\r\n      let fileName = (fileNameQuery == null || fileNameQuery == undefined) ? \"\" : fileNameQuery.trim();\r\n      this.IsLoading = true;\r\n      this._lfvService.getLFSearchRecords(bolNumber, fileName).subscribe(data => {\r\n        let el: HTMLElement = this.btnOpenModal.nativeElement;\r\n        el.click();\r\n        $(\"#liftfileSearchrecords-datatable\").DataTable().clear().destroy();\r\n        this.LiftFilesearchResults = data;\r\n        this.searchGridDtTrigger.next();\r\n        this.IsLoading = false;\r\n      });\r\n    }\r\n\r\n  }\r\n  toggleRecordSearchControls(shouldShow: boolean) {\r\n    this.bolSearchQuery = \"\";\r\n    this.fileNameSearchQuery = \"\";\r\n    this.showSearchControls = shouldShow;\r\n    this.showSearchBtn = shouldShow;\r\n\r\n  }\r\n  async OnExport(status) {\r\n    this.generateCSV(status);\r\n  }\r\n\r\n  public generateCSV(status) {\r\n    this.IsLoading = true;\r\n    var exportData: LFRecordsGridExport[] = [];\r\n    let ids = [];\r\n    let carrierOrderIds = \"\";\r\n    if (this.filterComponent.selectedCarrierList.length == this.filterComponent.CarrierDrpDwnList.length) {\r\n      carrierOrderIds = \"\";\r\n    } else {\r\n      this.filterComponent.selectedCarrierList && this.filterComponent.selectedCarrierList.forEach(res => { ids.push(res.Name) });\r\n      carrierOrderIds = ids.join();\r\n    }\r\n    this._lfvService.getLFVRecordGrid({ fromDate: this.filterComponent.fromDate, toDate: this.filterComponent.toDate, recordStatus: status, isMatchingWindow: this.filterComponent.isMatchingWindow, carrierIds: carrierOrderIds }).subscribe(async (res) => {\r\n      if (res)\r\n          exportData = res.map(m => {\r\n              return {\r\n                  bol: m.bol, TerminalName: m.TerminalName, Terminal: m.Terminals,correctedQuantity:m.correctedQuantity,\r\n        TerminalItemCode:m.TerminalItemCode,  ProductType:m.ProductType,   LoadDate:m.LoadDate,RecordDate:m.RecordDate,\r\n          CarrierID: m.CarrierID, CarrierName: m.CarrierName, Reason: m.Reason, \r\n                  ReasonCode: m.ReasonCode, ReasonCategory: m.ReasonCategory, Username: m.Username, ModifiedDate: m.ModifiedDate, LFVResolutionTime: m.LFVResolutionTime, TimeToBol: m.TimeToBol    }\r\n      })\r\n      else\r\n        exportData = [];\r\n      new AngularCsv(exportData, 'LFV_' + new Date(), this.csvOptions);\r\n      this.IsLoading = false;\r\n\r\n    })\r\n    }\r\n\r\n    _EditToggleOpened(shouldOpen: boolean) {\r\n        if (shouldOpen) {\r\n            this._EditOpened = true;\r\n        }\r\n        else {\r\n            this._EditOpened = !this._EditOpened;\r\n            this.LFVRecordEditForm.reset();\r\n        }\r\n    }\r\n\r\n    editLiftFileRecord(record: LFRecordsGridViewModel) {\r\n        if (record != null) {\r\n            this.IsLoading = true;\r\n            this._EditToggleOpened(true);\r\n            this.initRecordEditForm(record);\r\n            this.IsLoading = false;\r\n        }\r\n    }\r\n    buildLFVRecordEditForm(): FormGroup {\r\n        let formGroup = this.fb.group({\r\n            LIftFileRecordId: this.fb.control(''),\r\n            BolNumber: this.fb.control(''),\r\n            TerminalCode: this.fb.control(''),\r\n            TerminalItemCode: this.fb.control(''),\r\n            LoadDate: this.fb.control(''),\r\n            CorrectedQuantity: this.fb.control(''),\r\n            GrossQuantity: this.fb.control(''),\r\n            ProductType: this.fb.control(''),\r\n            RecordDate: this.fb.control(''),\r\n            CarrierId: this.fb.control(''),\r\n            CIN: this.fb.control(''),\r\n            CarrierName: this.fb.control('')\r\n        });       \r\n        return formGroup;\r\n    }\r\n    initRecordEditForm(record: LFRecordsGridViewModel) {\r\n        this.LFVRecordEditForm.reset();\r\n        if (record != null && record != undefined) {\r\n            this.LFVRecordEditForm.get('LIftFileRecordId').setValue(record.LiftFileRecordId);\r\n            this.LFVRecordEditForm.get('BolNumber').setValue(record.bol);\r\n            this.LFVRecordEditForm.get('TerminalCode').setValue(record.TerminalName);\r\n            this.LFVRecordEditForm.get('TerminalItemCode').setValue(record.TerminalItemCode);\r\n            this.LFVRecordEditForm.get('LoadDate').setValue(record.LoadDate);\r\n            this.LFVRecordEditForm.get('CorrectedQuantity').setValue(record.correctedQuantity);\r\n            this.LFVRecordEditForm.get('GrossQuantity').setValue(record.GrossQuantity);\r\n            this.LFVRecordEditForm.get('ProductType').setValue(record.ProductType);\r\n            this.LFVRecordEditForm.get('RecordDate').setValue(record.RecordDate);\r\n            this.LFVRecordEditForm.get('CarrierId').setValue(record.CarrierID);\r\n            this.LFVRecordEditForm.get('CIN').setValue(record.CIN);\r\n            this.LFVRecordEditForm.get('CarrierName').setValue(record.CarrierName);\r\n            if (this.LfvValidationParameters != null) {\r\n                if (this.LfvValidationParameters.IsBolReq) {\r\n                    this.LFVRecordEditForm.controls['BolNumber'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['BolNumber'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsCorrectedQtyRes || this.LfvValidationParameters.IsGrossReq) {\r\n                    this.LfvValidationParameters.IsCorrectedQtyOrGrossReq = true;\r\n                    this.LFVRecordEditForm.controls['CorrectedQuantity'].setValidators([Validators.required, Validators.pattern(this.QuantityPattern)]);\r\n                    this.LFVRecordEditForm.controls['CorrectedQuantity'].updateValueAndValidity();\r\n                    this.LFVRecordEditForm.controls['GrossQuantity'].setValidators([Validators.required, Validators.pattern(this.QuantityPattern)]);\r\n                    this.LFVRecordEditForm.controls['GrossQuantity'].updateValueAndValidity();\r\n                }\r\n                //if (this.LfvValidationParameters.IsGrossReq) {\r\n                   \r\n                //}\r\n                if (this.LfvValidationParameters.IsLoadDateReq) {\r\n                    this.LFVRecordEditForm.controls['LoadDate'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['LoadDate'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsTerminalCodeReq) {\r\n                    this.LFVRecordEditForm.controls['TerminalCode'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['TerminalCode'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsTermItemCodeReq) {\r\n                    this.LFVRecordEditForm.controls['TerminalItemCode'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['TerminalItemCode'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsCINReq) {\r\n                    this.LFVRecordEditForm.controls['CIN'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['CIN'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsCarrierNameReq) {\r\n                    this.LFVRecordEditForm.controls['CarrierName'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['CarrierName'].updateValueAndValidity();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onRecordEditSubmit() {\r\n        this.LFVRecordEditForm.markAllAsTouched();\r\n        if(this.LFVRecordEditForm.valid) {\r\n            this.IsLoading = true;\r\n            let values = this.LFVRecordEditForm.value;          \r\n            if (values != null)\r\n            {\r\n                let data = new LFRecordGridModel();\r\n\r\n                data.Terminal = this.LFVRecordEditForm.get('TerminalCode').value;\r\n                data.bol = this.LFVRecordEditForm.get('BolNumber').value;\r\n                data.correctedQuantity = this.LFVRecordEditForm.get('CorrectedQuantity').value;\r\n                data.CarrierName = this.LFVRecordEditForm.get('CarrierName').value;\r\n                data.CIN = this.LFVRecordEditForm.get('CIN').value;\r\n                data.TerminalItemCode = this.LFVRecordEditForm.get('TerminalItemCode').value;\r\n                data.GrossQuantity = this.LFVRecordEditForm.get('GrossQuantity').value;\r\n                data.LoadDate = this.LFVRecordEditForm.get('LoadDate').value;\r\n                data.LiftFileRecordId = this.LFVRecordEditForm.get('LIftFileRecordId').value;\r\n\r\n                let requestModel = this.correctValues(data);\r\n                this._lfvService.updateLiftFileRecord(requestModel).subscribe((response: any) => {\r\n                    this.IsLoading = false;\r\n                    if (response.StatusCode == 0) {\r\n                        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n\r\n                    } else if (response.StatusCode == 1) {\r\n                        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                    }\r\n                    this._EditToggleOpened(false); \r\n                    this.getLfvFilterGrid(this.gridType);\r\n                });\r\n            }           \r\n        }\r\n    }\r\n\r\n    correctValues(data: LFRecordGridModel): LFRecordGridModel{\r\n        if (data.Terminal === '--') {\r\n            data.Terminal = null;\r\n        }\r\n        if (data.bol === '--') {\r\n            data.bol = null;\r\n        }\r\n        if (data.CarrierName === '--') {\r\n            data.CarrierName = null;\r\n        }\r\n        if (data.CIN === '--') {\r\n            data.CIN = null;\r\n        }\r\n        if (data.TerminalItemCode === '--') {\r\n            data.TerminalItemCode = null;\r\n        }\r\n        if (data.LoadDate === '--') {\r\n            data.LoadDate = null;\r\n        } else {\r\n            var loadDateWithOutSlash = data.LoadDate.replace(/\\//g, '')\r\n            data.LoadDate = loadDateWithOutSlash;\r\n        }\r\n        return data;\r\n       \r\n    }\r\n    \r\n}\r\n    ","<div class=\"well bg-white shadow-b pr\">\r\n    <div class=\"row \">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-8 pr-5 text-right sticky-header-dash\">\r\n                    <div class=\"dib border pa5 radius-capsule shadow-b  mb10\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"1\"\r\n                                   [checked]=\"viewType==1\">\r\n                            <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Validation Performance</label>\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"2\"\r\n                                   [checked]=\"viewType==2\">\r\n                            <label class=\"btn\" (click)=\"changeViewType(2)\">Carrier Performance</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 1\">\r\n                        <a class=\"btn border border-secondary float-right pb-1\" (click)=\"openLFVScratchReportGrid()\"\r\n                           placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fab fa-firstdraft fs16 mt2\"></i></a>\r\n                    </div>\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 1\">\r\n                        <a class=\"btn border border-secondary float-right pb-1\" (click)=\"openAccrualReportGrid()\"\r\n                           placement=\"bottom\" ngbTooltip=\"Accrual Report\"><i class=\"fas fa-file-invoice fs16 mt2\"></i></a>\r\n                    </div>\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 1\">\r\n                        <button #btnSearchRecords class=\"btn btn-default mt0\" (click)=\"toggleRecordSearchControls(true)\"><i class=\"fas fa-search mr5\"></i>Search Records</button>\r\n                        <div class=\"record-search-controls bg-white pa shadow border z-index10\" *ngIf=\"showSearchControls\">\r\n                            <div class=\"col-auto text-right\">\r\n                                <a #btnCancelSearch (click)=\"toggleRecordSearchControls(false)\"><i class=\"fa fa-close fs18 my-2\" title=\"Cancel\"></i> </a>\r\n                            </div>\r\n                            <div class=\"col-auto form-group\">\r\n                                <input type=\"text\" class=\"form-control\" #BOLSearchInput [(ngModel)]=\"bolSearchQuery\" placeholder=\"Search BOL#\" />\r\n                            </div>\r\n                            <div class=\"col-auto form-group\">\r\n                                <input type=\"text\" class=\"form-control\" #FileNameSearchInput [(ngModel)]=\"fileNameSearchQuery\" placeholder=\"Search FileName\" />\r\n                            </div>\r\n                            <div class=\"col-auto form-group text-right\">\r\n                                <button class=\"btn btn-primary btn-sm\" (click)=\"searchLiftFileRecords()\">Search</button>\r\n                                <button id=\"openModal\" #btnOpenModal [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#searchoutputdetailsgrid-modal\"></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 2\">\r\n                        <a class=\"btn border border-secondary float-right\" (click)=\"openCarrierBOLReportGrid()\" placement=\"bottom\" ngbTooltip=\"Carrier BOL Report\"><i class=\"fas fa-user fs16\"></i></a>\r\n                        <a class=\"btn border border-secondary float-right\" (click)=\"openSupplierBOLReportGrid()\" placement=\"bottom\" ngbTooltip=\"Supplier BOL Report\"><i class=\"fas fa-truck fs16\"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <app-left-side-filter (search)=\"OnSearch($event)\"></app-left-side-filter>\r\n                </div>\r\n                <div class=\"col-8\">\r\n                    <app-validation [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==1\"></app-validation>\r\n                    <app-carrier-performace [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==2\">\r\n                    </app-carrier-performace>\r\n                </div>\r\n            </div> -->\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <app-left-side-filter (search)=\"OnSearch($event)\" (export)=\"OnExport($event)\"></app-left-side-filter>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <app-validation [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==1\"></app-validation>\r\n                    <app-carrier-performace [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==2\">\r\n                    </app-carrier-performace>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 text-center sticky-header-dash\">\r\n                    <div class=\"dib border pa5 radius-capsule shadow-b  mb10\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <!-- match -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\" [value]=\"LFVRecordStatus.Clean\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.Clean\">\r\n                            <label class=\"btn ml0\" (click)=\"changeGridType(LFVRecordStatus.Clean)\">Match</label>\r\n                            <!-- nomatch -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.NoMatch\" [checked]=\"gridType==LFVRecordStatus.NoMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.NoMatch)\">No Match</label>\r\n                            <!-- Partial Match -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.PartialMatch\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.PartialMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.PartialMatch)\">\r\n                                Partial\r\n                                Match\r\n                            </label>\r\n                            <!-- Pending -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.PendingMatch\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.PendingMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.PendingMatch)\">Pending</label>\r\n                            <!-- Duplicate -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.Duplicate\" [checked]=\"gridType==LFVRecordStatus.Duplicate\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.Duplicate)\">Duplicate</label>\r\n                            <!-- Active Exception -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.ActiveExceptions\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.ActiveExceptions\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.ActiveExceptions)\">\r\n                                Active\r\n                                Exception\r\n                            </label>\r\n                            <!-- Ignored -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.IgnoreMatch\" [checked]=\"gridType==LFVRecordStatus.IgnoreMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.IgnoreMatch)\">Ignored</label>\r\n                            <!-- Forced Ignore Match-->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.ForcedIgnore\" [checked]=\"gridType==LFVRecordStatus.ForcedIgnore\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.ForcedIgnore)\">Forced Ignore</label>\r\n                            <!-- Unmatched -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.UnMatched\" [checked]=\"gridType==LFVRecordStatus.UnMatched\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.UnMatched)\">Unmatched</label>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" [ngClass]=\"{'hide-element': gridType==0}\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"well bg-white shadow-b pr\">\r\n                        <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div class=\"ibox mb0\">\r\n                            <div class=\"ibox-content no-padding no-border location_table\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table id=\"liftfilerecords-datatable\" datatable [dtOptions]=\"dtOptions\"\r\n                                           [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                        <!--<table id=\"api-dashboard-datatable\" data-gridname=\"18\" class=\"table table-bordered\" datatable>-->\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th data-key=\"BOL\">BOL</th>\r\n                                                <th data-key=\"Terminal\">Terminal Code</th>\r\n                                                <th data-key=\"Terminals\">Terminal</th>\r\n                                                <th data-key=\"Corrected_Quantity\">Corrected Quantity</th>\r\n                                                <th data-key=\"Terminal_Item_Code\">Terminal Item Code</th>\r\n                                                <th data-key=\"Product_Type\">Product Type</th>\r\n                                                <th data-key=\"Load_Date\">Load Date</th>\r\n                                                <th data-key=\"Record_Date\">Record Date</th>\r\n                                                <th data-key=\"Carrier_ID\">Carrier ID</th>\r\n                                                <th data-key=\"Carrier_Name\">Carrier Name</th>\r\n                                                <th data-key=\"Reasons\">Reasons</th>\r\n                                                <th data-key=\"Reason_Code\"\r\n                                                    [ngClass]=\"{'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                    Reason Code</th>\r\n                                                <th data-key=\"Reason_Category\"\r\n                                                    [ngClass]=\"{'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                    Reason Category\r\n                                                </th>\r\n                                                <th data-key=\"User_Name\">Modified By</th>\r\n                                                <th data-key=\"Modified_Date\">Modified Date (MST)</th>\r\n                                                <th data-key=\"Modified_Date\">Resolution Time</th>\r\n                                                <th data-key=\"TimeToBol\"\r\n                                                     [ngClass]=\"{'hide-element': (gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Clean) ? false : true}\">\r\n                                                   Time To BOL\r\n                                                </th>\r\n                                                <th data-key=\"SelectAll\"\r\n                                                    [ngClass]=\"{'hide-element': !(gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.UnMatched || gridType==LFVRecordStatus.Duplicate)}\">\r\n                                                    SelectAll\r\n                                                    <input type=checkbox id='select-all-records' value='select-all-records'\r\n                                                           (click)=\"selectAllRecords($event)\" />\r\n                                                </th>\r\n                                                <th data-key=\"Action\"\r\n                                                    [ngClass]=\"{'hide-element': gridType!=LFVRecordStatus.PartialMatch}\">\r\n                                                    Action\r\n                                                </th>\r\n                                                <!-- Below th is for LiftFileRecord edit Workflow-->\r\n                                                <th data-key=\"Edit\"\r\n                                                    [ngClass]=\"{'hide-element': gridType ==LFVRecordStatus.IgnoreMatch || gridType ==LFVRecordStatus.Clean || gridType ==LFVRecordStatus.ForcedIgnore || !isAdminUser}\">\r\n                                                    Edit\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ng-container>\r\n                                                <tr *ngFor=\"let item of LFVRecordGrid\">\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.bol}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.TerminalName}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.Terminals}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.correctedQuantity}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.TerminalItemCode}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.ProductType}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.LoadDate}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.RecordDate}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.CarrierID}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.CarrierName}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.Reason}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi, 'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                        {{item?.ReasonCode}}\r\n                                                    </td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi, 'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                        {{item?.ReasonCategory}}\r\n                                                    </td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.Username}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.ModifiedDate}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.LFVResolutionTime}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi,'hide-element': (gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Clean) ? false : true}\">{{item?.TimeToBol}}</td>\r\n                                                    <!-- Below td is for Reprocess and Ignore Match Workflow-->\r\n                                                    <td class=\"text-center\"\r\n                                                        [ngClass]=\"{'hide-element': !(gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.UnMatched || gridType==LFVRecordStatus.Duplicate)}\">\r\n                                                        <input type=\"checkbox\" class=\"dt-checkbox\"\r\n                                                               id=\"{{item.LiftFileRecordId}}\" [checked]=\"isChecked\"\r\n                                                               value=\"{{item.LiftFileRecordId}}\" />\r\n                                                    </td>\r\n                                                    <!-- Below td is for partial Match Workflow-->\r\n                                                    <td class=\"text-center\"\r\n                                                        [ngClass]=\"{'hide-element': gridType!=LFVRecordStatus.PartialMatch}\">\r\n\r\n                                                        <button type=\"button\" (click)=\"getBolDetailsForResolve(item)\"\r\n                                                                class=\"btn btn-link\">\r\n                                                            <i class=\"fas fa-edit fs16\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                    <!-- Below td is for LiftFileRecord edit Workflow-->\r\n                                                    <td class=\"text-center\"\r\n                                                        [ngClass]=\"{'hide-element': gridType ==LFVRecordStatus.IgnoreMatch || gridType ==LFVRecordStatus.Clean || gridType ==LFVRecordStatus.ForcedIgnore || !item.IsAdminUser,\r\n                                                        'highlight-record': gridType ==LFVRecordStatus.Clean &&!item.IsRecordPushedToExternalApi}\">\r\n                                                        <button type=\"button\"\r\n                                                                class=\"btn btn-link\" (click)=\"editLiftFileRecord(item)\">\r\n                                                            <i class=\"fas fa-edit fs16 \" title=\"Edit Lf Record\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-12 text-right mb25 btn-wrapper\" *ngIf=\"LFVRecordGrid?.length>0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-12\">\r\n                            <input type=\"button\" class=\"btn btn-primary\" value=\"Ignore\" id=\"btnForceIgnoreRecords\"\r\n                                   (click)=\"ValidateForIgnoreMatchProcessing('ignore')\"\r\n                                   *ngIf=\"gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.UnMatched\" />\r\n                            <input type=\"button\" class=\"btn btn-primary\" value=\"ReProcess\" id=\"btnForceReprocessRecords\"\r\n                                   (click)=\"ValidateForIgnoreMatchProcessing('reprocess')\"\r\n                                   *ngIf=\"gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.UnMatched\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- LFV Partial match resolve sidebar  -->\r\n<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_opened\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh\"\r\n                class=\"Lfv-resolve-sidebar\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Edit BOL Details</h3>\r\n        <!-- Need to give this sidebar a z-index = 3 for UI issue fix-->\r\n        <div class=\"scroll-auto\">\r\n            <div class=\"well bg-white shadow-b lfrecord-section\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border no-padding\">\r\n                        <div id=\"LFrecord\" class=\"table-responsive\">\r\n                            <table id=\"table-Lfrecord\" class=\"table table-striped table-bordered table-hover lfvrecord\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th>BOL#</th>\r\n                                        <th>Terminal</th>\r\n                                        <th>Corrected Quantity</th>\r\n                                        <th>Terminal Item Code</th>\r\n                                        <th>Load Date</th>\r\n                                        <th>ProductType</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tr>\r\n                                    <td>{{selectedLiftFileRecord?.bol}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalName}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.correctedQuantity}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalItemCode}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.LoadDate}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.ProductType}}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null\">\r\n                <div class=\"col-sm-6\" *ngIf=\"InvoiceFtlDetailIdList !=null && InvoiceFtlDetailIdList.length > 0\">\r\n                    <div class=\"form-group\">\r\n                        <select class=\"form-control\" id=\"select-bol\" (change)=\"GetBolRecord($event.target.value)\">\r\n                            <option [value]=\"null\">Select BOL-Product to edit </option>\r\n                            <ng-container *ngFor=\"let bol Of InvoiceFtlDetailIdList\">\r\n                                <option [value]=\"bol.Id\"\r\n                                        [selected]=\"bol.Id == bolResolveForm.get('InvoiceFtlDetailId').value\">\r\n                                    {{bol.Name}}\r\n                                </option>\r\n                            </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <content class=\"pr30\" *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null && bolResolveForm.get('InvoiceFtlDetailId').value >0\">\r\n                <form [formGroup]=\"bolResolveForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div>\r\n                        <div class=\"col-sm-12 section-bol-details-edit\">\r\n                            <div class=\"mt10 row\">\r\n                                <div class=\"col-sm-3 bol\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BolNumber\">BOL/LiftTicket#<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"InvoiceFtlDetailId\" type=\"hidden\" class=\"hide-element\">\r\n                                        <input formControlName=\"LIftFileRecordId\" type=\"hidden\" class=\"hide-element\" />\r\n                                        <input formControlName=\"BolNumber\" class=\"form-control\" required>\r\n                                        <div *ngIf=\"bolResolveForm.get('BolNumber').invalid && (bolResolveForm.get('BolNumber').dirty || bolResolveForm.get('BolNumber').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('BolNumber').errors.required\">\r\n                                                BOL/LiftTicket# is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 lifdt\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"LiftDate\">Lift Date<span class=\"color-maroon\">*</span></label>\r\n                                        <input name=\"LiftDate\" class=\"form-control\" formControlName=\"LiftDate\" myDatePicker\r\n                                               [format]=\"'MM/DD/YYYY'\"\r\n                                               (onDateChange)=\"bolResolveForm.get('LiftDate').setValue($event)\">\r\n                                        <div *ngIf=\"bolResolveForm.get('LiftDate').invalid && (bolResolveForm.get('LiftDate').dirty || bolResolveForm.get('LiftDate').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('LiftDate').errors.required\">\r\n                                                Lift Date is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 grossQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"GrossQuantity\">Gross Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"GrossQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('GrossQuantity').invalid && (bolResolveForm.get('GrossQuantity').dirty || bolResolveForm.get('GrossQuantity').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('GrossQuantity').errors.required\">\r\n                                                Gross quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 netQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"NetQuantity\">Net Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"NetQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('NetQuantity').invalid && (bolResolveForm.get('NetQuantity').dirty || bolResolveForm.get('NetQuantity').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('NetQuantity').errors.required\">\r\n                                                Net quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n\r\n                                <div class=\"col-sm-6 terminal-section\" *ngIf=\"!bolResolveForm.get('IsBulkPlantLift').value\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Jobs\">Terminal Name</label>\r\n                                        <ng-multiselect-dropdown formControlName=\"SelectedTerminal\"\r\n                                                                 [placeholder]=\"'Select Terminal'\" \r\n                                                                 [settings]=\"multiselectSettingsById\" [data]=\"TerminalList\" [(ngModel)]=\"SelectedTerminalList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <!-- <select class=\"form-control\"  placeholder=\"Select Terminal\"  >\r\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\" *ngFor=\"let item of TerminalList\">{{item.Name}}</option>\r\n                                          </select> -->\r\n                                        <div *ngIf=\"bolResolveForm.get('SelectedTerminal').invalid && (bolResolveForm.get('SelectedTerminal').dirty || bolResolveForm.get('SelectedTerminal').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('SelectedTerminal').errors.required\">\r\n                                                Terminal is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6 fuelType\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Jobs\">Fuel</label>\r\n                                        <ng-multiselect-dropdown formControlName=\"SelectedFuelType\"\r\n                                                                 [placeholder]=\"'Select Fuel'\" \r\n                                                                 [settings]=\"multiselectSettingsById\" [data]=\"FuelTypeList\" [(ngModel)]=\"SelectedFuelTypeList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <!-- <select class=\"form-control\"  placeholder=\"Select Fuel\"  >\r\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\" *ngFor=\"let item of FuelTypeList\">{{item.Name}}</option>\r\n                                          </select> -->\r\n                                    </div>\r\n                                    <div *ngIf=\"bolResolveForm.get('SelectedFuelType').invalid && (bolResolveForm.get('SelectedFuelType').dirty || bolResolveForm.get('SelectedFuelType').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"bolResolveForm.get('SelectedFuelType').errors.required\">\r\n                                            Fuel Type is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BadgeNumber\">Badge#</label>\r\n                                        <input formControlName=\"BadgeNumber\" class=\"form-control\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Notes\">Notes</label>\r\n                                        <textarea class=\"form-control\" id=\"Notes\" placeholder=\"Notes\" formControlName=\"Notes\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                        <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save &Re-Submit</button>\r\n                    </div>\r\n                </form>\r\n            </content>\r\n        </div>\r\n\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n\r\n<!-- LFV Record search output modal -->\r\n<div id=\"searchoutputdetailsgrid-modal\" class=\"modal fade\" role=\"dialog\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-xl modal-dialog-scrollable modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <!--<h3 class=\"modal-title\" id=\"counttypeheader\"></h3>-->\r\n                <button type=\"button\" class=\"close searchoutputdetailsgrid\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"well bg-white shadowb-b\">\r\n                            <div class=\"ibox mb0\">\r\n                                <div class=\"ibox-content no-padding no-border\">\r\n                                    <div class=\"table-responsive\">\r\n                                        <table id=\"liftfileSearchrecords-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"searchGridDtOptions\" [dtTrigger]=\"searchGridDtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th data-key=\"CallId\">CallID</th>\r\n                                                    <th data-key=\"BolNumber\">BOL#</th>\r\n                                                    <th data-key=\"Terminal\">Terminal Code</th>\r\n                                                    <th data-key=\"Terminals\">Terminal</th>\r\n                                                    <th data-key=\"FileName\">File Name</th>\r\n                                                    <th data-key=\"TerminalITemCode\">Terminal Item Code</th>\r\n                                                    <th data-key=\"LoadDate\">Load Date</th>\r\n                                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                                    <th data-key=\"Status\">Status</th>\r\n                                                    <th data-key=\"Reason\">Reason</th>\r\n                                                    <th data-key=\"Reason_Code\">Reason Code</th>\r\n                                                    <th data-key=\"Reason_Category\">Reason Category</th>\r\n                                                    <th data-key=\"UserName\">Modified By</th>\r\n                                                    <th data-key=\"Modified_Date\"> Modified Date (MST)</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf=\"LiftFilesearchResults?.length > 0\">\r\n                                                <tr *ngFor=\"let record of LiftFilesearchResults; let i = index\">\r\n                                                    <td> {{record.CallId}}</td>\r\n                                                    <td>{{record.bol}}</td>\r\n                                                    <td>\r\n                                                        {{record.TerminalName}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.Terminals}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.FileName}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.TerminalItemCode}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.LoadDate}}\r\n                                                    </td>\r\n                                                    <td> {{record.RecordDate}}</td>\r\n                                                    <td>\r\n                                                        {{record.CarrierID}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.CarrierName}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.recordStatus}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.Reason}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.ReasonCode}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.ReasonCategory}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.Username}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.ModifiedDate}}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- LFV Record edit sidebar -->\r\n<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_EditOpened\" [animate]=\"_EditAnimate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh\"\r\n                class=\"Lfv-edit-sidebar\">\r\n        <a (click)=\"_EditToggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Edit Lift File Record </h3>\r\n        <!-- Need to give this sidebar a z-index = 3 for UI issue fix-->\r\n        <div class=\"scroll-auto\">\r\n            <content class=\"pr30\" *ngIf=\"LFVRecordEditForm !=undefined && LFVRecordEditForm !=null && LfvValidationParameters != undefined && LfvValidationParameters != null\">\r\n                <form [formGroup]=\"LFVRecordEditForm\" (ngSubmit)=\"onRecordEditSubmit()\">\r\n                    <div class=\"col-sm-12 section-lfv-record-edit\">\r\n                        <div class=\"mt10 row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"BolNumber\">BOL#<span *ngIf=\"LfvValidationParameters.IsBolReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"LIftFileRecordId\" type=\"hidden\" class=\"hide-element\" />\r\n                                    <input formControlName=\"BolNumber\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsBolReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('BolNumber').invalid && (LFVRecordEditForm.get('BolNumber').dirty || LFVRecordEditForm.get('BolNumber').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('BolNumber').errors.required\">\r\n                                            BOL# is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"TerminalCode\">Terminal Code<span *ngIf=\"LfvValidationParameters.IsTerminalCodeReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"TerminalCode\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsTerminalCodeReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('TerminalCode').invalid && (LFVRecordEditForm.get('TerminalCode').dirty || LFVRecordEditForm.get('TerminalCode').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('TerminalCode').errors.required\">\r\n                                            Terminal Code is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"TerminalItemCode\">Terminal Item Code<span *ngIf=\"LfvValidationParameters.IsTermItemCodeReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"TerminalItemCode\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsTermItemCodeReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('TerminalItemCode').invalid && (LFVRecordEditForm.get('TerminalItemCode').dirty || LFVRecordEditForm.get('TerminalItemCode').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('TerminalItemCode').errors.required\">\r\n                                            Terminal Item Code is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CIN\">CIN<span *ngIf=\"LfvValidationParameters.IsCINReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"CIN\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCINReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('CIN').invalid && (LFVRecordEditForm.get('CIN').dirty || LFVRecordEditForm.get('CIN').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CIN').errors.required\">\r\n                                            CIN is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mt10 row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CarrierName\">Carrier Name<span *ngIf=\"LfvValidationParameters.IsCarrierNameReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"CarrierName\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCarrierNameReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('CarrierName').invalid && (LFVRecordEditForm.get('CarrierName').dirty || LFVRecordEditForm.get('CarrierName').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CarrierName').errors.required\">\r\n                                            Carrier Name is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"LoadDate\">Load Date<span *ngIf=\"LfvValidationParameters.IsLoadDateReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input name=\"LoadDate\" class=\"form-control\" formControlName=\"LoadDate\" myDatePicker\r\n                                           [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"LFVRecordEditForm.get('LoadDate').setValue($event)\"\r\n                                           [readonly]=\"!LfvValidationParameters.IsLoadDateReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('LoadDate').invalid && (LFVRecordEditForm.get('LoadDate').dirty || LFVRecordEditForm.get('LoadDate').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('LoadDate').errors.required\">\r\n                                            Load Date is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CorrectedQuantity\">Corrected Quantity<span *ngIf=\"LfvValidationParameters.IsCorrectedQtyRes || LfvValidationParameters.IsGrossReq \" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"CorrectedQuantity\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCorrectedQtyOrGrossReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('CorrectedQuantity').invalid && (LFVRecordEditForm.get('CorrectedQuantity').dirty || LFVRecordEditForm.get('CorrectedQuantity').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CorrectedQuantity').errors.required\">\r\n                                            Corrected quantity is required.\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CorrectedQuantity').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"GrossQuantity\">Gross Quantity<span *ngIf=\"LfvValidationParameters.IsGrossReq ||LfvValidationParameters.IsCorrectedQtyRes\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"GrossQuantity\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCorrectedQtyOrGrossReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('GrossQuantity').invalid && (LFVRecordEditForm.get('GrossQuantity').dirty || LFVRecordEditForm.get('GrossQuantity').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('GrossQuantity').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('GrossQuantity').errors.required\">\r\n                                            Gross Quantity is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mt10 row\">                         \r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ProductType\">Product Type</label>\r\n                                    <input name=\"ProductType\" class=\"form-control\" formControlName=\"ProductType\"\r\n                                           [readonly]=\"true\">\r\n                                    <!--<div *ngIf=\"LFVRecordEditForm.get('ProductType').invalid && (LFVRecordEditForm.get('ProductType').dirty || LFVRecordEditForm.get('ProductType').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('ProductType').errors.required\">\r\n                                            Product Type is required.\r\n                                        </div>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"RecordDate\">Record Date</label>\r\n                                    <input formControlName=\"RecordDate\" class=\"form-control\" [readonly]=\"true\">\r\n                                    <!--<div *ngIf=\"LFVRecordEditForm.get('RecordDate').invalid && (LFVRecordEditForm.get('RecordDate').dirty || LFVRecordEditForm.get('RecordDate').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('RecordDate').errors.required\">\r\n                                            Corrected quantity is required.\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('RecordDate').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CarrierId\">CarrierID</label>\r\n                                    <input formControlName=\"CarrierId\" class=\"form-control\" [readonly]=\"true\">\r\n                                    <!--<div *ngIf=\"LFVRecordEditForm.get('CarrierId').invalid && (LFVRecordEditForm.get('CarrierId').dirty || LFVRecordEditForm.get('CarrierId').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CarrierId').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CarrierId').errors.required\">\r\n                                            Gross Quantity is required.\r\n                                        </div>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button (click)=\"_EditToggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                        <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save &Re-Submit</button>\r\n                    </div>\r\n                </form>\r\n            </content>\r\n        </div>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- trigger ignoreModal -->\r\n<div type=\"hidden\" id=\"openIgnoreModal\" data-toggle=\"modal\" data-target=\"#ignoreModal\"></div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"ignoreModal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Select Reason</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Reason'\" [settings]=\"dropdownSettings\"\r\n                    [data]=\"reasonList\" [(ngModel)]=\"selectedReason\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitIgnoreDescription()\"\r\n                    [disabled]=\"selectedReason && selectedReason.length==0\" data-dismiss=\"modal\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LFBolEditModel, LFRecordGridModel, LFRecordsGridViewModel } from '../LiftFileModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LiftfiledashboardserviceService extends HandleError {\r\n    //urls\r\n    public urlGetLFRecordsGrid: string = 'Supplier/LiftFile/GetLiftFileRecordsScratchReport';\r\n    public urlGetBolDetailsForResolve: string = 'Supplier/LiftFile/GetLFBolEditDetailsForSlider';\r\n    public urlSaveBolDetailsForResolve: string = 'Supplier/LiftFile/SaveLFBolEditDetails';\r\n    public urlAddRecordsForForceIgnoreProcessing: string = 'Supplier/LiftFile/AddRecordsAsIgnoreMatch';\r\n    public urlAddUnmatchedRecordForReProcessing: string = 'Supplier/Exception/AddUnmatchedRecordForReProcessing';\r\n    //SupplierBOLReport\r\n    public urlGetLiftFileRecordsWithMissingTFXDeliveryDetails: string = 'Supplier/LiftFile/GetLiftFileRecordsWithMissingTFXDeliveryDetails';\r\n    //carrier bol report\r\n    public urlGetTFXDeliveryDetailsWithMissingLiftFileRecords: string = 'Supplier/LiftFile/GetTFXDeliveryDetailsWithMissingLiftFileRecords';\r\n\r\n    private UrlGetLFValidation: string = '/Supplier/Exception/LFValidationGridWithFilter';\r\n    private UrlGetLFCarrier: string = '/Supplier/LiftFile/GetLFVCarrierDropDwn';\r\n    private UrlGetLFVRecordGrid: string = '/Supplier/Exception/LFRecordsGridForDashboard';\r\n    private urlGetLFSearchRecordsByBolFileName: string = 'Supplier/LiftFile/LFRecordsGridByBolFileName?bol=';\r\n    private UrlGetLFVAccrualReportGrid: string = 'Supplier/LiftFile/GetLFVAccrualReportGrid'\r\n\r\n    private UrlGetLFVValidationStatsAndProductTypesDDL: string = 'Supplier/LiftFile/GetLFVValidationStatsAndProductTypesDDL';\r\n    private UrlUpdateLiftFileRecord: string = 'Supplier/LiftFile/UpdateLiftFileRecord';\r\n    private urlGetReasonDescriptionList: string = 'Supplier/LiftFile/GetReasonDescriptionList';\r\n    private urlGetPreferencesSetting: string = 'Settings/Profile/GetPreferencesSettingAsync';\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n    getLFRecords(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetLFRecordsGrid)\r\n            .pipe(catchError(this.handleError<any>('getLFRecords', null)));\r\n    }\r\n    getBolDetailsForResolve(record: LFRecordGridModel): Observable<any> {\r\n        return this.httpClient.post<LFRecordGridModel>(this.urlGetBolDetailsForResolve, record)\r\n            .pipe(catchError(this.handleError<LFRecordGridModel>('getBolDetailsForResolve', record)));\r\n    }\r\n    saveBolDetailsForResolve(record: LFBolEditModel): Observable<any> {\r\n        return this.httpClient.post<LFBolEditModel>(this.urlSaveBolDetailsForResolve, record)\r\n            .pipe(catchError(this.handleError<LFBolEditModel>('saveBolDetailsForResolve', record)));\r\n    }\r\n    addRecordsForForcedIgnoreMatchProcessing(LfRecordIds: any[], descriptionId: number = 0, descriptionText: string = ''): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlAddRecordsForForceIgnoreProcessing + '?DescriptionId=' + descriptionId + '&DescriptionText=' + descriptionText, LfRecordIds)\r\n            .pipe(catchError(this.handleError<any>('addRecordsForForcedIgnoreMatchProcessing', LfRecordIds)));\r\n    }\r\n    getLFValidationGrid(data): Observable<any> {\r\n        return this.httpClient.post(this.UrlGetLFValidation, { startDate: data.fromDate, endDate: data.toDate, isCarrierPerFormanceDashboard: data.isCarrierPerFormanceDashboard, carrierIds: data.carrierIds, isMatchingWindow: data.isMatchingWindow })\r\n            .pipe(catchError(this.handleError<any>('getLFValidationGrid', null)));\r\n    }\r\n    getLFCarrier(fromDate: any, toDate: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFCarrier, { fromDate: fromDate, toDate: toDate })\r\n            .pipe(catchError(this.handleError<any>('getLFCarrier', null)));\r\n    }\r\n    getSupplierBOLReport(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetLiftFileRecordsWithMissingTFXDeliveryDetails)\r\n            .pipe(catchError(this.handleError<any>('getSupplierBOLReport', null)));\r\n    }\r\n    getCarrierBOLReport(fromDate: any, toDate: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetTFXDeliveryDetailsWithMissingLiftFileRecords, { fromDate: fromDate, toDate: toDate })\r\n            .pipe(catchError(this.handleError<any>('getCarrierBOLReport', null)));\r\n    }\r\n    getLFVRecordGrid(data): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFVRecordGrid, { recordStatus: data.recordStatus, startDate: data.fromDate, endDate: data.toDate, lfCallId: 0, isMatchingWindow: data.isMatchingWindow, carrierIds: data.carrierIds })\r\n            // return this.httpClient.post(this.UrlGetLFVRecordGrid, {recordStatus:data.recordStatus, startDate: data.fromDate, endDate: data.toDate})\r\n            .pipe(catchError(this.handleError<any>('getLFVRecordGrid', null)));\r\n    }\r\n\r\n    addUnmatchedRecordForReProcessing(LfRecordIds: any[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlAddUnmatchedRecordForReProcessing, LfRecordIds)\r\n            .pipe(catchError(this.handleError<any>('addRecordsForForcedIgnoreMatchProcessing', LfRecordIds)));\r\n    }\r\n    getLFSearchRecords(bol: string, fileName: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetLFSearchRecordsByBolFileName + bol + '&fileName=' + fileName)\r\n            .pipe(catchError(this.handleError<any>('getLFSearchRecords', null)));\r\n    }\r\n    getLFVAccrualReportGrid(data): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFVAccrualReportGrid, data)\r\n            .pipe(catchError(this.handleError<any>('getLFVAccrualReportGrid', null)));\r\n    }\r\n    GetLFVValidationStatsAndProductTypesDDL(data): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFVValidationStatsAndProductTypesDDL, data)\r\n            .pipe(catchError(this.handleError<any>('GetLFVValidationStatsAndProductTypesDDL', null)));\r\n    }\r\n    updateLiftFileRecord(data: LFRecordGridModel): Observable<any>{\r\n        return this.httpClient.post<any>(this.UrlUpdateLiftFileRecord, data)\r\n            .pipe(catchError(this.handleError<any>('updateLiftFileRecord', null)));\r\n    }\r\n    GetReasonDescriptionList(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetReasonDescriptionList)\r\n            .pipe(catchError(this.handleError<any>('GetReasonDescriptionList', null)));\r\n    }\r\n    getPreferencesSetting(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetPreferencesSetting)\r\n            .pipe(catchError(this.handleError<any>('getPreferencesSettingAsync', null)));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupplierBOLReport } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-supplier-bol-report',\r\n  templateUrl: './supplier-bol-report.component.html',\r\n  styleUrls: ['./supplier-bol-report.component.css']\r\n})\r\nexport class SupplierBolReportComponent implements OnInit {\r\n    public ReportRecords: SupplierBOLReport[] = [];\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public ShowGridLoader: boolean = false;\r\n\r\n    constructor(private dashboardservice: LiftfiledashboardserviceService) { }\r\n\r\n    ngOnInit() {\r\n        this.intializeGrid();\r\n        \r\n  }\r\n    intializeGrid() {\r\n        this.ShowGridLoader = true;\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Lift File Records', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Lift File Records', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n        };\r\n        this.getSupplierBOLReport();\r\n    }\r\n    getSupplierBOLReport() {\r\n        this.ShowGridLoader = true;\r\n        this.dashboardservice.getSupplierBOLReport().subscribe((data: SupplierBOLReport[]) => {\r\n            this.ShowGridLoader = false;\r\n            this.ReportRecords = data;\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n    reloadGrid() {\r\n        $(\"#supplierbolreport-datatable\").DataTable().clear().destroy();\r\n        this.getSupplierBOLReport();\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div  class=\"table-responsive\">\r\n                        <table id=\"supplierbolreport-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"CallId\">CallId</th>\r\n                                    <th data-key=\"Bol\">BOL</th>\r\n                                    <th data-key=\"TerminalCode\">Terminal Code</th>\r\n                                    <th data-key=\"Terminal\">Terminal</th>\r\n                                    <th data-key=\"CorrectedQuanity\">Corrected Quanity</th>\r\n                                    <th data-key=\"TerminalItemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"ProductType\">Product Type</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"FileName\">File Name</th>\r\n                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"ReportRecords?.length > 0\">\r\n                                <tr *ngFor=\"let record of ReportRecords; let i = index\">\r\n                                    <td>{{record.CallId}}</td>\r\n                                    <td>\r\n                                        {{record.BOL}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalCode}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Terminal}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.CorrectedQuanity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalItemCode}}\r\n                                    </td>\r\n                                    <td> {{record.ProductType}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.CarrierName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.FileName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.RecordDate}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"ShowGridLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { LFValidationGridViewModel } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\ndeclare var ApexCharts;\r\n@Component({\r\n  selector: 'app-validation',\r\n  templateUrl: './validation.component.html',\r\n  styleUrls: ['./validation.component.css']\r\n})\r\nexport class ValidationComponent implements OnInit, OnChanges {\r\n  @Input() LFValidationList: LFValidationGridViewModel[];\r\n  chart: any;\r\n\r\n  constructor(private _lfvService: LiftfiledashboardserviceService) { }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.LFValidationList.currentValue && !changes.LFValidationList.isFirstChange()) {\r\n      this.createChartData();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //public openLFVScratchReportGrid(): void {\r\n  //  window.open(\"Supplier/LiftFile/LFVScratchReport\", \"_blank\");\r\n  //}\r\n\r\n  async RendorChart(data) {\r\n    try {\r\n      if (this.chart)\r\n        this.chart.destroy();\r\n    } catch (e) {\r\n\r\n    }\r\n    var options = {\r\n        colors: [\"#00FF00\", \"#ff0000\", \"#FF69B4\", \"#FFFF00\", \"#000080\", \"#00A7C6\", \"#800080\", '#0077ff','#A9D794'],\r\n      series: [{\r\n        data: data\r\n      }],\r\n      chart: {\r\n        height: 350,\r\n        type: 'bar',\r\n        events: {\r\n          click: function (chart, w, e) {\r\n             console.log(chart, w, e)\r\n          }\r\n        }\r\n      },\r\n      // colors: colors,\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '45%',\r\n          distributed: true,\r\n        }\r\n      },\r\n    \r\n      dataLabels: {\r\n        enabled: true\r\n      },\r\n      legend: {\r\n        show: true\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          'Match',\r\n          'No Match',\r\n          'Partial Match',\r\n          'Pending',\r\n          'Duplicate',\r\n         'Active Exception',\r\n          'Ignored',\r\n          'Forced Ignore',\r\n          'UnMatched'          \r\n        ],\r\n        labels: {\r\n          style: {\r\n            //colors: colors,\r\n            fontSize: '12px'\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n        //colors: [\"red\", \"#F27036\", \"#663F59\", \"#6A6E94\", \"#4E88B4\", \"#00A7C6\", \"#18D8D8\", '#A9D794']\r\n      }\r\n    };\r\n    this.chart = new ApexCharts(document.querySelector(\"#chart-timeline\"), options);\r\n    try {\r\n      if (this.chart)\r\n        this.chart.render();\r\n    } catch (e) {\r\n      this.chart.destroy();\r\n      this.chart.render();\r\n    }\r\n  }\r\n\r\n    async createChartData() {\r\n    var lfv = new LFValidationGridViewModel();\r\n    lfv.ActiveExceptionRecordCount = 0;\r\n    lfv.DuplicateRecordCount = 0;\r\n    lfv.IgnoredMatchRecordCount = 0;\r\n    lfv.MatchedRecordCount = 0;\r\n    lfv.NoMatchRecordCount = 0;\r\n    lfv.PartialMatchRecordCount = 0;\r\n    lfv.PendingMatchCount = 0;\r\n    lfv.TotalRecordCount = 0;\r\n    lfv.UnmatchedRecordCount = 0;\r\n    lfv.ForcedIgnoredMatchRecordCount = 0;\r\n    await this.LFValidationList && this.LFValidationList.map(m => {\r\n      lfv.ActiveExceptionRecordCount += m.ActiveExceptionRecordCount;\r\n      lfv.DuplicateRecordCount += m.DuplicateRecordCount;\r\n      lfv.IgnoredMatchRecordCount += m.IgnoredMatchRecordCount;\r\n      lfv.MatchedRecordCount += m.MatchedRecordCount;\r\n      lfv.NoMatchRecordCount += m.NoMatchRecordCount;\r\n      lfv.PartialMatchRecordCount += m.PartialMatchRecordCount;\r\n      lfv.PendingMatchCount += m.PendingMatchCount;\r\n      lfv.TotalRecordCount += m.TotalRecordCount;\r\n      lfv.UnmatchedRecordCount += m.UnmatchedRecordCount;\r\n      lfv.ForcedIgnoredMatchRecordCount += m.ForcedIgnoredMatchRecordCount;\r\n    })\r\n  \r\n    let data = [lfv.MatchedRecordCount, lfv.NoMatchRecordCount, lfv.PartialMatchRecordCount\r\n        , lfv.PendingMatchCount, lfv.DuplicateRecordCount, lfv.ActiveExceptionRecordCount\r\n        , lfv.IgnoredMatchRecordCount,lfv.ForcedIgnoredMatchRecordCount, lfv.UnmatchedRecordCount]\r\n    this.RendorChart(data);\r\n\r\n  }\r\n\r\n  // async createChartData() {\r\n  //   debugger;\r\n  //   var list = Array<LFValidationGridViewModel>();\r\n  //   await this.LFValidationList && this.LFValidationList.map(m => {\r\n  //     if (!list[m.RecordDate]) {\r\n  //       list[m.RecordDate] = [];\r\n  //     }\r\n  //     list[m.RecordDate].push(m);\r\n  //   })\r\n  //   if (list && list.length > 0)\r\n  //     this.RendorChart();\r\n\r\n}\r\n\r\n","<div class=\"well bg-white shadow-b pr\">\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n\n            <div id=\"chart-timeline\" ></div>\n        </div>\n        <!--<div class=\"col-md-2\">\n            <a class=\"btn border border-secondary mt5 pull-right\" (click)=\"openLFVScratchReportGrid()\"\n                placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fas fa-file-alt fs16\"></i></a>\n\n        </div>-->\n    </div>\n</div>"],"sourceRoot":"webpack:///"}