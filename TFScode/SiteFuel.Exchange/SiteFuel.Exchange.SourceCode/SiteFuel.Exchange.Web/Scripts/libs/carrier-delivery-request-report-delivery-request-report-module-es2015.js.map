{"version":3,"sources":["./src/app/carrier/delivery-request-report/delivery-request-report.component.ts","./src/app/carrier/delivery-request-report/delivery-request-report.component.html","./src/app/carrier/delivery-request-report/delivery-request-report.module.ts"],"names":[],"mappings":"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","file":"carrier-delivery-request-report-delivery-request-report-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChildren, QueryList, ViewChild } from '@angular/core';\r\nimport { DistatcherRegionModel, DRReportFilterViewModel, DeliveryRequestReportGridModel, DRReportFilterInputViewModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { CarrierService} from 'src/app/carrier/service/carrier.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { DataTablesResponse } from 'src/app/shared/models/DataTable-models';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-delivery-request-report',\r\n  templateUrl: './delivery-request-report.component.html',\r\n  styleUrls: ['./delivery-request-report.component.css']\r\n})\r\nexport class DeliveryRequestReportComponent implements OnInit {\r\n\r\n    //filter and dropdown variables\r\n    public LocationDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public Regions: DropdownItemExt[] = [];\r\n    public Locations:  DropdownItem[] = [];\r\n    public SelectedRegions = [];\r\n    public SelectedLocations = [];\r\n\r\n    // data binding variables\r\n    public DRReportsData: DeliveryRequestReportGridModel[] = [];\r\n    public unchangedDRReportsData: DeliveryRequestReportGridModel[] = [];\r\n\r\n    public SelectedRegionId: string;\r\n    public SelectedLocationId: string;\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n    // using these two values in deselect as ngModel not updating after deselect event\r\n    public SelectedRegionsForFilter: DropdownItemExt[] = []; \r\n    public SelectedLocationsForFilter: DropdownItemExt[] = [];\r\n\r\n\r\n  \r\n    //grid config varibales \r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    public dtDRGridOptions: any = {};\r\n    public dtDRReportTrigger: Subject<any> = new Subject();\r\n    \r\n\r\n    constructor(private carrierServ: CarrierService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // this.ToDate = this.TodaysDate;\r\n        // this.FromDate = moment(this.TodaysDate).add('day', -1).format('MM/DD/YYYY');\r\n\r\n        //this.ToDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        //this.FromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : moment(this.TodaysDate).add('day', -1).format('MM/DD/YYYY');\r\n        let exportColumns = { columns: ':visible' };\r\n        let DRcolumnsDetails = [];\r\n\r\n        this.LocationDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        this.RegionDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        DRcolumnsDetails = [\r\n            { title: 'Location', name: 'Location', data: 'Location', \"autoWidth\": true },\r\n            { title: 'Region', name: 'RegionName', data: 'RegionName', \"autoWidth\": true },\r\n            { title: 'Customer', name: 'CustomerName', data: 'CustomerName', \"autoWidth\": true },\r\n            { title: 'Customer BrandID', name: 'CustomerBrandID', data: 'Customer BrandID', \"autoWidth\": true },\r\n            { title: 'Product', name: 'ProductType', data: 'ProductType', \"autoWidth\": true },\r\n            { title: 'Requested Qty', name: 'RequestedQty', data: 'RequestedQuantity', \"autoWidth\": true },\r\n            { title: 'LocationId', name: 'LocationId', data: 'LocationId', \"autoWidth\": true },\r\n            { title: 'Order', name: 'Order', data: 'PoNumber', \"autoWidth\": true }\r\n        ];\r\n\r\n        this.dtDRGridOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n            //searching: true,\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            autoWidth: true,\r\n            fixedHeader: true,\r\n            //ordering: false,\r\n            search: true,\r\n            destroy: true,\r\n            order: [],\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Delivery Request Report', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Delivery Request Report', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ]\r\n        };\r\n\r\n        this.IsLoading = true;\r\n        this.carrierServ.getDRReportFilters().subscribe((data: DRReportFilterViewModel) => {\r\n            if (data != null && data != undefined) {\r\n                \r\n                let regionsIds = [];\r\n                let locationIds = [];\r\n                this.Regions = data.Regions;\r\n                this.Locations = data.Locations;\r\n\r\n                this.SelectedRegionId = '';\r\n                this.Regions.forEach(res => { regionsIds.push(res.Id) });\r\n                this.SelectedRegionId = regionsIds.join();\r\n                \r\n                this.SelectedLocationId = '';\r\n                this.Locations.forEach(res => { locationIds.push(res.Id) });\r\n                this.SelectedLocationId = locationIds.join();\r\n                this.getDRReportGridData();\r\n                \r\n            }\r\n        });\r\n        this.IsLoading = false;\r\n        \r\n    }\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtDRReportTrigger.next();\r\n        \r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtDRReportTrigger.unsubscribe();\r\n    }\r\n\r\n    public OnFilterSelect(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();           \r\n        }\r\n        if (filterType === 'location') {\r\n\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n        \r\n\r\n    }\r\n\r\n    public onFilterSelectAll(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions = this.Regions;\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();\r\n        }\r\n        if (filterType === 'location') {\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations = this.Locations;\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n    }\r\n\r\n    public onFilterDeselect(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();\r\n        }\r\n        if (filterType === 'location') {\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n    }\r\n\r\n    public onFilterDeselectAll(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions = this.Regions;\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();\r\n        }\r\n        if (filterType === 'location') {\r\n\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations = this.Locations;\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n    }\r\n\r\n\r\n    private datatableRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtDRReportTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public getDRReportGridData() {\r\n        this.IsLoading = true;\r\n        let inputData = new DRReportFilterInputViewModel;\r\n        inputData.RegionIds = this.SelectedRegionId;\r\n        inputData.LocationIds = this.SelectedLocationId;\r\n        inputData.FromDate = '';\r\n        inputData.ToDate = '';\r\n        this.carrierServ.getDRReportGridData(inputData).subscribe((data: DeliveryRequestReportGridModel[]) => {\r\n            this.unchangedDRReportsData = data;\r\n            this.DRReportsData = data;\r\n            this.IsLoading = false;\r\n            this.datatableRerender();\r\n        });\r\n    }\r\n\r\n    public filterDRReportData(selectedRegions: any[], selectedLocations: any[]) {\r\n        this.IsLoading = true;\r\n        let filteredData = [] as DeliveryRequestReportGridModel[];\r\n        let filteredDataByRegions = [] as DeliveryRequestReportGridModel[];\r\n         let filteredDataByLocations = [] as DeliveryRequestReportGridModel[];\r\n        if (selectedRegions == null || selectedRegions == undefined || selectedRegions.length == 0) {\r\n            selectedRegions = this.Regions;\r\n        }\r\n        if (selectedLocations == null || selectedLocations == undefined || selectedLocations.length == 0) {\r\n            selectedLocations = this.Locations;\r\n        }\r\n\r\n        this.unchangedDRReportsData.forEach(function (data) {\r\n            if (selectedRegions != null && selectedRegions != undefined && selectedRegions.length > 0) {\r\n                for (var i = 0; i < selectedRegions.length; i++) {\r\n                    if (selectedRegions[i].Id == data.RegionId) {\r\n                        filteredDataByRegions.push(data);\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (filteredDataByRegions != null && filteredDataByRegions != undefined && filteredDataByRegions.length > 0) {\r\n           \r\n            filteredDataByRegions.forEach(function (data) {\r\n                 if (selectedLocations != null && selectedLocations != undefined && selectedLocations.length > 0) {\r\n                     for (var i = 0; i < selectedLocations.length; i++) {\r\n                         if (selectedLocations[i].Id == data.TfxJobId) {\r\n                             filteredDataByLocations.push(data);\r\n                         }\r\n                     }\r\n                     \r\n                 }               \r\n            });\r\n            this.DRReportsData = filteredDataByLocations;\r\n            \r\n        }\r\n        else {\r\n            this.DRReportsData = filteredDataByRegions;\r\n        }\r\n\r\n        this.datatableRerender();\r\n        this.IsLoading = false;      \r\n    }\r\n    \r\n}\r\n","<div class=\"col-sm-8 sticky-header-wmd\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\"\r\n                                             [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Region'\" [data]=\"Regions\"\r\n                                             (onSelect)=\"OnFilterSelect($event,'region')\" (onDeSelect)=\"onFilterDeselect($event,'region')\" (onSelectAll)=\"onFilterSelectAll($event,'region')\" (onDeSelectAll)=\"onFilterDeselectAll($event,'region')\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedLocations\"\r\n                                             [settings]=\"LocationDdlSettings\" [placeholder]=\"'Select Location'\" [data]=\"Locations\"\r\n                                             (onSelect)=\"OnFilterSelect($event,'location')\" (onDeSelect)=\"onFilterDeselect($event,'location')\" (onSelectAll)=\"onFilterSelectAll($event,'location')\" (onDeSelectAll)=\"onFilterDeselectAll($event,'location')\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-terminal-item-code\" class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" datatable [dtOptions]=\"dtDRGridOptions\" [dtTrigger]=\"dtDRReportTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"RegionName\">Region</th>\r\n                                    <th data-key=\"Location\">Location</th>\r\n                                    <th data-key=\"LocId\">LocationId</th>\r\n                                    <th data-key=\"CustomerName\">Customer</th>\r\n                                    <th data-key=\"CustomerBrandID\">Customer BrandId</th>\r\n                                    <th data-ke=\"Order\">Order</th>\r\n                                    <th data-key=\"ProductType\">Product</th>\r\n                                    <th data-key=\"RequestedQty\">Requested Qty</th>\r\n\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"DRReportsData?.length > 0\">\r\n                                <ng-container *ngFor=\"let dr of DRReportsData\">\r\n                                    <tr [ngClass]=\"{\r\n                                           'bg_must_go':dr.Priority===1,\r\n                                           'bg_should_go':dr.Priority===2,\r\n                                           'bg_could_go':dr.Priority===3,\r\n                                           'bg_noDlr_go':dr.Priority===4}\">\r\n                                        <td>{{dr.RegionName}}</td>\r\n                                        <td>{{dr.Location}}</td>\r\n                                        <td> {{dr.LocationId}}</td>\r\n                                        <td> {{dr.CustomerName}} </td>\r\n                                        <td>{{((dr.CustomerBrandID == null) || (dr.CustomerBrandID == ''))?'--':dr.CustomerBrandID}}</td>\r\n                                        <td> {{dr.PoNumber}}</td>\r\n                                        <td>{{dr.ProductType}}</td>\r\n                                        <td> {{dr.RequestedQuantity+dr.UoM}}\r\n                                            <span *ngIf=\"dr.IsRecurringSchedule == true\"><i class=\"fas fa-sync color-black\" title=\"Recurring\"></i></span>\r\n                                            <span *ngIf=\"dr.IsAutoDR == true\"><i class=\"fas fa-magic ml10\" title=\"Auto-Generated\"></i></span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-container>\r\n                            </tbody>\r\n                            <!--<tr *ngIf=\"DRReportsData == null || DRReportsData?.length == 0\">\r\n                                <td colspan=\"8\" class=\"text-center\">\r\n                                    No Data available\r\n                                </td>\r\n                            </tr>-->\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"IsLoading\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DeliveryRequestReportComponent } from './delivery-request-report.component';\r\nconst routesDrReport: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: DeliveryRequestReportComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [DeliveryRequestReportComponent],\r\n  imports: [\r\n      CommonModule,\r\n      SharedModule,\r\n      DirectiveModule,\r\n      DataTablesModule,\r\n      RouterModule.forChild(routesDrReport)\r\n  ]\r\n})\r\nexport class DeliveryRequestReportModule { }\r\n"],"sourceRoot":"webpack:///"}